{"version":3,"file":"index.modern.mjs","sources":["../../utils/dist/utils.js","../../constants/dist/index.es","../../ktx2/dist/index.es","../src/RenderContext.ts","../../viewer/dist/index.es","../src/RENDER_PASSES.ts","../src/LayerRenderer.ts","../src/FastColorTrianglesRenderer.ts","../../boundaries/src/index.ts","../../compression/src/index.ts","../src/DataTextureSet.ts","../src/MeshCounts.ts","../src/SCENE_OBJECT_FLAGS.ts","../src/float16.ts","../src/dataTextures.ts","../src/DataTextureBuffer.ts","../src/Layer.ts","../src/RendererGeometryImpl.ts","../src/RendererTextureImpl.ts","../src/RendererObjectImpl.ts","../src/RendererMeshImpl.ts","../src/RendererTextureSetImpl.ts","../src/RendererModelImpl.ts","../../rtc/dist/index.es","../src/TileManager.ts","../src/WebGLRenderer.ts"],"sourcesContent":["function t(e,r){return t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},t(e,r)}var e=0;function r(t){return\"__private_\"+e+++\"_\"+t}function n(t,e){if(!Object.prototype.hasOwnProperty.call(t,e))throw new TypeError(\"attempted to use private field on non-instance\");return t}var i=/*#__PURE__*/r(\"items\"),o=/*#__PURE__*/r(\"lastUniqueId\"),s=/*#__PURE__*/function(){function t(t,e){Object.defineProperty(this,i,{writable:!0,value:void 0}),Object.defineProperty(this,o,{writable:!0,value:void 0}),n(this,i)[i]=t||[],n(this,o)[o]=(e||0)+1}var e=t.prototype;return e.addItem=function(){var t;if(2===arguments.length){var e=arguments[0];if(t=arguments[1],n(this,i)[i][e])throw\"ID clash: '\"+e+\"'\";return n(this,i)[i][e]=t,e}for(t=arguments[0]||{};;){var r=n(this,o)[o]++;if(!n(this,i)[i][r])return n(this,i)[i][r]=t,r}},e.removeItem=function(t){var e=n(this,i)[i][t];return delete n(this,i)[i][t],e},t}(),a=/*#__PURE__*/function(){function t(){this._head=void 0,this._headLength=void 0,this._tail=void 0,this._index=void 0,this._length=void 0,this._head=[],this._headLength=0,this._tail=[],this._index=0,this._length=0}var e,r,n=t.prototype;return n.shift=function(){if(this._index>=this._headLength){var t=this._head;if(t.length=0,this._head=this._tail,this._tail=t,this._index=0,this._headLength=this._head.length,!this._headLength)return}var e=this._head[this._index];return this._index<0?delete this._head[this._index++]:this._head[this._index++]=void 0,this._length--,e},n.push=function(t){return this._length++,this._tail.push(t),this},n.unshift=function(t){return this._head[--this._index]=t,this._length++,this},n.clear=function(){this._head=[],this._headLength=0,this._tail=[],this._index=0,this._length=0},e=t,(r=[{key:\"length\",get:function(){return this._length}}])&&function(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,\"symbol\"==typeof(i=function(t,e){if(\"object\"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(n.key))?i:String(i),n)}var i}(e.prototype,r),Object.defineProperty(e,\"prototype\",{writable:!1}),t}(),h=/*#__PURE__*/function(){function t(t,e,r){this.isLoading=void 0,this.itemsLoaded=void 0,this.itemsTotal=void 0,this.urlModifier=void 0,this.handlers=void 0,this.onStart=void 0,this.onLoad=void 0,this.onProgress=void 0,this.onError=void 0,this.isLoading=!1,this.itemsLoaded=0,this.itemsTotal=0,this.urlModifier=void 0,this.handlers=[],this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r}var e=t.prototype;return e.itemStart=function(t){this.itemsTotal++,this.isLoading||void 0!==this.onStart&&this.onStart(t,this.itemsLoaded,this.itemsTotal),this.isLoading=!0},e.itemEnd=function(t){this.itemsLoaded++,void 0!==this.onProgress&&this.onProgress(t,this.itemsLoaded,this.itemsTotal),this.itemsLoaded===this.itemsTotal&&(this.isLoading=!1,void 0!==this.onLoad&&this.onLoad())},e.itemError=function(t){void 0!==this.onError&&this.onError(t)},e.resolveURL=function(t){return this.urlModifier?this.urlModifier(t):t},e.setURLModifier=function(t){return this.urlModifier=t,this},e.addHandler=function(t,e){return this.handlers.push(t,e),this},e.removeHandler=function(t){var e=this.handlers.indexOf(t);return-1!==e&&this.handlers.splice(e,2),this},e.getHandler=function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var n=this.handlers[e],i=this.handlers[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null},t}(),u=new h,d=/*#__PURE__*/function(){function t(t){this.manager=void 0,this.crossOrigin=void 0,this.withCredentials=void 0,this.path=void 0,this.resourcePath=void 0,this.requestHeader=void 0,this.manager=void 0!==t?t:u,this.crossOrigin=\"anonymous\",this.withCredentials=!1,this.path=\"\",this.resourcePath=\"\",this.requestHeader={}}var e=t.prototype;return e.load=function(t,e,r,n){},e.loadAsync=function(t,e){var r=this;return new Promise(function(n,i){r.load(t,n,e,i)})},e.parse=function(){},e.setCrossOrigin=function(t){return this.crossOrigin=t,this},e.setWithCredentials=function(t){return this.withCredentials=t,this},e.setPath=function(t){return this.path=t,this},e.setResourcePath=function(t){return this.resourcePath=t,this},e.setRequestHeader=function(t){return this.requestHeader=t,this},t}(),f=/*#__PURE__*/function(){function t(t){void 0===t&&(t=4),this.pool=void 0,this.queue=void 0,this.workers=void 0,this.workersResolve=void 0,this.workerStatus=void 0,this.workerCreator=void 0,this.pool=t,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0}var e=t.prototype;return e._initWorker=function(t){if(!this.workers[t]){var e=this.workerCreator();e.addEventListener(\"message\",this._onMessage.bind(this,t)),this.workers[t]=e}},e._getIdleWorker=function(){for(var t=0;t<this.pool;t++)if(!(this.workerStatus&1<<t))return t;return-1},e._onMessage=function(t,e){var r=this.workersResolve[t];if(r&&r(e),this.queue.length){var n=this.queue.shift(),i=n.msg,o=n.transfer;this.workersResolve[t]=n.resolve,this.workers[t].postMessage(i,o)}else this.workerStatus^=1<<t},e.setWorkerCreator=function(t){this.workerCreator=t},e.setWorkerLimit=function(t){this.pool=t},e.postMessage=function(t,e){var r=this;return new Promise(function(n){var i=r._getIdleWorker();-1!==i?(r._initWorker(i),r.workerStatus|=1<<i,r.workersResolve[i]=n,r.workers[i].postMessage(t,e)):r.queue.push({resolve:n,msg:t,transfer:e})})},e.destroy=function(){this.workers.forEach(function(t){return t.terminate()}),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0},t}(),c={enabled:!1,files:{},add:function(t,e){},get:function(t){},remove:function(t){},clear:function(){this.files={}}},l={},v=/*#__PURE__*/function(e){var r,n;function i(t){var r;return(r=e.call(this,t)||this).mimeType=void 0,r.responseType=void 0,r}n=e,(r=i).prototype=Object.create(n.prototype),r.prototype.constructor=r,t(r,n);var o=i.prototype;return o.load=function(t,e,r,n){var i=this;void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var o=c.get(t);if(void 0!==o)return this.manager.itemStart(t),setTimeout(function(){e&&e(o),i.manager.itemEnd(t)},0),o;if(void 0===l[t]){l[t]=[],l[t].push({onLoad:e,onProgress:r,onError:n});var s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?\"include\":\"same-origin\"}),a=this.mimeType,h=this.responseType;fetch(s).then(function(e){if(200===e.status||0===e.status){if(0===e.status&&console.warn(\"FileLoader: HTTP Status 0 received.\"),\"undefined\"==typeof ReadableStream||void 0===e.body.getReader)return e;var r=l[t],n=e.body.getReader(),i=e.headers.get(\"Content-Length\"),o=i?parseInt(i):0,s=0!==o,a=0,h=new ReadableStream({start:function(t){!function e(){n.read().then(function(n){var i=n.value;if(n.done)t.close();else{for(var h=new ProgressEvent(\"progress\",{lengthComputable:s,loaded:a+=i.byteLength,total:o}),u=0,d=r.length;u<d;u++){var f=r[u];f.onProgress&&f.onProgress(h)}t.enqueue(i),e()}})}()}});return new Response(h)}throw new Error('fetch for \"'+e.url+'\" responded with '+e.status+\": \"+e.statusText)}).then(function(t){switch(h){case\"arraybuffer\":return t.arrayBuffer();case\"blob\":return t.blob();case\"document\":return t.text().then(function(t){return(new DOMParser).parseFromString(t,a)});case\"json\":return t.json();default:if(void 0===a)return t.text();var e=/charset=\"?([^;\"\\s]*)\"?/i.exec(a),r=e&&e[1]?e[1].toLowerCase():void 0,n=new TextDecoder(r);return t.arrayBuffer().then(function(t){return n.decode(t)})}}).then(function(e){c.add(t,e);var r=l[t];delete l[t];for(var n=0,i=r.length;n<i;n++){var o=r[n];o.onLoad&&o.onLoad(e)}}).catch(function(e){var r=l[t];if(void 0===r)throw i.manager.itemError(t),e;delete l[t];for(var n=0,o=r.length;n<o;n++){var s=r[n];s.onError&&s.onError(e)}i.manager.itemError(t)}).finally(function(){i.manager.itemEnd(t)}),this.manager.itemStart(t)}else l[t].push({onLoad:e,onProgress:r,onError:n})},o.setResponseType=function(t){return this.responseType=t,this},o.setMimeType=function(t){return this.mimeType=t,this},i}(d);function p(t){return JSON.parse(JSON.stringify(t))}var g=[[\"0\",10],[\"A\",26],[\"a\",26],[\"_\",1],[\"$\",1]].map(function(t){for(var e=[],r=t[0].charCodeAt(0),n=r+t[1],i=r;i<n;++i)e.push(i);return String.fromCharCode.apply(null,e)}).join(\"\");function m(t,e){return(e&&4!==e?[0,6]:[0,6,12,18]).map(function(e){return g.substr(parseInt(String(t/(1<<e)))%64,1)}).reverse().join(\"\")}function w(t){var e=[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30].map(function(e){return parseInt(t.substr(e,2),16)});return m(e[0],2)+[1,4,7,10,13].map(function(t){return m((e[t]<<16)+(e[t+1]<<8)+e[t+2],4)}).join(\"\")}function y(t,e){var r=[];return function t(n){n.type===e&&r.push(n),(n.children||[]).forEach(function(e){t(e)})}(t),r}function _(t){return new Promise(function(e,r){setTimeout(e,t)})}function b(t){return new Promise(function(e,r){var n=new XMLHttpRequest;n.open(t.method||\"GET\",t.url,!0),n.onload=function(i){console.log(t.url,n.readyState,n.status),4===n.readyState&&(200===n.status?e(n.responseXML):r(n.statusText))},n.send(null)})}function L(t,e,r){var n=function(t){};e=e||n,r=r||n;var i=new XMLHttpRequest;i.overrideMimeType(\"application/json\"),i.open(\"GET\",t,!0),i.addEventListener(\"load\",function(t){var n=t.target.response;if(200===this.status){var i;try{i=JSON.parse(n)}catch(t){r(\"utils.loadJSON(): Failed to parse JSON response - \"+t)}e(i)}else if(0===this.status){console.warn(\"loadFile: HTTP Status 0 received.\");try{e(JSON.parse(n))}catch(t){r(\"utils.loadJSON(): Failed to parse JSON response - \"+t)}}else r(t)},!1),i.addEventListener(\"error\",function(t){r(t)},!1),i.send(null)}function S(t,e,r){var n=function(t){};e=e||n,r=r||n;var i=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(i){var o=!!i[2],s=i[3];s=window.decodeURIComponent(s),o&&(s=window.atob(s));try{for(var a=new ArrayBuffer(s.length),h=new Uint8Array(a),u=0;u<s.length;u++)h[u]=s.charCodeAt(u);window.setTimeout(function(){e(a)},0)}catch(t){window.setTimeout(function(){r(t)},0)}}else{var d=new XMLHttpRequest;d.open(\"GET\",t,!0),d.responseType=\"arraybuffer\",d.onreadystatechange=function(){4===d.readyState&&(200===d.status?e(d.response):r(\"loadArrayBuffer error : \"+d.response))},d.send(null)}}function P(t){return t&&!t.propertyIsEnumerable(\"length\")&&\"object\"==typeof t&&\"number\"==typeof t.length}function T(t){return\"string\"==typeof t||t instanceof String}function k(t){return!isNaN(parseFloat(t))&&isFinite(t)}function O(t){return T(t)||k(t)}function E(t){return\"function\"==typeof t}function M(t){return!!t&&t.constructor==={}.constructor}function R(t){return x(t,{})}function x(t,e){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e}function C(t,e){for(var r in t)t.hasOwnProperty(r)&&null!=t[r]&&(e[r]=t[r]);return e}function j(t,e){for(var r in t)t.hasOwnProperty(r)&&null==e[r]&&(e[r]=t[r]);return e}function q(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0}function H(t){return k(t)?\"\"+t:\"'\"+t+\"'\"}function I(t,e){var r=new t.constructor(t.length+e.length);return r.set(t),r.set(e,t.length),r}var N=function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?\"0\":\"\")+e.toString(16);return function(){var e=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+\"-\"+t[255&r]+t[r>>8&255]+\"-\"+t[r>>16&15|64]+t[r>>24&255]+\"-\"+t[63&n|128]+t[n>>8&255]+\"-\"+t[n>>16&255]+t[n>>24&255]+t[255&i]+t[i>>8&255]+t[i>>16&255]+t[i>>24&255]}}();export{c as Cache,u as DefaultLoadingManager,v as FileLoader,d as Loader,h as LoadingManager,s as Map,a as Queue,f as WorkerPool,x as apply,C as apply2,j as applyIf,m as b64,p as clone,w as compressGuid,I as concat,R as copy,N as createUUID,y as findNodeOfType,b as httpRequest,H as inQuotes,P as isArray,q as isEmptyObject,E as isFunction,O as isID,k as isNumeric,M as isObject,T as isString,S as loadArraybuffer,L as loadJSON,_ as timeout};\n//# sourceMappingURL=utils.js.map\n","var e=1e3,r=1001,a=1002,o=1003,p=1004,t=1004,v=1005,x=1005,b=1006,c=1007,d=1007,f=1008,g=1008,h=1009,i=1010,j=1011,k=1012,l=1013,m=1014,n=1015,q=1016,s=1017,u=1018,w=1020,y=1021,z=1022,A=1023,B=1024,C=1025,D=1026,E=1027,F=1028,G=1029,H=1030,I=1031,J=1033,K=33776,L=33777,M=33778,N=33779,O=35840,P=35841,Q=35842,R=35843,S=36196,T=37492,U=37496,V=37808,W=37809,X=37810,Y=37811,Z=37812,$=37813,_=37814,ee=37815,re=37816,ae=37817,oe=37818,pe=37819,te=37820,ve=37821,xe=36492,be=3e3,ce=3001,de=1e4,fe=10001,ge=10002,he=2e4,ie=20001,je=20002,ke=20003,le=20004,me=3e4,ne=300001,qe=4e5,se=400001,ue=400002,we=400003,ye=400004,ze=400005,Ae=5e5,Be=500001,Ce=500002,De=500003;export{y as AlphaFormat,i as ByteType,se as CentimetersUnit,r as ClampToEdgeWrapping,De as CustomProjectionType,D as DepthFormat,E as DepthStencilFormat,ne as FastRender,ye as FeetUnit,n as FloatType,Ce as FrustumProjectionType,de as GIFMediaType,q as HalfFloatType,ze as InchesUnit,l as IntType,fe as JPEGMediaType,be as LinearEncoding,b as LinearFilter,g as LinearMipMapLinearFilter,d as LinearMipMapNearestFilter,f as LinearMipmapLinearFilter,c as LinearMipmapNearestFilter,ie as LinesPrimitive,C as LuminanceAlphaFormat,B as LuminanceFormat,qe as MetersUnit,ue as MillimetersUnit,a as MirroredRepeatWrapping,o as NearestFilter,x as NearestMipMapLinearFilter,p as NearestMipMapNearestFilter,v as NearestMipmapLinearFilter,t as NearestMipmapNearestFilter,Be as OrthoProjectionType,ge as PNGMediaType,Ae as PerspectiveProjectionType,he as PointsPrimitive,me as QualityRender,A as RGBAFormat,J as RGBAIntegerFormat,pe as RGBA_ASTC_10x10_Format,re as RGBA_ASTC_10x5_Format,ae as RGBA_ASTC_10x6_Format,oe as RGBA_ASTC_10x8_Format,te as RGBA_ASTC_12x10_Format,ve as RGBA_ASTC_12x12_Format,V as RGBA_ASTC_4x4_Format,W as RGBA_ASTC_5x4_Format,X as RGBA_ASTC_5x5_Format,Y as RGBA_ASTC_6x5_Format,Z as RGBA_ASTC_6x6_Format,$ as RGBA_ASTC_8x5_Format,_ as RGBA_ASTC_8x6_Format,ee as RGBA_ASTC_8x8_Format,xe as RGBA_BPTC_Format,U as RGBA_ETC2_EAC_Format,R as RGBA_PVRTC_2BPPV1_Format,Q as RGBA_PVRTC_4BPPV1_Format,L as RGBA_S3TC_DXT1_Format,M as RGBA_S3TC_DXT3_Format,N as RGBA_S3TC_DXT5_Format,z as RGBFormat,S as RGB_ETC1_Format,T as RGB_ETC2_Format,P as RGB_PVRTC_2BPPV1_Format,O as RGB_PVRTC_4BPPV1_Format,K as RGB_S3TC_DXT1_Format,H as RGFormat,I as RGIntegerFormat,F as RedFormat,G as RedIntegerFormat,e as RepeatWrapping,j as ShortType,ke as SolidPrimitive,le as SurfacePrimitive,je as TrianglesPrimitive,h as UnsignedByteType,w as UnsignedInt248Type,m as UnsignedIntType,s as UnsignedShort4444Type,u as UnsignedShort5551Type,k as UnsignedShortType,we as YardsUnit,ce as sRGBEncoding};\n//# sourceMappingURL=index.es.map\n","var t=0;function e(e){return\"__private_\"+t+++\"_\"+e}function r(t,e){if(!Object.prototype.hasOwnProperty.call(t,e))throw new TypeError(\"attempted to use private field on non-instance\");return t}function o(t,e){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},o(t,e)}var i=/*#__PURE__*/function(){function t(t,e,r){this.isLoading=void 0,this.itemsLoaded=void 0,this.itemsTotal=void 0,this.urlModifier=void 0,this.handlers=void 0,this.onStart=void 0,this.onLoad=void 0,this.onProgress=void 0,this.onError=void 0,this.isLoading=!1,this.itemsLoaded=0,this.itemsTotal=0,this.urlModifier=void 0,this.handlers=[],this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r}var e=t.prototype;return e.itemStart=function(t){this.itemsTotal++,this.isLoading||void 0!==this.onStart&&this.onStart(t,this.itemsLoaded,this.itemsTotal),this.isLoading=!0},e.itemEnd=function(t){this.itemsLoaded++,void 0!==this.onProgress&&this.onProgress(t,this.itemsLoaded,this.itemsTotal),this.itemsLoaded===this.itemsTotal&&(this.isLoading=!1,void 0!==this.onLoad&&this.onLoad())},e.itemError=function(t){void 0!==this.onError&&this.onError(t)},e.resolveURL=function(t){return this.urlModifier?this.urlModifier(t):t},e.setURLModifier=function(t){return this.urlModifier=t,this},e.addHandler=function(t,e){return this.handlers.push(t,e),this},e.removeHandler=function(t){var e=this.handlers.indexOf(t);return-1!==e&&this.handlers.splice(e,2),this},e.getHandler=function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var o=this.handlers[e],i=this.handlers[e+1];if(o.global&&(o.lastIndex=0),o.test(t))return i}return null},t}(),s=new i,n=/*#__PURE__*/function(){function t(t){this.manager=void 0,this.crossOrigin=void 0,this.withCredentials=void 0,this.path=void 0,this.resourcePath=void 0,this.requestHeader=void 0,this.manager=void 0!==t?t:s,this.crossOrigin=\"anonymous\",this.withCredentials=!1,this.path=\"\",this.resourcePath=\"\",this.requestHeader={}}var e=t.prototype;return e.load=function(t,e,r,o){},e.loadAsync=function(t,e){var r=this;return new Promise(function(o,i){r.load(t,o,e,i)})},e.parse=function(){},e.setCrossOrigin=function(t){return this.crossOrigin=t,this},e.setWithCredentials=function(t){return this.withCredentials=t,this},e.setPath=function(t){return this.path=t,this},e.setResourcePath=function(t){return this.resourcePath=t,this},e.setRequestHeader=function(t){return this.requestHeader=t,this},t}(),a=/*#__PURE__*/function(){function t(t){void 0===t&&(t=4),this.pool=void 0,this.queue=void 0,this.workers=void 0,this.workersResolve=void 0,this.workerStatus=void 0,this.workerCreator=void 0,this.pool=t,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0}var e=t.prototype;return e._initWorker=function(t){if(!this.workers[t]){var e=this.workerCreator();e.addEventListener(\"message\",this._onMessage.bind(this,t)),this.workers[t]=e}},e._getIdleWorker=function(){for(var t=0;t<this.pool;t++)if(!(this.workerStatus&1<<t))return t;return-1},e._onMessage=function(t,e){var r=this.workersResolve[t];if(r&&r(e),this.queue.length){var o=this.queue.shift(),i=o.msg,s=o.transfer;this.workersResolve[t]=o.resolve,this.workers[t].postMessage(i,s)}else this.workerStatus^=1<<t},e.setWorkerCreator=function(t){this.workerCreator=t},e.setWorkerLimit=function(t){this.pool=t},e.postMessage=function(t,e){var r=this;return new Promise(function(o){var i=r._getIdleWorker();-1!==i?(r._initWorker(i),r.workerStatus|=1<<i,r.workersResolve[i]=o,r.workers[i].postMessage(t,e)):r.queue.push({resolve:o,msg:t,transfer:e})})},e.destroy=function(){this.workers.forEach(function(t){return t.terminate()}),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0},t}(),d={},h=/*#__PURE__*/function(t){var e,r;function i(e){var r;return(r=t.call(this,e)||this).mimeType=void 0,r.responseType=void 0,r}r=t,(e=i).prototype=Object.create(r.prototype),e.prototype.constructor=e,o(e,r);var s=i.prototype;return s.load=function(t,e,r,o){var i=this;if(void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t),void 0===d[t]){d[t]=[],d[t].push({onLoad:e,onProgress:r,onError:o});var s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?\"include\":\"same-origin\"}),n=this.mimeType,a=this.responseType;fetch(s).then(function(e){if(200===e.status||0===e.status){if(0===e.status&&console.warn(\"FileLoader: HTTP Status 0 received.\"),\"undefined\"==typeof ReadableStream||void 0===e.body.getReader)return e;var r=d[t],o=e.body.getReader(),i=e.headers.get(\"Content-Length\"),s=i?parseInt(i):0,n=0!==s,a=0,h=new ReadableStream({start:function(t){!function e(){o.read().then(function(o){var i=o.value;if(o.done)t.close();else{for(var d=new ProgressEvent(\"progress\",{lengthComputable:n,loaded:a+=i.byteLength,total:s}),h=0,u=r.length;h<u;h++){var c=r[h];c.onProgress&&c.onProgress(d)}t.enqueue(i),e()}})}()}});return new Response(h)}throw new Error('fetch for \"'+e.url+'\" responded with '+e.status+\": \"+e.statusText)}).then(function(t){switch(a){case\"arraybuffer\":return t.arrayBuffer();case\"blob\":return t.blob();case\"document\":return t.text().then(function(t){return(new DOMParser).parseFromString(t,n)});case\"json\":return t.json();default:if(void 0===n)return t.text();var e=/charset=\"?([^;\"\\s]*)\"?/i.exec(n),r=e&&e[1]?e[1].toLowerCase():void 0,o=new TextDecoder(r);return t.arrayBuffer().then(function(t){return o.decode(t)})}}).then(function(e){var r=d[t];delete d[t];for(var o=0,i=r.length;o<i;o++){var s=r[o];s.onLoad&&s.onLoad(e)}}).catch(function(e){var r=d[t];if(void 0===r)throw i.manager.itemError(t),e;delete d[t];for(var o=0,s=r.length;o<s;o++){var n=r[o];n.onError&&n.onError(e)}i.manager.itemError(t)}).finally(function(){i.manager.itemEnd(t)}),this.manager.itemStart(t)}else d[t].push({onLoad:e,onProgress:r,onError:o})},s.setResponseType=function(t){return this.responseType=t,this},s.setMimeType=function(t){return this.mimeType=t,this},i}(n);[[\"0\",10],[\"A\",26],[\"a\",26],[\"_\",1],[\"$\",1]].map(function(t){for(var e=[],r=t[0].charCodeAt(0),o=r+t[1],i=r;i<o;++i)e.push(i);return String.fromCharCode.apply(null,e)}).join(\"\"),function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?\"0\":\"\")+e.toString(16)}();var u=0,c={ETC1S:0,UASTC_4x4:1},f={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16},l={RGBAFormat:1023,RGBA_ASTC_4x4_Format:37808,RGBA_BPTC_Format:36492,RGBA_ETC2_EAC_Format:37496,RGBA_PVRTC_4BPPV1_Format:35842,RGBA_S3TC_DXT5_Format:33779,RGB_ETC1_Format:36196,RGB_ETC2_Format:37492,RGB_PVRTC_4BPPV1_Format:35840,RGB_S3TC_DXT1_Format:33776},p=/*#__PURE__*/e(\"transcoderPath\"),m=/*#__PURE__*/e(\"transcoderBinary\"),v=/*#__PURE__*/e(\"transcoderPending\"),T=/*#__PURE__*/e(\"workerPool\"),g=/*#__PURE__*/e(\"workerSourceURL\"),_=/*#__PURE__*/e(\"workerConfig\"),w=/*#__PURE__*/e(\"supportedFileTypes\"),C=/*#__PURE__*/e(\"withCredentials\"),S=/*#__PURE__*/e(\"initTranscoder\"),y=/*#__PURE__*/function(){function t(t){Object.defineProperty(this,S,{value:F}),Object.defineProperty(this,p,{writable:!0,value:void 0}),Object.defineProperty(this,m,{writable:!0,value:void 0}),Object.defineProperty(this,v,{writable:!0,value:void 0}),Object.defineProperty(this,T,{writable:!0,value:void 0}),Object.defineProperty(this,g,{writable:!0,value:void 0}),Object.defineProperty(this,_,{writable:!0,value:void 0}),Object.defineProperty(this,w,{writable:!0,value:void 0}),Object.defineProperty(this,C,{writable:!0,value:void 0}),r(this,p)[p]=t.transcoderPath||\"https://cdn.jsdelivr.net/npm/@xeokit/sdk/dist/basis/\",r(this,m)[m]=null,r(this,v)[v]=null,r(this,T)[T]=new a,r(this,g)[g]=\"\",t.workerLimit&&r(this,T)[T].setWorkerLimit(t.workerLimit),r(this,_)[_]=null,r(this,C)[C]=!1,r(this,w)[w]=[\"xkt2\"]}var e=t.prototype;return e.init=function(t){r(this,_)[_]={astcSupported:t.astcSupported,etc1Supported:t.etc1Supported,etc2Supported:t.etc2Supported,dxtSupported:t.dxtSupported,bptcSupported:t.bptcSupported,pvrtcSupported:t.pvrtcSupported}},e.transcode=function(t,e){var o=this;return void 0===e&&(e={}),new Promise(function(i,s){var n=e;r(o,S)[S]().then(function(){return r(o,T)[T].postMessage({type:\"transcode\",buffers:t,taskConfig:n},t)}).then(function(t){var e=t.data,r=e.mipmaps,o=e.format,n=e.dfdTransferFn,a=e.dfdFlags;if(\"error\"===e.type)return s(e.error);i({mipmaps:r,props:{format:o,minFilter:1===r.length?1006:1008,magFilter:1===r.length?1006:1008,encoding:2===n?3001:3e3,premultiplyAlpha:!!(1&a)}})})})},e.destroy=function(){URL.revokeObjectURL(r(this,g)[g]),r(this,T)[T].destroy(),u--},t}();function F(){var t=this;if(!r(this,v)[v]){var e=new h;e.setPath(r(this,p)[p]),e.setWithCredentials(r(this,C)[C]);var o=e.loadAsync(\"basis_transcoder.js\"),i=new h;i.setPath(r(this,p)[p]),i.setResponseType(\"arraybuffer\"),i.setWithCredentials(r(this,C)[C]);var s=i.loadAsync(\"basis_transcoder.wasm\");r(this,v)[v]=Promise.all([o,s]).then(function(e){var o=e[0],i=e[1],s=P.toString(),n=[\"/* constants */\",\"let _EngineFormat = \"+JSON.stringify(l),\"let _TranscoderFormat = \"+JSON.stringify(f),\"let _BasisFormat = \"+JSON.stringify(c),\"/* basis_transcoder.js */\",o,\"/* worker */\",s.substring(s.indexOf(\"{\")+1,s.lastIndexOf(\"}\"))].join(\"\\n\");r(t,g)[g]=URL.createObjectURL(new Blob([n])),r(t,m)[m]=i,r(t,T)[T].setWorkerCreator(function(){var e=new Worker(r(t,g)[g]),o=r(t,m)[m].slice(0);return e.postMessage({type:\"init\",config:r(t,_)[_],transcoderBinary:o},[o]),e})}),u>0&&console.warn(\"KTX2TextureTranscoder: Multiple active KTX2TextureTranscoder may cause performance issues. Use a single KTX2TextureTranscoder instance, or call .dispose() on old instances.\"),u++}return r(this,v)[v]}var P=function(){var t,e,r,o=_EngineFormat,i=_TranscoderFormat,s=_BasisFormat;self.addEventListener(\"message\",function(n){var u,c=n.data;switch(c.type){case\"init\":t=c.config,u=c.transcoderBinary,e=new Promise(function(t){r={wasmBinary:u,onRuntimeInitialized:t},BASIS(r)}).then(function(){r.initializeBasis(),void 0===r.KTX2File&&console.warn(\"KTX2TextureTranscoder: Please update Basis Universal transcoder.\")});break;case\"transcode\":e.then(function(){try{for(var e=function(e){var n=new r.KTX2File(new Uint8Array(e));function u(){n.close(),n.delete()}if(!n.isValid())throw u(),new Error(\"KTX2TextureTranscoder: Invalid or unsupported .ktx2 file\");var c=n.isUASTC()?s.UASTC_4x4:s.ETC1S,f=n.getWidth(),l=n.getHeight(),p=n.getLevels(),m=n.getHasAlpha(),v=n.getDFDTransferFunc(),T=n.getDFDFlags(),g=function(e,r,n,u){for(var c=e===s.ETC1S?a:d,f=0;f<c.length;f++){var l=c[f];if(t[l.if]&&l.basisFormat.includes(e)&&!(u&&l.transcoderFormat.length<2)&&(!l.needsPowerOfTwo||h(r)&&h(n)))return{transcoderFormat:l.transcoderFormat[u?1:0],engineFormat:l.engineFormat[u?1:0]}}return console.warn(\"KTX2TextureTranscoder: No suitable compressed texture format found. Decoding to RGBA32.\"),{transcoderFormat:i.RGBA32,engineFormat:o.RGBAFormat}}(c,f,l,m),_=g.transcoderFormat,w=g.engineFormat;if(!f||!l||!p)throw u(),new Error(\"KTX2TextureTranscoder: Invalid texture\");if(!n.startTranscoding())throw u(),new Error(\"KTX2TextureTranscoder: .startTranscoding failed\");for(var C=[],S=0;S<p;S++){var y=n.getImageLevelInfo(S,0,0),F=y.origWidth,P=y.origHeight,R=new Uint8Array(n.getImageTranscodedSizeInBytes(S,0,0,_));if(!n.transcodeImage(R,S,0,0,_,0,-1,-1))throw u(),new Error(\"KTX2TextureTranscoder: .transcodeImage failed.\");C.push({data:R,width:F,height:P})}return u(),{width:f,height:l,hasAlpha:m,mipmaps:C,format:w,dfdTransferFn:v,dfdFlags:T}}(c.buffers[0]),n=e.width,u=e.height,f=e.hasAlpha,l=e.mipmaps,p=e.format,m=e.dfdTransferFn,v=e.dfdFlags,T=[],g=0;g<l.length;++g)T.push(l[g].data.buffer);self.postMessage({type:\"transcode\",id:c.id,width:n,height:u,hasAlpha:f,mipmaps:l,format:p,dfdTransferFn:m,dfdFlags:v},T)}catch(t){console.error(\"[BasisWorker]: \"+t),self.postMessage({type:\"error\",id:c.id,error:t.message})}})}});var n=[{if:\"astcSupported\",basisFormat:[s.UASTC_4x4],transcoderFormat:[i.ASTC_4x4,i.ASTC_4x4],engineFormat:[o.RGBA_ASTC_4x4_Format,o.RGBA_ASTC_4x4_Format],priorityETC1S:Infinity,priorityUASTC:1,needsPowerOfTwo:!1},{if:\"bptcSupported\",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[i.BC7_M5,i.BC7_M5],engineFormat:[o.RGBA_BPTC_Format,o.RGBA_BPTC_Format],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:\"dxtSupported\",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[i.BC1,i.BC3],engineFormat:[o.RGB_S3TC_DXT1_Format,o.RGBA_S3TC_DXT5_Format],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:\"etc2Supported\",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[i.ETC1,i.ETC2],engineFormat:[o.RGB_ETC2_Format,o.RGBA_ETC2_EAC_Format],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:\"etc1Supported\",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[i.ETC1],engineFormat:[o.RGB_ETC1_Format],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:\"pvrtcSupported\",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[i.PVRTC1_4_RGB,i.PVRTC1_4_RGBA],engineFormat:[o.RGB_PVRTC_4BPPV1_Format,o.RGBA_PVRTC_4BPPV1_Format],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0}],a=n.sort(function(t,e){return t.priorityETC1S-e.priorityETC1S}),d=n.sort(function(t,e){return t.priorityUASTC-e.priorityUASTC});function h(t){return t<=2||0==(t&t-1)&&0!==t}};export{y as KTX2TextureTranscoder};\n//# sourceMappingURL=index.es.map\n","import type {View, Viewer} from \"@xeokit/viewer\";\nimport {GLAbstractTexture, GLDataTexture, WEBGL_INFO} from \"@xeokit/webglutils\";\n\n\n\n/**\n * Provides rendering context within a WebGLRenderer.\n */\nexport class RenderContext {\n\n    /**\n     * The Viewer.\n     */\n    public viewer: Viewer;\n\n    /**\n     * The View we are rendering.\n     */\n    public view: View;\n\n    /**\n     * The WebGL rendering context.\n     */\n    public gl: WebGL2RenderingContext;\n\n    public viewMatrixDataTexture: GLDataTexture;\n\n    /**\n     * Whether to render a quality representation for triangle surfaces.\n     *\n     * When ````false````, we'll render them with a fast vertex-shaded Gouraud-shaded representation, which\n     * is great for zillions of objects.\n     *\n     * When ````true````, we'll render them at a better visual quality, using smooth, per-fragment shading\n     * and a more realistic lighting model.\n     */\n    public pbrEnabled: boolean;\n\n    /**\n     * Whether SAO is currently enabled during the current frame.\n     */\n    public withSAO: boolean;\n\n    /**\n     * Whether backfaces are currently enabled during the current frame.\n     */\n    public backfaces: boolean;\n\n    /**\n     * The vertex winding order for what we currently consider to be a backface during current\n     * frame: true == \"cw\", false == \"ccw\".\n     */\n    public frontface: boolean;\n\n    /**\n     * The next available texture unit to bind a {@link GLAbstractTexture} to.\n     */\n    public textureUnit: number;\n\n    /**\n     * Statistic that counts how many times ````gl.bindTexture()```` has been called so far within the current frame.\n     */\n    public bindTexture: number;\n\n    /**\n     * Indicates which pass the renderer is currently rendering.\n     */\n    public renderPass: number;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering castsShadows.\n     *\n     * This sets the viewpoint to look from the point of view of each {@link DirLight}\n     * or {@link PointLight} that casts a shadow.\n     */\n    public shadowViewMatrix: any;\n\n    /**\n     * The 4x4 viewing projection matrix the renderer is currently using when rendering shadows.\n     */\n    public shadowProjMatrix: any;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering a ray-pick.\n     *\n     * This sets the viewpoint to look along the ray given to {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}}\n     * when picking with a ray.\n     */\n    public pickViewMatrix: any;\n\n    /**\n     * The 4x4 orthographic projection transform matrix the renderer is currently using when rendering a ray-pick.\n     */\n    public pickProjMatrix: any;\n\n    /**\n     * Distance to the near clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZNear: number;\n\n    /**\n     * Distance to the far clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZFar: number;\n\n    /**\n     * Whether or not the renderer is currently picking invisible objects.\n     */\n    public pickInvisible: boolean;\n\n    /** The current line width.\n     */\n    public lineWidth: number;\n\n    /**\n     * ID of the last {@link WebGLProgram} that was bound during the current frame.\n     */\n    public lastProgramId: number;\n\n    /**\n     * The occlusion rendering texture.\n     */\n    public occlusionTexture: GLAbstractTexture | null;\n\n    constructor(viewer: Viewer, view: View, gl: WebGL2RenderingContext) {\n        this.viewer = viewer;\n        this.view = view;\n        this.gl = gl;\n        this.reset();\n    }\n\n    /**\n     * Called by the renderer before each frame.\n     */\n    reset() {\n        this.lastProgramId = -1;\n        this.pbrEnabled = false;\n        this.withSAO = false;\n        this.backfaces = false;\n        this.frontface = true;\n        this.textureUnit = 0;\n        this.shadowViewMatrix = null;\n        this.shadowProjMatrix = null;\n        this.pickViewMatrix = null;\n        this.pickProjMatrix = null;\n        this.pickZNear = 0.01;\n        this.pickZFar = 5000;\n        this.pickInvisible = false;\n        this.lineWidth = 1;\n        this.occlusionTexture = null;\n    }\n\n    /**\n     * Gets the next available texture unit for this render\n     */\n    get nextTextureUnit() {\n        const textureUnit = this.textureUnit;\n        this.textureUnit = (this.textureUnit + 1) % WEBGL_INFO.MAX_TEXTURE_UNITS;\n        return textureUnit;\n    }\n}\n","import{Component as t,EventEmitter as e,SDKError as i}from\"@xeokit/core\";import{EventDispatcher as r}from\"strongly-typed-events\";import{Scene as n}from\"@xeokit/scene\";import{newFloatArray as s,MAX_DOUBLE as o,MIN_DOUBLE as h,DEGTORAD as a}from\"@xeokit/math\";import{decompressPoint3 as c}from\"@xeokit/compression\";function l(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,\"symbol\"==typeof(n=function(t,e){if(\"object\"!=typeof t||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var r=i.call(t,\"string\");if(\"object\"!=typeof r)return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(r.key))?n:String(n),r)}var n}function d(t,e,i){return e&&l(t.prototype,e),i&&l(t,i),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function u(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,v(t,e)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function f(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var y=0;function p(t){return\"__private_\"+y+++\"_\"+t}function b(t,e){if(!Object.prototype.hasOwnProperty.call(t,e))throw new TypeError(\"attempted to use private field on non-instance\");return t}var w=0;function j(t){return\"__private_\"+w+++\"_\"+t}function g(t,e){if(!Object.prototype.hasOwnProperty.call(t,e))throw new TypeError(\"attempted to use private field on non-instance\");return t}var O=/*#__PURE__*/j(\"items\"),P=/*#__PURE__*/j(\"lastUniqueId\"),m=/*#__PURE__*/function(){function t(t,e){Object.defineProperty(this,O,{writable:!0,value:void 0}),Object.defineProperty(this,P,{writable:!0,value:void 0}),g(this,O)[O]=t||[],g(this,P)[P]=(e||0)+1}var e=t.prototype;return e.addItem=function(){var t;if(2===arguments.length){var e=arguments[0];if(t=arguments[1],g(this,O)[O][e])throw\"ID clash: '\"+e+\"'\";return g(this,O)[O][e]=t,e}for(t=arguments[0]||{};;){var i=g(this,P)[P]++;if(!g(this,O)[O][i])return g(this,O)[O][i]=t,i}},e.removeItem=function(t){var e=g(this,O)[O][t];return delete g(this,O)[O][t],e},t}(),k=/*#__PURE__*/function(){function t(){this._head=void 0,this._headLength=void 0,this._tail=void 0,this._index=void 0,this._length=void 0,this._head=[],this._headLength=0,this._tail=[],this._index=0,this._length=0}var e,i,r=t.prototype;return r.shift=function(){if(this._index>=this._headLength){var t=this._head;if(t.length=0,this._head=this._tail,this._tail=t,this._index=0,this._headLength=this._head.length,!this._headLength)return}var e=this._head[this._index];return this._index<0?delete this._head[this._index++]:this._head[this._index++]=void 0,this._length--,e},r.push=function(t){return this._length++,this._tail.push(t),this},r.unshift=function(t){return this._head[--this._index]=t,this._length++,this},r.clear=function(){this._head=[],this._headLength=0,this._tail=[],this._index=0,this._length=0},e=t,(i=[{key:\"length\",get:function(){return this._length}}])&&function(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,\"symbol\"==typeof(n=function(t,e){if(\"object\"!=typeof t||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var r=i.call(t,\"string\");if(\"object\"!=typeof r)return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(r.key))?n:String(n),r)}var n}(e.prototype,i),Object.defineProperty(e,\"prototype\",{writable:!1}),t}();function x(t){return function(t){return!isNaN(parseFloat(t))&&isFinite(t)}(t)?\"\"+t:\"'\"+t+\"'\"}[[\"0\",10],[\"A\",26],[\"a\",26],[\"_\",1],[\"$\",1]].map(function(t){for(var e=[],i=t[0].charCodeAt(0),r=i+t[1],n=i;n<r;++n)e.push(n);return String.fromCharCode.apply(null,e)}).join(\"\");var M=function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?\"0\":\"\")+e.toString(16);return function(){var e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+\"-\"+t[255&i]+t[i>>8&255]+\"-\"+t[i>>16&15|64]+t[i>>24&255]+\"-\"+t[63&r|128]+t[r>>8&255]+\"-\"+t[r>>16&255]+t[r>>24&255]+t[255&n]+t[n>>8&255]+t[n>>16&255]+t[n>>24&255]}}(),I=3e4,A=4e5,D=5e5,S=500001,V=500002,C=500003;function L(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function U(t){return new Float64Array(t||3)}function T(t){return new FloatArrayClass(t||4)}function z(t,e,i){return i||(i=t),i[0]=t[0]*e,i[1]=t[1]*e,i[2]=t[2]*e,i}function F(t,e,i){return i||(i=t),i[0]=t[0]+e[0],i[1]=t[1]+e[1],i[2]=t[2]+e[2],i}function _(t,e,i){return i||(i=t),i[0]=t[0]-e[0],i[1]=t[1]-e[1],i[2]=t[2]-e[2],i}function R(t,e,i){i||(i=t);var r=t[0],n=t[1],s=t[2],o=e[0],h=e[1],a=e[2];return i[0]=n*a-s*h,i[1]=s*o-r*a,i[2]=r*h-n*o,i}function W(t){return Math.sqrt(function(t){return L(t,t)}(t))}function E(t,e,i,r,n,s){var o=s||U(),h=(t-e)/(i-e);return o[0]=r[0]+h*(n[0]-r[0]),o[1]=r[1]+h*(n[1]-r[1]),o[2]=r[2]+h*(n[2]-r[2]),o}function H(t,e){return z(t,1/W(t),e)}function q(t){return s(t||16)}T(),T(),new FloatArrayClass(2);var X=q(),B=q();function N(t){return t||(t=q()),t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function G(t,e,i){i||(i=q());var r,n,s,o,h,a,c=function(t,e){return function(t,e,i){return i||(i=t),i[0]=t[0]*e,i[1]=t[1]*e,i[2]=t[2]*e,i[3]=t[3]*e,i}(t,1/function(t){return Math.sqrt(function(t){return function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]}(t,t)}(t))}(t),[])}([e[0],e[1],e[2],0]),l=Math.sin(t),d=Math.cos(t),u=1-d,v=c[0],f=c[1],y=c[2];return r=v*f,n=f*y,s=y*v,o=v*l,h=f*l,a=y*l,i[0]=u*v*v+d,i[1]=u*r+a,i[2]=u*s-h,i[3]=0,i[4]=u*r-a,i[5]=u*f*f+d,i[6]=u*n+o,i[7]=0,i[8]=u*s+h,i[9]=u*n-o,i[10]=u*y*y+d,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,i}function Q(t,e,i,r){r||(r=q());var n,s,o,h,a,c,l,d,u,v,f=t[0],y=t[1],p=t[2],b=i[0],w=i[1],j=i[2],g=e[0],O=e[1],P=e[2];return f===g&&y===O&&p===P?N():(n=f-g,s=y-O,o=p-P,h=w*(o*=v=1/Math.sqrt(n*n+s*s+o*o))-j*(s*=v),a=j*(n*=v)-b*o,c=b*s-w*n,(v=Math.sqrt(h*h+a*a+c*c))?(h*=v=1/v,a*=v,c*=v):(h=0,a=0,c=0),l=s*c-o*a,d=o*h-n*c,u=n*a-s*h,(v=Math.sqrt(l*l+d*d+u*u))?(l*=v=1/v,d*=v,u*=v):(l=0,d=0,u=0),r[0]=h,r[1]=l,r[2]=n,r[3]=0,r[4]=a,r[5]=d,r[6]=s,r[7]=0,r[8]=c,r[9]=u,r[10]=o,r[11]=0,r[12]=-(h*f+a*y+c*p),r[13]=-(l*f+d*y+u*p),r[14]=-(n*f+s*y+o*p),r[15]=1,r)}function Y(t,e){e||(e=t);var i=t[0],r=t[1],n=t[2],s=t[3],o=t[4],h=t[5],a=t[6],c=t[7],l=t[8],d=t[9],u=t[10],v=t[11],f=t[12],y=t[13],p=t[14],b=t[15],w=i*h-r*o,j=i*a-n*o,g=i*c-s*o,O=r*a-n*h,P=r*c-s*h,m=n*c-s*a,k=l*y-d*f,x=l*p-u*f,M=l*b-v*f,I=d*p-u*y,A=d*b-v*y,D=u*b-v*p,S=1/(w*D-j*A+g*I+O*M-P*x+m*k);return e[0]=(h*D-a*A+c*I)*S,e[1]=(-r*D+n*A-s*I)*S,e[2]=(y*m-p*P+b*O)*S,e[3]=(-d*m+u*P-v*O)*S,e[4]=(-o*D+a*M-c*x)*S,e[5]=(i*D-n*M+s*x)*S,e[6]=(-f*m+p*g-b*j)*S,e[7]=(l*m-u*g+v*j)*S,e[8]=(o*A-h*M+c*k)*S,e[9]=(-i*A+r*M-s*k)*S,e[10]=(f*P-y*g+b*w)*S,e[11]=(-l*P+d*g-v*w)*S,e[12]=(-o*I+h*x-a*k)*S,e[13]=(i*I-r*x+n*k)*S,e[14]=(-f*O+y*j-p*w)*S,e[15]=(l*O-d*j+u*w)*S,e}function $(t,e){var i=t[4],r=t[14],n=t[8],s=t[13],o=t[12],h=t[9];if(!e||t===e){var a=t[1],c=t[2],l=t[3],d=t[6],u=t[7],v=t[11];return t[1]=i,t[2]=n,t[3]=o,t[4]=a,t[6]=h,t[7]=s,t[8]=c,t[9]=d,t[11]=r,t[12]=l,t[13]=u,t[14]=v,t}return e[0]=t[0],e[1]=i,e[2]=n,e[3]=o,e[4]=t[1],e[5]=t[5],e[6]=h,e[7]=s,e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=r,e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15],e}function J(t,e,i){i||(i=t);var r=e[0],n=e[1],s=e[2],o=e[3];return i[0]=t[0]*r+t[4]*n+t[8]*s+t[12]*o,i[1]=t[1]*r+t[5]*n+t[9]*s+t[13]*o,i[2]=t[2]*r+t[6]*n+t[10]*s+t[14]*o,i[3]=t[3]*r+t[7]*n+t[11]*s+t[15]*o,i}function K(t,e,i){i||(i=t);var r=t[0],n=t[1],s=t[2],o=t[3],h=t[4],a=t[5],c=t[6],l=t[7],d=t[8],u=t[9],v=t[10],f=t[11],y=t[12],p=t[13],b=t[14],w=t[15],j=e[0],g=e[1],O=e[2],P=e[3],m=e[4],k=e[5],x=e[6],M=e[7],I=e[8],A=e[9],D=e[10],S=e[11],V=e[12],C=e[13],L=e[14],U=e[15];return i[0]=j*r+g*h+O*d+P*y,i[1]=j*n+g*a+O*u+P*p,i[2]=j*s+g*c+O*v+P*b,i[3]=j*o+g*l+O*f+P*w,i[4]=m*r+k*h+x*d+M*y,i[5]=m*n+k*a+x*u+M*p,i[6]=m*s+k*c+x*v+M*b,i[7]=m*o+k*l+x*f+M*w,i[8]=I*r+A*h+D*d+S*y,i[9]=I*n+A*a+D*u+S*p,i[10]=I*s+A*c+D*v+S*b,i[11]=I*o+A*l+D*f+S*w,i[12]=V*r+C*h+L*d+U*y,i[13]=V*n+C*a+L*u+U*p,i[14]=V*s+C*c+L*v+U*b,i[15]=V*o+C*l+L*f+U*w,i}function Z(t,e,i){i||(i=e);var r=e[0],n=e[1],s=e[2];return i[0]=t[0]*r+t[4]*n+t[8]*s+t[12],i[1]=t[1]*r+t[5]*n+t[9]*s+t[13],i[2]=t[2]*r+t[6]*n+t[10]*s+t[14],i}s(3),U(),q(),s(3);var tt,et=/*#__PURE__*/p(\"rendererViewObject\"),it=/*#__PURE__*/p(\"state\"),rt=/*#__PURE__*/function(){function t(t,e,i){this.id=void 0,this.layer=void 0,this.sceneObject=void 0,Object.defineProperty(this,et,{writable:!0,value:void 0}),Object.defineProperty(this,it,{writable:!0,value:void 0}),this.id=e.id,this.layer=t,this.sceneObject=e,b(this,et)[et]=i,b(this,it)[it]={visible:!0,culled:!1,pickable:!0,clippable:!0,collidable:!0,xrayed:!1,selected:!1,highlighted:!1,edges:!1,colorize:new Float32Array(4),colorized:!1,opacityUpdated:!1},b(this,et)[et].setVisible(this.layer.view.viewIndex,b(this,it)[it].visible),this.layer.objectVisibilityUpdated(this,b(this,it)[it].visible,!0)}return t.prototype._destroy=function(){b(this,it)[it].visible&&this.layer.objectVisibilityUpdated(this,!1,!1),b(this,it)[it].xrayed&&this.layer.objectXRayedUpdated(this,!1),b(this,it)[it].selected&&this.layer.objectSelectedUpdated(this,!1),b(this,it)[it].highlighted&&this.layer.objectHighlightedUpdated(this,!1),b(this,it)[it].colorized&&this.layer.objectColorizeUpdated(this,!1),b(this,it)[it].opacityUpdated&&this.layer.objectOpacityUpdated(this,!1),this.layer.redraw()},d(t,[{key:\"aabb\",get:function(){return this.sceneObject.aabb}},{key:\"visible\",get:function(){return b(this,it)[it].visible},set:function(t){t!==b(this,it)[it].visible&&(b(this,it)[it].visible=t,b(this,et)[et].setVisible(this.layer.view.viewIndex,t),this.layer.objectVisibilityUpdated(this,t,!0),this.layer.redraw())}},{key:\"xrayed\",get:function(){return b(this,it)[it].xrayed},set:function(t){b(this,it)[it].xrayed!==t&&(b(this,it)[it].xrayed=t,b(this,et)[et].setXRayed(this.layer.view.viewIndex,t),this.layer.objectXRayedUpdated(this,t),this.layer.redraw())}},{key:\"edges\",get:function(){return b(this,it)[it].edges},set:function(t){b(this,it)[it].edges!==t&&(b(this,it)[it].edges=t,b(this,et)[et].setEdges(this.layer.view.viewIndex,t),this.layer.redraw())}},{key:\"highlighted\",get:function(){return b(this,it)[it].highlighted},set:function(t){t!==b(this,it)[it].highlighted&&(b(this,it)[it].highlighted=t,b(this,et)[et].setHighlighted(this.layer.view.viewIndex,t),this.layer.objectHighlightedUpdated(this,t),this.layer.redraw())}},{key:\"selected\",get:function(){return b(this,it)[it].selected},set:function(t){t!==b(this,it)[it].selected&&(b(this,it)[it].selected=t,b(this,et)[et].setSelected(this.layer.view.viewIndex,t),this.layer.objectSelectedUpdated(this,t),this.layer.redraw())}},{key:\"culled\",get:function(){return b(this,it)[it].culled},set:function(t){t!==b(this,it)[it].culled&&(b(this,it)[it].culled=t,this.layer.redraw())}},{key:\"clippable\",get:function(){return b(this,it)[it].clippable},set:function(t){t!==b(this,it)[it].clippable&&(b(this,it)[it].clippable=t,this.layer.redraw())}},{key:\"collidable\",get:function(){return b(this,it)[it].collidable},set:function(t){t!==b(this,it)[it].collidable&&(b(this,it)[it].collidable=t)}},{key:\"pickable\",get:function(){return b(this,it)[it].pickable},set:function(t){b(this,it)[it].pickable!==t&&(b(this,it)[it].pickable=t)}},{key:\"colorize\",get:function(){return b(this,it)[it].colorize},set:function(t){var e=b(this,it)[it].colorize;t?(e[0]=t[0],e[1]=t[1],e[2]=t[2]):(e[0]=1,e[1]=1,e[2]=1),b(this,it)[it].colorized=!!t,this.layer.objectColorizeUpdated(this,b(this,it)[it].colorized),this.layer.redraw()}},{key:\"opacity\",get:function(){return b(this,it)[it].colorize[3]},set:function(t){var e=b(this,it)[it].colorize;b(this,it)[it].opacityUpdated=null!=t,e[3]=b(this,it)[it].opacityUpdated?t:1,this.layer.objectOpacityUpdated(this,b(this,it)[it].opacityUpdated),this.layer.redraw()}}]),t}(),nt=/*#__PURE__*/p(\"state\"),st=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).view=void 0,s.onPos=void 0,s.onDir=void 0,s.onActive=void 0,Object.defineProperty(f(s),nt,{writable:!0,value:void 0}),s.view=i,b(f(s),nt)[nt]={active:!1!==n.active,pos:new Float64Array(n.pos||[0,0,0]),dir:new Float32Array(n.pos||[0,0,-1]),dist:0},s.onPos=new e(new r),s.onDir=new e(new r),s.onActive=new e(new r),s}u(i,t);var n=i.prototype;return n.flipDir=function(){var t=b(this,nt)[nt].dir;t[0]*=-1,t[1]*=-1,t[2]*=-1,b(this,nt)[nt].dist=-L(b(this,nt)[nt].pos,b(this,nt)[nt].dir),this.onDir.dispatch(this,b(this,nt)[nt].dir),this.view.redraw()},n.destroy=function(){this.onPos.clear(),this.onDir.clear(),t.prototype.destroy.call(this)},d(i,[{key:\"active\",get:function(){return b(this,nt)[nt].active},set:function(t){b(this,nt)[nt].active!==t&&(b(this,nt)[nt].active=t,this.view.redraw(),this.onActive.dispatch(this,b(this,nt)[nt].active))}},{key:\"pos\",get:function(){return b(this,nt)[nt].pos},set:function(t){b(this,nt)[nt].pos.set(t),b(this,nt)[nt].dist=-L(b(this,nt)[nt].pos,b(this,nt)[nt].dir),this.onPos.dispatch(this,b(this,nt)[nt].pos)}},{key:\"dir\",get:function(){return b(this,nt)[nt].dir},set:function(t){b(this,nt)[nt].dir.set(t),b(this,nt)[nt].dist=-L(b(this,nt)[nt].pos,b(this,nt)[nt].dir),this.view.redraw(),this.onDir.dispatch(this,b(this,nt)[nt].dir)}},{key:\"dist\",get:function(){return b(this,nt)[nt].dist}}]),i}(t),ot=((tt={})[A]={abbrev:\"m\"},tt[400001]={abbrev:\"cm\"},tt[400002]={abbrev:\"mm\"},tt[400003]={abbrev:\"yd\"},tt[400004]={abbrev:\"ft\"},tt[400005]={abbrev:\"in\"},tt),ht=/*#__PURE__*/p(\"units\"),at=/*#__PURE__*/p(\"scale\"),ct=/*#__PURE__*/p(\"origin\"),lt=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={units:A,scale:1,origin:[1,1,1]}),s=t.call(this,i,n)||this,Object.defineProperty(f(s),ht,{writable:!0,value:void 0}),Object.defineProperty(f(s),at,{writable:!0,value:void 0}),Object.defineProperty(f(s),ct,{writable:!0,value:void 0}),s.onUnits=void 0,s.onScale=void 0,s.onOrigin=void 0,s.onUnits=new e(new r),s.onScale=new e(new r),s.onOrigin=new e(new r),b(f(s),ht)[ht]=A,b(f(s),at)[at]=1,b(f(s),ct)[ct]=U([0,0,0]),s.units=n.units,s.scale=n.scale,s.origin=n.origin,s}u(i,t);var n=i.prototype;return n.worldToRealPos=function(t,e){return void 0===e&&(e=U()),e[0]=b(this,ct)[ct][0]+b(this,at)[at]*t[0],e[1]=b(this,ct)[ct][1]+b(this,at)[at]*t[1],e[2]=b(this,ct)[ct][2]+b(this,at)[at]*t[2],e},n.realToWorldPos=function(t,e){return void 0===e&&(e=U()),e[0]=(t[0]-b(this,ct)[ct][0])/b(this,at)[at],e[1]=(t[1]-b(this,ct)[ct][1])/b(this,at)[at],e[2]=(t[2]-b(this,ct)[ct][2])/b(this,at)[at],e},n.destroy=function(){t.prototype.destroy.call(this),this.onUnits.clear(),this.onScale.clear(),this.onOrigin.clear()},d(i,[{key:\"unitsInfo\",get:function(){return ot}},{key:\"units\",get:function(){return b(this,ht)[ht]},set:function(t){t||(t=A),ot[t]||(this.error(\"Unsupported value for 'units': \"+t+\" defaulting to MetersUnit\"),t=A),b(this,ht)[ht]=t,this.onUnits.dispatch(this,b(this,ht)[ht])}},{key:\"scale\",get:function(){return b(this,at)[at]},set:function(t){(t=t||1)<=0?this.error(\"scale value should be larger than zero\"):(b(this,at)[at]=t,this.onScale.dispatch(this,b(this,at)[at]))}},{key:\"origin\",get:function(){return b(this,ct)[ct]},set:function(t){if(!t)return b(this,ct)[ct][0]=0,b(this,ct)[ct][1]=0,void(b(this,ct)[ct][2]=0);b(this,ct)[ct][0]=t[0],b(this,ct)[ct][1]=t[1],b(this,ct)[ct][2]=t[2],this.onOrigin.dispatch(this,b(this,ct)[ct])}}]),i}(t),dt=/*#__PURE__*/p(\"state\"),ut=/*#__PURE__*/function(t){function e(e,i){var r;return(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),dt,{writable:!0,value:void 0}),r.view=e,b(f(r),dt)[dt]={renderModes:[I],enabled:!1!==i.enabled,kernelRadius:i.kernelRadius||100,intensity:void 0!==i.intensity?i.intensity:.15,bias:void 0!==i.bias?i.bias:.5,scale:void 0!==i.scale?i.scale:1,minResolution:void 0!==i.minResolution?i.minResolution:0,numSamples:void 0!==i.numSamples?i.numSamples:10,blur:!!i.blur,blendCutoff:void 0!==i.blendCutff?i.blendCutoff:.3,blendFactor:void 0!==i.blendFactor?i.blendFactor:1},r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this)},d(e,[{key:\"renderModes\",get:function(){return b(this,dt)[dt].renderModes},set:function(t){b(this,dt)[dt].renderModes=t,this.view.redraw()}},{key:\"supported\",get:function(){return this.view.viewer.renderer.getSAOSupported()}},{key:\"enabled\",get:function(){return b(this,dt)[dt].enabled},set:function(t){t=!!t,b(this,dt)[dt].enabled!==t&&(b(this,dt)[dt].enabled=t,this.view.redraw())}},{key:\"possible\",get:function(){if(!this.supported)return!1;if(!b(this,dt)[dt].enabled)return!1;var t=this.view.camera.projectionType;return t!==C&&t!==V}},{key:\"kernelRadius\",get:function(){return b(this,dt)[dt].kernelRadius},set:function(t){null==t&&(t=100),b(this,dt)[dt].kernelRadius!==t&&(b(this,dt)[dt].kernelRadius=t,this.view.redraw())}},{key:\"intensity\",get:function(){return b(this,dt)[dt].intensity},set:function(t){null==t&&(t=.15),b(this,dt)[dt].intensity!==t&&(b(this,dt)[dt].intensity=t,this.view.redraw())}},{key:\"bias\",get:function(){return b(this,dt)[dt].bias},set:function(t){null==t&&(t=.5),b(this,dt)[dt].bias!==t&&(b(this,dt)[dt].bias=t,this.view.redraw())}},{key:\"scale\",get:function(){return b(this,dt)[dt].scale},set:function(t){null==t&&(t=1),b(this,dt)[dt].scale!==t&&(b(this,dt)[dt].scale=t,this.view.redraw())}},{key:\"minResolution\",get:function(){return b(this,dt)[dt].minResolution},set:function(t){null==t&&(t=0),b(this,dt)[dt].minResolution!==t&&(b(this,dt)[dt].minResolution=t,this.view.redraw())}},{key:\"numSamples\",get:function(){return b(this,dt)[dt].numSamples},set:function(t){null==t&&(t=10),b(this,dt)[dt].numSamples!==t&&(b(this,dt)[dt].numSamples=t,this.view.redraw())}},{key:\"blur\",get:function(){return b(this,dt)[dt].blur},set:function(t){t=!1!==t,b(this,dt)[dt].blur!==t&&(b(this,dt)[dt].blur=t,this.view.redraw())}},{key:\"blendCutoff\",get:function(){return b(this,dt)[dt].blendCutoff},set:function(t){null==t&&(t=.3),b(this,dt)[dt].blendCutoff!==t&&(b(this,dt)[dt].blendCutoff=t,this.view.redraw())}},{key:\"blendFactor\",get:function(){return b(this,dt)[dt].blendFactor},set:function(t){null==t&&(t=1),b(this,dt)[dt].blendFactor!==t&&(b(this,dt)[dt].blendFactor=t,this.view.redraw())}}]),e}(t),vt=/*#__PURE__*/p(\"state\"),ft=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={lineWidth:1}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),vt,{writable:!0,value:void 0}),r.view=e,b(f(r),vt)[vt]={lineWidth:null!=i.lineWidth?i.lineWidth:1},r}return u(e,t),d(e,[{key:\"lineWidth\",get:function(){return b(this,vt)[vt].lineWidth},set:function(t){b(this,vt)[vt].lineWidth=t||1,this.view.redraw()}}]),e}(t),yt=/*#__PURE__*/p(\"numObjects\"),pt=/*#__PURE__*/p(\"objectIds\"),bt=/*#__PURE__*/p(\"numVisibleObjects\"),wt=/*#__PURE__*/p(\"visibleObjectIds\"),jt=/*#__PURE__*/p(\"numXRayedObjects\"),gt=/*#__PURE__*/p(\"xrayedObjectIds\"),Ot=/*#__PURE__*/p(\"numHighlightedObjects\"),Pt=/*#__PURE__*/p(\"highlightedObjectIds\"),mt=/*#__PURE__*/p(\"numSelectedObjects\"),kt=/*#__PURE__*/p(\"selectedObjectIds\"),xt=/*#__PURE__*/p(\"numColorizedObjects\"),Mt=/*#__PURE__*/p(\"colorizedObjectIds\"),It=/*#__PURE__*/p(\"numOpacityObjects\"),At=/*#__PURE__*/p(\"opacityObjectIds\"),Dt=/*#__PURE__*/p(\"qualityRender\"),St=/*#__PURE__*/p(\"initObjects\"),Vt=/*#__PURE__*/p(\"createObjects\"),Ct=/*#__PURE__*/p(\"destroyObjects\"),Lt=/*#__PURE__*/function(t){function i(i){var n;return n=t.call(this,i.view,i)||this,Object.defineProperty(f(n),Ct,{value:zt}),Object.defineProperty(f(n),Vt,{value:Tt}),Object.defineProperty(f(n),St,{value:Ut}),n.objects=void 0,n.visibleObjects=void 0,n.xrayedObjects=void 0,n.highlightedObjects=void 0,n.selectedObjects=void 0,n.colorizedObjects=void 0,n.opacityObjects=void 0,n.autoDestroy=void 0,n.onObjectVisibility=void 0,Object.defineProperty(f(n),yt,{writable:!0,value:void 0}),Object.defineProperty(f(n),pt,{writable:!0,value:void 0}),Object.defineProperty(f(n),bt,{writable:!0,value:void 0}),Object.defineProperty(f(n),wt,{writable:!0,value:void 0}),Object.defineProperty(f(n),jt,{writable:!0,value:void 0}),Object.defineProperty(f(n),gt,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ot,{writable:!0,value:void 0}),Object.defineProperty(f(n),Pt,{writable:!0,value:void 0}),Object.defineProperty(f(n),mt,{writable:!0,value:void 0}),Object.defineProperty(f(n),kt,{writable:!0,value:void 0}),Object.defineProperty(f(n),xt,{writable:!0,value:void 0}),Object.defineProperty(f(n),Mt,{writable:!0,value:void 0}),Object.defineProperty(f(n),It,{writable:!0,value:void 0}),Object.defineProperty(f(n),At,{writable:!0,value:void 0}),Object.defineProperty(f(n),Dt,{writable:!0,value:void 0}),n.gammaOutput=void 0,n.id=i.id,n.viewer=i.viewer,n.view=i.view,n.objects={},n.visibleObjects={},n.xrayedObjects={},n.highlightedObjects={},n.selectedObjects={},n.colorizedObjects={},n.opacityObjects={},n.autoDestroy=!1!==i.autoDestroy,b(f(n),yt)[yt]=0,b(f(n),bt)[bt]=0,b(f(n),jt)[jt]=0,b(f(n),Ot)[Ot]=0,b(f(n),mt)[mt]=0,b(f(n),xt)[xt]=0,b(f(n),It)[It]=0,b(f(n),Dt)[Dt]=!!i.qualityRender,n.onObjectVisibility=new e(new r),b(f(n),St)[St](),n}u(i,t);var n=i.prototype;return n.registerViewObject=function(t){this.objects[t.id]=t,b(this,yt)[yt]++,b(this,pt)[pt]=null},n.deregisterViewObject=function(t){delete this.objects[t.id],delete this.visibleObjects[t.id],delete this.xrayedObjects[t.id],delete this.highlightedObjects[t.id],delete this.selectedObjects[t.id],delete this.colorizedObjects[t.id],delete this.opacityObjects[t.id],b(this,yt)[yt]--,b(this,pt)[pt]=null},n.redraw=function(){this.viewer.renderer.setImageDirty(this.view.viewIndex)},n.objectVisibilityUpdated=function(t,e,i){void 0===i&&(i=!0),e?(this.visibleObjects[t.id]=t,b(this,bt)[bt]++):(delete this.visibleObjects[t.id],b(this,bt)[bt]--),b(this,wt)[wt]=null,i&&this.onObjectVisibility.dispatch(this,t),this.view.objectVisibilityUpdated(t,e,i)},n.objectXRayedUpdated=function(t,e){e?(this.xrayedObjects[t.id]=t,b(this,jt)[jt]++):(delete this.xrayedObjects[t.id],b(this,jt)[jt]--),b(this,gt)[gt]=null,this.view.objectXRayedUpdated(t,e)},n.objectHighlightedUpdated=function(t,e){e?(this.highlightedObjects[t.id]=t,b(this,Ot)[Ot]++):(delete this.highlightedObjects[t.id],b(this,Ot)[Ot]--),b(this,Pt)[Pt]=null,this.view.objectHighlightedUpdated(t,e)},n.objectSelectedUpdated=function(t,e){e?(this.selectedObjects[t.id]=t,b(this,mt)[mt]++):(delete this.selectedObjects[t.id],b(this,mt)[mt]--),b(this,kt)[kt]=null,this.view.objectSelectedUpdated(t,e)},n.objectColorizeUpdated=function(t,e){e?(this.colorizedObjects[t.id]=t,b(this,xt)[xt]++):(delete this.colorizedObjects[t.id],b(this,xt)[xt]--),b(this,Mt)[Mt]=null,this.view.objectColorizeUpdated(t,e)},n.objectOpacityUpdated=function(t,e){e?(this.opacityObjects[t.id]=t,b(this,It)[It]++):(delete this.opacityObjects[t.id],b(this,It)[It]--),b(this,At)[At]=null,this.view.objectOpacityUpdated(t,e)},n.setObjectsVisible=function(t,e){return this.withObjects(t,function(t){var i=t.visible!==e;return t.visible=e,i})},n.setObjectsCollidable=function(t,e){return this.withObjects(t,function(t){var i=t.collidable!==e;return t.collidable=e,i})},n.setObjectsCulled=function(t,e){return this.withObjects(t,function(t){var i=t.culled!==e;return t.culled=e,i})},n.setObjectsSelected=function(t,e){return this.withObjects(t,function(t){var i=t.selected!==e;return t.selected=e,i})},n.setObjectsHighlighted=function(t,e){return this.withObjects(t,function(t){var i=t.highlighted!==e;return t.highlighted=e,i})},n.setObjectsXRayed=function(t,e){return this.withObjects(t,function(t){var i=t.xrayed!==e;return i&&(t.xrayed=e),i})},n.setObjectsColorized=function(t,e){return this.withObjects(t,function(t){t.colorize=e})},n.setObjectsOpacity=function(t,e){return this.withObjects(t,function(t){var i=t.opacity!==e;return i&&(t.opacity=e),i})},n.setObjectsPickable=function(t,e){return this.withObjects(t,function(t){var i=t.pickable!==e;return i&&(t.pickable=e),i})},n.setObjectsClippable=function(t,e){return this.withObjects(t,function(t){var i=t.clippable!==e;return i&&(t.clippable=e),i})},n.withObjects=function(t,e){for(var i=!1,r=0,n=t.length;r<n;r++){var s=this.objects[t[r]];s&&(i=e(s)||i)}return i},n.destroy=function(){t.prototype.destroy.call(this)},d(i,[{key:\"gammaFactor\",get:function(){return 1}},{key:\"qualityRender\",get:function(){return b(this,Dt)[Dt]},set:function(t){b(this,Dt)[Dt]!==t&&(b(this,Dt)[Dt]=t,this.redraw())}},{key:\"numObjects\",get:function(){return b(this,yt)[yt]}},{key:\"objectIds\",get:function(){return b(this,pt)[pt]||(b(this,pt)[pt]=Object.keys(this.objects)),b(this,pt)[pt]}},{key:\"numVisibleObjects\",get:function(){return b(this,bt)[bt]}},{key:\"visibleObjectIds\",get:function(){return b(this,wt)[wt]||(b(this,wt)[wt]=Object.keys(this.visibleObjects)),b(this,wt)[wt]}},{key:\"numXRayedObjects\",get:function(){return b(this,jt)[jt]}},{key:\"xrayedObjectIds\",get:function(){return b(this,gt)[gt]||(b(this,gt)[gt]=Object.keys(this.xrayedObjects)),b(this,gt)[gt]}},{key:\"numHighlightedObjects\",get:function(){return b(this,Ot)[Ot]}},{key:\"highlightedObjectIds\",get:function(){return b(this,Pt)[Pt]||(b(this,Pt)[Pt]=Object.keys(this.highlightedObjects)),b(this,Pt)[Pt]}},{key:\"numSelectedObjects\",get:function(){return b(this,mt)[mt]}},{key:\"selectedObjectIds\",get:function(){return b(this,kt)[kt]||(b(this,kt)[kt]=Object.keys(this.selectedObjects)),b(this,kt)[kt]}},{key:\"numColorizedObjects\",get:function(){return b(this,xt)[xt]}},{key:\"colorizedObjectIds\",get:function(){return b(this,Mt)[Mt]||(b(this,Mt)[Mt]=Object.keys(this.colorizedObjects)),b(this,Mt)[Mt]}},{key:\"opacityObjectIds\",get:function(){return b(this,At)[At]||(b(this,At)[At]=Object.keys(this.opacityObjects)),b(this,At)[At]}},{key:\"numOpacityObjects\",get:function(){return b(this,It)[It]}}]),i}(t);function Ut(){var t=this,e=this.viewer.scene.models;for(var i in e){var r=e[i];b(this,Vt)[Vt](r)}this.viewer.scene.onModelCreated.subscribe(function(e,i){b(t,Vt)[Vt](i)}),this.viewer.scene.onModelDestroyed.subscribe(function(e,i){b(t,Ct)[Ct](i)})}function Tt(t){var e=t.objects;for(var i in e){var r=this.viewer.renderer.rendererViewObjects[i];if(r.layerId==this.id){var n=new rt(this,e[i],r);this.objects[n.id]=n,b(this,yt)[yt]++,b(this,pt)[pt]=null}}}function zt(t){var e=t.objects;for(var i in e)this.objects[e[i].id]._destroy(),b(this,yt)[yt]--,b(this,pt)[pt]=null}var Ft=/*#__PURE__*/p(\"state\"),_t=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),Ft,{writable:!0,value:void 0}),r.view=e,b(f(r),Ft)[Ft]={fill:!!i.fill,fillColor:new Float32Array(i.fillColor||[.4,.4,.4]),fillAlpha:null!=i.fillAlpha?i.fillAlpha:.2,edges:!1!==i.edges,edgeColor:new Float32Array(i.edgeColor||[.2,.2,.2]),edgeAlpha:null!=i.edgeAlpha?i.edgeAlpha:.5,edgeWidth:null!=i.edgeWidth?i.edgeWidth:1,backfaces:!!i.backfaces},r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this)},d(e,[{key:\"fill\",get:function(){return b(this,Ft)[Ft].fill},set:function(t){b(this,Ft)[Ft].fill!==t&&(b(this,Ft)[Ft].fill=t,this.view.redraw())}},{key:\"fillColor\",get:function(){return b(this,Ft)[Ft].fillColor},set:function(t){var e=b(this,Ft)[Ft].fillColor;e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]||(e[0]=.4,e[1]=.4,e[2]=.4,this.view.redraw())}},{key:\"fillAlpha\",get:function(){return b(this,Ft)[Ft].fillAlpha},set:function(t){b(this,Ft)[Ft].fillAlpha!==t&&(b(this,Ft)[Ft].fillAlpha=t,this.view.redraw())}},{key:\"edges\",get:function(){return b(this,Ft)[Ft].edges},set:function(t){b(this,Ft)[Ft].edges!==t&&(b(this,Ft)[Ft].edges=t,this.view.redraw())}},{key:\"edgeColor\",get:function(){return b(this,Ft)[Ft].edgeColor},set:function(t){var e=b(this,Ft)[Ft].edgeColor;e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]||(e[0]=.2,e[1]=.2,e[2]=.2,this.view.redraw())}},{key:\"edgeAlpha\",get:function(){return b(this,Ft)[Ft].edgeAlpha},set:function(t){b(this,Ft)[Ft].edgeAlpha!==t&&(b(this,Ft)[Ft].edgeAlpha=t,this.view.redraw())}},{key:\"edgeWidth\",get:function(){return b(this,Ft)[Ft].edgeWidth},set:function(t){b(this,Ft)[Ft].edgeWidth=t,this.view.redraw()}},{key:\"backfaces\",get:function(){return b(this,Ft)[Ft].backfaces},set:function(t){b(this,Ft)[Ft].backfaces!==t&&(b(this,Ft)[Ft].backfaces=t,this.view.redraw())}},{key:\"hash\",get:function(){return\"\"}}]),e}(t),Rt=/*#__PURE__*/p(\"state\"),Wt=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),Rt,{writable:!0,value:void 0}),r.view=e,b(f(r),Rt)[Rt]={renderModes:i.renderModes||[I],edges:!1!==i.edges,edgeColor:new Float32Array(i.edgeColor||[.2,.2,.2]),edgeAlpha:null!=i.edgeAlpha?i.edgeAlpha:.5,edgeWidth:null!=i.edgeWidth?i.edgeWidth:1},r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this)},d(e,[{key:\"renderModes\",get:function(){return b(this,Rt)[Rt].renderModes},set:function(t){b(this,Rt)[Rt].renderModes=t,this.view.redraw()}},{key:\"edges\",get:function(){return b(this,Rt)[Rt].edges},set:function(t){b(this,Rt)[Rt].edges!==t&&(b(this,Rt)[Rt].edges=t,this.view.redraw())}},{key:\"edgeColor\",get:function(){return b(this,Rt)[Rt].edgeColor},set:function(t){var e=b(this,Rt)[Rt].edgeColor;t&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]||(e[0]=.2,e[1]=.2,e[2]=.2,this.view.redraw())}},{key:\"edgeAlpha\",get:function(){return b(this,Rt)[Rt].edgeAlpha},set:function(t){b(this,Rt)[Rt].edgeAlpha!==t&&(b(this,Rt)[Rt].edgeAlpha=t,this.view.redraw())}},{key:\"edgeWidth\",get:function(){return b(this,Rt)[Rt].edgeWidth},set:function(t){b(this,Rt)[Rt].edgeWidth!==t&&(b(this,Rt)[Rt].edgeWidth=t,this.view.redraw())}}]),e}(t),Et=/*#__PURE__*/p(\"state\"),Ht=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),Et,{writable:!0,value:void 0}),r.view=e,b(f(r),Et)[Et]={pointSize:null!=i.pointSize?i.pointSize:1,roundPoints:!1!==i.roundPoints,perspectivePoints:!1!==i.perspectivePoints,minPerspectivePointSize:null!=i.minPerspectivePointSize?i.minPerspectivePointSize:1,maxPerspectivePointSize:null!=i.maxPerspectivePointSize?i.maxPerspectivePointSize:6,filterIntensity:!!i.filterIntensity,minIntensity:null!=i.minIntensity?i.minIntensity:0,maxIntensity:null!=i.maxIntensity?i.maxIntensity:1},r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this)},d(e,[{key:\"pointSize\",get:function(){return b(this,Et)[Et].pointSize},set:function(t){b(this,Et)[Et].pointSize=t,this.view.redraw()}},{key:\"roundPoints\",get:function(){return b(this,Et)[Et].roundPoints},set:function(t){b(this,Et)[Et].roundPoints!==t&&(b(this,Et)[Et].roundPoints=t,this.view.rebuild())}},{key:\"perspectivePoints\",get:function(){return b(this,Et)[Et].perspectivePoints},set:function(t){b(this,Et)[Et].perspectivePoints!==t&&(b(this,Et)[Et].perspectivePoints=t,this.view.rebuild())}},{key:\"minPerspectivePointSize\",get:function(){return b(this,Et)[Et].minPerspectivePointSize},set:function(t){b(this,Et)[Et].minPerspectivePointSize!==t&&(b(this,Et)[Et].minPerspectivePointSize=t,this.view.rebuild())}},{key:\"maxPerspectivePointSize\",get:function(){return b(this,Et)[Et].maxPerspectivePointSize},set:function(t){b(this,Et)[Et].maxPerspectivePointSize!==t&&(b(this,Et)[Et].maxPerspectivePointSize=t,this.view.rebuild())}},{key:\"filterIntensity\",get:function(){return b(this,Et)[Et].filterIntensity},set:function(t){b(this,Et)[Et].filterIntensity!==t&&(b(this,Et)[Et].filterIntensity=t,this.view.rebuild())}},{key:\"minIntensity\",get:function(){return b(this,Et)[Et].minIntensity},set:function(t){b(this,Et)[Et].minIntensity!==t&&(b(this,Et)[Et].minIntensity=t,this.view.redraw())}},{key:\"maxIntensity\",get:function(){return b(this,Et)[Et].maxIntensity},set:function(t){b(this,Et)[Et].maxIntensity!==t&&(b(this,Et)[Et].maxIntensity=t,this.view.redraw())}},{key:\"hash\",get:function(){var t=b(this,Et)[Et];return t.pointSize+\";\\n        \"+t.roundPoints+\";\\n        \"+t.perspectivePoints+\";\\n        \"+t.minPerspectivePointSize+\";\\n        \"+t.maxPerspectivePointSize+\";\\n        \"+t.filterIntensity}}]),e}(t),qt=/*#__PURE__*/p(\"state\"),Xt=/*#__PURE__*/p(\"inverseMatrixDirty\"),Bt=/*#__PURE__*/p(\"transposedProjMatrixDirty\"),Nt=/*#__PURE__*/p(\"onViewBoundary\"),Gt=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).camera=void 0,s.onProjMatrix=void 0,Object.defineProperty(f(s),qt,{writable:!0,value:void 0}),Object.defineProperty(f(s),Xt,{writable:!0,value:void 0}),Object.defineProperty(f(s),Bt,{writable:!0,value:void 0}),Object.defineProperty(f(s),Nt,{writable:!0,value:void 0}),s.camera=i,b(f(s),qt)[qt]={near:n.near||.1,far:n.far||2e3,fov:n.fov||60,fovAxis:n.fovAxis||\"min\",projMatrix:q(),inverseProjMatrix:q(),transposedProjMatrix:q()},b(f(s),Xt)[Xt]=!0,b(f(s),Bt)[Bt]=!0,b(f(s),Nt)[Nt]=s.camera.view.onBoundary.subscribe(function(){s.setDirty()}),s.onProjMatrix=new e(new r),s}u(i,t);var n=i.prototype;return n.clean=function(){var t=this.camera.view.boundary,e=t[2]/t[3],i=b(this,qt)[qt].fovAxis,r=b(this,qt)[qt].fov;(\"x\"===i||\"min\"===i&&e<1||\"max\"===i&&e>1)&&(r/=e),function(t,e,i,r,n){var s=[],o=[];s[2]=i,o[2]=r,o[1]=s[2]*Math.tan(t/2),s[1]=-o[1],o[0]=o[1]*e,s[0]=-o[0],function(t,e,i){i||(i=q());var r=[t[0],t[1],t[2],0],n=[e[0],e[1],e[2],0];(function(t,e,i){i||(i=t),i[0]=t[0]+e[0],i[1]=t[1]+e[1],i[2]=t[2]+e[2],i[3]=t[3]+e[3]})(n,r,X),function(t,e,i){i||(i=t),i[0]=t[0]-e[0],i[1]=t[1]-e[1],i[2]=t[2]-e[2],i[3]=t[3]-e[3]}(n,r,B);var s=2*r[2],o=B[0],h=B[1],a=B[2];i[0]=s/o,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=s/h,i[6]=0,i[7]=0,i[8]=X[0]/o,i[9]=X[1]/h,i[10]=-X[2]/a,i[11]=-1,i[12]=0,i[13]=0,i[14]=-s*n[2]/a,i[15]=0}(s,o,n)}((r=Math.min(r,120))*(Math.PI/180),e,b(this,qt)[qt].near,b(this,qt)[qt].far,b(this,qt)[qt].projMatrix),b(this,Xt)[Xt]=!0,b(this,Bt)[Bt]=!0,this.camera.view.redraw(),this.onProjMatrix.dispatch(this,b(this,qt)[qt].projMatrix)},n.unproject=function(t,e,i,r,n){var s=this.camera.view.canvasElement,o=s.offsetWidth/2,h=s.offsetHeight/2;return i[0]=(t[0]-o)/o,i[1]=(t[1]-h)/h,i[2]=e,i[3]=1,J(this.inverseProjMatrix,i,r),z(r,1/r[3]),r[3]=1,r[1]*=-1,J(this.camera.inverseViewMatrix,r,n),n},n.destroy=function(){t.prototype.destroy.call(this),this.camera.view.onBoundary.unsubscribe(b(this,Nt)[Nt]),this.onProjMatrix.clear()},d(i,[{key:\"fov\",get:function(){return b(this,qt)[qt].fov},set:function(t){t!==b(this,qt)[qt].fov&&(b(this,qt)[qt].fov=t,this.setDirty())}},{key:\"fovAxis\",get:function(){return b(this,qt)[qt].fovAxis},set:function(t){t=t||\"min\",b(this,qt)[qt].fovAxis!==t&&(\"x\"!==t&&\"y\"!==t&&\"min\"!==t&&(this.error(\"Unsupported value for 'fovAxis': \"+t+\" - defaulting to 'min'\"),t=\"min\"),b(this,qt)[qt].fovAxis=t,this.setDirty())}},{key:\"near\",get:function(){return b(this,qt)[qt].near},set:function(t){b(this,qt)[qt].near!==t&&(b(this,qt)[qt].near=t,this.setDirty())}},{key:\"far\",get:function(){return b(this,qt)[qt].far},set:function(t){b(this,qt)[qt].far!==t&&(b(this,qt)[qt].far=t,this.setDirty())}},{key:\"projMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,qt)[qt].projMatrix}},{key:\"inverseProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,Xt)[Xt]&&(Y(b(this,qt)[qt].projMatrix,b(this,qt)[qt].inverseProjMatrix),b(this,Xt)[Xt]=!1),b(this,qt)[qt].inverseProjMatrix}},{key:\"transposedProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,Bt)[Bt]&&($(b(this,qt)[qt].projMatrix,b(this,qt)[qt].transposedProjMatrix),b(this,Bt)[Bt]=!1),b(this,qt)[qt].transposedProjMatrix}}]),i}(t);Gt.type=D;var Qt=/*#__PURE__*/p(\"state\"),Yt=/*#__PURE__*/p(\"inverseMatrixDirty\"),$t=/*#__PURE__*/p(\"transposedProjMatrixDirty\"),Jt=/*#__PURE__*/p(\"onViewBoundary\"),Kt=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).camera=void 0,s.onProjMatrix=void 0,Object.defineProperty(f(s),Qt,{writable:!0,value:void 0}),Object.defineProperty(f(s),Yt,{writable:!0,value:void 0}),Object.defineProperty(f(s),$t,{writable:!0,value:void 0}),Object.defineProperty(f(s),Jt,{writable:!0,value:void 0}),s.camera=i,b(f(s),Qt)[Qt]={near:n.near||.1,far:n.far||2e3,scale:n.scale||1,projMatrix:q(),inverseProjMatrix:q(),transposedProjMatrix:q()},s.onProjMatrix=new e(new r),b(f(s),Yt)[Yt]=!0,b(f(s),$t)[$t]=!0,b(f(s),Jt)[Jt]=s.camera.view.onBoundary.subscribe(function(){s.setDirty()}),s}u(i,t);var n=i.prototype;return n.clean=function(){var t,e,i,r,n=this.camera.view,s=.5*b(this,Qt)[Qt].scale,o=n.boundary,h=o[2],a=o[3],c=h/a;h>a?(t=-s,e=s,i=s/c,r=-s/c):(t=-s*c,e=s*c,i=s,r=-s),function(t,e,i,r,n,s,o){o||(o=q());var h=e-t,a=r-i,c=s-n;o[0]=2/h,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2/a,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=-2/c,o[11]=0,o[12]=-(t+e)/h,o[13]=-(r+i)/a,o[14]=-(s+n)/c,o[15]=1}(t,e,r,i,b(this,Qt)[Qt].near,b(this,Qt)[Qt].far,b(this,Qt)[Qt].projMatrix),b(this,Yt)[Yt]=!0,b(this,$t)[$t]=!0,this.camera.view.redraw(),this.onProjMatrix.dispatch(this,b(this,Qt)[Qt].projMatrix)},n.unproject=function(t,e,i,r,n){var s=this.camera.view.canvasElement,o=s.offsetWidth/2,h=s.offsetHeight/2;return i[0]=(t[0]-o)/o,i[1]=(t[1]-h)/h,i[2]=e,i[3]=1,J(this.inverseProjMatrix,i,r),z(r,1/r[3]),r[3]=1,r[1]*=-1,J(this.camera.inverseViewMatrix,r,n),n},n.destroy=function(){t.prototype.destroy.call(this),this.camera.view.onBoundary.unsubscribe(b(this,Jt)[Jt]),this.onProjMatrix.clear()},d(i,[{key:\"scale\",get:function(){return b(this,Qt)[Qt].scale},set:function(t){t<=0&&(t=.01),b(this,Qt)[Qt].scale=t,this.setDirty()}},{key:\"near\",get:function(){return b(this,Qt)[Qt].near},set:function(t){b(this,Qt)[Qt].near!==t&&(b(this,Qt)[Qt].near=t,this.setDirty())}},{key:\"far\",get:function(){return b(this,Qt)[Qt].far},set:function(t){b(this,Qt)[Qt].far!==t&&(b(this,Qt)[Qt].far=t,this.setDirty())}},{key:\"projMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,Qt)[Qt].projMatrix}},{key:\"inverseProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,Yt)[Yt]&&(Y(b(this,Qt)[Qt].projMatrix,b(this,Qt)[Qt].inverseProjMatrix),b(this,Yt)[Yt]=!1),b(this,Qt)[Qt].inverseProjMatrix}},{key:\"transposedProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,$t)[$t]&&($(b(this,Qt)[Qt].projMatrix,b(this,Qt)[Qt].transposedProjMatrix),b(this,$t)[$t]=!1),b(this,Qt)[Qt].transposedProjMatrix}}]),i}(t);Kt.type=S;var Zt=/*#__PURE__*/p(\"state\"),te=/*#__PURE__*/p(\"inverseProjMatrixDirty\"),ee=/*#__PURE__*/p(\"transposedProjMatrixDirty\"),ie=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).camera=void 0,s.onProjMatrix=void 0,Object.defineProperty(f(s),Zt,{writable:!0,value:void 0}),Object.defineProperty(f(s),te,{writable:!0,value:void 0}),Object.defineProperty(f(s),ee,{writable:!0,value:void 0}),s.camera=i,b(f(s),Zt)[Zt]={projMatrix:q(n.projMatrix||N()),inverseProjMatrix:q(),transposedProjMatrix:q()},s.onProjMatrix=new e(new r),b(f(s),te)[te]=!0,b(f(s),ee)[ee]=!1,s}u(i,t);var n=i.prototype;return n.unproject=function(t,e,i,r,n){var s=this.camera.view.canvasElement,o=s.offsetWidth/2,h=s.offsetHeight/2;return i[0]=(t[0]-o)/o,i[1]=(t[1]-h)/h,i[2]=e,i[3]=1,J(this.inverseProjMatrix,i,r),z(r,1/r[3]),r[3]=1,r[1]*=-1,J(this.camera.inverseViewMatrix,r,n),n},n.destroy=function(){t.prototype.destroy.call(this),this.onProjMatrix.clear()},d(i,[{key:\"projMatrix\",get:function(){return b(this,Zt)[Zt].projMatrix},set:function(t){b(this,Zt)[Zt].projMatrix.set(t),b(this,te)[te]=!0,b(this,ee)[ee]=!0,this.setDirty(),this.camera.view.redraw(),this.onProjMatrix.dispatch(this,b(this,Zt)[Zt].projMatrix)}},{key:\"inverseProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,te)[te]&&(Y(b(this,Zt)[Zt].projMatrix,b(this,Zt)[Zt].inverseProjMatrix),b(this,te)[te]=!1),b(this,Zt)[Zt].inverseProjMatrix}},{key:\"transposedProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,ee)[ee]&&($(b(this,Zt)[Zt].projMatrix,b(this,Zt)[Zt].transposedProjMatrix),b(this,ee)[ee]=!1),b(this,Zt)[Zt].transposedProjMatrix}}]),i}(t);ie.type=C;var re,ne,se,oe=q(),he=(re=s(3),ne=s(3),se=s(3),function(t){return re[0]=t[0],re[1]=t[1],re[2]=t[2],ne[0]=t[3],ne[1]=t[4],ne[2]=t[5],_(ne,re,se),Math.abs(W(se))}),ae=function(){var t=s(3),e=s(3),i=s(3);return function(r,n){t[0]=r[0],t[1]=r[1],t[2]=r[2],e[0]=r[3],e[1]=r[4],e[2]=r[5];var s=_(e,t,i),o=n[0]-r[0],h=r[3]-n[0],a=n[1]-r[1],c=r[4]-n[1],l=n[2]-r[2],d=r[5]-n[2];return s[0]+=o>h?o:h,s[1]+=a>c?a:c,s[2]+=l>d?l:d,Math.abs(W(s))}}();function ce(t,e){return void 0===e&&(e=U()),e[0]=(t[0]+t[3])/2,e[1]=(t[1]+t[4])/2,e[2]=(t[2]+t[5])/2,e}s(3);var le=/*#__PURE__*/function(){function t(){this.testVertex=void 0,this.offset=void 0,this.normal=void 0,this.normal=U(),this.offset=0,this.testVertex=U()}return t.prototype.set=function(t,e,i,r){var n=1/Math.sqrt(t*t+e*e+i*i);this.normal[0]=t*n,this.normal[1]=e*n,this.normal[2]=i*n,this.offset=r*n,this.testVertex[0]=this.normal[0]>=0?1:0,this.testVertex[1]=this.normal[1]>=0?1:0,this.testVertex[2]=this.normal[2]>=0?1:0},t}(),de=function(){this.planes=void 0,this.planes=[new le,new le,new le,new le,new le,new le]},ue=U(),ve=U(),fe=U(),ye=U(),pe=U(),be=U(),we=q(),je=q(),ge=U(),Oe=U(),Pe=U(),me=U(),ke=/*#__PURE__*/p(\"state\"),xe=/*#__PURE__*/p(\"frustum\"),Me=/*#__PURE__*/p(\"activeProjection\"),Ie=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).view=void 0,s.perspectiveProjection=void 0,s.orthoProjection=void 0,s.frustumProjection=void 0,s.customProjection=void 0,s.onProjectionType=void 0,s.onViewMatrix=void 0,s.onProjMatrix=void 0,s.onWorldAxis=void 0,s.onFrustum=void 0,Object.defineProperty(f(s),ke,{writable:!0,value:void 0}),Object.defineProperty(f(s),xe,{writable:!0,value:void 0}),Object.defineProperty(f(s),Me,{writable:!0,value:void 0}),s.onProjectionType=new e(new r),s.onViewMatrix=new e(new r),s.onProjMatrix=new e(new r),s.onWorldAxis=new e(new r),s.onFrustum=new e(new r),s.view=i,b(f(s),ke)[ke]={eye:U(n.eye||[0,0,10]),look:U(n.look||[0,0,0]),up:U(n.up||[0,1,0]),worldUp:U([0,1,0]),worldRight:U([1,0,0]),worldForward:U([0,0,-1]),worldAxis:new Float32Array(n.worldAxis||[1,0,0,0,1,0,0,0,1]),gimbalLock:!1!==n.gimbalLock,constrainPitch:!0===n.constrainPitch,projectionType:n.projectionType||D,deviceMatrix:n.deviceMatrix?q(n.deviceMatrix):N(),hasDeviceMatrix:!!n.deviceMatrix,viewMatrix:q(),viewNormalMatrix:q(),inverseViewMatrix:q()},b(f(s),xe)[xe]=new de,s.perspectiveProjection=new Gt(f(s)),s.orthoProjection=new Kt(f(s)),s.customProjection=new ie(f(s)),b(f(s),Me)[Me]=s.perspectiveProjection,s.perspectiveProjection.onProjMatrix.subscribe(function(){b(f(s),ke)[ke].projectionType===D&&s.onProjMatrix.dispatch(f(s),s.perspectiveProjection.projMatrix)}),s.orthoProjection.onProjMatrix.subscribe(function(){b(f(s),ke)[ke].projectionType===S&&s.onProjMatrix.dispatch(f(s),s.orthoProjection.projMatrix)}),s.frustumProjection.onProjMatrix.subscribe(function(){b(f(s),ke)[ke].projectionType===V&&s.onProjMatrix.dispatch(f(s),s.frustumProjection.projMatrix)}),s.customProjection.onProjMatrix.subscribe(function(){b(f(s),ke)[ke].projectionType===C&&s.onProjMatrix.dispatch(f(s),s.customProjection.projMatrix)}),s}u(i,t);var n=i.prototype;return n.clean=function(){var t,e=b(this,ke)[ke];this.projectionType===S?(_(b(this,ke)[ke].eye,b(this,ke)[ke].look,ge),H(ge,Oe),z(Oe,1e3,Pe),F(b(this,ke)[ke].look,Pe,me),t=me):t=b(this,ke)[ke].eye,e.hasDeviceMatrix?(Q(t,b(this,ke)[ke].look,b(this,ke)[ke].up,je),K(e.deviceMatrix,je,e.viewMatrix)):Q(t,b(this,ke)[ke].look,b(this,ke)[ke].up,e.viewMatrix),Y(b(this,ke)[ke].viewMatrix,b(this,ke)[ke].inverseViewMatrix),$(b(this,ke)[ke].inverseViewMatrix,b(this,ke)[ke].viewNormalMatrix),this.view.redraw(),function(t,e,i){var r=K(e,t,oe),n=r[0],s=r[1],o=r[2],h=r[3],a=r[4],c=r[5],l=r[6],d=r[7],u=r[8],v=r[9],f=r[10],y=r[11],p=r[12],b=r[13],w=r[14],j=r[15];(i=i||new de).planes[0].set(h-n,d-a,y-u,j-p),i.planes[1].set(h+n,d+a,y+u,j+p),i.planes[2].set(h-s,d-c,y-v,j-b),i.planes[3].set(h+s,d+c,y+v,j+b),i.planes[4].set(h-o,d-l,y-f,j-w),i.planes[5].set(h+o,d+l,y+f,j+w)}(b(this,ke)[ke].viewMatrix,b(this,Me)[Me].projMatrix,b(this,xe)[xe]),this.onViewMatrix.dispatch(this,b(this,ke)[ke].viewMatrix),this.onFrustum.dispatch(this,b(this,xe)[xe])},n.orbitYaw=function(t){var e=_(b(this,ke)[ke].eye,b(this,ke)[ke].look,ue);G(.0174532925*t,b(this,ke)[ke].gimbalLock?b(this,ke)[ke].worldUp:b(this,ke)[ke].up,we),e=Z(we,e,ve),this.eye=F(b(this,ke)[ke].look,e,fe),this.up=Z(we,b(this,ke)[ke].up,ye)},n.orbitPitch=function(t){if(!(b(this,ke)[ke].constrainPitch&&(t=L(b(this,ke)[ke].up,b(this,ke)[ke].worldUp)/a)<1)){var e=_(b(this,ke)[ke].eye,b(this,ke)[ke].look,ue);G(.0174532925*t,R(H(e,ve),H(b(this,ke)[ke].up,fe)),we),e=Z(we,e,ye),this.up=Z(we,b(this,ke)[ke].up,pe),this.eye=F(e,b(this,ke)[ke].look,be)}},n.yaw=function(t){var e=_(b(this,ke)[ke].look,b(this,ke)[ke].eye,ue);G(.0174532925*t,b(this,ke)[ke].gimbalLock?b(this,ke)[ke].worldUp:b(this,ke)[ke].up,we),e=Z(we,e,ve),this.look=F(e,b(this,ke)[ke].eye,fe),b(this,ke)[ke].gimbalLock&&(this.up=Z(we,b(this,ke)[ke].up,ye))},n.pitch=function(t){if(!(b(this,ke)[ke].constrainPitch&&(t=L(b(this,ke)[ke].up,b(this,ke)[ke].worldUp)/a)<1)){var e=_(b(this,ke)[ke].look,b(this,ke)[ke].eye,ue);G(.0174532925*t,R(H(e,ve),H(b(this,ke)[ke].up,fe)),we),this.up=Z(we,b(this,ke)[ke].up,be),e=Z(we,e,ye),this.look=F(e,b(this,ke)[ke].eye,pe)}},n.pan=function(t){var e,i=_(b(this,ke)[ke].eye,b(this,ke)[ke].look,ue),r=[0,0,0];0!==t[0]&&(e=z(R(H(i,[]),H(b(this,ke)[ke].up,ve)),t[0]),r[0]+=e[0],r[1]+=e[1],r[2]+=e[2]),0!==t[1]&&(e=z(H(b(this,ke)[ke].up,fe),t[1]),r[0]+=e[0],r[1]+=e[1],r[2]+=e[2]),0!==t[2]&&(e=z(H(i,ye),t[2]),r[0]+=e[0],r[1]+=e[1],r[2]+=e[2]),this.eye=F(b(this,ke)[ke].eye,r,pe),this.look=F(b(this,ke)[ke].look,r,be)},n.zoom=function(t){var e=_(b(this,ke)[ke].eye,b(this,ke)[ke].look,ue),i=Math.abs(W(e)),r=Math.abs(i+t);if(!(r<.5)){var n=H(e,fe);this.eye=F(b(this,ke)[ke].look,z(n,r),ye)}},n.destroy=function(){t.prototype.destroy.call(this),this.onProjectionType.clear(),this.onViewMatrix.clear(),this.onProjMatrix.clear(),this.onWorldAxis.clear()},d(i,[{key:\"project\",get:function(){return b(this,Me)[Me]}},{key:\"eye\",get:function(){return b(this,ke)[ke].eye},set:function(t){b(this,ke)[ke].eye.set(t),this.setDirty()}},{key:\"look\",get:function(){return b(this,ke)[ke].look},set:function(t){b(this,ke)[ke].look.set(t),this.setDirty()}},{key:\"up\",get:function(){return b(this,ke)[ke].up},set:function(t){b(this,ke)[ke].up.set(t),this.setDirty()}},{key:\"worldUp\",get:function(){return b(this,ke)[ke].worldUp}},{key:\"worldRight\",get:function(){return b(this,ke)[ke].worldRight}},{key:\"worldForward\",get:function(){return b(this,ke)[ke].worldForward}},{key:\"constrainPitch\",get:function(){return b(this,ke)[ke].constrainPitch},set:function(t){b(this,ke)[ke].constrainPitch=t}},{key:\"gimbalLock\",get:function(){return b(this,ke)[ke].gimbalLock},set:function(t){b(this,ke)[ke].gimbalLock=t}},{key:\"worldAxis\",get:function(){return b(this,ke)[ke].worldAxis},set:function(t){var e=b(this,ke)[ke];e.worldAxis.set(t),e.worldRight[0]=e.worldAxis[0],e.worldRight[1]=e.worldAxis[1],e.worldRight[2]=e.worldAxis[2],e.worldUp[0]=e.worldAxis[3],e.worldUp[1]=e.worldAxis[4],e.worldUp[2]=e.worldAxis[5],e.worldForward[0]=e.worldAxis[6],e.worldForward[1]=e.worldAxis[7],e.worldForward[2]=e.worldAxis[8],this.onWorldAxis.dispatch(this,e.worldAxis)}},{key:\"deviceMatrix\",get:function(){return b(this,ke)[ke].deviceMatrix},set:function(t){b(this,ke)[ke].deviceMatrix.set(t||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),b(this,ke)[ke].hasDeviceMatrix=!!t,this.setDirty()}},{key:\"xUp\",get:function(){return b(this,ke)[ke].worldUp[0]>b(this,ke)[ke].worldUp[1]&&b(this,ke)[ke].worldUp[0]>b(this,ke)[ke].worldUp[2]}},{key:\"yUp\",get:function(){return b(this,ke)[ke].worldUp[1]>b(this,ke)[ke].worldUp[0]&&b(this,ke)[ke].worldUp[1]>b(this,ke)[ke].worldUp[2]}},{key:\"zUp\",get:function(){return b(this,ke)[ke].worldUp[2]>b(this,ke)[ke].worldUp[0]&&b(this,ke)[ke].worldUp[2]>b(this,ke)[ke].worldUp[1]}},{key:\"eyeLookDist\",get:function(){return W(_(b(this,ke)[ke].look,b(this,ke)[ke].eye,ue))}},{key:\"viewMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,ke)[ke].viewMatrix}},{key:\"inverseViewMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,ke)[ke].inverseViewMatrix}},{key:\"projMatrix\",get:function(){return b(this,Me)[Me].projMatrix}},{key:\"frustum\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,xe)[xe]}},{key:\"projectionType\",get:function(){return b(this,ke)[ke].projectionType},set:function(t){t=t||D,b(this,ke)[ke].projectionType!==t&&(t===D?b(this,Me)[Me]=this.perspectiveProjection:t===S?b(this,Me)[Me]=this.orthoProjection:t===V?b(this,Me)[Me]=this.frustumProjection:t===C?b(this,Me)[Me]=this.customProjection:(this.error(\"Unsupported value for 'projection': \"+t+\" defaulting to PerspectiveProjectionType\"),b(this,Me)[Me]=this.perspectiveProjection,t=D),b(this,Me)[Me].clean(),b(this,ke)[ke].projectionType=t,this.clean(),this.onProjectionType.dispatch(this,b(this,ke)[ke].projectionType),this.onProjMatrix.dispatch(this,b(this,Me)[Me].projMatrix))}}]),i}(t),Ae={viewerId:\"\",time:0,startTime:0,prevTime:0,deltaTime:0},De=/*#__PURE__*/p(\"viewersRenderInfo\"),Se=/*#__PURE__*/p(\"viewerIDMap\"),Ve=/*#__PURE__*/p(\"taskQueue\"),Ce=/*#__PURE__*/p(\"taskBudget\"),Le=/*#__PURE__*/p(\"lastTime\"),Ue=/*#__PURE__*/p(\"elapsedTime\"),Te=/*#__PURE__*/p(\"runTasks\"),ze=/*#__PURE__*/p(\"runTasksUntil\"),Fe=/*#__PURE__*/p(\"fireTickEvents\"),_e=/*#__PURE__*/p(\"renderViewers\");function Re(t){b(this,ze)[ze](t+b(this,Ce)[Ce]),this.getNumTasks(),b(this,Ce)}function We(t){void 0===t&&(t=-1);for(var e=(new Date).getTime(),i=0;b(this,Ve)[Ve].length>0&&(t<0||e<t);){var r=b(this,Ve)[Ve].shift(),n=b(this,Ve)[Ve].shift();n?r.call(n):r(),e=(new Date).getTime(),i++}return i}function Ee(t){for(var e in Ae.time=t,qe.viewers)if(this.viewers.hasOwnProperty(e)){var i=this.viewers[e];Ae.viewerId=e,Ae.startTime=i.startTime,Ae.deltaTime=null!=Ae.prevTime?Ae.time-Ae.prevTime:0,i.onTick.dispatch(i,Ae)}Ae.prevTime=t}function He(){for(var t in this.viewers)if(this.viewers.hasOwnProperty(t)){var e=this.viewers[t],i=b(this,De)[De][t];i||(i=b(this,De)[De][t]={}),e.render({})}}var qe=new(/*#__PURE__*/function(){function t(){var t=this;Object.defineProperty(this,_e,{value:He}),Object.defineProperty(this,Fe,{value:Ee}),Object.defineProperty(this,ze,{value:We}),Object.defineProperty(this,Te,{value:Re}),this.viewers=void 0,Object.defineProperty(this,De,{writable:!0,value:{}}),Object.defineProperty(this,Se,{writable:!0,value:new m}),Object.defineProperty(this,Ve,{writable:!0,value:new k}),Object.defineProperty(this,Ce,{writable:!0,value:10}),Object.defineProperty(this,Le,{writable:!0,value:0}),Object.defineProperty(this,Ue,{writable:!0,value:0}),this.viewers={},requestAnimationFrame(function e(){var i=Date.now();b(t,Le)[Le]>0&&(b(t,Ue)[Ue]=i-b(t,Le)[Le]),b(t,Te)[Te](i),b(t,Fe)[Fe](i),b(t,_e)[_e](),b(t,Le)[Le]=i,requestAnimationFrame(e)})}var e=t.prototype;return e.registerViewer=function(t){if(t.id){if(this.viewers[t.id])return void console.error(\"[ERROR] Viewer \"+x(t.id)+\" already exists\")}else t.id=b(this,Se)[Se].addItem({});this.viewers[t.id]=t,b(this,De)[De][t.id]={}},e.deregisterViewer=function(t){this.viewers[t.id]&&(b(this,Se)[Se].removeItem(t.id),delete this.viewers[t.id],delete b(this,De)[De][t.id])},e.scheduleTask=function(t,e){b(this,Ve)[Ve].push(t),b(this,Ve)[Ve].push(e)},e.getNumTasks=function(){return b(this,Ve)[Ve].length},t}()),Xe=U(),Be=U(),Ne=U(),Ge=U(),Qe=U(),Ye=/*#__PURE__*/p(\"duration\"),$e=/*#__PURE__*/p(\"look1\"),Je=/*#__PURE__*/p(\"eye1\"),Ke=/*#__PURE__*/p(\"up1\"),Ze=/*#__PURE__*/p(\"look2\"),ti=/*#__PURE__*/p(\"eye2\"),ei=/*#__PURE__*/p(\"up2\"),ii=/*#__PURE__*/p(\"orthoScale1\"),ri=/*#__PURE__*/p(\"orthoScale2\"),ni=/*#__PURE__*/p(\"fit\"),si=/*#__PURE__*/p(\"trail\"),oi=/*#__PURE__*/p(\"flying\"),hi=/*#__PURE__*/p(\"flyEyeLookUp\"),ai=/*#__PURE__*/p(\"flyingEye\"),ci=/*#__PURE__*/p(\"flyingLook\"),li=/*#__PURE__*/p(\"callback\"),di=/*#__PURE__*/p(\"callbackScope\"),ui=/*#__PURE__*/p(\"time1\"),vi=/*#__PURE__*/p(\"time2\"),fi=/*#__PURE__*/p(\"flyingEyeLookUp\"),yi=/*#__PURE__*/p(\"fitFOV\"),pi=/*#__PURE__*/p(\"projection2\"),bi=/*#__PURE__*/p(\"projMatrix1\"),wi=/*#__PURE__*/p(\"projMatrix2\"),ji=/*#__PURE__*/p(\"jumpTo\"),gi=/*#__PURE__*/p(\"update\"),Oi=/*#__PURE__*/p(\"ease\"),Pi=/*#__PURE__*/p(\"easeInCubic\"),mi=/*#__PURE__*/p(\"easeOutExpo\"),ki=/*#__PURE__*/function(t){function i(i,n){var s;return s=t.call(this,i,n)||this,Object.defineProperty(f(s),gi,{value:Mi}),Object.defineProperty(f(s),ji,{value:xi}),s.view=void 0,s.camera=void 0,Object.defineProperty(f(s),Ye,{writable:!0,value:void 0}),Object.defineProperty(f(s),$e,{writable:!0,value:void 0}),Object.defineProperty(f(s),Je,{writable:!0,value:void 0}),Object.defineProperty(f(s),Ke,{writable:!0,value:void 0}),Object.defineProperty(f(s),Ze,{writable:!0,value:void 0}),Object.defineProperty(f(s),ti,{writable:!0,value:void 0}),Object.defineProperty(f(s),ei,{writable:!0,value:void 0}),Object.defineProperty(f(s),ii,{writable:!0,value:void 0}),Object.defineProperty(f(s),ri,{writable:!0,value:void 0}),Object.defineProperty(f(s),ni,{writable:!0,value:void 0}),Object.defineProperty(f(s),si,{writable:!0,value:void 0}),Object.defineProperty(f(s),oi,{writable:!0,value:void 0}),Object.defineProperty(f(s),hi,{writable:!0,value:void 0}),Object.defineProperty(f(s),ai,{writable:!0,value:void 0}),Object.defineProperty(f(s),ci,{writable:!0,value:void 0}),Object.defineProperty(f(s),li,{writable:!0,value:void 0}),Object.defineProperty(f(s),di,{writable:!0,value:void 0}),Object.defineProperty(f(s),ui,{writable:!0,value:void 0}),Object.defineProperty(f(s),vi,{writable:!0,value:void 0}),s.easing=void 0,Object.defineProperty(f(s),fi,{writable:!0,value:void 0}),Object.defineProperty(f(s),yi,{writable:!0,value:void 0}),Object.defineProperty(f(s),pi,{writable:!0,value:void 0}),Object.defineProperty(f(s),bi,{writable:!0,value:void 0}),Object.defineProperty(f(s),wi,{writable:!0,value:void 0}),s.onStarted=void 0,s.onStopped=void 0,s.onCancelled=void 0,s.view=i,s.camera=i.camera,b(f(s),$e)[$e]=U(),b(f(s),Je)[Je]=U(),b(f(s),Ke)[Ke]=U(),b(f(s),Ze)[Ze]=U(),b(f(s),ti)[ti]=U(),b(f(s),ei)[ei]=U(),b(f(s),ii)[ii]=1,b(f(s),ri)[ri]=1,b(f(s),oi)[oi]=!1,b(f(s),hi)[hi]=!1,b(f(s),ai)[ai]=!1,b(f(s),ci)[ci]=!1,b(f(s),li)[li]=null,b(f(s),di)[di]=null,b(f(s),ui)[ui]=null,b(f(s),vi)[vi]=null,s.easing=!0,b(f(s),si)[si]=!1,b(f(s),ni)[ni]=!0,b(f(s),Ye)[Ye]=500,s.onStarted=new e(new r),s.onStopped=new e(new r),s.onCancelled=new e(new r),s}u(i,t);var n=i.prototype;return n.flyTo=function(t,e){void 0===t&&(t={}),b(this,oi)[oi]&&this.stop(),b(this,oi)[oi]=!1,b(this,ai)[ai]=!1,b(this,ci)[ci]=!1,b(this,fi)[fi]=!1,b(this,li)[li]=e;var i,r,n,s,o=this.camera,h=!!t.projection&&t.projection!==o.projectionType;b(this,Je)[Je][0]=o.eye[0],b(this,Je)[Je][1]=o.eye[1],b(this,Je)[Je][2]=o.eye[2],b(this,$e)[$e][0]=o.look[0],b(this,$e)[$e][1]=o.look[1],b(this,$e)[$e][2]=o.look[2],b(this,Ke)[Ke][0]=o.up[0],b(this,Ke)[Ke][1]=o.up[1],b(this,Ke)[Ke][2]=o.up[2],b(this,ii)[ii]=o.orthoProjection.scale,b(this,ri)[ri]=t.orthoScale||b(this,ii)[ii],t.aabb?i=t.aabb:t.eye&&t.look||t.up?(r=t.eye,n=t.look,s=t.up):t.eye?r=t.eye:t.look?n=t.look:h||(i=this.view.aabb);var c=t.poi;if(i){if(i[3]<i[0]||i[4]<i[1]||i[5]<i[2])return;if(i[3]===i[0]&&i[4]===i[1]&&i[5]===i[2])return;var l=ce(i=i.slice());b(this,Ze)[Ze]=c||l;var d=H(_(b(this,Je)[Je],b(this,$e)[$e],Xe)),u=c?ae(i,c):he(i),v=t.fitFOV||b(this,yi)[yi],f=Math.abs(u/Math.tan(v*a));b(this,ri)[ri]=1.1*u,b(this,ti)[ti][0]=b(this,Ze)[Ze][0]+d[0]*f,b(this,ti)[ti][1]=b(this,Ze)[Ze][1]+d[1]*f,b(this,ti)[ti][2]=b(this,Ze)[Ze][2]+d[2]*f,b(this,ei)[ei][0]=b(this,Ke)[Ke][0],b(this,ei)[ei][1]=b(this,Ke)[Ke][1],b(this,ei)[ei][2]=b(this,Ke)[Ke][2],b(this,fi)[fi]=!0}else(r||n||s)&&(b(this,fi)[fi]=!!r&&!!n&&!!s,b(this,ai)[ai]=!!r&&!n,b(this,ci)[ci]=!!n&&!r,r&&(b(this,ti)[ti][0]=r[0],b(this,ti)[ti][1]=r[1],b(this,ti)[ti][2]=r[2]),n&&(b(this,Ze)[Ze][0]=n[0],b(this,Ze)[Ze][1]=n[1],b(this,Ze)[Ze][2]=n[2]),s&&(b(this,ei)[ei][0]=s[0],b(this,ei)[ei][1]=s[1],b(this,ei)[ei][2]=s[2]));h?(t.projection===S&&o.projectionType!==S&&(b(this,pi)[pi]=S,b(this,bi)[bi]=o.projMatrix.slice(),b(this,wi)[wi]=o.orthoProjection.projMatrix.slice(),o.projectionType=C),t.projection===D&&o.projectionType!==D&&(b(this,pi)[pi]=D,b(this,bi)[bi]=o.projMatrix.slice(),b(this,wi)[wi]=o.perspectiveProjection.projMatrix.slice(),o.projectionType=C)):b(this,pi)[pi]=null,this.onStarted.dispatch(this,null),b(this,ui)[ui]=Date.now(),b(this,vi)[vi]=b(this,ui)[ui]+(t.duration?1e3*t.duration:b(this,Ye)[Ye]),b(this,oi)[oi]=!0,qe.scheduleTask(b(this,gi)[gi],this)},n.jumpTo=function(t){b(this,ji)[ji](t)},n.stop=function(){if(b(this,oi)[oi]){b(this,oi)[oi]=!1,b(this,ui)[ui]=null,b(this,vi)[vi]=null,b(this,pi)[pi]&&(this.camera.projectionType=b(this,pi)[pi]);var t=b(this,li)[li];t&&(b(this,li)[li]=null,t()),this.onStopped.dispatch(this,null)}},n.cancel=function(){b(this,oi)[oi]&&(b(this,oi)[oi]=!1,b(this,ui)[ui]=null,b(this,vi)[vi]=null,b(this,li)[li]&&(b(this,li)[li]=null),this.onCancelled.dispatch(this,null))},n.destroy=function(){this.stop(),t.prototype.destroy.call(this),this.onStarted.clear(),this.onStopped.clear(),this.onCancelled.clear()},d(i,[{key:\"duration\",get:function(){return b(this,Ye)[Ye]/1e3},set:function(t){b(this,Ye)[Ye]=t?1e3*t:500,this.stop()}},{key:\"fit\",get:function(){return b(this,ni)[ni]},set:function(t){b(this,ni)[ni]=t}},{key:\"fitFOV\",get:function(){return b(this,yi)[yi]},set:function(t){b(this,yi)[yi]=t}},{key:\"trail\",get:function(){return b(this,si)[si]},set:function(t){b(this,si)[si]=t}}]),i}(t);function xi(t){b(this,oi)[oi]&&this.stop();var e,i,r,n,s=this.camera;t.aabb?e=t.aabb:t.eye||t.look||t.up?(i=t.eye,r=t.look,n=t.up):e=this.view.aabb;var o=t.poi;if(e){if(e[3]<=e[0]||e[4]<=e[1]||e[5]<=e[2])return;var h,c=o?ae(e,o):he(e);r=o||ce(e,r),b(this,si)[si]?_(s.look,r,Qe):_(s.eye,s.look,Qe),H(Qe),h=(void 0!==t.fit?t.fit:b(this,ni)[ni])?Math.abs(c/Math.tan((t.fitFOV||b(this,yi)[yi])*a)):W(_(s.eye,s.look,Xe)),z(Qe,h),s.eye=F(r,Qe,Xe),s.look=r,this.camera.orthoProjection.scale=1.1*c}else(i||r||n)&&(i&&(s.eye=i),r&&(s.look=r),n&&(s.up=n));t.projection&&(s.projectionType=t.projection)}function Mi(){if(b(this,oi)[oi]){var t=(Date.now()-b(this,ui)[ui])/(b(this,vi)[vi]-b(this,ui)[ui]),e=t>=1;t>1&&(t=1);var i=this.easing?b(ki,Oi)[Oi](t,0,1,1):t,r=this.camera;if(b(this,ai)[ai]||b(this,ci)[ci]?b(this,ai)[ai]?(_(r.eye,r.look,Qe),r.eye=E(i,0,1,b(this,Je)[Je],b(this,ti)[ti],Ne),r.look=_(Ne,Qe,Be)):b(this,ci)[ci]&&(r.look=E(i,0,1,b(this,$e)[$e],b(this,Ze)[Ze],Be),r.up=E(i,0,1,b(this,Ke)[Ke],b(this,ei)[ei],Ge)):b(this,fi)[fi]&&(r.eye=E(i,0,1,b(this,Je)[Je],b(this,ti)[ti],Ne),r.look=E(i,0,1,b(this,$e)[$e],b(this,Ze)[Ze],Be),r.up=E(i,0,1,b(this,Ke)[Ke],b(this,ei)[ei],Ge)),b(this,pi)[pi]){var n=b(this,pi)[pi]===S?b(ki,mi)[mi](t,0,1,1):b(ki,Pi)[Pi](t,0,1,1);r.customProjection.projMatrix=function(t,e,i,r,n,s){var o=q(),h=(t-0)/1;return o[0]=r[0]+h*(n[0]-r[0]),o[1]=r[1]+h*(n[1]-r[1]),o[2]=r[2]+h*(n[2]-r[2]),o[3]=r[3]+h*(n[3]-r[3]),o[4]=r[4]+h*(n[4]-r[4]),o[5]=r[5]+h*(n[5]-r[5]),o[6]=r[6]+h*(n[6]-r[6]),o[7]=r[7]+h*(n[7]-r[7]),o[8]=r[8]+h*(n[8]-r[8]),o[9]=r[9]+h*(n[9]-r[9]),o[10]=r[10]+h*(n[10]-r[10]),o[11]=r[11]+h*(n[11]-r[11]),o[12]=r[12]+h*(n[12]-r[12]),o[13]=r[13]+h*(n[13]-r[13]),o[14]=r[14]+h*(n[14]-r[14]),o[15]=r[15]+h*(n[15]-r[15]),o}(n,0,0,b(this,bi)[bi],b(this,wi)[wi])}else r.orthoProjection.scale=b(this,ii)[ii]+t*(b(this,ri)[ri]-b(this,ii)[ii]);if(e)return r.orthoProjection.scale=b(this,ri)[ri],void this.stop();qe.scheduleTask(b(this,gi)[gi],this)}}Object.defineProperty(ki,mi,{value:function(t,e,i,r){return i*(1-Math.pow(2,-10*t/r))+e}}),Object.defineProperty(ki,Pi,{value:function(t,e,i,r){return i*(t/=r)*t*t+e}}),Object.defineProperty(ki,Oi,{value:function(t,e,i,r){return-i*(t/=r)*(t-2)+e}});var Ii=/*#__PURE__*/p(\"onTick\"),Ai=/*#__PURE__*/p(\"backgroundColor\"),Di=/*#__PURE__*/p(\"backgroundColorFromAmbientLight\"),Si=/*#__PURE__*/p(\"resolutionScale\"),Vi=/*#__PURE__*/p(\"numObjects\"),Ci=/*#__PURE__*/p(\"objectIds\"),Li=/*#__PURE__*/p(\"numVisibleObjects\"),Ui=/*#__PURE__*/p(\"visibleObjectIds\"),Ti=/*#__PURE__*/p(\"numXRayedObjects\"),zi=/*#__PURE__*/p(\"xrayedObjectIds\"),Fi=/*#__PURE__*/p(\"numHighlightedObjects\"),_i=/*#__PURE__*/p(\"highlightedObjectIds\"),Ri=/*#__PURE__*/p(\"numSelectedObjects\"),Wi=/*#__PURE__*/p(\"selectedObjectIds\"),Ei=/*#__PURE__*/p(\"numColorizedObjects\"),Hi=/*#__PURE__*/p(\"colorizedObjectIds\"),qi=/*#__PURE__*/p(\"numOpacityObjects\"),Xi=/*#__PURE__*/p(\"opacityObjectIds\"),Bi=/*#__PURE__*/p(\"qualityRender\"),Ni=/*#__PURE__*/p(\"lightsHash\"),Gi=/*#__PURE__*/p(\"sectionPlanesHash\"),Qi=/*#__PURE__*/p(\"registerSectionPlane\"),Yi=/*#__PURE__*/p(\"deregisterSectionPlane\"),$i=/*#__PURE__*/p(\"initObjects\"),Ji=/*#__PURE__*/p(\"createObjects\"),Ki=/*#__PURE__*/p(\"destroyObjects\"),Zi=/*#__PURE__*/function(t){function i(i){var n;if(n=t.call(this,null,i)||this,Object.defineProperty(f(n),Ki,{value:nr}),Object.defineProperty(f(n),Ji,{value:rr}),Object.defineProperty(f(n),$i,{value:ir}),Object.defineProperty(f(n),Yi,{value:er}),Object.defineProperty(f(n),Qi,{value:tr}),n.viewIndex=void 0,n.camera=void 0,n.canvasElement=void 0,n.transparent=void 0,n.boundary=void 0,n.logarithmicDepthBufferEnabled=void 0,n.sao=void 0,n.cameraFlight=void 0,n.metrics=void 0,n.xrayMaterial=void 0,n.highlightMaterial=void 0,n.selectedMaterial=void 0,n.edgeMaterial=void 0,n.pointsMaterial=void 0,n.linesMaterial=void 0,n.objects=void 0,n.visibleObjects=void 0,n.xrayedObjects=void 0,n.highlightedObjects=void 0,n.selectedObjects=void 0,n.colorizedObjects=void 0,n.opacityObjects=void 0,n.sectionPlanes=void 0,n.sectionPlanesList=[],n.lights=void 0,n.lightsList=[],n.gammaOutput=void 0,n.layers=void 0,n.autoLayers=void 0,n.onBoundary=void 0,n.onObjectVisibility=void 0,n.onObjectXRayed=void 0,n.onLayerCreated=void 0,n.onLayerDestroyed=void 0,n.onSectionPlaneCreated=void 0,n.onSectionPlaneDestroyed=void 0,Object.defineProperty(f(n),Ii,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ai,{writable:!0,value:void 0}),Object.defineProperty(f(n),Di,{writable:!0,value:void 0}),Object.defineProperty(f(n),Si,{writable:!0,value:void 0}),Object.defineProperty(f(n),Vi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ci,{writable:!0,value:void 0}),Object.defineProperty(f(n),Li,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ui,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ti,{writable:!0,value:void 0}),Object.defineProperty(f(n),zi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Fi,{writable:!0,value:void 0}),Object.defineProperty(f(n),_i,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ri,{writable:!0,value:void 0}),Object.defineProperty(f(n),Wi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ei,{writable:!0,value:void 0}),Object.defineProperty(f(n),Hi,{writable:!0,value:void 0}),Object.defineProperty(f(n),qi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Xi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Bi,{writable:!0,value:void 0}),Object.defineProperty(f(n),Ni,{writable:!0,value:null}),Object.defineProperty(f(n),Gi,{writable:!0,value:null}),n.viewer=i.viewer,!((i.canvasElement||document.getElementById(i.canvasId))instanceof HTMLCanvasElement))throw\"Mandatory View config expected: valid canvasId or canvasElement\";n.viewIndex=0,n.objects={},n.visibleObjects={},n.xrayedObjects={},n.highlightedObjects={},n.selectedObjects={},n.colorizedObjects={},n.opacityObjects={},n.sectionPlanes={},n.sectionPlanesList=[],n.lights={},n.lightsList=[],n.layers={},b(f(n),Vi)[Vi]=0,b(f(n),Ci)[Ci]=null,b(f(n),Li)[Li]=0,b(f(n),Ui)[Ui]=null,b(f(n),Ti)[Ti]=0,b(f(n),zi)[zi]=null,b(f(n),Fi)[Fi]=0,b(f(n),_i)[_i]=null,b(f(n),Ri)[Ri]=0,b(f(n),Wi)[Wi]=null,b(f(n),Ei)[Ei]=0,b(f(n),Hi)[Hi]=null,b(f(n),qi)[qi]=0,b(f(n),Xi)[Xi]=null,b(f(n),Bi)[Bi]=!!i.qualityRender,n.gammaOutput=!0,b(f(n),Gi)[Gi]=null,b(f(n),Ni)[Ni]=null,n.onBoundary=new e(new r),b(f(n),Si)[Si]=1,b(f(n),Ai)[Ai]=U([i.backgroundColor?i.backgroundColor[0]:1,i.backgroundColor?i.backgroundColor[1]:1,i.backgroundColor?i.backgroundColor[2]:1]),b(f(n),Di)[Di]=!!i.backgroundColorFromAmbientLight,n.canvasElement=i.canvasElement,n.transparent=!!i.transparent,n.canvasElement.width=n.canvasElement.clientWidth,n.canvasElement.height=n.canvasElement.clientHeight,n.boundary=[n.canvasElement.offsetLeft,n.canvasElement.offsetTop,n.canvasElement.clientWidth,n.canvasElement.clientHeight];var s=0,o=0,h=0,a=0,c=0,l=0,d=null,u=null;return b(f(n),Ii)[Ii]=n.viewer.onTick.subscribe(function(){var t=n.canvasElement,e=b(f(n),Si)[Si]!==u,i=window.innerWidth!==s||window.innerHeight!==o,r=t.clientWidth!==h||t.clientHeight!==a,v=t.offsetLeft!==c||t.offsetTop!==l,y=t.parentElement;if(e||i||r||v||y!==d){if(e||r||v){var p=t.clientWidth,w=t.clientHeight;(e||r)&&(t.width=Math.round(t.clientWidth*b(f(n),Si)[Si]),t.height=Math.round(t.clientHeight*b(f(n),Si)[Si]));var j=n.boundary;j[0]=t.offsetLeft,j[1]=t.offsetTop,j[2]=p,j[3]=w,e&&!r||n.onBoundary.dispatch(f(n),j),h=p,a=w}e&&(u=b(f(n),Si)[Si]),i&&(s=window.innerWidth,o=window.innerHeight),v&&(c=t.offsetLeft,l=t.offsetTop),d=y}}),n.camera=new Ie(f(n)),n.sao=new ut(f(n),{}),n.cameraFlight=new ki(f(n),{duration:.5}),n.metrics=new lt(f(n),{units:i.units,scale:i.scale,origin:i.origin}),n.xrayMaterial=new _t(f(n),{fill:!0,fillColor:[.9,.7,.6],fillAlpha:.4,edges:!0,edgeColor:[.5,.4,.4],edgeAlpha:1,edgeWidth:1}),n.highlightMaterial=new _t(f(n),{fill:!0,fillColor:[1,1,0],fillAlpha:.5,edges:!0,edgeColor:[.5,.4,.4],edgeAlpha:1,edgeWidth:1}),n.selectedMaterial=new _t(f(n),{fill:!0,fillColor:[0,1,0],fillAlpha:.5,edges:!0,edgeColor:[.4,.5,.4],edgeAlpha:1,edgeWidth:1}),n.edgeMaterial=new Wt(f(n),{edgeColor:[0,0,0],edgeAlpha:1,edgeWidth:1,edges:!0,renderModes:[I]}),n.pointsMaterial=new Ht(f(n),{pointSize:1,roundPoints:!0,perspectivePoints:!0,minPerspectivePointSize:1,maxPerspectivePointSize:6,filterIntensity:!1,minIntensity:0,maxIntensity:1}),n.linesMaterial=new ft(f(n),{lineWidth:1}),n.lights={},b(f(n),Bi)[Bi]=!!i.qualityRender,n.autoLayers=!1!==i.autoLayers,n.logarithmicDepthBufferEnabled=!!i.logarithmicDepthBufferEnabled,n.onObjectVisibility=new e(new r),n.onObjectXRayed=new e(new r),n.onLayerCreated=new e(new r),n.onLayerDestroyed=new e(new r),n.onSectionPlaneCreated=new e(new r),n.onSectionPlaneDestroyed=new e(new r),b(f(n),$i)[$i](),n}u(i,t);var n=i.prototype;return n.registerViewObject=function(t){this.objects[t.id]=t,b(this,Vi)[Vi]++,b(this,Ci)[Ci]=null},n.deregisterViewObject=function(t){delete this.objects[t.id],delete this.visibleObjects[t.id],delete this.xrayedObjects[t.id],delete this.highlightedObjects[t.id],delete this.selectedObjects[t.id],delete this.colorizedObjects[t.id],delete this.opacityObjects[t.id],b(this,Vi)[Vi]--,b(this,Ci)[Ci]=null},n.objectVisibilityUpdated=function(t,e,i){void 0===i&&(i=!0),e?(this.visibleObjects[t.id]=t,b(this,Li)[Li]++):(delete this.visibleObjects[t.id],b(this,Li)[Li]--),b(this,Ui)[Ui]=null,i&&this.onObjectVisibility.dispatch(this,t)},n.objectXRayedUpdated=function(t,e,i){void 0===i&&(i=!0),e?(this.xrayedObjects[t.id]=t,b(this,Ti)[Ti]++):(delete this.xrayedObjects[t.id],b(this,Ti)[Ti]--),b(this,zi)[zi]=null,i&&this.onObjectXRayed.dispatch(this,t)},n.objectHighlightedUpdated=function(t,e){e?(this.highlightedObjects[t.id]=t,b(this,Fi)[Fi]++):(delete this.highlightedObjects[t.id],b(this,Fi)[Fi]--),b(this,_i)[_i]=null},n.objectSelectedUpdated=function(t,e){e?(this.selectedObjects[t.id]=t,b(this,Ri)[Ri]++):(delete this.selectedObjects[t.id],b(this,Ri)[Ri]--),b(this,Wi)[Wi]=null},n.objectColorizeUpdated=function(t,e){e?(this.colorizedObjects[t.id]=t,b(this,Ei)[Ei]++):(delete this.colorizedObjects[t.id],b(this,Ei)[Ei]--),b(this,Hi)[Hi]=null},n.objectOpacityUpdated=function(t,e){e?(this.opacityObjects[t.id]=t,b(this,qi)[qi]++):(delete this.opacityObjects[t.id],b(this,qi)[qi]--),b(this,Xi)[Xi]=null},n.createSectionPlane=function(t){var e=this,i=t.id||M();this.sectionPlanes[i]&&(this.error('SectionPlane with ID \"'+i+'\" already exists - will randomly-generate ID'),i=M());var r=new st(this,t);return b(this,Qi)[Qi](r),r.onDestroyed.one(function(){b(e,Yi)[Yi](r)}),r},n.clearSectionPlanes=function(){for(var t=Object.keys(this.sectionPlanes),e=0,i=t.length;e<i;e++)this.sectionPlanes[t[e]].destroy();this.sectionPlanesList.length=0,b(this,Gi)[Gi]=null},n.getSectionPlanesHash=function(){if(b(this,Gi)[Gi])return b(this,Gi)[Gi];if(0===this.sectionPlanesList.length)return b(this,Gi)[Gi]=\";\";for(var t=[],e=0,i=this.sectionPlanesList.length;e<i;e++)t.push(\"cp\");return t.push(\";\"),b(this,Gi)[Gi]=t.join(\"\"),b(this,Gi)[Gi]},n.registerLight=function(t){this.lightsList.push(t),this.lights[t.id]=t,b(this,Ni)[Ni]=null,this.rebuild()},n.deregisterLight=function(t){for(var e=0,i=this.lightsList.length;e<i;e++)if(this.lightsList[e].id===t.id)return this.lightsList.splice(e,1),b(this,Ni)[Ni]=null,delete this.lights[t.id],void this.rebuild()},n.clearLights=function(){for(var t=Object.keys(this.lights),e=0,i=t.length;e<i;e++)this.lights[t[e]].destroy()},n.getLightsHash=function(){if(b(this,Ni)[Ni])return b(this,Ni)[Ni];if(0===this.lightsList.length)return b(this,Ni)[Ni]=\";\";for(var t=[],e=this.lightsList,i=0,r=e.length;i<r;i++){var n=e[i];t.push(\"/\"),t.push(n.type),t.push(\"world\"===n.space?\"w\":\"v\"),n.castsShadow&&t.push(\"sh\")}return t.push(\";\"),b(this,Ni)[Ni]=t.join(\"\"),b(this,Ni)[Ni]},n.rebuild=function(){this.viewer.renderer.needsRebuild(this.viewIndex)},n.redraw=function(){this.viewer.renderer.setImageDirty(this.viewIndex)},n.destroy=function(){this.viewer.onTick.unsubscribe(b(this,Ii)[Ii]),t.prototype.destroy.call(this),this.onObjectVisibility.clear(),this.onObjectXRayed.clear(),this.onLayerCreated.clear(),this.onLayerDestroyed.clear(),this.onSectionPlaneCreated.clear(),this.onSectionPlaneDestroyed.clear()},n.getAmbientColorAndIntensity=function(){return[0,0,0,1]},n.setObjectsVisible=function(t,e){return this.withObjects(t,function(t){var i=t.visible!==e;return t.visible=e,i})},n.setObjectsCollidable=function(t,e){return this.withObjects(t,function(t){var i=t.collidable!==e;return t.collidable=e,i})},n.setObjectsCulled=function(t,e){return this.withObjects(t,function(t){var i=t.culled!==e;return t.culled=e,i})},n.setObjectsSelected=function(t,e){return this.withObjects(t,function(t){var i=t.selected!==e;return t.selected=e,i})},n.setObjectsHighlighted=function(t,e){return this.withObjects(t,function(t){var i=t.highlighted!==e;return t.highlighted=e,i})},n.setObjectsXRayed=function(t,e){return this.withObjects(t,function(t){var i=t.xrayed!==e;return i&&(t.xrayed=e),i})},n.setObjectsColorized=function(t,e){return this.withObjects(t,function(t){t.colorize=e})},n.setObjectsOpacity=function(t,e){return this.withObjects(t,function(t){var i=t.opacity!==e;return i&&(t.opacity=e),i})},n.setObjectsPickable=function(t,e){return this.withObjects(t,function(t){var i=t.pickable!==e;return i&&(t.pickable=e),i})},n.setObjectsClippable=function(t,e){return this.withObjects(t,function(t){var i=t.clippable!==e;return i&&(t.clippable=e),i})},n.withObjects=function(t,e){for(var i=!1,r=0,n=t.length;r<n;r++){var s=this.objects[t[r]];s&&(i=e(s)||i)}return i},n.createLayer=function(t){var e=this,i=this.layers[t.id];return i||(i=new Lt({id:t.id,view:this,viewer:this.viewer}),this.layers[t.id]=i,this.onLayerCreated.dispatch(this,i),i.onDestroyed.one(function(){delete e.layers[i.id],e.onLayerDestroyed.dispatch(e,i)})),i.autoDestroy=!1,i},d(i,[{key:\"aabb\",get:function(){return this.viewer.scene.aabb}},{key:\"backgroundColor\",get:function(){return b(this,Ai)[Ai]},set:function(t){t?(b(this,Ai)[Ai][0]=t[0],b(this,Ai)[Ai][1]=t[1],b(this,Ai)[Ai][2]=t[2]):(b(this,Ai)[Ai][0]=1,b(this,Ai)[Ai][1]=1,b(this,Ai)[Ai][2]=1),this.redraw()}},{key:\"backgroundColorFromAmbientLight\",get:function(){return b(this,Di)[Di]},set:function(t){b(this,Di)[Di]=!1!==t}},{key:\"resolutionScale\",get:function(){return b(this,Si)[Si]},set:function(t){if((t=t||1)!==b(this,Si)[Si]){b(this,Si)[Si]=t;var e=this.canvasElement;e.width=Math.round(e.clientWidth*b(this,Si)[Si]),e.height=Math.round(e.clientHeight*b(this,Si)[Si]),this.redraw()}}},{key:\"gammaFactor\",get:function(){return 1}},{key:\"qualityRender\",get:function(){return b(this,Bi)[Bi]},set:function(t){b(this,Bi)[Bi]!==t&&(b(this,Bi)[Bi]=t,this.redraw())}},{key:\"numObjects\",get:function(){return b(this,Vi)[Vi]}},{key:\"objectIds\",get:function(){return b(this,Ci)[Ci]||(b(this,Ci)[Ci]=Object.keys(this.objects)),b(this,Ci)[Ci]}},{key:\"numVisibleObjects\",get:function(){return b(this,Li)[Li]}},{key:\"visibleObjectIds\",get:function(){return b(this,Ui)[Ui]||(b(this,Ui)[Ui]=Object.keys(this.visibleObjects)),b(this,Ui)[Ui]}},{key:\"numXRayedObjects\",get:function(){return b(this,Ti)[Ti]}},{key:\"xrayedObjectIds\",get:function(){return b(this,zi)[zi]||(b(this,zi)[zi]=Object.keys(this.xrayedObjects)),b(this,zi)[zi]}},{key:\"numHighlightedObjects\",get:function(){return b(this,Fi)[Fi]}},{key:\"highlightedObjectIds\",get:function(){return b(this,_i)[_i]||(b(this,_i)[_i]=Object.keys(this.highlightedObjects)),b(this,_i)[_i]}},{key:\"numSelectedObjects\",get:function(){return b(this,Ri)[Ri]}},{key:\"selectedObjectIds\",get:function(){return b(this,Wi)[Wi]||(b(this,Wi)[Wi]=Object.keys(this.selectedObjects)),b(this,Wi)[Wi]}},{key:\"numColorizedObjects\",get:function(){return b(this,Ei)[Ei]}},{key:\"colorizedObjectIds\",get:function(){return b(this,Hi)[Hi]||(b(this,Hi)[Hi]=Object.keys(this.colorizedObjects)),b(this,Hi)[Hi]}},{key:\"opacityObjectIds\",get:function(){return b(this,Xi)[Xi]||(b(this,Xi)[Xi]=Object.keys(this.opacityObjects)),b(this,Xi)[Xi]}},{key:\"numOpacityObjects\",get:function(){return b(this,qi)[qi]}}]),i}(t);function tr(t){this.sectionPlanesList.push(t),this.sectionPlanes[t.id]=t,b(this,Gi)[Gi]=null,this.rebuild(),this.onSectionPlaneCreated.dispatch(this,t)}function er(t){for(var e=0,i=this.sectionPlanesList.length;e<i;e++)if(this.sectionPlanesList[e].id===t.id)return this.sectionPlanesList.splice(e,1),b(this,Gi)[Gi]=null,delete this.sectionPlanes[t.id],this.rebuild(),void this.onSectionPlaneDestroyed.dispatch(this,t)}function ir(){var t=this;for(var e in this.viewer.scene.models)b(this,Ji)[Ji](this.viewer.scene.models[e]);this.viewer.scene.onModelCreated.subscribe(function(e,i){b(t,Ji)[Ji](i)}),this.viewer.scene.onModelDestroyed.subscribe(function(e,i){b(t,Ki)[Ki](i)})}function rr(t){var e=this,i=t.objects,r=this.viewer.renderer.rendererViewObjects,n=function(){var t=i[s],n=r[s],o=\"default\",h=e.layers[o];if(!h){if(!e.autoLayers)return\"continue\";h=new Lt({id:o,view:e,viewer:e.viewer}),e.layers[o]=h,h.onDestroyed.one(function(){delete e.layers[h.id],e.onLayerDestroyed.dispatch(e,h)}),e.onLayerCreated.dispatch(e,h)}var a=new rt(h,t,n);h.registerViewObject(a),e.registerViewObject(a)};for(var s in i)n()}function nr(t){var e=t.objects;for(var i in e){var r=this.layers.default,n=this.objects[e[i].id];this.deregisterViewObject(n),r&&(r.deregisterViewObject(n),r.autoDestroy&&0===r.numObjects&&r.destroy())}}var sr=/*#__PURE__*/p(\"prefixMessageWithID\"),or=/*#__PURE__*/p(\"registerView\"),hr=/*#__PURE__*/p(\"deregisterView\"),ar=/*#__PURE__*/function(t){function s(i){var s;return s=t.call(this,null,{})||this,Object.defineProperty(f(s),hr,{value:dr}),Object.defineProperty(f(s),or,{value:lr}),Object.defineProperty(f(s),sr,{value:cr}),s.capabilities=void 0,s.onTick=void 0,s.onViewCreated=void 0,s.onViewDestroyed=void 0,s.scene=void 0,s.views=void 0,s.viewList=void 0,s.numViews=void 0,s.startTime=(new Date).getTime(),s.renderer=void 0,s.onTick=new e(new r),s.onViewCreated=new e(new r),s.onViewDestroyed=new e(new r),s.id=i.id||M(),s.viewList=[],s.numViews=0,s.views={},s.destroyed=!1,s.capabilities={maxViews:0,astcSupported:!1,etc1Supported:!1,etc2Supported:!1,dxtSupported:!1,bptcSupported:!1,pvrtcSupported:!1},s.scene=i.scene||new n,s.renderer=i.renderer,s.renderer.getCapabilities(s.capabilities),s.renderer.init(f(s)),qe.registerViewer(f(s)),s}u(s,t);var o=s.prototype;return o.createView=function(t){var e=this;if(this.viewList.length>=this.capabilities.maxViews)return new i(\"Attempted to create too many Views with View.createView() - maximum of \"+this.capabilities.maxViews+\" is allowed\");var r=t.id||M();if(this.views[r])return new i('View with ID \"'+r+'\" already exists');if(!((t.canvasElement||document.getElementById(t.canvasId))instanceof HTMLCanvasElement))return new i(\"Mandatory View config expected: valid canvasId or canvasElement\");var n=new Zi(function(t,e){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);return e}({viewId:r,viewer:this},t));return b(this,or)[or](n),n.viewIndex=this.renderer.registerView(n),n.onDestroyed.one(function(){b(e,hr)[hr](n),e.renderer.deregisterView(n.viewIndex),e.onViewDestroyed.dispatch(e,n)}),this.onViewCreated.dispatch(this,n),this.log(\"View created: \"+n.viewId),n},o.redraw=function(){for(var t in this.views)this.views[t].redraw()},o.log=function(t){t=\"[LOG] \"+b(this,sr)[sr](t),window.console.log(t)},o.warn=function(t){t=\"[WARN] \"+b(this,sr)[sr](t),window.console.warn(t)},o.error=function(t){t=\"[ERROR] \"+b(this,sr)[sr](t),window.console.error(t)},o.destroy=function(){if(!this.destroyed){for(var t in qe.deregisterViewer(this),this.views)this.views[t].destroy();this.onTick.clear(),this.onViewCreated.clear(),this.onViewDestroyed.clear()}},o.render=function(t){for(var e=0;e<this.viewList.length;e++)this.renderer.render(e,{force:!0})},s}(t);function cr(t){return\" [\"+this.constructor.name+' \"'+x(this.id)+'\"]: '+t}function lr(t){if(!this.views[t.id]){this.views[t.id]=t;for(var e=0;;e++)if(!this.viewList[e])return this.viewList[e]=t,this.numViews++,void(t.viewIndex=e)}}function dr(t){this.views[t.id]&&(delete this.views[t.id],delete this.viewList[t.viewIndex],this.numViews--)}var ur=/*#__PURE__*/p(\"state\"),vr=/*#__PURE__*/p(\"inverseMatrixDirty\"),fr=/*#__PURE__*/p(\"transposedProjMatrixDirty\"),yr=/*#__PURE__*/function(t){function i(i,n){var s;return void 0===n&&(n={}),(s=t.call(this,i,n)||this).camera=void 0,s.onProjMatrix=void 0,Object.defineProperty(f(s),ur,{writable:!0,value:void 0}),Object.defineProperty(f(s),vr,{writable:!0,value:void 0}),Object.defineProperty(f(s),fr,{writable:!0,value:void 0}),s.camera=i,b(f(s),ur)[ur]={projMatrix:q(),inverseProjMatrix:q(),transposedProjMatrix:q(),near:.1,far:1e4,left:null!=n.left?n.left:-1,right:null!=n.right?n.right:1,bottom:null!=n.bottom?n.bottom:-1,top:null!=n.top?n.top:1},s.onProjMatrix=new e(new r),b(f(s),vr)[vr]=!0,b(f(s),fr)[fr]=!0,s}u(i,t);var n=i.prototype;return n.clean=function(){!function(t,e,i,r,n,s,o){o||(o=q());var h=e-t,a=r-i,c=s-n;o[0]=2*n/h,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2*n/a,o[6]=0,o[7]=0,o[8]=(e+t)/h,o[9]=(r+i)/a,o[10]=-(s+n)/c,o[11]=-1,o[12]=0,o[13]=0,o[14]=-s*n*2/c,o[15]=0}(b(this,ur)[ur].left,b(this,ur)[ur].right,b(this,ur)[ur].bottom,b(this,ur)[ur].top,b(this,ur)[ur].near,b(this,ur)[ur].far,b(this,ur)[ur].projMatrix),b(this,vr)[vr]=!0,b(this,fr)[fr]=!0,this.camera.view.redraw(),this.onProjMatrix.dispatch(this,b(this,ur)[ur].projMatrix)},n.unproject=function(t,e,i,r,n){var s=this.camera.view.canvasElement,o=s.offsetWidth/2,h=s.offsetHeight/2;return i[0]=(t[0]-o)/o,i[1]=(t[1]-h)/h,i[2]=e,i[3]=1,J(this.inverseProjMatrix,i,r),z(r,1/r[3]),r[3]=1,r[1]*=-1,J(this.camera.inverseViewMatrix,r,n),n},n.destroy=function(){t.prototype.destroy.call(this),this.onProjMatrix.clear()},d(i,[{key:\"left\",get:function(){return b(this,ur)[ur].left},set:function(t){b(this,ur)[ur].left=t,this.setDirty()}},{key:\"right\",get:function(){return b(this,ur)[ur].right},set:function(t){b(this,ur)[ur].right=t,this.setDirty()}},{key:\"top\",get:function(){return b(this,ur)[ur].top},set:function(t){b(this,ur)[ur].top=t,this.setDirty()}},{key:\"bottom\",get:function(){return b(this,ur)[ur].bottom},set:function(t){b(this,ur)[ur].bottom=t,this.setDirty()}},{key:\"near\",get:function(){return b(this,ur)[ur].near},set:function(t){b(this,ur)[ur].near=t,this.setDirty()}},{key:\"far\",get:function(){return b(this,ur)[ur].far},set:function(t){b(this,ur)[ur].far=t,this.setDirty()}},{key:\"projMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,ur)[ur].projMatrix}},{key:\"inverseProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,vr)[vr]&&(Y(b(this,ur)[ur].projMatrix,b(this,ur)[ur].inverseProjMatrix),b(this,vr)[vr]=!1),b(this,ur)[ur].inverseProjMatrix}},{key:\"transposedProjMatrix\",get:function(){return this.dirty&&this.cleanIfDirty(),b(this,fr)[fr]&&($(b(this,ur)[ur].projMatrix,b(this,ur)[ur].transposedProjMatrix),b(this,fr)[fr]=!1),b(this,ur)[ur].transposedProjMatrix}}]),i}(t);yr.type=V;var pr=/*#__PURE__*/p(\"state\"),br=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),pr,{writable:!0,value:void 0}),r.view=e,b(f(r),pr)[pr]={type:\"ambient\",color:new Float32Array(i.color||[.7,.7,.7]),intensity:null!=i.intensity?i.intensity:1},r.view.registerLight(f(r)),r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.view.deregisterLight(this)},d(e,[{key:\"color\",get:function(){return b(this,pr)[pr].color},set:function(t){b(this,pr)[pr].color.set(t),this.view.redraw()}},{key:\"intensity\",get:function(){return b(this,pr)[pr].intensity},set:function(t){b(this,pr)[pr].intensity=void 0!==t?t:1,this.view.redraw()}}]),e}(t),wr=/*#__PURE__*/p(\"state\"),jr=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),wr,{writable:!0,value:void 0}),r.view=e,b(f(r),wr)[wr]={type:\"dir\",dir:new Float32Array(i.dir||[1,1,1]),color:new Float32Array(i.color||[.7,.7,.8]),intensity:null!=i.intensity?i.intensity:1,space:i.space||\"view\"},r.view.registerLight(f(r)),r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.view.deregisterLight(this),this.view.redraw()},d(e,[{key:\"dir\",get:function(){return b(this,wr)[wr].dir},set:function(t){b(this,wr)[wr].dir.set(t),this.view.redraw()}},{key:\"color\",get:function(){return b(this,wr)[wr].color},set:function(t){b(this,wr)[wr].color.set(t),this.view.redraw()}},{key:\"intensity\",get:function(){return b(this,wr)[wr].intensity},set:function(t){b(this,wr)[wr].intensity=t,this.view.redraw()}}]),e}(t),gr=/*#__PURE__*/p(\"state\"),Or=/*#__PURE__*/function(t){function e(e,i){var r;return void 0===i&&(i={}),(r=t.call(this,e,i)||this).view=void 0,Object.defineProperty(f(r),gr,{writable:!0,value:void 0}),r.view=e,b(f(r),gr)[gr]={type:\"point\",pos:new Float64Array(i.pos||[1,1,1]),color:new Float32Array(i.color||[.7,.7,.8]),intensity:1,attenuation:new Float32Array([i.constantAttenuation,i.linearAttenuation,i.quadraticAttenuation]),space:i.space||\"view\"},r.view.registerLight(f(r)),r}return u(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.view.deregisterLight(this),this.view.redraw()},d(e,[{key:\"pos\",get:function(){return b(this,gr)[gr].pos},set:function(t){b(this,gr)[gr].pos.set(t||[1,1,1]),this.view.redraw()}},{key:\"color\",get:function(){return b(this,gr)[gr].color},set:function(t){b(this,gr)[gr].color.set(t||[.7,.7,.8]),this.view.redraw()}},{key:\"intensity\",get:function(){return b(this,gr)[gr].intensity},set:function(t){t!==b(this,gr)[gr].intensity&&(b(this,gr)[gr].intensity=t,this.view.redraw())}},{key:\"constantAttenuation\",get:function(){return b(this,gr)[gr].attenuation[0]},set:function(t){b(this,gr)[gr].attenuation[0]=t,this.view.redraw()}},{key:\"linearAttenuation\",get:function(){return b(this,gr)[gr].attenuation[1]},set:function(t){b(this,gr)[gr].attenuation[1]=t,this.view.redraw()}},{key:\"quadraticAttenuation\",get:function(){return b(this,gr)[gr].attenuation[2]},set:function(t){b(this,gr)[gr].attenuation[2]=t,this.view.redraw()}}]),e}(t),Pr=/*#__PURE__*/p(\"viewObject\"),mr=/*#__PURE__*/p(\"gotCanvasPos\"),kr=/*#__PURE__*/p(\"gotOrigin\"),xr=/*#__PURE__*/p(\"gotDirection\"),Mr=/*#__PURE__*/p(\"gotIndices\"),Ir=/*#__PURE__*/p(\"gotLocalPos\"),Ar=/*#__PURE__*/p(\"gotWorldPos\"),Dr=/*#__PURE__*/p(\"gotViewPos\"),Sr=/*#__PURE__*/p(\"gotWorldNormal\"),Vr=/*#__PURE__*/p(\"gotUV\"),Cr=/*#__PURE__*/p(\"canvasPos\"),Lr=/*#__PURE__*/p(\"origin\"),Ur=/*#__PURE__*/p(\"direction\"),Tr=/*#__PURE__*/p(\"indices\"),zr=/*#__PURE__*/p(\"localPos\"),Fr=/*#__PURE__*/p(\"worldPos\"),_r=/*#__PURE__*/p(\"viewPos\"),Rr=/*#__PURE__*/p(\"worldNormal\"),Wr=/*#__PURE__*/p(\"uv\"),Er=/*#__PURE__*/function(){function t(){Object.defineProperty(this,Pr,{writable:!0,value:void 0}),Object.defineProperty(this,mr,{writable:!0,value:void 0}),Object.defineProperty(this,kr,{writable:!0,value:void 0}),Object.defineProperty(this,xr,{writable:!0,value:void 0}),Object.defineProperty(this,Mr,{writable:!0,value:void 0}),Object.defineProperty(this,Ir,{writable:!0,value:void 0}),Object.defineProperty(this,Ar,{writable:!0,value:void 0}),Object.defineProperty(this,Dr,{writable:!0,value:void 0}),Object.defineProperty(this,Sr,{writable:!0,value:void 0}),Object.defineProperty(this,Vr,{writable:!0,value:void 0}),Object.defineProperty(this,Cr,{writable:!0,value:void 0}),Object.defineProperty(this,Lr,{writable:!0,value:void 0}),Object.defineProperty(this,Ur,{writable:!0,value:void 0}),Object.defineProperty(this,Tr,{writable:!0,value:void 0}),Object.defineProperty(this,zr,{writable:!0,value:void 0}),Object.defineProperty(this,Fr,{writable:!0,value:void 0}),Object.defineProperty(this,_r,{writable:!0,value:void 0}),Object.defineProperty(this,Rr,{writable:!0,value:void 0}),Object.defineProperty(this,Wr,{writable:!0,value:void 0}),b(this,Pr)[Pr]=null,b(this,Cr)[Cr]=new Int16Array([0,0]),b(this,Lr)[Lr]=new Float64Array([0,0,0]),b(this,Ur)[Ur]=new Float64Array([0,0,0]),b(this,Tr)[Tr]=new Int32Array(3),b(this,zr)[zr]=new Float64Array([0,0,0]),b(this,Fr)[Fr]=new Float64Array([0,0,0]),b(this,_r)[_r]=new Float64Array([0,0,0]),b(this,Rr)[Rr]=new Float64Array([0,0,0]),b(this,Wr)[Wr]=new Float64Array([0,0]),b(this,kr)[kr]=!1,b(this,xr)[xr]=!1,b(this,Mr)[Mr]=!1,b(this,mr)[mr]=!1,b(this,Ir)[Ir]=!1,b(this,Ar)[Ar]=!1,b(this,Dr)[Dr]=!1,b(this,Sr)[Sr]=!1,b(this,Vr)[Vr]=!1,this.reset()}return t.prototype.reset=function(){b(this,Pr)[Pr]=null,b(this,mr)[mr]=!1,b(this,kr)[kr]=!1,b(this,xr)[xr]=!1,b(this,Mr)[Mr]=!1,b(this,Ir)[Ir]=!1,b(this,Ar)[Ar]=!1,b(this,Dr)[Dr]=!1,b(this,Sr)[Sr]=!1,b(this,Vr)[Vr]=!1},d(t,[{key:\"viewObject\",get:function(){return b(this,Pr)[Pr]},set:function(t){b(this,Pr)[Pr]=t}},{key:\"canvasPos\",get:function(){return b(this,mr)[mr]?b(this,Cr)[Cr]:void 0},set:function(t){t?(b(this,Cr)[Cr][0]=t[0],b(this,Cr)[Cr][1]=t[1],b(this,mr)[mr]=!0):b(this,mr)[mr]=!1}},{key:\"origin\",get:function(){return b(this,kr)[kr]?b(this,Lr)[Lr]:null},set:function(t){t?(b(this,Lr)[Lr][0]=t[0],b(this,Lr)[Lr][1]=t[1],b(this,Lr)[Lr][2]=t[2],b(this,kr)[kr]=!0):b(this,kr)[kr]=!1}},{key:\"direction\",get:function(){return b(this,xr)[xr]?b(this,Ur)[Ur]:null},set:function(t){t?(b(this,Ur)[Ur][0]=t[0],b(this,Ur)[Ur][1]=t[1],b(this,Ur)[Ur][2]=t[2],b(this,xr)[xr]=!0):b(this,xr)[xr]=!1}},{key:\"indices\",get:function(){return b(this,Pr)[Pr]&&b(this,Mr)[Mr]?b(this,Tr)[Tr]:null},set:function(t){t?(b(this,Tr)[Tr][0]=t[0],b(this,Tr)[Tr][1]=t[1],b(this,Tr)[Tr][2]=t[2],b(this,Mr)[Mr]=!0):b(this,Mr)[Mr]=!1}},{key:\"localPos\",get:function(){return b(this,Pr)[Pr]&&b(this,Ir)[Ir]?b(this,zr)[zr]:null},set:function(t){t?(b(this,zr)[zr][0]=t[0],b(this,zr)[zr][1]=t[1],b(this,zr)[zr][2]=t[2],b(this,Ir)[Ir]=!0):b(this,Ir)[Ir]=!1}},{key:\"worldPos\",get:function(){return b(this,Pr)[Pr]&&b(this,Ar)[Ar]?b(this,Fr)[Fr]:null},set:function(t){t?(b(this,Fr)[Fr][0]=t[0],b(this,Fr)[Fr][1]=t[1],b(this,Fr)[Fr][2]=t[2],b(this,Ar)[Ar]=!0):b(this,Ar)[Ar]=!1}},{key:\"viewPos\",get:function(){return b(this,Pr)[Pr]&&b(this,Dr)[Dr]?b(this,_r)[_r]:null},set:function(t){t?(b(this,_r)[_r][0]=t[0],b(this,_r)[_r][1]=t[1],b(this,_r)[_r][2]=t[2],b(this,Dr)[Dr]=!0):b(this,Dr)[Dr]=!1}},{key:\"worldNormal\",get:function(){return b(this,Pr)[Pr]&&b(this,Sr)[Sr]?b(this,Rr)[Rr]:null},set:function(t){t?(b(this,Rr)[Rr][0]=t[0],b(this,Rr)[Rr][1]=t[1],b(this,Rr)[Rr][2]=t[2],b(this,Sr)[Sr]=!0):b(this,Sr)[Sr]=!1}},{key:\"uv\",get:function(){return b(this,Pr)[Pr]&&b(this,Vr)[Vr]?b(this,Wr)[Wr]:null},set:function(t){t?(b(this,Wr)[Wr][0]=t[0],b(this,Wr)[Wr][1]=t[1],b(this,Vr)[Vr]=!0):b(this,Vr)[Vr]=!1}}]),t}();export{br as AmbientLight,Ie as Camera,ki as CameraFlightAnimation,ie as CustomProjection,jr as DirLight,Wt as EdgeMaterial,_t as EmphasisMaterial,yr as FrustumProjection,lt as Metrics,Kt as OrthoProjection,Gt as PerspectiveProjection,Er as PickResult,Or as PointLight,Ht as PointsMaterial,ut as SAO,st as SectionPlane,Zi as View,Lt as ViewLayer,rt as ViewObject,ar as Viewer};\n//# sourceMappingURL=index.es.map\n","\n/**\n * @private\n */\nexport const RENDER_PASSES = {\n\n    // Skipped - suppress rendering\n\n    NOT_RENDERED: 0,\n\n    // Normal rendering - mutually exclusive modes\n\n    COLOR_OPAQUE: 1,\n    COLOR_TRANSPARENT: 2,\n\n    // Emphasis silhouette rendering - mutually exclusive modes\n\n    SILHOUETTE_HIGHLIGHTED: 3,\n    SILHOUETTE_SELECTED: 4,\n    SILHOUETTE_XRAYED: 5,\n\n    // Edges rendering - mutually exclusive modes\n\n    EDGES_COLOR_OPAQUE: 6,\n    EDGES_COLOR_TRANSPARENT: 7,\n    EDGES_HIGHLIGHTED: 8,\n    EDGES_SELECTED: 9,\n    EDGES_XRAYED: 10,\n\n    // Picking\n\n    PICK: 11\n};\n\n","import {createVec4} from \"@xeokit/matrix\";\nimport {OrthoProjectionType} from \"@xeokit/constants\";\nimport {AmbientLight, DirLight, PerspectiveProjection, PointLight} from \"@xeokit/viewer\";\n\nimport type {RenderContext} from \"./RenderContext\";\nimport {RENDER_PASSES} from \"./RENDER_PASSES\";\nimport type {Layer} from \"./Layer\";\nimport {GLProgram, GLSampler} from \"@xeokit/webglutils\";\n\nconst tempVec4 = createVec4();\n\n/**\n * @private\n */\nexport abstract class LayerRenderer {\n\n    /**\n     * Initialization error messages\n     */\n    errors: string[] | undefined;\n\n    protected renderContext: RenderContext;\n\n    #hash: string;\n    #program: GLProgram | null;\n    #needRebuild: boolean;\n\n    #uniforms: {\n        renderPass: WebGLUniformLocation,\n        viewMatrix: WebGLUniformLocation,\n        projMatrix: WebGLUniformLocation,\n        worldMatrix: WebGLUniformLocation,\n        sectionPlanes: {\n            pos: WebGLUniformLocation,\n            dir: WebGLUniformLocation,\n            active: WebGLUniformLocation\n        }[];\n        lights: {\n            pos?: WebGLUniformLocation,\n            dir?: WebGLUniformLocation,\n            color: WebGLUniformLocation,\n            attenuation?: WebGLUniformLocation\n        }[];\n        pickInvisible: WebGLUniformLocation;\n        pickZFar: WebGLUniformLocation;\n        pickZNear: WebGLUniformLocation;\n        pointCloudIntensityRange: WebGLUniformLocation;\n        nearPlaneHeight: WebGLUniformLocation;\n        pointSize: WebGLUniformLocation;\n        gammaFactor: WebGLUniformLocation;\n        logDepthBufFC: WebGLUniformLocation;\n        sao: WebGLUniformLocation;\n        lightAmbient: WebGLUniformLocation;\n        color: WebGLUniformLocation;\n    }\n\n    #samplers: {\n        viewMatrices: GLSampler;\n        positions: GLSampler;\n        indices: GLSampler;\n        edgeIndices: GLSampler;\n        eachMeshMatrices: GLSampler;\n        eachMeshAttributes: GLSampler;\n        //    eachMeshOffsets: GLSampler;\n        eachEdgeOffset: GLSampler;\n        eachPrimitiveMesh: GLSampler;\n        eachEdgeMesh: GLSampler;\n        baseColorMap: GLSampler;\n        metallicRoughMap: GLSampler;\n        emissiveMap: GLSampler;\n        normalMap: GLSampler;\n        occlusionMap: GLSampler;\n    };\n\n    protected constructor(renderContext: RenderContext) {\n        this.renderContext = renderContext;\n        this.#needRebuild = true;\n        this.#build();\n    }\n\n    #build(): void {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n\n        this.#program = new GLProgram(gl, this.#buildShader());\n\n        if (this.#program.errors) {\n            this.errors = this.#program.errors;\n            return;\n        }\n\n        const program = this.#program;\n\n        this.#uniforms = {\n            renderPass: program.getLocation(\"renderPass\"),\n            viewMatrix: program.getLocation(\"viewMatrix\"),\n            projMatrix: program.getLocation(\"projMatrix\"),\n            worldMatrix: program.getLocation(\"worldMatrix\"),\n            sao: program.getLocation(\"sao\"),\n            logDepthBufFC: program.getLocation(\"logDepthBufFC\"),\n            gammaFactor: program.getLocation(\"gammaFactor\"),\n            pointSize: program.getLocation(\"pointSize\"),\n            nearPlaneHeight: program.getLocation(\"nearPlaneHeight\"),\n            pointCloudIntensityRange: program.getLocation(\"pointCloudIntensityRange\"),\n            pickZNear: program.getLocation(\"pickZNear\"),\n            pickZFar: program.getLocation(\"pickZFar\"),\n            pickInvisible: program.getLocation(\"pickInvisible\"),\n            color: program.getLocation(\"color\"),\n            lightAmbient: program.getLocation(\"lightAmbient\"),\n            lights: [],\n            sectionPlanes: []\n        };\n\n        const uniforms = this.#uniforms;\n\n        const lights = view.lightsList;\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light: any = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        dir: program.getLocation(\"lightDir\" + i)\n                    });\n                    break;\n                case \"point\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n                case \"spot\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        dir: program.getLocation(\"lightDir\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n            }\n        }\n\n        for (let i = 0, len = view.sectionPlanesList.length; i < len; i++) {\n            uniforms.sectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this.#samplers = {\n            viewMatrices: program.getSampler(\"viewMatrices\"),\n            positions: program.getSampler(\"positions\"),\n            indices: program.getSampler(\"indices\"),\n            edgeIndices: program.getSampler(\"edgeIndices\"),\n            eachMeshAttributes: program.getSampler(\"eachMeshAttributes\"),\n            eachMeshMatrices: program.getSampler(\"eachMeshMatrices\"),\n            eachEdgeOffset: program.getSampler(\"eachMeshOffset\"),\n            eachPrimitiveMesh: program.getSampler(\"eachMeshTriangleMesh\"),\n            eachEdgeMesh: program.getSampler(\"eachEdgeMesh\"),\n            baseColorMap: program.getSampler(\"baseColorMap\"),\n            metallicRoughMap: program.getSampler(\"metallicRoughMap\"),\n            emissiveMap: program.getSampler(\"emissiveMap\"),\n            normalMap: program.getSampler(\"normalMap\"),\n            occlusionMap: program.getSampler(\"occlusionMap\")\n        };\n\n        this.#hash = this.getHash();\n    }\n\n    #buildShader() {\n        return {\n            vertex: this.buildVertexShader(),\n            fragment: this.buildFragmentShader()\n        };\n    }\n\n    /**\n     * Generates vertex shader GLSL for the current View state\n     */\n    protected abstract buildVertexShader(): string;\n\n    /**\n     * Generates fragment shader GLSL for the current View state\n     */\n    protected abstract buildFragmentShader(): string;\n\n    /**\n     * Gets a hash for the View's current configuration as pertaining to the LayerRenderer.\n     */\n    protected abstract getHash(): string;\n\n    /**\n     * Indicates that the LayerRenderer may need to rebuild shaders\n     */\n    needRebuild() {\n        this.#needRebuild = true;\n    }\n\n    /**\n     * Gets if this LayerRenderer's configuration is still valid for the current View state.\n     */\n    #getValid() {\n        if (!this.#needRebuild) {\n            return true;\n        }\n        this.#needRebuild = false;\n        return this.#hash === this.getHash();\n    };\n\n    /**\n     * Draws the given Layer.\n     *\n     * @param layer The Layer to draw\n     */\n    draw(layer: Layer) {\n\n        if (this.#program && !this.#getValid()) {\n            this.#program.destroy();\n            this.#program = null;\n        }\n\n        if (!this.#program) {\n            this.#build();\n            if (this.errors) {\n                return;\n            }\n            this.renderContext.lastProgramId = -1;\n        }\n\n        const renderState = layer.renderState;\n        const program = this.#program;\n        const renderContext = this.renderContext;\n        const renderPass = renderContext.renderPass;\n        const gl = this.renderContext.gl;\n        const view = this.renderContext.view;\n        const uniforms = this.#uniforms;\n        const samplers = this.#samplers;\n\n        // @ts-ignore\n        if (renderContext.lastProgramId !== program.id) {\n            // @ts-ignore\n            renderContext.lastProgramId = program.id;\n            this.#bind();\n        }\n\n        if (uniforms.renderPass) {\n            gl.uniform1i(uniforms.renderPass, renderPass);\n        }\n\n        // if (uniforms.viewMatrix) {\n        //     //gl.uniformMatrix4fv(uniforms.viewMatrix, false, <Float32Array | GLfloat[]>layer.rtcViewMat.viewMatrix);\n        //     gl.uniformMatrix4fv(uniforms.viewMatrix, false, <Float32Array | GLfloat[]>view.camera.viewMatrix);\n        // }\n\n        if (uniforms.projMatrix) {\n            gl.uniformMatrix4fv(uniforms.projMatrix, false, <Float32Array | GLfloat[]>view.camera.projMatrix);\n        }\n\n        if (uniforms.worldMatrix) {\n            gl.uniformMatrix4fv(uniforms.worldMatrix, false, <Float32Array | GLfloat[]>layer.rendererModel.worldMatrix);\n        }\n\n        if (uniforms.color) {\n            if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n                const material = view.xrayMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n                const material = view.highlightMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n                const material = view.selectedMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else {\n                gl.uniform4fv(uniforms.color, new Float32Array([1, 1, 1]));\n            }\n        }\n\n        // if (view.sectionPlanesList.length) {\n        //     const numSectionPlanes = view.sectionPlanesList.length;\n        //     const origin = layer.renderState.origin;\n        //     const sectionPlanes = view.sectionPlanesList;\n        //     const baseIndex = layer.layerIndex * numSectionPlanes;\n        //     const drawFlags = rendererModel.drawFlags;\n        //     for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n        //         const sectionPlaneUniforms = this.#uniforms.sectionPlanes[sectionPlaneIndex];\n        //         if (sectionPlaneUniforms) {\n        //             const active = drawFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n        //             gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n        //             if (active) {\n        //                 const sectionPlane = sectionPlanes[sectionPlaneIndex];\n        //                 if (origin) {\n        //                     const rtcSectionPlanePos = rtc.getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, origin, tempVec3a);\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n        //                 } else {\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n        //                 }\n        //                 gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n        //             }\n        //         }\n        //     }\n        // }\n\n        if (samplers.viewMatrices) {\n            // @ts-ignore\n            renderState.dataTextureSet.viewMatrices.bindTexture(program, samplers.viewMatrices, renderContext.nextTextureUnit);\n        }\n        if (samplers.positions) {\n            // @ts-ignore\n            renderState.dataTextureSet.positions.bindTexture(program, samplers.positions, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshMatrices) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshMatrices.bindTexture(program, samplers.eachMeshMatrices, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshAttributes) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshAttributes.bindTexture(program, samplers.eachMeshAttributes, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachPrimitiveMesh) {\n            if (renderState.numIndices8Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_8Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_8Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices8Bits);\n            }\n            if (renderState.numIndices16Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_16Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_16Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices16Bits);\n            }\n            if (renderState.numIndices32Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_32Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_32Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices32Bits);\n            }\n        }\n        if (samplers.baseColorMap) {\n            samplers.baseColorMap.bindTexture(renderState.materialTextureSet.colorTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.metallicRoughMap) {\n            samplers.metallicRoughMap.bindTexture(renderState.materialTextureSet.metallicRoughnessTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.emissiveMap) {\n            samplers.emissiveMap.bindTexture(renderState.materialTextureSet.emissiveTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.occlusionMap) {\n            samplers.occlusionMap.bindTexture(renderState.materialTextureSet.occlusionTexture.texture2D, renderContext.nextTextureUnit);\n        }\n    }\n\n    #bind() {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n        const uniforms = this.#uniforms;\n        const project = view.camera.project;\n\n        // @ts-ignore\n        this.#program.bind();\n        // if (this.#uProjMatrix) {\n        //     gl.uniformMatrix4fv(this.#uProjMatrix, false, project.matrix);\n        // }\n        if (uniforms.lightAmbient) {      // @ts-ignore\n            gl.uniform4fv(uniforms.lightAmbient, view.getAmbientColorAndIntensity());\n        }\n        for (let i = 0, len = uniforms.lights.length; i < len; i++) {\n            const fragLightSourceUniforms = uniforms.lights[i];\n            const light = view.lightsList[i];\n            if (fragLightSourceUniforms.color) {\n                gl.uniform4f(fragLightSourceUniforms.color, light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (fragLightSourceUniforms.dir) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.dir, light.dir[0], light.dir[1], light.dir[2]);\n            }\n            if (fragLightSourceUniforms.pos) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.pos, light.pos[0], light.pos[1], light.pos[2]);\n            }\n            if (fragLightSourceUniforms.attenuation) { // @ts-ignore\n                gl.uniform1f(fragLightSourceUniforms.attenuation, light.attenuation);\n            }\n        }\n        if (uniforms.sao) {\n            const sao = view.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                // @ts-ignore\n                gl.uniform4fv(uniforms.sao, tempVec4);\n                // program.bindTexture(this.#uOcclusionTexture, renderContext.occlusionTexture, 0);\n            }\n        }\n        if (uniforms.gammaFactor) {\n            gl.uniform1f(uniforms.gammaFactor, view.gammaFactor);\n        }\n        if (uniforms.pointSize) {\n            gl.uniform1f(uniforms.pointSize, view.pointsMaterial.pointSize);\n        }\n        if (uniforms.nearPlaneHeight) {\n            gl.uniform1f(uniforms.nearPlaneHeight, (view.camera.projectionType === OrthoProjectionType) ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * view.camera.perspectiveProjection.fov * Math.PI / 180.0))));\n        }\n        if (uniforms.pickZNear) {\n            gl.uniform1f(uniforms.pickZNear, this.renderContext.pickZNear);\n            gl.uniform1f(uniforms.pickZFar, this.renderContext.pickZFar);\n        }\n        if (uniforms.pickInvisible) {\n            gl.uniform1i(uniforms.pickInvisible, this.renderContext.pickInvisible ? 1 : 0);\n        }\n        if (uniforms.logDepthBufFC) {\n            const logDepthBufFC = 2.0 / (Math.log((project as PerspectiveProjection).far + 1.0) / Math.LN2);\n            gl.uniform1f(uniforms.logDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    // protected get vertexShader(): string {\n    //     return `${this.vertHeader}\n    //     ${this.vertDataTextureDefs}\n    //     ${this.vertLogDepthBufDefs}\n    //     void main(void) {\n    //             ${this.vertDataTextureSamples}\n    //             ${this.vertLogDepthBufOutputs}\n    //     }`;\n    // }\n\n    protected get vertHeader(): string {\n        return `#version 300 es\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                precision highp float;\n                precision highp int;\n                precision highp usampler2D;\n                precision highp isampler2D;\n                precision highp sampler2D;\n                #else\n                precision mediump float;\n                precision mediump int;\n                precision mediump usampler2D;\n                precision mediump isampler2D;\n                precision mediump sampler2D;\n                uniform int renderPass;\n                #endif`;\n    }\n\n    protected get vertDataTextureDefs(): string {\n        return `uniform mediump sampler2D eachMeshMatrices;\n                uniform lowp usampler2D eachMeshAttributes;\n                uniform highp sampler2D eachMeshOffset;\n                uniform mediump usampler2D positions;\n                uniform highp usampler2D indices;\n                uniform mediump usampler2D eachPrimitiveMesh;\n                uniform highp sampler2D cameraMatrices;\n                uniform highp sampler2D sceneModelRendererMatrices;`;\n    }\n\n    protected get vertLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `uniform float logDepthBufFC;\n                    out float fragDepth;\n                    bool isPerspectiveMatrix(mat4 m) {\n                        return (m[2][3] == - 1.0);\n                    }\n                    out float isPerspective;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get vertDataTextureSamples(): string {\n        return \"\";\n    }\n\n    protected get vertLogDepthBufOutputs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `fragDepth = 1.0 + clipPos.w;\n                    isPerspective = float (isPerspectiveMatrix(projMatrix));`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragmentShader(): string {\n        return `${this.fragHeader}\n        ${this.fragGammaDefs}\n        ${this.fragSectionPlaneDefs}\n        ${this.fragLightDefs}\n        ${this.fragLogDepthBufDefs}\n        void main(void) {\n            ${this.fragSectionPlanesSlice}\n            ${this.fragLighting}\n            ${this.fragLogDepthBufOutput}\n        }`;\n    }\n\n    protected get fragHeader(): string {\n        return `#version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n       precision highp float;\n        precision highp int;\n        #else\n        precision mediump float;\n        precision mediump int;\n        #endif`;\n    }\n\n    protected get fragGammaDefs(): string {\n        return `uniform float gammaFactor;\n        vec4 linearToLinear( in vec4 value ) {\n            return value;\n        }\n        vec4 sRGBToLinear( in vec4 value ) {\n            return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n        }\n        vec4 gammaToLinear( in vec4 value) {\n            return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n        }\n        vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\n              return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        }`;\n    }\n\n    protected get fragLightDefs(): string {\n        const view = this.renderContext.view;\n        const src = [];\n        src.push(\"uniform vec4 lightAmbient;\");\n        for (let i = 0, len = view.lightsList.length; i < len; i++) {\n            const light: any = view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `in float isPerspective;\n                    uniform float logDepthBufFC;\n                    in float fragDepth;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLogDepthBufOutput(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return \"gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;\";\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLighting(): string {\n        const src = [];\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);\");\n        src.push(\"vec3 viewNormal = normalize(vec4(viewNormalMatrix * worldNormal).xyz);\");\n        src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n        src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n        src.push(\"float lambertian = 1.0;\");\n\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light: any = this.renderContext.view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n        src.push(\"vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));\");\n        src.push(\"meshColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);\");\n\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSAOOutput(): string {\n        if (this.renderContext.view.sao.enabled) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            return `float viewportWidth     = uSAOParams[0];\n                    float viewportHeight    = uSAOParams[1];\n                    float blendCutoff       = uSAOParams[2];\n                    float blendFactor       = uSAOParams[3];\n                    vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\n                    float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture(uOcclusionTexture, uv))) * blendFactor;\n                    outColor                = vec4(fragColor.rgb * ambient, 1.0);`;\n        } else {\n            return `outColor            = fragColor;`;\n        }\n    }\n\n    protected get fragOutput(): string {\n        return `outColor            = fragColor;`;\n    }\n\n\n    protected get fragSectionPlaneDefs(): string {\n        const src = [];\n        src.push(`in vec4 worldPosition;\n                  in vec4 meshFlags2;`);\n        for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n            src.push(`uniform bool sectionPlaneActive${i};\n                      uniform vec3 sectionPlanePos${i};\n                      uniform vec3 sectionPlaneDir${i};`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLightSourceUniforms(): string {\n        const src = [];\n        src.push(`uniform vec4 lightAmbient;`);\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light = this.renderContext.view.lightsList[i];\n            if (light instanceof AmbientLight) {\n                continue;\n            }\n            src.push(`uniform vec4 lightColor${i};`);\n            if (light instanceof DirLight) {\n                src.push(`uniform vec3 lightDir${i};`);\n            }\n            if (light instanceof PointLight) {\n                src.push(`uniform vec3 lightPos${i};`);\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSectionPlanesSlice(): string {\n        const src = [];\n        const clipping = (this.renderContext.view.sectionPlanesList.length > 0);\n        if (clipping) {\n            src.push(`bool clippable = (float(meshFlags2.x) > 0.0);\n                      if (clippable) {\n                          float dist = 0.0;`);\n            for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n                src.push(`if (sectionPlaneActive${i}) {\n                              dist += clamp(dot(-sectionPlaneDir${i}.xyz, worldPosition.xyz - sectionPlanePos${i}.xyz), 0.0, 1000.0);\n                          }`);\n            }\n            src.push(`if (dist > 0.0) { \n                          discard;\n                      }\n                  }`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragFlatShading(): string {\n        const src = [];\n        src.push(\"\");\n        return src.join(\"\\n\");\n    }\n\n    destroy() {\n        if (this.#program) {\n            this.#program.destroy();\n        }\n        this.#program = null;\n    }\n}\n","import {LayerRenderer} from \"./LayerRenderer\";\nimport type {RenderContext} from \"./RenderContext\";\n\nexport class FastColorTrianglesRenderer extends LayerRenderer {\n\n    constructor(renderContext: RenderContext) {\n        super(renderContext);\n    }\n\n    getHash(): string {\n        return `${this.renderContext.view.getSectionPlanesHash()}-${this.renderContext.view.getLightsHash()}`;\n    }\n\n    buildVertexShader(): string {\n        return `${this.vertHeader}   \n        \n                uniform int                 renderPass;   \n            \n                uniform highp   mat4        projMatrix;\n                uniform highp   mat4        worldMatrix;\n                      \n                uniform mediump sampler2D   viewMatrices;\n                           \n                uniform mediump usampler2D  eachPrimitiveMesh;\n                uniform lowp    usampler2D  eachMeshAttributes;\n                \n                uniform mediump sampler2D   eachMeshMatrices;\n                uniform mediump usampler2D  positions;\n                uniform highp   usampler2D  indices;\n                \n                uniform  float  logDepthBufFC;\n                 \n                out vec4        worldPosition;\n                flat out uint   meshFlags2r;                       \n                flat out uvec4  meshColor;\n                out float       fragDepth;\n                \n                bool isPerspectiveMatrix(mat4 m) {\n                    return (m[2][3] == - 1.0);\n                }\n                \n                out float isPerspective;\n                    \n                void main(void) {\n                                   \n                    int triangleIndex      = gl_VertexID / 3;\n                    \n                    int hPackedMeshIdIndex = (triangleIndex >> 3) & 1023;\n                    int vPackedMeshIdIndex = (triangleIndex >> 3) >> 10;\n                    \n                    int meshIndex          = int(texelFetch(eachPrimitiveMesh, ivec2(hPackedMeshIdIndex, vPackedMeshIdIndex), 0).r);                   \n                    uvec4 meshFlags        = texelFetch (eachMeshAttributes, ivec2(2, meshIndex), 0);\n\n                    if (int(meshFlags.x) != renderPass) {\n                        gl_Position = vec4(3.0, 3.0, 3.0, 1.0);\n                        return;\n                    } \n                 \n                    uvec4 meshFlags2 = texelFetch (eachMeshAttributes, ivec2(3, meshIndex), 0);\n\n                    ivec4 packedVertexBase = ivec4(texelFetch (eachMeshAttributes, ivec2(4, meshIndex), 0));\n                    ivec4 packedIndexBaseOffset = ivec4(texelFetch (eachMeshAttributes, ivec2(5, meshIndex), 0));\n                    int indexBaseOffset =   (packedIndexBaseOffset.r << 24) + \n                                            (packedIndexBaseOffset.g << 16) + \n                                            (packedIndexBaseOffset.b << 8) + \n                                            (packedIndexBaseOffset.a);\n\n                    int hIndex = (triangleIndex - indexBaseOffset) & 1023;\n                    int vIndex = (triangleIndex - indexBaseOffset) >> 10;\n\n                    ivec3 vertexIndices = ivec3(texelFetch(indices, ivec2(hIndex, vIndex), 0));\n                    ivec3 uniqueVertexIndexes = vertexIndices + (packedVertexBase.r << 24) + (packedVertexBase.g << 16) + (packedVertexBase.b << 8) + packedVertexBase.a;\n\n                    ivec3 indexPositionH = uniqueVertexIndexes & 1023;\n                    ivec3 indexPositionV = uniqueVertexIndexes >> 10;\n\n                    mat4 positionsDecompressMatrix = mat4 (\n                        texelFetch (eachMeshMatrices, ivec2(0, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(1, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(2, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(3, meshIndex), 0));\n                        \n                    mat4 meshMatrix = mat4 (\n                        texelFetch (eachMeshMatrices, ivec2(4, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(5, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(6, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(7, meshIndex), 0));\n\n                    ivec4 packedViewMatrixIndex = ivec4(texelFetch (eachMeshAttributes, ivec2(7, meshIndex), 0));\n                    int viewMatrixIndex = \n                            (packedViewMatrixIndex.r << 24) + \n                            (packedViewMatrixIndex.g << 16) + \n                            (packedViewMatrixIndex.b << 8) + \n                            (packedViewMatrixIndex.a);\n                   \n                    mat4 viewMatrix = mat4 (\n                        texelFetch (viewMatrices, ivec2(4, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(5, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(6, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(7, viewMatrixIndex), 0));\n\n                    vec3 _positions[3];\n                   \n                    _positions[0] = vec3(texelFetch(positions, ivec2(indexPositionH.r, indexPositionV.r), 0));\n                    _positions[1] = vec3(texelFetch(positions, ivec2(indexPositionH.g, indexPositionV.g), 0));\n                    _positions[2] = vec3(texelFetch(positions, ivec2(indexPositionH.b, indexPositionV.b), 0));\n  \n                    vec3  position       = _positions[gl_VertexID % 3];\n                   \n                    vec4  _worldPosition = worldMatrix * ((meshMatrix * positionsDecompressMatrix) * vec4(position, 1.0)); \n                    vec4  viewPosition   = viewMatrix * _worldPosition;                   \n                    vec4  clipPosition   = projMatrix * viewPosition;\n\n                    meshFlags2r     = meshFlags2.r;                     \n                    meshColor       = texelFetch (eachMeshAttributes, ivec2(0, meshIndex), 0);                          \n                    fragDepth       = 1.0 + clipPosition.w;\n                    isPerspective   = float (isPerspectiveMatrix(projMatrix));\n                    worldPosition   = _worldPosition;                                               \n                    \n                    gl_Position     = clipPosition;\n                }`;\n    }\n\n    buildFragmentShader(): string {\n        return `${this.fragHeader}                        \n    \n             flat   in uvec4    meshColor;\n                in float        fragDepth;\n                in float        isPerspective;    \n                flat in uint    meshFlags2r;        \n                uniform float   logDepthBufFC;                        \n    \n                ${this.fragSectionPlaneDefs}                  \n                ${this.fragLightSourceUniforms}                                                             \n    \n                out vec4 outColor;        \n    \n                void main(void) {         \n                \n                // src.push(\"float lambertian = 1.0;\");\n                // \n                //  vec3 xTangent = dFdx( vViewPosition.xyz );\n                //  vec3 yTangent = dFdy( vViewPosition.xyz );\n                // \n                //  vec3 viewNormal = normalize( cross( xTangent, yTangent ) );        \n    \n                    ${this.fragSectionPlanesSlice}                                    \n                    ${this.fragFlatShading}     \n          \n                    outColor = vec4(meshColor);                   \n                    gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;                        \n                }`;\n    }\n\n    // get lambertianLighting() : string{\n    //     const src = [];\n    //     src.push(\"createVec3 reflectedColor = createVec3(0.0, 0.0, 0.0);\");\n    //     src.push(\"createVec3 viewLightDir = createVec3(0.0, 0.0, -1.0);\");\n    //     src.push(\"float lambertian = 1.0;\");\n    //     for (let i = 0, len = this.view.lightsList.length; i < len; i++) {\n    //         const light = this.view.lightsList[i];\n    //         if (light.type === \"ambient\") {\n    //             continue;\n    //         }\n    //         if (light.type === \"dir\") {\n    //             src.push(\"viewLightDir = normalize((viewMatrix * createVec4(lightDir\" + i + \", 0.0)).xyz);\");\n    //         } else {\n    //             continue;\n    //         }\n    //         src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n    //         src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n    //     }\n    //     return src.join(\"\\n\");\n    // }\n\n}","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fsvg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img src=\"http://xeokit.io/img/kdtree.jpeg\" />\n *\n * # xeokit Boundaries Math Library\n *\n * ---\n *\n * ### *Tools for 2D and 3D boundary analysis, boundary transformation, and collision detection*\n *\n * ---\n *\n * * Axis-aligned boundaries (AABB2 and AABB3)\n * * Object-aligned boundaries (OBB)\n * * Transformable OOBs\n * * Create boundaries from positions\n * * Find center of positions\n * * FrustumProjection-boundary intersection tests\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/boundaries\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as boundaries from \"@xeokit/boundaries\";\n *\n * //..TODO\n * ````\n *\n * @module @xeokit/boundaries\n */\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec2, createVec3, lenVec3, mulMat4, subVec3} from \"@xeokit/matrix\";\nimport {MAX_DOUBLE, MIN_DOUBLE, newFloatArray} from \"@xeokit/math\";\nimport {decompressPoint3} from \"@xeokit/compression\";\n\n\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempMat4a = createMat4();\n\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3Int16(values?: IntArrayParam): Int16Array {\n    // @ts-ignore\n    return new Int16Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 2D axis-aligned bounding box.\n */\nexport function createAABB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 4);\n}\n\n/**\n * Returns a new, uninitialized 3D oriented bounding box (OBB).\n */\nexport function createOBB3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 32);\n}\n\n/**\n * Returns a new, uninitialized 2D oriented bounding box (OBB).\n */\nexport function createOBB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\n/** Returns a new 3D bounding sphere */\nexport function createSphere3(\n    x: number,\n    y: number,\n    z: number,\n    r: number\n): FloatArrayParam {\n    return newFloatArray([x, y, z, r]);\n}\n\n/**\n * Transforms an createOBB3 by a 4x4 \n */\nexport function transformOBB3(\n    m: FloatArrayParam,\n    p: FloatArrayParam,\n    p2: FloatArrayParam = p\n): FloatArrayParam {\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = m0 * x + m4 * y + m8 * z + m12;\n        p2[i + 1] = m1 * x + m5 * y + m9 * z + m13;\n        p2[i + 2] = m2 * x + m6 * y + m10 * z + m14;\n        p2[i + 3] = m3 * x + m7 * y + m11 * z + m15;\n    }\n\n    return p2;\n}\n\n\n/** Returns true if the first AABB2 contains the second AABB2.\n */\nexport function containsAABB2(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    return aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb1[2] <= aabb2[2];\n}\n\n/** Returns true if the first AABB3 contains the second AABB3.\n */\nexport function containsAABB3(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    const result =\n        aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb2[4] <= aabb1[4] &&\n        aabb1[2] <= aabb2[2] &&\n        aabb2[5] <= aabb1[5];\n    return result;\n}\n\n/**\n * Gets the diagonal size of an createAABB3 given as minima and maxima.\n */\nexport const getAABB3Diag: Function = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n    return (aabb: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n        subVec3(max, min, tempVec3);\n        return Math.abs(lenVec3(tempVec3));\n    };\n})();\n\n/**\n * Get a diagonal boundary size that is symmetrical about the given point.\n */\nexport const getAABB3DiagPoint = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n\n    return (aabb: FloatArrayParam, p: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n\n        const diagVec = subVec3(max, min, tempVec3);\n\n        const xneg = p[0] - aabb[0];\n        const xpos = aabb[3] - p[0];\n        const yneg = p[1] - aabb[1];\n        const ypos = aabb[4] - p[1];\n        const zneg = p[2] - aabb[2];\n        const zpos = aabb[5] - p[2];\n\n        diagVec[0] += xneg > xpos ? xneg : xpos;\n        diagVec[1] += yneg > ypos ? yneg : ypos;\n        diagVec[2] += zneg > zpos ? zneg : zpos;\n\n        return Math.abs(lenVec3(diagVec));\n    };\n})();\n\n/**\n * Gets the area of an AABB.\n */\nexport function getAABB3Area(aabb: FloatArrayParam): number {\n    const width = aabb[3] - aabb[0];\n    const height = aabb[4] - aabb[1];\n    const depth = aabb[5] - aabb[2];\n    return width * height * depth;\n}\n\n/**\n * Gets the center of an AABB.\n */\nexport function getAABB3Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    dest[0] = (aabb[0] + aabb[3]) / 2;\n    dest[1] = (aabb[1] + aabb[4]) / 2;\n    dest[2] = (aabb[2] + aabb[5]) / 2;\n    return dest;\n}\n\n/**\n * Gets the center of a 2D AABB.\n */\nexport function getAABB2Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec2()\n): FloatArrayParam {\n    dest[0] = (aabb[2] + aabb[0]) / 2;\n    dest[1] = (aabb[3] + aabb[1]) / 2;\n    return dest;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3(aabb: FloatArrayParam = createAABB3()): FloatArrayParam {\n    aabb[0] = MAX_DOUBLE;\n    aabb[1] = MAX_DOUBLE;\n    aabb[2] = MAX_DOUBLE;\n    aabb[3] = MIN_DOUBLE;\n    aabb[4] = MIN_DOUBLE;\n    aabb[5] = MIN_DOUBLE;\n    return aabb;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3Int16(aabb: IntArrayParam = createAABB3Int16()): IntArrayParam {\n    aabb[0] = 65535;\n    aabb[1] = 65535;\n    aabb[2] = 65535;\n    aabb[3] = -65535;\n    aabb[4] = -65535;\n    aabb[5] = -65535;\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n *\n * @private\n */\nexport function AABB3ToOBB3(aabb: FloatArrayParam = createAABB3(), obb = createOBB3()): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Expands the first axis-aligned 3D boundary to enclose the second, if required.\n */\nexport function expandAABB3(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[2] > aabb2[2]) {\n        aabb1[2] = aabb2[2];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    if (aabb1[5] < aabb2[5]) {\n        aabb1[5] = aabb2[5];\n    }\n    return aabb1;\n}\n\n/**\n * Expands the first axis-aligned 2D boundary to enclose the second, if required.\n */\nexport function expandAABB2(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    return aabb1;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given point, if needed.\n */\nexport function expandAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[2] > p[2]) {\n        aabb[2] = p[2];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    if (aabb[5] < p[2]) {\n        aabb[5] = p[2];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 2D boundary to enclose the given point, if needed.\n */\nexport function expandAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given points, if needed.\n */\nexport function expandAABB3Points3(aabb: FloatArrayParam, positions: FloatArrayParam): FloatArrayParam {\n    var x;\n    var y;\n    var z;\n    for (var i = 0, len = positions.length; i < len; i += 3) {\n        x = positions[i];\n        y = positions[i + 1];\n        z = positions[i + 2];\n        if (aabb[0] > x) {\n            aabb[0] = x;\n        }\n        if (aabb[1] > y) {\n            aabb[1] = y;\n        }\n        if (aabb[2] > z) {\n            aabb[2] = z;\n        }\n        if (aabb[3] < x) {\n            aabb[3] = x;\n        }\n        if (aabb[4] < y) {\n            aabb[4] = y;\n        }\n        if (aabb[5] < z) {\n            aabb[5] = z;\n        }\n    }\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n */\nexport function ABB3ToOBB3(\n    aabb: FloatArrayParam,\n    obb: FloatArrayParam = createOBB3()\n): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport const positions3ToAABB3 = (() => {\n    const p = newFloatArray(3);\n\n    return (\n        positions: FloatArrayParam,\n        aabb: FloatArrayParam,\n        positionsDecompressMatrix: FloatArrayParam\n    ): FloatArrayParam => {\n        aabb = aabb || createAABB3();\n\n        let xmin = MAX_DOUBLE;\n        let ymin = MAX_DOUBLE;\n        let zmin = MAX_DOUBLE;\n        let xmax = MIN_DOUBLE;\n        let ymax = MIN_DOUBLE;\n        let zmax = MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = positions.length; i < len; i += 3) {\n            if (positionsDecompressMatrix) {\n                p[0] = positions[i + 0];\n                p[1] = positions[i + 1];\n                p[2] = positions[i + 2];\n\n                decompressPoint3(p, positionsDecompressMatrix, p);\n\n                x = p[0];\n                y = p[1];\n                z = p[2];\n            } else {\n                x = positions[i + 0];\n                y = positions[i + 1];\n                z = positions[i + 2];\n            }\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    };\n})();\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport function OBB3ToAABB3(\n    obb: FloatArrayParam,\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = obb.length; i < len; i += 4) {\n        x = obb[i + 0];\n        y = obb[i + 1];\n        z = obb[i + 2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.\n */\nexport function points3ToAABB3(\n    points: number[][],\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = points.length; i < len; i++) {\n        x = points[i][0];\n        y = points[i][1];\n        z = points[i][2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Gets the 3D center of the given flat array of 3D positions.\n */\nexport function getPositions3Center(\n    positions: FloatArrayParam,\n    center: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    let xCenter = 0;\n    let yCenter = 0;\n    let zCenter = 0;\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        xCenter += positions[i + 0];\n        yCenter += positions[i + 1];\n        zCenter += positions[i + 2];\n    }\n    const numPositions = positions.length / 3;\n    center[0] = xCenter / numPositions;\n    center[1] = yCenter / numPositions;\n    center[2] = zCenter / numPositions;\n    return center;\n}\n\n\n/**\n * A plane within a {@link Frustum3}.\n */\nexport class FrustumPlane3 {\n\n    public testVertex: FloatArrayParam;\n    public offset: number;\n    public normal: FloatArrayParam;\n\n    /**\n     * Creates a new frustum plane.\n     */\n    constructor() {\n        this.normal = createVec3();\n        this.offset = 0;\n        this.testVertex = createVec3();\n    }\n\n    /**\n     * Sets the position and direction of the frustum plane.\n     * @param nx\n     * @param ny\n     * @param nz\n     * @param offset\n     */\n    set(nx: number, ny: number, nz: number, offset: number) {\n        const s = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n        this.normal[0] = nx * s;\n        this.normal[1] = ny * s;\n        this.normal[2] = nz * s;\n        this.offset = offset * s;\n        this.testVertex[0] = (this.normal[0] >= 0.0) ? 1 : 0;\n        this.testVertex[1] = (this.normal[1] >= 0.0) ? 1 : 0;\n        this.testVertex[2] = (this.normal[2] >= 0.0) ? 1 : 0;\n    }\n}\n\n/**\n * Intersection state in which first boundary is completely inside the second.\n */\nexport const INSIDE: number = 1;\n\n/**\n * Intersection state in which two boundaries partially intersect.\n */\nexport const INTERSECT: number = 2;\n\n/**\n * Intersection state in which two boundaries do not intersect.\n */\nexport const OUTSIDE: number = 3;\n\n/**\n * A 3D frustum defined as six planes.\n */\nexport class Frustum3 {\n\n    /**\n     * The six planes that comprise the frustum boundary.\n     */\n    public planes: FrustumPlane3[];\n\n    /**\n     * Creates a new FrustumProjection\n     */\n    constructor() {\n        this.planes = [\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3(),\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3()\n        ];\n    }\n}\n\n/**\n * Sets the extents of a frustum to the World-space volume defined by view and projection matrices.\n * Creates the frustum first if not given.\n */\nexport function setFrustum3(viewMat: FloatArrayParam, projMat: FloatArrayParam, frustum?: Frustum3) {\n    const m = mulMat4(projMat, viewMat, tempMat4a);\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    frustum = frustum || new Frustum3();\n    frustum.planes[0].set(m3 - m0, m7 - m4, m11 - m8, m15 - m12);\n    frustum.planes[1].set(m3 + m0, m7 + m4, m11 + m8, m15 + m12);\n    frustum.planes[2].set(m3 - m1, m7 - m5, m11 - m9, m15 - m13);\n    frustum.planes[3].set(m3 + m1, m7 + m5, m11 + m9, m15 + m13);\n    frustum.planes[4].set(m3 - m2, m7 - m6, m11 - m10, m15 - m14);\n    frustum.planes[5].set(m3 + m2, m7 + m6, m11 + m10, m15 + m14);\n    return frustum;\n}\n\n/**\n * Tests for intersection between a frustum and an axis-aligned 3D boundary.\n * @param frustum\n * @param aabb\n */\nexport function intersectFrustum3AABB3(frustum: Frustum3, aabb: FloatArrayParam): number {\n    let ret = INSIDE;\n    const min = tempVec3a;\n    const max = tempVec3b;\n    min[0] = aabb[0];\n    min[1] = aabb[1];\n    min[2] = aabb[2];\n    max[0] = aabb[3];\n    max[1] = aabb[4];\n    max[2] = aabb[5];\n    const bminmax = [min, max];\n    for (let i = 0; i < 6; ++i) {\n        const plane = frustum.planes[i];\n        if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            return OUTSIDE;\n        }\n        if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            ret = INTERSECT;\n        }\n    }\n    return ret;\n}\n\n/**\n * Tests for intersection between two axis-aligned 3D boundaries.\n * @param aabb1\n * @param aabb2\n */\nexport function intersectAABB3s(aabb1: FloatArrayParam, aabb2: FloatArrayParam): number {\n\n    return INTERSECT;\n    // let ret = INSIDE;\n    // const min = tempVec3a;\n    // const max = tempVec3b;\n    // min[0] = aabb[0];\n    // min[1] = aabb[1];\n    // min[2] = aabb[2];\n    // max[0] = aabb[3];\n    // max[1] = aabb[4];\n    // max[2] = aabb[5];\n    // const bminmax = [min, max];\n    // for (let i = 0; i < 6; ++i) {\n    //     const plane = frustum.planes[i];\n    //     if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         return OUTSIDE;\n    //     }\n    //     if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         ret = INTERSECT;\n    //     }\n    // }\n    // return ret;\n}\n\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/core/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Triangles3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given triangle primitive.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param a\n * @param b\n * @param c\n */\nexport function intersectFrustum3Triangle3(frustum: Frustum3, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/core/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Lines3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/core/constants!PointsPrimitive | PointsPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n */\nexport function intersectFrustum3Positions3(frustum: Frustum3, positions: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given position.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param position\n */\nexport function intersectFrustum3Point3(frustum: Frustum3, position: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/core/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Triangles3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        // if (aabbIntersectsTriangle(positions, indices[i], indices[i + 1], indices[i + 2], aabb)) {\n        //     return true;\n        // }\n    }\n    return false;\n}\n\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/core/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Lines3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam) {\n    return false;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/core/constants!PointsPrimitive | PointsPrimitive} vertex positions.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n */\nexport function intersectAABB3Positions3(aabb: FloatArrayParam, positions: FloatArrayParam) {\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xmax = aabb[3];\n    const ymax = aabb[4];\n    const zmax = aabb[5];\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        const x = positions[i];\n        if (xmin <= x && x <= xmax) {\n            const y = positions[i + 1];\n            if (ymin <= y && y <= ymax) {\n                const z = positions[i + 2];\n                if (zmin <= z && z <= zmax) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Tets if the given 3D AABB contains the given 3D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4] &&\n        aabb[2] <= p[2] && p[2] <= aabb[5]);\n}\n\n/**\n * Tets if the given 2D AABB contains the given 2D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4]);\n}","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fcompression.svg)](https://badge.fury.io/js/%40xeokit%2Fcompression)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/compression/badge)](https://www.jsdelivr.com/package/npm/@xeokit/compression)\n * \n * <img style=\"padding:20px\" src=\"media://images/geometry_icon.png\"/>\n *\n * # xeokit Geometry Compression / Decompression Utilities\n *\n * ---\n *\n * ### *Tools for geometry compression and decompression*\n *\n * ---\n *\n * The xeokit Geometry Compression/Decompression Utilities library provides functions used internally within SceneModel.createGeometry implementations to compress geometry. These functions are also provided for users who want to pre-compress their geometry \"offline\" and then use SceneModel.createGeometryCompressed to create compressed geometry directly.\n\n The compression techniques used include simplifying geometry by combining duplicate positions and adjusting indices, generating edge indices for triangle meshes, ignoring normals (as shaders auto-generate them), converting positions to relative-to-center (RTC) coordinates, quantizing positions and UVs as 16-bit unsigned integers, and splitting geometry into buckets to enable indices to use the minimum bits for storage. The bucketing technique was developed for xeokit by Toni Marti with support from Tribia AG.\n\n To use the library, install it using npm install @xeokit/compression. An example usage includes compressing a GeometryParams into a GeometryCompressedParams using the compressGeometryParams function. In this example, the geometry is simple, and only one bucket is needed. However, if the positions array was large enough to require some indices to use more than 16 bits for storage, the bucketing mechanism would split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n\n The resulting GeometryCompressedParams object shows that we have one bucket with vertex positions relative to the origin and quantized to 16-bit integers, duplicate positions removed, and adjusted indices. Additionally, edge indices are generated for the TrianglesPrimitive, and a positionsDecompressMatrix is included to de-quantize the positions within the Viewer.\n\n * This library provides a set of functions that are used internally within\n * {@link @xeokit/scene!SceneModel.createGeometry | SceneModel.createGeometry} implementations to\n * compress geometry. The functions are provided here in case users instead want to pre-compress their geometry \"offline\",\n * and then use {@link @xeokit/scene!SceneModel.createGeometryCompressed | SceneModel.createGeometryCompressed}\n * to create the compressed geometry directly.\n *\n * ### Compression Techniques Used\n *\n * * Simplifies geometry by combining duplicate positions and adjusting indices\n * * Generates edge indices for triangle meshes\n * * Ignores normals (our shaders auto-generate them)\n * * Converts positions to relative-to-center (RTC) coordinates\n * * Quantizes positions and UVs as 16-bit unsigned integers\n * * Splits geometry into {@link @xeokit/scene!GeometryBucketParams | buckets } to enable indices to use the minimum bits for storage\n *\n * ### Aknowledgements\n *\n * * The bucketing technique mentioned above was developed for xeokit by Toni Marti, with support from Tribia AG. Read [the slides](media://pdfs/GPU_RAM_Savings_Toni_Marti_Apr22.pdf) from Toni's presentation at WebGL Meetup 2022.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/compression\n * ````\n *\n * ## Usage\n *\n * In the example below, we'll use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}.\n *\n * In this example, our geometry is very simple, and our GeometryCompressedParams only gets a single\n * {@link @xeokit/scene!GeometryBucketParams | GeometryBucketParams }. Note that if the\n * {@link @xeokit/scene!GeometryParams.positions | GeometryParams.positions} array was large enough to require\n * some of the indices to use more than 16 bits for storage, then that's when the function's bucketing mechanism would\n * kick in, to split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n *\n * ````javascript\n * import {compressGeometryParams} from \"@xeokit/compression\";\n * import {TrianglesPrimitive} from \"@xeokit/core/constants\";\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [\n *          202, 202, 202, 200, 202, 202,\n *          200, 200, 202, 202, 200, 202,\n *          202, 202, 202, 202, 200, 202,\n *          202, 200, 200, 202, 202, 200,\n *          202, 202, 202, 202, 202, 200,\n *          200, 202, 200, 200, 202, 202,\n *          200, 202, 202, 200, 202, 200,\n *          200, 200, 200, 200, 200, 202,\n *          200, 200, 200, 202, 200, 200,\n *          202, 200, 202, 200, 200, 202,\n *          202, 200, 200, 200, 200, 200,\n *          200, 202, 200, 202, 202, 200\n *      ],\n *      indices: [\n *          0, 1, 2, 0, 2, 3, 4, 5, 6, 4,\n *          6, 7, 8, 9, 10, 8, 10, 11, 12,\n *          13, 14, 12, 14, 15, 16, 17, 18,\n *          16, 18, 19, 20, 21, 22, 20, 22, 23\n *      ]\n *  });\n * ````\n *\n * The value of our new {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams} is shown below.\n *\n * We can see that:\n *\n * * We get one bucket, because we have only a small number of indices\n * * Vertex positions are now relative to ````origin```` and quantized to 16-bit integers\n * * Duplicate positions are removed and indices adjusted\n * * Edge indices generated for our TrianglesPrimitive\n * * A ````positionsDecompressMatrix```` to de-quantize the positions within the Viewer\n *\n * ````javascript\n * {\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      origin: [200,200,200],\n *      positionsDecompressMatrix: [\n *          0.00003052270125906143, 0, 0, 0,\n *          0, 0.00003052270125906143, 0, 0,\n *          0, 0, 0.00003052270125906143, 0,\n *          -1, -1, -1, 1\n *      ],\n *      geometryBuckets: [\n *          {\n *              positionsCompressed: [\n *                  65525, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 0, 65525, 0, 0,\n *                  0, 0\n *              ],\n *              indices: [\n *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2,\n *                  4, 7, 6, 4, 6, 5\n *              ],\n *              edgeIndices: [\n *                  3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7,\n *                  3, 2, 4, 7, 6, 4, 6\n *              ]\n *          }\n *      ]\n * }\n * ````\n *\n * In the next example, we'll again use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}, which we'll then use to\n * create a compressed geometry within a {@link @xeokit/scene!SceneModel | SceneModel}.\n *\n * ````javascript\n * import {Scene} from \"@xeokit/scene\";\n * import {TrianglesPrimitive} from \"@xeokit/core/constants\";\n * import {compressGeometryParams} from \"@xeokit/compression\";\n *\n * const scene = new Scene();\n *\n * const sceneModel = scene.createModel({\n *     id: \"myModel\"\n * });\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [202, 202, 202, 200, 202, 202, ...],\n *      indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, ...]\n * });\n *\n * sceneModel.createGeometryCompressed(geometryCompressedParams);\n *\n * sceneModel.createMesh({ id: \"myMesh\", geometryId: \"myGeometry\" });\n *\n * sceneModel.createObject({ id: \"myObject1\", meshIds: [\"myMesh\"] });\n * sceneModel.createObject({ id: \"myObject2\", meshIds: [\"myMesh\"] });\n *\n * sceneModel.build();\n * ````\n *\n * @module @xeokit/compression\n */\n\nimport {\n    createMat3, createMat4,\n    createVec3,\n    identityMat3,\n    identityMat4,\n    mulMat3,\n    mulMat4,\n    normalizeVec3,\n    scalingMat3v,\n    scalingMat4v,\n    transformVec3,\n    translationMat3v,\n    translationMat4v\n} from \"@xeokit/matrix\";\n\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nconst translate = createMat4();\nconst scale = createMat4();\n\n/**\n * Gets the boundary of a flat positions array.\n *\n * @param array\n * @param min\n * @param max\n */\nexport function getPositions3MinMax(array: FloatArrayParam, min?: FloatArrayParam, max?: FloatArrayParam) {\n    let i, j;\n    min = min || new Float64Array(3);\n    max = max || new Float64Array(3);\n    for (i = 0; i < 3; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 3) {\n        for (j = 0; j < 3; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min,\n        max\n    };\n}\n\n/**\n * Creates a de-quantization matrix from a boundary.\n */\nexport function createPositions3DecompressMat4(aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam): FloatArrayParam {\n    positionsDecompressMatrix = positionsDecompressMatrix || createMat4();\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65535;\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsDecompressMatrix;\n}\n\n/**\n * Compresses a flat positions array\n */\nexport function compressPositions3(array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam) {\n    const quantized = new Uint16Array(array.length);\n    var multiplier = new Float32Array([\n        max[0] !== min[0] ? 65535 / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? 65535 / (max[1] - min[1]) : 0,\n        max[2] !== min[2] ? 65535 / (max[2] - min[2]) : 0\n    ]);\n    let i;\n    for (i = 0; i < array.length; i += 3) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n    }\n    identityMat4(translate);\n    translationMat4v(min, translate);\n    identityMat4(scale);\n    scalingMat4v([\n        (max[0] - min[0]) / 65535,\n        (max[1] - min[1]) / 65535,\n        (max[2] - min[2]) / 65535\n    ], scale);\n    const decompressMatrix = mulMat4(translate, scale, identityMat4());\n    return {\n        quantized: quantized,\n        decompressMatrix: decompressMatrix\n    };\n}\n\n/**\n * Compresses a 3D position\n * @param p\n * @param aabb\n * @param q\n */\nexport function compressPoint3(p: FloatArrayParam, aabb: FloatArrayParam, dest: FloatArrayParam = p) {\n    const multiplier = new Float32Array([\n        aabb[3] !== aabb[0] ? 65535 / (aabb[3] - aabb[0]) : 0,\n        aabb[4] !== aabb[1] ? 65535 / (aabb[4] - aabb[1]) : 0,\n        aabb[5] !== aabb[2] ? 65535 / (aabb[5] - aabb[2]) : 0\n    ]);\n    dest[0] = Math.max(0, Math.min(65535, Math.floor((p[0] - aabb[0]) * multiplier[0])));\n    dest[1] = Math.max(0, Math.min(65535, Math.floor((p[1] - aabb[1]) * multiplier[1])));\n    dest[2] = Math.max(0, Math.min(65535, Math.floor((p[2] - aabb[2]) * multiplier[2])));\n    return dest;\n}\n\n/**\n * Decompresses a 3D position\n * @param position\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPoint3(position: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = position): FloatArrayParam {\n    dest[0] = position[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = position[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = position[2] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses an axis-aligned 3D boundary\n * @param aabb\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressAABB3(aabb: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = aabb): FloatArrayParam {\n    dest[0] = aabb[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = aabb[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = aabb[2] * decompressMatrix[10] + decompressMatrix[14];\n    dest[3] = aabb[3] * decompressMatrix[0] + decompressMatrix[12];\n    dest[4] = aabb[4] * decompressMatrix[5] + decompressMatrix[13];\n    dest[5] = aabb[5] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses a flat array of positions\n * @param positions\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPositions3(positions: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: Float32Array = new Float32Array(positions.length)): Float32Array {\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        dest[i + 0] = positions[i + 0] * decompressMatrix[0] + decompressMatrix[12];\n        dest[i + 1] = positions[i + 1] * decompressMatrix[5] + decompressMatrix[13];\n        dest[i + 2] = positions[i + 2] * decompressMatrix[10] + decompressMatrix[14];\n    }\n    return dest;\n}\n\n/**\n * Gets the 2D min/max boundary of a flat array of UV coordinate\n * @param array\n */\nexport function getUVBounds(array: FloatArrayParam): { min: FloatArrayParam, max: FloatArrayParam } {\n    const min = new Float32Array(2);\n    const max = new Float32Array(2);\n    let i, j;\n    for (i = 0; i < 2; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 2) {\n        for (j = 0; j < 2; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\n/**\n * Compresses a flat array of UV coordinates\n */\nexport var compressUVs = (function () {\n    const translate = createMat3();\n    const scale = createMat3();\n    return function (array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam): {\n        quantized: Uint16Array,\n        decompressMatrix: FloatArrayParam | Float64Array\n    } {\n        const quantized = new Uint16Array(array.length);\n        const multiplier = new Float32Array([\n            65535 / (max[0] - min[0]),\n            65535 / (max[1] - min[1])\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 2) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        }\n        identityMat3(translate);\n        translationMat3v(min, translate);\n        identityMat3(scale);\n        scalingMat3v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535\n        ], scale);\n        const decompressMatrix = mulMat3(translate, scale, identityMat3());\n        return {\n            quantized: quantized,\n            decompressMatrix: decompressMatrix\n        };\n    };\n})();\n\n/**\n * Oct-encodes a flat array of normal vectors\n * @param array\n */\nexport function compressNormals(array: FloatArrayParam): Int8Array { // http://jcgt.org/published/0003/02/01/\n\n    // Note: three elements for each encoded normal, in which the last element in each triplet is redundant.\n    // This is to work around a mysterious WebGL issue where 2-element normals just wouldn't work in the shader :/\n\n    const encoded = new Int8Array(array.length);\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < array.length; i += 3) {\n        // Test various combinations of ceil and floor\n        // to minimize rounding errors\n        best = oct = octEncodeNormalFromArray(array, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(array, i, dec);\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        encoded[i] = best[0];\n        encoded[i + 1] = best[1];\n    }\n    return encoded;\n}\n\n/**\n */\nfunction octEncodeNormalFromArray(array: FloatArrayParam, i: number, xfunc: any, yfunc: any): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n/**\n * Dot product of a normal in an array against a candidate decoding\n */\nfunction dot(array: FloatArrayParam, i: number, createVec3: FloatArrayParam): number {\n    return array[i] * createVec3[0] + array[i + 1] * createVec3[1] + array[i + 2] * createVec3[2];\n}\n\n/**\n */\nexport function decompressUV(uv: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(2)) {\n    dest[0] = uv[0] * decompressMatrix[0] + decompressMatrix[6];\n    dest[1] = uv[1] * decompressMatrix[4] + decompressMatrix[7];\n}\n\n/**\n *\n */\nexport function decompressUVs(uvs: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(uvs.length)) {\n    for (let i = 0, len = uvs.length; i < len; i += 3) {\n        dest[i + 0] = uvs[i + 0] * decompressMatrix[0] + decompressMatrix[6];\n        dest[i + 1] = uvs[i + 1] * decompressMatrix[4] + decompressMatrix[7];\n    }\n    return dest;\n}\n\n/**\n *\n */\nexport function decompressNormal(oct: FloatArrayParam, result: FloatArrayParam): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nexport function decompressNormals(octs: string | any[], result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n *\n * @param oct\n * @param result\n */\nfunction octDecodeVec2(oct: Int8Array, result: FloatArrayParam = createVec3()): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nfunction octDecodeVec2s(octs: Int8Array, result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n * @private\n */\nexport function quantizePositions3(positions: FloatArrayParam, aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam) { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const lenPositions = positions.length;\n    const positionsCompressed = new Uint16Array(lenPositions);\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65525;\n    const xMultiplier = maxInt / xwid;\n    const yMultiplier = maxInt / ywid;\n    const zMultiplier = maxInt / zwid;\n    const verify = (num: number) => num >= 0 ? num : 0;\n    for (let i = 0; i < lenPositions; i += 3) {\n        positionsCompressed[i + 0] = Math.floor(verify(positions[i + 0] - xmin) * xMultiplier);\n        positionsCompressed[i + 1] = Math.floor(verify(positions[i + 1] - ymin) * yMultiplier);\n        positionsCompressed[i + 2] = Math.floor(verify(positions[i + 2] - zmin) * zMultiplier);\n    }\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsCompressed;\n}\n\n/**\n * @private\n */\nexport function transformAndOctEncodeNormals(worldNormalMatrix: FloatArrayParam, normals: FloatArrayParam, lenNormals: number, compressedNormals: FloatArrayParam, lenCompressedNormals: number) {\n\n    function dot(p: FloatArrayParam, createVec3: FloatArrayParam) { // Dot product of a normal in an array against a candidate decoding\n        return p[0] * createVec3[0] + p[1] * createVec3[1] + p[2] * createVec3[2];\n    }\n\n    // http://jcgt.org/published/0003/02/01/\n    let oct, dec, best, currentCos, bestCos;\n    let i, ei;\n    let localNormal = new Float32Array([0, 0, 0, 0]);\n    let worldNormal = new Float32Array([0, 0, 0, 0]);\n    for (i = 0; i < lenNormals; i += 3) {\n        localNormal[0] = normals[i];\n        localNormal[1] = normals[i + 1];\n        localNormal[2] = normals[i + 2];\n\n        transformVec3(worldNormalMatrix, localNormal, worldNormal);\n        normalizeVec3(worldNormal, worldNormal);\n\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeVec3(worldNormal, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(worldNormal, dec);\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[lenCompressedNormals + i + 0] = best[0];\n        compressedNormals[lenCompressedNormals + i + 1] = best[1];\n        compressedNormals[lenCompressedNormals + i + 2] = 0.0; // Unused\n    }\n    lenCompressedNormals += lenNormals;\n    return lenCompressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeNormals(normals: FloatArrayParam) { // http://jcgt.org/published/0003/02/01/\n    const lenNormals = normals.length;\n    const compressedNormals = new Int8Array(lenNormals)\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < lenNormals; i += 3) {\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeNormal(normals, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(normals, i, dec);\n        oct = octEncodeNormal(normals, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[i + 0] = best[0];\n        compressedNormals[i + 1] = best[1];\n        compressedNormals[i + 2] = 0.0; // Unused\n    }\n    return compressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeVec3(p: FloatArrayParam, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = p[0] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    let y = p[1] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    if (p[2] < 0) {\n        let tempx = x;\n        let tempy = y;\n        tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n/**\n * @private\n */\nexport function octEncodeNormal(array: FloatArrayParam, i: number, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n","/**\n * @private\n */\nimport type {GLDataTexture} from \"@xeokit/webglutils\";\n\n\nexport class DataTextureSet {\n\n    positions: GLDataTexture | null; // All quantized positions for a Layer\n    indices_8Bits: GLDataTexture | null; // All 8-bit indices\n    indices_16Bits: GLDataTexture | null; // All 16-bit indices\n    indices_32Bits: GLDataTexture | null; // All 32-bt indices\n    edgeIndices_8Bits: GLDataTexture | null; // All 8-bit edge indices\n    edgeIndices_16Bits: GLDataTexture | null; // All 16-bit edges indices\n    edgeIndices_32Bits: GLDataTexture | null; // All 32-bit edges indices\n    indices: { [key: number]: GLDataTexture | null }; // All 8, 16, and 32-bit indices\n    edgeIndices: { [key: number]: GLDataTexture | null } | null; // All 8, 16 and 32-bit indices\n    eachMeshAttributes: GLDataTexture | null; // For each mesh, a set of attributes including color, opacity, visibility etc\n    eachMeshMatrices: GLDataTexture | null; // For each mesh, a positions decompression matrix and a modeling matrix\n    eachEdgeOffset: GLDataTexture | null;\n    eachPrimitiveMesh_8Bits: GLDataTexture | null;\n    eachPrimitiveMesh_16Bits: GLDataTexture | null;\n    eachPrimitiveMesh_32Bits: GLDataTexture | null;\n    eachPrimitiveMesh: { [key: number]: GLDataTexture | null } | null;\n    eachEdgeMesh_8Bits: GLDataTexture | null;\n    eachEdgeMesh_16Bits: GLDataTexture | null;\n    eachEdgeMesh_32Bits: GLDataTexture | null;\n    eachEdgeMesh: { [key: number]: GLDataTexture | null } | null;\n    #built: boolean;\n\n    constructor() {\n        this.positions = null;\n        this.indices_8Bits = null;\n        this.indices_16Bits = null;\n        this.indices_32Bits = null;\n        this.edgeIndices_8Bits = null;\n        this.edgeIndices_16Bits = null;\n        this.edgeIndices_32Bits = null;\n        this.eachMeshAttributes = null;\n        this.eachMeshMatrices = null;\n        this.eachPrimitiveMesh_8Bits = null;\n        this.eachPrimitiveMesh_16Bits = null;\n        this.eachPrimitiveMesh_32Bits = null;\n        this.eachEdgeMesh_8Bits = null;\n        this.eachEdgeMesh_16Bits = null;\n        this.eachEdgeMesh_32Bits = null;\n        this.eachEdgeOffset = null;\n        this.#built = false;\n    }\n\n    build() {\n        this.indices = {\n            8: this.indices_8Bits,\n            16: this.indices_16Bits,\n            32: this.indices_32Bits,\n        };\n        this.eachPrimitiveMesh = {\n            8: this.eachPrimitiveMesh_8Bits,\n            16: this.eachPrimitiveMesh_16Bits,\n            32: this.eachPrimitiveMesh_32Bits,\n        };\n        this.edgeIndices = {\n            8: this.edgeIndices_8Bits,\n            16: this.edgeIndices_16Bits,\n            32: this.edgeIndices_32Bits,\n        };\n        this.eachEdgeMesh = {\n            8: this.eachEdgeMesh_8Bits,\n            16: this.eachEdgeMesh_16Bits,\n            32: this.eachEdgeMesh_32Bits,\n        };\n        this.#built = true;\n    }\n\n    destroy() {\n        if (this.positions) {\n            this.positions.destroy();\n        }\n        if (this.indices_8Bits) {\n            this.indices_8Bits.destroy();\n        }\n        if (this.indices_16Bits) {\n            this.indices_16Bits.destroy();\n        }\n        if (this.indices_32Bits) {\n            this.indices_32Bits.destroy();\n        }\n        if (this.edgeIndices_8Bits) {\n            this.edgeIndices_8Bits.destroy();\n        }\n        if (this.edgeIndices_16Bits) {\n            this.edgeIndices_16Bits.destroy();\n        }\n        if (this.edgeIndices_32Bits) {\n            this.edgeIndices_32Bits.destroy();\n        }\n        if (this.eachMeshMatrices) {\n            this.eachMeshMatrices.destroy();\n        }\n        if (this.eachMeshAttributes) {\n            this.eachMeshAttributes.destroy();\n        }\n        if (this.eachEdgeOffset) {\n            this.eachEdgeOffset.destroy();\n        }\n        if (this.eachPrimitiveMesh_8Bits) {\n            this.eachPrimitiveMesh_8Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_16Bits) {\n            this.eachPrimitiveMesh_16Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_32Bits) {\n            this.eachPrimitiveMesh_32Bits.destroy();\n        }\n        if (this.eachEdgeMesh_8Bits) {\n            this.eachEdgeMesh_8Bits.destroy();\n        }\n        if (this.eachEdgeMesh_16Bits) {\n            this.eachEdgeMesh_16Bits.destroy();\n        }\n        if (this.eachEdgeMesh_32Bits) {\n            this.eachEdgeMesh_32Bits.destroy();\n        }\n    }\n}\n","\n/**\n * @private\n */\nexport class MeshCounts {\n\n    numMeshes: number;\n    numVisible: number;\n    numTransparent: number;\n    numEdges: number;\n    numXRayed: number;\n    numSelected: number;\n    numHighlighted: number;\n    numClippable: number;\n    numPickable: number;\n    numCulled: number;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset() {\n        this.numMeshes = 0;\n        this.numVisible = 0;\n        this.numTransparent = 0;\n        this.numEdges = 0;\n        this.numXRayed = 0;\n        this.numSelected = 0;\n        this.numHighlighted = 0;\n        this.numClippable = 0;\n        this.numPickable = 0;\n        this.numCulled = 0;\n    }\n}","\n/**\n * @private\n */\nexport const SCENE_OBJECT_FLAGS = {\n    VISIBLE: 1,\n    CULLED: 1 << 2,\n    PICKABLE: 1 << 3,\n    CLIPPABLE: 1 << 4,\n    COLLIDABLE: 1 << 5,\n    CAST_SHADOW: 1 << 6,\n    RECEIVE_SHADOW: 1 << 7,\n    XRAYED: 1 << 8,\n    HIGHLIGHTED: 1 << 9,\n    SELECTED: 1 << 10,\n    EDGES: 1 << 11,\n    BACKFACES: 1 << 12,\n    TRANSPARENT: 1 << 13\n};\n","/**\n * Bundled by jsDelivr using Rollup v2.59.0 and Terser v5.9.0.\n * Original file: /npm/@petamoriken/float16@3.5.11/src/index.mjs\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\nfunction t(t: Function) {\n    // @ts-ignore\n    return (r: any, ...e: ArrayLike<any>) => n(t, r, e)\n}\n\nfunction r(r: object, n: PropertyKey) {\n    // @ts-ignore\n    return t(s(r, n).get)\n}\n\n// @ts-ignore\n// @ts-ignore\nconst {\n        apply: n,\n        construct: e,\n        defineProperty: o,\n        get: i,\n        getOwnPropertyDescriptor: s,\n        getPrototypeOf: c,\n        has: u,\n        ownKeys: f,\n        set: h,\n        setPrototypeOf: l\n    } = Reflect, a = Proxy, y = Number,\n    {\n        isFinite: p,\n        isNaN: w\n    } = y,\n    {\n        iterator: g,\n        species: d,\n        toStringTag: v,\n        for: b\n    } = Symbol, A = Object,\n    {\n        create: m,\n        defineProperty: B,\n        freeze: x,\n        is: E\n        // @ts-ignore\n    } = A, T = A.prototype, O = t(T.isPrototypeOf), j = A.hasOwn || t(T.hasOwnProperty), I = Array, P = I.isArray,\n    // @ts-ignore\n    S = I.prototype, _ = t(S.join), F = t(S.push), L = t(S.toLocaleString), R = S[g], C = t(R), N = Math.trunc,\n    U = ArrayBuffer, M = U.isView, D = t(U.prototype.slice), k = r(U.prototype, \"byteLength\"),\n    W = \"undefined\" != typeof SharedArrayBuffer ? SharedArrayBuffer : null, V = W && r(W.prototype, \"byteLength\"),\n    // @ts-ignore\n    Y = c(Uint8Array), z = Y.from, G = Y.prototype, K = G[g], X = t(G.keys), q = t(G.values), H = t(G.entries),\n    J = t(G.set), Q = t(G.reverse), Z = t(G.fill), $ = t(G.copyWithin), tt = t(G.sort), rt = t(G.slice),\n    nt = t(G.subarray), et = r(G, \"buffer\"), ot = r(G, \"byteOffset\"), it = r(G, \"length\"), st = r(G, v),\n    // @ts-ignore\n    ct = Uint16Array, ut = (...t) => n(z, ct, t), ft = Uint32Array, ht = Float32Array, lt = c([][g]()), at = t(lt.next),\n    yt = t(function* () {\n        // @ts-ignore\n    }().next), pt = c(lt), wt = DataView.prototype, gt = t(wt.getUint16), dt = t(wt.setUint16), vt = TypeError,\n    bt = RangeError, At = Set, mt = At.prototype, Bt = t(mt.add), xt = t(mt.has), Et = WeakMap, Tt = Et.prototype,\n    Ot = t(Tt.get), jt = t(Tt.has), It = t(Tt.set), Pt = new U(4), St = new ht(Pt), _t = new ft(Pt), Ft = new ft(512),\n    Lt = new ft(512);\nfor (let t = 0; t < 256; ++t) {\n    const r = t - 127;\n    r < -27 ? (Ft[t] = 0, Ft[256 | t] = 32768, Lt[t] = 24, Lt[256 | t] = 24) : r < -14 ? (Ft[t] = 1024 >> -r - 14, Ft[256 | t] = 1024 >> -r - 14 | 32768, Lt[t] = -r - 1, Lt[256 | t] = -r - 1) : r <= 15 ? (Ft[t] = r + 15 << 10, Ft[256 | t] = r + 15 << 10 | 32768, Lt[t] = 13, Lt[256 | t] = 13) : r < 128 ? (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 24, Lt[256 | t] = 24) : (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 13, Lt[256 | t] = 13)\n}\n\nfunction Rt(t: number) {\n    St[0] = t;\n    const r = _t[0],\n        n = r >> 23 & 511;\n    return Ft[n] + ((8388607 & r) >> Lt[n])\n}\n\nconst Ct = new ft(2048),\n    Nt = new ft(64),\n    Ut = new ft(64);\nCt[0] = 0;\nfor (let t = 1; t < 1024; ++t) {\n    let r = t << 13,\n        n = 0;\n    for (; 0 == (8388608 & r);) n -= 8388608, r <<= 1;\n    r &= -8388609, n += 947912704, Ct[t] = r | n\n}\nfor (let t = 1024; t < 2048; ++t) Ct[t] = 939524096 + (t - 1024 << 13);\nNt[0] = 0;\nfor (let t = 1; t < 31; ++t) Nt[t] = t << 23;\nNt[31] = 1199570944, Nt[32] = 2147483648;\nfor (let t = 33; t < 63; ++t) Nt[t] = 2147483648 + (t - 32 << 23);\nNt[63] = 3347054592, Ut[0] = 0;\nfor (let t = 1; t < 64; ++t) Ut[t] = 32 === t ? 0 : 1024;\n\nfunction Mt(t: number) {\n    const r = t >> 10;\n    return _t[0] = Ct[Ut[r] + (1023 & t)] + Nt[r], St[0]\n}\n\nfunction Dt(t: unknown) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    if (t = y(t), !p(t) || 0 === t) return t;\n    // @ts-ignore\n    return Mt(Rt(t))\n}\n\nfunction kt(t: any[]) {\n    // @ts-ignore\n    if (t[g] === R) return t;\n    const r = C(t);\n    return m(null,\n        {\n            next:\n                {\n                    value: function () {\n                        return at(r)\n                    }\n                },\n            [g]:\n                {\n                    value: function () {\n                        return this\n                    }\n                }\n        })\n}\n\nconst Wt = new Et,\n    Vt = m(pt,\n        {\n            next:\n                {\n                    value: function () {\n                        const t = Ot(Wt, this);\n                        return yt(t)\n                    },\n                    writable: !0,\n                    configurable: !0\n                },\n            [v]:\n                {\n                    value: \"Array Iterator\",\n                    configurable: !0\n                }\n        });\n\nfunction Yt(t:any) {\n    const r = m(Vt);\n    return It(Wt, r, t), r\n}\n\nfunction zt(t:any) {\n    return null !== t && \"object\" == typeof t || \"function\" == typeof t\n}\n\nfunction Gt(t:any) {\n    return null !== t && \"object\" == typeof t\n}\n\nfunction Kt(t:any) {\n    return void 0 !== st(t)\n}\n\nfunction Xt(t:any) {\n    const r = st(t);\n    return \"BigInt64Array\" === r || \"BigUint64Array\" === r\n}\n\nfunction qt(t:any) {\n    if (null === W) return !1;\n    try {\n        // @ts-ignore\n        return V(t), !0\n    } catch (t:any) {\n        return !1\n    }\n}\n\nfunction Ht(t:any) {\n    if (!P(t)) return !1;\n    // @ts-ignore\n    if (t[g] === R) return !0;\n    // @ts-ignore\n    return \"Array Iterator\" === t[g]()[v]\n}\n\nfunction Jt(t:any) {\n    if (\"string\" != typeof t) return !1;\n    const r = y(t);\n    return t === r + \"\" && (!!p(r) && r === N(r))\n}\n\nconst Qt = y.MAX_SAFE_INTEGER;\n\nfunction Zt(t:any) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    const r = y(t);\n    return w(r) || 0 === r ? 0 : N(r)\n}\n\nfunction $t(t:any) {\n    const r = Zt(t);\n    return r < 0 ? 0 : r < Qt ? r : Qt\n}\n\nfunction tr(t: { constructor: any; }, r: ArrayBufferConstructor) {\n    if (!zt(t)) throw vt(\"This is not an object\");\n    const n = t.constructor;\n    if (void 0 === n) return r;\n    if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n    const e = n[d];\n    return null == e ? r : e\n}\n\nfunction rr(t:any) {\n    if (qt(t)) return !1;\n    try {\n        return D(t, 0, 0), !1\n    } catch (t:any) {\n    }\n    return !0\n}\n\nfunction nr(t: unknown, r: unknown) {\n    const n = w(t),\n        e = w(r);\n    if (n && e) return 0;\n    if (n) return 1;\n    if (e) return -1;\n    // @ts-ignore\n    if (t < r) return -1;\n    // @ts-ignore\n    if (t > r) return 1;\n    if (0 === t && 0 === r) {\n        const n = E(t, 0),\n            e = E(r, 0);\n        if (!n && e) return -1;\n        if (n && !e) return 1\n    }\n    return 0\n}\n\nconst er = b(\"__Float16Array__\"),\n    or = new Et;\n\nfunction ir(t:any) {\n    return jt(or, t) || !M(t) && function (t:any) {\n        if (!Gt(t)) return !1;\n        const r = c(t);\n        if (!Gt(r)) return !1;\n        // @ts-ignore\n        const n = r.constructor;\n        if (void 0 === n) return !1;\n        if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n        return u(n, er)\n    }(t)\n}\n\nfunction sr(t:any) {\n    if (!ir(t)) throw vt(\"This is not a Float16Array object\")\n}\n\nfunction cr(t: any, r: number) {\n    const n = ir(t),\n        e = Kt(t);\n    if (!n && !e) throw vt(\"Species constructor didn't return TypedArray object\");\n    if (\"number\" == typeof r) {\n        let e;\n        if (n) {\n            const r = ur(t);\n            e = it(r)\n        } else e = it(t);\n        if (e < r) throw vt(\"Derived constructor created TypedArray object which was too small length\")\n    }\n    if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\")\n}\n\nfunction ur(t:any) {\n    const r = Ot(or, t);\n    if (void 0 !== r) {\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        return r\n    }\n    const n = t.buffer;\n    if (rr(n)) throw vt(\"Attempting to access detached ArrayBuffer\");\n    const o = e(ar, [n, t.byteOffset, t.length], t.constructor);\n    return Ot(or, o)\n}\n\nfunction fr(t:any) {\n    const r = it(t),\n        n = [];\n    for (let e = 0; e < r; ++e) n[e] = Mt(t[e]);\n    return n\n}\n\nconst hr = new At;\nfor (const t of f(G)) {\n    if (t === v) continue;\n    const r = s(G, t);\n    j(r, \"get\") && Bt(hr, t)\n}\nconst lr = x(\n    {\n        get: (t: object, r: PropertyKey, n: any) => Jt(r) && j(t, r) ? Mt(i(t, r)) : xt(hr, r) && O(G, t) ? i(t, r) : i(t, r, n),\n        set: (t: object, r: PropertyKey, n: number, e: any) => Jt(r) && j(t, r) ? h(t, r, Rt(n)) : h(t, r, n, e),\n        getOwnPropertyDescriptor(t: object, r: PropertyKey) {\n            if (Jt(r) && j(t, r)) {\n                const n = s(t, r);\n                // @ts-ignore\n                return n.value = Mt(n.value), n\n            }\n            return s(t, r)\n        },\n        defineProperty: (t: object, r: PropertyKey, n: PropertyDescriptor & ThisType<any>) => Jt(r) && j(t, r) && j(n, \"value\") ? (n.value = Rt(n.value), o(t, r, n)) : o(t, r, n)\n    });\n\nclass ar {\n    constructor(t: string | number | any[], r: undefined, n: undefined) {\n        let o;\n        if (ir(t)) o = e(ct, [ur(t)], new.target);\n        else if (zt(t) && !function (t:any) {\n            try {\n                return k(t), !0\n            } catch (t) {\n                return !1\n            }\n        }(t)) {\n            let r, n;\n            if (Kt(t)) {\n                r = t, n = it(t);\n                const i = et(t),\n                    s = qt(i) ? U : tr(i, U);\n                if (rr(i)) throw vt(\"Attempting to access detached ArrayBuffer\");\n                if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n                const c = new s(2 * n);\n                o = e(ct, [c], new.target)\n            } else {\n                // @ts-ignore\n                const i = t[g];\n                if (null != i && \"function\" != typeof i) throw vt(\"@@iterator property is not callable\");\n                // @ts-ignore\n                null != i ? Ht(t) ? (r = t, n = t.length) : (r = [...t], n = r.length) : (r = t, n = $t(r.length)), o = e(ct, [n], new.target)\n            }\n            for (let t = 0; t < n; ++t) { // @ts-ignore\n                o[t] = Rt(r[t])\n            }\n        } else o = e(ct, arguments, new.target);\n        const i = new a(o, lr);\n        return It(or, i, o), i\n    }\n\n    static from(t: string | any[], ...r: any[]) {\n        const e = this;\n        if (!u(e, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        if (e === ar) {\n            if (ir(t) && 0 === r.length) {\n                const r = ur(t),\n                    n = new ct(et(r), ot(r), it(r));\n                // @ts-ignore\n                return new ar(et(rt(n)))\n            }\n            // @ts-ignore\n            if (0 === r.length) return new ar(et(ut(t, Rt)));\n            const e = r[0],\n                o = r[1];\n            // @ts-ignore\n            return new ar(et(ut(t, ((t, ...r) => {\n                return Rt(n(e, this, [t, ...kt(r)]))\n            }), o)))\n        }\n        let o, i;\n        // @ts-ignore\n        const s = t[g];\n        if (null != s && \"function\" != typeof s) throw vt(\"@@iterator property is not callable\");\n        // @ts-ignore\n        if (null != s) Ht(t) ? (o = t, i = t.length) : !Kt(c = t) || c[g] !== K && \"Array Iterator\" !== c[g]()[v] ? (o = [...t], i = o.length) : (o = t, i = it(t));\n        else {\n            if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n            o = A(t), i = $t(o.length)\n        }\n        var c;\n        // @ts-ignore\n        const f = new e(i);\n        if (0 === r.length)\n            // @ts-ignore\n            for (let t = 0; t < i; ++t) f[t] = o[t];\n        else {\n            const t = r[0],\n                e = r[1];\n            // @ts-ignore\n            for (let r = 0; r < i; ++r) f[r] = n(t, e, [o[r], r])\n        }\n        return f\n    }\n\n    static of(...t:any) {\n        const r = this;\n        if (!u(r, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        const n = t.length;\n        if (r === ar) {\n            // @ts-ignore\n            const r = new ar(n),\n                e = ur(r);\n            for (let r = 0; r < n; ++r) e[r] = Rt(t[r]);\n            return r\n        }\n        // @ts-ignore\n        const e = new r(n);\n        // @ts-ignore\n        for (let r = 0; r < n; ++r) e[r] = t[r];\n        return e\n    }\n\n    keys() {\n        sr(this);\n        const t = ur(this);\n        return X(t)\n    }\n\n    values() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const r of q(t)) yield Mt(r)\n        }())\n    }\n\n    entries() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const [r, n] of H(t)) yield [r, Mt(n)]\n        }())\n    }\n\n    at(t:any) {\n        sr(this);\n        const r = ur(this),\n            n = it(r),\n            e = Zt(t),\n            o = e >= 0 ? e : n + e;\n        if (!(o < 0 || o >= n)) return Mt(r[o])\n    }\n\n    map(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = tr(e, ar);\n        if (s === ar) {\n            // @ts-ignore\n            const r = new ar(o),\n                s = ur(r);\n            for (let r = 0; r < o; ++r) {\n                const o = Mt(e[r]);\n                s[r] = Rt(n(t, i, [o, r, this]))\n            }\n            return r\n        }\n        const c = new s(o);\n        cr(c, o);\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            c[r] = n(t, i, [o, r, this])\n        }\n        return c\n    }\n\n    filter(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = [];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            // @ts-ignore\n            n(t, i, [o, r, this]) && F(s, o)\n        }\n        // @ts-ignore\n        const c = new (tr(e, ar))(s);\n        // @ts-ignore\n        return cr(c), c\n    }\n\n    reduce(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[0]), i = 1) : (o = r[0], i = 0);\n        for (let r = i; r < e; ++r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    reduceRight(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[e - 1]), i = e - 2) : (o = r[0], i = e - 1);\n        for (let r = i; r >= 0; --r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    forEach(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) n(t, i, [Mt(e[r]), r, this])\n    }\n\n    find(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    findLast(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findLastIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    every(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (!n(t, i, [Mt(e[r]), r, this])) return !1;\n        return !0\n    }\n\n    some(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (n(t, i, [Mt(e[r]), r, this])) return !0;\n        return !1\n    }\n\n    set(t: number, ...r: number[]) {\n        sr(this);\n        const n = ur(this),\n            e = Zt(r[0]);\n        if (e < 0) throw bt(\"Offset is out of bounds\");\n        if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n        if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n        if (ir(t)) return J(ur(this), ur(t), e);\n        if (Kt(t)) {\n            if (rr(et(t))) throw vt(\"Attempting to access detached ArrayBuffer\")\n        }\n        const o = it(n),\n            i = A(t),\n            s = $t(i.length);\n        if (e === 1 / 0 || s + e > o) throw bt(\"Offset is out of bounds\");\n        for (let t = 0; t < s; ++t) n[t + e] = Rt(i[t])\n    }\n\n    reverse() {\n        sr(this);\n        const t = ur(this);\n        return Q(t), this\n    }\n\n    fill(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this);\n        return Z(n, Rt(t), ...kt(r)), this\n    }\n\n    copyWithin(t: any, r: any, ...n: any[]) {\n        sr(this);\n        const e = ur(this);\n        return $(e, t, r, ...kt(n)), this\n    }\n\n    sort(...t:any) {\n        sr(this);\n        const r = ur(this),\n            n = void 0 !== t[0] ? t[0] : nr;\n        // @ts-ignore\n        return tt(r, ((t, r) => n(Mt(t), Mt(r)))), this\n    }\n\n    slice(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar);\n        if (n === ar) {\n            const n = new ct(et(r), ot(r), it(r));\n            // @ts-ignore\n            return new ar(et(rt(n, ...kt(t))))\n        }\n        const e = it(r),\n            o = Zt(t[0]),\n            i = void 0 === t[1] ? e : Zt(t[1]);\n        let s, c;\n        s = o === -1 / 0 ? 0 : o < 0 ? e + o > 0 ? e + o : 0 : e < o ? e : o, c = i === -1 / 0 ? 0 : i < 0 ? e + i > 0 ? e + i : 0 : e < i ? e : i;\n        const u = c - s > 0 ? c - s : 0,\n            f = new n(u);\n        if (cr(f, u), 0 === u) return f;\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        let h = 0;\n        for (; s < c;) f[h] = Mt(r[s]), ++s, ++h;\n        return f\n    }\n\n    subarray(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar),\n            e = new ct(et(r), ot(r), it(r)),\n            o = nt(e, ...kt(t)),\n            i = new n(et(o), ot(o), it(o));\n        // @ts-ignore\n        return cr(i), i\n    }\n\n    indexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return -1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        for (let r = o; r < e; ++r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n        lastIndexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = r.length >= 1 ? Zt(r[0]) : e - 1;\n        if (o === -1 / 0) return -1;\n        o >= 0 ? o = o < e - 1 ? o : e - 1 : o += e;\n        for (let r = o; r >= 0; --r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n    includes(t: unknown, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return !1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        const i = w(t);\n        for (let r = o; r < e; ++r) {\n            const e = Mt(n[r]);\n            if (i && w(e)) return !0;\n            if (e === t) return !0\n        }\n        return !1\n    }\n\n    join(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return _(r, ...kt(t))\n    }\n\n    toLocaleString(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return L(r, ...kt(t))\n    }\n\n    get [v]() {\n        if (ir(this)) return \"Float16Array\"\n    }\n}\n\nB(ar, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(ar, er,\n    {}), l(ar, Y);\nconst yr = ar.prototype;\n\nfunction pr(t: any, r: any, ...n: any[]) {\n    return Mt(gt(t, r, ...kt(n)))\n}\n\nfunction wr(t: any, r: any, n: number, ...e: any[]) {\n    return dt(t, r, Rt(n), ...kt(e))\n}\n\nB(yr, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(yr, g,\n    {\n        value: yr.values,\n        writable: !0,\n        configurable: !0\n    }), l(yr, G);\nexport\n{\n    ar as Float16Array, pr as getFloat16, Dt as hfround, ir as isFloat16Array, wr as setFloat16\n};","import type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {GLDataTexture} from \"@xeokit/webglutils\";\nimport {Float16Array} from \"./float16\";\n\nconst emptyDataTexture = new GLDataTexture({textureWidth: 0, textureHeight: 0});\n\n/**\n * Enables the currently bound ````WebGLTexture```` to be used as a data texture.\n */\nexport function disableFilteringForBoundTexture(gl: WebGL2RenderingContext) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n}\n\n/**\n * Creates a GLDataTexture that holds per-geometry matrices for positions decode.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param positionDecodeMatrices Positions decode matrix for each mesh in the layer\n */\nexport function createEachGeometryMatricesDataTexture(gl: WebGL2RenderingContext, positionDecodeMatrices: FloatArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: Positions decode matrix\n\n    const textureHeight = positionDecodeMatrices.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < positionDecodeMatrices.length; i++) {\n        textureData.set(positionDecodeMatrices [i], i * 24);   // 4x4 values\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n\n/**\n * Creates a GLDataTexture containing the given vertex positions.\n */\nexport function createPositionsDataTexture(gl: WebGL2RenderingContext, positions: FloatArrayParam): GLDataTexture {\n    const numVertices = positions.length / 3;\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(numVertices / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint16Array(textureDataSize);\n    //   dataTextureRamStats.sizeDataTexturePositions += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(positions, 0);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    // @ts-ignore\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 8-bit indices.\n */\nexport function createIndices8BitDataTexture(gl: WebGL2RenderingContext, indices_8Bits: IntArrayParam): GLDataTexture {\n    if (indices_8Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_8Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint8Array(textureDataSize);\n    //dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    textureData.set(indices_8Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 16-bit indices.\n */\nexport function createIndices16BitDataTexture(gl: WebGL2RenderingContext, indices_16Bits: IntArrayParam): GLDataTexture {\n    if (indices_16Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_16Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint16Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(indices_16Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 32-bit indices.\n */\nexport function createIndices32BitDataTexture(gl: WebGL2RenderingContext, indices_32Bits: IntArrayParam): GLDataTexture {\n    if (indices_32Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_32Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint32Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(indices_32Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 8-bit edge indices.\n */\nexport function createEdgeIndices8BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_8Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_8Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_8Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint8Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_8Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 16-bit edge indices.\n */\nexport function createEdgeIndices16BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_16Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_16Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_16Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint16Array(textureDataSize);\n    //     dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_16Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 32-bit edge indices.\n */\nexport function createEdgeIndices32BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_32Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_32Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_32Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint32Array(textureDataSize);\n    //   dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_32Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing per-mesh colors, pick colors, flags, vertex portion bases, indices portion bases, edge indices portion bases\n *\n * The texture will have:\n * - 4 RGBA columns per row: for each mesh (pick) color and flags(2)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param colors Color per mesh\n * @param pickColors Pick color per mesh\n * @param vertexBases Vertex index base for each mesh\n * @param indexBaseOffsets For triangles: array of offsets between the (gl_VertexID / 3) and the position where the indices start in the texture layer\n * @param edgeIndexBaseOffsets For edges: Array of offsets between the (gl_VertexID / 2) and the position where the edge indices start in the texture layer\n */\nexport function createEachMeshAttributesDataTexture(gl: WebGL2RenderingContext, colors: FloatArrayParam[], pickColors: FloatArrayParam[], vertexBases: IntArrayParam, indexBaseOffsets: IntArrayParam, edgeIndexBaseOffsets: IntArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: (RGBA) mesh color RGBA\n    //    - col1: (packed Uint32 as RGBA) mesh pick color\n    //    - col2: (packed 4 bytes as RGBA) mesh flags\n    //    - col3: (packed 4 bytes as RGBA) mesh flags2\n    //    - col4: (packed Uint32 bytes as RGBA) vertex base\n    //    - col5: (packed Uint32 bytes as RGBA) index base offset\n    //    - col6: (packed Uint32 bytes as RGBA) edge index base offset\n    //    - col7: (packed Uint32 bytes as RGBA) RTC view matrix index base offset\n\n    const textureHeight = colors.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 8;\n    const textureData = new Uint8Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < textureHeight; i++) {\n        textureData.set(colors [i], i * 28 + 0); // mesh color\n        textureData.set(pickColors [i], i * 28 + 4); // mesh pick color\n        textureData.set([0, 0, 0, 0], i * 28 + 8);  // mesh flags\n        textureData.set([0, 0, 0, 0], i * 28 + 12); // mesh flags2\n        textureData.set([(vertexBases[i] >> 24) & 255, (vertexBases[i] >> 16) & 255, (vertexBases[i] >> 8) & 255, (vertexBases[i]) & 255], i * 28 + 16);   // vertex base\n        textureData.set([(indexBaseOffsets[i] >> 24) & 255, (indexBaseOffsets[i] >> 16) & 255, (indexBaseOffsets[i] >> 8) & 255, (indexBaseOffsets[i]) & 255], i * 28 + 20);    // triangles index base offset\n        textureData.set([(edgeIndexBaseOffsets[i] >> 24) & 255, (edgeIndexBaseOffsets[i] >> 16) & 255, (edgeIndexBaseOffsets[i] >> 8) & 255, (edgeIndexBaseOffsets[i]) & 255], i * 28 + 24);    // edge index base offset\n    //    textureData.set([(rtcViewMatIndices[i] >> 24) & 255, (rtcViewMatIndices[i] >> 16) & 255, (rtcViewMatIndices[i] >> 8) & 255, (rtcViewMatIndices[i]) & 255], i * 28 + 28);    // RTC view matrix\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n}\n\n/**\n * Creates GLDataTexture containing a 3D offset for each mesh\n *\n * @param gl\n * @param offsets An offset for each mesh\n */\nexport function createEachEdgeOffsetDataTexture(gl: WebGL2RenderingContext, offsets: FloatArrayParam[]) :GLDataTexture{\n    const textureHeight = offsets.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 1;\n    const textureData = new Float32Array(3 * textureWidth * textureHeight);\n    for (let i = 0; i < offsets.length; i++) {\n        textureData.set(offsets [i], i * 3); // mesh offset\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32F, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB, gl.FLOAT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n}\n\n/**\n * Creates a GLDataTexture that holds per-mesh matrices for positions decode, position modeling, and normals modeling.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param positionDecodeMatrices Positions decode matrix for each mesh in the layer\n * @param matrices Positions instancing matrix for each mesh in the layer. Null if the meshes are not instanced.\n */\nexport function createEachMeshMatricesDataTexture(gl: WebGL2RenderingContext, positionDecodeMatrices: FloatArrayParam, matrices: FloatArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: Positions decode matrix\n    //    - col1: Positions modeling matrix\n    //    - col2: Normals modeling matrix\n\n    const textureHeight = positionDecodeMatrices.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < positionDecodeMatrices.length; i++) {\n        textureData.set(positionDecodeMatrices [i], i * 48);   // 4x4 values\n        textureData.set(matrices [i], i * 48 + 16);   // 4x4 values\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given mesh IDs.\n * This type of texture is used for a lookup table, of mesh IDs for given keys.\n *\n * @param gl\n * @param meshIds\n */\nexport function createPointerTableDataTexture(gl: WebGL2RenderingContext, meshIds: IntArrayParam): GLDataTexture {\n    if (meshIds.length == 0) {\n        return emptyDataTexture;\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    const lenArray = meshIds.length;\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(lenArray / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight;\n    const textureData = new Uint16Array(textureDataSize);\n    textureData.set(meshIds, 0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RED_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture that holds matrices.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of matrices\n *\n * @param gl\n * @param numMatrices\n */\nexport function createMatricesDataTexture(gl: WebGL2RenderingContext, numMatrices: number): GLDataTexture {\n    const textureHeight = numMatrices;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n","export class DataTextureBuffer { // Temp data buffer as we build a Layer; converted into data textures once Layer is built\n\n    positionsDecompressMatrices: number[];\n    positionsCompressed: number[];\n    indices_8Bits: number[];\n    indices_16Bits: number[];\n    indices_32Bits: number[];\n    edgeIndices_8Bits: number[];\n    edgeIndices_16Bits: number[];\n    edgeIndices_32Bits: number[];\n\n    eachPrimitiveMesh_8Bits: number[];\n    eachPrimitiveMesh_16Bits: number[];\n    eachPrimitiveMesh_32Bits: number[];\n\n    eachEdgeMesh_8Bits: number[];\n    eachEdgeMesh_16Bits: number[];\n    eachEdgeMesh_32Bits: number[];\n\n    eachMeshVertexPortionBase: number[];\n    eachMeshVertexPortionOffset: number[];\n    eachMeshEdgeIndicesOffset: number[];\n\n    eachMeshColor: any[];\n    eachMeshPickColor: any[];\n    eachMeshMatrices: any[];\n    eachMeshNormalMatrix: any[];\n    eachMeshPositionsDecompressMatrix: any[];\n    eachMeshFlags1: any[];\n    eachMeshFlags2: any[];\n    eachEdgeOffset: any[];\n    eachMeshParts: number[];\n\n    constructor() {\n        this.positionsDecompressMatrices = [];\n        this.positionsCompressed = [];\n        this.indices_8Bits = [];\n        this.indices_16Bits = [];\n        this.indices_32Bits = [];\n        this.edgeIndices_8Bits = [];\n        this.edgeIndices_16Bits = [];\n        this.edgeIndices_32Bits = [];\n        this.eachMeshVertexPortionBase = [];\n        this.eachMeshVertexPortionOffset = [];\n        this.eachMeshEdgeIndicesOffset = [];\n        this.eachMeshColor = [];\n        this.eachMeshPickColor = [];\n        this.eachMeshMatrices = [];\n        this.eachMeshNormalMatrix = [];\n        this.eachMeshPositionsDecompressMatrix = [];\n        this.eachMeshFlags1 = [];\n        this.eachMeshFlags2 = [];\n        this.eachPrimitiveMesh_32Bits = [];\n        this.eachPrimitiveMesh_16Bits = [];\n        this.eachPrimitiveMesh_8Bits = [];\n        this.eachEdgeMesh_32Bits = [];\n        this.eachEdgeMesh_16Bits = [];\n        this.eachEdgeMesh_8Bits = [];\n        this.eachEdgeOffset = [];\n        this.eachMeshParts = [];\n    }\n}","import {createVec4, identityMat4, transformPoint4} from \"@xeokit/matrix\";\nimport type {View} from \"@xeokit/viewer\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nimport type {RendererModelImpl} from \"./RendererModelImpl\";\nimport {DataTextureSet} from \"./DataTextureSet\";\nimport {MeshCounts} from \"./MeshCounts\";\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport {RENDER_PASSES} from './RENDER_PASSES';\nimport {LinesPrimitive, PointsPrimitive} from \"@xeokit/constants\";\nimport {AABB3ToOBB3, collapseAABB3, expandAABB3Point3} from \"@xeokit/boundaries\";\nimport type {GeometryBucketParams, GeometryCompressedParams, MeshParams} from \"@xeokit/scene\";\nimport type {RendererTextureSetImpl} from \"./RendererTextureSetImpl\";\nimport {\n    createEachEdgeOffsetDataTexture,\n    createEachMeshAttributesDataTexture,\n    createEachMeshMatricesDataTexture,\n    createEdgeIndices16BitDataTexture,\n    createEdgeIndices32BitDataTexture,\n    createEdgeIndices8BitDataTexture,\n    createIndices16BitDataTexture,\n    createIndices32BitDataTexture,\n    createIndices8BitDataTexture,\n    createPositionsDataTexture\n} from \"./dataTextures\";\nimport type {LayerParams} from \"./LayerParams\";\nimport type {GeometryBucketHandle} from \"./GeometryBucketHandle\";\nimport {DataTextureBuffer} from \"./DataTextureBuffer\";\n\nconst MAX_MESH_PARTS = (1 << 12); // 12 bits \nconst MAX_DATATEXTURE_HEIGHT = (1 << 11); // 2048\nconst INDICES_EDGE_INDICES_ALIGNMENT_SIZE = 8;\n\nconst identityMatrix = identityMat4();\nconst tempVec4a = createVec4([0, 0, 0, 1]);\nconst tempVec4b = createVec4([0, 0, 0, 1]);\nconst tempVec4c = createVec4([0, 0, 0, 1]);\nconst tempUint8Array4 = new Uint8Array(4);\nconst tempFloat32Array3 = new Float32Array(3);\n\n\ninterface GeometryHandle { // Storage handle for a geometry within a Layer\n    aabb: FloatArrayParam;\n    positionsDecompressMatrix: FloatArrayParam;\n    geometryBucketHandles: GeometryBucketHandle[]\n}\n\ninterface MeshPartParams {\n    aabb: FloatArrayParam;\n}\n\ninterface MeshPartHandle {\n    vertsBase: number;\n    numVerts: number;\n}\n\n/**\n * @private\n */\nexport interface LayerRenderState { // What a LayerRenderer needs to render this Layer\n    materialTextureSet: RendererTextureSetImpl; // Color, opacity, metal/roughness, ambient occlusion maps\n    dataTextureSet: DataTextureSet;  // Data textures containing geometry, transforms, flags and material attributes\n    primitive: number; // Layer primitive type\n    numIndices8Bits: number; // How many 8-bit encodable indices in layer\n    numIndices16Bits: number; // How many 16-bit encodable indices in layer\n    numIndices32Bits: number; // How many 32-bit encodable indices in layer\n    numEdgeIndices8Bits: number; // How many 8-bit encodable edge indices in layer\n    numEdgeIndices16Bits: number; // How many 16-bit encodable edge indices in layer\n    numEdgeIndices32Bits: number; // How many 32-bit encodable edge indices in layer\n    numVertices: number; // How many vertices in layer\n}\n\n/**\n * @private\n */\nexport class Layer {\n\n    rendererModel: RendererModelImpl;\n    layerIndex: number;\n    meshCounts: MeshCounts;\n    renderState: LayerRenderState;\n\n    #gl: WebGL2RenderingContext;\n    #view: View;\n    #dataTextureBuffer: DataTextureBuffer;\n    #geometryHandles: { [key: string]: any };\n    #meshPartHandles: MeshPartHandle[];\n    #numMeshParts: number;\n    #deferredSetFlagsActive: boolean;\n    #deferredSetFlagsDirty: boolean;\n    #built: boolean;\n\n    constructor(layerParams: LayerParams, renderers?: any) {\n\n        this.meshCounts = new MeshCounts();\n        this.layerIndex = layerParams.layerIndex;\n        this.rendererModel = layerParams.rendererModel;\n\n        this.renderState = <LayerRenderState>{\n            primitive: layerParams.primitive,\n            dataTextureSet: new DataTextureSet(),\n            numIndices8Bits: 0,\n            numIndices16Bits: 0,\n            numIndices32Bits: 0,\n            numEdgeIndices8Bits: 0,\n            numEdgeIndices16Bits: 0,\n            numEdgeIndices32Bits: 0,\n            numVertices: 0\n        };\n\n        this.#gl = layerParams.gl;\n        this.#view = layerParams.view;\n        this.#dataTextureBuffer = new DataTextureBuffer();\n        this.#numMeshParts = 0;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n        this.#built = false;\n\n        this.beginDeferredFlags();\n    }\n\n    get hash() {\n        return `layer-${this.renderState.primitive}`;\n    }\n\n    canCreateMesh(geometryCompressedParams: GeometryCompressedParams): boolean {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const renderState = this.renderState;\n        const numGeometryBuckets = geometryCompressedParams.geometryBuckets.length;\n        if ((this.#numMeshParts + numGeometryBuckets) > MAX_MESH_PARTS) {\n            return false;\n        }\n        let numPositions = 0;\n        let numIndices = 0;\n        for (let i = 0; i < numGeometryBuckets; i++) {\n            const geometryBucket = geometryCompressedParams.geometryBuckets[i];\n            numPositions += geometryBucket.positionsCompressed.length;\n            if (geometryBucket.indices) {\n                numIndices += geometryBucket.indices.length;\n            }\n        }\n        const primVerts = (geometryCompressedParams.primitive === PointsPrimitive) ? 1 : (geometryCompressedParams.primitive == LinesPrimitive ? 2 : 3);\n        const maxIndicesOfAnyBits = Math.max(renderState.numIndices8Bits, renderState.numIndices16Bits, renderState.numIndices32Bits);\n        const numVerts = numPositions / primVerts;\n        let numTriangleIndices = numIndices / 3;\n        return (renderState.numVertices + numVerts) <= MAX_DATATEXTURE_HEIGHT * 1024 && (numTriangleIndices + numIndices) <= MAX_DATATEXTURE_HEIGHT * 1024;\n    }\n\n    hasGeometry(geometryId: string): boolean {\n        return this.#geometryHandles[geometryId];\n    }\n\n    createGeometryCompressed(geometryCompressedParams: GeometryCompressedParams) {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const geometryBucketHandles = [];\n        for (let i = 0, len = geometryCompressedParams.geometryBuckets.length; i < len; i++) {\n            geometryBucketHandles.push(this.#createGeometryBucket(geometryCompressedParams.geometryBuckets[i]));\n        }\n        this.#geometryHandles[geometryCompressedParams.id] = <GeometryHandle>{\n            id: geometryCompressedParams.id,\n            aabb: geometryCompressedParams.aabb,\n            positionsDecompressMatrix: geometryCompressedParams.positionsDecompressMatrix,\n            geometryBucketHandles\n        };\n    }\n\n    #createGeometryBucket(geometryBucket: GeometryBucketParams): GeometryBucketHandle {\n        const renderState = this.renderState;\n        if (geometryBucket.indices) {  // Align indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const numVertsForPrim = (this.renderState.primitive === PointsPrimitive ? 1 : (this.renderState.primitive === LinesPrimitive ? 2 : 3));\n            const alignedIndicesLen = Math.ceil((geometryBucket.indices.length / numVertsForPrim) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * numVertsForPrim;\n            const alignedIndices = new Uint32Array(alignedIndicesLen);\n            alignedIndices.fill(0);\n            alignedIndices.set(geometryBucket.indices);\n            geometryBucket.indices = alignedIndices;\n        }\n        if (geometryBucket.edgeIndices) {  // Align edge indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const alignedEdgeIndicesLen = Math.ceil((geometryBucket.edgeIndices.length / 2) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * 2;\n            const alignedEdgeIndices = new Uint32Array(alignedEdgeIndicesLen);\n            alignedEdgeIndices.fill(0);\n            alignedEdgeIndices.set(geometryBucket.edgeIndices);\n            geometryBucket.edgeIndices = alignedEdgeIndices;\n        }\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const positionsCompressed = geometryBucket.positionsCompressed;\n        const indices = geometryBucket.indices;\n        const edgeIndices = geometryBucket.edgeIndices;\n        const vertexBase = dataTextureBuffer.positionsCompressed.length / 3;\n        const numVertices = positionsCompressed.length / 3;\n        for (let i = 0, len = positionsCompressed.length; i < len; i++) {\n            dataTextureBuffer.positionsCompressed.push(positionsCompressed[i]);\n        }\n        let indicesBase;\n        let numTriangles = 0;\n        if (indices) {\n            numTriangles = indices.length / 3;\n            let indicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                indicesBuffer = dataTextureBuffer.indices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                indicesBuffer = dataTextureBuffer.indices_16Bits;\n            } else {\n                indicesBuffer = dataTextureBuffer.indices_32Bits;\n            }\n            indicesBase = indicesBuffer.length / 3;\n            for (let i = 0, len = indices.length; i < len; i++) {\n                indicesBuffer.push(indices[i]);\n            }\n        }\n        let edgeIndicesBase;\n        let numEdges = 0;\n        if (edgeIndices) {\n            numEdges = edgeIndices.length / 2;\n            let edgeIndicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_16Bits;\n            } else {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_32Bits;\n            }\n            edgeIndicesBase = edgeIndicesBuffer.length / 2;\n            for (let i = 0, len = edgeIndices.length; i < len; i++) {\n                edgeIndicesBuffer.push(edgeIndices[i]);\n            }\n        }\n        renderState.numVertices += numVertices;\n        return <GeometryBucketHandle>{\n            vertexBase,\n            numVertices,\n            numTriangles,\n            numEdges,\n            indicesBase,\n            edgeIndicesBase\n        };\n    }\n\n    createMesh(meshParams: MeshParams): number {\n        if (this.#built) {\n            throw new Error(\"Already built\");\n        }\n        const meshIndex = this.meshCounts.numMeshes;\n        const meshPartIds: number[] = [];\n        if (!meshParams.geometryId) {\n            throw new Error(\"geometryId expected\");\n        }\n        const geometryHandle = this.#geometryHandles[meshParams.geometryId];\n        if (!geometryHandle) {\n            throw new Error(\"Geometry not found\");\n        }\n        geometryHandle.geometryBucketHandles.forEach((geometryBucketHandle: GeometryBucketHandle) => {\n            const meshPartId = this.#createMeshPart(meshParams, geometryHandle, geometryBucketHandle);\n            meshPartIds.push(meshPartId);\n        });\n        const worldAABB = collapseAABB3();\n        const geometryOBB = AABB3ToOBB3(geometryHandle.aabb);\n        for (let i = 0, len = geometryOBB.length; i < len; i += 4) {\n            tempVec4a[0] = geometryOBB[i + 0];\n            tempVec4a[1] = geometryOBB[i + 1];\n            tempVec4a[2] = geometryOBB[i + 2];\n            if (meshParams.matrix) {\n                transformPoint4(meshParams.matrix, tempVec4a, tempVec4b);\n                // transformPoint4(meshParams.matrix, tempVec4b, tempVec4c);\n                expandAABB3Point3(worldAABB, tempVec4b);\n            } else {\n                expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n        this.meshCounts.numMeshes++;\n        return meshIndex;\n    }\n\n    #createMeshPart(meshParams: MeshParams, geometryHandle: GeometryHandle, geometryBucketHandle: GeometryBucketHandle): number {\n\n        const dataTextureBuffer = this.#dataTextureBuffer;\n\n        const renderState = this.renderState;\n\n        const matrix = meshParams.matrix || identityMatrix;\n        const color = meshParams.color || [255, 255, 255];\n        const opacity = meshParams.opacity;\n        const metallic = meshParams.metallic;\n        const roughness = meshParams.roughness;\n\n        const positionsIndex = dataTextureBuffer.positionsCompressed.length;\n        const vertsIndex = positionsIndex / 3;\n\n        dataTextureBuffer.eachMeshPositionsDecompressMatrix.push(geometryHandle.positionsDecompressMatrix);\n        dataTextureBuffer.eachMeshMatrices.push(matrix);\n        dataTextureBuffer.eachMeshColor.push([color[0], color[1], color[2], 255]);\n        dataTextureBuffer.eachMeshPickColor.push(meshParams.pickColor);\n\n        let currentNumIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumIndices = renderState.numIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumIndices = renderState.numIndices16Bits;\n        } else {\n            currentNumIndices = renderState.numIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshVertexPortionBase.push(geometryBucketHandle.vertexBase);\n        dataTextureBuffer.eachMeshVertexPortionOffset.push(currentNumIndices / 3 - geometryBucketHandle.indicesBase);\n\n        // Edge indices\n\n        let currentNumEdgeIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices16Bits;\n        } else {\n            currentNumEdgeIndices = renderState.numEdgeIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshEdgeIndicesOffset.push(currentNumEdgeIndices / 2 - geometryBucketHandle.edgeIndicesBase);\n\n        // Primitive -> mesh lookup\n\n        const meshPartId = this.#meshPartHandles.length;\n\n        if (geometryBucketHandle.numTriangles > 0) {\n            const numIndices = geometryBucketHandle.numTriangles * 3;\n            let eachPrimitiveMeshBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_8Bits;\n                renderState.numIndices8Bits += numIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_16Bits;\n                renderState.numIndices16Bits += numIndices;\n            } else {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_32Bits;\n                renderState.numIndices32Bits += numIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numTriangles; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                eachPrimitiveMeshBuffer.push(meshPartId);\n            }\n        }\n\n        // Edge index -> mesh lookup\n\n        if (geometryBucketHandle.numEdges > 0) {\n            let numEdgeIndices = geometryBucketHandle.numEdges * 2;\n            let edgeIndicesMeshIdBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_8Bits;\n                renderState.numEdgeIndices8Bits += numEdgeIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_16Bits;\n                renderState.numEdgeIndices16Bits += numEdgeIndices;\n            } else {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_32Bits;\n                renderState.numEdgeIndices32Bits += numEdgeIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numEdges; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                edgeIndicesMeshIdBuffer.push(meshPartId);\n            }\n        }\n        dataTextureBuffer.eachEdgeOffset.push([0, 0, 0]);\n\n        this.#meshPartHandles.push(<MeshPartHandle>{\n            vertsBase: vertsIndex,\n            numVerts: geometryBucketHandle.numTriangles //////////////////// TODO\n        });\n        this.#numMeshParts++;\n        return meshPartId;\n    }\n\n    build() {\n        if (this.#built) {\n            throw new Error(\"Already built\");\n        }\n        const gl = this.#gl;\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        dataTextureSet.positions = createPositionsDataTexture(gl, dataTextureBuffer.positionsCompressed);\n        dataTextureSet.indices_8Bits = createIndices8BitDataTexture(gl, dataTextureBuffer.indices_8Bits);\n        dataTextureSet.indices_16Bits = createIndices16BitDataTexture(gl, dataTextureBuffer.indices_16Bits);\n        dataTextureSet.indices_32Bits = createIndices32BitDataTexture(gl, dataTextureBuffer.indices_32Bits);\n        dataTextureSet.edgeIndices_8Bits = createEdgeIndices8BitDataTexture(gl, dataTextureBuffer.edgeIndices_8Bits);\n        dataTextureSet.edgeIndices_16Bits = createEdgeIndices16BitDataTexture(gl, dataTextureBuffer.edgeIndices_16Bits);\n        dataTextureSet.edgeIndices_32Bits = createEdgeIndices32BitDataTexture(gl, dataTextureBuffer.edgeIndices_32Bits);\n        dataTextureSet.eachMeshAttributes = createEachMeshAttributesDataTexture(gl,\n            dataTextureBuffer.eachMeshColor,\n            dataTextureBuffer.eachMeshPickColor,\n            dataTextureBuffer.eachMeshVertexPortionBase,\n            dataTextureBuffer.eachMeshVertexPortionOffset,\n            dataTextureBuffer.eachMeshEdgeIndicesOffset);\n        dataTextureSet.eachMeshMatrices = createEachMeshMatricesDataTexture(gl, dataTextureBuffer.eachMeshPositionsDecompressMatrix, dataTextureBuffer.eachMeshMatrices);\n        // dataTextureSet.eachPrimitiveMesh8BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_8Bits);\n        // dataTextureSet.eachPrimitiveMesh16BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_16Bits);\n        // dataTextureSet.eachPrimitiveMesh32BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_32Bits);\n        // dataTextureSet.eachEdgeMesh8BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_8Bits);\n        // dataTextureSet.eachEdgeMesh16BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_16Bits);\n        // dataTextureSet.eachEdgeMesh32BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_32Bits);\n        dataTextureSet.eachEdgeOffset = createEachEdgeOffsetDataTexture(gl, dataTextureBuffer.eachEdgeOffset);\n        dataTextureSet.build();\n        // @ts-ignore\n        this.#dataTextureBuffer = null;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n        this.#built = true;\n    }\n\n    isEmpty() {\n        return this.meshCounts.numMeshes == 0;\n    }\n\n    initFlags(meshIndex: number, flags: number, meshTransparent: boolean) {\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            this.meshCounts.numVisible++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        }\n        if (meshTransparent) {\n            this.meshCounts.numTransparent++;\n        }\n        this.#setMeshFlags(meshIndex, flags, meshTransparent);\n        this.#setMeshFlags2(meshIndex, flags);\n    }\n\n    beginDeferredFlags() {\n        this.#deferredSetFlagsActive = true;\n    }\n\n    commitDeferredFlags() {\n        this.#deferredSetFlagsActive = false;\n        if (!this.#deferredSetFlagsDirty) {\n            return;\n        }\n        this.#deferredSetFlagsDirty = false;\n        const gl = this.#gl;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachMeshAttributes.textureWidth, dataTextureSet.eachMeshAttributes.textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, dataTextureSet.eachMeshAttributes.textureData);\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachEdgeOffset.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachEdgeOffset.textureWidth, dataTextureSet.eachEdgeOffset.textureHeight, gl.RGB, gl.FLOAT, dataTextureSet.eachEdgeOffset.textureData);\n    }\n\n    flushInitFlags() {\n        this.commitDeferredFlags();\n    }\n\n    setMeshVisible(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            debugger;\n            this.meshCounts.numVisible++;\n        } else {\n            this.meshCounts.numVisible--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshHighlighted(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        } else {\n            this.meshCounts.numHighlighted--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshXRayed(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        } else {\n            this.meshCounts.numXRayed--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshSelected(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        } else {\n            this.meshCounts.numSelected--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshEdges(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        } else {\n            this.meshCounts.numEdges--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshClippable(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        } else {\n            this.meshCounts.numClippable--;\n        }\n        this.#setMeshFlags2(meshIndex, flags);\n    }\n\n    setMeshCulled(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        } else {\n            this.meshCounts.numCulled--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshCollidable(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n    }\n\n    setMeshPickable(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        } else {\n            this.meshCounts.numPickable--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshColor(meshIndex: number, color: FloatArrayParam, transparent?: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = color[0];\n        tempUint8Array4 [1] = color[1];\n        tempUint8Array4 [2] = color[2];\n        tempUint8Array4 [3] = color[3];\n        // @ts-ignore\n        dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshTransparent(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (transparent) {\n            this.meshCounts.numTransparent++;\n            this.meshCounts.numTransparent++;\n        } else {\n            this.meshCounts.numTransparent--;\n            this.meshCounts.numTransparent--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    #setMeshFlags(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const visible = !!(flags & SCENE_OBJECT_FLAGS.VISIBLE);\n        const xrayed = !!(flags & SCENE_OBJECT_FLAGS.XRAYED);\n        const highlighted = !!(flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & SCENE_OBJECT_FLAGS.SELECTED);\n        const edges = !!(flags & SCENE_OBJECT_FLAGS.EDGES);\n        const pickable = !!(flags & SCENE_OBJECT_FLAGS.PICKABLE);\n        const culled = !!(flags & SCENE_OBJECT_FLAGS.CULLED);\n        let f0; // Color\n        if (!visible || culled || xrayed) { // Highlight & select are layered on top of color - not mutually exclusive\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n        let f1; // Silhouette\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f2 = 0; // Edges\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (transparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED; // Pick\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = f0;\n        tempUint8Array4 [1] = f1;\n        tempUint8Array4 [2] = f2;\n        tempUint8Array4 [3] = f3;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28 + 8);\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 2, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    #setMeshFlags2(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const clippable = !!(flags & SCENE_OBJECT_FLAGS.CLIPPABLE) ? 255 : 0;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = clippable;\n        tempUint8Array4 [1] = 0;\n        tempUint8Array4 [2] = 1;\n        tempUint8Array4 [3] = 2;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28 + 12); // Flags\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 3, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshOffset(meshIndex: number, offset: FloatArrayParam) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempFloat32Array3 [0] = offset[0];\n        tempFloat32Array3 [1] = offset[1];\n        tempFloat32Array3 [2] = offset[2];\n        // dataTextureSet.eachMeshOffset.textureData.set(tempFloat32Array3, meshIndex * 3);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        //gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshOffset.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGB, gl.FLOAT, tempFloat32Array3);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshMatrix(meshIndex: number, matrix: FloatArrayParam) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n\n    }\n\n    setMeshViewMatrixIndex(meshIndex: number, index: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        // tempUint8Array4 [0] = color[0];\n        // tempUint8Array4 [1] = color[1];\n        // tempUint8Array4 [2] = color[2];\n        // tempUint8Array4 [3] = color[3];\n        // // @ts-ignore\n        // dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // // @ts-ignore\n        // gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        // gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    destroy() {\n        this.renderState.dataTextureSet.destroy();\n    }\n}\n\n","import type {Geometry, RendererGeometry} from \"@xeokit/scene\";\n\n/**\n * @private\n */\nexport class RendererGeometryImpl implements RendererGeometry {\n\n    constructor() {\n    }\n}","import type {RendererTexture, Texture} from \"@xeokit/scene\";\nimport type {GLTexture} from \"@xeokit/webglutils\";\n\n/**\n * @private\n */\nexport class RendererTextureImpl implements RendererTexture {\n\n    texture: Texture | null;\n    texture2D: GLTexture;\n\n    constructor(texture: Texture | null, texture2D: GLTexture) {\n        this.texture = texture\n        this.texture2D = texture2D;\n    }\n\n    destroy() {\n        if (this.texture2D) {\n            this.texture2D.destroy();\n        }\n    }\n\n\n}\n","\nimport {createAABB3} from \"@xeokit/boundaries\";\nimport {createVec3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport type {RendererMeshImpl} from \"./RendererMeshImpl\";\nimport type {RendererViewObject} from \"viewer/src/RendererViewObject\";\nimport type {RendererModel, RendererObject, SceneModel, SceneObject} from \"@xeokit/scene\";\n\nconst tempIntRGB = new Uint16Array([0, 0, 0]);\n\n/**\n * @private\n */\nexport class RendererObjectImpl implements RendererObject, RendererViewObject {\n\n    readonly id: string;\n    readonly model: SceneModel;\n    readonly sceneObject: SceneObject;\n    readonly layerId: string | null;\n\n    readonly rendererMeshes: RendererMeshImpl[];\n\n    #flags: number;\n    #aabb: FloatArrayParam;\n    #offsetAABB: FloatArrayParam;\n    #offset: FloatArrayParam;\n    #colorizeUpdated: boolean;\n    #opacityUpdated: boolean;\n\n    constructor(params: {\n        id: string,\n        rendererModel: RendererModel,\n        rendererMeshes: RendererMeshImpl[],\n        aabb: any,\n        layerId?: string\n    }) {\n        this.id = params.id;\n        //this.model = params.rendererModel;\n        this.rendererMeshes = params.rendererMeshes || [];\n        this.#flags = 0;\n        this.#aabb = params.aabb;\n        this.#offsetAABB = createAABB3(params.aabb);\n        this.#offset = createVec3();\n        this.#colorizeUpdated = false;\n        this.#opacityUpdated = false;\n\n        this.layerId = params.layerId || null;\n\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {  // TODO: tidier way? Refactor?\n            this.rendererMeshes[i].setSceneObject(this);\n        }\n    }\n\n    get aabb(): FloatArrayParam {\n        return this.#offsetAABB;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.VISIBLE) === visible) {\n            return;\n        }\n        this.#flags = visible ? this.#flags | SCENE_OBJECT_FLAGS.VISIBLE : this.#flags & ~SCENE_OBJECT_FLAGS.VISIBLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setVisible(this.#flags);\n        }\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) === highlighted) {\n            return;\n        }\n        this.#flags = highlighted ? this.#flags | SCENE_OBJECT_FLAGS.HIGHLIGHTED : this.#flags & ~SCENE_OBJECT_FLAGS.HIGHLIGHTED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setHighlighted(this.#flags);\n        }\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.XRAYED) === xrayed) {\n            return;\n        }\n        this.#flags = xrayed ? this.#flags | SCENE_OBJECT_FLAGS.XRAYED : this.#flags & ~SCENE_OBJECT_FLAGS.XRAYED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setXRayed(this.#flags);\n        }\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.SELECTED) === selected) {\n            return;\n        }\n        this.#flags = selected ? this.#flags | SCENE_OBJECT_FLAGS.SELECTED : this.#flags & ~SCENE_OBJECT_FLAGS.SELECTED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setSelected(this.#flags);\n        }\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.EDGES) === edges) {\n            return;\n        }\n        this.#flags = edges ? this.#flags | SCENE_OBJECT_FLAGS.EDGES : this.#flags & ~SCENE_OBJECT_FLAGS.EDGES;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setEdges(this.#flags);\n        }\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.CULLED) === culled) {\n            return;\n        }\n        this.#flags = culled ? this.#flags | SCENE_OBJECT_FLAGS.CULLED : this.#flags & ~SCENE_OBJECT_FLAGS.CULLED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setCulled(this.#flags);\n        }\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        if ((!!(this.#flags & SCENE_OBJECT_FLAGS.CLIPPABLE)) === clippable) {\n            return;\n        }\n        this.#flags = clippable ? this.#flags | SCENE_OBJECT_FLAGS.CLIPPABLE : this.#flags & ~SCENE_OBJECT_FLAGS.CLIPPABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setClippable(this.#flags);\n        }\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.COLLIDABLE) === collidable) {\n            return;\n        }\n        this.#flags = collidable ? this.#flags | SCENE_OBJECT_FLAGS.COLLIDABLE : this.#flags & ~SCENE_OBJECT_FLAGS.COLLIDABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setCollidable(this.#flags);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.PICKABLE) === pickable) {\n            return;\n        }\n        this.#flags = pickable ? this.#flags | SCENE_OBJECT_FLAGS.PICKABLE : this.#flags & ~SCENE_OBJECT_FLAGS.PICKABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setPickable(this.#flags);\n        }\n    }\n\n    setColorize(viewIndex: number, color?: FloatArrayParam): void { // [0..1, 0..1, 0..1]\n        if (color) {\n            tempIntRGB[0] = Math.floor(color[0] * 255.0); // Quantize\n            tempIntRGB[1] = Math.floor(color[1] * 255.0);\n            tempIntRGB[2] = Math.floor(color[2] * 255.0);\n            for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n                this.rendererMeshes[i].setColorize(tempIntRGB);\n            }\n        } else {\n            for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n                this.rendererMeshes[i].setColorize(null);\n            }\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity?: number): void {\n        if (this.rendererMeshes.length === 0) {\n            return;\n        }\n        // @ts-ignore\n        const lastOpacityQuantized = this.rendererMeshes[0].colorize[3];\n        let opacityQuantized = 255;\n        if (opacity !== null && opacity !== undefined) {\n            if (opacity < 0) {\n                opacity = 0;\n            } else if (opacity > 1) {\n                opacity = 1;\n            }\n            opacityQuantized = Math.floor(opacity * 255.0); // Quantize\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        } else {\n            opacityQuantized = 255.0;\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        }\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setOpacity(opacityQuantized, this.#flags);\n        }\n    }\n\n    setOffset(viewIndex: number, offset: FloatArrayParam): void {\n        // if (offset) {\n        //     this.#offset[0] = offset[0];\n        //     this.#offset[1] = offset[1];\n        //     this.#offset[2] = offset[2];\n        // } else {\n        //     this.#offset[0] = 0;\n        //     this.#offset[1] = 0;\n        //     this.#offset[2] = 0;\n        // }\n        // for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n        //     this.rendererMeshes[i].setOffset(this.#offset);\n        // }\n        // this.#offsetAABB[0] = this.#aabb[0] + this.#offset[0];\n        // this.#offsetAABB[1] = this.#aabb[1] + this.#offset[1];\n        // this.#offsetAABB[2] = this.#aabb[2] + this.#offset[2];\n        // this.#offsetAABB[3] = this.#aabb[3] + this.#offset[0];\n        // this.#offsetAABB[4] = this.#aabb[4] + this.#offset[1];\n        // this.#offsetAABB[5] = this.#aabb[5] + this.#offset[2];\n        // // this.scene.#aabbDirty = true;\n        // // this.scene._objectOffsetUpdated(this, offset);\n        // // this.rendererModel._aabbDirty = true;\n        // // this.rendererModel.glRedraw();\n    }\n\n    build(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].build(this.#flags);\n        }\n    }\n\n    finalize2(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].finalize2();\n        }\n    }\n\n    destroy(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].destroy();\n        }\n    }\n}\n","import type {RendererGeometry, RendererMesh, RendererObject, RendererTextureSet, SceneObject} from \"@xeokit/scene\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createAABB3} from \"@xeokit/boundaries\";\n\nimport type {RenderContext} from \"./RenderContext\";\nimport type {Layer} from \"./Layer\";\nimport type {Pickable} from \"./Pickable\";\nimport {createMat4, mulMat4, transformPoint3, translationMat4c} from \"@xeokit/matrix\";\nimport type {Tile, TileManager} from \"./TileManager\";\n\nconst tempMat4a = createMat4();\nconst tempMat4b = createMat4();\n\n\n/**\n * @private\n */\nexport class RendererMeshImpl implements RendererMesh, Pickable {\n\n    id: string;\n    color: FloatArrayParam;\n    rendererGeometry: RendererGeometry;\n    rendererTextureSet: RendererTextureSet;\n    matrix: FloatArrayParam;\n    metallic: number;\n    roughness: number;\n    opacity: number;\n    pickId: number;\n    tileManager: TileManager;\n    tile: Tile;\n    sceneObjectRenderer: RendererObject | null;\n    aabb: FloatArrayParam;\n    layer: Layer;\n    meshIndex: number;\n    colorize: FloatArrayParam;\n    colorizing: boolean;\n    transparent: boolean;\n\n\n    constructor(params: {\n        tileManager: TileManager,\n        layer: Layer,\n        id: string,\n        matrix: FloatArrayParam;\n        metallic: number;\n        roughness: number;\n        color: FloatArrayParam,\n        opacity: number,\n        rendererTextureSet: RendererTextureSet\n        rendererGeometry: RendererGeometry,\n        meshIndex: number\n    }) {\n        this.sceneObjectRenderer = null;\n        this.tileManager = params.tileManager;\n        this.id = params.id;\n        this.pickId = 0;\n        this.color = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorize = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorizing = false;\n        this.transparent = (params.opacity < 255);\n        this.layer = params.layer;\n        this.matrix = params.matrix;\n        this.metallic = params.metallic;\n        this.roughness = params.roughness;\n        this.opacity = params.opacity;\n        this.aabb = createAABB3();\n        this.rendererTextureSet = params.rendererTextureSet;\n        this.rendererGeometry = params.rendererGeometry;\n        this.meshIndex = params.meshIndex;\n    }\n\n    delegatePickedEntity(): SceneObject {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    setSceneObject(sceneObjectRenderer: RendererObject) {\n        this.sceneObjectRenderer = sceneObjectRenderer;\n    }\n\n    build(flags: number) {\n        // @ts-ignore\n        this.layer.initFlags(this.meshIndex, flags, this.transparent);\n    }\n\n    finalize2() {\n        // @ts-ignore\n        if (this.layer.flushInitFlags) {\n            this.layer.flushInitFlags();\n        }\n    }\n\n    setVisible(flags: any) {\n        this.layer.setMeshVisible(this.meshIndex, flags, this.transparent);\n    }\n\n    setMatrix(matrix: FloatArrayParam): void {\n        const center = transformPoint3(matrix, [0, 0, 0]);\n        const oldTile = this.tile;\n        this.tile = oldTile ? this.tileManager.updateTileCenter(oldTile, center) : this.tileManager.getTile(center);\n        const tileChanged = !oldTile || oldTile.id !== this.tile.id;\n        const tileCenter = this.tile.center;\n        const needRTC = (tileCenter[0] !== 0 || tileCenter[1] !== 0 || tileCenter[2] !== 0);\n        this.layer.setMeshMatrix(this.meshIndex, needRTC\n            ? mulMat4(matrix, translationMat4c(-tileCenter[0], -tileCenter[1], -tileCenter[2], tempMat4a), tempMat4b)\n            : matrix);\n        if (tileChanged) {\n            this.layer.setMeshViewMatrixIndex(this.meshIndex, this.tile.index);\n        }\n    }\n\n    setMetallic(metallic: number): void {\n    }\n\n    setRoughness(roughness: number): void {\n    }\n\n    setColor(color: FloatArrayParam) {\n        this.color[0] = color[0];\n        this.color[1] = color[1];\n        this.color[2] = color[2];\n        if (!this.colorizing) {\n            this.layer.setMeshColor(this.meshIndex, this.color);\n        }\n    }\n\n    setColorize(colorize: FloatArrayParam | null) {\n        const setOpacity = false;\n        if (colorize) {\n            this.colorize[0] = colorize[0];\n            this.colorize[1] = colorize[1];\n            this.colorize[2] = colorize[2];\n            this.layer.setMeshColor(this.meshIndex, this.colorize, setOpacity);\n            this.colorizing = true;\n        } else {\n            this.layer.setMeshColor(this.meshIndex, this.color, setOpacity);\n            this.colorizing = false;\n        }\n    }\n\n    setOpacity(opacity: number, flags: number) {\n        const newTransparent = (opacity < 255);\n        const lastTransparent = this.transparent;\n        const changingTransparency = (lastTransparent !== newTransparent);\n        this.color[3] = opacity;\n        this.colorize[3] = opacity;\n        this.transparent = newTransparent;\n        if (this.colorizing) {\n            this.layer.setMeshColor(this.meshIndex, this.colorize);\n        } else {\n            this.layer.setMeshColor(this.meshIndex, this.color);\n        }\n        if (changingTransparency) {\n            this.layer.setMeshTransparent(this.meshIndex, flags, newTransparent);\n        }\n    }\n\n    setHighlighted(flags: number) {\n        this.layer.setMeshHighlighted(this.meshIndex, flags, this.transparent);\n    }\n\n    setXRayed(flags: number) {\n        this.layer.setMeshXRayed(this.meshIndex, flags, this.transparent);\n    }\n\n    setSelected(flags: number) {\n        this.layer.setMeshSelected(this.meshIndex, flags, this.transparent);\n    }\n\n    setEdges(flags: number) {\n        this.layer.setMeshEdges(this.meshIndex, flags, this.transparent);\n    }\n\n    setClippable(flags: number) {\n        this.layer.setMeshClippable(this.meshIndex, flags);\n    }\n\n    setCollidable(flags: number) {\n        this.layer.setMeshCollidable(this.meshIndex, flags);\n    }\n\n    setPickable(flags: number) {\n        this.layer.setMeshPickable(this.meshIndex, flags, this.transparent);\n    }\n\n    setCulled(flags: number) {\n        this.layer.setMeshCulled(this.meshIndex, flags, this.transparent);\n    }\n\n    canPickTriangle() {\n        return false;\n    }\n\n    drawPickTriangles(drawFlags: any, renderContext: any) {\n        // NOP\n    }\n\n    pickTriangleSurface(pickResult: any) {\n        // NOP\n    }\n\n    canPickWorldPos() {\n        return true;\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        //this.sceneObjectRenderer.rendererModel.drawPickNormals(renderContext);\n    }\n\n    // delegatePickedEntity(): SceneObjectRendererCommands {\n    //     return <SceneObjectRendererCommands>this.sceneObjectRenderer;\n    // }\n\n    destroy() {\n        if (this.tile && this.tileManager) {\n            this.tileManager.putTile(this.tile);\n        }\n    }\n}\n","import type { RendererTextureSet} from \"@xeokit/scene\";\nimport type {RendererTextureImpl} from \"./RendererTextureImpl\";\n\n\n/**\n * @private\n */\nexport class RendererTextureSetImpl implements RendererTextureSet {\n\n    public readonly id: string;\n    public readonly colorTexture: RendererTextureImpl;\n    public readonly metallicRoughnessTexture: RendererTextureImpl;\n    public readonly emissiveTexture: RendererTextureImpl;\n    public readonly occlusionTexture: RendererTextureImpl;\n\n    constructor(params: {\n        id: string;\n        colorTexture: RendererTextureImpl;\n        metallicRoughnessTexture: RendererTextureImpl;\n        emissiveTexture: RendererTextureImpl;\n        occlusionTexture: RendererTextureImpl;\n    }) {\n        this.id = params.id;\n        this.colorTexture = params.colorTexture;\n        this.metallicRoughnessTexture = params.metallicRoughnessTexture;\n        this.emissiveTexture = params.emissiveTexture;\n        this.occlusionTexture = params.occlusionTexture;\n    }\n}\n","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter, TextureTranscoder} from \"@xeokit/core\";\nimport {createUUID, loadArraybuffer} from \"@xeokit/utils\";\nimport {collapseAABB3, expandAABB3} from \"@xeokit/boundaries\";\nimport {composeMat4, createMat4, createVec3, createVec4, eulerToQuat, identityQuat, mulMat4} from \"@xeokit/matrix\";\n\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {Camera, View} from \"@xeokit/viewer\";\nimport type {Viewer} from \"@xeokit/viewer\";\nimport {GLTexture} from \"@xeokit/webglutils\";\nimport type {\n    Geometry,\n    GeometryCompressedParams,\n    Mesh,\n    RendererGeometry,\n    RendererMesh,\n    RendererModel,\n    RendererTexture,\n    RendererTextureSet,\n    SceneModel,\n    SceneObject,\n    Texture,\n    TextureSet\n} from \"@xeokit/scene\";\nimport type {WebGLRenderer} from \"./WebGLRenderer\";\nimport {Layer} from \"./Layer\";\nimport type {RenderContext} from \"./RenderContext\";\nimport {RendererGeometryImpl} from \"./RendererGeometryImpl\";\nimport type {RendererViewObject} from \"viewer/src/RendererViewObject\";\nimport {RendererTextureImpl} from \"./RendererTextureImpl\";\nimport {RendererObjectImpl} from \"./RendererObjectImpl\";\nimport {RendererMeshImpl} from \"./RendererMeshImpl\";\nimport {RendererTextureSetImpl} from \"./RendererTextureSetImpl\";\nimport type {LayerParams} from \"./LayerParams\";\nimport type {TileManager} from \"./TileManager\";\n\n\nconst tempVec3a = createVec3();\nconst tempMat4 = createMat4();\n\nconst defaultScale = createVec3([1, 1, 1]);\nconst defaultPosition = createVec3([0, 0, 0]);\nconst defaultRotation = createVec3([0, 0, 0]);\nconst defaultQuaternion = identityQuat();\n\nconst defaultColorTextureId = \"defaultColorTexture\";\nconst defaultMetalRoughTextureId = \"defaultMetalRoughTexture\";\nconst defaultNormalsTextureId = \"defaultNormalsTexture\";\nconst defaultEmissiveTextureId = \"defaultEmissiveTexture\";\nconst defaultOcclusionTextureId = \"defaultOcclusionTexture\";\nconst defaultTextureSetId = \"defaultTextureSet\";\n\n/**\n * @private\n */\nexport class RendererModelImpl extends Component implements RendererModel {\n\n    readonly qualityRender: boolean;\n    declare readonly id: string;\n    declare readonly destroyed: boolean;\n    declare built: boolean;\n\n    sceneModel: SceneModel | null;\n\n    rendererGeometries: { [key: string]: RendererGeometry };\n    rendererTextures: { [key: string]: RendererTexture };\n    rendererTextureSets: { [key: string]: RendererTextureSet; };\n    rendererMeshes: { [key: string]: RendererMesh };\n    rendererObjects: { [key: string]: RendererObjectImpl };\n    rendererObjectsList: RendererObjectImpl[];\n\n    rendererViewObjects: { [key: string]: RendererViewObject };\n\n    readonly viewer: Viewer;\n\n    layerList: Layer[];\n    readonly onBuilt: EventEmitter<RendererModel, null>;\n    declare readonly onDestroyed: EventEmitter<Component, null>;\n    #view: View;\n    #webglRenderer: WebGLRenderer;\n    #renderContext: RenderContext;\n    #position: FloatArrayParam;\n    #rotation: FloatArrayParam;\n    #quaternion: FloatArrayParam;\n    #scale: FloatArrayParam;\n    #worldMatrix: FloatArrayParam;\n    #viewMatrix: FloatArrayParam;\n    #colorTextureEnabled: boolean;\n    #backfaces: boolean;\n    #layers: { [key: string]: Layer };\n    #numGeometries: number;\n    #numTriangles: number;\n    #numLines: number;\n    #numPoints: number;\n    #numViewerObjects: number;\n    #textureTranscoder: TextureTranscoder;\n    #aabbDirty: boolean;\n    #edgeThreshold: number;\n    #currentLayers: { [key: string]: any };\n    #aabb: FloatArrayParam;\n    #viewMatrixDirty: boolean;\n    #worldMatrixNonIdentity: boolean;\n    #onCameraViewMatrix: () => void;\n    #layerId: string | undefined;\n\n    constructor(params: {\n        id: string;\n        sceneModel: SceneModel;\n        matrix?: FloatArrayParam;\n        scale?: FloatArrayParam;\n        view: View;\n        webglRenderer: WebGLRenderer;\n        renderContext: RenderContext;\n        quaternion?: FloatArrayParam;\n        rotation?: FloatArrayParam;\n        position?: FloatArrayParam;\n        edgeThreshold?: number;\n        textureTranscoder: TextureTranscoder;\n        qualityRender?: boolean;\n        layerId?: string;\n    }) {\n\n        super(params.view);\n\n        this.id = params.id;\n        this.sceneModel = params.sceneModel\n        this.viewer = params.view.viewer;\n\n        this.#view = params.view;\n        this.#webglRenderer = params.webglRenderer;\n        this.#renderContext = params.renderContext;\n        this.#textureTranscoder = params.textureTranscoder;\n\n        this.#aabb = collapseAABB3();\n        this.#aabbDirty = false;\n        this.#layers = {};\n        this.layerList = [];\n        this.#currentLayers = {};\n\n        this.rendererGeometries = {};\n        this.rendererTextures = {};\n        this.rendererTextureSets = {};\n        this.rendererMeshes = {};\n        this.rendererObjects = {};\n        this.rendererObjectsList = [];\n\n        this.rendererViewObjects = {};\n\n        this.#numGeometries = 0;\n        this.#numViewerObjects = 0;\n\n        this.#numTriangles = 0;\n        this.#numLines = 0;\n        this.#numPoints = 0;\n        this.#edgeThreshold = params.edgeThreshold || 10;\n\n        this.built = false;\n\n        // Build static matrix\n\n        this.#position = createVec3(params.position || [0, 0, 0]);\n        this.#rotation = createVec3(params.rotation || [0, 0, 0]);\n        this.#quaternion = createVec4(params.quaternion || [0, 0, 0, 1]);\n        if (params.rotation) {\n            eulerToQuat(this.#rotation, \"XYZ\", this.#quaternion);\n        }\n        this.#scale = createVec3(params.scale || [1, 1, 1]);\n        this.#worldMatrix = createMat4();\n        composeMat4(this.#position, this.#quaternion, this.#scale, this.#worldMatrix);\n\n        if (params.matrix || params.position || params.rotation || params.scale || params.quaternion) {\n            this.#viewMatrix = createMat4();\n            this.#viewMatrixDirty = true;\n            this.#worldMatrixNonIdentity = true;\n        }\n\n        this.qualityRender = (params.qualityRender !== false);\n\n        this.#layerId = params.layerId;\n\n        this.#onCameraViewMatrix = this.#view.camera.onViewMatrix.subscribe((camera: Camera, viewMatrix: FloatArrayParam) => {\n            this.#viewMatrixDirty = true;\n        });\n\n        this.#createDefaultTextureSetRenderer();\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<RendererModel, null>());\n\n        this.#addModel(params.sceneModel);\n\n        // this.layerList.sort((a, b) => {\n        //     if (a.sortId < b.sortId) {\n        //         return -1;\n        //     }\n        //     if (a.sortId > b.sortId) {\n        //         return 1;\n        //     }\n        //     return 0;\n        // });\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            const layer = this.layerList[i];\n            layer.layerIndex = i;\n        }\n        this.#currentLayers = {};\n        this.built = true;\n        this.#webglRenderer.setImageDirty();\n        //     this.#view.viewer.scene.setAABBDirty();\n        this.onBuilt.dispatch(this, null);\n    }\n\n    get position(): FloatArrayParam {\n        return this.#position;\n    }\n\n    get rotation(): FloatArrayParam {\n        return this.#rotation;\n    }\n\n    get quaternion(): FloatArrayParam {\n        return this.#quaternion;\n    }\n\n    get scale(): FloatArrayParam {\n        return this.#scale;\n    }\n\n    get worldMatrix(): FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get viewMatrix(): FloatArrayParam {\n        if (!this.#viewMatrix) {\n            return this.#view.camera.viewMatrix;\n        }\n        if (this.#viewMatrixDirty) {\n            mulMat4(this.#view.camera.viewMatrix, this.#worldMatrix, this.#viewMatrix);\n            this.#viewMatrixDirty = false;\n        }\n        return this.#viewMatrix;\n    }\n\n    get colorTextureEnabled() {\n        return this.#colorTextureEnabled;\n    }\n\n    get backfaces(): boolean {\n        return this.#backfaces;\n    }\n\n    set backfaces(backfaces: boolean) {\n        backfaces = !!backfaces;\n        this.#backfaces = backfaces;\n        this.#webglRenderer.setImageDirty();\n    }\n\n    get matrix(): FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get aabb(): FloatArrayParam {\n        if (this.#aabbDirty) {\n            this.#rebuildAABB();\n        }\n        return this.#aabb;\n    }\n\n    get numTriangles(): number {\n        return this.#numTriangles;\n    }\n\n    get numLines(): number {\n        return this.#numLines;\n    }\n\n    get numPoints(): number {\n        return this.#numPoints;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setVisible(viewIndex, visible);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setXRayed(viewIndex, xrayed);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setHighlighted(viewIndex, highlighted);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setSelected(viewIndex, selected);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setEdges(viewIndex, edges);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setCulled(viewIndex, culled);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setClippable(viewIndex, clippable);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setCollidable(viewIndex, collidable);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setPickable(viewIndex, pickable);\n        }\n    }\n\n    setColorize(viewIndex: number, colorize: FloatArrayParam): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setColorize(viewIndex, colorize);\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity: number): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setOpacity(viewIndex, opacity);\n        }\n    }\n\n    /*\n    rebuildDrawFlags() {\n        this.drawFlags.reset();\n        this.#updateDrawFlagsVisibleLayers();\n        if (this.drawFlags.numLayers > 0 && this.drawFlags.numVisibleLayers === 0) {\n            this.drawFlags.culled = true;\n            return;\n        }\n        this.#updateDrawFlags();\n    }\n\n    drawColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawDepth(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawDepth(drawFlags, renderContext);\n        }\n    }\n\n    drawNormals(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawNormals(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteSelected(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesHighlighted(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesSelected(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawOcclusion(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawOcclusion(drawFlags, renderContext);\n        }\n    }\n\n    drawShadow(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawShadow(drawFlags, renderContext);\n        }\n    }\n\n    drawPickMesh(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickMesh(drawFlags, renderContext);\n        }\n    }\n\n    drawPickDepths(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickDepths(drawFlags, renderContext);\n        }\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickNormals(drawFlags, renderContext);\n        }\n    }\n*/\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.#removeModel();\n        this.#view.camera.onViewMatrix.unsubscribe(this.#onCameraViewMatrix);\n        for (let layerId in this.#currentLayers) {\n            if (this.#currentLayers.hasOwnProperty(layerId)) {\n                this.#currentLayers[layerId].destroy();\n            }\n        }\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            this.layerList[i].destroy();\n        }\n        for (let objectId in this.rendererObjects) {\n            this.rendererObjects[objectId].destroy();\n        }\n        for (let meshId in this.rendererMeshes) {\n            //    this.#webglRenderer.deregisterPickable(this.rendererMeshes[meshId].pickId);\n        }\n        this.#currentLayers = {};\n        this.#layers = {};\n        this.layerList = [];\n        this.rendererGeometries = {};\n        this.rendererTextures = {};\n        this.rendererTextureSets = {};\n        this.rendererMeshes = {};\n        this.rendererViewObjects = {};\n        // this.#view.viewer.setAABBDirty();\n        this.onBuilt.clear();\n        super.destroy();\n    }\n\n    #addModel(sceneModel: SceneModel): void {\n\n        const textures = sceneModel.textures;\n        const geometries = sceneModel.geometries;\n        const meshes = sceneModel.meshes;\n        const objects = sceneModel.objects;\n\n        if (textures) {\n            for (let textureId in textures) {\n                const texture = textures[textureId];\n                this.#addTexture(texture);\n            }\n        }\n        if (geometries) {\n            for (let geometryId in geometries) {\n                const geometry = geometries[geometryId];\n                this.#addGeometry(geometry);\n            }\n        }\n        if (meshes) {\n            for (let meshId in meshes) {\n                const mesh = meshes[meshId];\n                this.#addMesh(mesh);\n            }\n        }\n        if (objects) {\n            for (let geometryId in objects) {\n                const object = objects[geometryId];\n                this.#addObject(object);\n            }\n        }\n        for (let layerId in this.#currentLayers) {\n            if (this.#currentLayers.hasOwnProperty(layerId)) {\n                this.#currentLayers[layerId].build();\n            }\n        }\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            const objectRenderer = this.rendererObjectsList[i];\n            objectRenderer.build();\n        }\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            const objectRenderer = this.rendererObjectsList[i];\n            objectRenderer.finalize2();\n        }\n    }\n\n    #addTexture(texture: Texture): void {\n        const textureId = texture.id;\n        if (this.rendererTextures[textureId]) {\n            throw new Error(\"RendererTexture already created: \" + textureId);\n        }\n        const glTexture = new GLTexture({gl: this.#renderContext.gl});\n        if (texture.preloadColor) {\n            glTexture.setPreloadColor(texture.preloadColor);\n        }\n        if (texture.image) { // Ignore transcoder for Images\n            const image = texture.image;\n            image.crossOrigin = \"Anonymous\";\n            glTexture.setImage(image, {\n                minFilter: texture.minFilter,\n                magFilter: texture.magFilter,\n                wrapS: texture.wrapS,\n                wrapT: texture.wrapT,\n                wrapR: texture.wrapR,\n                flipY: texture.flipY,\n                encoding: texture.encoding\n            });\n        } else if (texture.src) {\n            const ext = texture.src.split('.').pop();\n            switch (ext) { // Don't transcode recognized image file types\n                case \"jpeg\":\n                case \"jpg\":\n                case \"png\":\n                case \"gif\":\n                    const image = new Image();\n                    image.onload = () => {\n                        glTexture.setImage(image, {\n                            minFilter: texture.minFilter,\n                            magFilter: texture.magFilter,\n                            wrapS: texture.wrapS,\n                            wrapT: texture.wrapT,\n                            wrapR: texture.wrapR,\n                            flipY: texture.flipY,\n                            encoding: texture.encoding\n                        });\n                    };\n                    image.src = texture.src; // URL or Base64 string\n                    break;\n                default: // Assume other file types need transcoding\n                    if (!this.#textureTranscoder) {\n                        this.error(`Can't create texture from 'src' - rendererModel needs to be configured with a TextureTranscoder for this file type ('${ext}')`);\n                    } else {\n                        loadArraybuffer(texture.src, (arrayBuffer: ArrayBuffer) => {\n                                if (!arrayBuffer.byteLength) {\n                                    this.error(`Can't create texture from 'src': file data is zero length`);\n                                    return;\n                                }\n                                this.#textureTranscoder.transcode([arrayBuffer]).then((compressedTextureData) => {\n                                    glTexture.setCompressedData(compressedTextureData);\n                                    this.#webglRenderer.setImageDirty();\n                                });\n                            },\n                            (errMsg: string) => {\n                                this.error(`Can't create texture from 'src': ${errMsg}`);\n                            });\n                    }\n                    break;\n            }\n        } else if (texture.buffers) { // Buffers implicitly require transcoding\n            if (!this.#textureTranscoder) {\n                this.error(`Can't create texture from 'buffers' - rendererModel needs to be configured with a TextureTranscoder for this option`);\n            } else {\n                this.#textureTranscoder.transcode(texture.buffers).then((compressedTextureData) => {\n                    glTexture.setCompressedData(compressedTextureData);\n                    this.#webglRenderer.setImageDirty();\n                });\n            }\n        }\n        const rendererTexture = new RendererTextureImpl(texture, glTexture);\n        texture.rendererTexture = rendererTexture;\n        this.rendererTextures[textureId] = rendererTexture;\n    }\n\n    #addGeometry(geometry: Geometry): void {\n        const geometryId = geometry.id;\n        if (this.rendererGeometries[geometryId]) {\n            throw new Error(`GeometryRenderer already created: ${geometryId}`);\n        }\n        const rendererGeometry = new RendererGeometryImpl();\n        this.rendererGeometries[geometryId] = rendererGeometry;\n        geometry.rendererGeometry = rendererGeometry;\n        this.#numGeometries++;\n    }\n\n    #addMesh(mesh: Mesh): void {\n        const rendererGeometry = this.rendererGeometries[mesh.geometry.id];\n        if (!rendererGeometry) {\n            throw new Error(\"RendererGeometry not found\");\n        }\n        const rendererTextureSet = this.rendererTextureSets[(<TextureSet>mesh.textureSet).id];\n        if (!rendererTextureSet) {\n            throw new Error(\"rendererTextureSet not found\");\n        }\n\n        const layer = this.#getLayer((<TextureSet>mesh.textureSet).id, mesh.geometry);\n\n        if (!layer) {\n            return;\n        }\n\n        if (!layer.hasGeometry(mesh.geometry.id)) {\n            layer.createGeometryCompressed(mesh.geometry)\n        }\n\n        let meshMatrix;\n        let worldMatrix = this.#worldMatrixNonIdentity ? this.#worldMatrix : null;\n\n        meshMatrix = mesh.matrix;\n\n\n        const color = (mesh.color) ? new Uint8Array([Math.floor(mesh.color[0] * 255), Math.floor(mesh.color[1] * 255), Math.floor(mesh.color[2] * 255)]) : [255, 255, 255];\n        const opacity = (mesh.opacity !== undefined && mesh.opacity !== null) ? Math.floor(mesh.opacity * 255) : 255;\n        const metallic = (mesh.metallic !== undefined && mesh.metallic !== null) ? Math.floor(mesh.metallic * 255) : 0;\n        const roughness = (mesh.roughness !== undefined && mesh.roughness !== null) ? Math.floor(mesh.roughness * 255) : 255;\n\n        const meshRenderer = new RendererMeshImpl({\n            tileManager: <TileManager>this.#webglRenderer.tileManager,\n            id: mesh.id,\n            layer,\n            color,\n            opacity,\n            matrix: meshMatrix,\n            metallic,\n            roughness,\n            rendererTextureSet,\n            rendererGeometry,\n            meshIndex: 0\n        });\n\n        meshRenderer.pickId = this.#webglRenderer.registerPickable(meshRenderer);\n\n        const a = meshRenderer.pickId >> 24 & 0xFF;\n        const b = meshRenderer.pickId >> 16 & 0xFF;\n        const g = meshRenderer.pickId >> 8 & 0xFF;\n        const r = meshRenderer.pickId & 0xFF;\n\n        const pickColor = new Uint8Array([r, g, b, a]); // Quantized pick color\n        collapseAABB3(meshRenderer.aabb);\n\n        const meshIndex = layer.createMesh({\n            id: mesh.id,\n            geometryId: mesh.geometry.id,\n            color,\n            opacity,\n            metallic,\n            roughness,\n            matrix: meshMatrix,\n            //     worldMatrix: worldMatrix,\n            //    aabb: mesh.aabb,\n            pickColor\n        });\n        this.#numGeometries++;\n        expandAABB3(this.#aabb, meshRenderer.aabb);\n        meshRenderer.layer = layer;\n        meshRenderer.meshIndex = meshIndex;\n        this.rendererMeshes[mesh.id] = meshRenderer;\n    }\n\n\n    // build() {\n    //     if (this.destroyed) {\n    //         this.log(\"rendererModel already destroyed\");\n    //         return;\n    //     }\n    //     if (this.built) {\n    //         this.log(\"rendererModel already built\");\n    //         return;\n    //     }\n    //     for (let layerId in this.#currentLayers) {\n    //         if (this.#currentLayers.hasOwnProperty(layerId)) {\n    //             this.#currentLayers[layerId].build();\n    //         }\n    //     }\n    //     for (let i = 0, len = this.objectList.length; i < len; i++) {\n    //         const objectRenderer = this.objectList[i];\n    //         objectRenderer.build();\n    //     }\n    //     for (let i = 0, len = this.objectList.length; i < len; i++) {\n    //         const objectRenderer = this.objectList[i];\n    //         objectRenderer.finalize2();\n    //     }\n    //     // this.layerList.sort((a, b) => {\n    //     //     if (a.sortId < b.sortId) {\n    //     //         return -1;\n    //     //     }\n    //     //     if (a.sortId > b.sortId) {\n    //     //         return 1;\n    //     //     }\n    //     //     return 0;\n    //     // });\n    //     for (let i = 0, len = this.layerList.length; i < len; i++) {\n    //         const layer = this.layerList[i];\n    //         layer.layerIndex = i;\n    //     }\n    //     this.#currentLayers = {};\n    //     this.built = true;\n    //     this.#webglRenderer.setImageDirty();\n    //     //     this.#view.viewer.scene.setAABBDirty();\n    //     this.onBuilt.dispatch(this, null);\n    // }\n    //\n    // addModel(params: {\n    //     id: string,\n    //     sceneModel: SceneModel\n    // }) {\n    //\n    //     const sceneModel = params.sceneModel;\n    //     const textures = sceneModel.textures;\n    //     const geometries = sceneModel.geometries;\n    //     const meshes = sceneModel.meshes;\n    //     const objects = sceneModel.objects;\n    //\n    //     if (textures) {\n    //         for (let textureId in textures) {\n    //             const texture = textures[textureId];\n    //             this.#addTexture(texture);\n    //         }\n    //     }\n    //\n    //     if (geometries) {\n    //         for (let geometryId in geometries) {\n    //             const geometry = geometries[geometryId];\n    //             this.#addGeometry(geometry);\n    //         }\n    //     }\n    //\n    //     if (meshes) {\n    //         for (let meshId in meshes) {\n    //             const mesh = meshes[meshId];\n    //             this.#addMesh(mesh);\n    //         }\n    //     }\n    //\n    //     if (objects) {\n    //         for (let geometryId in objects) {\n    //             const object = objects[geometryId];\n    //             this.#addObject(object);\n    //         }\n    //     }\n    // }\n\n    #addObject(sceneObject: SceneObject): void {\n        let objectId = sceneObject.id;\n        if (objectId === undefined) {\n            objectId = createUUID();\n        } else if (this.rendererObjects[objectId]) {\n            this.error(\"[createObject] rendererModel already has a ViewerObject with this ID: \" + objectId + \" - will assign random ID\");\n            objectId = createUUID();\n        }\n        const meshes = sceneObject.meshes;\n        if (meshes === undefined) {\n            throw new Error(\"[createObject] Param expected: meshes\");\n        }\n        const rendererMeshes: RendererMeshImpl[] = [];\n        for (let i = 0, len = meshes.length; i < len; i++) {\n            const mesh = meshes[i];\n            const rendererMesh = <RendererMeshImpl>this.rendererMeshes[mesh.id];\n            rendererMeshes.push(rendererMesh);\n        }\n        const objectRenderer = new RendererObjectImpl({\n            id: objectId,\n            rendererModel: this,\n            rendererMeshes,\n            aabb: sceneObject.aabb,\n            layerId: this.#layerId\n        });\n        this.rendererObjectsList.push(objectRenderer);\n        this.rendererObjects[objectId] = objectRenderer;\n        this.rendererViewObjects[objectId] = objectRenderer;\n        this.#numViewerObjects++;\n    }\n\n    #removeModel(): void {\n        const sceneModel = this.sceneModel;\n        if (!sceneModel) {\n            return;\n        }\n        const textures = sceneModel.textures;\n        const geometries = sceneModel.geometries;\n        const meshes = sceneModel.meshes;\n        const objects = sceneModel.objects;\n        if (textures) {\n            for (let textureId in textures) {\n                const texture = textures[textureId];\n                if (texture.rendererTexture) {\n                    texture.rendererTexture = null;\n                }\n            }\n        }\n        if (geometries) {\n            for (let geometryId in geometries) {\n                const geometry = geometries[geometryId];\n                if (geometry.rendererGeometry) {\n                    geometry.rendererGeometry = null;\n                }\n            }\n        }\n        if (meshes) {\n            for (let meshId in meshes) {\n                const mesh = meshes[meshId];\n                if (mesh.rendererMesh) {\n                    mesh.rendererMesh = null;\n                }\n            }\n        }\n        if (objects) {\n            for (let objectId in objects) {\n                const object = objects[objectId];\n                if (object.rendererObject) {\n                    object.rendererObject = null;\n                }\n            }\n        }\n        this.sceneModel = null;\n    }\n\n    #createDefaultTextureSetRenderer() {\n        const defaultColorTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [r, g, b, a]})\n            }));\n\n        const defaultMetalRoughTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 1, 1, 1] // [unused, roughness, metalness, unused]\n            }));\n        const defaultNormalsTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 0] // [x, y, z, unused] - these must be zeros\n            }));\n\n        const defaultEmissiveTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 1] // [x, y, z, unused]\n            }));\n        const defaultOcclusionTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [x, y, z, unused]\n            }));\n        this.rendererTextures[defaultColorTextureId] = defaultColorTexture;\n        this.rendererTextures[defaultMetalRoughTextureId] = defaultMetalRoughTexture;\n        this.rendererTextures[defaultNormalsTextureId] = defaultNormalsTexture;\n        this.rendererTextures[defaultEmissiveTextureId] = defaultEmissiveTexture;\n        this.rendererTextures[defaultOcclusionTextureId] = defaultOcclusionTexture;\n        this.rendererTextureSets[defaultTextureSetId] = new RendererTextureSetImpl({\n            id: defaultTextureSetId,\n            colorTexture: defaultColorTexture,\n            metallicRoughnessTexture: defaultMetalRoughTexture,\n            emissiveTexture: defaultEmissiveTexture,\n            occlusionTexture: defaultOcclusionTexture\n        });\n    }\n\n    #getLayer(textureSetId: string | undefined, geometryCompressedParams: GeometryCompressedParams): Layer | undefined {\n        const layerId = `${textureSetId}_${geometryCompressedParams.primitive}`;\n        let layer = this.#currentLayers[layerId];\n        if (layer) {\n            if (layer.canCreateMesh(geometryCompressedParams)) {\n                return layer;\n            } else {\n                layer.build();\n                delete this.#currentLayers[layerId];\n            }\n        }\n        let textureSet;\n        if (textureSetId) {\n            textureSet = this.rendererTextureSets[textureSetId];\n            if (!textureSet) {\n                this.error(`TextureSet not found: ${textureSetId} - ensure that you create it first with createTextureSet()`);\n                return;\n            }\n        }\n        layer = new Layer(<LayerParams>{\n            gl: this.#renderContext.gl,\n            view: this.#view,\n            rendererModel: this,\n            primitive: geometryCompressedParams.primitive,\n            textureSet,\n            layerIndex: 0\n        });\n        this.#layers[layerId] = layer;\n        this.layerList.push(layer);\n        this.#currentLayers[layerId] = layer;\n        return layer;\n    }\n\n    #rebuildAABB() {\n        collapseAABB3(this.#aabb);\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            const objectRenderer = this.rendererObjectsList[i];\n            expandAABB3(this.#aabb, objectRenderer.aabb);\n        }\n        this.#aabbDirty = false;\n    }\n\n    /*\n        #getActiveSectionPlanesForLayer(layer: any) {\n            const drawFlags = this.drawFlags;\n            const sectionPlanes = this.#view.sectionPlanesList;\n            const numSectionPlanes = sectionPlanes.length;\n            const baseIndex = layer.layerIndex * numSectionPlanes;\n            if (numSectionPlanes > 0) {\n                for (let i = 0; i < numSectionPlanes; i++) {\n                    const sectionPlane = sectionPlanes[i];\n                    if (!sectionPlane.active) {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = false;\n\n                    } else {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = true;\n                        drawFlags.sectioned = true;\n                    }\n                }\n            }\n            return true;\n        }\n\n        #updateDrawFlagsVisibleLayers() {\n            const drawFlags = this.drawFlags;\n            drawFlags.numLayers = this.layerList.length;\n            drawFlags.numVisibleLayers = 0;\n            for (let layerIndex = 0, len = this.layerList.length; layerIndex < len; layerIndex++) {\n                const layer = this.layerList[layerIndex];\n                const layerVisible = this.#getActiveSectionPlanesForLayer(layer);\n                if (layerVisible) {\n                    drawFlags.visibleLayers[drawFlags.numVisibleLayers++] = layerIndex;\n                }\n            }\n        }\n\n        #updateDrawFlags() {\n            if (this.meshCounts.numVisible === 0) {\n                return;\n            }\n            if (this.meshCounts.numCulled === this.meshCounts.numMeshes) {\n                return;\n            }\n            const drawFlags = this.drawFlags;\n            drawFlags.colorOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n            if (this.meshCounts.numTransparent > 0) {\n                drawFlags.colorTransparent = true;\n            }\n            if (this.meshCounts.numXRayed > 0) {\n                const xrayMaterial = this.#view.xrayMaterial.state;\n                if (xrayMaterial.fill) {\n                    if (xrayMaterial.fillAlpha < 1.0) {\n                        drawFlags.xrayedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.xrayedSilhouetteOpaque = true;\n                    }\n                }\n                if (xrayMaterial.edges) {\n                    if (xrayMaterial.edgeAlpha < 1.0) {\n                        drawFlags.xrayedEdgesTransparent = true;\n                    } else {\n                        drawFlags.xrayedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numEdges > 0) {\n                const edgeMaterial = this.#view.edgeMaterial.state;\n                if (edgeMaterial.edges) {\n                    drawFlags.edgesOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n                    if (this.meshCounts.numTransparent > 0) {\n                        drawFlags.edgesTransparent = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numSelected > 0) {\n                const selectedMaterial = this.#view.selectedMaterial.state;\n                if (selectedMaterial.fill) {\n                    if (selectedMaterial.fillAlpha < 1.0) {\n                        drawFlags.selectedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.selectedSilhouetteOpaque = true;\n                    }\n                }\n                if (selectedMaterial.edges) {\n                    if (selectedMaterial.edgeAlpha < 1.0) {\n                        drawFlags.selectedEdgesTransparent = true;\n                    } else {\n                        drawFlags.selectedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numHighlighted > 0) {\n                const highlightMaterial = this.#view.highlightMaterial.state;\n                if (highlightMaterial.fill) {\n                    if (highlightMaterial.fillAlpha < 1.0) {\n                        drawFlags.highlightedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.highlightedSilhouetteOpaque = true;\n                    }\n                }\n                if (highlightMaterial.edges) {\n                    if (highlightMaterial.edgeAlpha < 1.0) {\n                        drawFlags.highlightedEdgesTransparent = true;\n                    } else {\n                        drawFlags.highlightedEdgesOpaque = true;\n                    }\n                }\n            }\n        }\n\n     */\n}\n\n\n\n","import{createVec3 as r,transformVec4 as o,setMat4Translation as t,dotVec3 as n,normalizeVec3 as a,mulVec3Scalar as u}from\"@xeokit/matrix\";import{getPositions3Center as i}from\"@xeokit/boundaries\";var e=r(),f=new Float32Array(16),d=new Float64Array(4),m=new Float64Array(4);function h(r,n,a){return void 0===a&&(a=f),d[0]=n[0],d[1]=n[1],d[2]=n[2],d[3]=1,o(r,d,m),t(r,m,a),a}function l(r,o,t){var n=Float32Array.from([r[0]])[0],a=r[0]-n,u=Float32Array.from([r[1]])[0],i=r[1]-u,e=Float32Array.from([r[2]])[0],f=r[2]-e;o[0]=n,o[1]=u,o[2]=e,t[0]=a,t[1]=i,t[2]=f}function v(r,o,t){return void 0===t&&(t=200),o[0]=Math.round(r[0]/t)*t,o[1]=Math.round(r[1]/t)*t,o[2]=Math.round(r[2]/t)*t,o}function c(r,o,t,n){void 0===n&&(n=200);for(var a=i(r,e),u=Math.round(a[0]/n)*n,f=Math.round(a[1]/n)*n,d=Math.round(a[2]/n)*n,m=0,h=r.length;m<h;m+=3)o[m+0]=r[m+0]-u,o[m+1]=r[m+1]-f,o[m+2]=r[m+2]-d;return t[0]=u,t[1]=f,t[2]=d,0!==t[0]||0!==t[1]||0!==t[2]}function y(r,o,t){return t[0]=r[0]+o[0],t[1]=r[1]+o[1],t[2]=r[2]+o[2],t}function A(r,o,t,i){var f=n(o,t)+r,d=a(o,e);return u(d,-f,i),i}export{h as createRTCViewMat,A as getPlaneRTCPos,y as rtcToWorldPos,v as worldToRTCCenter,l as worldToRTCPos,c as worldToRTCPositions};\n//# sourceMappingURL=index.es.map\n","import {createMatricesDataTexture} from \"./dataTextures\";\nimport type {GLDataTexture} from \"@xeokit/webglutils\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec3} from \"@xeokit/matrix\";\nimport {createRTCViewMat, worldToRTCCenter} from \"@xeokit/rtc\";\nimport type {Camera} from \"@xeokit/viewer\";\n\nconst NUM_TILES = 2000;\n\nexport interface Tile {\n    id: string;\n    index: number;\n    useCount: number;\n    center: FloatArrayParam;\n    rtcViewMatrix: FloatArrayParam;\n}\n\nexport class TileManager {\n\n    #gl: WebGL2RenderingContext;\n    #indexesUsed: boolean[];\n    #tiles: { [key: string]: Tile };\n    #dataTexture: GLDataTexture;\n    #camera: Camera;\n    #lastFreeIndex: number;\n\n    constructor(params: {\n        camera: Camera,\n        gl: WebGL2RenderingContext\n    }) {\n        this.#camera = params.camera;\n        this.#gl = params.gl;\n        this.#indexesUsed = [];\n        this.#lastFreeIndex = 0;\n        this.#tiles = {};\n        this.#dataTexture = createMatricesDataTexture(this.#gl, NUM_TILES);\n    }\n\n    getTile(center: FloatArrayParam): Tile {\n        const rtcCenter = worldToRTCCenter(center, createVec3());\n        const id = `${rtcCenter[0]}-${rtcCenter[1]}-${rtcCenter[2]}`;\n        let tile = this.#tiles[id];\n        if (!tile) {\n            tile = {\n                id,\n                index: this.#findFreeTile(),\n                useCount: 0,\n                center: createVec3(),\n                rtcViewMatrix: createMat4()\n            };\n            this.#tiles[tile.id] = tile;\n        }\n        tile.useCount++;\n        return tile;\n    }\n\n    putTile(tile: Tile) {\n        if (--tile.useCount <= 0) {\n            delete this.#tiles[tile.id];\n            this.#putFreeTile(tile.index);\n        }\n    }\n\n    updateTileCenter(tile: Tile, newCenter: FloatArrayParam): Tile {\n        const newRTCCenter = worldToRTCCenter(newCenter, createVec3());\n        const newId = `${newRTCCenter[0]}-${newRTCCenter[1]}-${newRTCCenter[2]}`;\n        if (newId === tile.id) {\n            return tile;\n        }\n        this.putTile(tile);\n        let newTile = this.#tiles[newId];\n        if (!newTile) {\n            newTile = {\n                id: newId,\n                index: this.#findFreeTile(),\n                useCount: 0,\n                center: createVec3(),\n                rtcViewMatrix: createMat4()\n            };\n            this.#tiles[newTile.id] = newTile;\n        }\n        newTile.useCount++;\n        return newTile;\n    }\n\n    refreshMatrices() {\n        if (!this.#dataTexture.texture) {\n            return;\n        }\n        const gl = this.#gl;\n        const viewMatrix = this.#camera.viewMatrix;\n        const tileIds = Object.keys(this.#tiles);\n        const numTiles = tileIds.length;\n        const data = new Float32Array(16 * numTiles);\n        for (let i = 0, len = tileIds.length; i < len; i++) {\n            const tileId = tileIds[i];\n            const tile = this.#tiles[tileId];\n            createRTCViewMat(viewMatrix, tile.center, tile.rtcViewMatrix);\n            data.set(tile.rtcViewMatrix, tile.index * 16);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this.#dataTexture.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 1, 1, gl.RGBA, gl.FLOAT, data);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    #putFreeTile(index: number) {\n        delete this.#indexesUsed[index];\n        this.#lastFreeIndex = index;\n    }\n\n    #findFreeTile(): number {\n        for (let index = this.#lastFreeIndex; ; index = (index + 1) % NUM_TILES) {\n            if (!this.#indexesUsed[index]) {\n                this.#indexesUsed[index] = true;\n                return index;\n            }\n        }\n    }\n\n\n}","import {apply, Map} from \"@xeokit/utils\";\nimport {createVec3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {\n    LinesPrimitive,\n    PointsPrimitive,\n    SolidPrimitive,\n    SurfacePrimitive,\n    TrianglesPrimitive\n} from \"@xeokit/constants\";\n\nimport type {CreateModelParams, Renderer, View, Viewer, ViewObject} from \"@xeokit/viewer\";\n\nimport {KTX2TextureTranscoder} from \"@xeokit/ktx2\";\nimport {RenderContext} from \"./RenderContext\";\nimport {FastColorTrianglesRenderer} from \"./FastColorTrianglesRenderer\";\nimport {getExtension, GLRenderBuffer, GLRenderBufferManager, WEBGL_INFO} from \"@xeokit/webglutils\";\nimport {RENDER_PASSES} from \"./RENDER_PASSES\";\nimport type {Pickable} from \"./Pickable\";\nimport {RendererModelImpl} from \"./RendererModelImpl\";\nimport type {Layer} from \"./Layer\";\nimport type {RendererViewObject} from \"@xeokit/viewer/src/RendererViewObject\";\nimport type {Capabilities, Component, TextureTranscoder} from \"@xeokit/core\";\nimport type {SceneModel} from \"@xeokit/scene\";\nimport {TileManager} from \"./TileManager\";\n\n\nconst ua = navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|mobile)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\nconst isSafari = (ua && ua[1].toLowerCase() === \"safari\");\n\n/**\n * WebGL-based rendering strategy for a {@link @xeokit/viewer!Viewer | Viewer}.\n *\n * See {@link @xeokit/webglrenderer} for usage.\n *\n * @internal\n */\nexport class WebGLRenderer implements Renderer {\n\n    rendererViewObjects: { [key: string]: RendererViewObject };\n    tileManager: TileManager|null;\n    #sceneModels: { [key: string]: SceneModel };\n    #viewer: Viewer;\n    #view: View;\n    #renderContext: RenderContext;\n    #canvasTransparent: boolean;\n    #transparentEnabled: boolean;\n    #edgesEnabled: boolean;\n    #imageDirty: boolean;\n    #saoEnabled: boolean;\n    #pbrEnabled: boolean;\n    #backgroundColor: FloatArrayParam;\n    #rendererModels: { [key: string]: RendererModelImpl };\n    #layerList: Layer[];\n    #layerListDirty: boolean;\n    #stateSortDirty: boolean;\n    #pickIDs = new Map({});\n    #saoDepthRenderBuffer: GLRenderBuffer;\n    #renderBufferManager: GLRenderBufferManager;\n    #extensionHandles: any;\n    #logarithmicDepthBufferEnabled: boolean;\n    #alphaDepthMask: boolean;\n    #occlusionTester: any;\n    // #saoOcclusionRenderer: null | SAOOcclusionRenderer;\n    // #saoDepthLimitedBlurRenderer: SAODepthLimitedBlurRenderer;\n    #textureTranscoder: TextureTranscoder;\n\n    // @ts-ignore\n    #layerRenderers: {\n        // colorPoints: ColorPointsLayerRenderer;\n        colorTriangles: FastColorTrianglesRenderer;\n        // qualityColorTriangles: QualityColorTrianglesRenderer;\n        // colorLines: ColorLinesLayerRenderer;\n        // silhouettePoints: SilhouettePointsRenderer;\n        // silhouetteTriangles: SilhouetteTrianglesLayerRenderer;\n        // silhouetteLines: SilhouetteLinesRenderer;\n    };\n    #viewMatrixDirty: boolean;\n\n    /**\n     Creates a WebGLRenderer.\n\n     @param params Configs\n     @param params.textureTranscoder Injects an optional transcoder that will be used internally by {@link rendererModel.createTexture}\n     to convert transcoded texture data. The transcoder is only required when we'll be providing transcoded data\n     to {@link rendererModel.createTexture}. We assume that all transcoded texture data added to a  ````rendererModel````\n     will then be in a format supported by this transcoder.\n     */\n    constructor(params: {\n        textureTranscoder?: TextureTranscoder\n    }) {\n        this.tileManager = null;\n        this.#sceneModels = {};\n        this.rendererViewObjects = {};\n\n        this.#textureTranscoder = params.textureTranscoder || new KTX2TextureTranscoder({});\n        this.#canvasTransparent = false;\n        this.#alphaDepthMask = false;\n        this.#extensionHandles = {};\n        this.#pickIDs = new Map({});\n        this.#layerList = [];\n        this.#layerListDirty = true;\n        this.#stateSortDirty = true;\n        this.#imageDirty = true;\n        this.#transparentEnabled = true;\n        this.#edgesEnabled = true;\n        this.#saoEnabled = true;\n        this.#pbrEnabled = true;\n        this.#backgroundColor = createVec3();\n        this.#occlusionTester = null; // Lazy-created in #addMarker()\n\n        // this.#saoDepthRenderBuffer = null;\n        // this.#renderBufferManager = null;\n        this.#logarithmicDepthBufferEnabled = false;\n        this.#rendererModels = {};\n        this.#viewMatrixDirty = true;\n    }\n\n    init(viewer: Viewer): void {\n        this.#viewer = viewer;\n        this.#textureTranscoder.init(this.#viewer.capabilities);\n    }\n\n    getCapabilities(capabilities: Capabilities): void {\n        capabilities.maxViews = 1;\n        const canvasElement = document.createElement('canvas');\n        let gl;\n        try {\n            gl = canvasElement.getContext(\"webgl2\");\n        } catch (e) {\n            console.error('Failed to get a WebGL context');\n        }\n        if (gl) {\n            capabilities.astcSupported = !!getExtension(gl, 'WEBGL_compressed_texture_astc');\n            capabilities.etc1Supported = true; // WebGL\n            capabilities.etc2Supported = !!getExtension(gl, 'WEBGL_compressed_texture_etc');\n            capabilities.dxtSupported = !!getExtension(gl, 'WEBGL_compressed_texture_s3tc');\n            capabilities.bptcSupported = !!getExtension(gl, 'EXT_texture_compression_bptc');\n            capabilities.pvrtcSupported = !!(getExtension(gl, 'WEBGL_compressed_texture_pvrtc') || getExtension(gl, 'WEBKIT_WEBGL_compressed_texture_pvrtc'));\n        }\n    }\n\n    registerView(view: View): number {\n        if (this.#renderContext) {\n            throw \"Only one View allowed with WebGLRenderer (see WebViewerCapabilities.maxViews)\";\n        }\n        this.#view = view;\n        const WEBGL_CONTEXT_NAMES = [\"webglutils\"];\n        const canvasElement = view.canvasElement;\n        const contextAttr = {};\n        let gl: WebGL2RenderingContext | null = null;\n        for (let i = 0; !gl && i < WEBGL_CONTEXT_NAMES.length; i++) {\n            try {  // @ts-ignore\n                gl = canvasElement.getContext(WEBGL_CONTEXT_NAMES[i], contextAttr);\n            } catch (e) { // Try with next context name\n            }\n        }\n        if (!gl) {\n            console.error('Failed to get a WebGL2 context');\n            //  view.events.fire(\"webglContextFailed\", true, true);\n            return 0;\n        }\n        if (gl) {\n            gl.hint(gl.FRAGMENT_SHADER_DERIVATIVE_HINT, gl.NICEST);\n        }\n        this.#renderContext = new RenderContext(this.#viewer, this.#view, gl);\n        this.tileManager = new TileManager({\n            camera: view.camera,\n            gl\n        });\n        this.#layerRenderers = {\n            //       colorPoints: new ColorPointsLayerRenderer(this.#renderContext),\n            colorTriangles: new FastColorTrianglesRenderer(this.#renderContext),\n            // qualityColorTriangles: new QualityColorTrianglesRenderer(this.#renderContext),\n            // colorLines: new ColorLinesLayerRenderer(this.#renderContext),\n            // silhouettePoints: new SilhouettePointsRenderer(this.#renderContext),\n            // silhouetteTriangles: new SilhouetteTrianglesLayerRenderer(this.#renderContext),\n            // silhouetteLines: new SilhouetteLinesRenderer(this.#renderContext)\n        };\n        view.camera.onViewMatrix.sub(() => {\n            this.#viewMatrixDirty = true;\n        })\n        return 0;\n    }\n\n    deregisterView(viewIndex: number): void { // Nop\n    }\n\n    /**\n     * Adds a SceneModel to this renderer.\n     */\n    addModel(params: CreateModelParams): void {\n        if (!this.#renderContext) {\n            throw new Error(\"Must register a View before you add a SceneModel\");\n        }\n        const rendererModel = new RendererModelImpl(apply({\n            sceneModel: params.sceneModel,\n            view: this.#view,\n            textureTranscoder: this.#textureTranscoder,\n            webglRenderer: this,\n            renderContext: this.#renderContext,\n            layerId: params.layerId\n        }, params));\n\n        this.#rendererModels[rendererModel.id] = rendererModel;\n        this.#registerRendererViewObjects(rendererModel);\n        this.#layerListDirty = true;\n\n        rendererModel.onDestroyed.one((component: Component) => {\n            const rendererModel = this.#rendererModels[component.id];\n            delete this.#rendererModels[component.id];\n            this.#deregisterRendererViewObjects(rendererModel);\n            this.#layerListDirty = true;\n        });\n    }\n\n    removeModel(modelId: string): void {\n        const sceneModel = this.#sceneModels[modelId];\n        if (sceneModel) {\n            const rendererModel = this.#rendererModels[modelId];\n            delete this.#rendererModels[modelId];\n            this.#deregisterRendererViewObjects(rendererModel);\n            this.#layerListDirty = true;\n\n        }\n    }\n\n    /**\n     * @private\n     */\n    registerPickable(pickable: Pickable): number { // @ts-ignore\n        return this.#pickIDs.addItem(pickable);\n    }\n\n    /**\n     * @private\n     */\n    deregisterPickable(pickId: number) {\n        this.#pickIDs.removeItem(pickId);\n    }\n\n    //\n    // createModel(params: ModelParams): SceneModel {\n    //     if (!this.#renderContext) {\n    //         throw \"Must register a View before you create a model\";\n    //     }\n    //     const WebGLSceneModelRenderer = new WebGLSceneModelRenderer(apply({\n    //         view: this.#view,\n    //         textureTranscoder: this.#textureTranscoder,\n    //         webglRenderer: this,\n    //         renderContext: this.#renderContext,\n    //         layerId: params.layerId\n    //     }, params));\n    //     WebGLSceneModelRenderer.onBuilt.one((buildsceneModelRenderer: SceneModel) => {\n    //         this.#rendererModels[buildsceneModelRenderer.id] = <WebGLSceneModelRenderer>buildsceneModelRenderer;\n    //         this.#layerListDirty = true;\n    //     });\n    //     WebGLSceneModelRenderer.onDestroyed.one((destroyedsceneModelRenderer: Component) => {\n    //         delete this.#rendererModels[destroyedsceneModelRenderer.id];\n    //         this.#layerListDirty = true;\n    //     });\n    //     return WebGLSceneModelRenderer;\n    // }\n\n    setImageDirty(viewIndex?: number) {\n        this.#imageDirty = true;\n    }\n\n    setBackgroundColor(viewIndex: number, color: FloatArrayParam): void { // @ts-ignore\n        this.#backgroundColor.set(color);\n        this.#imageDirty = true;\n    }\n\n    setEdgesEnabled(viewIndex: number, enabled: boolean): void {\n        this.#edgesEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setPBREnabled(viewIndex: number, enabled: boolean): void {\n        this.#pbrEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    getSAOSupported(): boolean {\n        return isSafari && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_standard_derivatives\"];\n    }\n\n    setSAOEnabled(viewIndex: number, enabled: boolean): void {\n        this.#saoEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setTransparentEnabled(viewIndex: number, enabled: boolean): void {\n        this.#transparentEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    clear(viewIndex: number) {\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (this.#canvasTransparent) {\n            gl.clearColor(1, 1, 1, 1);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    needsRebuild(viewIndex?: number): void {\n        for (let rendererId in this.#layerRenderers) {\n            // @ts-ignore\n            this.#layerRenderers[rendererId].needRebuild();\n        }\n    }\n\n    needsRender(viewIndex?: number): boolean {\n        return (this.#imageDirty || this.#layerListDirty || this.#stateSortDirty);\n    }\n\n    render(viewIndex: number, params: {\n        force?: boolean;\n    }) {\n        params = params || {};\n        if (params.force) {\n            this.#imageDirty = true;\n        }\n        if (this.#viewMatrixDirty) {\n            (<TileManager>this.tileManager).refreshMatrices();\n            this.#viewMatrixDirty = false;\n        }\n        this.#updateLayerList();\n        if (this.#imageDirty) {\n            this.#draw({clear: true});\n            this.#imageDirty = false;\n        }\n    }\n\n    pickSceneObject(viewIndex: number, params: {}): ViewObject | null {\n        return null;\n    };\n\n    #registerRendererViewObjects(rendererModel: RendererModelImpl) {\n        const rendererObjects = rendererModel.rendererViewObjects;\n        for (let id in rendererObjects) {\n            this.rendererViewObjects[id] = rendererObjects[id];\n        }\n    }\n\n    #deregisterRendererViewObjects(rendererModel: RendererModelImpl) {\n        const rendererViewObjects = rendererModel.rendererViewObjects;\n        for (let id in rendererViewObjects) {\n            delete this.rendererViewObjects[id];\n        }\n    }\n\n    #updateLayerList() {\n        if (this.#layerListDirty) {\n            this.#buildLayerList();\n            this.#layerListDirty = false;\n            this.#stateSortDirty = true;\n        }\n        if (this.#stateSortDirty) {\n            //     this.#sortLayerList();\n            this.#stateSortDirty = false;\n            this.#imageDirty = true;\n        }\n    }\n\n    #buildLayerList() {\n        let lenDrawableList = 0;\n        for (let id in this.#rendererModels) {\n            const webGLSceneModelRenderer = this.#rendererModels[id];\n            for (let i = 0, len = webGLSceneModelRenderer.layerList.length; i < len; i++) {\n                this.#layerList[lenDrawableList++] = webGLSceneModelRenderer.layerList[i];\n            }\n        }\n        this.#layerList.length = lenDrawableList;\n    }\n\n    #draw(params: {\n        clear: boolean;\n    }) {\n        this.#activateExtensions();\n        if (this.#saoEnabled && this.#view.sao.possible) {\n            this.#drawSAOBuffers(params);\n        }\n        this.#drawColor(params);\n    }\n\n    #activateExtensions() {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]) {\n            this.#extensionHandles.OES_element_index_uint = this.#renderContext.gl.getExtension(\"OES_element_index_uint\");\n        }\n        if (this.#logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            this.#extensionHandles.EXT_frag_depth = this.#renderContext.gl.getExtension('EXT_frag_depth');\n        }\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            this.#extensionHandles.WEBGL_depth_texture = this.#renderContext.gl.getExtension('WEBGL_depth_texture');\n        }\n    }\n\n    #drawSAOBuffers(params: {\n        clear: boolean;\n    }) {\n        // const sao = this.#view.sao;\n        // const saoDepthRenderBuffer = this.#renderBufferManager.getRenderBuffer(\"saoDepth\", {\n        //     depthTexture: WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n        // });\n        // this.#saoDepthRenderBuffer.bind();\n        // this.#saoDepthRenderBuffer.clear();\n        // this.#drawDepth(params);\n        // this.#saoDepthRenderBuffer.unbind();\n        // // Render occlusion buffer\n        // const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\");\n        // occlusionRenderBuffer1.bind();\n        // occlusionRenderBuffer1.clear();\n        // this.#saoOcclusionRenderer.render(saoDepthRenderBuffer);\n        // occlusionRenderBuffer1.unbind();\n        // if (sao.blur) {\n        //     // Horizontally blur occlusion buffer 1 into occlusion buffer 2\n        //     const occlusionRenderBuffer2 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion2\");\n        //     occlusionRenderBuffer2.bind();\n        //     occlusionRenderBuffer2.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer1, 0);\n        //     occlusionRenderBuffer2.unbind();\n        //     // Vertically blur occlusion buffer 2 back into occlusion buffer 1\n        //     occlusionRenderBuffer1.bind();\n        //     occlusionRenderBuffer1.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer2, 1);\n        //     occlusionRenderBuffer1.unbind();\n        // }\n    }\n\n    #drawDepth(params: {\n        clear: boolean\n    }) {\n        this.#renderContext.reset();\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // for (let i = 0, len = this.#layerListPostCull.length; i < len; i++) {\n        //     const layer = this.#layerListPostCull[i];\n        //     // if (layer.culled === true || layer.visible === false || !layer.drawDepth) {\n        //     //     continue;\n        //     // }\n        //     // if (layer.drawFlags.colorOpaque) {\n        //     //     //    layer.drawDepth(this.#renderContext);\n        //     // }\n        // }\n        // const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        // for (let ii = 0; ii < numVertexAttribs; ii++) {\n        //     gl.disableVertexAttribArray(ii);\n        // }\n    }\n\n    #drawColor(params: {\n        clear: boolean;\n    }) {\n\n        const view = this.#view;\n        const renderContext = this.#renderContext;\n        const gl = renderContext.gl;\n\n        const normalDrawSAOBin: Layer[] = [];\n        const edgesColorOpaqueBin: Layer[] = [];\n        const normalFillTransparentBin: Layer[] = [];\n        const edgesColorTransparentBin: Layer[] = [];\n        const xrayedSilhouetteOpaqueBin: Layer[] = [];\n        const xrayEdgesOpaqueBin: Layer[] = [];\n        const xrayedSilhouetteTransparentBin: Layer[] = [];\n        const xrayEdgesTransparentBin: Layer[] = [];\n        const highlightedSilhouetteOpaqueBin: Layer[] = [];\n        const highlightedEdgesOpaqueBin: Layer[] = [];\n        const highlightedSilhouetteTransparentBin: Layer[] = [];\n        const highlightedEdgesTransparentBin: Layer[] = [];\n        const selectedSilhouetteOpaqueBin: Layer[] = [];\n        const selectedEdgesOpaqueBin: Layer[] = [];\n        const selectedSilhouetteTransparentBin: Layer[] = [];\n        const selectedEdgesTransparentBin: Layer[] = [];\n\n        renderContext.reset();\n        renderContext.withSAO = false;\n        renderContext.pbrEnabled = this.#pbrEnabled && !!view.qualityRender;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        if (this.#canvasTransparent) {\n            gl.clearColor(0, 0, 0, 0);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        gl.lineWidth(1);\n\n        renderContext.lineWidth = 1;\n\n        const saoPossible = view.sao.possible;\n\n        if (this.#saoEnabled && saoPossible) {\n            const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\", {\n                depthTexture: false,\n                size: [gl.drawingBufferWidth, gl.drawingBufferHeight]\n            });\n            renderContext.occlusionTexture = occlusionRenderBuffer1 ? occlusionRenderBuffer1.getTexture() : null;\n        } else {\n            renderContext.occlusionTexture = null;\n\n        }\n\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // Render normal opaque solids, defer others to subsequent bins, to render after\n\n        let normalDrawSAOBinLen = 0;\n        let edgesColorOpaqueBinLen = 0;\n        let normalFillTransparentBinLen = 0;\n        let edgesColorTransparentBinLen = 0;\n        let xrayedSilhouetteOpaqueBinLen = 0;\n        let xrayEdgesOpaqueBinLen = 0;\n        let xrayedSilhouetteTransparentBinLen = 0;\n        let xrayEdgesTransparentBinLen = 0;\n        let highlightedSilhouetteOpaqueBinLen = 0;\n        let highlightedEdgesOpaqueBinLen = 0;\n        let highlightedSilhouetteTransparentBinLen = 0;\n        let highlightedEdgesTransparentBinLen = 0;\n        let selectedSilhouetteOpaqueBinLen = 0;\n        let selectedEdgesOpaqueBinLen = 0;\n        let selectedSilhouetteTransparentBinLen = 0;\n        let selectedEdgesTransparentBinLen = 0;\n\n        for (let i = 0, len = this.#layerList.length; i < len; i++) {\n\n            const layer = this.#layerList[i];\n            const meshCounts = layer.meshCounts;\n\n            if (meshCounts.numCulled === meshCounts.numMeshes || meshCounts.numVisible === 0) {\n                continue;\n            }\n\n            if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                if (this.#saoEnabled && saoPossible && layer.rendererModel.qualityRender) {\n                    normalDrawSAOBin[normalDrawSAOBinLen++] = layer;\n                } else {\n                    this.#drawLayer(layer, RENDER_PASSES.COLOR_OPAQUE, layer.rendererModel.qualityRender);\n                }\n            }\n\n            if (this.#transparentEnabled) {\n                if (meshCounts.numTransparent) {\n                    normalFillTransparentBin[normalFillTransparentBinLen++] = layer;\n                }\n            }\n\n            if (meshCounts.numXRayed > 0) {\n                if (view.xrayMaterial.fill) {\n                    if (view.xrayMaterial.fillAlpha < 1.0) {\n                        xrayedSilhouetteTransparentBin[xrayedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        xrayedSilhouetteOpaqueBin[xrayedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numHighlighted > 0) {\n                if (view.highlightMaterial.fill) {\n                    if (view.highlightMaterial.fillAlpha < 1.0) {\n                        highlightedSilhouetteTransparentBin[highlightedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        highlightedSilhouetteOpaqueBin[highlightedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numSelected > 0) {\n                if (view.selectedMaterial.fill) {\n                    if (view.selectedMaterial.fillAlpha < 1.0) {\n                        selectedSilhouetteTransparentBin[selectedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        selectedSilhouetteOpaqueBin[selectedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (this.#edgesEnabled && this.#view.edgeMaterial.edges) {\n                if (meshCounts.numEdges > 0) {\n                    if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                        edgesColorOpaqueBin[edgesColorOpaqueBinLen++] = layer;\n                    }\n                    if (meshCounts.numTransparent > 0) {\n                        edgesColorTransparentBin[edgesColorTransparentBinLen++] = layer;\n                    }\n                    if (view.selectedMaterial.edgeAlpha < 1.0) {\n                        selectedEdgesTransparentBin[selectedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        selectedEdgesOpaqueBin[selectedEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.xrayMaterial.edgeAlpha < 1.0) {\n                        xrayEdgesTransparentBin[xrayEdgesTransparentBinLen++] = layer;\n                    } else {\n                        xrayEdgesOpaqueBin[xrayEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.highlightMaterial.edgeAlpha < 1.0) {\n                        highlightedEdgesTransparentBin[highlightedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        highlightedEdgesOpaqueBin[highlightedEdgesOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n        }\n\n        // Render deferred bins\n\n        if (normalDrawSAOBinLen > 0) {\n            renderContext.withSAO = true;\n            for (let i = 0; i < normalDrawSAOBinLen; i++) {\n                //    this.#drawLayer(normalDrawSAOBin[i], RENDER_PASSES.COLOR_OPAQUE, layer.rendererModel.qualityRender);\n                //    normalDrawSAOBin[i].drawColorOpaque(renderContext);\n            }\n        }\n\n        for (let i = 0; i < edgesColorOpaqueBinLen; i++) {\n            this.#drawLayer(edgesColorOpaqueBin[i], RENDER_PASSES.EDGES_COLOR_OPAQUE);\n        }\n\n        for (let i = 0; i < xrayedSilhouetteOpaqueBinLen; i++) {\n            this.#drawLayer(xrayedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n\n        for (let i = 0; i < xrayEdgesOpaqueBinLen; i++) {\n            this.#drawLayer(xrayEdgesOpaqueBin[i], RENDER_PASSES.EDGES_XRAYED);\n        }\n\n        if (xrayedSilhouetteTransparentBinLen > 0 || xrayEdgesTransparentBinLen > 0 || normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            renderContext.backfaces = false;\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(false);\n            }\n            for (let i = 0; i < xrayEdgesTransparentBinLen; i++) {\n                this.#drawLayer(xrayEdgesTransparentBin[i], RENDER_PASSES.EDGES_XRAYED);\n            }\n            for (let i = 0; i < xrayedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(xrayedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n            }\n            if (normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < edgesColorTransparentBinLen; i++) {\n                this.#drawLayer(edgesColorTransparentBin[i], RENDER_PASSES.EDGES_COLOR_TRANSPARENT);\n            }\n            for (let i = 0; i < normalFillTransparentBinLen; i++) {\n                this.#drawLayer(normalFillTransparentBin[i], RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n            gl.disable(gl.BLEND);\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(true);\n            }\n        }\n\n        if (highlightedSilhouetteOpaqueBinLen > 0 || highlightedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1; // HACK\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < highlightedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n        }\n\n        if (highlightedSilhouetteTransparentBinLen > 0 || highlightedEdgesTransparentBinLen > 0 || highlightedSilhouetteOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < highlightedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(highlightedEdgesTransparentBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        if (selectedSilhouetteOpaqueBinLen > 0 || selectedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < selectedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(selectedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n        }\n\n        if (selectedSilhouetteTransparentBinLen > 0 || selectedEdgesTransparentBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < selectedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(selectedEdgesTransparentBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        const numTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n        for (let ii = 0; ii < numTextureUnits; ii++) {\n            gl.activeTexture(gl.TEXTURE0 + ii);\n        }\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        for (let ii = 0; ii < numVertexAttribs; ii++) {\n            gl.disableVertexAttribArray(ii);\n        }\n    }\n\n    #drawLayer(layer: Layer, renderPass: number, quality: boolean = true) {\n        switch (layer.renderState.primitive) {\n            case TrianglesPrimitive:\n            case SurfacePrimitive:\n            case SolidPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                        if (layer.meshCounts.numTransparent === layer.meshCounts.numMeshes || layer.meshCounts.numXRayed === layer.meshCounts.numMeshes) {\n                            return;\n                        }\n                        if (quality) {\n                            //    this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        if (layer.meshCounts.numTransparent === 0) {\n                            return;\n                        }\n                        if (quality) {\n                            //     this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                        if (layer.meshCounts.numSelected > 0) {\n                            //  this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                        if (layer.meshCounts.numHighlighted > 0) {\n                            // this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        if (layer.meshCounts.numXRayed > 0) {\n                            //   this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                }\n                break;\n            case LinesPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //this.#layerRenderers.colorLines.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        // this.#layerRenderers.silhouetteLines.draw(layer);\n                        break;\n                }\n                break;\n            case PointsPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //  this.#layerRenderers.colorPoints.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        //  this.#layerRenderers.silhouettePoints.draw(layer);\n                        break;\n                }\n                break;\n        }\n    }\n\n\n}"],"names":["s","t","e","Object","defineProperty","i","writable","value","o","n","this","prototype","addItem","arguments","length","r","removeItem","he","ie","u","c","ETC1S","UASTC_4x4","f","ETC1","ETC2","BC1","BC3","BC4","BC5","BC7_M6_OPAQUE_ONLY","BC7_M5","PVRTC1_4_RGB","PVRTC1_4_RGBA","ASTC_4x4","ATC_RGB","ATC_RGBA_INTERPOLATED_ALPHA","RGBA32","RGB565","BGR565","RGBA4444","l","RGBAFormat","RGBA_ASTC_4x4_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","p","m","v","T","g","_","w","C","S","y","F","transcoderPath","a","workerLimit","setWorkerLimit","init","astcSupported","etc1Supported","etc2Supported","dxtSupported","bptcSupported","pvrtcSupported","transcode","Promise","then","postMessage","type","buffers","taskConfig","data","mipmaps","format","dfdTransferFn","dfdFlags","error","props","minFilter","magFilter","encoding","premultiplyAlpha","destroy","URL","revokeObjectURL","h","setPath","setWithCredentials","loadAsync","setResponseType","all","P","toString","JSON","stringify","substring","indexOf","lastIndexOf","join","createObjectURL","Blob","setWorkerCreator","Worker","slice","config","transcoderBinary","console","warn","_EngineFormat","_TranscoderFormat","_BasisFormat","self","addEventListener","wasmBinary","onRuntimeInitialized","BASIS","initializeBasis","KTX2File","Uint8Array","close","delete","isValid","Error","isUASTC","getWidth","getHeight","getLevels","getHasAlpha","getDFDTransferFunc","getDFDFlags","d","if","basisFormat","includes","transcoderFormat","needsPowerOfTwo","engineFormat","startTranscoding","getImageLevelInfo","origWidth","origHeight","R","getImageTranscodedSizeInBytes","transcodeImage","push","width","height","hasAlpha","buffer","id","message","priorityETC1S","Infinity","priorityUASTC","sort","RenderContext","constructor","viewer","view","gl","viewMatrixDataTexture","pbrEnabled","withSAO","backfaces","frontface","textureUnit","bindTexture","renderPass","shadowViewMatrix","shadowProjMatrix","pickViewMatrix","pickProjMatrix","pickZNear","pickZFar","pickInvisible","lineWidth","lastProgramId","occlusionTexture","reset","nextTextureUnit","WEBGL_INFO","MAX_TEXTURE_UNITS","O","k","_head","_headLength","_tail","_index","_length","shift","unshift","clear","key","get","enumerable","configurable","Symbol","toPrimitive","call","TypeError","String","map","charCodeAt","fromCharCode","apply","x","isNaN","parseFloat","isFinite","RENDER_PASSES","NOT_RENDERED","COLOR_OPAQUE","COLOR_TRANSPARENT","SILHOUETTE_HIGHLIGHTED","SILHOUETTE_SELECTED","SILHOUETTE_XRAYED","EDGES_COLOR_OPAQUE","EDGES_COLOR_TRANSPARENT","EDGES_HIGHLIGHTED","EDGES_SELECTED","EDGES_XRAYED","PICK","tempVec4","createVec4","_hash","_classPrivateFieldLooseKey","_program","_needRebuild","_uniforms","_samplers","_build","_buildShader","_getValid","_bind","LayerRenderer","renderContext","_bind2","_getValid2","_buildShader2","_build2","errors","_classPrivateFieldLooseBase","needRebuild","draw","layer","renderState","program","uniforms","samplers","uniform1i","projMatrix","uniformMatrix4fv","camera","worldMatrix","rendererModel","color","material","xrayMaterial","fillColor","uniform4f","fillAlpha","highlightMaterial","selectedMaterial","uniform4fv","Float32Array","viewMatrices","dataTextureSet","positions","eachMeshMatrices","eachMeshAttributes","eachPrimitiveMesh","numIndices8Bits","eachPrimitiveMesh_8Bits","indices_8Bits","indices","drawArrays","TRIANGLES","numIndices16Bits","eachPrimitiveMesh_16Bits","indices_16Bits","numIndices32Bits","eachPrimitiveMesh_32Bits","indices_32Bits","baseColorMap","materialTextureSet","colorTexture","texture2D","metallicRoughMap","metallicRoughnessTexture","emissiveMap","emissiveTexture","occlusionMap","vertHeader","vertDataTextureDefs","vertLogDepthBufDefs","logarithmicDepthBufferEnabled","vertDataTextureSamples","vertLogDepthBufOutputs","fragmentShader","fragHeader","fragGammaDefs","fragSectionPlaneDefs","fragLightDefs","fragLogDepthBufDefs","fragSectionPlanesSlice","fragLighting","fragLogDepthBufOutput","src","len","lightsList","light","space","fragSAOOutput","sao","enabled","fragOutput","sectionPlanesList","fragLightSourceUniforms","AmbientLight","DirLight","PointLight","fragFlatShading","GLProgram","getLocation","viewMatrix","logDepthBufFC","gammaFactor","pointSize","nearPlaneHeight","pointCloudIntensityRange","lightAmbient","lights","sectionPlanes","dir","pos","attenuation","active","getSampler","edgeIndices","eachEdgeOffset","eachEdgeMesh","normalMap","getHash","vertex","buildVertexShader","fragment","buildFragmentShader","project","bind","getAmbientColorAndIntensity","intensity","uniform3f","uniform1f","possible","viewportHeight","drawingBufferHeight","drawingBufferWidth","blendCutoff","blendFactor","pointsMaterial","projectionType","Math","tan","perspectiveProjection","fov","PI","log","far","LN2","FastColorTrianglesRenderer","super","getSectionPlanesHash","getLightsHash","createAABB3","values","Float64Array","collapseAABB3","aabb","MAX_DOUBLE","MIN_DOUBLE","expandAABB3","aabb1","aabb2","expandAABB3Point3","createMat4","createMat3","createVec3","newFloatArray","DataTextureSet","edgeIndices_8Bits","edgeIndices_16Bits","edgeIndices_32Bits","eachEdgeMesh_8Bits","eachEdgeMesh_16Bits","eachEdgeMesh_32Bits","_built","build","MeshCounts","numMeshes","numVisible","numTransparent","numEdges","numXRayed","numSelected","numHighlighted","numClippable","numPickable","numCulled","SCENE_OBJECT_FLAGS","VISIBLE","CULLED","PICKABLE","CLIPPABLE","COLLIDABLE","CAST_SHADOW","RECEIVE_SHADOW","XRAYED","HIGHLIGHTED","SELECTED","EDGES","BACKFACES","TRANSPARENT","construct","getOwnPropertyDescriptor","getPrototypeOf","has","ownKeys","set","setPrototypeOf","Reflect","Proxy","Number","iterator","species","toStringTag","for","b","A","create","B","freeze","is","E","isPrototypeOf","j","hasOwn","hasOwnProperty","I","Array","isArray","L","toLocaleString","N","trunc","U","ArrayBuffer","M","isView","D","W","SharedArrayBuffer","V","Y","z","from","G","K","X","keys","q","H","entries","J","Q","reverse","Z","fill","$","copyWithin","tt","rt","nt","subarray","et","ot","it","st","ct","Uint16Array","ut","ft","Uint32Array","ht","lt","at","next","yt","pt","vt","bt","RangeError","At","Set","mt","Bt","add","xt","Et","WeakMap","Tt","Ot","jt","It","Pt","St","_t","Ft","Lt","Rt","Ct","Nt","Ut","Mt","kt","Wt","Vt","v$1","Yt","zt","Gt","Kt","Xt","qt","Ht","Jt","Qt","MAX_SAFE_INTEGER","Zt","$t","tr","rr","nr","er","or","ir","sr","cr","ur","ar","byteOffset","fr","hr","lr","static","filter","reduce","reduceRight","forEach","find","findIndex","findLast","findLastIndex","every","some","yr","emptyDataTexture","GLDataTexture","textureWidth","textureHeight","disableFilteringForBoundTexture","texParameteri","TEXTURE_2D","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","DataTextureBuffer","positionsDecompressMatrices","positionsCompressed","eachMeshVertexPortionBase","eachMeshVertexPortionOffset","eachMeshEdgeIndicesOffset","eachMeshColor","eachMeshPickColor","eachMeshNormalMatrix","eachMeshPositionsDecompressMatrix","eachMeshFlags1","eachMeshFlags2","eachMeshParts","INDICES_EDGE_INDICES_ALIGNMENT_SIZE","identityMatrix","identityMat4","tempVec4a","tempVec4b","tempUint8Array4","tempFloat32Array3","_gl","_view","_dataTextureBuffer","_geometryHandles","_meshPartHandles","_numMeshParts","_deferredSetFlagsActive","_deferredSetFlagsDirty","_createGeometryBucket","_createMeshPart","_setMeshFlags","_setMeshFlags3","Layer","layerParams","renderers","_setMeshFlags4","_setMeshFlags2","_createMeshPart2","_createGeometryBucket2","layerIndex","meshCounts","primitive","numEdgeIndices8Bits","numEdgeIndices16Bits","numEdgeIndices32Bits","numVertices","beginDeferredFlags","hash","canCreateMesh","geometryCompressedParams","numGeometryBuckets","geometryBuckets","numPositions","numIndices","geometryBucket","PointsPrimitive","LinesPrimitive","MAX_DATATEXTURE_HEIGHT","hasGeometry","geometryId","createGeometryCompressed","geometryBucketHandles","positionsDecompressMatrix","createMesh","meshParams","meshIndex","geometryHandle","geometryBucketHandle","worldAABB","geometryOBB","obb","createOBB3","AABB3ToOBB3","matrix","transformPoint4","dataTextureBuffer","ceil","textureData","texture","createTexture","texStorage2D","RGB16UI","texSubImage2D","RGB_INTEGER","UNSIGNED_SHORT","createPositionsDataTexture","RGB8UI","UNSIGNED_BYTE","createIndices8BitDataTexture","createIndices16BitDataTexture","RGB32UI","UNSIGNED_INT","createIndices32BitDataTexture","RG8UI","RG_INTEGER","createEdgeIndices8BitDataTexture","RG16UI","createEdgeIndices16BitDataTexture","RG32UI","createEdgeIndices32BitDataTexture","colors","pickColors","vertexBases","indexBaseOffsets","edgeIndexBaseOffsets","RGBA8UI","RGBA_INTEGER","createEachMeshAttributesDataTexture","positionDecodeMatrices","matrices","Float16Array","RGBA16F","RGBA","HALF_FLOAT","createEachMeshMatricesDataTexture","offsets","RGB32F","RGB","FLOAT","createEachEdgeOffsetDataTexture","isEmpty","initFlags","flags","meshTransparent","commitDeferredFlags","flushInitFlags","setMeshVisible","transparent","setMeshHighlighted","setMeshXRayed","setMeshSelected","setMeshEdges","setMeshClippable","setMeshCulled","setMeshCollidable","setMeshPickable","setMeshColor","setMeshTransparent","setMeshOffset","offset","setMeshMatrix","setMeshViewMatrixIndex","index","numVertsForPrim","alignedIndicesLen","alignedIndices","alignedEdgeIndicesLen","alignedEdgeIndices","vertexBase","indicesBase","edgeIndicesBase","numTriangles","indicesBuffer","edgeIndicesBuffer","vertsIndex","currentNumIndices","currentNumEdgeIndices","pickColor","meshPartId","eachPrimitiveMeshBuffer","edgeIndicesMeshIdBuffer","numEdgeIndices","vertsBase","numVerts","visible","xrayed","highlighted","selected","culled","f0","f1","f2","f3","clippable","RendererGeometryImpl","RendererTextureImpl","tempIntRGB","_flags","_aabb","_offsetAABB","_offset","_colorizeUpdated","_opacityUpdated","RendererObjectImpl","params","model","sceneObject","layerId","rendererMeshes","setSceneObject","setVisible","viewIndex","setHighlighted","setXRayed","setSelected","setEdges","edges","setCulled","setClippable","setCollidable","collidable","setPickable","pickable","setColorize","floor","setOpacity","opacity","lastOpacityQuantized","colorize","opacityQuantized","setOffset","finalize2","tempMat4a","tempMat4b","RendererMeshImpl","rendererGeometry","rendererTextureSet","metallic","roughness","pickId","tileManager","tile","sceneObjectRenderer","colorizing","delegatePickedEntity","setMatrix","center","transformPoint3","oldTile","updateTileCenter","getTile","tileChanged","tileCenter","mulMat4","translationMat4c","setMetallic","setRoughness","setColor","newTransparent","changingTransparency","canPickTriangle","drawPickTriangles","drawFlags","pickTriangleSurface","pickResult","canPickWorldPos","drawPickNormals","putTile","RendererTextureSetImpl","identityQuat","defaultTextureSetId","_webglRenderer","_renderContext","_position","_rotation","_quaternion","_scale","_worldMatrix","_viewMatrix","_colorTextureEnabled","_backfaces","_layers","_numGeometries","_numTriangles","_numLines","_numPoints","_numViewerObjects","_textureTranscoder","_aabbDirty","_edgeThreshold","_currentLayers","_viewMatrixDirty","_worldMatrixNonIdentity","_onCameraViewMatrix","_layerId","_addModel","_addTexture","_addGeometry","_addMesh","_addObject","_removeModel","_createDefaultTextureSetRenderer","_getLayer","_rebuildAABB","RendererModelImpl","Component","_rebuildAABB2","_getLayer2","_createDefaultTextureSetRenderer2","_removeModel2","_addObject2","_addMesh2","_addGeometry2","_addTexture2","_addModel2","qualityRender","sceneModel","rendererGeometries","rendererTextures","rendererTextureSets","rendererObjects","rendererObjectsList","rendererViewObjects","layerList","onBuilt","webglRenderer","textureTranscoder","edgeThreshold","built","position","rotation","quaternion","eulerToQuat","scale","composeMat4","onViewMatrix","subscribe","EventEmitter","EventDispatcher","setImageDirty","dispatch","colorTextureEnabled","numLines","numPoints","destroyed","unsubscribe","objectId","textures","geometries","meshes","objects","textureId","geometry","meshId","mesh","object","glTexture","GLTexture","preloadColor","setPreloadColor","image","crossOrigin","setImage","wrapS","wrapT","wrapR","flipY","ext","split","pop","Image","onload","loadArraybuffer","arrayBuffer","byteLength","compressedTextureData","setCompressedData","errMsg","rendererTexture","textureSet","meshMatrix","meshRenderer","registerPickable","undefined","createUUID","objectRenderer","rendererMesh","rendererObject","defaultColorTexture","defaultMetalRoughTexture","defaultNormalsTexture","defaultEmissiveTexture","defaultOcclusionTexture","textureSetId","round","NUM_TILES","_indexesUsed","_tiles","_dataTexture","_camera","_lastFreeIndex","_putFreeTile","_findFreeTile","TileManager","_findFreeTile2","_putFreeTile2","numMatrices","createMatricesDataTexture","rtcCenter","worldToRTCCenter","useCount","rtcViewMatrix","newCenter","newRTCCenter","newId","newTile","refreshMatrices","tileIds","tileId","createRTCViewMat","ua","navigator","userAgent","match","isSafari","toLowerCase","_sceneModels","_viewer","_canvasTransparent","_transparentEnabled","_edgesEnabled","_imageDirty","_saoEnabled","_pbrEnabled","_backgroundColor","_rendererModels","_layerList","_layerListDirty","_stateSortDirty","_pickIDs","_saoDepthRenderBuffer","_renderBufferManager","_extensionHandles","_logarithmicDepthBufferEnabled","_alphaDepthMask","_occlusionTester","_layerRenderers","_registerRendererViewObjects","_deregisterRendererViewObjects","_updateLayerList","_buildLayerList","_draw","_activateExtensions","_drawSAOBuffers","_drawDepth","_drawColor","_drawLayer","WebGLRenderer","_drawLayer2","_drawColor2","_drawDepth2","_drawSAOBuffers2","_activateExtensions2","_draw2","_buildLayerList2","_updateLayerList2","_deregisterRendererViewObjects2","_registerRendererViewObjects2","Map","KTX2TextureTranscoder","capabilities","getCapabilities","maxViews","canvasElement","document","createElement","getContext","getExtension","registerView","WEBGL_CONTEXT_NAMES","contextAttr","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","NICEST","colorTriangles","sub","deregisterView","addModel","onDestroyed","one","component","removeModel","modelId","deregisterPickable","setBackgroundColor","setEdgesEnabled","setPBREnabled","getSAOSupported","SUPPORTED_EXTENSIONS","setSAOEnabled","setTransparentEnabled","viewport","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","needsRebuild","rendererId","needsRender","render","force","pickSceneObject","lenDrawableList","webGLSceneModelRenderer","OES_element_index_uint","EXT_frag_depth","WEBGL_depth_texture","enable","DEPTH_TEST","frontFace","CCW","CULL_FACE","depthMask","normalDrawSAOBin","edgesColorOpaqueBin","normalFillTransparentBin","edgesColorTransparentBin","xrayedSilhouetteOpaqueBin","xrayEdgesOpaqueBin","xrayedSilhouetteTransparentBin","xrayEdgesTransparentBin","highlightedSilhouetteOpaqueBin","highlightedEdgesOpaqueBin","highlightedSilhouetteTransparentBin","highlightedEdgesTransparentBin","selectedSilhouetteOpaqueBin","selectedEdgesOpaqueBin","selectedSilhouetteTransparentBin","selectedEdgesTransparentBin","saoPossible","occlusionRenderBuffer1","getRenderBuffer","depthTexture","size","getTexture","normalDrawSAOBinLen","edgesColorOpaqueBinLen","normalFillTransparentBinLen","edgesColorTransparentBinLen","xrayedSilhouetteOpaqueBinLen","xrayEdgesOpaqueBinLen","xrayedSilhouetteTransparentBinLen","xrayEdgesTransparentBinLen","highlightedSilhouetteOpaqueBinLen","highlightedEdgesOpaqueBinLen","highlightedSilhouetteTransparentBinLen","highlightedEdgesTransparentBinLen","selectedSilhouetteOpaqueBinLen","selectedEdgesOpaqueBinLen","selectedSilhouetteTransparentBinLen","selectedEdgesTransparentBinLen","edgeMaterial","edgeAlpha","BLEND","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","blendFunc","disable","numTextureUnits","ii","activeTexture","TEXTURE0","TEXTURE_CUBE_MAP","numVertexAttribs","MAX_VERTEX_ATTRIBS","disableVertexAttribArray","quality"],"mappings":"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"}