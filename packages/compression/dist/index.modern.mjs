import{createMat4 as t,createMat3 as a,identityMat3 as r,translationMat3v as n,scalingMat3v as o,mulMat3 as e,identityMat4 as l,translationMat4v as h,scalingMat4v as M,mulMat4 as f,createVec3 as s,transformVec3 as i,normalizeVec3 as c}from"@xeokit/matrix";const u=t(),b=t();function A(t,a,r){let n,o;for(a=a||new Float64Array(3),r=r||new Float64Array(3),n=0;n<3;n++)a[n]=Number.MAX_VALUE,r[n]=-Number.MAX_VALUE;for(n=0;n<t.length;n+=3)for(o=0;o<3;o++)a[o]=Math.min(a[o],t[n+o]),r[o]=Math.max(r[o],t[n+o]);return{min:a,max:r}}function m(a,r){r=r||t();const n=a[3]-a[0],o=a[4]-a[1],e=a[5]-a[2],s=65535;return l(u),h(a,u),l(b),M([n/s,o/s,e/s],b),f(u,b,r),r}function w(t,a,r){const n=new Uint16Array(t.length);var o=new Float32Array([r[0]!==a[0]?65535/(r[0]-a[0]):0,r[1]!==a[1]?65535/(r[1]-a[1]):0,r[2]!==a[2]?65535/(r[2]-a[2]):0]);let e;for(e=0;e<t.length;e+=3)n[e+0]=Math.floor((t[e+0]-a[0])*o[0]),n[e+1]=Math.floor((t[e+1]-a[1])*o[1]),n[e+2]=Math.floor((t[e+2]-a[2])*o[2]);return l(u),h(a,u),l(b),M([(r[0]-a[0])/65535,(r[1]-a[1])/65535,(r[2]-a[2])/65535],b),{quantized:n,decompressMatrix:f(u,b,l())}}function y(t,a,r=t){const n=new Float32Array([a[3]!==a[0]?65535/(a[3]-a[0]):0,a[4]!==a[1]?65535/(a[4]-a[1]):0,a[5]!==a[2]?65535/(a[5]-a[2]):0]);return r[0]=Math.max(0,Math.min(65535,Math.floor((t[0]-a[0])*n[0]))),r[1]=Math.max(0,Math.min(65535,Math.floor((t[1]-a[1])*n[1]))),r[2]=Math.max(0,Math.min(65535,Math.floor((t[2]-a[2])*n[2]))),r}function g(t,a,r=t){return r[0]=t[0]*a[0]+a[12],r[1]=t[1]*a[5]+a[13],r[2]=t[2]*a[10]+a[14],r}function x(t,a,r=t){return r[0]=t[0]*a[0]+a[12],r[1]=t[1]*a[5]+a[13],r[2]=t[2]*a[10]+a[14],r[3]=t[3]*a[0]+a[12],r[4]=t[4]*a[5]+a[13],r[5]=t[5]*a[10]+a[14],r}function F(t,a,r=new Float32Array(t.length)){for(let n=0,o=t.length;n<o;n+=3)r[n+0]=t[n+0]*a[0]+a[12],r[n+1]=t[n+1]*a[5]+a[13],r[n+2]=t[n+2]*a[10]+a[14];return r}function U(t){const a=new Float32Array(2),r=new Float32Array(2);let n,o;for(n=0;n<2;n++)a[n]=Number.MAX_VALUE,r[n]=-Number.MAX_VALUE;for(n=0;n<t.length;n+=2)for(o=0;o<2;o++)a[o]=Math.min(a[o],t[n+o]),r[o]=Math.max(r[o],t[n+o]);return{min:a,max:r}}var q=function(){const t=a(),l=a();return function(a,h,M){const f=new Uint16Array(a.length),s=new Float32Array([65535/(M[0]-h[0]),65535/(M[1]-h[1])]);let i;for(i=0;i<a.length;i+=2)f[i+0]=Math.floor((a[i+0]-h[0])*s[0]),f[i+1]=Math.floor((a[i+1]-h[1])*s[1]);return r(t),n(h,t),r(l),o([(M[0]-h[0])/65535,(M[1]-h[1])/65535],l),{quantized:f,decompressMatrix:e(t,l,r())}}}();function I(t){const a=new Int8Array(t.length);let r,n,o,e,l;for(let h=0;h<t.length;h+=3)o=r=d(t,h,"floor","floor"),n=X(r),e=l=p(t,h,n),r=d(t,h,"ceil","floor"),n=X(r),e=p(t,h,n),e>l&&(o=r,l=e),r=d(t,h,"floor","ceil"),n=X(r),e=p(t,h,n),e>l&&(o=r,l=e),r=d(t,h,"ceil","ceil"),n=X(r),e=p(t,h,n),e>l&&(o=r,l=e),a[h]=o[0],a[h+1]=o[1];return a}function d(t,a,r,n){let o=t[a]/(Math.abs(t[a])+Math.abs(t[a+1])+Math.abs(t[a+2])),e=t[a+1]/(Math.abs(t[a])+Math.abs(t[a+1])+Math.abs(t[a+2]));if(t[a+2]<0){let t=(1-Math.abs(e))*(o>=0?1:-1),a=(1-Math.abs(o))*(e>=0?1:-1);o=t,e=a}return new Int8Array([Math[r](127.5*o+(o<0?-1:0)),Math[n](127.5*e+(e<0?-1:0))])}function p(t,a,r){return t[a]*r[0]+t[a+1]*r[1]+t[a+2]*r[2]}function E(t,a,r=new Float32Array(2)){r[0]=t[0]*a[0]+a[6],r[1]=t[1]*a[4]+a[7]}function L(t,a,r=new Float32Array(t.length)){for(let n=0,o=t.length;n<o;n+=3)r[n+0]=t[n+0]*a[0]+a[6],r[n+1]=t[n+1]*a[4]+a[7];return r}function N(t,a){let r=t[0],n=t[1];r=(2*r+1)/255,n=(2*n+1)/255;const o=1-Math.abs(r)-Math.abs(n);o<0&&(r=(1-Math.abs(n))*(r>=0?1:-1),n=(1-Math.abs(r))*(n>=0?1:-1));const e=Math.sqrt(r*r+n*n+o*o);return a[0]=r/e,a[1]=n/e,a[2]=o/e,a}function V(t,a){for(let r=0,n=0,o=t.length;r<o;r+=2){let o=t[r+0],e=t[r+1];o=(2*o+1)/255,e=(2*e+1)/255;const l=1-Math.abs(o)-Math.abs(e);l<0&&(o=(1-Math.abs(e))*(o>=0?1:-1),e=(1-Math.abs(o))*(e>=0?1:-1));const h=Math.sqrt(o*o+e*e+l*l);a[n+0]=o/h,a[n+1]=e/h,a[n+2]=l/h,n+=3}return a}function X(t,a=s()){let r=t[0],n=t[1];r=(2*r+1)/255,n=(2*n+1)/255;const o=1-Math.abs(r)-Math.abs(n);o<0&&(r=(1-Math.abs(n))*(r>=0?1:-1),n=(1-Math.abs(r))*(n>=0?1:-1));const e=Math.sqrt(r*r+n*n+o*o);return a[0]=r/e,a[1]=n/e,a[2]=o/e,a}function _(t,a,r){const n=t.length,o=new Uint16Array(n),e=a[0],s=a[1],i=a[2],c=a[3]-e,A=a[4]-s,m=a[5]-i,w=65525,y=w/c,g=w/A,x=w/m,F=t=>t>=0?t:0;for(let a=0;a<n;a+=3)o[a+0]=Math.floor(F(t[a+0]-e)*y),o[a+1]=Math.floor(F(t[a+1]-s)*g),o[a+2]=Math.floor(F(t[a+2]-i)*x);return l(u),h(a,u),l(b),M([c/w,A/w,m/w],b),f(u,b,r),o}function v(t,a,r,n,o){function e(t,a){return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]}let l,h,M,f,s,u,b=new Float32Array([0,0,0,0]),A=new Float32Array([0,0,0,0]);for(u=0;u<r;u+=3)b[0]=a[u],b[1]=a[u+1],b[2]=a[u+2],i(t,b,A),c(A,A),M=l=k(A,"floor","floor"),h=X(l),f=s=e(A,h),l=k(A,"ceil","floor"),h=X(l),f=e(A,h),f>s&&(M=l,s=f),l=k(A,"floor","ceil"),h=X(l),f=e(A,h),f>s&&(M=l,s=f),l=k(A,"ceil","ceil"),h=X(l),f=e(A,h),f>s&&(M=l,s=f),n[o+u+0]=M[0],n[o+u+1]=M[1],n[o+u+2]=0;return o+r}function z(t){const a=t.length,r=new Int8Array(a);let n,o,e,l,h;for(let M=0;M<a;M+=3)e=n=j(t,M,"floor","floor"),o=X(n),l=h=p(t,M,o),n=j(t,M,"ceil","floor"),o=X(n),l=p(t,M,o),l>h&&(e=n,h=l),n=j(t,M,"floor","ceil"),o=X(n),l=p(t,M,o),l>h&&(e=n,h=l),n=j(t,M,"ceil","ceil"),o=X(n),l=p(t,M,o),l>h&&(e=n,h=l),r[M+0]=e[0],r[M+1]=e[1],r[M+2]=0;return r}function k(t,a,r){let n=t[0]/(Math.abs(t[0])+Math.abs(t[1])+Math.abs(t[2])),o=t[1]/(Math.abs(t[0])+Math.abs(t[1])+Math.abs(t[2]));if(t[2]<0){let t=n,a=o;t=(1-Math.abs(o))*(n>=0?1:-1),a=(1-Math.abs(n))*(o>=0?1:-1),n=t,o=a}return new Int8Array([Math[a](127.5*n+(n<0?-1:0)),Math[r](127.5*o+(o<0?-1:0))])}function j(t,a,r,n){let o=t[a]/(Math.abs(t[a])+Math.abs(t[a+1])+Math.abs(t[a+2])),e=t[a+1]/(Math.abs(t[a])+Math.abs(t[a+1])+Math.abs(t[a+2]));if(t[a+2]<0){let t=(1-Math.abs(e))*(o>=0?1:-1),a=(1-Math.abs(o))*(e>=0?1:-1);o=t,e=a}return new Int8Array([Math[r](127.5*o+(o<0?-1:0)),Math[n](127.5*e+(e<0?-1:0))])}export{I as compressNormals,y as compressPoint3,w as compressPositions3,q as compressUVs,m as createPositions3DecompressMat4,x as decompressAABB3,N as decompressNormal,V as decompressNormals,g as decompressPoint3,F as decompressPositions3,E as decompressUV,L as decompressUVs,A as getPositions3MinMax,U as getUVBounds,j as octEncodeNormal,z as octEncodeNormals,k as octEncodeVec3,_ as quantizePositions3,v as transformAndOctEncodeNormals};
//# sourceMappingURL=index.modern.mjs.map
