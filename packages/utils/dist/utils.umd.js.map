{"version":3,"file":"utils.umd.js","sources":["../src/Map.ts","../src/Queue.ts","../src/LoadingManager.ts","../src/Loader.ts","../src/WorkerPool.ts","../src/Cache.ts","../src/FileLoader.ts","../src/index.ts"],"sourcesContent":["/** @private */\nclass Map {\n     readonly #items: any[];\n     #lastUniqueId: number;\n\n    constructor(items:any, baseId?:any) {\n        this.#items = items || [];\n        this.#lastUniqueId = (baseId || 0) + 1;\n    }\n\n    /**\n     * Usage:\n     *\n     * id = myMap.addItem(\"foo\") // ID internally generated\n     * id = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"\n     */\n    addItem() {\n        let item;\n        if (arguments.length === 2) {\n            const id = arguments[0];\n            item = arguments[1];\n            if (this.#items[id]) { // Won't happen if given ID is string\n                throw \"ID clash: '\" + id + \"'\";\n            }\n            this.#items[id] = item;\n            return id;\n\n        } else {\n            item = arguments[0] || {};\n            while (true) {\n                const findId = this.#lastUniqueId++;\n                if (!this.#items[findId]) {\n                    this.#items[findId] = item;\n                    return findId;\n                }\n            }\n        }\n    }\n\n    removeItem(id:any) {\n        const item = this.#items[id];\n        delete this.#items[id];\n        return item;\n    }\n}\n\nexport {Map};\n","export class Queue {\n    private _head: any[];\n    private _headLength: number;\n    private _tail: any[];\n    private _index: number;\n    private _length: number;\n\n    constructor() {\n\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    shift() {\n        if (this._index >= this._headLength) {\n            const t = this._head;\n            t.length = 0;\n            this._head = this._tail;\n            this._tail = t;\n            this._index = 0;\n            this._headLength = this._head.length;\n            if (!this._headLength) {\n                return;\n            }\n        }\n        const value = this._head[this._index];\n        if (this._index < 0) {\n            delete this._head[this._index++];\n        }\n        else {\n            this._head[this._index++] = undefined;\n        }\n        this._length--;\n        return value;\n    }\n\n    push(item: any) {\n        this._length++;\n        this._tail.push(item);\n        return this;\n    };\n\n    unshift(item: any) {\n        this._head[--this._index] = item;\n        this._length++;\n        return this;\n    }\n\n    clear() {\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n}\n","class LoadingManager {\n    private isLoading: boolean;\n    private itemsLoaded: number;\n    private itemsTotal: number;\n    private urlModifier: undefined;\n    private handlers: any[];\n    private onStart: Function|undefined;\n    private onLoad: Function;\n    private onProgress: Function;\n    private onError: Function;\n\n    constructor(onLoad: Function, onProgress: Function, onError: Function) {\n\n        this.isLoading = false;\n        this.itemsLoaded = 0;\n        this.itemsTotal = 0;\n        this.urlModifier = undefined;\n        this.handlers = [];\n\n        this.onStart = undefined;\n        this.onLoad = onLoad;\n        this.onProgress = onProgress;\n        this.onError = onError;\n    }\n\n    itemStart(url: any) {\n        this.itemsTotal++;\n        if (!this.isLoading) {\n            if (this.onStart !== undefined) {\n                this.onStart(url, this.itemsLoaded, this.itemsTotal);\n            }\n        }\n        this.isLoading = true;\n    }\n\n    itemEnd(url: any) {\n        this.itemsLoaded++;\n        if (this.onProgress !== undefined) {\n            this.onProgress(url, this.itemsLoaded, this.itemsTotal);\n        }\n        if (this.itemsLoaded === this.itemsTotal) {\n            this.isLoading = false;\n            if (this.onLoad !== undefined) {\n                this.onLoad();\n            }\n        }\n    }\n\n    itemError(url: any) {\n        if (this.onError !== undefined) {\n            this.onError(url);\n        }\n    }\n\n    resolveURL(url: any) {\n        if (this.urlModifier) {\n            // @ts-ignore\n            return this.urlModifier(url);\n        }\n        return url;\n    }\n\n    setURLModifier(transform: any) {\n        this.urlModifier = transform;\n        return this;\n    }\n\n    addHandler(regex: any, loader: any) {\n        this.handlers.push(regex, loader);\n        return this;\n    }\n\n    removeHandler(regex: any) {\n        const index = this.handlers.indexOf(regex);\n        if (index !== -1) {\n            this.handlers.splice(index, 2);\n        }\n        return this;\n    }\n\n    getHandler(file: any) {\n        for (let i = 0, l = this.handlers.length; i < l; i += 2) {\n            const regex = this.handlers[i];\n            const loader = this.handlers[i + 1];\n            if (regex.global) regex.lastIndex = 0; // see #17920\n            if (regex.test(file)) {\n                return loader;\n            }\n        }\n        return null;\n    }\n}\n\n// @ts-ignore\nconst DefaultLoadingManager = new LoadingManager();\n\nexport {DefaultLoadingManager, LoadingManager};\n","import {DefaultLoadingManager, LoadingManager} from './LoadingManager';\n\nclass Loader {\n     manager: LoadingManager;\n     crossOrigin: string;\n     withCredentials: boolean;\n     path: string;\n     resourcePath: string;\n     requestHeader: {};\n\n    constructor(manager: LoadingManager | undefined) {\n\n        this.manager = (manager !== undefined) ? manager : DefaultLoadingManager;\n\n        this.crossOrigin = 'anonymous';\n        this.withCredentials = false;\n        this.path = '';\n        this.resourcePath = '';\n        this.requestHeader = {};\n    }\n\n    load(url: string, onLoad: Function, onProgress: Function, onError: Function) {\n    }\n\n    loadAsync(url: string, onProgress: Function) {\n        const scope = this;\n        return new Promise(function (resolve, reject) {\n            // @ts-ignore\n            scope.load(url, resolve, onProgress, reject);\n        });\n    }\n\n    parse( /* data */) {\n    }\n\n    setCrossOrigin(crossOrigin: string) {\n        this.crossOrigin = crossOrigin;\n        return this;\n    }\n\n    setWithCredentials(value: boolean) {\n        this.withCredentials = value;\n        return this;\n    }\n\n    setPath(path: string) {\n        this.path = path;\n        return this;\n    }\n\n    setResourcePath(resourcePath: string) {\n        this.resourcePath = resourcePath;\n        return this;\n    }\n\n    setRequestHeader(requestHeader: {}) {\n        this.requestHeader = requestHeader;\n        return this;\n    }\n}\n\nexport {Loader};\n","/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nexport class WorkerPool {\n    private pool: number;\n    private queue: any[];\n    private workers: any[];\n    private workersResolve: any[];\n    private workerStatus: number;\n    private workerCreator: any;\n\n    constructor(pool = 4) {\n        this.pool = pool;\n        this.queue = [];\n        this.workers = [];\n        this.workersResolve = [];\n        this.workerStatus = 0;\n    }\n\n    _initWorker(workerId: number) {\n        if (!this.workers[workerId]) {\n            const worker = this.workerCreator();\n            worker.addEventListener('message', this._onMessage.bind(this, workerId));\n            this.workers[workerId] = worker;\n        }\n    }\n\n    _getIdleWorker() {\n        for (let i = 0; i < this.pool; i++)\n            if (!(this.workerStatus & (1 << i))) return i;\n        return -1;\n    }\n\n    _onMessage(workerId: number, msg: string) {\n        const resolve = this.workersResolve[workerId];\n        resolve && resolve(msg);\n        if (this.queue.length) {\n            const {resolve, msg, transfer} = this.queue.shift();\n            this.workersResolve[workerId] = resolve;\n            this.workers[workerId].postMessage(msg, transfer);\n        } else {\n            this.workerStatus ^= 1 << workerId;\n        }\n    }\n\n    setWorkerCreator(workerCreator: any) {\n        this.workerCreator = workerCreator;\n    }\n\n    setWorkerLimit(pool: number) {\n        this.pool = pool;\n    }\n\n    postMessage(msg: any, transfer: any) {\n        return new Promise((resolve) => {\n            const workerId = this._getIdleWorker();\n            if (workerId !== -1) {\n                this._initWorker(workerId);\n                this.workerStatus |= 1 << workerId;\n                this.workersResolve[workerId] = resolve;\n                this.workers[workerId].postMessage(msg, transfer);\n            } else {\n                this.queue.push({resolve, msg, transfer});\n            }\n        });\n    }\n\n    destroy() {\n\n        this.workers.forEach((worker) => worker.terminate());\n        this.workersResolve.length = 0;\n        this.workers.length = 0;\n        this.queue.length = 0;\n        this.workerStatus = 0;\n\n    }\n\n}\n","const files: any = {};\nlet enabled = false;\n\nconst Cache = {\n\n    enabled: false,\n    files: {},\n\n    add: function (key: string | number, file: any) {\n        if (!enabled) {\n            return;\n        }\n        files[key] = file;\n    },\n\n    get: function (key: string | number) {\n        if (!enabled) {\n            return;\n        }\n        return files[key];\n    },\n\n    remove: function (key: string | number) {\n        delete files[key];\n    },\n\n    clear: function () {\n        this.files = {};\n    }\n};\n\nexport {Cache};\n","import {Cache} from './Cache';\nimport {Loader} from './Loader';\nimport type {LoadingManager} from \"./LoadingManager\";\n\nconst loading : {[key:string]:any} = {};\n\nclass FileLoader extends Loader {\n\n    mimeType: string;\n    responseType: string;\n\n    constructor(manager?: LoadingManager) {\n        super(manager);\n    }\n\n    load(url:string, onLoad:Function, onProgress:Function, onError:Function) {\n        if (url === undefined) {\n            url = '';\n        }\n        if (this.path !== undefined) {\n            url = this.path + url;\n        }\n        url = this.manager.resolveURL(url);\n        const cached = Cache.get(url);\n        if (cached !== undefined) {\n            this.manager.itemStart(url);\n            setTimeout(() => {\n                if (onLoad) {\n                    onLoad(cached);\n                }\n                this.manager.itemEnd(url);\n            }, 0);\n            return cached;\n        }\n        if (loading[url] !== undefined) {\n            loading[url].push({onLoad, onProgress, onError});\n            return;\n        }\n        loading[url] = [];\n        loading[url].push({onLoad, onProgress, onError});\n        const req = new Request(url, {\n            headers: new Headers(this.requestHeader),\n            credentials: this.withCredentials ? 'include' : 'same-origin'\n        });\n        const mimeType = this.mimeType;\n        const responseType = this.responseType;\n        fetch(req).then(response => {\n            if (response.status === 200 || response.status === 0) {\n                // Some browsers return HTTP Status 0 when using non-http protocol\n                // e.g. 'file://' or 'data://'. Handle as success.\n                if (response.status === 0) {\n                    console.warn('FileLoader: HTTP Status 0 received.');\n                }\n                // @ts-ignore\n                if (typeof ReadableStream === 'undefined' || response.body.getReader === undefined) {\n                    return response;\n                }\n                const callbacks = loading[url];\n                // @ts-ignore\n                const reader = response.body.getReader();\n                const contentLength = response.headers.get('Content-Length');\n                const total = contentLength ? parseInt(contentLength) : 0;\n                const lengthComputable = total !== 0;\n                let loaded = 0;\n                const stream = new ReadableStream({\n                    start(controller) {\n                        readData();\n\n                        function readData() {\n                            reader.read().then(({done, value}) => {\n                                if (done) {\n                                    controller.close();\n                                } else {\n                                    // @ts-ignore\n                                    loaded += value.byteLength;\n                                    const event = new ProgressEvent('progress', {lengthComputable, loaded, total});\n                                    for (let i = 0, il = callbacks.length; i < il; i++) {\n                                        const callback = callbacks[i];\n                                        if (callback.onProgress) {\n                                            callback.onProgress(event);\n                                        }\n                                    }\n                                    controller.enqueue(value);\n                                    readData();\n                                }\n                            });\n                        }\n                    }\n                });\n                return new Response(stream);\n            } else {\n                throw new Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n            }\n        }).then(response => {\n            switch (responseType) {\n                case 'arraybuffer':\n                    return response.arrayBuffer();\n                case 'blob':\n                    return response.blob();\n                case 'document':\n                    return response.text()\n                        .then(text => {\n                            const parser = new DOMParser();\n                            // @ts-ignore\n                            return parser.parseFromString(text, mimeType);\n                        });\n                case 'json':\n                    return response.json();\n                default:\n                    if (mimeType === undefined) {\n                        return response.text();\n                    } else {\n                        // sniff encoding\n                        const re = /charset=\"?([^;\"\\s]*)\"?/i;\n                        const exec = re.exec(mimeType);\n                        const label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n                        const decoder = new TextDecoder(label);\n                        return response.arrayBuffer().then(ab => decoder.decode(ab));\n                    }\n            }\n        }).then(data => {\n            // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n            Cache.add(url, data);\n            const callbacks = loading[url];\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onLoad) {\n                    callback.onLoad(data);\n                }\n            }\n        }).catch(err => {\n            // Abort errors and other errors are handled the same\n            const callbacks = loading[url];\n            if (callbacks === undefined) {\n                // When onLoad was called and url was deleted in `loading`\n                this.manager.itemError(url);\n                throw err;\n\n            }\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onError) {\n                    callback.onError(err);\n                }\n            }\n            this.manager.itemError(url);\n        }).finally(() => {\n            this.manager.itemEnd(url);\n        });\n        this.manager.itemStart(url);\n    }\n\n    setResponseType(value: string) {\n        this.responseType = value;\n        return this;\n    }\n\n    setMimeType(value: string) {\n        this.mimeType = value;\n        return this;\n    }\n}\n\n\nexport {FileLoader};\n","/**\n * ## xeokit SDK Core Utilities Library\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/utils\n * ````\n *\n * @module @xeokit/utils\n */\n\nexport * from \"./Map\";\nexport * from \"./Queue\";\nexport * from \"./Loader\";\nexport * from \"./LoadingManager\";\nexport * from \"./WorkerPool\";\nexport * from \"./Cache\";\nexport * from \"./FileLoader\";\n\n/**\n *\n * @param ob\n */\nexport function clone(ob: any) {\n    return JSON.parse(JSON.stringify(ob));\n}\n\nconst guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n    const li :any[]= [];\n    // @ts-ignore\n    const st = a[0].charCodeAt(0);\n    const en = st + a[1];\n    for (let i = st; i < en; ++i) {\n        li.push(i);\n    }\n    return String.fromCharCode.apply(null, li);\n}).join(\"\");\n\n/**\n *\n * @param v\n * @param len\n */\nexport function b64(v: number, len: number) {\n    const r = (!len || len === 4) ? [0, 6, 12, 18] : [0, 6];\n    return r.map(function (i) {\n            return guidChars.substr(parseInt(String(v / (1 << i))) % 64, 1)\n        }\n    ).reverse().join(\"\");\n}\n\n/**\n *\n * @param g\n */\nexport function compressGuid(g: string) {\n    const bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n        return parseInt(g.substr(i, 2), 16);\n    });\n    return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n        return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2], 4);\n    }).join(\"\");\n}\n\n/**\n *\n * @param m\n * @param t\n */\nexport function findNodeOfType(m: any, t: any) {\n    const li: any[] = [];\n    const _ = function (n: { type: any; children: any; }) {\n        if (n.type === t) li.push(n);\n        (n.children || []).forEach(function (c: { type: any; children: any; }) {\n            _(c);\n        });\n    };\n    _(m);\n    return li;\n}\n\n/**\n */\nexport function timeout(dt: number) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, dt);\n    });\n}\n\nexport function httpRequest(args: { method: string; url: string; }) {\n    return new Promise(function (resolve, reject) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(args.method || \"GET\", args.url, true);\n        xhr.onload = function (e) {\n            console.log(args.url, xhr.readyState, xhr.status);\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.responseXML);\n                } else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.send(null);\n    });\n}\n//\n// export const queryString = function () {\n//     // This function is anonymous, is executed immediately and\n//     // the return value is assigned to QueryString!\n//     const query_string = {};\n//     const query = window.location.search.substring(1);\n//     const vars = query.split(\"&\");\n//     for (let i = 0; i < vars.length; i++) {\n//         const pair = vars[i].split(\"=\");\n//         // If first entry with this name\n//         // @ts-ignore\n//         if (typeof query_string[pair[0]] === \"undefined\") {\n//             // @ts-ignore\n//             query_string[pair[0]] = decodeURIComponent(pair[1]);\n//             // If second entry with this name\n//         } else { // @ts-ignore\n//             if (typeof query_string[pair[0]] === \"string\") {\n//                 // @ts-ignore\n//                 query_string[pair[0]] = [query_string[pair[0]], decodeURIComponent(pair[1])];\n//                 // If third or later entry with this name\n//             } else {\n//                 // @ts-ignore\n//                 query_string[pair[0]].push(decodeURIComponent(pair[1]));\n//             }\n//         }\n//     }\n//     return query_string;\n// }();\n\nexport function loadJSON(url: string,\n                         ok: {\n                             (arg0: any): void;\n                             (_value: any): any;\n                         },\n                         err: {\n                             (arg0: string | ProgressEvent<XMLHttpRequestEventTarget>): void;\n                             (_value: any): any;\n                         }) {\n    // Avoid checking ok and err on each use.\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n\n    const request = new XMLHttpRequest();\n    request.overrideMimeType(\"application/json\");\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n        // @ts-ignore\n        const response = event.target.response;\n        if (this.status === 200) {\n            let json;\n            try {\n                json = JSON.parse(response);\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n            ok(json);\n        } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('loadFile: HTTP Status 0 received.');\n            try {\n                ok(JSON.parse(response));\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n        } else {\n            err(event);\n        }\n    }, false);\n\n    request.addEventListener('error', function (event) {\n        err(event);\n    }, false);\n    request.send(null);\n}\n\nexport function loadArraybuffer(url: string, ok: { (arg0: ArrayBuffer): void; (_value: any): any; }, err: { (arg0: string): void; (_value: any): any; }) {\n    // Check for data: URI\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = url.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        let data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (let i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\n/**\n Tests if the given object is an array\n */\nexport function isArray(value: any) {\n    return value && !(value.propertyIsEnumerable('length')) && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n Tests if the given value is a string\n */\nexport function isString(value: any) {\n    return (typeof value === 'string' || value instanceof String);\n}\n\n/**\n Tests if the given value is a number\n */\nexport function isNumeric(value: any) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n Tests if the given value is an ID\n */\nexport function isID(value: any) {\n    return isString(value) || isNumeric(value);\n}\n\n/**\n Tests if the given value is a function\n */\nexport function isFunction(value: any) {\n    return (typeof value === \"function\");\n}\n\n/**\n Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.\n */\nexport function isObject(value: { constructor: Function; }) {\n    const objectConstructor = {}.constructor;\n    return (!!value && value.constructor === objectConstructor);\n}\n\n/** Returns a shallow copy\n */\nexport function copy(o: any) {\n    return apply(o, {});\n}\n\n/** Add properties of o to o2, overwriting them on o2 if already there\n */\nexport function apply(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            o2[name] = o[name];\n        }\n    }\n    return o2;\n}\n\n/**\n Add non-null/defined properties of o to o2\n */\nexport function apply2(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o[name] !== undefined && o[name] !== null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Add properties of o to o2 where undefined or null on o2\n */\nexport function applyIf(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o2[name] === undefined || o2[name] === null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Returns true if the given map is empty.\n */\nexport function isEmptyObject(obj: any) {\n    for (const name in obj) {\n        if (obj.hasOwnProperty(name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n Returns the given ID as a string, in quotes if the ID was a string to begin with.\n This is useful for logging IDs.\n */\nexport function inQuotes(id: any) {\n    return isNumeric(id) ? (`${id}`) : (`'${id}'`);\n}\n\n/**\n Returns the concatenation of two typed arrays.\n */\nexport function concat(a: any, b: any) {\n    const c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * Returns a new UUID.\n */\nexport const createUUID = ((() => {\n    const lut: any[] = [];\n    for (let i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n    }\n    return () => {\n        const d0 = Math.random() * 0xffffffff | 0;\n        const d1 = Math.random() * 0xffffffff | 0;\n        const d2 = Math.random() * 0xffffffff | 0;\n        const d3 = Math.random() * 0xffffffff | 0;\n        return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n    };\n}))();\n"],"names":["Map","items","baseId","Object","defineProperty","this","_items","writable","value","_lastUniqueId","_classPrivateFieldLooseBase","_proto","prototype","addItem","item","arguments","length","id","findId","removeItem","Queue","_head","_headLength","_tail","_index","_length","shift","t","undefined","push","unshift","clear","key","get","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","url","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","index","indexOf","splice","getHandler","file","i","l","global","lastIndex","test","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","path","resourcePath","requestHeader","load","loadAsync","scope","Promise","resolve","reject","parse","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","WorkerPool","pool","queue","workers","workersResolve","workerStatus","workerCreator","_initWorker","workerId","worker","addEventListener","_onMessage","bind","_getIdleWorker","msg","_this$queue$shift","transfer","postMessage","setWorkerCreator","setWorkerLimit","_this","destroy","forEach","terminate","Cache","enabled","files","add","remove","loading","FileLoader","_Loader","call","mimeType","responseType","_this2","cached","setTimeout","req","Request","headers","Headers","credentials","fetch","then","response","status","console","warn","ReadableStream","body","getReader","callbacks","reader","contentLength","total","parseInt","lengthComputable","loaded","stream","start","controller","readData","read","_ref","done","close","event","ProgressEvent","byteLength","il","callback","enqueue","Response","Error","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","json","exec","label","toLowerCase","decoder","TextDecoder","ab","decode","data","err","setResponseType","setMimeType","guidChars","map","a","li","st","charCodeAt","en","String","fromCharCode","apply","join","b64","v","len","substr","reverse","isString","isNumeric","isNaN","parseFloat","isFinite","o","o2","name","hasOwnProperty","createUUID","lut","toString","d0","Math","random","d1","d2","d3","ob","JSON","stringify","g","bs","b","c","constructor","set","m","_","n","type","children","args","xhr","XMLHttpRequest","open","method","onload","e","log","readyState","responseXML","send","propertyIsEnumerable","obj","ok","defaultCallback","_value","dataUriRegexResult","match","isBase64","window","decodeURIComponent","atob","buffer","ArrayBuffer","view","Uint8Array","error","request","onreadystatechange","overrideMimeType","target","dt"],"mappings":"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"}