{"version":3,"file":"utils.modern.mjs","sources":["../src/Map.ts","../src/Queue.ts","../src/LoadingManager.ts","../src/Loader.ts","../src/WorkerPool.ts","../src/Cache.ts","../src/FileLoader.ts","../src/index.ts"],"sourcesContent":["/** @private */\nclass Map {\n     readonly #items: any[];\n     #lastUniqueId: number;\n\n    constructor(items:any, baseId?:any) {\n        this.#items = items || [];\n        this.#lastUniqueId = (baseId || 0) + 1;\n    }\n\n    /**\n     * Usage:\n     *\n     * id = myMap.addItem(\"foo\") // ID internally generated\n     * id = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"\n     */\n    addItem() {\n        let item;\n        if (arguments.length === 2) {\n            const id = arguments[0];\n            item = arguments[1];\n            if (this.#items[id]) { // Won't happen if given ID is string\n                throw \"ID clash: '\" + id + \"'\";\n            }\n            this.#items[id] = item;\n            return id;\n\n        } else {\n            item = arguments[0] || {};\n            while (true) {\n                const findId = this.#lastUniqueId++;\n                if (!this.#items[findId]) {\n                    this.#items[findId] = item;\n                    return findId;\n                }\n            }\n        }\n    }\n\n    removeItem(id:any) {\n        const item = this.#items[id];\n        delete this.#items[id];\n        return item;\n    }\n}\n\nexport {Map};\n","export class Queue {\n    private _head: any[];\n    private _headLength: number;\n    private _tail: any[];\n    private _index: number;\n    private _length: number;\n\n    constructor() {\n\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    shift() {\n        if (this._index >= this._headLength) {\n            const t = this._head;\n            t.length = 0;\n            this._head = this._tail;\n            this._tail = t;\n            this._index = 0;\n            this._headLength = this._head.length;\n            if (!this._headLength) {\n                return;\n            }\n        }\n        const value = this._head[this._index];\n        if (this._index < 0) {\n            delete this._head[this._index++];\n        }\n        else {\n            this._head[this._index++] = undefined;\n        }\n        this._length--;\n        return value;\n    }\n\n    push(item: any) {\n        this._length++;\n        this._tail.push(item);\n        return this;\n    };\n\n    unshift(item: any) {\n        this._head[--this._index] = item;\n        this._length++;\n        return this;\n    }\n\n    clear() {\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n}\n","class LoadingManager {\n    private isLoading: boolean;\n    private itemsLoaded: number;\n    private itemsTotal: number;\n    private urlModifier: undefined;\n    private handlers: any[];\n    private onStart: Function|undefined;\n    private onLoad: Function;\n    private onProgress: Function;\n    private onError: Function;\n\n    constructor(onLoad: Function, onProgress: Function, onError: Function) {\n\n        this.isLoading = false;\n        this.itemsLoaded = 0;\n        this.itemsTotal = 0;\n        this.urlModifier = undefined;\n        this.handlers = [];\n\n        this.onStart = undefined;\n        this.onLoad = onLoad;\n        this.onProgress = onProgress;\n        this.onError = onError;\n    }\n\n    itemStart(url: any) {\n        this.itemsTotal++;\n        if (!this.isLoading) {\n            if (this.onStart !== undefined) {\n                this.onStart(url, this.itemsLoaded, this.itemsTotal);\n            }\n        }\n        this.isLoading = true;\n    }\n\n    itemEnd(url: any) {\n        this.itemsLoaded++;\n        if (this.onProgress !== undefined) {\n            this.onProgress(url, this.itemsLoaded, this.itemsTotal);\n        }\n        if (this.itemsLoaded === this.itemsTotal) {\n            this.isLoading = false;\n            if (this.onLoad !== undefined) {\n                this.onLoad();\n            }\n        }\n    }\n\n    itemError(url: any) {\n        if (this.onError !== undefined) {\n            this.onError(url);\n        }\n    }\n\n    resolveURL(url: any) {\n        if (this.urlModifier) {\n            // @ts-ignore\n            return this.urlModifier(url);\n        }\n        return url;\n    }\n\n    setURLModifier(transform: any) {\n        this.urlModifier = transform;\n        return this;\n    }\n\n    addHandler(regex: any, loader: any) {\n        this.handlers.push(regex, loader);\n        return this;\n    }\n\n    removeHandler(regex: any) {\n        const index = this.handlers.indexOf(regex);\n        if (index !== -1) {\n            this.handlers.splice(index, 2);\n        }\n        return this;\n    }\n\n    getHandler(file: any) {\n        for (let i = 0, l = this.handlers.length; i < l; i += 2) {\n            const regex = this.handlers[i];\n            const loader = this.handlers[i + 1];\n            if (regex.global) regex.lastIndex = 0; // see #17920\n            if (regex.test(file)) {\n                return loader;\n            }\n        }\n        return null;\n    }\n}\n\n// @ts-ignore\nconst DefaultLoadingManager = new LoadingManager();\n\nexport {DefaultLoadingManager, LoadingManager};\n","import {DefaultLoadingManager, LoadingManager} from './LoadingManager';\n\nclass Loader {\n     manager: LoadingManager;\n     crossOrigin: string;\n     withCredentials: boolean;\n     path: string;\n     resourcePath: string;\n     requestHeader: {};\n\n    constructor(manager: LoadingManager | undefined) {\n\n        this.manager = (manager !== undefined) ? manager : DefaultLoadingManager;\n\n        this.crossOrigin = 'anonymous';\n        this.withCredentials = false;\n        this.path = '';\n        this.resourcePath = '';\n        this.requestHeader = {};\n    }\n\n    load(url: string, onLoad: Function, onProgress: Function, onError: Function) {\n    }\n\n    loadAsync(url: string, onProgress: Function) {\n        const scope = this;\n        return new Promise(function (resolve, reject) {\n            // @ts-ignore\n            scope.load(url, resolve, onProgress, reject);\n        });\n    }\n\n    parse( /* data */) {\n    }\n\n    setCrossOrigin(crossOrigin: string) {\n        this.crossOrigin = crossOrigin;\n        return this;\n    }\n\n    setWithCredentials(value: boolean) {\n        this.withCredentials = value;\n        return this;\n    }\n\n    setPath(path: string) {\n        this.path = path;\n        return this;\n    }\n\n    setResourcePath(resourcePath: string) {\n        this.resourcePath = resourcePath;\n        return this;\n    }\n\n    setRequestHeader(requestHeader: {}) {\n        this.requestHeader = requestHeader;\n        return this;\n    }\n}\n\nexport {Loader};\n","/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nexport class WorkerPool {\n    private pool: number;\n    private queue: any[];\n    private workers: any[];\n    private workersResolve: any[];\n    private workerStatus: number;\n    private workerCreator: any;\n\n    constructor(pool = 4) {\n        this.pool = pool;\n        this.queue = [];\n        this.workers = [];\n        this.workersResolve = [];\n        this.workerStatus = 0;\n    }\n\n    _initWorker(workerId: number) {\n        if (!this.workers[workerId]) {\n            const worker = this.workerCreator();\n            worker.addEventListener('message', this._onMessage.bind(this, workerId));\n            this.workers[workerId] = worker;\n        }\n    }\n\n    _getIdleWorker() {\n        for (let i = 0; i < this.pool; i++)\n            if (!(this.workerStatus & (1 << i))) return i;\n        return -1;\n    }\n\n    _onMessage(workerId: number, msg: string) {\n        const resolve = this.workersResolve[workerId];\n        resolve && resolve(msg);\n        if (this.queue.length) {\n            const {resolve, msg, transfer} = this.queue.shift();\n            this.workersResolve[workerId] = resolve;\n            this.workers[workerId].postMessage(msg, transfer);\n        } else {\n            this.workerStatus ^= 1 << workerId;\n        }\n    }\n\n    setWorkerCreator(workerCreator: any) {\n        this.workerCreator = workerCreator;\n    }\n\n    setWorkerLimit(pool: number) {\n        this.pool = pool;\n    }\n\n    postMessage(msg: any, transfer: any) {\n        return new Promise((resolve) => {\n            const workerId = this._getIdleWorker();\n            if (workerId !== -1) {\n                this._initWorker(workerId);\n                this.workerStatus |= 1 << workerId;\n                this.workersResolve[workerId] = resolve;\n                this.workers[workerId].postMessage(msg, transfer);\n            } else {\n                this.queue.push({resolve, msg, transfer});\n            }\n        });\n    }\n\n    destroy() {\n\n        this.workers.forEach((worker) => worker.terminate());\n        this.workersResolve.length = 0;\n        this.workers.length = 0;\n        this.queue.length = 0;\n        this.workerStatus = 0;\n\n    }\n\n}\n","const files: any = {};\nlet enabled = false;\n\nconst Cache = {\n\n    enabled: false,\n    files: {},\n\n    add: function (key: string | number, file: any) {\n        if (!enabled) {\n            return;\n        }\n        files[key] = file;\n    },\n\n    get: function (key: string | number) {\n        if (!enabled) {\n            return;\n        }\n        return files[key];\n    },\n\n    remove: function (key: string | number) {\n        delete files[key];\n    },\n\n    clear: function () {\n        this.files = {};\n    }\n};\n\nexport {Cache};\n","import {Cache} from './Cache';\nimport {Loader} from './Loader';\nimport type {LoadingManager} from \"./LoadingManager\";\n\nconst loading : {[key:string]:any} = {};\n\nclass FileLoader extends Loader {\n\n    mimeType: string;\n    responseType: string;\n\n    constructor(manager?: LoadingManager) {\n        super(manager);\n    }\n\n    load(url:string, onLoad:Function, onProgress:Function, onError:Function) {\n        if (url === undefined) {\n            url = '';\n        }\n        if (this.path !== undefined) {\n            url = this.path + url;\n        }\n        url = this.manager.resolveURL(url);\n        const cached = Cache.get(url);\n        if (cached !== undefined) {\n            this.manager.itemStart(url);\n            setTimeout(() => {\n                if (onLoad) {\n                    onLoad(cached);\n                }\n                this.manager.itemEnd(url);\n            }, 0);\n            return cached;\n        }\n        if (loading[url] !== undefined) {\n            loading[url].push({onLoad, onProgress, onError});\n            return;\n        }\n        loading[url] = [];\n        loading[url].push({onLoad, onProgress, onError});\n        const req = new Request(url, {\n            headers: new Headers(this.requestHeader),\n            credentials: this.withCredentials ? 'include' : 'same-origin'\n        });\n        const mimeType = this.mimeType;\n        const responseType = this.responseType;\n        fetch(req).then(response => {\n            if (response.status === 200 || response.status === 0) {\n                // Some browsers return HTTP Status 0 when using non-http protocol\n                // e.g. 'file://' or 'data://'. Handle as success.\n                if (response.status === 0) {\n                    console.warn('FileLoader: HTTP Status 0 received.');\n                }\n                // @ts-ignore\n                if (typeof ReadableStream === 'undefined' || response.body.getReader === undefined) {\n                    return response;\n                }\n                const callbacks = loading[url];\n                // @ts-ignore\n                const reader = response.body.getReader();\n                const contentLength = response.headers.get('Content-Length');\n                const total = contentLength ? parseInt(contentLength) : 0;\n                const lengthComputable = total !== 0;\n                let loaded = 0;\n                const stream = new ReadableStream({\n                    start(controller) {\n                        readData();\n\n                        function readData() {\n                            reader.read().then(({done, value}) => {\n                                if (done) {\n                                    controller.close();\n                                } else {\n                                    // @ts-ignore\n                                    loaded += value.byteLength;\n                                    const event = new ProgressEvent('progress', {lengthComputable, loaded, total});\n                                    for (let i = 0, il = callbacks.length; i < il; i++) {\n                                        const callback = callbacks[i];\n                                        if (callback.onProgress) {\n                                            callback.onProgress(event);\n                                        }\n                                    }\n                                    controller.enqueue(value);\n                                    readData();\n                                }\n                            });\n                        }\n                    }\n                });\n                return new Response(stream);\n            } else {\n                throw new Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n            }\n        }).then(response => {\n            switch (responseType) {\n                case 'arraybuffer':\n                    return response.arrayBuffer();\n                case 'blob':\n                    return response.blob();\n                case 'document':\n                    return response.text()\n                        .then(text => {\n                            const parser = new DOMParser();\n                            // @ts-ignore\n                            return parser.parseFromString(text, mimeType);\n                        });\n                case 'json':\n                    return response.json();\n                default:\n                    if (mimeType === undefined) {\n                        return response.text();\n                    } else {\n                        // sniff encoding\n                        const re = /charset=\"?([^;\"\\s]*)\"?/i;\n                        const exec = re.exec(mimeType);\n                        const label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n                        const decoder = new TextDecoder(label);\n                        return response.arrayBuffer().then(ab => decoder.decode(ab));\n                    }\n            }\n        }).then(data => {\n            // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n            Cache.add(url, data);\n            const callbacks = loading[url];\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onLoad) {\n                    callback.onLoad(data);\n                }\n            }\n        }).catch(err => {\n            // Abort errors and other errors are handled the same\n            const callbacks = loading[url];\n            if (callbacks === undefined) {\n                // When onLoad was called and url was deleted in `loading`\n                this.manager.itemError(url);\n                throw err;\n\n            }\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onError) {\n                    callback.onError(err);\n                }\n            }\n            this.manager.itemError(url);\n        }).finally(() => {\n            this.manager.itemEnd(url);\n        });\n        this.manager.itemStart(url);\n    }\n\n    setResponseType(value: string) {\n        this.responseType = value;\n        return this;\n    }\n\n    setMimeType(value: string) {\n        this.mimeType = value;\n        return this;\n    }\n}\n\n\nexport {FileLoader};\n","/**\n * ## xeokit SDK Core Utilities Library\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/utils\n * ````\n *\n * @module @xeokit/utils\n */\n\nexport * from \"./Map\";\nexport * from \"./Queue\";\nexport * from \"./Loader\";\nexport * from \"./LoadingManager\";\nexport * from \"./WorkerPool\";\nexport * from \"./Cache\";\nexport * from \"./FileLoader\";\n\n/**\n *\n * @param ob\n */\nexport function clone(ob: any) {\n    return JSON.parse(JSON.stringify(ob));\n}\n\nconst guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n    const li :any[]= [];\n    // @ts-ignore\n    const st = a[0].charCodeAt(0);\n    const en = st + a[1];\n    for (let i = st; i < en; ++i) {\n        li.push(i);\n    }\n    return String.fromCharCode.apply(null, li);\n}).join(\"\");\n\n/**\n *\n * @param v\n * @param len\n */\nexport function b64(v: number, len: number) {\n    const r = (!len || len === 4) ? [0, 6, 12, 18] : [0, 6];\n    return r.map(function (i) {\n            return guidChars.substr(parseInt(String(v / (1 << i))) % 64, 1)\n        }\n    ).reverse().join(\"\");\n}\n\n/**\n *\n * @param g\n */\nexport function compressGuid(g: string) {\n    const bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n        return parseInt(g.substr(i, 2), 16);\n    });\n    return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n        return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2], 4);\n    }).join(\"\");\n}\n\n/**\n *\n * @param m\n * @param t\n */\nexport function findNodeOfType(m: any, t: any) {\n    const li: any[] = [];\n    const _ = function (n: { type: any; children: any; }) {\n        if (n.type === t) li.push(n);\n        (n.children || []).forEach(function (c: { type: any; children: any; }) {\n            _(c);\n        });\n    };\n    _(m);\n    return li;\n}\n\n/**\n */\nexport function timeout(dt: number) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, dt);\n    });\n}\n\nexport function httpRequest(args: { method: string; url: string; }) {\n    return new Promise(function (resolve, reject) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(args.method || \"GET\", args.url, true);\n        xhr.onload = function (e) {\n            console.log(args.url, xhr.readyState, xhr.status);\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.responseXML);\n                } else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.send(null);\n    });\n}\n//\n// export const queryString = function () {\n//     // This function is anonymous, is executed immediately and\n//     // the return value is assigned to QueryString!\n//     const query_string = {};\n//     const query = window.location.search.substring(1);\n//     const vars = query.split(\"&\");\n//     for (let i = 0; i < vars.length; i++) {\n//         const pair = vars[i].split(\"=\");\n//         // If first entry with this name\n//         // @ts-ignore\n//         if (typeof query_string[pair[0]] === \"undefined\") {\n//             // @ts-ignore\n//             query_string[pair[0]] = decodeURIComponent(pair[1]);\n//             // If second entry with this name\n//         } else { // @ts-ignore\n//             if (typeof query_string[pair[0]] === \"string\") {\n//                 // @ts-ignore\n//                 query_string[pair[0]] = [query_string[pair[0]], decodeURIComponent(pair[1])];\n//                 // If third or later entry with this name\n//             } else {\n//                 // @ts-ignore\n//                 query_string[pair[0]].push(decodeURIComponent(pair[1]));\n//             }\n//         }\n//     }\n//     return query_string;\n// }();\n\nexport function loadJSON(url: string,\n                         ok: {\n                             (arg0: any): void;\n                             (_value: any): any;\n                         },\n                         err: {\n                             (arg0: string | ProgressEvent<XMLHttpRequestEventTarget>): void;\n                             (_value: any): any;\n                         }) {\n    // Avoid checking ok and err on each use.\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n\n    const request = new XMLHttpRequest();\n    request.overrideMimeType(\"application/json\");\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n        // @ts-ignore\n        const response = event.target.response;\n        if (this.status === 200) {\n            let json;\n            try {\n                json = JSON.parse(response);\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n            ok(json);\n        } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('loadFile: HTTP Status 0 received.');\n            try {\n                ok(JSON.parse(response));\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n        } else {\n            err(event);\n        }\n    }, false);\n\n    request.addEventListener('error', function (event) {\n        err(event);\n    }, false);\n    request.send(null);\n}\n\nexport function loadArraybuffer(url: string, ok: { (arg0: ArrayBuffer): void; (_value: any): any; }, err: { (arg0: string): void; (_value: any): any; }) {\n    // Check for data: URI\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = url.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        let data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (let i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\n/**\n Tests if the given object is an array\n */\nexport function isArray(value: any) {\n    return value && !(value.propertyIsEnumerable('length')) && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n Tests if the given value is a string\n */\nexport function isString(value: any) {\n    return (typeof value === 'string' || value instanceof String);\n}\n\n/**\n Tests if the given value is a number\n */\nexport function isNumeric(value: any) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n Tests if the given value is an ID\n */\nexport function isID(value: any) {\n    return isString(value) || isNumeric(value);\n}\n\n/**\n Tests if the given value is a function\n */\nexport function isFunction(value: any) {\n    return (typeof value === \"function\");\n}\n\n/**\n Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.\n */\nexport function isObject(value: { constructor: Function; }) {\n    const objectConstructor = {}.constructor;\n    return (!!value && value.constructor === objectConstructor);\n}\n\n/** Returns a shallow copy\n */\nexport function copy(o: any) {\n    return apply(o, {});\n}\n\n/** Add properties of o to o2, overwriting them on o2 if already there\n */\nexport function apply(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            o2[name] = o[name];\n        }\n    }\n    return o2;\n}\n\n/**\n Add non-null/defined properties of o to o2\n */\nexport function apply2(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o[name] !== undefined && o[name] !== null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Add properties of o to o2 where undefined or null on o2\n */\nexport function applyIf(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o2[name] === undefined || o2[name] === null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Returns true if the given map is empty.\n */\nexport function isEmptyObject(obj: any) {\n    for (const name in obj) {\n        if (obj.hasOwnProperty(name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n Returns the given ID as a string, in quotes if the ID was a string to begin with.\n This is useful for logging IDs.\n */\nexport function inQuotes(id: any) {\n    return isNumeric(id) ? (`${id}`) : (`'${id}'`);\n}\n\n/**\n Returns the concatenation of two typed arrays.\n */\nexport function concat(a: any, b: any) {\n    const c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * Returns a new UUID.\n */\nexport const createUUID = ((() => {\n    const lut: any[] = [];\n    for (let i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n    }\n    return () => {\n        const d0 = Math.random() * 0xffffffff | 0;\n        const d1 = Math.random() * 0xffffffff | 0;\n        const d2 = Math.random() * 0xffffffff | 0;\n        const d3 = Math.random() * 0xffffffff | 0;\n        return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n    };\n}))();\n"],"names":["Map","constructor","items","baseId","Object","defineProperty","this","_items","writable","value","_lastUniqueId","_classPrivateFieldLooseBase","addItem","item","arguments","length","id","findId","removeItem","Queue","_head","_headLength","_tail","_index","_length","shift","t","undefined","push","unshift","clear","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","url","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","index","indexOf","splice","getHandler","file","i","l","global","lastIndex","test","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","path","resourcePath","requestHeader","load","loadAsync","scope","Promise","resolve","reject","parse","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","WorkerPool","pool","queue","workers","workersResolve","workerStatus","workerCreator","_initWorker","workerId","worker","addEventListener","_onMessage","bind","_getIdleWorker","msg","transfer","postMessage","setWorkerCreator","setWorkerLimit","destroy","forEach","terminate","Cache","enabled","files","add","key","get","remove","loading","FileLoader","super","mimeType","responseType","cached","setTimeout","req","Request","headers","Headers","credentials","fetch","then","response","status","console","warn","ReadableStream","body","getReader","callbacks","reader","contentLength","total","parseInt","lengthComputable","loaded","stream","start","controller","readData","read","done","close","byteLength","event","ProgressEvent","il","callback","enqueue","Response","Error","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","json","exec","label","toLowerCase","decoder","TextDecoder","ab","decode","data","catch","err","finally","setResponseType","setMimeType","clone","ob","JSON","stringify","guidChars","map","a","li","st","charCodeAt","en","String","fromCharCode","apply","join","b64","v","len","substr","reverse","compressGuid","g","bs","findNodeOfType","m","_","n","type","children","c","timeout","dt","httpRequest","args","xhr","XMLHttpRequest","open","method","onload","e","log","readyState","responseXML","send","loadJSON","ok","defaultCallback","_value","request","overrideMimeType","target","loadArraybuffer","dataUriRegexResult","match","isBase64","window","decodeURIComponent","atob","buffer","ArrayBuffer","view","Uint8Array","error","onreadystatechange","isArray","propertyIsEnumerable","isString","isNumeric","isNaN","parseFloat","isFinite","isID","isFunction","isObject","copy","o","o2","name","hasOwnProperty","apply2","applyIf","isEmptyObject","obj","inQuotes","concat","b","set","createUUID","lut","toString","d0","Math","random","d1","d2","d3"],"mappings":"+PACA,MAAMA,EAIFC,YAAYC,EAAWC,GAAWC,OAAAC,eAAAC,KAAAC,EAAA,CAAAC,UAAA,EAAAC,WAAAL,IAAAA,OAAAC,eAAAK,KAAAA,GAAAF,UAAA,EAAAC,WAAA,IAC9BE,EAAAL,KAAIC,GAAAA,GAAUL,GAAS,GACvBS,EAAIL,KAAAI,GAAAA,IAAkBP,GAAU,GAAK,CACzC,CAQAS,UACI,IAAIC,EACJ,GAAyB,IAArBC,UAAUC,OAAc,CACxB,MAAMC,EAAKF,UAAU,GAErB,GADAD,EAAOC,UAAU,GACbH,EAAIL,KAAAC,GAAAA,GAAQS,GACZ,KAAM,cAAgBA,EAAK,IAG/B,OADAL,EAAIL,KAAAC,GAAAA,GAAQS,GAAMH,EACXG,CAEV,CAEG,IADAH,EAAOC,UAAU,IAAM,CAAE,IACZ,CACT,MAAMG,EAASN,EAAAL,KAAII,GAAAA,KACnB,IAAKC,EAAAL,KAAIC,GAAAA,GAAQU,GAEb,OADAN,EAAAL,KAAIC,GAAAA,GAAQU,GAAUJ,EACfI,CAEd,CAET,CAEAC,WAAWF,GACP,MAAMH,EAAOF,EAAAL,KAAIC,GAAAA,GAAQS,GAEzB,cADOL,EAAAL,KAAIC,GAAAA,GAAQS,GACZH,CACX,EC3CS,MAAAM,EAOTlB,cAAAK,KANQc,WAAK,EAAAd,KACLe,iBAAW,EAAAf,KACXgB,WAAK,EAAAhB,KACLiB,YAAM,EAAAjB,KACNkB,aAAO,EAIXlB,KAAKc,MAAQ,GACbd,KAAKe,YAAc,EACnBf,KAAKgB,MAAQ,GACbhB,KAAKiB,OAAS,EACdjB,KAAKkB,QAAU,CACnB,CAEIT,aACA,OAAWT,KAACkB,OAChB,CAEAC,QACI,GAAInB,KAAKiB,QAAUjB,KAAKe,YAAa,CACjC,MAAMK,EAAIpB,KAAKc,MAMf,GALAM,EAAEX,OAAS,EACXT,KAAKc,MAAQd,KAAKgB,MAClBhB,KAAKgB,MAAQI,EACbpB,KAAKiB,OAAS,EACdjB,KAAKe,YAAcf,KAAKc,MAAML,QACzBT,KAAKe,YACN,MAEP,CACD,MAAMZ,EAAQH,KAAKc,MAAMd,KAAKiB,QAQ9B,OAPIjB,KAAKiB,OAAS,SACHjB,KAACc,MAAMd,KAAKiB,UAGvBjB,KAAKc,MAAMd,KAAKiB,eAAYI,EAEhCrB,KAAKkB,UACEf,CACX,CAEAmB,KAAKf,GAGD,OAFAP,KAAKkB,UACLlB,KAAKgB,MAAMM,KAAKf,GACTP,IACX,CAEAuB,QAAQhB,GAGJ,OAFAP,KAAKc,QAAQd,KAAKiB,QAAUV,EAC5BP,KAAKkB,cAET,CAEAM,QACIxB,KAAKc,MAAQ,GACbd,KAAKe,YAAc,EACnBf,KAAKgB,MAAQ,GACbhB,KAAKiB,OAAS,EACdjB,KAAKkB,QAAU,CACnB,EC7DJ,MAAMO,EAWF9B,YAAY+B,EAAkBC,EAAsBC,GAV5CC,KAAAA,sBACAC,iBAAW,EAAA9B,KACX+B,gBACAC,EAAAA,KAAAA,iBACAC,EAAAA,KAAAA,cACAC,EAAAA,KAAAA,oBACAR,YAAM,EAAA1B,KACN2B,gBACAC,EAAAA,KAAAA,eAIJ5B,KAAK6B,WAAY,EACjB7B,KAAK8B,YAAc,EACnB9B,KAAK+B,WAAa,EAClB/B,KAAKgC,iBAAcX,EACnBrB,KAAKiC,SAAW,GAEhBjC,KAAKkC,aAAUb,EACfrB,KAAK0B,OAASA,EACd1B,KAAK2B,WAAaA,EAClB3B,KAAK4B,QAAUA,CACnB,CAEAO,UAAUC,GACNpC,KAAK+B,aACA/B,KAAK6B,gBACeR,IAAjBrB,KAAKkC,SACLlC,KAAKkC,QAAQE,EAAKpC,KAAK8B,YAAa9B,KAAK+B,YAGjD/B,KAAK6B,WAAY,CACrB,CAEAQ,QAAQD,GACJpC,KAAK8B,mBACmBT,IAApBrB,KAAK2B,YACL3B,KAAK2B,WAAWS,EAAKpC,KAAK8B,YAAa9B,KAAK+B,YAE5C/B,KAAK8B,cAAgB9B,KAAK+B,aAC1B/B,KAAK6B,WAAY,OACGR,IAAhBrB,KAAK0B,QACL1B,KAAK0B,SAGjB,CAEAY,UAAUF,QACef,IAAjBrB,KAAK4B,SACL5B,KAAK4B,QAAQQ,EAErB,CAEAG,WAAWH,GACP,OAAIpC,KAAKgC,iBAEOA,YAAYI,GAErBA,CACX,CAEAI,eAAeC,GAEX,OADAzC,KAAKgC,YAAcS,EACZzC,IACX,CAEA0C,WAAWC,EAAYC,GAEnB,OADA5C,KAAKiC,SAASX,KAAKqB,EAAOC,OAE9B,CAEAC,cAAcF,GACV,MAAMG,EAAQ9C,KAAKiC,SAASc,QAAQJ,GAIpC,OAHe,IAAXG,GACA9C,KAAKiC,SAASe,OAAOF,EAAO,OAGpC,CAEAG,WAAWC,GACP,IAAK,IAAIC,EAAI,EAAGC,EAAIpD,KAAKiC,SAASxB,OAAQ0C,EAAIC,EAAGD,GAAK,EAAG,CACrD,MAAMR,EAAQ3C,KAAKiC,SAASkB,GACtBP,EAAS5C,KAAKiC,SAASkB,EAAI,GAEjC,GADIR,EAAMU,SAAQV,EAAMW,UAAY,GAChCX,EAAMY,KAAKL,GACX,OAAON,CAEd,CACD,OAAO,IACX,EAIE,MAAAY,EAAwB,IAAI/B,EC5FlC,MAAMgC,EAQF9D,YAAY+D,GAAmC1D,KAP9C0D,aACAC,EAAAA,KAAAA,wBACAC,qBAAe,EAAA5D,KACf6D,UAAI,EAAA7D,KACJ8D,kBAAY,EAAA9D,KACZ+D,mBAIG,EAAA/D,KAAK0D,aAAuBrC,IAAZqC,EAAyBA,EAAUF,EAEnDxD,KAAK2D,YAAc,YACnB3D,KAAK4D,iBAAkB,EACvB5D,KAAK6D,KAAO,GACZ7D,KAAK8D,aAAe,GACpB9D,KAAK+D,cAAgB,CACzB,CAAA,CAEAC,KAAK5B,EAAaV,EAAkBC,EAAsBC,GAG1DqC,CAAAA,UAAU7B,EAAaT,GACnB,MAAMuC,EAAQlE,KACd,OAAW,IAAAmE,QAAQ,SAAUC,EAASC,GAElCH,EAAMF,KAAK5B,EAAKgC,EAASzC,EAAY0C,EACzC,EACJ,CAEAC,QAGAC,CAAAA,eAAeZ,GAEX,OADA3D,KAAK2D,YAAcA,EAEvB3D,IAAA,CAEAwE,mBAAmBrE,GAEf,OADAH,KAAK4D,gBAAkBzD,EAChBH,IACX,CAEAyE,QAAQZ,GAEJ,OADA7D,KAAK6D,KAAOA,EAEhB7D,IAAA,CAEA0E,gBAAgBZ,GAEZ,OADA9D,KAAK8D,aAAeA,EACb9D,IACX,CAEA2E,iBAAiBZ,GAEb,OADA/D,KAAK+D,cAAgBA,EAEzB/D,IAAA,QCvDS4E,EAQTjF,YAAYkF,EAAO,QAPXA,UAAI,EAAA7E,KACJ8E,WACAC,EAAAA,KAAAA,oBACAC,oBAAc,EAAAhF,KACdiF,kBACAC,EAAAA,KAAAA,qBAGJlF,KAAK6E,KAAOA,EACZ7E,KAAK8E,MAAQ,GACb9E,KAAK+E,QAAU,GACf/E,KAAKgF,eAAiB,GACtBhF,KAAKiF,aAAe,CACxB,CAEAE,YAAYC,GACR,IAAKpF,KAAK+E,QAAQK,GAAW,CACzB,MAAMC,EAASrF,KAAKkF,gBACpBG,EAAOC,iBAAiB,UAAWtF,KAAKuF,WAAWC,KAAKxF,KAAMoF,IAC9DpF,KAAK+E,QAAQK,GAAYC,CAC5B,CACL,CAEAI,iBACI,IAAK,IAAItC,EAAI,EAAGA,EAAInD,KAAK6E,KAAM1B,IAC3B,KAAMnD,KAAKiF,aAAgB,GAAK9B,GAAK,OAAOA,EAChD,OAAQ,CACZ,CAEAoC,WAAWH,EAAkBM,GACzB,MAAMtB,EAAUpE,KAAKgF,eAAeI,GAEpC,GADAhB,GAAWA,EAAQsB,GACf1F,KAAK8E,MAAMrE,OAAQ,CACnB,MAAO2D,QAAAA,EAASsB,IAAAA,EAAGC,SAAEA,GAAY3F,KAAK8E,MAAM3D,QAC5CnB,KAAKgF,eAAeI,GAAYhB,EAChCpE,KAAK+E,QAAQK,GAAUQ,YAAYF,EAAKC,EAC3C,MACG3F,KAAKiF,cAAgB,GAAKG,CAElC,CAEAS,iBAAiBX,GACblF,KAAKkF,cAAgBA,CACzB,CAEAY,eAAejB,GACX7E,KAAK6E,KAAOA,CAChB,CAEAe,YAAYF,EAAUC,GAClB,WAAWxB,QAASC,IAChB,MAAMgB,EAAWpF,KAAKyF,kBACJ,IAAdL,GACApF,KAAKmF,YAAYC,GACjBpF,KAAKiF,cAAgB,GAAKG,EAC1BpF,KAAKgF,eAAeI,GAAYhB,EAChCpE,KAAK+E,QAAQK,GAAUQ,YAAYF,EAAKC,IAExC3F,KAAK8E,MAAMxD,KAAK,CAAC8C,UAASsB,MAAKC,YAClC,EAET,CAEAI,UAEI/F,KAAK+E,QAAQiB,QAASX,GAAWA,EAAOY,aACxCjG,KAAKgF,eAAevE,OAAS,EAC7BT,KAAK+E,QAAQtE,OAAS,EACtBT,KAAK8E,MAAMrE,OAAS,EACpBT,KAAKiF,aAAe,CAExB,ECxEE,MAAAiB,EAAQ,CAEVC,SAAS,EACTC,MAAO,CAAA,EAEPC,IAAK,SAAUC,EAAsBpD,GAKrC,EAEAqD,IAAK,SAAUD,GAKf,EAEAE,OAAQ,SAAUF,GAElB,EAEA9E,MAAO,WACHxB,KAAKoG,MAAQ,CAAA,CACjB,GCxBEK,EAA+B,CAAE,EAEvC,MAAMC,UAAmBjD,EAKrB9D,YAAY+D,GACRiD,MAAMjD,GAAS1D,KAJnB4G,cAAQ,EAAA5G,KACR6G,kBAAY,CAIZ,CAEA7C,KAAK5B,EAAYV,EAAiBC,EAAqBC,QACvCP,IAARe,IACAA,EAAM,SAEQf,IAAdrB,KAAK6D,OACLzB,EAAMpC,KAAK6D,KAAOzB,GAEtBA,EAAMpC,KAAK0D,QAAQnB,WAAWH,GAC9B,MAAM0E,EAASZ,EAAMK,IAAInE,GACzB,QAAef,IAAXyF,EAQA,OAPA9G,KAAK0D,QAAQvB,UAAUC,GACvB2E,WAAW,KACHrF,GACAA,EAAOoF,GAEX9G,KAAK0D,QAAQrB,QAAQD,EAAG,EACzB,GACI0E,EAEX,QAAqBzF,IAAjBoF,EAAQrE,GAER,YADAqE,EAAQrE,GAAKd,KAAK,CAACI,SAAQC,aAAYC,YAG3C6E,EAAQrE,GAAO,GACfqE,EAAQrE,GAAKd,KAAK,CAACI,SAAQC,aAAYC,YACvC,MAAMoF,EAAM,IAAIC,QAAQ7E,EAAK,CACzB8E,QAAS,IAAIC,QAAQnH,KAAK+D,eAC1BqD,YAAapH,KAAK4D,gBAAkB,UAAY,gBAE9CgD,EAAW5G,KAAK4G,SAChBC,EAAe7G,KAAK6G,aAC1BQ,MAAML,GAAKM,KAAKC,IACZ,GAAwB,MAApBA,EAASC,QAAsC,IAApBD,EAASC,OAAc,CAOlD,GAJwB,IAApBD,EAASC,QACTC,QAAQC,KAAK,uCAGa,oBAAnBC,qBAA8DtG,IAA5BkG,EAASK,KAAKC,UACvD,OAAON,EAEX,MAAMO,EAAYrB,EAAQrE,GAEpB2F,EAASR,EAASK,KAAKC,YACvBG,EAAgBT,EAASL,QAAQX,IAAI,kBACrC0B,EAAQD,EAAgBE,SAASF,GAAiB,EAClDG,EAA6B,IAAVF,EACzB,IAAIG,EAAS,EACb,MAAMC,EAAS,IAAIV,eAAe,CAC9BW,MAAMC,IAGF,SAASC,IACLT,EAAOU,OAAOnB,KAAK,EAAEoB,OAAMvI,YACvB,GAAIuI,EACAH,EAAWI,YACR,CAEHP,GAAUjI,EAAMyI,WAChB,MAAMC,EAAQ,IAAIC,cAAc,WAAY,CAACX,mBAAkBC,SAAQH,UACvE,IAAK,IAAI9E,EAAI,EAAG4F,EAAKjB,EAAUrH,OAAQ0C,EAAI4F,EAAI5F,IAAK,CAChD,MAAM6F,EAAWlB,EAAU3E,GACvB6F,EAASrH,YACTqH,EAASrH,WAAWkH,EAE3B,CACDN,EAAWU,QAAQ9I,GACnBqI,GACH,GAET,CApBAA,EAqBJ,IAEJ,OAAO,IAAIU,SAASb,EACvB,CACG,MAAU,IAAAc,MAAoB,cAAA5B,EAASnF,uBAAuBmF,EAASC,WAAWD,EAAS6B,aAC9F,GACF9B,KAAKC,IACJ,OAAQV,GACJ,IAAK,cACD,OAAOU,EAAS8B,cACpB,IAAK,OACD,OAAO9B,EAAS+B,OACpB,IAAK,WACD,OAAO/B,EAASgC,OACXjC,KAAKiC,IACa,IAAIC,WAELC,gBAAgBF,EAAM3C,IAEhD,IAAK,OACD,OAAOW,EAASmC,OACpB,QACI,QAAiBrI,IAAbuF,EACA,OAAOW,EAASgC,OACb,CAEH,MACMI,EADK,0BACKA,KAAK/C,GACfgD,EAAQD,GAAQA,EAAK,GAAKA,EAAK,GAAGE,mBAAgBxI,EAClDyI,EAAU,IAAIC,YAAYH,GAChC,OAAOrC,EAAS8B,cAAc/B,KAAK0C,GAAMF,EAAQG,OAAOD,GAC3D,EAAA,GAEV1C,KAAK4C,IAGJhE,EAAMG,IAAIjE,EAAK8H,GACf,MAAMpC,EAAYrB,EAAQrE,UACnBqE,EAAQrE,GACf,IAAK,IAAIe,EAAI,EAAG4F,EAAKjB,EAAUrH,OAAQ0C,EAAI4F,EAAI5F,IAAK,CAChD,MAAM6F,EAAWlB,EAAU3E,GACvB6F,EAAStH,QACTsH,EAAStH,OAAOwI,EAEvB,IACFC,MAAMC,IAEL,MAAMtC,EAAYrB,EAAQrE,GAC1B,QAAkBf,IAAdyG,EAGA,MADA9H,KAAK0D,QAAQpB,UAAUF,GACjBgI,SAGH3D,EAAQrE,GACf,IAAK,IAAIe,EAAI,EAAG4F,EAAKjB,EAAUrH,OAAQ0C,EAAI4F,EAAI5F,IAAK,CAChD,MAAM6F,EAAWlB,EAAU3E,GACvB6F,EAASpH,SACToH,EAASpH,QAAQwI,EAExB,CACDpK,KAAK0D,QAAQpB,UAAUF,EAC3B,GAAGiI,QAAQ,KACPrK,KAAK0D,QAAQrB,QAAQD,KAEzBpC,KAAK0D,QAAQvB,UAAUC,EAC3B,CAEAkI,gBAAgBnK,GAEZ,OADAH,KAAK6G,aAAe1G,EACbH,IACX,CAEAuK,YAAYpK,GAER,OADAH,KAAK4G,SAAWzG,EAEpBH,IAAA,EC3IY,SAAAwK,EAAMC,GAClB,OAAOC,KAAKpG,MAAMoG,KAAKC,UAAUF,GACrC,CAEA,MAAMG,EAAY,CAAC,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,GAAI,CAAC,IAAK,IAAIC,IAAI,SAAUC,GAClF,MAAMC,EAAW,GAEXC,EAAKF,EAAE,GAAGG,WAAW,GACrBC,EAAKF,EAAKF,EAAE,GAClB,IAAK,IAAI3H,EAAI6H,EAAI7H,EAAI+H,IAAM/H,EACvB4H,EAAGzJ,KAAK6B,GAEZ,OAAOgI,OAAOC,aAAaC,MAAM,KAAMN,EAC3C,GAAGO,KAAK,IAOQ,SAAAC,EAAIC,EAAWC,GAE3B,OADYA,GAAe,IAARA,EAA8B,CAAC,EAAG,GAArB,CAAC,EAAG,EAAG,GAAI,KAClCZ,IAAI,SAAU1H,GACf,OAAOyH,EAAUc,OAAOxD,SAASiD,OAAOK,GAAK,GAAKrI,KAAO,GAAI,EACjE,GACFwI,UAAUL,KAAK,GACrB,CAMgB,SAAAM,EAAaC,GACzB,MAAMC,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIjB,IAAI,SAAU1H,GACjF,OAAO+E,SAAS2D,EAAEH,OAAOvI,EAAG,GAAI,GACpC,GACA,OAAOoI,EAAIO,EAAG,GAAI,GAAK,CAAC,EAAG,EAAG,EAAG,GAAI,IAAIjB,IAAI,SAAU1H,GACnD,OAAOoI,GAAKO,EAAG3I,IAAM,KAAO2I,EAAG3I,EAAI,IAAM,GAAK2I,EAAG3I,EAAI,GAAI,EAC7D,GAAGmI,KAAK,GACZ,CAOgB,SAAAS,EAAeC,EAAQ5K,GACnC,MAAM2J,EAAY,GAQlB,OAPU,SAAJkB,EAAcC,GACZA,EAAEC,OAAS/K,GAAG2J,EAAGzJ,KAAK4K,IACzBA,EAAEE,UAAY,IAAIpG,QAAQ,SAAUqG,GACjCJ,EAAEI,EACN,EACJ,CACAJ,CAAED,GACKjB,CACX,CAIM,SAAUuB,EAAQC,GACpB,WAAWpI,QAAQ,SAAUC,EAASC,GAClC0C,WAAW3C,EAASmI,EACxB,EACJ,UAEgBC,EAAYC,GACxB,OAAW,IAAAtI,QAAQ,SAAUC,EAASC,GAClC,MAAMqI,EAAM,IAAIC,eAChBD,EAAIE,KAAKH,EAAKI,QAAU,MAAOJ,EAAKrK,KAAK,GACzCsK,EAAII,OAAS,SAAUC,GACnBtF,QAAQuF,IAAIP,EAAKrK,IAAKsK,EAAIO,WAAYP,EAAIlF,QACnB,IAAnBkF,EAAIO,aACe,MAAfP,EAAIlF,OACJpD,EAAQsI,EAAIQ,aAEZ7I,EAAOqI,EAAItD,YAGvB,EACAsD,EAAIS,KAAK,KACb,EACJ,CA8BgB,SAAAC,EAAShL,EACAiL,EAIAjD,GAMrB,MAAMkD,EAAmBC,IAAoB,EAC7CF,EAAKA,GAAMC,EACXlD,EAAMA,GAAOkD,EAEb,MAAME,EAAU,IAAIb,eACpBa,EAAQC,iBAAiB,oBACzBD,EAAQZ,KAAK,MAAOxK,GAAK,GACzBoL,EAAQlI,iBAAiB,OAAQ,SAAUuD,GAEvC,MAAMtB,EAAWsB,EAAM6E,OAAOnG,SAC9B,GAAoB,MAAhBvH,KAAKwH,OAAgB,CACrB,IAAIkC,EACJ,IACIA,EAAOgB,KAAKpG,MAAMiD,EACrB,CAAC,MAAOwF,GACL3C,EAAI,qDAAqD2C,IAC5D,CACDM,EAAG3D,EACN,MAAU,GAAgB,IAAhB1J,KAAKwH,OAAc,CAG1BC,QAAQC,KAAK,qCACb,IACI2F,EAAG3C,KAAKpG,MAAMiD,GACjB,CAAC,MAAOwF,GACL3C,EAAI,qDAAqD2C,IAC5D,CACJ,MACG3C,EAAIvB,EAEZ,GAAG,GAEH2E,EAAQlI,iBAAiB,QAAS,SAAUuD,GACxCuB,EAAIvB,EACR,GAAG,GACH2E,EAAQL,KAAK,KACjB,CAEgB,SAAAQ,EAAgBvL,EAAaiL,EAAwDjD,GAGjG,MAAMkD,EAAmBC,IAAoB,EAC7CF,EAAKA,GAAMC,EACXlD,EAAMA,GAAOkD,EACb,MACMM,EAAqBxL,EAAIyL,MADV,+BAErB,GAAID,EAAoB,CACpB,MAAME,IAAaF,EAAmB,GACtC,IAAI1D,EAAO0D,EAAmB,GAC9B1D,EAAO6D,OAAOC,mBAAmB9D,GAC7B4D,IACA5D,EAAO6D,OAAOE,KAAK/D,IAEvB,IACI,MAAMgE,EAAS,IAAIC,YAAYjE,EAAKzJ,QAC9B2N,EAAO,IAAIC,WAAWH,GAC5B,IAAK,IAAI/K,EAAI,EAAGA,EAAI+G,EAAKzJ,OAAQ0C,IAC7BiL,EAAKjL,GAAK+G,EAAKe,WAAW9H,GAE9B4K,OAAOhH,WAAW,WACdsG,EAAGa,EACP,EAAG,EACN,CAAC,MAAOI,GACLP,OAAOhH,WAAW,WACdqD,EAAIkE,EACR,EAAG,EACN,CACJ,KAAM,CACH,MAAMd,EAAU,IAAIb,eACpBa,EAAQZ,KAAK,MAAOxK,GAAK,GACzBoL,EAAQ3G,aAAe,cACvB2G,EAAQe,mBAAqB,WACE,IAAvBf,EAAQP,aACe,MAAnBO,EAAQhG,OACR6F,EAAGG,EAAQjG,UAEX6C,EAAI,2BAA6BoD,EAAQjG,UAGrD,EACAiG,EAAQL,KAAK,KAChB,CACL,CAKM,SAAUqB,EAAQrO,GACpB,OAAOA,IAAWA,EAAMsO,qBAAqB,WAA+B,iBAAVtO,GAA8C,iBAAjBA,EAAMM,MACzG,CAKgB,SAAAiO,EAASvO,GACrB,MAAyB,iBAAVA,GAAsBA,aAAiBgL,MAC1D,CAKM,SAAUwD,EAAUxO,GACtB,OAAQyO,MAAMC,WAAW1O,KAAW2O,SAAS3O,EACjD,UAKgB4O,EAAK5O,GACjB,OAAOuO,EAASvO,IAAUwO,EAAUxO,EACxC,UAKgB6O,EAAW7O,GACvB,MAAyB,mBAAVA,CACnB,CAKgB,SAAA8O,EAAS9O,GAErB,QAAUA,GAASA,EAAMR,cADC,CAAE,EAACA,WAEjC,CAIM,SAAUuP,EAAKC,GACjB,OAAO9D,EAAM8D,EAAG,CAAE,EACtB,UAIgB9D,EAAM8D,EAAQC,GAC1B,IAAK,MAAMC,KAAQF,EACXA,EAAEG,eAAeD,KACjBD,EAAGC,GAAQF,EAAEE,IAGrB,OAAOD,CACX,CAKgB,SAAAG,EAAOJ,EAAQC,GAC3B,IAAK,MAAMC,KAAQF,EACXA,EAAEG,eAAeD,IACbF,QAAEE,KACFD,EAAGC,GAAQF,EAAEE,IAIzB,OAAOD,CACX,CAKgB,SAAAI,EAAQL,EAAQC,GAC5B,IAAK,MAAMC,KAAQF,EACXA,EAAEG,eAAeD,IACbD,QAAGC,KACHD,EAAGC,GAAQF,EAAEE,IAIzB,OAAOD,CACX,CAKgB,SAAAK,EAAcC,GAC1B,IAAK,MAAML,KAAQK,EACf,GAAIA,EAAIJ,eAAeD,GACnB,SAGR,OAAO,CACX,UAMgBM,EAASjP,GACrB,OAAOiO,EAAUjO,GAAU,GAAAA,QAAaA,IAC5C,CAKgB,SAAAkP,EAAO9E,EAAQ+E,GAC3B,MAAMxD,EAAI,IAAIvB,EAAEnL,YAAYmL,EAAErK,OAASoP,EAAEpP,QAGzC,OAFA4L,EAAEyD,IAAIhF,GACNuB,EAAEyD,IAAID,EAAG/E,EAAErK,QACJ4L,CACX,CAKa,MAAA0D,EAAa,MACtB,MAAMC,EAAa,GACnB,IAAK,IAAI7M,EAAI,EAAGA,EAAI,IAAKA,IACrB6M,EAAI7M,IAAMA,EAAI,GAAK,IAAM,IAAOA,EAAG8M,SAAS,IAEhD,MAAO,KACH,MAAMC,EAAqB,WAAhBC,KAAKC,SAAwB,EAClCC,EAAqB,WAAhBF,KAAKC,SAAwB,EAClCE,EAAqB,WAAhBH,KAAKC,SAAwB,EAClCG,EAAqB,WAAhBJ,KAAKC,SAAwB,EACxC,MAAU,GAAAJ,EAAS,IAALE,GAAaF,EAAIE,GAAM,EAAI,KAAQF,EAAIE,GAAM,GAAK,KAAQF,EAAIE,GAAM,GAAK,QAASF,EAAS,IAALK,KAAaL,EAAIK,GAAM,EAAI,QAASL,EAAIK,GAAM,GAAK,GAAO,MAAQL,EAAIK,GAAM,GAAK,QAASL,EAAS,GAALM,EAAY,OAAQN,EAAIM,GAAM,EAAI,QAASN,EAAIM,GAAM,GAAK,OAAQN,EAAIM,GAAM,GAAK,OAAQN,EAAS,IAALO,KAAaP,EAAIO,GAAM,EAAI,OAAQP,EAAIO,GAAM,GAAK,OAAQP,EAAIO,GAAM,GAAK,OAE/W,EAZyB"}