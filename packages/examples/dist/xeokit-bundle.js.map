{"version":3,"file":"xeokit-bundle.js","sources":["../../core/src/EventEmitter.ts","../../../node_modules/ste-core/dist/dispatching/DispatcherWrapper.js","../../../node_modules/ste-core/dist/events/Subscription.js","../../../node_modules/ste-core/dist/management/EventManagement.js","../../../node_modules/ste-core/dist/dispatching/DispatcherBase.js","../../../node_modules/ste-core/dist/dispatching/DispatchError.js","../../../node_modules/ste-core/dist/dispatching/EventListBase.js","../../../node_modules/ste-core/dist/handling/HandlingBase.js","../../../node_modules/ste-core/dist/events/PromiseSubscription.js","../../../node_modules/ste-core/dist/dispatching/PromiseDispatcherBase.js","../../../node_modules/ste-core/dist/index.js","../../../node_modules/ste-events/dist/EventDispatcher.js","../../../node_modules/ste-events/dist/EventList.js","../../../node_modules/ste-events/dist/EventHandlingBase.js","../../../node_modules/ste-events/dist/NonUniformEventList.js","../../../node_modules/ste-events/dist/index.js","../../../node_modules/ste-simple-events/dist/SimpleEventDispatcher.js","../../../node_modules/ste-simple-events/dist/SimpleEventList.js","../../../node_modules/ste-simple-events/dist/SimpleEventHandlingBase.js","../../../node_modules/ste-simple-events/dist/NonUniformSimpleEventList.js","../../../node_modules/ste-simple-events/dist/index.js","../../../node_modules/ste-signals/dist/SignalDispatcher.js","../../../node_modules/ste-signals/dist/SignalList.js","../../../node_modules/ste-signals/dist/SignalHandlingBase.js","../../../node_modules/ste-signals/dist/index.js","../../../node_modules/ste-promise-events/dist/PromiseEventDispatcher.js","../../../node_modules/ste-promise-events/dist/PromiseEventList.js","../../../node_modules/ste-promise-events/dist/PromiseEventHandlingBase.js","../../../node_modules/ste-promise-events/dist/NonUniformPromiseEventList.js","../../../node_modules/ste-promise-events/dist/index.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalDispatcher.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalList.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalHandlingBase.js","../../../node_modules/ste-promise-signals/dist/index.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventDispatcher.js","../../../node_modules/ste-promise-simple-events/dist/NonUniformPromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventHandlingBase.js","../../../node_modules/ste-promise-simple-events/dist/index.js","../../../node_modules/strongly-typed-events/dist/index.js","../../core/src/Component.ts","../../core/src/SDKError.ts","../../constants/src/index.ts","../../math/src/index.ts","../../matrix/src/index.ts","../../utils/src/Map.ts","../../utils/src/Queue.ts","../../utils/src/LoadingManager.ts","../../utils/src/Loader.ts","../../utils/src/WorkerPool.ts","../../utils/src/Cache.ts","../../utils/src/FileLoader.ts","../../utils/src/index.ts","../../compression/src/index.ts","../../boundaries/src/index.ts","../../rtc/src/index.ts","../../curves/src/index.ts","../../locale/src/LocaleService.ts","../../data/src/Property.ts","../../data/src/PropertySet.ts","../../data/src/DataObject.ts","../../data/src/Relationship.ts","../../data/src/DataModel.ts","../../data/src/Data.ts","../../scene/src/GeometryBucket.ts","../../scene/src/Geometry.ts","../../scene/src/getSceneObjectGeometry.ts","../../scene/src/SceneObject.ts","../../scene/src/TextureSet.ts","../../scene/src/Texture.ts","../../scene/src/Mesh.ts","../../scene/src/buildEdgeIndices.ts","../../scene/src/calculateUniquePositions.ts","../../scene/src/rebucketPositions.ts","../../scene/src/compressGeometryParams.ts","../../scene/src/SceneModel.ts","../../scene/src/Scene.ts","../../kdtree2/src/KdTree2.ts","../../kdtree2/src/KdVertex2.ts","../../kdtree2/src/createKdTree2FromSceneObjectVerts.ts","../../kdtree2/src/searchKdTree2ForNearestNeighbor.ts","../../kdtree3/src/KdTree3.ts","../../kdtree3/src/sceneObjectsKdTree3.ts","../../kdtree3/src/createSceneObjectPrimsKdTree3.ts","../../kdtree3/src/PrimsKdTree3.ts","../../kdtree3/src/createPrimsKdTree3.ts","../../cityjsontypes_1_1_3/src/index.ts","../../kdtree3/src/createSceneObjectsKdTree3.ts","../../kdtree3/src/searchKdTree3WithAABB.ts","../../kdtree3/src/searchKdTree3WithFrustum.ts","../../kdtree3/src/searchKdTree3WithRay.ts","../../basictypes/src/index.ts","../../ifctypes/src/index.ts","../../cityjson/src/earcut.js","../../cityjson/src/loadCityJSON.ts","../../dotbim/src/loadDotBIM.ts","../../viewer/src/ViewObject.ts","../../viewer/src/SectionPlane.ts","../../viewer/src/Metriqs.ts","../../viewer/src/SAO.ts","../../viewer/src/LinesMaterial.ts","../../viewer/src/ViewLayer.ts","../../viewer/src/EmphasisMaterial.ts","../../viewer/src/EdgeMaterial.ts","../../viewer/src/PointsMaterial.ts","../../viewer/src/PerspectiveProjection.ts","../../viewer/src/OrthoProjection.ts","../../viewer/src/FrustumProjection.ts","../../viewer/src/CustomProjection.ts","../../viewer/src/Camera.ts","../../viewer/src/scheduler.ts","../../viewer/src/CameraFlightAnimation.ts","../../viewer/src/View.ts","../../viewer/src/Viewer.ts","../../viewer/src/AmbientLight.ts","../../viewer/src/DirLight.ts","../../viewer/src/PointLight.ts","../../viewer/src/PickResult.ts","../../ktx2/src/KTX2TextureTranscoder.ts","../../webglutils/src/GLAttribute.ts","../../webglutils/src/GLDataTexture.ts","../../webglutils/src/GLShader.ts","../../webglutils/src/GLSampler.ts","../../webglutils/src/GLProgram.ts","../../webglutils/src/getExtension.ts","../../webglutils/src/convertConstant.ts","../../webglutils/src/canvas2image.ts","../../webglutils/src/GLTexture.ts","../../webglutils/src/WEBGL_INFO.ts","../../webglrenderer/src/RenderContext.ts","../../webglrenderer/src/RENDER_PASSES.ts","../../webglrenderer/src/LayerRenderer.ts","../../webglrenderer/src/FastColorTrianglesRenderer.ts","../../webglrenderer/src/DataTextureSet.ts","../../webglrenderer/src/MeshCounts.ts","../../webglrenderer/src/SCENE_OBJECT_FLAGS.ts","../../webglrenderer/src/float16.ts","../../webglrenderer/src/dataTextures.ts","../../webglrenderer/src/DataTextureBuffer.ts","../../webglrenderer/src/Layer.ts","../../webglrenderer/src/RendererGeometryImpl.ts","../../webglrenderer/src/RendererTextureImpl.ts","../../webglrenderer/src/RendererObjectImpl.ts","../../webglrenderer/src/RendererMeshImpl.ts","../../webglrenderer/src/RendererTextureSetImpl.ts","../../webglrenderer/src/RendererModelImpl.ts","../../webglrenderer/src/TileManager.ts","../../webglrenderer/src/WebGLRenderer.ts","../../cameracontrol/src/PanController.ts","../../cameracontrol/src/PivotController.ts","../../cameracontrol/src/PickController.ts","../../cameracontrol/src/MousePanRotateDollyHandler.ts","../../cameracontrol/src/keycodes.ts","../../cameracontrol/src/KeyboardAxisViewHandler.ts","../../cameracontrol/src/MousePickHandler.ts","../../cameracontrol/src/KeyboardPanRotateDollyHandler.ts","../../cameracontrol/src/CameraUpdater.ts","../../cameracontrol/src/MouseMiscHandler.ts","../../cameracontrol/src/TouchPanRotateAndDollyHandler.ts","../../cameracontrol/src/TouchPickHandler.ts","../../cameracontrol/src/CameraControl.ts","../../bcf/src/loadBCFViewpoint.ts","../../bcf/src/saveBCFViewpoint.ts"],"sourcesContent":["import type {IEvent} from \"strongly-typed-events\";\n\n/**\n * Event emitter.\n *\n * @typeParam TSender - Type of the event sender\n * @typeParam TArgs - Type of the event argument\n */\nexport class EventEmitter<TSender, TArgs> {\n\n    #ievent: any;\n\n    constructor(ievent: IEvent<TSender, TArgs>) {\n        this.#ievent = ievent;\n    }\n\n    /**\n     * Returns the number of subscriptions.\n     */\n    get count() : number {\n        return this.#ievent.count;\n    }\n    /**\n     * Subscribe to the event.\n     *\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns Function that unsubscribes the event handler from the event.\n     */\n    subscribe(func: (a: TSender, b: TArgs) => void): () => void {\n        return this.#ievent.asEvent().subscribe(func);\n    }\n\n    /**\n     * @private\n     * @param sender\n     * @param args\n     */\n    dispatch(sender: TSender, args: TArgs): void {\n        this.#ievent.dispatch(sender, args);\n    }\n\n    /**\n     * Subscribe to the event.\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns A function that unsubscribes the event handler from the event.\n     */\n    sub(func: (a: TSender, b: TArgs) => void): () => void {\n        return this.#ievent.asEvent().sub(func);\n    }\n    /**\n     * Unsubscribe from the event.\n     * @param func The event handler that will be unsubsribed from the event.\n     */\n    unsubscribe(func: (a: TSender, b: TArgs) => void): void {\n        this.#ievent.asEvent().unsubscribe(func);\n    }\n\n    /**\n     * Unsubscribe from the event.\n     * @param func The event handler that will be unsubsribed from the event.\n     */\n    unsub(func: (a: TSender, b: TArgs) => void): void {\n        this.#ievent.asEvent().unsub(func);\n    }\n\n    /**\n     * Subscribes to the event only once.\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns A function that unsubscribes the event handler from the event.\n     */\n    one(func: (a: TSender, b: TArgs) => void): () => void {\n       return this.#ievent.asEvent().one(func);\n    }\n\n    /**\n     * Checks if the event has a subscription for the specified handler.\n     * @param func The event handler.\n     */\n    has(func: (a: TSender, b: TArgs) => void): boolean {\n        return this.#ievent.asEvent().has(func);\n    }\n\n    /**\n     * Clears all the subscriptions.\n     */\n    clear(): void {\n        this.#ievent.asEvent().clear();\n    }\n}","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatcherWrapper = void 0;\r\n/**\r\n * Hides the implementation of the event dispatcher. Will expose methods that\r\n * are relevent to the event.\r\n *\r\n * @export\r\n * @class DispatcherWrapper\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherWrapper {\r\n    /**\r\n     * Creates an instance of DispatcherWrapper.\r\n     * @param {ISubscribable<TEventHandler>} dispatcher\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    constructor(dispatcher) {\r\n        this._subscribe = (fn) => dispatcher.subscribe(fn);\r\n        this._unsubscribe = (fn) => dispatcher.unsubscribe(fn);\r\n        this._one = (fn) => dispatcher.one(fn);\r\n        this._has = (fn) => dispatcher.has(fn);\r\n        this._clear = () => dispatcher.clear();\r\n        this._count = () => dispatcher.count;\r\n        this._onSubscriptionChange = () => dispatcher.onSubscriptionChange;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get onSubscriptionChange() {\r\n        return this._onSubscriptionChange();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get count() {\r\n        return this._count();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    subscribe(fn) {\r\n        return this._subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsubscribe(fn) {\r\n        this._unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    one(fn) {\r\n        return this._one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    has(fn) {\r\n        return this._has(fn);\r\n    }\r\n    /**\r\n     * Clears all the subscriptions.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    clear() {\r\n        this._clear();\r\n    }\r\n}\r\nexports.DispatcherWrapper = DispatcherWrapper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Subscription = void 0;\r\n/**\r\n * Stores a handler. Manages execution meta data.\r\n * @class Subscription\r\n * @template TEventHandler\r\n */\r\nclass Subscription {\r\n    /**\r\n     * Creates an instance of Subscription.\r\n     *\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n            }\r\n            else {\r\n                fn.apply(scope, args);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Subscription = Subscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventManagement = void 0;\r\n/**\r\n * Allows the user to interact with the event.\r\n *\r\n * @export\r\n * @class EventManagement\r\n * @implements {IEventManagement}\r\n */\r\nclass EventManagement {\r\n    /**\r\n     * Creates an instance of EventManagement.\r\n     * @param {() => void} unsub An unsubscribe handler.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    constructor(unsub) {\r\n        this.unsub = unsub;\r\n        this.propagationStopped = false;\r\n    }\r\n    /**\r\n     * Stops the propagation of the event.\r\n     * Cannot be used when async dispatch is done.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    stopPropagation() {\r\n        this.propagationStopped = true;\r\n    }\r\n}\r\nexports.EventManagement = EventManagement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.DispatcherBase = void 0;\r\nconst DispatcherWrapper_1 = require(\"./DispatcherWrapper\");\r\nconst Subscription_1 = require(\"../events/Subscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\n/**\r\n * Base class for implementation of the dispatcher. It facilitates the subscribe\r\n * and unsubscribe methods based on generic handlers. The TEventType specifies\r\n * the type of event that should be exposed. Use the asEvent to expose the\r\n * dispatcher as event.\r\n *\r\n * @export\r\n * @abstract\r\n * @class DispatcherBase\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherBase {\r\n    constructor() {\r\n        /**\r\n         * The subscriptions.\r\n         *\r\n         * @protected\r\n         *\r\n         * @memberOf DispatcherBase\r\n         */\r\n        this._subscriptions = new Array();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get count() {\r\n        return this._subscriptions.length;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get onSubscriptionChange() {\r\n        if (this._onSubscriptionChange == null) {\r\n            this._onSubscriptionChange = new SubscriptionChangeEventDispatcher();\r\n        }\r\n        return this._onSubscriptionChange.asEvent();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    subscribe(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, false));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    one(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, true));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    has(fn) {\r\n        if (!fn)\r\n            return false;\r\n        return this._subscriptions.some((sub) => sub.handler == fn);\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsubscribe(fn) {\r\n        if (!fn)\r\n            return;\r\n        let changes = false;\r\n        for (let i = 0; i < this._subscriptions.length; i++) {\r\n            if (this._subscriptions[i].handler == fn) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n                break;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let s = sub;\r\n            s.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n    /**\r\n     * Creates a subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce True if the handler should run only one.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new Subscription_1.Subscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Cleans up subs that ran and should run only once.\r\n     *\r\n     * @protected\r\n     * @param {ISubscription<TEventHandler>} sub The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    cleanup(sub) {\r\n        let changes = false;\r\n        if (sub.isOnce && sub.isExecuted) {\r\n            let i = this._subscriptions.indexOf(sub);\r\n            if (i > -1) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISubscribable<TEventHandler>}\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    asEvent() {\r\n        if (this._wrap == null) {\r\n            this._wrap = new DispatcherWrapper_1.DispatcherWrapper(this);\r\n        }\r\n        return this._wrap;\r\n    }\r\n    /**\r\n     * Clears the subscriptions.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    clear() {\r\n        if (this._subscriptions.length != 0) {\r\n            this._subscriptions.splice(0, this._subscriptions.length);\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers the subscription change event.\r\n     *\r\n     * @private\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    triggerSubscriptionChange() {\r\n        if (this._onSubscriptionChange != null) {\r\n            this._onSubscriptionChange.dispatch(this.count);\r\n        }\r\n    }\r\n}\r\nexports.DispatcherBase = DispatcherBase;\r\n/**\r\n * Dispatcher for subscription changes.\r\n *\r\n * @export\r\n * @class SubscriptionChangeEventDispatcher\r\n * @extends {DispatcherBase<SubscriptionChangeEventHandler>}\r\n */\r\nclass SubscriptionChangeEventDispatcher extends DispatcherBase {\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {number} count The currrent number of subscriptions.\r\n     *\r\n     * @memberOf SubscriptionChangeEventDispatcher\r\n     */\r\n    dispatch(count) {\r\n        this._dispatch(false, this, arguments);\r\n    }\r\n}\r\nexports.SubscriptionChangeEventDispatcher = SubscriptionChangeEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatchError = void 0;\r\n/**\r\n * Indicates an error with dispatching.\r\n *\r\n * @export\r\n * @class DispatchError\r\n * @extends {Error}\r\n */\r\nclass DispatchError extends Error {\r\n    /**\r\n     * Creates an instance of DispatchError.\r\n     * @param {string} message The message.\r\n     *\r\n     * @memberOf DispatchError\r\n     */\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n}\r\nexports.DispatchError = DispatchError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventListBase = void 0;\r\n/**\r\n * Base class for event lists classes. Implements the get and remove.\r\n *\r\n * @export\r\n * @abstract\r\n * @class EventListBaset\r\n * @template TEventDispatcher The type of event dispatcher.\r\n */\r\nclass EventListBase {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name The name of the event.\r\n     * @returns {TEventDispatcher} The disptacher.\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    get(name) {\r\n        let event = this._events[name];\r\n        if (event) {\r\n            return event;\r\n        }\r\n        event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n}\r\nexports.EventListBase = EventListBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HandlingBase = void 0;\r\n/**\r\n * Base class that implements event handling. With a an\r\n * event list this base class will expose events that can be\r\n * subscribed to. This will give your class generic events.\r\n *\r\n * @export\r\n * @abstract\r\n * @class HandlingBase\r\n * @template TEventHandler The type of event handler.\r\n * @template TDispatcher The type of dispatcher.\r\n * @template TList The type of event list.\r\n */\r\nclass HandlingBase {\r\n    /**\r\n     * Creates an instance of HandlingBase.\r\n     * @param {TList} events The event list. Used for event management.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    constructor(events) {\r\n        this.events = events;\r\n    }\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    one(name, fn) {\r\n        this.events.get(name).one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    has(name, fn) {\r\n        return this.events.get(name).has(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    subscribe(name, fn) {\r\n        this.events.get(name).subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    sub(name, fn) {\r\n        this.subscribe(name, fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsubscribe(name, fn) {\r\n        this.events.get(name).unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsub(name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    }\r\n}\r\nexports.HandlingBase = HandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSubscription = void 0;\r\n/**\r\n * Subscription implementation for events with promises.\r\n *\r\n * @export\r\n * @class PromiseSubscription\r\n * @implements {ISubscription<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseSubscription {\r\n    /**\r\n     * Creates an instance of PromiseSubscription.\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         *\r\n         * @memberOf PromiseSubscription\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    async execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            //TODO: do we need to cast to any -- seems yuck\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n                return;\r\n            }\r\n            let result = fn.apply(scope, args);\r\n            await result;\r\n        }\r\n    }\r\n}\r\nexports.PromiseSubscription = PromiseSubscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseDispatcherBase = void 0;\r\nconst PromiseSubscription_1 = require(\"../events/PromiseSubscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\nconst DispatcherBase_1 = require(\"./DispatcherBase\");\r\nconst DispatchError_1 = require(\"./DispatchError\");\r\n/**\r\n * Dispatcher base for dispatchers that use promises. Each promise\r\n * is awaited before the next is dispatched, unless the event is\r\n * dispatched with the executeAsync flag.\r\n *\r\n * @export\r\n * @abstract\r\n * @class PromiseDispatcherBase\r\n * @extends {DispatcherBase<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseDispatcherBase extends DispatcherBase_1.DispatcherBase {\r\n    /**\r\n     * The normal dispatch cannot be used in this class.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        throw new DispatchError_1.DispatchError(\"_dispatch not supported. Use _dispatchAsPromise.\");\r\n    }\r\n    /**\r\n     * Crates a new subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce Indicates if the handler should only run once.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf PromiseDispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new PromiseSubscription_1.PromiseSubscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    async _dispatchAsPromise(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let ps = sub;\r\n            await ps.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n}\r\nexports.PromiseDispatcherBase = PromiseDispatcherBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nconst DispatcherBase_1 = require(\"./dispatching/DispatcherBase\");\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return DispatcherBase_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"SubscriptionChangeEventDispatcher\", { enumerable: true, get: function () { return DispatcherBase_1.SubscriptionChangeEventDispatcher; } });\r\nconst DispatchError_1 = require(\"./dispatching/DispatchError\");\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return DispatchError_1.DispatchError; } });\r\nconst DispatcherWrapper_1 = require(\"./dispatching/DispatcherWrapper\");\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return DispatcherWrapper_1.DispatcherWrapper; } });\r\nconst EventListBase_1 = require(\"./dispatching/EventListBase\");\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return EventListBase_1.EventListBase; } });\r\nconst EventManagement_1 = require(\"./management/EventManagement\");\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return EventManagement_1.EventManagement; } });\r\nconst HandlingBase_1 = require(\"./handling/HandlingBase\");\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return HandlingBase_1.HandlingBase; } });\r\nconst PromiseDispatcherBase_1 = require(\"./dispatching/PromiseDispatcherBase\");\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return PromiseDispatcherBase_1.PromiseDispatcherBase; } });\r\nconst PromiseSubscription_1 = require(\"./events/PromiseSubscription\");\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return PromiseSubscription_1.PromiseSubscription; } });\r\nconst Subscription_1 = require(\"./events/Subscription\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return Subscription_1.Subscription; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class EventDispatcher\r\n * @extends {DispatcherBase<IEventHandler<TSender, TArgs>>}\r\n * @implements {IEvent<TSender, TArgs>}\r\n * @template TSender The sender type.\r\n * @template TArgs The event arguments type.\r\n */\r\nclass EventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of EventDispatcher.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     * @returns {IPropagationStatus} The propagation status to interact with the event\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatch(sender, args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event in an async way. Does not support event interaction.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {IEvent<TSender, TArgs>} The event.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.EventDispatcher = EventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass EventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.EventList = EventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventList_1 = require(\"./EventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass EventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new EventList_1.EventList());\r\n    }\r\n}\r\nexports.EventHandlingBase = EventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformEventList = NonUniformEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return EventDispatcher_1.EventDispatcher; } });\r\nconst EventHandlingBase_1 = require(\"./EventHandlingBase\");\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return EventHandlingBase_1.EventHandlingBase; } });\r\nconst EventList_1 = require(\"./EventList\");\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return EventList_1.EventList; } });\r\nconst NonUniformEventList_1 = require(\"./NonUniformEventList\");\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return NonUniformEventList_1.NonUniformEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class SimpleEventDispatcher\r\n * @extends {DispatcherBase<ISimpleEventHandler<TArgs>>}\r\n * @implements {ISimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass SimpleEventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of SimpleEventDispatcher.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatch(args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISimpleEvent<TArgs>} The event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass SimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.SimpleEventList = SimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass SimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new SimpleEventList_1.SimpleEventList());\r\n    }\r\n}\r\nexports.SimpleEventHandlingBase = SimpleEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformSimpleEventList = NonUniformSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return SimpleEventDispatcher_1.SimpleEventDispatcher; } });\r\nconst SimpleEventHandlingBase_1 = require(\"./SimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return SimpleEventHandlingBase_1.SimpleEventHandlingBase; } });\r\nconst NonUniformSimpleEventList_1 = require(\"./NonUniformSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return NonUniformSimpleEventList_1.NonUniformSimpleEventList; } });\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return SimpleEventList_1.SimpleEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n *\r\n * @export\r\n * @class SignalDispatcher\r\n * @extends {DispatcherBase<ISignalHandler>}\r\n * @implements {ISignal}\r\n */\r\nclass SignalDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatch() {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal without waiting for the result.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISignal} The signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SignalDispatcher = SignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n *\r\n * @export\r\n * @class SignalList\r\n * @extends {EventListBase<SignalDispatcher>}\r\n */\r\nclass SignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates an instance of SignalList.\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     *\r\n     * @protected\r\n     * @returns {SignalDispatcher}\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    createDispatcher() {\r\n        return new SignalDispatcher_1.SignalDispatcher();\r\n    }\r\n}\r\nexports.SignalList = SignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalList_1 = require(\"./SignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n *\r\n * @export\r\n * @abstract\r\n * @class SignalHandlingBase\r\n * @extends {HandlingBase<ISignalHandler, SignalDispatcher, SignalList>}\r\n * @implements {ISignalHandling}\r\n */\r\nclass SignalHandlingBase extends ste_core_1.HandlingBase {\r\n    /**\r\n     * Creates an instance of SignalHandlingBase.\r\n     *\r\n     * @memberOf SignalHandlingBase\r\n     */\r\n    constructor() {\r\n        super(new SignalList_1.SignalList());\r\n    }\r\n}\r\nexports.SignalHandlingBase = SignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = void 0;\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return SignalDispatcher_1.SignalDispatcher; } });\r\nconst SignalHandlingBase_1 = require(\"./SignalHandlingBase\");\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return SignalHandlingBase_1.SignalHandlingBase; } });\r\nconst SignalList_1 = require(\"./SignalList\");\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return SignalList_1.SignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class PromiseEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseEventHandler<TSender, TArgs>>}\r\n * @implements {IPromiseEvent<TSender, TArgs>}\r\n * @template TSender\r\n * @template TArgs\r\n */\r\nclass PromiseEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new EventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     * @returns {Promise<IPropagationStatus>} The status.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    async dispatch(sender, args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseEventDispatcher = PromiseEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseEventList = PromiseEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseEventList_1.PromiseEventList());\r\n    }\r\n}\r\nexports.PromiseEventHandlingBase = PromiseEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseEventList = NonUniformPromiseEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return PromiseEventDispatcher_1.PromiseEventDispatcher; } });\r\nconst PromiseEventHandlingBase_1 = require(\"./PromiseEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return PromiseEventHandlingBase_1.PromiseEventHandlingBase; } });\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return PromiseEventList_1.PromiseEventList; } });\r\nconst NonUniformPromiseEventList_1 = require(\"./NonUniformPromiseEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return NonUniformPromiseEventList_1.NonUniformPromiseEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n */\r\nclass PromiseSignalDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SignalDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    async dispatch() {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal threaded.\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSignalDispatcher = PromiseSignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SignalList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSignalDispatcher_1.PromiseSignalDispatcher();\r\n    }\r\n}\r\nexports.PromiseSignalList = PromiseSignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSignalHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSignalList_1.PromiseSignalList());\r\n    }\r\n}\r\nexports.PromiseSignalHandlingBase = PromiseSignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = void 0;\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return PromiseSignalDispatcher_1.PromiseSignalDispatcher; } });\r\nconst PromiseSignalHandlingBase_1 = require(\"./PromiseSignalHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return PromiseSignalHandlingBase_1.PromiseSignalHandlingBase; } });\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return PromiseSignalList_1.PromiseSignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class PromiseSimpleEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseSimpleEventHandler<TArgs>>}\r\n * @implements {IPromiseSimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass PromiseSimpleEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SimpleEventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    async dispatch(args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for it to complete.\r\n     * @param args The argument object.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSimpleEventDispatcher = PromiseSimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = void 0;\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseSimpleEventList = NonUniformPromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseSimpleEventList = PromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSimpleEventList_1.PromiseSimpleEventList());\r\n    }\r\n}\r\nexports.PromiseSimpleEventHandlingBase = PromiseSimpleEventHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = void 0;\r\nconst NonUniformPromiseSimpleEventList_1 = require(\"./NonUniformPromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return NonUniformPromiseSimpleEventList_1.NonUniformPromiseSimpleEventList; } });\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher; } });\r\nconst PromiseSimpleEventHandlingBase_1 = require(\"./PromiseSimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return PromiseSimpleEventHandlingBase_1.PromiseSimpleEventHandlingBase; } });\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return PromiseSimpleEventList_1.PromiseSimpleEventList; } });\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = exports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = exports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = exports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = exports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = exports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return ste_core_1.Subscription; } });\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return ste_core_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return ste_core_1.DispatcherWrapper; } });\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return ste_core_1.EventListBase; } });\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return ste_core_1.EventManagement; } });\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return ste_core_1.DispatchError; } });\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return ste_core_1.PromiseSubscription; } });\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return ste_core_1.PromiseDispatcherBase; } });\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return ste_core_1.HandlingBase; } });\r\nvar ste_events_1 = require(\"ste-events\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return ste_events_1.EventDispatcher; } });\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return ste_events_1.EventHandlingBase; } });\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return ste_events_1.EventList; } });\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return ste_events_1.NonUniformEventList; } });\r\nvar ste_simple_events_1 = require(\"ste-simple-events\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.NonUniformSimpleEventList; } });\r\nvar ste_signals_1 = require(\"ste-signals\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return ste_signals_1.SignalDispatcher; } });\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return ste_signals_1.SignalHandlingBase; } });\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return ste_signals_1.SignalList; } });\r\nvar ste_promise_events_1 = require(\"ste-promise-events\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.NonUniformPromiseEventList; } });\r\nvar ste_promise_signals_1 = require(\"ste-promise-signals\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalList; } });\r\nvar ste_promise_simple_events_1 = require(\"ste-promise-simple-events\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.NonUniformPromiseSimpleEventList; } });\r\n","import {EventEmitter} from \"./EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\nconst createUUID = ((() => {\n    const lut: any[] = [];\n    for (let i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n    }\n    return () => {\n        const d0 = Math.random() * 0xffffffff | 0;\n        const d1 = Math.random() * 0xffffffff | 0;\n        const d2 = Math.random() * 0xffffffff | 0;\n        const d3 = Math.random() * 0xffffffff | 0;\n        return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n    };\n}))();\n\n/**\n * Common base class for xeokit SDK components.\n *\n * ## Summary\n *\n * * Unique ID\n * * Logging methods\n * * Manages lifecycle of child Components\n */\nexport class Component {\n\n    /**\n     * Unique ID of this Component.\n     */\n    public id: string;\n\n    /**\n     * True once this Component has been destroyed.\n     *\n     * Don't use this Component if this is ````true````.\n     */\n    public destroyed: boolean;\n\n    protected dirty: boolean;\n\n    readonly #owner?: Component | null;\n\n    #ownedComponents: null | { [key: string]: Component };\n\n    /**\n     * Emits an event when the {@link @xeokit/core!Component} has been destroyed.\n     *\n     * @event\n     */\n    onDestroyed: EventEmitter<Component, null>;\n\n    /**\n     * Creates a new component.\n     */\n    constructor(owner: null | Component, cfg: { id?: string, [key: string]: any } = {}) {\n        this.#owner = owner;\n        this.id = cfg.id || createUUID();\n        this.destroyed = false;\n        this.#ownedComponents = null;\n        this.dirty = false;\n        this.onDestroyed = new EventEmitter(new EventDispatcher<Component, null>());\n        if (owner) {\n            owner.#own(this);\n        }\n    }\n\n    /**\n     * Logs a message for this component.\n     *\n     * The message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n     *\n     * @param message - The message to log\n     * @protected\n     */\n    log(message: string): void {\n        message = `[LOG] ${this.#prefixMessageWithID(message)}`;\n        console.log(message);\n    }\n\n    /**\n     * Logs a warning for this component to the JavaScript console.\n     *\n     * The console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n     *\n     * @param message - The warning message to log\n     * @protected\n     */\n    warn(message: string): void {\n        message = `[WARN] ${this.#prefixMessageWithID(message)}`;\n        console.warn(message);\n    }\n\n    /**\n     * Logs an error for this component to the JavaScript console.\n     *\n     * The console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\n     @param message The error message to log\n     @protected\n     */\n    error(message: string): void {\n        message = `[ERROR] ${this.#prefixMessageWithID(message)}`;\n        console.error(message);\n    }\n\n    /**\n     * Flags this component as having a defered state updates it needs to perform.\n     */\n    protected setDirty(): void {\n        if (this.dirty) {\n            return;\n        }\n        this.dirty = true;\n    }\n\n    /**\n     * Gives this component an opportunity to action any defered state updates.\n     */\n    protected cleanIfDirty(): void {\n        if (this.dirty) {\n            this.dirty = false;\n            this.clean();\n        }\n    }\n\n    /**\n     * Forces this component to action any deferred state updates.\n     */\n    protected clean(): void {\n    }\n\n    /**\n     * Destroys this component.\n     *\n     * Also destroys any components owned by this one.\n     *\n     * Sets {@link Component.destroyed} ````true````.\n     *\n     * Cancels any deferred state updates.\n     */\n    destroy(): void {\n        if (this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        if (this.#ownedComponents) {\n            for (let id in this.#ownedComponents) {\n                if (this.#ownedComponents.hasOwnProperty(id)) {\n                    const component = this.#ownedComponents[id];\n                    component.destroy();\n                    delete this.#ownedComponents[id];\n                }\n            }\n        }\n        this.#ownedComponents = null;\n        this.dirty = false;\n        this.onDestroyed.dispatch(this, null);\n        this.onDestroyed.clear();\n    }\n\n    #prefixMessageWithID(message: string): string {\n        return ` [${this.constructor.name} \"${this.id}\"]: ${message}`;\n    }\n\n    #own(component: Component) {\n        if (!this.#ownedComponents) {\n            this.#ownedComponents = {};\n        }\n        if (!this.#ownedComponents[component.id]) {\n            this.#ownedComponents[component.id] = component;\n        }\n        component.onDestroyed.one(() => {\n            // @ts-ignore\n            delete this.#ownedComponents[component.id];\n        });\n    }\n}\n\n","/**\n * Basic xeokit SDK error type.\n */\nexport class SDKError extends Error {\n\n}","/**\n * ## xeokit SDK Constant Definitions\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/constants\n * ````\n *\n * @module @xeokit/constants\n */\n\n/**\n * Texture wrapping mode in which the texture repeats to infinity.\n */\nexport const RepeatWrapping = 1000;\n\n/**\n * Texture wrapping mode in which the last pixel of the texture stretches to the edge of the mesh.\n */\nexport const ClampToEdgeWrapping = 1001;\n\n/**\n * Texture wrapping mode in which the texture repeats to infinity, mirroring on each repeat.\n */\nexport const MirroredRepeatWrapping = 1002;\n\n/**\n * Texture magnification and minification filter that returns the nearest texel to the given sample coordinates.\n */\nexport const NearestFilter = 1003;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and returns the nearest texel to the given sample coordinates.\n */\nexport const NearestMipMapNearestFilter = 1004;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured\n * and returns the nearest texel to the given sample coordinates.\n */\nexport const NearestMipmapNearestFilter = 1004;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\n * and returns the nearest texel to the center of the pixel at the given sample coordinates.\n */\nexport const NearestMipmapLinearFilter = 1005;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\n * and returns the nearest texel to the center of the pixel at the given sample coordinates.\n */\nexport const NearestMipMapLinearFilter = 1005;\n\n/**\n * Texture magnification and minification filter that returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearFilter = 1006;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\n * returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearMipmapNearestFilter = 1007;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\n * returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearMipMapNearestFilter = 1007;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\n * finds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\n * weighted average of those two values.\n */\nexport const LinearMipmapLinearFilter = 1008;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\n * finds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\n * weighted average of those two values.\n */\nexport const LinearMipMapLinearFilter = 1008;\n\n/**\n * Unsigned 8-bit integer type.\n */\nexport const UnsignedByteType = 1009;\n\n/**\n * Signed 8-bit integer type.\n */\nexport const ByteType = 1010;\n\n/**\n * Signed 16-bit integer type.\n */\nexport const ShortType = 1011;\n\n/**\n * Unsigned 16-bit integer type.\n */\nexport const UnsignedShortType = 1012;\n\n/**\n * Signed 32-bit integer type.\n */\nexport const IntType = 1013;\n\n/**\n * Unsigned 32-bit integer type.\n */\nexport const UnsignedIntType = 1014;\n\n/**\n * Signed 32-bit floating-point type.\n */\nexport const FloatType = 1015;\n\n/**\n * Signed 16-bit half-precision floating-point type.\n */\nexport const HalfFloatType = 1016;\n\n/**\n * Texture packing mode in which each ````RGBA```` channel is packed into 4 bits, for a combined total of 16 bits.\n */\nexport const UnsignedShort4444Type = 1017;\n\n/**\n * Texture packing mode in which the ````RGB```` channels are each packed into 5 bits, and the ````A```` channel is packed into 1 bit, for a combined total of 16 bits.\n */\nexport const UnsignedShort5551Type = 1018;\n\n/**\n * Unsigned integer type for 24-bit depth texture data.\n */\nexport const UnsignedInt248Type = 1020;\n\n/**\n * Texture sampling mode that discards the ````RGBA```` components and just reads the ````A```` component.\n */\nexport const AlphaFormat = 1021;\n\n/**\n * Texture sampling mode that discards the ````A```` component and reads the ````RGB```` components.\n */\nexport const RGBFormat = 1022;\n\n/**\n * Texture sampling mode that reads the ````RGBA```` components.\n */\nexport const RGBAFormat = 1023;\n\n/**\n * Texture sampling mode that reads each ````RGB```` texture component as a luminance value, converted to a float and clamped\n * to ````[0,1]````, while always reading the ````A```` channel as ````1.0````.\n */\nexport const LuminanceFormat = 1024;\n\n/**\n * Texture sampling mode that reads each of the ````RGBA```` texture components as a luminance/alpha value, converted to a float and clamped to ````[0,1]````.\n */\nexport const LuminanceAlphaFormat = 1025;\n\n/**\n * Texture sampling mode that reads each element as a single depth value, converts it to a float and clamps to ````[0,1]````.\n */\nexport const DepthFormat = 1026;\n\n/**\n * Texture sampling mode that\n */\nexport const DepthStencilFormat = 1027;\n\n/**\n * Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component.\n */\nexport const RedFormat = 1028;\n\n/**\n * Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component, as an integer instead of as a float.\n */\nexport const RedIntegerFormat = 1029;\n\n/**\n * Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components.\n */\nexport const RGFormat = 1030;\n\n/**\n * Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components, as integers instead of floats.\n */\nexport const RGIntegerFormat = 1031;\n\n/**\n * Texture sampling mode that reads the ````RGBA```` components as integers instead of floats.\n */\nexport const RGBAIntegerFormat = 1033;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT1 compressed</a> ````RGB```` image.\n */\nexport const RGB_S3TC_DXT1_Format = 33776;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT1 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT1_Format = 33777;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT3 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT3_Format = 33778;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT5 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT5_Format = 33779;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGB```` compression in 4-bit mode and one block for each 4×4 pixels.\n */\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGB```` compression in 2-bit mode and one block for each 8×4 pixels.\n */\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGBA```` compression in 4-bit mode and one block for each 4×4 pixels.\n */\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGBA```` compression in 2-bit mode and one block for each 8×4 pixels.\n */\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc1/\">ETC1 compressed</a>\n * ````RGB```` image.\n */\nexport const RGB_ETC1_Format = 36196;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc2/\">ETC2 compressed</a>\n * ````RGB```` image.\n */\nexport const RGB_ETC2_Format = 37492;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc2/\">ETC2 compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ETC2_EAC_Format = 37496;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_4x4_Format = 37808;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_5x4_Format = 37809;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_5x5_Format = 37810;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_6x5_Format = 37811;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_6x6_Format = 37812;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x5_Format = 37813;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x6_Format = 37814;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x8_Format = 37815;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x5_Format = 37816;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x6_Format = 37817;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x8_Format = 37818;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x10_Format = 37819;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_12x10_Format = 37820;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_12x12_Format = 37821;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://www.khronos.org/opengl/wiki/BPTC_Texture_Compression\">BPTC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_BPTC_Format = 36492;\n\n/**\n * Texture encoding mode in which the texture image is in linear color space.\n */\nexport const LinearEncoding = 3000;\n\n/**\n * Texture encoding mode in which the texture image is in sRGB color space.\n */\nexport const sRGBEncoding = 3001;\n\n/**\n * Media type for GIF images.\n */\nexport const GIFMediaType = 10000;\n\n/**\n * Media type for JPEG images.\n */\nexport const JPEGMediaType = 10001;\n\n/**\n * Media type for PNG images.\n */\nexport const PNGMediaType = 10002;\n\n/**\n * Points primitive type.\n */\nexport const PointsPrimitive = 20000;\n\n/**\n * Line segments primitive type.\n */\nexport const LinesPrimitive = 20001;\n\n/**\n * Non-closed triangle mesh primitive type.\n *\n * > Since we are able to look inside non-closed surfaces and see their backfaces, these primitive types are always\n * rendered with backfaces enabled.\n */\nexport const TrianglesPrimitive = 20002;\n\n/**\n * Closed triangle mesh primitive type.\n *\n * Since we normally can't see the backfaces inside closed surfaces, these primitive types are normally rendered\n * with backfaces disabled, for extra performance.\n */\nexport const SolidPrimitive = 20003;\n\n/**\n * Non-closed triangle mesh primitive type.\n *\n * Since we are able to look inside non-closed surfaces and see their backfaces, these primitive types are always\n * rendered with backfaces enabled.\n */\nexport const SurfacePrimitive = 20004;\n\n/**\n * Quality rendering mode.\n */\nexport const QualityRender = 30000;\n\n/**\n * Fast rendering mode.\n */\nexport const FastRender = 300001;\n\n/**\n * Meters unit of measurement.\n */\nexport const MetersUnit = 400000;\n\n/**\n * Centimeters unit of measurement.\n */\nexport const CentimetersUnit = 400001;\n\n/**\n * Millimeters unit of measurement.\n */\nexport const MillimetersUnit = 400002;\n\n/**\n * Yards unit of measurement.\n */\nexport const YardsUnit = 400003;\n\n/**\n * Feet unit of measurement.\n */\nexport const FeetUnit = 400004;\n\n/**\n * Inches unit of measurement.\n */\nexport const InchesUnit = 400005;\n\n/**\n * Perspective projection type.\n */\nexport const PerspectiveProjectionType = 500000;\n\n/**\n * Orthographic projection type.\n */\nexport const OrthoProjectionType = 500001;\n\n/**\n * Frustum3 projection type.\n */\nexport const FrustumProjectionType = 500002;\n\n/**\n * Custom projection type.\n */\nexport const CustomProjectionType = 500003;\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fmath.svg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:30px; height:140px;\" src=\"media://images/math_icon.png\"/>\n *\n * # xeokit Core Math Utilities\n *\n * ---\n *\n * ### *Basic math types and constants*\n *\n * ---\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/math\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as math from \"@xeokit/math\";\n *\n * //..\n * ````\n *\n * @module @xeokit/math\n */\n\n/**\n * An array of floating-point numbers.\n */\nexport type FloatArrayParam = (Uint8Array | Int8Array | Uint16Array | Uint32Array | Int16Array | Float32Array | Float64Array | number[]);\n\n/**\n * An array of integer numbers.\n */\nexport type IntArrayParam = (Uint32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | number[]);\n\n/**\n * Minimum safe double-precision value.\n */\nexport const MIN_DOUBLE: number = -Number.MAX_SAFE_INTEGER;\n\n/**\n * Maximum safe double-precision value.\n */\nexport const MAX_DOUBLE: number = Number.MAX_SAFE_INTEGER;\n\n/**\n * The number of radiians in a degree (0.0174532925).\n */\nexport const DEGTORAD: number = 0.0174532925;\n\n/**\n * The number of degrees in a radian.\n */\nexport const RADTODEG: number = 57.295779513;\n\n/**\n * Clamps a value to the given range.\n * @param value Value to clamp.\n * @param  min Lower bound.\n * @param max Upper bound.\n * @returns  Clamped result.\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Creates a new {@link FloatArrayParam}.\n */\nexport function newFloatArray(values?: number | FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new Float64Array(values);\n}\n\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fmath.svg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:30px; height:140px;\" src=\"media://images/matrix_icon.png\"/>\n *\n * # xeokit Matrix and Vector Math Library\n *\n * ---\n *\n * ### *Math functions for 3D/2D matrices, quaternions and vectors*\n *\n * ---\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/matrix\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as matrix from \"@xeokit/matrix\";\n *\n * //..\n * ````\n *\n * @module @xeokit/matrix\n */\nimport {clamp, DEGTORAD, FloatArrayParam, newFloatArray} from \"@xeokit/math\";\n\n\nconst tempVec4a: FloatArrayParam = createVec4();\nconst tempVec3 = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\nconst tempVec3d = createVec3();\nconst tempVec3e = createVec3();\nconst tempVec4b = createVec4();\n\n/**\n * Returns the dot product of two three-element vectors.\n */\nexport function dotVec3(u: FloatArrayParam, v: FloatArrayParam): number {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2]);\n}\n\n/**\n * Returns a new, uninitialized two-element vector.\n */\nexport function createVec2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new Float64Array(values || 2);\n}\n\n/**\n * Returns a new, uninitialized three-element vector.\n */\nexport function createVec3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 3);\n}\n\n/**\n * Returns a new, uninitialized four-element vector.\n */\nexport function createVec4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new Float64Array(values || 4);\n}\n\n/**\n * Negates a three-element vector.\n */\nexport function negateVec3(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    return dest;\n}\n\n/**\n * Negates a four-element vector.\n */\nexport function negateVec4(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    dest[3] = -v[3];\n    return dest;\n}\n\n/**\n * Adds one four-element vector to another.\n */\nexport function addVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    dest[3] = u[3] + v[3];\n    return dest;\n}\n\n/**\n * Adds a scalar value to each element of a four-element vector.\n */\nexport function addVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    dest[3] = v[3] + s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a four-element vector by a scalar.\n */\nexport function mulVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    dest[3] = v[3] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a three-element vector by a scalar.\n */\nexport function mulVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a two-element vector by a scalar.\n */\nexport function mulVec2Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    return dest;\n}\n\n/**\n * Adds one three-element vector to another.\n */\nexport function addVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    return dest;\n}\n\n/**\n */\nexport function addVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    return dest;\n}\n\n/**\n * Subtracts one four-element vector from another.\n */\nexport function subVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    dest[3] = u[3] - v[3];\n    return dest;\n}\n\n/**\n * Returns true if the two 3-element vectors are the same.\n */\nexport function compareVec3(v1: FloatArrayParam, v2: FloatArrayParam): boolean {\n    return (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] === v2[2]);\n}\n\n/**\n * Subtracts one three-element vector from another.\n */\nexport function subVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    return dest;\n}\n\n/**\n * Subtracts one two-element vector from another.\n */\nexport function subVec2(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    return dest;\n}\n\n/**\n * Get the geometric mean of the vectors.\n */\nexport function geometricMeanVec2(...vectors: any) {\n    const geometricMean = new Float32Array(vectors[0]);\n    for (let i = 1; i < vectors.length; i++) {\n        geometricMean[0] += vectors[i][0];\n        geometricMean[1] += vectors[i][1];\n    }\n    geometricMean[0] /= vectors.length;\n    geometricMean[1] /= vectors.length;\n    return geometricMean;\n}\n\n/**\n * Subtracts a scalar value from each element of a four-element vector.\n */\nexport function subVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] - s;\n    dest[1] = v[1] - s;\n    dest[2] = v[2] - s;\n    dest[3] = v[3] - s;\n    return dest;\n}\n\n/**\n * Sets each element of a 4-element vector to a scalar value minus the value of that element.\n * @method subScalarVec4\n * @static\n * @param {Array(Number)} v The vector\n * @param s The scalar\n * @param  {Array(Number)} [dest] Destination vector\n * @return {Array(Number)} dest if specified, v otherwise\n */\nexport function subScalarVec4(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s - v[0];\n    dest[1] = s - v[1];\n    dest[2] = s - v[2];\n    dest[3] = s - v[3];\n    return dest;\n}\n\n/**\n * Multiplies one three-element vector by another.\n */\nexport function mulVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] * v[0];\n    dest[1] = u[1] * v[1];\n    dest[2] = u[2] * v[2];\n    dest[3] = u[3] * v[3];\n    return dest;\n}\n\n\n/**\n * Divides one three-element vector by another.\n */\nexport function divVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    return dest;\n}\n\n/**\n * Divides one four-element vector by another.\n */\nexport function divVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    dest[3] = u[3] / v[3];\n    return dest;\n}\n\n/**\n * Divides a scalar by a three-element vector, returning a new vector.\n */\nexport function divScalarVec3(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    return dest;\n}\n\n/**\n * Divides a three-element vector by a scalar.\n */\nexport function divVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    return dest;\n}\n\n/**\n * Divides a four-element vector by a scalar.\n */\nexport function divVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    dest[3] = v[3] / s;\n    return dest;\n}\n\n/**\n * Divides a scalar by a four-element vector, returning a new vector.\n */\nexport function divScalarVec4(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    dest[3] = s / v[3];\n    return dest;\n}\n\n/**\n * Returns the dot product of two four-element vectors.\n */\nexport function dotVec4(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2] + u[3] * v[3]);\n}\n\n/**\n * Returns the cross product of two four-element vectors.\n */\nexport function cross3Vec4(u: FloatArrayParam, v: FloatArrayParam) {\n    const u0 = u[0];\n    const u1 = u[1];\n    const u2 = u[2];\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return [\n        u1 * v2 - u2 * v1,\n        u2 * v0 - u0 * v2,\n        u0 * v1 - u1 * v0,\n        0.0];\n}\n\n/**\n * Returns the cross product of two three-element vectors.\n */\nexport function cross3Vec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    const x = u[0];\n    const y = u[1];\n    const z = u[2];\n    const x2 = v[0];\n    const y2 = v[1];\n    const z2 = v[2];\n    dest[0] = y * z2 - z * y2;\n    dest[1] = z * x2 - x * z2;\n    dest[2] = x * y2 - y * x2;\n    return dest;\n}\n\nexport function sqLenVec4(v: FloatArrayParam) { // TODO\n    return dotVec4(v, v);\n}\n\n/**\n * Returns the length of a four-element vector.\n * @method lenVec4\n * @static\n * @param {Array(Number)} v The vector\n * @return The length\n */\nexport function lenVec4(v: FloatArrayParam) {\n    return Math.sqrt(sqLenVec4(v));\n}\n\n\n/**\n * Returns the dot product of two two-element vectors.\n */\nexport function dotVec2(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1]);\n}\n\n\nexport function sqLenVec3(v: FloatArrayParam) {\n    return dotVec3(v, v);\n}\n\n\nexport function sqLenVec2(v: FloatArrayParam) {\n    return dotVec2(v, v);\n}\n\n/**\n * Returns the length of a three-element vector.\n */\nexport function lenVec3(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec3(v));\n}\n\nexport const distVec3 = ((() => {\n    const vec = createVec3();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec3(subVec3(v, w, vec));\n}))()\n\n/**\n * Returns the length of a two-element vector.\n */\nexport function lenVec2(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec2(v));\n}\n\n/**\n * Linearly interpolates between two 3D vectors.\n */\nexport function lerpVec3(t: number, t1: number, t2: number, p1: FloatArrayParam, p2: FloatArrayParam, dest: any) {\n    const result = dest || createVec3();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = p1[0] + (f * (p2[0] - p1[0]));\n    result[1] = p1[1] + (f * (p2[1] - p1[1]));\n    result[2] = p1[2] + (f * (p2[2] - p1[2]));\n    return result;\n}\n\nexport const distVec2 = ((() => {\n    const vec = createVec2();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec2(subVec2(v, w, vec));\n}))();\n\n/**\n * @method rcpVec3\n * @static\n * @param v createVec3\n * @param dest createVec3 - optional destination\n * @return [] dest if specified, v otherwise\n *\n */\nexport function rcpVec3(v: FloatArrayParam, dest: FloatArrayParam) {\n    return divScalarVec3(1.0, v, dest);\n}\n\n/**\n * Normalizes a four-element vector\n *\n */\nexport function normalizeVec4(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec4(v);\n    return mulVec4Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a three-element vector\n * @method normalizeVec4\n * @static\n */\nexport function normalizeVec3(v: FloatArrayParam, dest?: FloatArrayParam) {\n    const f = 1.0 / lenVec3(v);\n    return mulVec3Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a two-element vector\n */\nexport function normalizeVec2(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec2(v);\n    return mulVec2Scalar(v, f, dest);\n}\n\n/**\n * Gets the angle between two vectors\n */\nexport function angleVec3(v: FloatArrayParam, w: FloatArrayParam) {\n    let theta = dotVec3(v, w) / (Math.sqrt(sqLenVec3(v) * sqLenVec3(w)));\n    theta = theta < -1 ? -1 : (theta > 1 ? 1 : theta);  // Clamp to handle numerical problems\n    return Math.acos(theta);\n}\n\n/**\n * Creates a three-element vector from the rotation part of a sixteen-element matrix.\n */\nexport const vec3FromMat4Scale: Function = ((() => {\n\n    const tempVec3 = createVec3();\n\n    return function (m: FloatArrayParam, dest: FloatArrayParam) {\n\n        tempVec3[0] = m[0];\n        tempVec3[1] = m[1];\n        tempVec3[2] = m[2];\n\n        dest[0] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[4];\n        tempVec3[1] = m[5];\n        tempVec3[2] = m[6];\n\n        dest[1] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[8];\n        tempVec3[1] = m[9];\n        tempVec3[2] = m[10];\n\n        dest[2] = lenVec3(tempVec3);\n\n        return dest;\n    };\n}))();\n\n/**\n * Converts an n-element vector to a JSON-serializable\n * array with values rounded to two decimal places.\n */\nexport function vecToArray(v: FloatArrayParam): FloatArrayParam {\n    v = Array.prototype.slice.call(v);\n    for (let i = 0, len = v.length; i < len; i++) {\n        v[i] = trunc(v[i]);\n    }\n    return v;\n}\n\nfunction trunc(v: number) {\n    return Math.round(v * 100000) / 100000\n}\n\n\n/**\n * Calculates the normal vector of a triangle.\n */\nexport function triangleNormal(a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, normal: FloatArrayParam = createVec3()): FloatArrayParam {\n    const p1x = b[0] - a[0];\n    const p1y = b[1] - a[1];\n    const p1z = b[2] - a[2];\n\n    const p2x = c[0] - a[0];\n    const p2y = c[1] - a[1];\n    const p2z = c[2] - a[2];\n\n    const p3x = p1y * p2z - p1z * p2y;\n    const p3y = p1z * p2x - p1x * p2z;\n    const p3z = p1x * p2y - p1y * p2x;\n\n    const mag = Math.sqrt(p3x * p3x + p3y * p3y + p3z * p3z);\n    if (mag === 0) {\n        normal[0] = 0;\n        normal[1] = 0;\n        normal[2] = 0;\n    } else {\n        normal[0] = p3x / mag;\n        normal[1] = p3y / mag;\n        normal[2] = p3z / mag;\n    }\n\n    return normal\n}\n\n\n/**\n * Returns a new, uninitialized 3x3 matrix.\n */\nexport function createMat3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new newFloatArray(values || 9);\n}\n\n/**\n * Returns a new, uninitialized 4x4 matrix.\n */\nexport function createMat4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\nconst tempMat4a = createMat4();\nconst tempMat4b = createMat4();\n\n/**\n * Returns true if the two 4x4 matrices are the same.\n * @param m1\n * @param m2\n * @returns {boolean}\n */\nexport function compareMat4(m1: FloatArrayParam, m2: FloatArrayParam): boolean {\n    return m1[0] === m2[0] &&\n        m1[1] === m2[1] &&\n        m1[2] === m2[2] &&\n        m1[3] === m2[3] &&\n        m1[4] === m2[4] &&\n        m1[5] === m2[5] &&\n        m1[6] === m2[6] &&\n        m1[7] === m2[7] &&\n        m1[8] === m2[8] &&\n        m1[9] === m2[9] &&\n        m1[10] === m2[10] &&\n        m1[11] === m2[11] &&\n        m1[12] === m2[12] &&\n        m1[13] === m2[13] &&\n        m1[14] === m2[14] &&\n        m1[15] === m2[15];\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function perspectiveMat4(fovyrad: number, aspectratio: number, znear: number, zfar: number, m?: FloatArrayParam): FloatArrayParam {\n    const pmin = [];\n    const pmax = [];\n    pmin[2] = znear;\n    pmax[2] = zfar;\n    pmax[1] = pmin[2] * Math.tan(fovyrad / 2.0);\n    pmin[1] = -pmax[1];\n    pmax[0] = pmax[1] * aspectratio;\n    pmin[0] = -pmax[0];\n    return frustumMat4v(pmin, pmax, m);\n}\n\n/**\n * Returns a 4x4 perspective frustum projection matrix.\n */\nexport function frustumMat4v(fmin: FloatArrayParam, fmax: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = createMat4();\n    }\n    const fmin4 = [fmin[0], fmin[1], fmin[2], 0.0];\n    const fmax4 = [fmax[0], fmax[1], fmax[2], 0.0];\n    addVec4(fmax4, fmin4, tempMat4a);\n    subVec4(fmax4, fmin4, tempMat4b);\n    const t = 2.0 * fmin4[2];\n    const tempMat4b0 = tempMat4b[0];\n    const tempMat4b1 = tempMat4b[1];\n    const tempMat4b2 = tempMat4b[2];\n    m[0] = t / tempMat4b0;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    m[4] = 0.0;\n    m[5] = t / tempMat4b1;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    m[8] = tempMat4a[0] / tempMat4b0;\n    m[9] = tempMat4a[1] / tempMat4b1;\n    m[10] = -tempMat4a[2] / tempMat4b2;\n    m[11] = -1.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -t * fmax4[2] / tempMat4b2;\n    m[15] = 0.0;\n    return m;\n}\n\n/**\n * Returns a 4x4 orthographic projection matrix.\n */\nexport function orthoMat4c(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = 2.0 / rl;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 2.0 / tb;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = -2.0 / fn;\n    dest[11] = 0.0;\n    dest[12] = -(left + right) / rl;\n    dest[13] = -(top + bottom) / tb;\n    dest[14] = -(far + near) / fn;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function frustumMat4(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = (near * 2) / rl;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = (near * 2) / tb;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = (right + left) / rl;\n    dest[9] = (top + bottom) / tb;\n    dest[10] = -(far + near) / fn;\n    dest[11] = -1;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = -(far * near * 2) / fn;\n    dest[15] = 0;\n    return dest;\n}\n\n\n/**\n * Returns a 4x4 identity matrix.\n */\nexport function identityMat4(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = createMat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 1.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = 1.0;\n    dest[11] = 0.0;\n    dest[12] = 0.0;\n    dest[13] = 0.0;\n    dest[14] = 0.0;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 3x3 identity matrix.\n */\nexport function identityMat3(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = createMat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 1.0;\n    dest[5] = 0.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 1.0;\n    return dest;\n}\n\n/**\n * Tests if the given 4x4 matrix is the identity matrix.\n */\nexport function isIdentityMat4(m: FloatArrayParam): boolean {\n    if (m[0] !== 1.0 || m[1] !== 0.0 || m[2] !== 0.0 || m[3] !== 0.0 ||\n        m[4] !== 0.0 || m[5] !== 1.0 || m[6] !== 0.0 || m[7] !== 0.0 ||\n        m[8] !== 0.0 || m[9] !== 0.0 || m[10] !== 1.0 || m[11] !== 0.0 ||\n        m[12] !== 0.0 || m[13] !== 0.0 || m[14] !== 0.0 || m[15] !== 1.0) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Creates a 4x4 rotation matrix.\n */\nexport function rotationMat4v(anglerad: number, axis: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = createMat4();\n    }\n    const ax = normalizeVec4([axis[0], axis[1], axis[2], 0.0], []);\n    const s = Math.sin(anglerad);\n    const c = Math.cos(anglerad);\n    const q = 1.0 - c;\n    const x = ax[0];\n    const y = ax[1];\n    const z = ax[2];\n    let xy;\n    let yz;\n    let zx;\n    let xs;\n    let ys;\n    let zs;\n    xy = x * y;\n    yz = y * z;\n    zx = z * x;\n    xs = x * s;\n    ys = y * s;\n    zs = z * s;\n    m[0] = (q * x * x) + c;\n    m[1] = (q * xy) + zs;\n    m[2] = (q * zx) - ys;\n    m[3] = 0.0;\n    m[4] = (q * xy) - zs;\n    m[5] = (q * y * y) + c;\n    m[6] = (q * yz) + xs;\n    m[7] = 0.0;\n    m[8] = (q * zx) + ys;\n    m[9] = (q * yz) - xs;\n    m[10] = (q * z * z) + c;\n    m[11] = 0.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = 0.0;\n    m[15] = 1.0;\n    return m;\n}\n\n/**\n * Creates a 4x4 'lookat' viewing transform matrix.\n */\nexport function lookAtMat4v(pos: FloatArrayParam, target: FloatArrayParam, up: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const posx = pos[0];\n    const posy = pos[1];\n    const posz = pos[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const targetx = target[0];\n    const targety = target[1];\n    const targetz = target[2];\n    if (posx === targetx && posy === targety && posz === targetz) {\n        return identityMat4();\n    }\n    let z0;\n    let z1;\n    let z2;\n    let x0;\n    let x1;\n    let x2;\n    let y0;\n    let y1;\n    let y2;\n    let len;\n    //createVec3.direction(eye, center, z);\n    z0 = posx - targetx;\n    z1 = posy - targety;\n    z2 = posz - targetz;\n    // normalize (no check needed for 0 because of early return)\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    //createVec3.normalize(createVec3.cross(up, z, x));\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n    //createVec3.normalize(createVec3.cross(z, x, y));\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n    dest[0] = x0;\n    dest[1] = y0;\n    dest[2] = z0;\n    dest[3] = 0;\n    dest[4] = x1;\n    dest[5] = y1;\n    dest[6] = z1;\n    dest[7] = 0;\n    dest[8] = x2;\n    dest[9] = y2;\n    dest[10] = z2;\n    dest[11] = 0;\n    dest[12] = -(x0 * posx + x1 * posy + x2 * posz);\n    dest[13] = -(y0 * posx + y1 * posy + y2 * posz);\n    dest[14] = -(z0 * posx + z1 * posy + z2 * posz);\n    dest[15] = 1;\n    return dest;\n}\n\n/**\n * Returns the inverse of the given 4x4 matrix.\n */\nexport function inverseMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat;\n    }\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    const invDet = 1 / (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n    dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n    dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n    dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n    dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n    dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n    dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n    dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n    dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n    dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n    dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n    dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n    dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n    dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n    dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n    dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n    dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n    return dest;\n}\n\n/**\n * Transposes the given 4x4 matrix.\n */\nexport function transposeMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m4 = mat[4];\n    const m14 = mat[14];\n    const m8 = mat[8];\n    const m13 = mat[13];\n    const m12 = mat[12];\n    const m9 = mat[9];\n    if (!dest || mat === dest) {\n        const a01 = mat[1];\n        const a02 = mat[2];\n        const a03 = mat[3];\n        const a12 = mat[6];\n        const a13 = mat[7];\n        const a23 = mat[11];\n        mat[1] = m4;\n        mat[2] = m8;\n        mat[3] = m12;\n        mat[4] = a01;\n        mat[6] = m9;\n        mat[7] = m13;\n        mat[8] = a02;\n        mat[9] = a12;\n        mat[11] = m14;\n        mat[12] = a03;\n        mat[13] = a13;\n        mat[14] = a23;\n        return mat;\n    }\n    dest[0] = mat[0];\n    dest[1] = m4;\n    dest[2] = m8;\n    dest[3] = m12;\n    dest[4] = mat[1];\n    dest[5] = mat[5];\n    dest[6] = m9;\n    dest[7] = m13;\n    dest[8] = mat[2];\n    dest[9] = mat[6];\n    dest[10] = mat[10];\n    dest[11] = m14;\n    dest[12] = mat[3];\n    dest[13] = mat[7];\n    dest[14] = mat[11];\n    dest[15] = mat[15];\n    return dest;\n}\n\n/**\n * Multiplies the given 4x4 matrix by the given four-element vector.\n */\nexport function mulMat4v4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = m;\n    }\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n/**\n * Multiplies the two given 4x4 matrix by each other.\n * @method mulMat4\n * @static\n */\nexport function mulMat4(a: FloatArrayParam, b: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = a;\n    }\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b13 = b[7];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b23 = b[11];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n    const b33 = b[15];\n    dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n    dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n    dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n    dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n    dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n    dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n    dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n    dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n    dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n    dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n    dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n    dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n    dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n    dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n    dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n    dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n    return dest;\n}\n\n/**\n * Multiplies the two given 3x3 matrices by each other.\n */\nexport function mulMat3(a: FloatArrayParam, b: FloatArrayParam, dest: FloatArrayParam = newFloatArray(9)) {\n\n    const a11 = a[0];\n    const a12 = a[3];\n    const a13 = a[6];\n    const a21 = a[1];\n    const a22 = a[4];\n    const a23 = a[7];\n    const a31 = a[2];\n    const a32 = a[5];\n    const a33 = a[8];\n    const b11 = b[0];\n    const b12 = b[3];\n    const b13 = b[6];\n    const b21 = b[1];\n    const b22 = b[4];\n    const b23 = b[7];\n    const b31 = b[2];\n    const b32 = b[5];\n    const b33 = b[8];\n\n    dest[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    dest[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    dest[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n    dest[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    dest[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    dest[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n    dest[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    dest[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    dest[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n    return dest;\n}\n\n/**\n * Transforms a three-element position by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint3(m: FloatArrayParam, p: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = p;\n    }\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n    dest[0] = (m[0] * x) + (m[4] * y) + (m[8] * z) + m[12];\n    dest[1] = (m[1] * x) + (m[5] * y) + (m[9] * z) + m[13];\n    dest[2] = (m[2] * x) + (m[6] * y) + (m[10] * z) + m[14];\n    return dest;\n}\n\n/**\n * Transforms a homogeneous coordinate by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint4(m: FloatArrayParam, v: FloatArrayParam, dest: FloatArrayParam) {\n    dest[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\n    dest[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\n    dest[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\n    dest[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\n    return dest;\n}\n\n\n/**\n * Transforms an array of three-element positions by a 4x4 matrix.\n * @method transformPoints3\n * @static\n */\nexport function transformPoints3(m: FloatArrayParam, points: number[][], points2: number[][]) {\n    const result = points2 || [];\n    const len = points.length;\n    let p0;\n    let p1;\n    let p2;\n    let pi;\n\n    // cache values\n    const m0 = m[0];\n\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    let r;\n\n    for (let i = 0; i < len; ++i) {\n\n        // cache values\n        pi = points[i];\n\n        p0 = pi[0];\n        p1 = pi[1];\n        p2 = pi[2];\n\n        r = result[i] || (result[i] = [0, 0, 0]);\n\n        r[0] = (m0 * p0) + (m4 * p1) + (m8 * p2) + m12;\n        r[1] = (m1 * p0) + (m5 * p1) + (m9 * p2) + m13;\n        r[2] = (m2 * p0) + (m6 * p1) + (m10 * p2) + m14;\n        r[3] = (m3 * p0) + (m7 * p1) + (m11 * p2) + m15;\n    }\n\n    result.length = len;\n\n    return result;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions3(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 3) {\n\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n\n    return p2;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions4(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n    let x;\n    let y;\n    let z;\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n    return p2;\n}\n\n/**\n * Transforms a three-element vector by a 4x4 matrix.\n */\nexport function transformVec3(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dest = dest || createVec3();\n    dest[0] = (m[0] * v0) + (m[4] * v1) + (m[8] * v2);\n    dest[1] = (m[1] * v0) + (m[5] * v1) + (m[9] * v2);\n    dest[2] = (m[2] * v0) + (m[6] * v1) + (m[10] * v2);\n    return dest;\n}\n\n/**\n * Transforms a four-element vector by a 4x4 matrix.\n * @method transformVec4\n * @static\n */\nexport function transformVec4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest = dest || createVec4();\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n */\nexport function scaleMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    const x = xyz[0];\n    const y = xyz[1];\n    const z = xyz[2];\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n */\nexport function scalingMat4v(v: FloatArrayParam, m: FloatArrayParam = identityMat4()): FloatArrayParam {\n    m[0] = v[0];\n    m[5] = v[1];\n    m[10] = v[2];\n    return m;\n}\n\n/**\n * Returns a 3x3 scale matrix.\n */\nexport function scalingMat3v(v: FloatArrayParam, m: FloatArrayParam = identityMat3()): FloatArrayParam {\n    m[0] = v[0];\n    m[4] = v[1];\n    return m;\n}\n\n/**\n * Returns a 4x4 scale matrix.\n */\nexport const scalingMat4c = ((() => {\n    const xyz: FloatArrayParam = newFloatArray(3);\n    return (x: number, y: number, z: number, dest?: FloatArrayParam) => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return scalingMat4v(xyz, dest);\n    };\n}))()\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n * @method scaleMat4c\n * @param x\n * @param y\n * @param z\n * @param m\n */\nexport function scaleMat4c(x: number, y: number, z: number, m: FloatArrayParam): FloatArrayParam {\n\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n * Returns 4x4 scale matrix.\n */\nexport function scalingMat4s(s: number): FloatArrayParam {\n    return scalingMat4c(s, s, s);\n}\n\n/**\n * Composes a 4x4 matrix from the given position, quaternion and scale.\n * @param position\n * @param quaternion\n * @param scale\n * @param mat\n */\nexport function composeMat4(\n    position: FloatArrayParam,\n    quaternion: FloatArrayParam,\n    scale: FloatArrayParam,\n    mat: FloatArrayParam = createMat4()): FloatArrayParam {\n    quatToRotationMat4(quaternion, mat);\n    scaleMat4v(scale, mat);\n    translateMat4v(position, mat);\n    return mat;\n}\n\n/**\n * Decomposes a 4x4 matrix into position, quaternion and scale.\n */\nexport const decomposeMat4 = (() => {\n    const vec = createVec3();\n    const matrix = createMat4();\n    return function decompose(mat: FloatArrayParam, position: FloatArrayParam, quaternion: FloatArrayParam, scale: FloatArrayParam) {\n        vec[0] = mat[0];\n        vec[1] = mat[1];\n        vec[2] = mat[2];\n        let sx = lenVec3(vec);\n        vec[0] = mat[4];\n        vec[1] = mat[5];\n        vec[2] = mat[6];\n        const sy = lenVec3(vec);\n        vec[8] = mat[8];\n        vec[9] = mat[9];\n        vec[10] = mat[10];\n        const sz = lenVec3(vec);\n        const det = determinantMat4(mat);\n        if (det < 0) {\n            sx = -sx;\n        }\n        position[0] = mat[12];\n        position[1] = mat[13];\n        position[2] = mat[14];\n        // scale the rotation part\n        // @ts-ignore\n        matrix.set(mat);\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n        matrix[0] *= invSX;\n        matrix[1] *= invSX;\n        matrix[2] *= invSX;\n        matrix[4] *= invSY;\n        matrix[5] *= invSY;\n        matrix[6] *= invSY;\n        matrix[8] *= invSZ;\n        matrix[9] *= invSZ;\n        matrix[10] *= invSZ;\n        mat4ToQuat(matrix, quaternion);\n        scale[0] = sx;\n        scale[1] = sy;\n        scale[2] = sz;\n\n    };\n})();\n\n/**\n * Efficiently post-concatenates a translation to the given matrix.\n */\nexport function translateMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    return translateMat4c(xyz[0], xyz[1], xyz[2], m);\n}\n\n/**\n * Efficiently post-concatenates a translation, given as separate components, to the given matrix.\n */\nexport function translateMat4c(x: number, y: number, z: number, m: FloatArrayParam = identityMat4()) {\n    const m3 = m[3];\n    m[0] += m3 * x;\n    m[1] += m3 * y;\n    m[2] += m3 * z;\n    const m7 = m[7];\n    m[4] += m7 * x;\n    m[5] += m7 * y;\n    m[6] += m7 * z;\n    const m11 = m[11];\n    m[8] += m11 * x;\n    m[9] += m11 * y;\n    m[10] += m11 * z;\n    const m15 = m[15];\n    m[12] += m15 * x;\n    m[13] += m15 * y;\n    m[14] += m15 * z;\n    return m;\n}\n\n/**\n * Creates a new matrix that replaces the translation in the rightmost column of the given\n * affine matrix with the given translation.\n */\nexport function setMat4Translation(m: FloatArrayParam, translation: FloatArrayParam, dest: FloatArrayParam): FloatArrayParam {\n\n    dest[0] = m[0];\n    dest[1] = m[1];\n    dest[2] = m[2];\n    dest[3] = m[3];\n\n    dest[4] = m[4];\n    dest[5] = m[5];\n    dest[6] = m[6];\n    dest[7] = m[7];\n\n    dest[8] = m[8];\n    dest[9] = m[9];\n    dest[10] = m[10];\n    dest[11] = m[11];\n\n    dest[12] = translation[0];\n    dest[13] = translation[1];\n    dest[14] = translation[2];\n    dest[15] = m[15];\n\n    return dest;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat4();\n    m[12] = v[0];\n    m[13] = v[1];\n    m[14] = v[2];\n    return m;\n}\n\n/**\n * Returns 3x3 translation matrix.\n */\nexport function translationMat3v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat3();\n    m[6] = v[0];\n    m[7] = v[1];\n    return m;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport const translationMat4c = ((() => {\n    const xyz = newFloatArray(3);\n    return (x: number, y: number, z: number, dest: FloatArrayParam): FloatArrayParam => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return translationMat4v(xyz, dest);\n    };\n}))();\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4s(s: number, dest: FloatArrayParam) {\n    return translationMat4c(s, s, s, dest);\n}\n\n\n/**\n * Returns the determinant of the given 4x4 matrix.\n */\nexport function determinantMat4(mat: FloatArrayParam): number {\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +\n        a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +\n        a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +\n        a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +\n        a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +\n        a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;\n}\n\n/**\n * Gets Euler angles from a 4x4 matrix.\n *\n * @param {mat The 4x4 matrix.\n * @param order Desired Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param [dest] Destination Euler angles, created by default.\n * @returns  The Euler angles.\n */\nexport function mat4ToEuler(mat: FloatArrayParam, order: string, dest: FloatArrayParam = createVec3()) {\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const m11 = mat[0];\n    const m12 = mat[4];\n    const m13 = mat[8];\n    const m21 = mat[1];\n    const m22 = mat[5];\n    const m23 = mat[9];\n    const m31 = mat[2];\n    const m32 = mat[6];\n    const m33 = mat[10];\n    if (order === 'XYZ') {\n        dest[1] = Math.asin(clamp(m13, -1, 1));\n        if (Math.abs(m13) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[2] = Math.atan2(-m12, m11);\n        } else {\n            dest[0] = Math.atan2(m32, m22);\n            dest[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        dest[0] = Math.asin(-clamp(m23, -1, 1));\n        if (Math.abs(m23) < 0.99999) {\n            dest[1] = Math.atan2(m13, m33);\n            dest[2] = Math.atan2(m21, m22);\n        } else {\n            dest[1] = Math.atan2(-m31, m11);\n            dest[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        dest[0] = Math.asin(clamp(m32, -1, 1));\n        if (Math.abs(m32) < 0.99999) {\n            dest[1] = Math.atan2(-m31, m33);\n            dest[2] = Math.atan2(-m12, m22);\n        } else {\n            dest[1] = 0;\n            dest[2] = Math.atan2(m21, m11);\n        }\n    } else if (order === 'ZYX') {\n        dest[1] = Math.asin(-clamp(m31, -1, 1));\n        if (Math.abs(m31) < 0.99999) {\n            dest[0] = Math.atan2(m32, m33);\n            dest[2] = Math.atan2(m21, m11);\n        } else {\n            dest[0] = 0;\n            dest[2] = Math.atan2(-m12, m22);\n        }\n    } else if (order === 'YZX') {\n        dest[2] = Math.asin(clamp(m21, -1, 1));\n        if (Math.abs(m21) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m22);\n            dest[1] = Math.atan2(-m31, m11);\n        } else {\n            dest[0] = 0;\n            dest[1] = Math.atan2(m13, m33);\n        }\n    } else if (order === 'XZY') {\n        dest[2] = Math.asin(-clamp(m12, -1, 1));\n        if (Math.abs(m12) < 0.99999) {\n            dest[0] = Math.atan2(m32, m22);\n            dest[1] = Math.atan2(m13, m11);\n        } else {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[1] = 0;\n        }\n    }\n    return dest;\n}\n\n/**\n * Linearly interpolates between two 4x4 matrices.\n */\nexport function lerpMat4(t: number, t1: number, t2: number, m1: FloatArrayParam, m2: FloatArrayParam, dest?: FloatArrayParam) {\n    const result = dest || createMat4();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = m1[0] + (f * (m2[0] - m1[0]));\n    result[1] = m1[1] + (f * (m2[1] - m1[1]));\n    result[2] = m1[2] + (f * (m2[2] - m1[2]));\n    result[3] = m1[3] + (f * (m2[3] - m1[3]));\n    result[4] = m1[4] + (f * (m2[4] - m1[4]));\n    result[5] = m1[5] + (f * (m2[5] - m1[5]));\n    result[6] = m1[6] + (f * (m2[6] - m1[6]));\n    result[7] = m1[7] + (f * (m2[7] - m1[7]));\n    result[8] = m1[8] + (f * (m2[8] - m1[8]));\n    result[9] = m1[9] + (f * (m2[9] - m1[9]));\n    result[10] = m1[10] + (f * (m2[10] - m1[10]));\n    result[11] = m1[11] + (f * (m2[11] - m1[11]));\n    result[12] = m1[12] + (f * (m2[12] - m1[12]));\n    result[13] = m1[13] + (f * (m2[13] - m1[13]));\n    result[14] = m1[14] + (f * (m2[14] - m1[14]));\n    result[15] = m1[15] + (f * (m2[15] - m1[15]));\n    return result;\n}\n\n\n/**\n * Craetes an identity quaternion.\n * @param dest Optional quaternion to initialize\n * @returns New quaternion\n */\nexport function identityQuat(\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    dest[0] = 0.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 1.0;\n    return dest;\n}\n\n/**\n * Initializes a quaternion from Euler angles.\n *\n * @param  euler The Euler angles.\n * @param  order Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param  [dest] Destination quaternion, created by default.\n * @returns  The quaternion.\n */\nexport function eulerToQuat(\n    euler: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n    const a = (euler[0] * DEGTORAD) / 2;\n    const b = (euler[1] * DEGTORAD) / 2;\n    const c = (euler[2] * DEGTORAD) / 2;\n\n    const c1 = Math.cos(a);\n    const c2 = Math.cos(b);\n    const c3 = Math.cos(c);\n    const s1 = Math.sin(a);\n    const s2 = Math.sin(b);\n    const s3 = Math.sin(c);\n\n    if (order === \"XYZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"YXZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"ZXY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"ZYX\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"YZX\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"XZY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return dest;\n}\n\n/**\n * Encodes rotation from a matrix into a quaternion.\n * @param m The matrix\n * @param dest The quaternion\n */\nexport function mat4ToQuat(\n    m: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const m11 = m[0];\n    const m12 = m[4];\n    const m13 = m[8];\n    const m21 = m[1];\n    const m22 = m[5];\n    const m23 = m[9];\n    const m31 = m[2];\n    const m32 = m[6];\n    const m33 = m[10];\n    let s;\n\n    const trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n\n        dest[3] = 0.25 / s;\n        dest[0] = (m32 - m23) * s;\n        dest[1] = (m13 - m31) * s;\n        dest[2] = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n        dest[3] = (m32 - m23) / s;\n        dest[0] = 0.25 * s;\n        dest[1] = (m12 + m21) / s;\n        dest[2] = (m13 + m31) / s;\n    } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n        dest[3] = (m13 - m31) / s;\n        dest[0] = (m12 + m21) / s;\n        dest[1] = 0.25 * s;\n        dest[2] = (m23 + m32) / s;\n    } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n        dest[3] = (m21 - m12) / s;\n        dest[0] = (m13 + m31) / s;\n        dest[1] = (m23 + m32) / s;\n        dest[2] = 0.25 * s;\n    }\n\n    return dest;\n}\n\n/**\n *\n * @param u\n * @param v\n * @param dest\n */\nexport function vec3PairToQuat(\n    u: FloatArrayParam,\n    v: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const norm_u_norm_v = Math.sqrt(dotVec3(u, u) * dotVec3(v, v));\n    let real_part = norm_u_norm_v + dotVec3(u, v);\n\n    if (real_part < 0.00000001 * norm_u_norm_v) {\n        // If u and v are exactly opposite, rotate 180 degrees\n        // around an arbitrary orthogonal axis. Axis normalisation\n        // can happen later, when we normalise the quaternion.\n\n        real_part = 0.0;\n\n        if (Math.abs(u[0]) > Math.abs(u[2])) {\n            dest[0] = -u[1];\n            dest[1] = u[0];\n            dest[2] = 0;\n        } else {\n            dest[0] = 0;\n            dest[1] = -u[2];\n            dest[2] = u[1];\n        }\n    } else {\n        // Otherwise, build quaternion the standard way.\n        cross3Vec3(u, v, dest);\n    }\n\n    dest[3] = real_part;\n\n    return normalizeQuat(dest);\n}\n\n/**\n * Converts an angle-axis rotation representation into a quaternion\n * @param angleAxis\n * @param dest\n */\nexport function angleAxisToQuaternion(\n    angleAxis: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const halfAngle = angleAxis[3] / 2.0;\n    const fsin = Math.sin(halfAngle);\n    dest[0] = fsin * angleAxis[0];\n    dest[1] = fsin * angleAxis[1];\n    dest[2] = fsin * angleAxis[2];\n    dest[3] = Math.cos(halfAngle);\n    return dest;\n}\n\n/**\n * Converts a quaternion to Euler angles\n * @param q\n * @param order\n * @param dest\n */\nexport function quatToEuler(\n    q: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = createVec3()\n) {\n    quatToRotationMat4(q, tempMat4a);\n    mat4ToEuler(tempMat4a, order, dest);\n    return dest;\n}\n\n/**\n * Multiples a pair of quaternions\n * @param p\n * @param q\n * @param dest\n */\nexport function mulQuats(\n    p: FloatArrayParam,\n    q: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const p0 = p[0];\n    const p1 = p[1];\n    const p2 = p[2];\n    const p3 = p[3];\n    const q0 = q[0];\n    const q1 = q[1];\n    const q2 = q[2];\n    const q3 = q[3];\n    dest[0] = p3 * q0 + p0 * q3 + p1 * q2 - p2 * q1;\n    dest[1] = p3 * q1 + p1 * q3 + p2 * q0 - p0 * q2;\n    dest[2] = p3 * q2 + p2 * q3 + p0 * q1 - p1 * q0;\n    dest[3] = p3 * q3 - p0 * q0 - p1 * q1 - p2 * q2;\n    return dest;\n}\n\n/**\n *\n * @param q\n * @param vec\n * @param dest\n */\nexport function vec3ApplyQuat(\n    q: FloatArrayParam,\n    vec: FloatArrayParam,\n    dest: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    const x = vec[0];\n    const y = vec[1];\n    const z = vec[2];\n\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n\n    // calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n\n    dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a matrix.\n * @param q\n * @param dest\n */\nexport function quatToMat4(\n    q: FloatArrayParam,\n    dest?: FloatArrayParam\n): FloatArrayParam {\n    dest = identityMat4(dest);\n\n    const q0 = q[0]; //x\n    const q1 = q[1]; //y\n    const q2 = q[2]; //z\n    const q3 = q[3]; //w\n\n    const tx = 2.0 * q0;\n    const ty = 2.0 * q1;\n    const tz = 2.0 * q2;\n\n    const twx = tx * q3;\n    const twy = ty * q3;\n    const twz = tz * q3;\n\n    const txx = tx * q0;\n    const txy = ty * q0;\n    const txz = tz * q0;\n\n    const tyy = ty * q1;\n    const tyz = tz * q1;\n    const tzz = tz * q2;\n\n    dest[0] = 1.0 - (tyy + tzz);\n    dest[1] = txy + twz;\n    dest[2] = txz - twy;\n\n    dest[4] = txy - twz;\n    dest[5] = 1.0 - (txx + tzz);\n    dest[6] = tyz + twx;\n\n    dest[8] = txz + twy;\n    dest[9] = tyz - twx;\n\n    dest[10] = 1.0 - (txx + tyy);\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a rotation matrix.\n * @param q\n * @param m\n */\nexport function quatToRotationMat4(\n    q: FloatArrayParam,\n    m: FloatArrayParam\n): FloatArrayParam {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n\n    m[0] = 1 - (yy + zz);\n    m[4] = xy - wz;\n    m[8] = xz + wy;\n\n    m[1] = xy + wz;\n    m[5] = 1 - (xx + zz);\n    m[9] = yz - wx;\n\n    m[2] = xz - wy;\n    m[6] = yz + wx;\n    m[10] = 1 - (xx + yy);\n\n    // last column\n    m[3] = 0;\n    m[7] = 0;\n    m[11] = 0;\n\n    // bottom row\n    m[12] = 0;\n    m[13] = 0;\n    m[14] = 0;\n    m[15] = 1;\n\n    return m;\n}\n\n/**\n * Normalizes a quaternion\n * @param q\n * @param dest\n * @returns The normalized quaternion\n */\nexport function normalizeQuat(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n): FloatArrayParam {\n    const len = lenVec4([q[0], q[1], q[2], q[3]]);\n    dest[0] = q[0] / len;\n    dest[1] = q[1] / len;\n    dest[2] = q[2] / len;\n    dest[3] = q[3] / len;\n    return dest;\n}\n\n/**\n * Gets the conjugate of a quaternion.\n * @param q\n * @param dest\n * @returns The conjugate of the quaternion\n */\nexport function conjugateQuat(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n) {\n    dest[0] = -q[0];\n    dest[1] = -q[1];\n    dest[2] = -q[2];\n    dest[3] = q[3];\n    return dest;\n}\n\n/**\n * Gets the inverse of a quaternion.\n * @param q\n * @param dest\n * @returns The inverse quaternion\n */\nexport function inverseQuat(q: FloatArrayParam, dest: FloatArrayParam) {\n    return normalizeQuat(conjugateQuat(q, dest));\n}\n\n/**\n * Converts a quaternion to angle-axis representation.\n * @param q\n * @param angleAxis\n * @returns The angle-axis rotation\n */\nexport function quatToAngleAxis(\n    q: FloatArrayParam,\n    angleAxis: FloatArrayParam = createVec4()\n) {\n    q = normalizeQuat(q, tempVec4a);\n    const q3 = q[3];\n    const angle = 2 * Math.acos(q3);\n    const s = Math.sqrt(1 - q3 * q3);\n    if (s < 0.001) {\n        // test to avoid divide by zero, s is always positive due to sqrt\n        angleAxis[0] = q[0];\n        angleAxis[1] = q[1];\n        angleAxis[2] = q[2];\n    } else {\n        angleAxis[0] = q[0] / s;\n        angleAxis[1] = q[1] / s;\n        angleAxis[2] = q[2] / s;\n    }\n    angleAxis[3] = angle; // * 57.295779579;\n    return angleAxis;\n}\n\n\n/**\n * Finds the intersection of a 3D ray with a 3D triangle.\n */\nexport function rayTriangleIntersect(origin: FloatArrayParam, dir: FloatArrayParam, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, isect: FloatArrayParam): FloatArrayParam | null {\n    isect = isect || createVec3();\n    const EPSILON = 0.000001;\n    const edge1 = subVec3(b, a, tempVec3);\n    const edge2 = subVec3(c, a, tempVec3b);\n    const pvec = cross3Vec3(dir, edge2, tempVec3c);\n    const det = dotVec3(edge1, pvec);\n    if (det < EPSILON) {\n        return null;\n    }\n    const tvec = subVec3(origin, a, tempVec3d);\n    const u = dotVec3(tvec, pvec);\n    if (u < 0 || u > det) {\n        return null;\n    }\n    const qvec = cross3Vec3(tvec, edge1, tempVec3e);\n    const v = dotVec3(dir, qvec);\n    if (v < 0 || u + v > det) {\n        return null;\n    }\n    const t = dotVec3(edge2, qvec) / det;\n    isect[0] = origin[0] + t * dir[0];\n    isect[1] = origin[1] + t * dir[1];\n    isect[2] = origin[2] + t * dir[2];\n    return isect;\n}\n\n/**\n Transforms a ray by a matrix.\n @param matrix 4x4 matrix\n @param rayOrigin The ray origin\n @param rayDir The ray direction\n @param rayOriginDest The transformed ray origin\n @param rayDirDest The transformed ray direction\n */\nexport function transformRay(matrix: FloatArrayParam, rayOrigin: FloatArrayParam, rayDir: FloatArrayParam, rayOriginDest: FloatArrayParam, rayDirDest: FloatArrayParam) {\n    tempVec4a[0] = rayOrigin[0];\n    tempVec4a[1] = rayOrigin[1];\n    tempVec4a[2] = rayOrigin[2];\n    tempVec4a[3] = 1;\n    transformVec4(matrix, tempVec4a, tempVec4b);\n    rayOriginDest[0] = tempVec4b[0];\n    rayOriginDest[1] = tempVec4b[1];\n    rayOriginDest[2] = tempVec4b[2];\n    tempVec4a[0] = rayDir[0];\n    tempVec4a[1] = rayDir[1];\n    tempVec4a[2] = rayDir[2];\n    transformVec3(matrix, tempVec4a, tempVec4b);\n    normalizeVec3(tempVec4b);\n    rayDirDest[0] = tempVec4b[0];\n    rayDirDest[1] = tempVec4b[1];\n    rayDirDest[2] = tempVec4b[2];\n}","/** @private */\nclass Map {\n     readonly #items: any[];\n     #lastUniqueId: number;\n\n    constructor(items:any, baseId?:any) {\n        this.#items = items || [];\n        this.#lastUniqueId = (baseId || 0) + 1;\n    }\n\n    /**\n     * Usage:\n     *\n     * id = myMap.addItem(\"foo\") // ID internally generated\n     * id = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"\n     */\n    addItem() {\n        let item;\n        if (arguments.length === 2) {\n            const id = arguments[0];\n            item = arguments[1];\n            if (this.#items[id]) { // Won't happen if given ID is string\n                throw \"ID clash: '\" + id + \"'\";\n            }\n            this.#items[id] = item;\n            return id;\n\n        } else {\n            item = arguments[0] || {};\n            while (true) {\n                const findId = this.#lastUniqueId++;\n                if (!this.#items[findId]) {\n                    this.#items[findId] = item;\n                    return findId;\n                }\n            }\n        }\n    }\n\n    removeItem(id:any) {\n        const item = this.#items[id];\n        delete this.#items[id];\n        return item;\n    }\n}\n\nexport {Map};\n","export class Queue {\n    private _head: any[];\n    private _headLength: number;\n    private _tail: any[];\n    private _index: number;\n    private _length: number;\n\n    constructor() {\n\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    shift() {\n        if (this._index >= this._headLength) {\n            const t = this._head;\n            t.length = 0;\n            this._head = this._tail;\n            this._tail = t;\n            this._index = 0;\n            this._headLength = this._head.length;\n            if (!this._headLength) {\n                return;\n            }\n        }\n        const value = this._head[this._index];\n        if (this._index < 0) {\n            delete this._head[this._index++];\n        }\n        else {\n            this._head[this._index++] = undefined;\n        }\n        this._length--;\n        return value;\n    }\n\n    push(item: any) {\n        this._length++;\n        this._tail.push(item);\n        return this;\n    };\n\n    unshift(item: any) {\n        this._head[--this._index] = item;\n        this._length++;\n        return this;\n    }\n\n    clear() {\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n}\n","class LoadingManager {\n    private isLoading: boolean;\n    private itemsLoaded: number;\n    private itemsTotal: number;\n    private urlModifier: undefined;\n    private handlers: any[];\n    private onStart: Function|undefined;\n    private onLoad: Function;\n    private onProgress: Function;\n    private onError: Function;\n\n    constructor(onLoad: Function, onProgress: Function, onError: Function) {\n\n        this.isLoading = false;\n        this.itemsLoaded = 0;\n        this.itemsTotal = 0;\n        this.urlModifier = undefined;\n        this.handlers = [];\n\n        this.onStart = undefined;\n        this.onLoad = onLoad;\n        this.onProgress = onProgress;\n        this.onError = onError;\n    }\n\n    itemStart(url: any) {\n        this.itemsTotal++;\n        if (!this.isLoading) {\n            if (this.onStart !== undefined) {\n                this.onStart(url, this.itemsLoaded, this.itemsTotal);\n            }\n        }\n        this.isLoading = true;\n    }\n\n    itemEnd(url: any) {\n        this.itemsLoaded++;\n        if (this.onProgress !== undefined) {\n            this.onProgress(url, this.itemsLoaded, this.itemsTotal);\n        }\n        if (this.itemsLoaded === this.itemsTotal) {\n            this.isLoading = false;\n            if (this.onLoad !== undefined) {\n                this.onLoad();\n            }\n        }\n    }\n\n    itemError(url: any) {\n        if (this.onError !== undefined) {\n            this.onError(url);\n        }\n    }\n\n    resolveURL(url: any) {\n        if (this.urlModifier) {\n            // @ts-ignore\n            return this.urlModifier(url);\n        }\n        return url;\n    }\n\n    setURLModifier(transform: any) {\n        this.urlModifier = transform;\n        return this;\n    }\n\n    addHandler(regex: any, loader: any) {\n        this.handlers.push(regex, loader);\n        return this;\n    }\n\n    removeHandler(regex: any) {\n        const index = this.handlers.indexOf(regex);\n        if (index !== -1) {\n            this.handlers.splice(index, 2);\n        }\n        return this;\n    }\n\n    getHandler(file: any) {\n        for (let i = 0, l = this.handlers.length; i < l; i += 2) {\n            const regex = this.handlers[i];\n            const loader = this.handlers[i + 1];\n            if (regex.global) regex.lastIndex = 0; // see #17920\n            if (regex.test(file)) {\n                return loader;\n            }\n        }\n        return null;\n    }\n}\n\n// @ts-ignore\nconst DefaultLoadingManager = new LoadingManager();\n\nexport {DefaultLoadingManager, LoadingManager};\n","import {DefaultLoadingManager, LoadingManager} from './LoadingManager';\n\nclass Loader {\n     manager: LoadingManager;\n     crossOrigin: string;\n     withCredentials: boolean;\n     path: string;\n     resourcePath: string;\n     requestHeader: {};\n\n    constructor(manager: LoadingManager | undefined) {\n\n        this.manager = (manager !== undefined) ? manager : DefaultLoadingManager;\n\n        this.crossOrigin = 'anonymous';\n        this.withCredentials = false;\n        this.path = '';\n        this.resourcePath = '';\n        this.requestHeader = {};\n    }\n\n    load(url: string, onLoad: Function, onProgress: Function, onError: Function) {\n    }\n\n    loadAsync(url: string, onProgress: Function) {\n        const scope = this;\n        return new Promise(function (resolve, reject) {\n            // @ts-ignore\n            scope.load(url, resolve, onProgress, reject);\n        });\n    }\n\n    parse( /* data */) {\n    }\n\n    setCrossOrigin(crossOrigin: string) {\n        this.crossOrigin = crossOrigin;\n        return this;\n    }\n\n    setWithCredentials(value: boolean) {\n        this.withCredentials = value;\n        return this;\n    }\n\n    setPath(path: string) {\n        this.path = path;\n        return this;\n    }\n\n    setResourcePath(resourcePath: string) {\n        this.resourcePath = resourcePath;\n        return this;\n    }\n\n    setRequestHeader(requestHeader: {}) {\n        this.requestHeader = requestHeader;\n        return this;\n    }\n}\n\nexport {Loader};\n","/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nexport class WorkerPool {\n    private pool: number;\n    private queue: any[];\n    private workers: any[];\n    private workersResolve: any[];\n    private workerStatus: number;\n    private workerCreator: any;\n\n    constructor(pool = 4) {\n        this.pool = pool;\n        this.queue = [];\n        this.workers = [];\n        this.workersResolve = [];\n        this.workerStatus = 0;\n    }\n\n    _initWorker(workerId: number) {\n        if (!this.workers[workerId]) {\n            const worker = this.workerCreator();\n            worker.addEventListener('message', this._onMessage.bind(this, workerId));\n            this.workers[workerId] = worker;\n        }\n    }\n\n    _getIdleWorker() {\n        for (let i = 0; i < this.pool; i++)\n            if (!(this.workerStatus & (1 << i))) return i;\n        return -1;\n    }\n\n    _onMessage(workerId: number, msg: string) {\n        const resolve = this.workersResolve[workerId];\n        resolve && resolve(msg);\n        if (this.queue.length) {\n            const {resolve, msg, transfer} = this.queue.shift();\n            this.workersResolve[workerId] = resolve;\n            this.workers[workerId].postMessage(msg, transfer);\n        } else {\n            this.workerStatus ^= 1 << workerId;\n        }\n    }\n\n    setWorkerCreator(workerCreator: any) {\n        this.workerCreator = workerCreator;\n    }\n\n    setWorkerLimit(pool: number) {\n        this.pool = pool;\n    }\n\n    postMessage(msg: any, transfer: any) {\n        return new Promise((resolve) => {\n            const workerId = this._getIdleWorker();\n            if (workerId !== -1) {\n                this._initWorker(workerId);\n                this.workerStatus |= 1 << workerId;\n                this.workersResolve[workerId] = resolve;\n                this.workers[workerId].postMessage(msg, transfer);\n            } else {\n                this.queue.push({resolve, msg, transfer});\n            }\n        });\n    }\n\n    destroy() {\n\n        this.workers.forEach((worker) => worker.terminate());\n        this.workersResolve.length = 0;\n        this.workers.length = 0;\n        this.queue.length = 0;\n        this.workerStatus = 0;\n\n    }\n\n}\n","const files: any = {};\nlet enabled = false;\n\nconst Cache = {\n\n    enabled: false,\n    files: {},\n\n    add: function (key: string | number, file: any) {\n        if (!enabled) {\n            return;\n        }\n        files[key] = file;\n    },\n\n    get: function (key: string | number) {\n        if (!enabled) {\n            return;\n        }\n        return files[key];\n    },\n\n    remove: function (key: string | number) {\n        delete files[key];\n    },\n\n    clear: function () {\n        this.files = {};\n    }\n};\n\nexport {Cache};\n","import {Cache} from './Cache';\nimport {Loader} from './Loader';\nimport type {LoadingManager} from \"./LoadingManager\";\n\nconst loading : {[key:string]:any} = {};\n\nclass FileLoader extends Loader {\n\n    mimeType: string;\n    responseType: string;\n\n    constructor(manager?: LoadingManager) {\n        super(manager);\n    }\n\n    load(url:string, onLoad:Function, onProgress:Function, onError:Function) {\n        if (url === undefined) {\n            url = '';\n        }\n        if (this.path !== undefined) {\n            url = this.path + url;\n        }\n        url = this.manager.resolveURL(url);\n        const cached = Cache.get(url);\n        if (cached !== undefined) {\n            this.manager.itemStart(url);\n            setTimeout(() => {\n                if (onLoad) {\n                    onLoad(cached);\n                }\n                this.manager.itemEnd(url);\n            }, 0);\n            return cached;\n        }\n        if (loading[url] !== undefined) {\n            loading[url].push({onLoad, onProgress, onError});\n            return;\n        }\n        loading[url] = [];\n        loading[url].push({onLoad, onProgress, onError});\n        const req = new Request(url, {\n            headers: new Headers(this.requestHeader),\n            credentials: this.withCredentials ? 'include' : 'same-origin'\n        });\n        const mimeType = this.mimeType;\n        const responseType = this.responseType;\n        fetch(req).then(response => {\n            if (response.status === 200 || response.status === 0) {\n                // Some browsers return HTTP Status 0 when using non-http protocol\n                // e.g. 'file://' or 'data://'. Handle as success.\n                if (response.status === 0) {\n                    console.warn('FileLoader: HTTP Status 0 received.');\n                }\n                // @ts-ignore\n                if (typeof ReadableStream === 'undefined' || response.body.getReader === undefined) {\n                    return response;\n                }\n                const callbacks = loading[url];\n                // @ts-ignore\n                const reader = response.body.getReader();\n                const contentLength = response.headers.get('Content-Length');\n                const total = contentLength ? parseInt(contentLength) : 0;\n                const lengthComputable = total !== 0;\n                let loaded = 0;\n                const stream = new ReadableStream({\n                    start(controller) {\n                        readData();\n\n                        function readData() {\n                            reader.read().then(({done, value}) => {\n                                if (done) {\n                                    controller.close();\n                                } else {\n                                    // @ts-ignore\n                                    loaded += value.byteLength;\n                                    const event = new ProgressEvent('progress', {lengthComputable, loaded, total});\n                                    for (let i = 0, il = callbacks.length; i < il; i++) {\n                                        const callback = callbacks[i];\n                                        if (callback.onProgress) {\n                                            callback.onProgress(event);\n                                        }\n                                    }\n                                    controller.enqueue(value);\n                                    readData();\n                                }\n                            });\n                        }\n                    }\n                });\n                return new Response(stream);\n            } else {\n                throw new Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n            }\n        }).then(response => {\n            switch (responseType) {\n                case 'arraybuffer':\n                    return response.arrayBuffer();\n                case 'blob':\n                    return response.blob();\n                case 'document':\n                    return response.text()\n                        .then(text => {\n                            const parser = new DOMParser();\n                            // @ts-ignore\n                            return parser.parseFromString(text, mimeType);\n                        });\n                case 'json':\n                    return response.json();\n                default:\n                    if (mimeType === undefined) {\n                        return response.text();\n                    } else {\n                        // sniff encoding\n                        const re = /charset=\"?([^;\"\\s]*)\"?/i;\n                        const exec = re.exec(mimeType);\n                        const label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n                        const decoder = new TextDecoder(label);\n                        return response.arrayBuffer().then(ab => decoder.decode(ab));\n                    }\n            }\n        }).then(data => {\n            // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n            Cache.add(url, data);\n            const callbacks = loading[url];\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onLoad) {\n                    callback.onLoad(data);\n                }\n            }\n        }).catch(err => {\n            // Abort errors and other errors are handled the same\n            const callbacks = loading[url];\n            if (callbacks === undefined) {\n                // When onLoad was called and url was deleted in `loading`\n                this.manager.itemError(url);\n                throw err;\n\n            }\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onError) {\n                    callback.onError(err);\n                }\n            }\n            this.manager.itemError(url);\n        }).finally(() => {\n            this.manager.itemEnd(url);\n        });\n        this.manager.itemStart(url);\n    }\n\n    setResponseType(value: string) {\n        this.responseType = value;\n        return this;\n    }\n\n    setMimeType(value: string) {\n        this.mimeType = value;\n        return this;\n    }\n}\n\n\nexport {FileLoader};\n","/**\n * ## xeokit SDK Core Utilities Library\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/utils\n * ````\n *\n * @module @xeokit/utils\n */\n\nexport * from \"./Map\";\nexport * from \"./Queue\";\nexport * from \"./Loader\";\nexport * from \"./LoadingManager\";\nexport * from \"./WorkerPool\";\nexport * from \"./Cache\";\nexport * from \"./FileLoader\";\n\n/**\n *\n * @param ob\n */\nexport function clone(ob: any) {\n    return JSON.parse(JSON.stringify(ob));\n}\n\nconst guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n    const li :any[]= [];\n    // @ts-ignore\n    const st = a[0].charCodeAt(0);\n    const en = st + a[1];\n    for (let i = st; i < en; ++i) {\n        li.push(i);\n    }\n    return String.fromCharCode.apply(null, li);\n}).join(\"\");\n\n/**\n *\n * @param v\n * @param len\n */\nexport function b64(v: number, len: number) {\n    const r = (!len || len === 4) ? [0, 6, 12, 18] : [0, 6];\n    return r.map(function (i) {\n            return guidChars.substr(parseInt(String(v / (1 << i))) % 64, 1)\n        }\n    ).reverse().join(\"\");\n}\n\n/**\n *\n * @param g\n */\nexport function compressGuid(g: string) {\n    const bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n        return parseInt(g.substr(i, 2), 16);\n    });\n    return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n        return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2], 4);\n    }).join(\"\");\n}\n\n/**\n *\n * @param m\n * @param t\n */\nexport function findNodeOfType(m: any, t: any) {\n    const li: any[] = [];\n    const _ = function (n: { type: any; children: any; }) {\n        if (n.type === t) li.push(n);\n        (n.children || []).forEach(function (c: { type: any; children: any; }) {\n            _(c);\n        });\n    };\n    _(m);\n    return li;\n}\n\n/**\n */\nexport function timeout(dt: number) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, dt);\n    });\n}\n\nexport function httpRequest(args: { method: string; url: string; }) {\n    return new Promise(function (resolve, reject) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(args.method || \"GET\", args.url, true);\n        xhr.onload = function (e) {\n            console.log(args.url, xhr.readyState, xhr.status);\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.responseXML);\n                } else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.send(null);\n    });\n}\n//\n// export const queryString = function () {\n//     // This function is anonymous, is executed immediately and\n//     // the return value is assigned to QueryString!\n//     const query_string = {};\n//     const query = window.location.search.substring(1);\n//     const vars = query.split(\"&\");\n//     for (let i = 0; i < vars.length; i++) {\n//         const pair = vars[i].split(\"=\");\n//         // If first entry with this name\n//         // @ts-ignore\n//         if (typeof query_string[pair[0]] === \"undefined\") {\n//             // @ts-ignore\n//             query_string[pair[0]] = decodeURIComponent(pair[1]);\n//             // If second entry with this name\n//         } else { // @ts-ignore\n//             if (typeof query_string[pair[0]] === \"string\") {\n//                 // @ts-ignore\n//                 query_string[pair[0]] = [query_string[pair[0]], decodeURIComponent(pair[1])];\n//                 // If third or later entry with this name\n//             } else {\n//                 // @ts-ignore\n//                 query_string[pair[0]].push(decodeURIComponent(pair[1]));\n//             }\n//         }\n//     }\n//     return query_string;\n// }();\n\nexport function loadJSON(url: string,\n                         ok: {\n                             (arg0: any): void;\n                             (_value: any): any;\n                         },\n                         err: {\n                             (arg0: string | ProgressEvent<XMLHttpRequestEventTarget>): void;\n                             (_value: any): any;\n                         }) {\n    // Avoid checking ok and err on each use.\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n\n    const request = new XMLHttpRequest();\n    request.overrideMimeType(\"application/json\");\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n        // @ts-ignore\n        const response = event.target.response;\n        if (this.status === 200) {\n            let json;\n            try {\n                json = JSON.parse(response);\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n            ok(json);\n        } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('loadFile: HTTP Status 0 received.');\n            try {\n                ok(JSON.parse(response));\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n        } else {\n            err(event);\n        }\n    }, false);\n\n    request.addEventListener('error', function (event) {\n        err(event);\n    }, false);\n    request.send(null);\n}\n\nexport function loadArraybuffer(url: string, ok: { (arg0: ArrayBuffer): void; (_value: any): any; }, err: { (arg0: string): void; (_value: any): any; }) {\n    // Check for data: URI\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = url.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        let data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (let i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\n/**\n Tests if the given object is an array\n */\nexport function isArray(value: any) {\n    return value && !(value.propertyIsEnumerable('length')) && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n Tests if the given value is a string\n */\nexport function isString(value: any) {\n    return (typeof value === 'string' || value instanceof String);\n}\n\n/**\n Tests if the given value is a number\n */\nexport function isNumeric(value: any) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n Tests if the given value is an ID\n */\nexport function isID(value: any) {\n    return isString(value) || isNumeric(value);\n}\n\n/**\n Tests if the given value is a function\n */\nexport function isFunction(value: any) {\n    return (typeof value === \"function\");\n}\n\n/**\n Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.\n */\nexport function isObject(value: { constructor: Function; }) {\n    const objectConstructor = {}.constructor;\n    return (!!value && value.constructor === objectConstructor);\n}\n\n/** Returns a shallow copy\n */\nexport function copy(o: any) {\n    return apply(o, {});\n}\n\n/** Add properties of o to o2, overwriting them on o2 if already there\n */\nexport function apply(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            o2[name] = o[name];\n        }\n    }\n    return o2;\n}\n\n/**\n Add non-null/defined properties of o to o2\n */\nexport function apply2(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o[name] !== undefined && o[name] !== null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Add properties of o to o2 where undefined or null on o2\n */\nexport function applyIf(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o2[name] === undefined || o2[name] === null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Returns true if the given map is empty.\n */\nexport function isEmptyObject(obj: any) {\n    for (const name in obj) {\n        if (obj.hasOwnProperty(name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n Returns the given ID as a string, in quotes if the ID was a string to begin with.\n This is useful for logging IDs.\n */\nexport function inQuotes(id: any) {\n    return isNumeric(id) ? (`${id}`) : (`'${id}'`);\n}\n\n/**\n Returns the concatenation of two typed arrays.\n */\nexport function concat(a: any, b: any) {\n    const c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * Returns a new UUID.\n */\nexport const createUUID = ((() => {\n    const lut: any[] = [];\n    for (let i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n    }\n    return () => {\n        const d0 = Math.random() * 0xffffffff | 0;\n        const d1 = Math.random() * 0xffffffff | 0;\n        const d2 = Math.random() * 0xffffffff | 0;\n        const d3 = Math.random() * 0xffffffff | 0;\n        return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n    };\n}))();\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fcompression.svg)](https://badge.fury.io/js/%40xeokit%2Fcompression)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/compression/badge)](https://www.jsdelivr.com/package/npm/@xeokit/compression)\n * \n * <img style=\"padding:20px\" src=\"media://images/geometry_icon.png\"/>\n *\n * # xeokit Geometry Compression / Decompression Utilities\n *\n * ---\n *\n * ### *Tools for geometry compression and decompression*\n *\n * ---\n *\n * The xeokit Geometry Compression/Decompression Utilities library provides functions used internally within SceneModel.createGeometry implementations to compress geometry. These functions are also provided for users who want to pre-compress their geometry \"offline\" and then use SceneModel.createGeometryCompressed to create compressed geometry directly.\n\n The compression techniques used include simplifying geometry by combining duplicate positions and adjusting indices, generating edge indices for triangle meshes, ignoring normals (as shaders auto-generate them), converting positions to relative-to-center (RTC) coordinates, quantizing positions and UVs as 16-bit unsigned integers, and splitting geometry into buckets to enable indices to use the minimum bits for storage. The bucketing technique was developed for xeokit by Toni Marti with support from Tribia AG.\n\n To use the library, install it using npm install @xeokit/compression. An example usage includes compressing a GeometryParams into a GeometryCompressedParams using the compressGeometryParams function. In this example, the geometry is simple, and only one bucket is needed. However, if the positions array was large enough to require some indices to use more than 16 bits for storage, the bucketing mechanism would split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n\n The resulting GeometryCompressedParams object shows that we have one bucket with vertex positions relative to the origin and quantized to 16-bit integers, duplicate positions removed, and adjusted indices. Additionally, edge indices are generated for the TrianglesPrimitive, and a positionsDecompressMatrix is included to de-quantize the positions within the Viewer.\n\n * This library provides a set of functions that are used internally within\n * {@link @xeokit/scene!SceneModel.createGeometry | SceneModel.createGeometry} implementations to\n * compress geometry. The functions are provided here in case users instead want to pre-compress their geometry \"offline\",\n * and then use {@link @xeokit/scene!SceneModel.createGeometryCompressed | SceneModel.createGeometryCompressed}\n * to create the compressed geometry directly.\n *\n * ### Compression Techniques Used\n *\n * * Simplifies geometry by combining duplicate positions and adjusting indices\n * * Generates edge indices for triangle meshes\n * * Ignores normals (our shaders auto-generate them)\n * * Converts positions to relative-to-center (RTC) coordinates\n * * Quantizes positions and UVs as 16-bit unsigned integers\n * * Splits geometry into {@link @xeokit/scene!GeometryBucketParams | buckets } to enable indices to use the minimum bits for storage\n *\n * ### Aknowledgements\n *\n * * The bucketing technique mentioned above was developed for xeokit by Toni Marti, with support from Tribia AG. Read [the slides](media://pdfs/GPU_RAM_Savings_Toni_Marti_Apr22.pdf) from Toni's presentation at WebGL Meetup 2022.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/compression\n * ````\n *\n * ## Usage\n *\n * In the example below, we'll use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}.\n *\n * In this example, our geometry is very simple, and our GeometryCompressedParams only gets a single\n * {@link @xeokit/scene!GeometryBucketParams | GeometryBucketParams }. Note that if the\n * {@link @xeokit/scene!GeometryParams.positions | GeometryParams.positions} array was large enough to require\n * some of the indices to use more than 16 bits for storage, then that's when the function's bucketing mechanism would\n * kick in, to split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n *\n * ````javascript\n * import {compressGeometryParams} from \"@xeokit/compression\";\n * import {TrianglesPrimitive} from \"@xeokit/constants\";\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [\n *          202, 202, 202, 200, 202, 202,\n *          200, 200, 202, 202, 200, 202,\n *          202, 202, 202, 202, 200, 202,\n *          202, 200, 200, 202, 202, 200,\n *          202, 202, 202, 202, 202, 200,\n *          200, 202, 200, 200, 202, 202,\n *          200, 202, 202, 200, 202, 200,\n *          200, 200, 200, 200, 200, 202,\n *          200, 200, 200, 202, 200, 200,\n *          202, 200, 202, 200, 200, 202,\n *          202, 200, 200, 200, 200, 200,\n *          200, 202, 200, 202, 202, 200\n *      ],\n *      indices: [\n *          0, 1, 2, 0, 2, 3, 4, 5, 6, 4,\n *          6, 7, 8, 9, 10, 8, 10, 11, 12,\n *          13, 14, 12, 14, 15, 16, 17, 18,\n *          16, 18, 19, 20, 21, 22, 20, 22, 23\n *      ]\n *  });\n * ````\n *\n * The value of our new {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams} is shown below.\n *\n * We can see that:\n *\n * * We get one bucket, because we have only a small number of indices\n * * Vertex positions are now relative to ````origin```` and quantized to 16-bit integers\n * * Duplicate positions are removed and indices adjusted\n * * Edge indices generated for our TrianglesPrimitive\n * * A ````positionsDecompressMatrix```` to de-quantize the positions within the Viewer\n *\n * ````javascript\n * {\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      origin: [200,200,200],\n *      positionsDecompressMatrix: [\n *          0.00003052270125906143, 0, 0, 0,\n *          0, 0.00003052270125906143, 0, 0,\n *          0, 0, 0.00003052270125906143, 0,\n *          -1, -1, -1, 1\n *      ],\n *      geometryBuckets: [\n *          {\n *              positionsCompressed: [\n *                  65525, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 0, 65525, 0, 0,\n *                  0, 0\n *              ],\n *              indices: [\n *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2,\n *                  4, 7, 6, 4, 6, 5\n *              ],\n *              edgeIndices: [\n *                  3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7,\n *                  3, 2, 4, 7, 6, 4, 6\n *              ]\n *          }\n *      ]\n * }\n * ````\n *\n * In the next example, we'll again use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}, which we'll then use to\n * create a compressed geometry within a {@link @xeokit/scene!SceneModel | SceneModel}.\n *\n * ````javascript\n * import {Scene} from \"@xeokit/scene\";\n * import {TrianglesPrimitive} from \"@xeokit/constants\";\n * import {compressGeometryParams} from \"@xeokit/compression\";\n *\n * const scene = new Scene();\n *\n * const sceneModel = scene.createModel({\n *     id: \"myModel\"\n * });\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [202, 202, 202, 200, 202, 202, ...],\n *      indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, ...]\n * });\n *\n * sceneModel.createGeometryCompressed(geometryCompressedParams);\n *\n * sceneModel.createMesh({ id: \"myMesh\", geometryId: \"myGeometry\" });\n *\n * sceneModel.createObject({ id: \"myObject1\", meshIds: [\"myMesh\"] });\n * sceneModel.createObject({ id: \"myObject2\", meshIds: [\"myMesh\"] });\n *\n * sceneModel.build();\n * ````\n *\n * @module @xeokit/compression\n */\n\nimport {\n    createMat3,\n    createMat4,\n    createVec3,\n    identityMat3,\n    identityMat4,\n    mulMat3,\n    mulMat4,\n    normalizeVec3,\n    scalingMat3v,\n    scalingMat4v,\n    transformVec3,\n    translationMat3v,\n    translationMat4v\n} from \"@xeokit/matrix\";\n\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nconst translate = createMat4();\nconst scale = createMat4();\n\n/**\n * Gets the boundary of a flat positions array.\n *\n * @param array\n * @param min\n * @param max\n */\nexport function getPositions3MinMax(array: FloatArrayParam, min?: FloatArrayParam, max?: FloatArrayParam) {\n    let i, j;\n    min = min || new Float64Array(3);\n    max = max || new Float64Array(3);\n    for (i = 0; i < 3; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 3) {\n        for (j = 0; j < 3; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min,\n        max\n    };\n}\n\n/**\n * Creates a de-quantization matrix from a boundary.\n */\nexport function createPositions3DecompressMat4(aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam): FloatArrayParam {\n    positionsDecompressMatrix = positionsDecompressMatrix || createMat4();\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65535;\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsDecompressMatrix;\n}\n\n/**\n * Compresses a flat positions array\n */\nexport function compressPositions3(array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam) {\n    const quantized = new Uint16Array(array.length);\n    var multiplier = new Float32Array([\n        max[0] !== min[0] ? 65535 / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? 65535 / (max[1] - min[1]) : 0,\n        max[2] !== min[2] ? 65535 / (max[2] - min[2]) : 0\n    ]);\n    let i;\n    for (i = 0; i < array.length; i += 3) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n    }\n    identityMat4(translate);\n    translationMat4v(min, translate);\n    identityMat4(scale);\n    scalingMat4v([\n        (max[0] - min[0]) / 65535,\n        (max[1] - min[1]) / 65535,\n        (max[2] - min[2]) / 65535\n    ], scale);\n    const decompressMatrix = mulMat4(translate, scale, identityMat4());\n    return {\n        quantized: quantized,\n        decompressMatrix: decompressMatrix\n    };\n}\n\n/**\n * Compresses a 3D position\n * @param p\n * @param aabb\n * @param q\n */\nexport function compressPoint3(p: FloatArrayParam, aabb: FloatArrayParam, dest: FloatArrayParam = p) {\n    const multiplier = new Float32Array([\n        aabb[3] !== aabb[0] ? 65535 / (aabb[3] - aabb[0]) : 0,\n        aabb[4] !== aabb[1] ? 65535 / (aabb[4] - aabb[1]) : 0,\n        aabb[5] !== aabb[2] ? 65535 / (aabb[5] - aabb[2]) : 0\n    ]);\n    dest[0] = Math.max(0, Math.min(65535, Math.floor((p[0] - aabb[0]) * multiplier[0])));\n    dest[1] = Math.max(0, Math.min(65535, Math.floor((p[1] - aabb[1]) * multiplier[1])));\n    dest[2] = Math.max(0, Math.min(65535, Math.floor((p[2] - aabb[2]) * multiplier[2])));\n    return dest;\n}\n\n/**\n * Decompresses a 3D position\n * @param position\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPoint3(position: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = position): FloatArrayParam {\n    dest[0] = position[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = position[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = position[2] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses an axis-aligned 3D boundary\n * @param aabb\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressAABB3(aabb: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = aabb): FloatArrayParam {\n    dest[0] = aabb[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = aabb[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = aabb[2] * decompressMatrix[10] + decompressMatrix[14];\n    dest[3] = aabb[3] * decompressMatrix[0] + decompressMatrix[12];\n    dest[4] = aabb[4] * decompressMatrix[5] + decompressMatrix[13];\n    dest[5] = aabb[5] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses a flat array of positions\n * @param positions\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPositions3(positions: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: Float32Array = new Float32Array(positions.length)): Float32Array {\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        dest[i + 0] = positions[i + 0] * decompressMatrix[0] + decompressMatrix[12];\n        dest[i + 1] = positions[i + 1] * decompressMatrix[5] + decompressMatrix[13];\n        dest[i + 2] = positions[i + 2] * decompressMatrix[10] + decompressMatrix[14];\n    }\n    return dest;\n}\n\n/**\n * Gets the 2D min/max boundary of a flat array of UV coordinate\n * @param array\n */\nexport function getUVBounds(array: FloatArrayParam): { min: FloatArrayParam, max: FloatArrayParam } {\n    const min = new Float32Array(2);\n    const max = new Float32Array(2);\n    let i, j;\n    for (i = 0; i < 2; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 2) {\n        for (j = 0; j < 2; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\n/**\n * Compresses a flat array of UV coordinates\n */\nexport var compressUVs = (function () {\n    const translate = createMat3();\n    const scale = createMat3();\n    return function (array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam): {\n        quantized: Uint16Array,\n        decompressMatrix: FloatArrayParam | Float64Array\n    } {\n        const quantized = new Uint16Array(array.length);\n        const multiplier = new Float32Array([\n            65535 / (max[0] - min[0]),\n            65535 / (max[1] - min[1])\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 2) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        }\n        identityMat3(translate);\n        translationMat3v(min, translate);\n        identityMat3(scale);\n        scalingMat3v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535\n        ], scale);\n        const decompressMatrix = mulMat3(translate, scale, identityMat3());\n        return {\n            quantized: quantized,\n            decompressMatrix: decompressMatrix\n        };\n    };\n})();\n\n/**\n * Oct-encodes a flat array of normal vectors\n * @param array\n */\nexport function compressNormals(array: FloatArrayParam): Int8Array { // http://jcgt.org/published/0003/02/01/\n\n    // Note: three elements for each encoded normal, in which the last element in each triplet is redundant.\n    // This is to work around a mysterious WebGL issue where 2-element normals just wouldn't work in the shader :/\n\n    const encoded = new Int8Array(array.length);\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < array.length; i += 3) {\n        // Test various combinations of ceil and floor\n        // to minimize rounding errors\n        best = oct = octEncodeNormalFromArray(array, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(array, i, dec);\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        encoded[i] = best[0];\n        encoded[i + 1] = best[1];\n    }\n    return encoded;\n}\n\n/**\n */\nfunction octEncodeNormalFromArray(array: FloatArrayParam, i: number, xfunc: any, yfunc: any): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n/**\n * Dot product of a normal in an array against a candidate decoding\n */\nfunction dot(array: FloatArrayParam, i: number, createVec3: FloatArrayParam): number {\n    return array[i] * createVec3[0] + array[i + 1] * createVec3[1] + array[i + 2] * createVec3[2];\n}\n\n/**\n */\nexport function decompressUV(uv: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(2)) {\n    dest[0] = uv[0] * decompressMatrix[0] + decompressMatrix[6];\n    dest[1] = uv[1] * decompressMatrix[4] + decompressMatrix[7];\n}\n\n/**\n *\n */\nexport function decompressUVs(uvs: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(uvs.length)) {\n    for (let i = 0, len = uvs.length; i < len; i += 3) {\n        dest[i + 0] = uvs[i + 0] * decompressMatrix[0] + decompressMatrix[6];\n        dest[i + 1] = uvs[i + 1] * decompressMatrix[4] + decompressMatrix[7];\n    }\n    return dest;\n}\n\n/**\n *\n */\nexport function decompressNormal(oct: FloatArrayParam, result: FloatArrayParam): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nexport function decompressNormals(octs: string | any[], result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n *\n * @param oct\n * @param result\n */\nfunction octDecodeVec2(oct: Int8Array, result: FloatArrayParam = createVec3()): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nfunction octDecodeVec2s(octs: Int8Array, result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n * @private\n */\nexport function quantizePositions3(positions: FloatArrayParam, aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam) { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const lenPositions = positions.length;\n    const positionsCompressed = new Uint16Array(lenPositions);\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65525;\n    const xMultiplier = maxInt / xwid;\n    const yMultiplier = maxInt / ywid;\n    const zMultiplier = maxInt / zwid;\n    const verify = (num: number) => num >= 0 ? num : 0;\n    for (let i = 0; i < lenPositions; i += 3) {\n        positionsCompressed[i + 0] = Math.floor(verify(positions[i + 0] - xmin) * xMultiplier);\n        positionsCompressed[i + 1] = Math.floor(verify(positions[i + 1] - ymin) * yMultiplier);\n        positionsCompressed[i + 2] = Math.floor(verify(positions[i + 2] - zmin) * zMultiplier);\n    }\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsCompressed;\n}\n\n/**\n * @private\n */\nexport function transformAndOctEncodeNormals(worldNormalMatrix: FloatArrayParam, normals: FloatArrayParam, lenNormals: number, compressedNormals: FloatArrayParam, lenCompressedNormals: number) {\n\n    function dot(p: FloatArrayParam, createVec3: FloatArrayParam) { // Dot product of a normal in an array against a candidate decoding\n        return p[0] * createVec3[0] + p[1] * createVec3[1] + p[2] * createVec3[2];\n    }\n\n    // http://jcgt.org/published/0003/02/01/\n    let oct, dec, best, currentCos, bestCos;\n    let i, ei;\n    let localNormal = new Float32Array([0, 0, 0, 0]);\n    let worldNormal = new Float32Array([0, 0, 0, 0]);\n    for (i = 0; i < lenNormals; i += 3) {\n        localNormal[0] = normals[i];\n        localNormal[1] = normals[i + 1];\n        localNormal[2] = normals[i + 2];\n\n        transformVec3(worldNormalMatrix, localNormal, worldNormal);\n        normalizeVec3(worldNormal, worldNormal);\n\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeVec3(worldNormal, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(worldNormal, dec);\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[lenCompressedNormals + i + 0] = best[0];\n        compressedNormals[lenCompressedNormals + i + 1] = best[1];\n        compressedNormals[lenCompressedNormals + i + 2] = 0.0; // Unused\n    }\n    lenCompressedNormals += lenNormals;\n    return lenCompressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeNormals(normals: FloatArrayParam) { // http://jcgt.org/published/0003/02/01/\n    const lenNormals = normals.length;\n    const compressedNormals = new Int8Array(lenNormals)\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < lenNormals; i += 3) {\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeNormal(normals, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(normals, i, dec);\n        oct = octEncodeNormal(normals, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[i + 0] = best[0];\n        compressedNormals[i + 1] = best[1];\n        compressedNormals[i + 2] = 0.0; // Unused\n    }\n    return compressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeVec3(p: FloatArrayParam, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = p[0] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    let y = p[1] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    if (p[2] < 0) {\n        let tempx = x;\n        let tempy = y;\n        tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n/**\n * @private\n */\nexport function octEncodeNormal(array: FloatArrayParam, i: number, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fsvg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img src=\"http://xeokit.io/img/kdtree.jpeg\" />\n *\n * # xeokit Boundaries Math Library\n *\n * ---\n *\n * ### *Tools for 2D and 3D boundary analysis, boundary transformation, and collision detection*\n *\n * ---\n *\n * * Axis-aligned boundaries (AABB2 and AABB3)\n * * Object-aligned boundaries (OBB)\n * * Transformable OOBs\n * * Create boundaries from positions\n * * Find center of positions\n * * FrustumProjection-boundary intersection tests\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/boundaries\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as boundaries from \"@xeokit/boundaries\";\n *\n * //..TODO\n * ````\n *\n * @module @xeokit/boundaries\n */\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {MAX_DOUBLE, MIN_DOUBLE, newFloatArray} from \"@xeokit/math\";\nimport {createMat4, createVec2, createVec3, lenVec3, mulMat4, subVec3} from \"@xeokit/matrix\";\nimport {decompressPoint3} from \"@xeokit/compression\";\n\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempMat4a = createMat4();\n\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3Int16(values?: IntArrayParam): Int16Array {\n    // @ts-ignore\n    return new Int16Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 2D axis-aligned bounding box.\n */\nexport function createAABB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 4);\n}\n\n/**\n * Returns a new, uninitialized 3D oriented bounding box (OBB).\n */\nexport function createOBB3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 32);\n}\n\n/**\n * Returns a new, uninitialized 2D oriented bounding box (OBB).\n */\nexport function createOBB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\n/** Returns a new 3D bounding sphere */\nexport function createSphere3(\n    x: number,\n    y: number,\n    z: number,\n    r: number\n): FloatArrayParam {\n    return newFloatArray([x, y, z, r]);\n}\n\n/**\n * Transforms an createOBB3 by a 4x4\n */\nexport function transformOBB3(\n    m: FloatArrayParam,\n    p: FloatArrayParam,\n    p2: FloatArrayParam = p\n): FloatArrayParam {\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = m0 * x + m4 * y + m8 * z + m12;\n        p2[i + 1] = m1 * x + m5 * y + m9 * z + m13;\n        p2[i + 2] = m2 * x + m6 * y + m10 * z + m14;\n        p2[i + 3] = m3 * x + m7 * y + m11 * z + m15;\n    }\n\n    return p2;\n}\n\n\n/** Returns true if the first AABB2 contains the second AABB2.\n */\nexport function containsAABB2(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    return aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb1[2] <= aabb2[2];\n}\n\n/** Returns true if the first AABB3 contains the second AABB3.\n */\nexport function containsAABB3(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    const result =\n        aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb2[4] <= aabb1[4] &&\n        aabb1[2] <= aabb2[2] &&\n        aabb2[5] <= aabb1[5];\n    return result;\n}\n\n/**\n * Gets the diagonal size of an createAABB3 given as minima and maxima.\n */\nexport const getAABB3Diag: Function = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n    return (aabb: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n        subVec3(max, min, tempVec3);\n        return Math.abs(lenVec3(tempVec3));\n    };\n})();\n\n/**\n * Get a diagonal boundary size that is symmetrical about the given point.\n */\nexport const getAABB3DiagPoint = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n\n    return (aabb: FloatArrayParam, p: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n\n        const diagVec = subVec3(max, min, tempVec3);\n\n        const xneg = p[0] - aabb[0];\n        const xpos = aabb[3] - p[0];\n        const yneg = p[1] - aabb[1];\n        const ypos = aabb[4] - p[1];\n        const zneg = p[2] - aabb[2];\n        const zpos = aabb[5] - p[2];\n\n        diagVec[0] += xneg > xpos ? xneg : xpos;\n        diagVec[1] += yneg > ypos ? yneg : ypos;\n        diagVec[2] += zneg > zpos ? zneg : zpos;\n\n        return Math.abs(lenVec3(diagVec));\n    };\n})();\n\n/**\n * Gets the area of an AABB.\n */\nexport function getAABB3Area(aabb: FloatArrayParam): number {\n    const width = aabb[3] - aabb[0];\n    const height = aabb[4] - aabb[1];\n    const depth = aabb[5] - aabb[2];\n    return width * height * depth;\n}\n\n/**\n * Gets the center of an AABB.\n */\nexport function getAABB3Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    dest[0] = (aabb[0] + aabb[3]) / 2;\n    dest[1] = (aabb[1] + aabb[4]) / 2;\n    dest[2] = (aabb[2] + aabb[5]) / 2;\n    return dest;\n}\n\n/**\n * Gets the center of a 2D AABB.\n */\nexport function getAABB2Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec2()\n): FloatArrayParam {\n    dest[0] = (aabb[2] + aabb[0]) / 2;\n    dest[1] = (aabb[3] + aabb[1]) / 2;\n    return dest;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3(aabb: FloatArrayParam = createAABB3()): FloatArrayParam {\n    aabb[0] = MAX_DOUBLE;\n    aabb[1] = MAX_DOUBLE;\n    aabb[2] = MAX_DOUBLE;\n    aabb[3] = MIN_DOUBLE;\n    aabb[4] = MIN_DOUBLE;\n    aabb[5] = MIN_DOUBLE;\n    return aabb;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3Int16(aabb: IntArrayParam = createAABB3Int16()): IntArrayParam {\n    aabb[0] = 65535;\n    aabb[1] = 65535;\n    aabb[2] = 65535;\n    aabb[3] = -65535;\n    aabb[4] = -65535;\n    aabb[5] = -65535;\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n *\n * @private\n */\nexport function AABB3ToOBB3(aabb: FloatArrayParam = createAABB3(), obb = createOBB3()): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Expands the first axis-aligned 3D boundary to enclose the second, if required.\n */\nexport function expandAABB3(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[2] > aabb2[2]) {\n        aabb1[2] = aabb2[2];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    if (aabb1[5] < aabb2[5]) {\n        aabb1[5] = aabb2[5];\n    }\n    return aabb1;\n}\n\n/**\n * Expands the first axis-aligned 2D boundary to enclose the second, if required.\n */\nexport function expandAABB2(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    return aabb1;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given point, if needed.\n */\nexport function expandAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[2] > p[2]) {\n        aabb[2] = p[2];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    if (aabb[5] < p[2]) {\n        aabb[5] = p[2];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 2D boundary to enclose the given point, if needed.\n */\nexport function expandAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given points, if needed.\n */\nexport function expandAABB3Points3(aabb: FloatArrayParam, positions: FloatArrayParam): FloatArrayParam {\n    var x;\n    var y;\n    var z;\n    for (var i = 0, len = positions.length; i < len; i += 3) {\n        x = positions[i];\n        y = positions[i + 1];\n        z = positions[i + 2];\n        if (aabb[0] > x) {\n            aabb[0] = x;\n        }\n        if (aabb[1] > y) {\n            aabb[1] = y;\n        }\n        if (aabb[2] > z) {\n            aabb[2] = z;\n        }\n        if (aabb[3] < x) {\n            aabb[3] = x;\n        }\n        if (aabb[4] < y) {\n            aabb[4] = y;\n        }\n        if (aabb[5] < z) {\n            aabb[5] = z;\n        }\n    }\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n */\nexport function ABB3ToOBB3(\n    aabb: FloatArrayParam,\n    obb: FloatArrayParam = createOBB3()\n): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport const positions3ToAABB3 = (() => {\n    const p = newFloatArray(3);\n\n    return (\n        positions: FloatArrayParam,\n        aabb: FloatArrayParam,\n        positionsDecompressMatrix: FloatArrayParam\n    ): FloatArrayParam => {\n        aabb = aabb || createAABB3();\n\n        let xmin = MAX_DOUBLE;\n        let ymin = MAX_DOUBLE;\n        let zmin = MAX_DOUBLE;\n        let xmax = MIN_DOUBLE;\n        let ymax = MIN_DOUBLE;\n        let zmax = MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = positions.length; i < len; i += 3) {\n            if (positionsDecompressMatrix) {\n                p[0] = positions[i + 0];\n                p[1] = positions[i + 1];\n                p[2] = positions[i + 2];\n\n                decompressPoint3(p, positionsDecompressMatrix, p);\n\n                x = p[0];\n                y = p[1];\n                z = p[2];\n            } else {\n                x = positions[i + 0];\n                y = positions[i + 1];\n                z = positions[i + 2];\n            }\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    };\n})();\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport function OBB3ToAABB3(\n    obb: FloatArrayParam,\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = obb.length; i < len; i += 4) {\n        x = obb[i + 0];\n        y = obb[i + 1];\n        z = obb[i + 2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.\n */\nexport function points3ToAABB3(\n    points: number[][],\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = points.length; i < len; i++) {\n        x = points[i][0];\n        y = points[i][1];\n        z = points[i][2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Gets the 3D center of the given flat array of 3D positions.\n */\nexport function getPositions3Center(\n    positions: FloatArrayParam,\n    center: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    let xCenter = 0;\n    let yCenter = 0;\n    let zCenter = 0;\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        xCenter += positions[i + 0];\n        yCenter += positions[i + 1];\n        zCenter += positions[i + 2];\n    }\n    const numPositions = positions.length / 3;\n    center[0] = xCenter / numPositions;\n    center[1] = yCenter / numPositions;\n    center[2] = zCenter / numPositions;\n    return center;\n}\n\n\n/**\n * A plane within a {@link Frustum3}.\n */\nexport class FrustumPlane3 {\n\n    public testVertex: FloatArrayParam;\n    public offset: number;\n    public normal: FloatArrayParam;\n\n    /**\n     * Creates a new frustum plane.\n     */\n    constructor() {\n        this.normal = createVec3();\n        this.offset = 0;\n        this.testVertex = createVec3();\n    }\n\n    /**\n     * Sets the position and direction of the frustum plane.\n     * @param nx\n     * @param ny\n     * @param nz\n     * @param offset\n     */\n    set(nx: number, ny: number, nz: number, offset: number) {\n        const s = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n        this.normal[0] = nx * s;\n        this.normal[1] = ny * s;\n        this.normal[2] = nz * s;\n        this.offset = offset * s;\n        this.testVertex[0] = (this.normal[0] >= 0.0) ? 1 : 0;\n        this.testVertex[1] = (this.normal[1] >= 0.0) ? 1 : 0;\n        this.testVertex[2] = (this.normal[2] >= 0.0) ? 1 : 0;\n    }\n}\n\n/**\n * Intersection state in which first boundary is completely inside the second.\n */\nexport const INSIDE: number = 1;\n\n/**\n * Intersection state in which two boundaries partially intersect.\n */\nexport const INTERSECT: number = 2;\n\n/**\n * Intersection state in which two boundaries do not intersect.\n */\nexport const OUTSIDE: number = 3;\n\n/**\n * A 3D frustum defined as six planes.\n */\nexport class Frustum3 {\n\n    /**\n     * The six planes that comprise the frustum boundary.\n     */\n    public planes: FrustumPlane3[];\n\n    /**\n     * Creates a new FrustumProjection\n     */\n    constructor() {\n        this.planes = [\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3(),\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3()\n        ];\n    }\n}\n\n/**\n * Sets the extents of a frustum to the World-space volume defined by view and projection matrices.\n * Creates the frustum first if not given.\n */\nexport function setFrustum3(viewMat: FloatArrayParam, projMat: FloatArrayParam, frustum?: Frustum3) {\n    const m = mulMat4(projMat, viewMat, tempMat4a);\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    frustum = frustum || new Frustum3();\n    frustum.planes[0].set(m3 - m0, m7 - m4, m11 - m8, m15 - m12);\n    frustum.planes[1].set(m3 + m0, m7 + m4, m11 + m8, m15 + m12);\n    frustum.planes[2].set(m3 - m1, m7 - m5, m11 - m9, m15 - m13);\n    frustum.planes[3].set(m3 + m1, m7 + m5, m11 + m9, m15 + m13);\n    frustum.planes[4].set(m3 - m2, m7 - m6, m11 - m10, m15 - m14);\n    frustum.planes[5].set(m3 + m2, m7 + m6, m11 + m10, m15 + m14);\n    return frustum;\n}\n\n/**\n * Tests for intersection between a frustum and an axis-aligned 3D boundary.\n * @param frustum\n * @param aabb\n */\nexport function intersectFrustum3AABB3(frustum: Frustum3, aabb: FloatArrayParam): number {\n    let ret = INSIDE;\n    const min = tempVec3a;\n    const max = tempVec3b;\n    min[0] = aabb[0];\n    min[1] = aabb[1];\n    min[2] = aabb[2];\n    max[0] = aabb[3];\n    max[1] = aabb[4];\n    max[2] = aabb[5];\n    const bminmax = [min, max];\n    for (let i = 0; i < 6; ++i) {\n        const plane = frustum.planes[i];\n        if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            return OUTSIDE;\n        }\n        if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            ret = INTERSECT;\n        }\n    }\n    return ret;\n}\n\n/**\n * Tests for intersection between two axis-aligned 3D boundaries.\n * @param aabb1\n * @param aabb2\n */\nexport function intersectAABB3s(aabb1: FloatArrayParam, aabb2: FloatArrayParam): number {\n\n    return INTERSECT;\n    // let ret = INSIDE;\n    // const min = tempVec3a;\n    // const max = tempVec3b;\n    // min[0] = aabb[0];\n    // min[1] = aabb[1];\n    // min[2] = aabb[2];\n    // max[0] = aabb[3];\n    // max[1] = aabb[4];\n    // max[2] = aabb[5];\n    // const bminmax = [min, max];\n    // for (let i = 0; i < 6; ++i) {\n    //     const plane = frustum.planes[i];\n    //     if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         return OUTSIDE;\n    //     }\n    //     if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         ret = INTERSECT;\n    //     }\n    // }\n    // return ret;\n}\n\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Triangles3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given triangle primitive.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param a\n * @param b\n * @param c\n */\nexport function intersectFrustum3Triangle3(frustum: Frustum3, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Lines3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!PointsPrimitive | PointsPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n */\nexport function intersectFrustum3Positions3(frustum: Frustum3, positions: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given position.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param position\n */\nexport function intersectFrustum3Point3(frustum: Frustum3, position: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Triangles3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        // if (aabbIntersectsTriangle(positions, indices[i], indices[i + 1], indices[i + 2], aabb)) {\n        //     return true;\n        // }\n    }\n    return false;\n}\n\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Lines3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam) {\n    return false;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!PointsPrimitive | PointsPrimitive} vertex positions.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n */\nexport function intersectAABB3Positions3(aabb: FloatArrayParam, positions: FloatArrayParam) {\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xmax = aabb[3];\n    const ymax = aabb[4];\n    const zmax = aabb[5];\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        const x = positions[i];\n        if (xmin <= x && x <= xmax) {\n            const y = positions[i + 1];\n            if (ymin <= y && y <= ymax) {\n                const z = positions[i + 2];\n                if (zmin <= z && z <= zmax) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Tets if the given 3D AABB contains the given 3D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4] &&\n        aabb[2] <= p[2] && p[2] <= aabb[5]);\n}\n\n/**\n * Tets if the given 2D AABB contains the given 2D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4]);\n}","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fsvg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:20px;  height:270px\" src=\"media://images/3D-Cart.svg\"/>\n *\n * # xeokit RTC Coordinate Utilities\n *\n * ---\n *\n * ### *Math functions for working with RTC cartesian coordinates*\n *\n * ---\n *\n * * Math functions for working with relative-to-center (RTC) coordinate systems\n * * Used internally within {@link @xeokit/viewer!Viewer}\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/rtc\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as rtc from \"@xeokit/rtc\";\n *\n * const worldPos = [100000000000.0, 1000000000.0, 1000000000000.0];\n * const rtcCenter = [0,0,0];\n * const rtcPos = [0,0,0];\n *\n * rtc.worldToRTCPos(worldPos, rtcCenter, rtcPos);\n *\n * //..\n * ````\n *\n * @module @xeokit/rtc\n */\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createVec3, dotVec3, mulVec3Scalar, normalizeVec3, setMat4Translation, transformVec4} from \"@xeokit/matrix\";\nimport {getPositions3Center} from \"@xeokit/boundaries\";\n\n\nconst tempVec3a = createVec3();\n\n\nconst tempMat = new Float32Array(16);\nconst rtcCenterWorld = new Float64Array(4);\nconst rtcCenterView = new Float64Array(4);\n\n/**\n * Given a view matrix and a relative-to-center (RTC) coordinate origin, returns a view matrix\n * to transform RTC coordinates to View-space.\n */\nexport function createRTCViewMat(viewMat: FloatArrayParam, rtcCenter: FloatArrayParam, rtcViewMat: FloatArrayParam = tempMat): FloatArrayParam {\n    rtcCenterWorld[0] = rtcCenter[0];\n    rtcCenterWorld[1] = rtcCenter[1];\n    rtcCenterWorld[2] = rtcCenter[2];\n    rtcCenterWorld[3] = 1;\n    transformVec4(viewMat, rtcCenterWorld, rtcCenterView);\n    setMat4Translation(viewMat, rtcCenterView, rtcViewMat);\n    return rtcViewMat;\n}\n\n/**\n * Converts a World-space 3D position to RTC.\n *\n * Given a double-precision World-space position, returns a double-precision relative-to-center (RTC) center pos\n * and a single-precision offset fom that center.\n *\n * @param worldPos The World-space position.\n * @param rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param rtcPos Single-precision offset fom that center.\n */\nexport function worldToRTCPos(worldPos: FloatArrayParam, rtcCenter: FloatArrayParam, rtcPos: FloatArrayParam) {\n\n    const xHigh = Float32Array.from([worldPos[0]])[0];\n    const xLow = worldPos[0] - xHigh;\n\n    const yHigh = Float32Array.from([worldPos[1]])[0];\n    const yLow = worldPos[1] - yHigh;\n\n    const zHigh = Float32Array.from([worldPos[2]])[0];\n    const zLow = worldPos[2] - zHigh;\n\n    rtcCenter[0] = xHigh;\n    rtcCenter[1] = yHigh;\n    rtcCenter[2] = zHigh;\n\n    rtcPos[0] = xLow;\n    rtcPos[1] = yLow;\n    rtcPos[2] = zLow;\n}\n\n/**\n * Converts a World-space 3D position to RTC.\n *\n * Given a double-precision World-space position, returns a double-precision relative-to-center (RTC) center.\n *\n * @param worldCenter The World-space position.\n * @param rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param [cellSize=200] The size of each coordinate cell within the RTC coordinate system.\n */\nexport function worldToRTCCenter(worldCenter: FloatArrayParam, rtcCenter: FloatArrayParam, cellSize = 200) {\n    rtcCenter[0] = Math.round(worldCenter[0] / cellSize) * cellSize;\n    rtcCenter[1] = Math.round(worldCenter[1] / cellSize) * cellSize;\n    rtcCenter[2] = Math.round(worldCenter[2] / cellSize) * cellSize;\n    return rtcCenter;\n}\n\n/**\n * Converts a flat array of double-precision positions to RTC positions.\n *\n * Returns the RTC positions, along with a computed RTC center for those positions.\n *\n * When computing the RTC position, this function uses a modulus operation to ensure that, whenever possible,\n * identical RTC positions are reused for different positions arrays.\n *\n * @param worldPositions Flat array of World-space 3D positions.\n * @param rtcPositions Outputs the computed flat array of 3D RTC positions.\n * @param rtcCenter Outputs the computed double-precision relative-to-center (RTC) center pos.\n * @param [cellSize=200] The size of each coordinate cell within the RTC coordinate system.\n * @returns ````True```` if the positions actually needed conversion to RTC, else ````false````. When\n * ````false````, we can safely ignore the data returned in ````rtcPositions```` and ````rtcCenter````,\n * since ````rtcCenter```` will equal ````[0,0,0]````, and ````rtcPositions```` will contain identical values to ````positions````.\n */\nexport function worldToRTCPositions(worldPositions: FloatArrayParam, rtcPositions: FloatArrayParam, rtcCenter: FloatArrayParam, cellSize = 200): boolean {\n\n    const center = getPositions3Center(worldPositions, tempVec3a);\n\n    const rtcCenterX = Math.round(center[0] / cellSize) * cellSize;\n    const rtcCenterY = Math.round(center[1] / cellSize) * cellSize;\n    const rtcCenterZ = Math.round(center[2] / cellSize) * cellSize;\n\n    for (let i = 0, len = worldPositions.length; i < len; i += 3) {\n        rtcPositions[i + 0] = worldPositions[i + 0] - rtcCenterX;\n        rtcPositions[i + 1] = worldPositions[i + 1] - rtcCenterY;\n        rtcPositions[i + 2] = worldPositions[i + 2] - rtcCenterZ;\n    }\n\n    rtcCenter[0] = rtcCenterX;\n    rtcCenter[1] = rtcCenterY;\n    rtcCenter[2] = rtcCenterZ;\n\n    const rtcNeeded = (rtcCenter[0] !== 0 || rtcCenter[1] !== 0 || rtcCenter[2] !== 0);\n\n    return rtcNeeded;\n}\n\n/**\n * Converts an RTC 3D position to World-space.\n *\n * @param rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param rtcPos Single-precision offset fom that center.\n * @param worldPos The World-space position.\n */\nexport function rtcToWorldPos(rtcCenter: FloatArrayParam, rtcPos: FloatArrayParam, worldPos: FloatArrayParam): FloatArrayParam {\n    worldPos[0] = rtcCenter[0] + rtcPos[0];\n    worldPos[1] = rtcCenter[1] + rtcPos[1];\n    worldPos[2] = rtcCenter[2] + rtcPos[2];\n    return worldPos;\n}\n\n/**\n * Given a 3D plane defined by distance from origin and direction, and an RTC center position,\n * return a plane position that is relative to the RTC center.\n *\n * @param dist\n * @param dir\n * @param rtcCenter\n * @param rtcPlanePos\n * @returns {*}\n */\nexport function getPlaneRTCPos(dist: number, dir: FloatArrayParam, rtcCenter: FloatArrayParam, rtcPlanePos: FloatArrayParam) {\n    const rtcCenterToPlaneDist = dotVec3(dir, rtcCenter) + dist;\n    const dirNormalized = normalizeVec3(dir, tempVec3a);\n    mulVec3Scalar(dirNormalized, -rtcCenterToPlaneDist, rtcPlanePos);\n    return rtcPlanePos;\n}\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fmath.svg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * # xeokit Curves Math Library\n *\n * ---\n *\n * ### *Spline curve math functions*\n *\n * ---\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/curves\n * ````\n *\n * ````javascript\n * import * as curves from \"@xeokit/curves\";\n *\n * //..\n * ````\n *\n * @module @xeokit/curves\n */\n\n/**\n * Finds a tangent to a quadratic Bézier curve.\n *\n * @param t\n * @param p0\n * @param p1\n * @param p2\n */\nexport function tangentQuadraticBézier(t: number, p0: number, p1: number, p2: number): number {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n}\n\n/**\n * Finds a tangent to a quadratic Bézier curve.\n *\n * @param t\n * @param p0\n * @param p1\n * @param p2\n */\nexport function tangentQuadraticBézier3(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    return -3 * p0 * (1 - t) * (1 - t) +\n        3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\n        6 * t * p2 * (1 - t) - 3 * t * t * p2 +\n        3 * t * t * p3;\n}\n\n/**\n * Finds a tangent to a spline.\n * @param t\n */\nexport function tangentSpline(t: number) {\n    const h00 = 6 * t * t - 6 * t;\n    const h10 = 3 * t * t - 4 * t + 1;\n    const h01 = -6 * t * t + 6 * t;\n    const h11 = 3 * t * t - 2 * t;\n    return h00 + h10 + h01 + h11;\n}\n\n/**\n * Catmull-Rom interpolation on a curve.\n * @param p0\n * @param p1\n * @param p2\n * @param p3\n * @param t\n */\nexport function catmullRomInterpolate(p0: number, p1: number, p2: number, p3: number, t: number): number {\n    const v0 = (p2 - p0) * 0.5;\n    const v1 = (p3 - p1) * 0.5;\n    const t2 = t * t;\n    const t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\n// Bézier Curve formulii from http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n// Quad Bézier Functions\n\n/**\n * Quad Bézier curve function b2p0\n *\n * @param t\n * @param p\n */\nexport function b2p0(t: number, p: number): number {\n    const k = 1 - t;\n    return k * k * p;\n\n}\n\n/**\n * Quad Bézier curve function b2p1\n * @param t\n * @param p\n */\nexport function b2p1(t: number, p: number): number {\n    return 2 * (1 - t) * t * p;\n}\n\n/**\n * Quad Bézier curve function b2p2\n * @param t\n * @param p\n */\nexport function b2p2(t: number, p: number): number {\n    return t * t * p;\n}\n\n/**\n * Quad Bézier curve function b2\n * @param t\n * @param p0\n * @param p1\n * @param p2\n */\nexport function b2(this: any, t: number, p0: number, p1: number, p2: number): number {\n    return this.b2p0(t, p0) + this.b2p1(t, p1) + this.b2p2(t, p2);\n}\n\n// Cubic Bézier Functions\n\n/**\n * Cubic Bézier curve function b3p0\n * @param t\n * @param p\n */\nexport function b3p0(t: number, p: number): number {\n    const k = 1 - t;\n    return k * k * k * p;\n}\n\n/**\n * Cubic Bézier curve function b3p1\n * @param t\n * @param p\n */\nexport function b3p1(t: number, p: number): number {\n    const k = 1 - t;\n    return 3 * k * k * t * p;\n}\n\n/**\n * Cubic Bézier curve function b3p2\n * @param t\n * @param p\n */\nexport function b3p2(t: number, p: number): number {\n    const k = 1 - t;\n    return 3 * k * t * t * p;\n}\n\n/**\n * Cubic Bézier curve function b3p3\n * @param t\n * @param p\n */\nexport function b3p3(t: number, p: number) {\n    return t * t * t * p;\n}\n\n/**\n * Cubic Bézier curve function b3\n * @param t\n * @param p0\n * @param p1\n * @param p2\n * @param p3\n */\nexport function b3(this: any, t: number, p0: number, p1: number, p2: number, p3: number) {\n    return this.b3p0(t, p0) + this.b3p1(t, p1) + this.b3p2(t, p2) + this.b3p3(t, p3);\n}\n","import {EventDispatcher} from \"strongly-typed-events\";\nimport {EventEmitter} from \"@xeokit/core\";\n\n/**\n * The localization service for a {@link @xeokit/viewer!Viewer}.\n *\n * See {@link \"@xeokit/localization\"} for usage.\n */\nclass LocaleService {\n\n    /**\n     * Emits an event each time the locale translations have updated.\n     *\n     * @event\n     */\n    readonly onUpdated: EventEmitter<LocaleService, string>;\n    #messages: { [key: string]: any };\n    #locales: string[];\n    #locale: string = \"en\";\n\n    /**\n     * Constructs a LocaleService.\n     *\n     * @param cfg LocaleService configuration\n     * @param cfg.messages Set of locale translations\n     * @param cfg.locale Initial locale\n     */\n    constructor(cfg: {\n        messages?: any,\n        locale?: string\n    } = {\n        messages: {},\n        locale: \"\"\n    }) {\n        this.onUpdated = new EventEmitter(new EventDispatcher<LocaleService, string>());\n        this.messages = cfg.messages;\n        this.locale = cfg.locale;\n    }\n\n    /**\n     * Replaces the current set of locale translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * Does not change the current locale.\n     *\n     * ## Usage\n     *\n     * ````javascript\n     * viewer.localeService.setMessages({\n     *     messages: {\n     *         \"en\": { // English\n     *             \"NavCube\": {\n     *                 \"front\": \"Front\",\n     *                 \"back\": \"Back\",\n     *                 \"top\": \"Top\",\n     *                 \"bottom\": \"Bottom\",\n     *                 \"left\": \"Left\",\n     *                 \"right\": \"Right\"\n     *             }\n     *         },\n     *         \"mi\": { // Māori\n     *             \"NavCube\": {\n     *                 \"front\": \"Mua\",\n     *                 \"back\": \"Tuarā\",\n     *                 \"top\": \"Runga\",\n     *                 \"bottom\": \"Raro\",\n     *                 \"left\": \"Mauī\",\n     *                 \"right\": \"Tika\"\n     *             }\n     *         }\n     *    }\n     * });\n     * ````\n     *\n     * @param messages The new translations.\n     */\n    set messages(messages: { [key: string]: any }) {\n        this.#messages = messages || {};\n        this.#locales = Object.keys(this.#messages);\n        this.onUpdated.dispatch(this, this.#locale);\n    }\n\n    /**\n     * Gets the list of available locales.\n     *\n     * These are derived from the currently configured set of translations.\n     *\n     * @returns The list of available locales.\n     */\n    get locales(): string[] {\n        return this.#locales;\n    }\n\n    /**\n     * Gets the current locale.\n     *\n     * @returns {String} The current locale.\n     */\n    get locale(): string {\n        return this.#locale;\n    }\n\n    /**\n     * Sets the current locale.\n     *\n     * * Fires an \"updated\" event when done.\n     * * The given locale does not need to be in the list of available locales returned by {@link LocaleService.locales}, since\n     * this method assumes that you may want to load the locales at a later point.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * We can then get translations for the locale, if translations have been loaded for it, via {@link LocaleService.translate} and {@link LocaleService.translatePlurals}.\n     *\n     * @param locale The new current locale.\n     */\n    set locale(locale: string|undefined) {\n        locale = locale || \"de\";\n        if (this.#locale === locale) {\n            return;\n        }\n        this.#locale = locale;\n        this.onUpdated.dispatch(this, this.#locale);\n    }\n\n    /**\n     * Loads a new set of locale translations, adding them to the existing translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * Does not change the current locale.\n     *\n     * ## Usage\n     *\n     * ````javascript\n     * viewer.localeService.loadMessages({\n     *     \"jp\": { // Japanese\n     *         \"NavCube\": {\n     *             \"front\": \"前部\",\n     *             \"back\": \"裏\",\n     *             \"top\": \"上\",\n     *             \"bottom\": \"底\",\n     *             \"left\": \"左\",\n     *             \"right\": \"右\"\n     *         }\n     *     }\n     * });\n     * ````\n     *\n     * @param messages The new translations.\n     */\n    loadMessages(messages: { [key: string]: any } = {}) {\n        for (let locale in messages) {\n            this.#messages[locale] = messages[locale];\n        }\n        this.messages = this.#messages;\n    }\n\n    /**\n     * Clears all locale translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Does not change the current locale.\n     * * Automatically refreshes any plugins that depend on the translations, which will cause those\n     * plugins to fall back on their internal hard-coded text values, since this method removes all\n     * our translations.\n     */\n    clearMessages() {\n        this.messages = {};\n    }\n\n    /**\n     * Translates the given string according to the current locale.\n     *\n     * Returns null if no translation can be found.\n     *\n     * @param msg String to translate.\n     * @param args Extra parameters.\n     * @returns  Translated string if found, else null.\n     */\n    translate(msg: string, args?: any): string | null {\n        const localeMessages = this.#messages[this.#locale];\n        if (!localeMessages) {\n            return null;\n        }\n        const localeMessage = resolvePath(msg, localeMessages);\n        if (localeMessage) {\n            if (args) {\n                return vsprintf(localeMessage, args);\n            }\n            return localeMessage;\n        }\n        return null;\n    }\n\n    /**\n     * Translates the given phrase according to the current locale.\n     *\n     * Returns null if no translation can be found.\n     *\n     * @param msg Phrase to translate.\n     * @param count The plural number.\n     * @param [args] Extra parameters.\n     * @returns String|null Translated string if found, else null.\n     */\n    translatePlurals(msg: string, count: number, args: any): string | null {\n        const localeMessages = this.#messages[this.#locale];\n        if (!localeMessages) {\n            return null;\n        }\n        let localeMessage = resolvePath(msg, localeMessages);\n        count = parseInt(\"\" + count, 10);\n        if (count === 0) {\n            localeMessage = localeMessage.zero;\n        } else {\n            localeMessage = (count > 1) ? localeMessage.other : localeMessage.one;\n        }\n        if (!localeMessage) {\n            return null;\n        }\n        localeMessage = vsprintf(localeMessage, [count]);\n        if (args) {\n            localeMessage = vsprintf(localeMessage, args);\n        }\n        return localeMessage;\n    }\n}\n\nfunction resolvePath(key: string, json: any) {\n    if (json[key]) {\n        return json[key];\n    }\n    const parts = key.split(\".\");\n    let obj = json;\n    for (let i = 0, len = parts.length; obj && (i < len); i++) {\n        const part = parts[i];\n        obj = obj[part];\n    }\n    return obj;\n}\n\nfunction vsprintf(msg: string, args: any = []) {\n    return msg.replace(/\\{\\{|\\}\\}|\\{(\\d+)\\}/g, function (m, n) {\n        if (m === \"{{\") {\n            return \"{\";\n        }\n        if (m === \"}}\") {\n            return \"}\";\n        }\n        return args[n];\n    });\n}\n\nexport {LocaleService};","import type {PropertySet} from \"./PropertySet\";\nimport type {PropertyParams} from \"./PropertyParams\";\n\n/**\n * A property in a {@link PropertySet}.\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class Property {\n\n    /**\n     * The PropertySet to which this Property belongs.\n     */\n    public readonly propertySet: PropertySet;\n\n    /**\n     * The name of this property.\n     */\n    public readonly name: string;\n\n    /**\n     * The value of this property.\n     */\n    public readonly value: any;\n\n    /**\n     * The type of this property.\n     */\n    public readonly type?: string | number;\n\n    /**\n     * The type of this property's value.\n     */\n    public readonly valueType?: string | number;\n\n    /**\n     * Informative text to explain the property.\n     */\n    public readonly description?: string;\n\n    /**\n     * @private\n     * @ignore\n     */\n    constructor(\n        propertySet: PropertySet,\n        propertyCfg: PropertyParams) {\n        this.propertySet = propertySet;\n        this.name = propertyCfg.name;\n        this.type = propertyCfg.type\n        this.value = propertyCfg.value\n        this.valueType = propertyCfg.valueType;\n        this.description = propertyCfg.description;\n    }\n}\n","import {Property} from \"./Property\";\nimport type {DataModel} from \"./DataModel\";\nimport type {PropertySetParams} from \"./PropertySetParams\";\n\n/**\n * A set of {@link Property | Properties} in a {@link @xeokit/data!DataModel | DataModel}.\n *\n * * Created with {@link DataModel.createPropertySet | DataModel.createPropertySet}\n * * Stored in {@link Data.propertySets | Data.propertySets} and {@link DataModel.propertySets | Data.propertySets}\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class PropertySet {\n\n    /**\n     * The DataModels to which this PropertySet belongs.\n     */\n    public readonly models: DataModel[];\n\n    /**\n     * Unique ID.\n     *\n     * PropertySet instances are registered by this ID in {@link Data.propertySets | Data.propertySets}\n     * and {@link DataModel.propertySets | DataModel.propertySets}.\n     */\n    public readonly id: string;\n\n    /**\n     * ID of the corresponding object within the originating system, if any.\n     */\n    public readonly originalSystemId?: string;\n\n    /**\n     * Human-readable name of this PropertySet.\n     */\n    public readonly name: string;\n\n    /**\n     * Type of this PropertySet.\n     */\n    public readonly type: string;\n\n    /**\n     * Properties within this PropertySet.\n     */\n    public readonly properties: Property[];\n\n    /**\n     * @private\n     */\n    constructor(\n        dataModel: DataModel,\n        propertySetCfg: PropertySetParams) {\n        this.models = [dataModel];\n        this.id = propertySetCfg.id;\n        this.name = propertySetCfg.name;\n        this.type = propertySetCfg.type;\n        this.properties = [];\n        if (propertySetCfg.properties) {\n            for (let i = 0, len = propertySetCfg.properties.length; i < len; i++) {\n                const property = new Property(this, propertySetCfg.properties[i]);\n                this.properties.push(property);\n            }\n        }\n    }\n}\n","import type {PropertySet} from \"./PropertySet\";\nimport type {DataModel} from \"./DataModel\";\nimport type {Relationship} from \"./Relationship\";\nimport type {Data} from \"./Data\";\n\n/**\n * An object in a {@link @xeokit/data!DataModel}.\n *\n * * Created with {@link DataModel.createObject | DataModel.createObject}\n * * Stored in {@link Data.objects | Data.objects}, {@link Data.rootObjects | Data.rootObjects}, {@link Data.objectsByType | Data.objectsByType}, {@link DataModel.objects | Data.objects}, {@link DataModel.rootObjects | Data.rootObjects}\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class DataObject {\n\n    /**\n     *  {@link Data} that contains this DataObject.\n     */\n    public data: Data;\n\n    /**\n     * {@link DataModel | DataModels} that share this DataObject.\n     */\n    public models: DataModel[];\n\n    /**\n     * Globally-unique ID.\n     *\n     * DataObjects are stored by ID in {@link Data.objects | Data.objects}, {@link Data.rootObjects | Data.rootObjects}, {@link Data.objectsByType | Data.objectsByType} and {@link DataModel.rootObjects | Data.rootObjects}.\n     */\n    public readonly id: string;\n\n    /**\n     * Human-readable name.\n     */\n    public readonly name?: string;\n\n    /**\n     * DataObject's type.\n     */\n    public readonly type: number;\n\n    /**\n     * {@link PropertySet | PropertySets} referenced by this DataObject.\n     */\n    public readonly propertySets?: PropertySet[];\n\n    /**\n     * The {@link Relationship | Relations} in which this DataObject is the {@link Relationship.relating} participant.\n     *\n     * Each DataObject is mapped here by {@link Relationship.type | Relationship.type} and sub-mapped by {@link Relationship.relating | Relationship.relating}.\n     */\n    public readonly relating: {\n        [key: number]: Relationship[]\n    };\n\n    /**\n     * The {@link Relationship | Relationships} in which this DataObject is the {@link Relationship.related} participant.\n     *\n     * Each DataObject is mapped here by {@link Relationship.type | Relationship.type} and sub-mapped by {@link Relationship.related | Relationship.related}.\n     */\n    public readonly related: {\n        [key: number]: Relationship[]\n    };\n\n    /**\n     * @private\n     */\n    constructor(\n        data: Data,\n        model: DataModel,\n        id: string,\n        name: string,\n        type: number,\n        propertySets?: PropertySet[]) {\n\n        this.data = data;\n        this.models = [model];\n        this.id = id;\n        this.name = name;\n        this.type = type;\n        this.propertySets = propertySets || [];\n        this.related = {};\n        this.relating = {};\n    }\n}\n","import type {DataObject} from \"./DataObject\";\n\n/**\n * A one-to-one relationship between two {@link DataObject | DataObjects}.\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class Relationship {\n\n    /**\n     * The type of this Relationship.\n     *\n     * This can be any value that identifies the Relationship type within your DataModel.\n     */\n    readonly type: number;\n\n    /**\n     * The relating {@link DataObject} in this Relationship.\n     *\n     * This Relationship will be stored by {@link DataObject.type | DataObject.type}\n     * in the DataObject's {@link DataObject.relatedObject | DataObject.relatedObject} attribute.\n     */\n    readonly relatingObject: DataObject;\n\n    /**\n     * The related {@link DataObject} in this Relationship.\n     *\n     * This Relationship will be stored by {@link DataObject.type | DataObject.type} in\n     * the DataObject's {@link DataObject.relatingObject | DataObject.relatingObject} attribute.\n     */\n    readonly relatedObject: DataObject;\n\n    /**\n     * @private\n     * @ignore\n     */\n    constructor(type: number, relatingObject: DataObject, relatedObject: DataObject) {\n        this.type = type;\n        this.relatingObject = relatingObject;\n        this.relatedObject = relatedObject;\n    }\n}\n","import {Component, EventEmitter, SDKError} from \"@xeokit/core\";\nimport type {Data} from \"./Data\";\nimport {PropertySet} from \"./PropertySet\";\nimport {DataObject} from \"./DataObject\";\nimport type {DataModelParams} from \"./DataModelParams\";\nimport type {DataObjectParams} from \"./DataObjectParams\";\nimport type {PropertySetParams} from \"./PropertySetParams\";\nimport {Relationship} from \"./Relationship\";\nimport type {RelationshipParams} from \"./RelationshipParams\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {PropertyParams} from \"./PropertyParams\";\n\n/**\n * xeokit Semantic Data Model.\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class DataModel extends Component {\n\n    /**\n     * The Data that contains this DataModel.\n     */\n    public readonly data: Data;\n\n    /**\n     * Unique ID of this DataModel.\n     *\n     * DataModels are stored against this ID in {@link Data.models}.\n     */\n    declare public readonly id: string;\n\n    /**\n     * The project ID, if available.\n     */\n    public readonly projectId?: string | number;\n\n    /**\n     * The revision ID, if available.\n     */\n    public readonly revisionId?: string | number;\n\n    /**\n     * The model author, if available.\n     */\n    public readonly author?: string;\n\n    /**\n     * The date the model was created, if available.\n     */\n    public readonly createdAt?: string;\n\n    /**\n     * The application that created the model, if available.\n     */\n    public readonly creatingApplication?: string;\n\n    /**\n     * The model schema version, if available.\n     */\n    public readonly schema?: string;\n\n    /**\n     * The {@link PropertySet | PropertySets} in this DataModel, mapped to {@link PropertySet.id | PropertySet.id}.\n     *\n     * PropertySets have globally-unique IDs and will also be stored in {@link Data.propertySets | Data.propertySets}.\n     */\n    public readonly propertySets: { [key: string]: PropertySet };\n\n    /**\n     * The {@link DataObject | DataObjects} in this DataModel, mapped to {@link DataObject.id | DataObject.id}.\n     *\n     * DataObjects have globally-unique IDs and will also be stored in {@link Data.objects | Data.objects}.\n     */\n    public objects: { [key: string]: DataObject };\n\n    /**\n     * The root {@link DataObject | DataObjects} in this DataModel, mapped to {@link DataObject.id | DataObject.id}.\n     *\n     * * This is the set of DataObjects in this DataModel that are not the *related* participant in\n     * any {@link Relationship | Relationships}, where they have no incoming Relationships and\n     * their {@link DataObject.relating} property is empty.\n     */\n    public rootObjects: { [key: string]: DataObject };\n\n    /**\n     * The {@link DataObject | DataObjects} in this DataModel, mapped to {@link DataObject.type | DataObject.type},\n     * sub-mapped to {@link DataObject.id | DataObject.id}.\n     */\n    public objectsByType: { [key: string]: { [key: string]: DataObject } };\n\n    /**\n     * The {@link Relationship | Relationships} in this DataModel.\n     *\n     * * The Relationships can be between DataObjects in different DataModels, but always within the same Data.\n     */\n    public relationships: Relationship[];\n\n    /**\n     * The count of each type of {@link DataObject} in this DataModel, mapped to {@link DataObject.type | DataObject.type}.\n     */\n    public readonly typeCounts: { [key: string]: number };\n\n    /**\n     * Emits an event when the {@link @xeokit/data!DataModel} has been built.\n     *\n     * * The DataModel is built using {@link DataModel.build | DataModel.build}.\n     * * {@link DataModel.built | DataModel.built} indicates if the DataModel is currently built.\n     * * Don't create anything more in this DataModel once it's built.\n     *\n     * @event\n     */\n    public readonly onBuilt: EventEmitter<DataModel, null>;\n\n    /**\n     * Indicates if this DataModel has been built.\n     *\n     * * Set true by {@link DataModel.build | DataModel.build}.\n     * * Subscribe to updates using {@link DataModel.onBuilt | DataModel.onBuilt} and {@link Data.onModelCreated | Data.onModelCreated}.\n     */\n    built: boolean;\n\n    #destroyed: boolean;\n\n    /**\n     * @private\n     */\n    constructor(\n        data: Data,\n        id: string,\n        dataModelParams: DataModelParams,\n        options?: {\n            includeTypes?: string[],\n            excludeTypes?: string[],\n            globalizeObjectIds?: boolean\n        }) {\n\n        super(data);\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<DataModel, null>());\n\n        this.data = data;\n\n        this.id = id;\n        this.projectId = dataModelParams.projectId || \"\";\n        this.revisionId = dataModelParams.revisionId || \"\";\n        this.author = dataModelParams.author || \"\";\n        this.createdAt = dataModelParams.createdAt || \"\";\n        this.creatingApplication = dataModelParams.creatingApplication || \"\";\n        this.schema = dataModelParams.schema || \"\";\n        this.propertySets = {};\n        this.objects = {};\n        this.objectsByType = {};\n        this.relationships = [];\n        this.typeCounts = {};\n        this.rootObjects = {};\n        this.built = false;\n        this.#destroyed = false;\n\n        this.fromJSON(dataModelParams);\n    }\n\n    /**\n     * Adds the given components to this DataModel.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @param dataModelParams\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this DataModel has already been built.\n     * * If this DataModel has already been destroyed.\n     * * A duplicate PropertySet was already created for this DataModel.\n     * * A duplicate DataObject was already created in this DataModel.\n     * * DataObjects were not found for a Relationship.\n     */\n    fromJSON(dataModelParams: DataModelParams): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to add components to DataModel - DataModel already destroyed\");\n        }\n        if (this.built) {\n            throw new SDKError(\"Failed to add components to DataModel - DataModel already built\");\n        }\n        if (dataModelParams.propertySets) {\n            for (let i = 0, len = dataModelParams.propertySets.length; i < len; i++) {\n                this.createPropertySet(dataModelParams.propertySets[i]);\n            }\n        }\n        if (dataModelParams.objects) {\n            for (let i = 0, len = dataModelParams.objects.length; i < len; i++) {\n                this.createObject(dataModelParams.objects[i]);\n            }\n        }\n        if (dataModelParams.relationships) {\n            for (let i = 0, len = dataModelParams.relationships.length; i < len; i++) {\n                this.createRelationship(dataModelParams.relationships[i]);\n            }\n        }\n    }\n\n    /**\n     * Creates a new {@link PropertySet}.\n     *\n     * * Stores the new PropertySet in {@link DataModel.propertySets | DataModel.propertySets}\n     * and {@link Data.propertySets | Data.propertySets}.\n     * * Note that PropertySet IDs are globally unique. PropertySet instances are automatically reused and shared among DataModels\n     * when IDs given to {@link DataModel.createPropertySet | DataModel.createPropertySet} match existing PropertySet\n     * instances in the same Data.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     *  const propertySet = dataModel.createPropertySet({\n     *      id: \"myPropertySet\",\n     *      name: \"My properties\",\n     *      properties: [{\n     *          name: \"Weight\",\n     *          value: 5,\n     *          type: \"\",\n     *          valueType: \"\",\n     *          description: \"Weight of a thing\"\n     *      }, {\n     *          name: \"Height\",\n     *          value: 12,\n     *          type: \"\",\n     *          valueType: \"\",\n     *          description: \"Height of a thing\"\n     *      }]\n     * });\n     *\n     * if (propertySet instanceof SDKError) {\n     *     console.error(propertySet.message);\n     * } else {\n     *     // Success\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/data\"} for more usage info.\n     *\n     * @param propertySetCfg - PropertySet creation parameters.\n     * @returns *{@link PropertySet}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this DataModel has already been built.\n     * * If this DataModel has already been destroyed.\n     * * A PropertySet of the given ID was already created for this DataModel. While it's OK\n     * for multiple DataModels to *share* PropertySets with duplicate IDs between them, it's not permitted to\n     * create duplicate PropertySets within the same DataModel.\n     */\n    createPropertySet(propertySetCfg: PropertySetParams): PropertySet | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create PropertySet - DataModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"DataModel already built\");\n        }\n        if (this.propertySets[propertySetCfg.id]) {\n            return new SDKError(\"Failed to create PropertySet - PropertySet with same ID already created in this DataModel. It's OK to have duplicates shared between DataModels, but they must be unique within each DataModel.\")\n        }\n        let propertySet = this.data.propertySets[propertySetCfg.id];\n        if (propertySet) {\n            this.propertySets[propertySetCfg.id] = propertySet;\n            propertySet.models.push(this);\n            return propertySet;\n        }\n        propertySet = new PropertySet(this, propertySetCfg);\n        this.propertySets[propertySetCfg.id] = propertySet;\n        this.data.propertySets[propertySetCfg.id] = propertySet;\n        return propertySet;\n    }\n\n    /**\n     * Creates a new {@link DataObject}.\n     *\n     * * Stores the new {@link DataObject} in {@link DataModel.objects | DataModel.objects} and {@link Data.objects | Data.objects}.\n     * * Fires an event via {@link Data.onObjectCreated | Data.onObjectCreated}.\n     * * Note that DataObject IDs are globally unique. DataObject instances are automatically reused and shared among DataModels when\n     * IDs given to {@link DataModel.createObject | DataModel.createObject} match existing DataObject instances in the same\n     * Data. This feature is part of how xeokit supports [*federated data models*](/docs/pages/GLOSSARY.html#federated-models).\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const myDataObject = dataModel.createObject({\n     *     id: \"myDataObject\",\n     *     type: BasicEntity,     // @xeokit/datatypes!basicTypes\n     *     name: \"My Object\",\n     *     propertySetIds: [\"myPropertySet\"]\n     * });\n     *\n     * const myDataObject2 = dataModel.createObject({\n     *     id: \"myDataObject2\",\n     *     name: \"My Other Object\",\n     *     type: BasicEntity,\n     *     propertySetIds: [\"myPropertySet\"]\n     * });\n     *\n     * if (myDataObject instanceof SDKError) {\n     *     console.error(myDataObject.message);\n     *\n     * } else if (myDataObject2 instanceof SDKError) {\n     *     console.error(myDataObject2.message);\n     *\n     * } else { // Success\n     *     const gotMyDataObject = dataModel.objects[\"myDataObject\"];\n     *     const gotMyDataObjectAgain = data.objects[\"myDataObject\"];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/data\"} for more usage info.\n     *\n     * @param dataObjectParams - DataObject creation parameters.\n     * @returns *{@link DataObject}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this DataModel has already been built.\n     * * If this DataModel has already been destroyed.\n     * * A DataObject of the given ID was already created in this DataModel. While it's OK\n     * for multiple DataModels to *share* DataObjects with duplicate IDs between them, we're not permitted to\n     * create duplicate DataObjects within the same DataModel.\n     * * A specified PropertySet could not be found.\n     */\n    createObject(dataObjectParams: DataObjectParams): DataObject | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create DataObject - DataModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create DataObject - DataModel already built\");\n        }\n        const id = dataObjectParams.id;\n        if (this.objects[id]) {\n            return new SDKError(\"Failed to create DataObject - DataObject with same ID already created in this DataModel. It's OK to have duplicates shared between DataModels, but they must be unique within each DataModel.\")\n        }\n        const type = dataObjectParams.type;\n        let dataObject = this.data.objects[id];\n        if (!dataObject) {\n            const propertySets = [];\n            if (dataObjectParams.propertySetIds) {\n                for (let i = 0, len = dataObjectParams.propertySetIds.length; i < len; i++) {\n                    const propertySetId = dataObjectParams.propertySetIds[i];\n                    const propertySet = this.propertySets[propertySetId];\n                    if (!propertySet) {\n                        return new SDKError(`Failed to create DataObject - PropertySet not found: \"${propertySetId}\"`);\n                    } else {\n                        propertySets.push(propertySet);\n                    }\n                }\n            }\n            dataObject = new DataObject(this.data, this, id, dataObjectParams.name, dataObjectParams.type, propertySets);\n            this.objects[id] = dataObject;\n            this.data.objects[id] = dataObject;\n            if (!this.data.objectsByType[type]) {\n                this.data.objectsByType[type] = {};\n            }\n            this.data.objectsByType[type][id] = dataObject;\n            this.data.typeCounts[type] = (this.data.typeCounts[type] === undefined) ? 1 : this.data.typeCounts[type] + 1;\n            dataObject.models.push(this);\n            // if (dataObjectParams.relations) {\n            //     for (let relationType in dataObjectParams.relations) {\n            //         if (!dataObject.relating[relationType]) {\n            //             dataObject.relating[relationType] = [];\n            //         }\n            //         const relatedObjectIds = dataObjectParams.relations[relationType];\n            //         for (let j = 0, lenj = relatedObjectIds.length; j < lenj; j++) {\n            //             const relatedObjectId = relatedObjectIds[j];\n            //             const relatedObject = this.data.objects[relatedObjectId];\n            //             if (!relatedObject) {\n            //                 this.error(`[createObject] Can't create Relationship - DataObject not found: ${relatedObjectId}`);\n            //             } else {\n            //                 // @ts-ignore\n            //                 const relation = new Relationship(relationType, this, relatedObject);\n            //                 relatedObject.relating[relationType].push(relation);\n            //                 dataObject.related[relationType].push(relation);\n            //             }\n            //         }\n            //     }\n            // }\n            this.data.onObjectCreated.dispatch(this.data, dataObject);\n        } else {\n            this.objects[id] = dataObject;\n            this.data.objects[id] = dataObject;\n            if (!this.objectsByType[type]) {\n                this.objectsByType[type] = {};\n            }\n            this.objectsByType[type][id] = dataObject;\n            this.typeCounts[type] = (this.typeCounts[type] === undefined) ? 1 : this.typeCounts[type] + 1;\n            dataObject.models.push(this);\n        }\n        return dataObject;\n    }\n\n    /**\n     * Creates a new {@link Relationship} between two existing {@link DataObject | DataObjects}.\n     *\n     * * A Relationship involves a *relating* DataObject and a *related* DataObject.\n     * * The *relating* and *related* DataObjects can exist within different DataModels,\n     * as long as the DataModels both exist in the same {@link Data}. This feature is part of\n     * how xeokit supports the viewing of [*federated models*](/docs/pages/GLOSSARY.html#federated-models).\n     * * The new Relationship will be stored in\n     *   - {@link DataModel.relationships | DataModel.relationships},\n     *   - {@link DataObject.related | DataObject.related} on the *relating* DataObject, and\n     *   - {@link DataObject.relating | DataObject.relating} on the *related* DataObject.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const myRelationship = dataModel.createRelationship({\n     *     type: BasicAggregation,            // @xeokit/datatypes!basicTypes\n     *     relatingObjectId: \"myDataObject\",\n     *     relatedObjectId: \"myDataObject2\"\n     * });\n     *\n     * if (myRelationship instanceof SDKError) {\n     *     console.error(myRelationship.message);\n     *\n     * } else { // Success\n     *     const myDataObject = dataModel.objects[\"myDataObject\"];\n     *     const myDataObject2 = dataModel.objects[\"myDataObject2\"];\n     *\n     *     const gotMyRelationship = myDataObject.related[BasicAggregation][0];\n     *     const gotMyRelationshipAgain = myDataObject2.relating[BasicAggregation][0];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/data\"} for more usage info.\n     *\n     * @param relationshipParams - Relationship creation parameters.\n     * @returns *{@link Relationship}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this DataModel has already been built or destroyed.\n     * * The *relating* DataObject was not found in the {@link Data} that contains this DataModel.\n     * * The *related* DataObject was not found in the Data that contains this DataModel.\n     */\n    createRelationship(relationshipParams: RelationshipParams): Relationship | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create Relationship - DataModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create Relationship - DataModel already built\");\n        }\n        const relatingObject = this.data.objects[relationshipParams.relatingObjectId];\n        if (!relatingObject) {\n            return new SDKError(`Failed to create Relationship - relating DataObject not found: ${relationshipParams.relatingObjectId}`);\n        }\n        const relatedObject = this.data.objects[relationshipParams.relatedObjectId];\n        if (!relatedObject) {\n            return new SDKError(`Failed to create Relationship - related DataObject not found: ${relationshipParams.relatedObjectId}`);\n        }\n        const relation = new Relationship(relationshipParams.type, relatingObject, relatedObject);\n        if (!relatedObject.relating[relationshipParams.type]) {\n            relatedObject.relating[relationshipParams.type] = [];\n        }\n        relatedObject.relating[relationshipParams.type].push(relation);\n        if (!relatingObject.related[relationshipParams.type]) {\n            relatingObject.related[relationshipParams.type] = [];\n        }\n        relatingObject.related[relationshipParams.type].push(relation);\n        this.relationships.push(relation);\n        return relation;\n    }\n\n    /**\n     * Finalizes this DataModel, readying it for use.\n     *\n     * * Fires an event via {@link DataModel.onBuilt | DataModel.onBuilt} and {@link Data.onModelCreated | DataModel.onCreated}, to indicate to subscribers that\n     * the DataModel is complete and ready to use.\n     * * Sets {@link DataModel.built | DataModel.built} ````true````.\n     * * You can only call this method once on a DataModel.\n     * * Once built, no more components can be created in a DataModel.\n     *\n     * ````javascript\n     * dataModel.onBuilt.subscribe(()=>{\n     *     // Our DataModel is built and ready to use\n     * });\n     *\n     * data.onModelCreated.subscribe((dataModel)=>{\n     *     // Another way to subscribe to DataModel readiness\n     * });\n     *\n     * const result = dataModel.build();\n     *\n     * if (result instanceof SDKError) {\n     *     console.error(result.message);\n     * } else {\n     *     // Success\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @throws *{@link @xeokit/core!SDKError}*\n     * * If DataModel has already been built or destroyed.\n     */\n    build(): Promise<DataModel> {\n        return new Promise<DataModel>((resolve) => {\n            if (this.destroyed) {\n                throw new SDKError(\"Failed to build DataModel - DataModel already destroyed\");\n            }\n            if (this.built) {\n                throw new SDKError(\"Failed to build DataModel - DataModel already built\");\n            }\n            this.built = true;\n            this.onBuilt.dispatch(this, null);\n            resolve(this);\n        });\n    }\n\n    /**\n     * Gets this DataModel as JSON.\n     */\n    getJSON(): DataModelParams | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"DataModel already destroyed\");\n        }\n        const dataModelParams = <DataModelParams>{\n            id: this.id,\n            propertySets: [],\n            objects: [],\n            relationships: []\n        };\n        for (let id in this.propertySets) {\n            const propertySet = this.propertySets[id];\n            const propertySetParams = <PropertySetParams>{\n                id,\n                name: propertySet.name,\n                properties: [],\n                type: propertySet.type,\n                originalSystemId: propertySet.originalSystemId\n            };\n            for (let i = 0, len = propertySet.properties.length; i < len; i++) {\n                const property = propertySet.properties[i];\n                const propertyParams = <PropertyParams>{\n                    name: property.name,\n                    value: property.value,\n                    type: property.type,\n                    valueType: property.valueType,\n                    description: property.description\n                };\n                propertySetParams.properties.push(propertyParams);\n            }\n            dataModelParams.propertySets?.push(propertySetParams);\n        }\n        for (let id in this.objects) {\n            const object = this.objects[id];\n            const objectParams = <DataObjectParams>{\n                id,\n                type: object.type,\n                name: object.name,\n                propertySetIds: []\n            };\n            if (object.propertySets) {\n                for (let i = 0, len = object.propertySets.length; i < len; i++) {\n                    const propertySet = object.propertySets[i];\n                    objectParams.propertySetIds?.push(propertySet.id);\n                }\n            }\n            dataModelParams.objects?.push(objectParams);\n        }\n        for (let i = 0, len = this.relationships.length; i < len; i++) {\n            const relationship = this.relationships[i];\n            const relationParams = <RelationshipParams>{\n                type: relationship.type,\n                relatingObjectId: relationship.relatingObject.id,\n                relatedObjectId: relationship.relatedObject.id\n            };\n            dataModelParams.relationships?.push(relationParams);\n        }\n        return dataModelParams;\n    }\n\n    /**\n     * Destroys this DataModel.\n     *\n     * * Fires an event via {@link DataModel.onDestroyed | DataModel.onDestroyed} and {@link Data.onModelDestroyed | Data.onModelDestroyed}.\n     * * You can only call this method once on a DataModel.\n     * * Once destroyed, no more components can be created in a DataModel.\n     * * Does not matter if the DataModel has not yet been built.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this DataModel has already been destroyed.\n     */\n    destroy(): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to destroy DataModel - DataModel already destroyed\");\n        }\n        for (let id in this.objects) {\n            const dataObject = this.objects[id];\n            if (dataObject.models.length > 1) {\n                this.#removeObjectFromModels(dataObject);\n            } else {\n                delete this.data.objects[id];\n                const type = dataObject.type;\n                if ((--this.data.typeCounts[type]) === 0) {\n                    delete this.data.typeCounts[type];\n                    delete this.data.objectsByType[type];\n                    this.data.onObjectDestroyed.dispatch(this.data, dataObject);\n                    for (let type in dataObject.relating) {\n                        const relations = dataObject.relating[type];\n                        for (let i = 0, len = relations.length; i < len; i++) {\n                            const relation = relations[i];\n                            const related = relation.relatedObject;\n                            const list = related.relating[type];\n                            for (let j = 0, k = 0, lenj = list.length; j < lenj; j++) {\n                                if (list[k].relatingObject === dataObject) {\n                                    // Splice j from related.relating[type]\n                                    list[j] = list[j]\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // if (dataObject.parent) {\n            //     const objects = dataObject.parent.objects;\n            //     objects.length--;\n            //     let f = false;\n            //     for (let i = 0, len = objects.length; i < len; i++) {\n            //         if (f || (f = objects[i] === dataObject)) {\n            //             objects[i] = objects[i + 1];\n            //         }\n            //     }\n            // }\n        }\n        this.#destroyed = true;\n        this.onBuilt.clear();\n        super.destroy();\n    }\n\n    // #removePropertySetFromModels(dataObject: DataObject) {\n    //     for (let i = 0, len = dataObject.models.length; i < len; i++) {\n    //         if (dataObject.models[i] === this) {\n    //             dataObject.models = dataObject.models.splice(i, 1);\n    //             break;\n    //         }\n    //     }\n    // }\n\n    #removeObjectFromModels(dataObject: DataObject) {\n        for (let i = 0, len = dataObject.models.length; i < len; i++) {\n            if (dataObject.models[i] === this) {\n                dataObject.models = dataObject.models.splice(i, 1);\n                break;\n            }\n        }\n    }\n}\n\n","import {Component, EventEmitter, SDKError} from \"@xeokit/core\";\n\nimport {DataModel} from \"./DataModel\";\nimport type {DataObject} from \"./DataObject\";\nimport type {PropertySet} from \"./PropertySet\";\nimport type {DataModelParams} from \"./DataModelParams\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {SearchParams} from \"./SearchParams\";\n\n/**\n * An entity-relationship semantic data model.\n *\n * See {@link \"@xeokit/data\"} for usage.\n */\nexport class Data extends Component {\n\n    /**\n     * The {@link @xeokit/data!DataModel | DataModels} belonging to this Data, each keyed to\n     * its {@link @xeokit/data!DataModel.id | DataModel.id}.\n     */\n    public readonly models: { [key: string]: DataModel };\n\n    /**\n     * The {@link PropertySet | PropertySets} belonging to this Data, mapped to {@link PropertySet.id | PropertySet.id}.\n     */\n    public readonly propertySets: { [key: string]: PropertySet };\n\n    /**\n     * The {@link DataObject | DataObjects} in this Data, mapped to {@link DataObject.id | DataObject.id}.\n     */\n    public readonly objects: { [key: string]: DataObject };\n\n    /**\n     * The root {@link DataObject | DataObjects} belonging to this Data, each keyed to its {@link DataObject.id | DataObject.id}.\n     *\n     * * This is the set of DataObjects in the DataModels within this Data that are not the *related* participant in\n     * any {@link Relationship | Relationships}, where they have no incoming Relationships and\n     * their {@link DataObject.relating} property is empty.\n     */\n    public readonly rootObjects: { [key: string]: DataObject };\n\n    /**\n     * The {@link DataObject | DataObjects} belonging to this Data, each map keyed to {@link DataObject.type | DataObject.type},\n     * containing {@link DataObject | DataObjects} keyed to {@link DataObject.id | DataObject.id}.\n     */\n    public readonly objectsByType: { [key: string]: { [key: string]: DataObject } };\n\n    /**\n     * Tracks number of {@link DataObject | DataObjects} of each type in this Data.\n     */\n    public readonly typeCounts: { [key: string]: number };\n\n    /**\n     * Emits an event each time a {@link @xeokit/data!DataModel} has been created in this Data.\n     *\n     * @event\n     */\n    public readonly onModelCreated: EventEmitter<Data, DataModel>;\n\n    /**\n     * Emits an event each time a {@link @xeokit/data!DataModel} has been destroyed within this Data.\n     *\n     * @event\n     */\n    public readonly onModelDestroyed: EventEmitter<Data, DataModel>;\n\n    /**\n     * Emits an event each time a {@link DataObject} is created within this Data.\n     *\n     * @event\n     */\n    public readonly onObjectCreated: EventEmitter<Data, DataObject>;\n\n    /**\n     * Emits an event each time a {@link DataObject} is destroyed within this Data.\n     *\n     * @event\n     */\n    public readonly onObjectDestroyed: EventEmitter<Data, DataObject>;\n\n    /**\n     * Creates a new Data.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     */\n    constructor() {\n\n        super(null, {});\n\n        this.models = {};\n        this.propertySets = {};\n        this.objects = {};\n        this.rootObjects = {};\n        this.objectsByType = {};\n        this.typeCounts = {};\n\n        this.onModelCreated = new EventEmitter(new EventDispatcher<Data, DataModel>());\n        this.onModelDestroyed = new EventEmitter(new EventDispatcher<Data, DataModel>());\n        this.onObjectCreated = new EventEmitter(new EventDispatcher<Data, DataObject>());\n        this.onObjectDestroyed = new EventEmitter(new EventDispatcher<Data, DataObject>());\n    }\n\n    /**\n     * Creates a new {@link @xeokit/data!DataModel} in this Data.\n     *\n     * Remember to call {@link DataModel.build | DataModel.build} when you've finished building or loading the DataModel. That will\n     * fire events via {@link Data.onModelCreated | Data.onModelCreated} and {@link DataModel.onBuilt | DataModel.onBuilt}, to\n     * indicate to any subscribers that the DataModel is built and ready for use.\n     *\n     * Note that while we're building/loading the SceneModel, each call that we make to {@link DataModel.createObject | DataModel.createObject}\n     * will create a new {@link DataObject}\n     * in {@link Data.objects | Data.objects} and {@link DataModel.objects | DataModel.objects}, and will also fire an event\n     * via {@link Data.onObjectCreated | Data.onObjectCreated}. However,\n     * only when we've received the {@link Data.onModelCreated | Data.onModelCreated} and {@link DataModel.onBuilt | DataModel.onBuilt}\n     * events can we actually consider the DataModel to be fully constructed.\n     *\n     * See {@link \"@xeokit/data\"} for more details on usage.\n     *\n     * @param  dataModelParams Creation parameters for the new {@link @xeokit/data!DataModel}.\n     * @param [options] Options for creating the {@link @xeokit/data!DataModel}.\n     * @param [options.includeTypes] When provided, only create {@link DataObject | DataObjects} with types in this list.\n     * @param  [options.excludeRelating] When provided, never create {@link DataObject | DataObjects} with types in this list.\n     * @returns {@link DataModel}\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Data has already been destroyed.\n     * * A DataModel with the given ID already exists in this Data.\n     */\n    createModel(\n        dataModelParams: DataModelParams,\n        options?: {\n            includeRelating?: string[],\n            excludeRelating?: string[],\n        }\n    ): DataModel | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Data already destroyed\");\n        }\n        let id = dataModelParams.id;\n        if (this.models[id]) {\n            return new SDKError(`DataModel already created in this Data: ${id}`);\n        }\n        // @ts-ignore\n        const dataModel = new DataModel(this, id, dataModelParams, options);\n        this.models[dataModel.id] = dataModel;\n        dataModel.onDestroyed.one(() => { // DataModel#destroy() called\n            delete this.models[dataModel.id];\n            this.onModelDestroyed.dispatch(this, dataModel);\n        });\n        dataModel.onBuilt.one(() => { // DataModel#build() called\n            this.onModelCreated.dispatch(this, dataModel);\n        });\n        return dataModel;\n    }\n\n    /**\n     * Gets the {@link DataObject.id}s of the {@link DataObject | DataObjects} that have the given {@link DataObject.type}.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @param type The type.\n     * @returns {string[]}\n     * * Array of {@link DataObject.id}s on success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Data has already been destroyed.\n     */\n    getObjectIdsByType(type: string): string[] | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Data already destroyed\");\n        }\n        const objects = this.objectsByType[type];\n        return objects ? Object.keys(objects) : [];\n    }\n\n    /**\n     * Finds {@link DataObject | DataObjects} using a customized depth-first traversal.\n     *\n     * Usually we use this method to recursively find DataObjects of specific {@link DataObject.type | types} within\n     * a hierarchy.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @param searchParams Search parameters.\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Data has already been destroyed.\n     * * The specified starting DataObject was not found in this Data.\n     * * The specified starting DataObject is contained in a different Data than this one.\n     */\n    searchObjects(searchParams: SearchParams): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Data already destroyed\");\n        }\n        const includeObjects = (searchParams.includeObjects && searchParams.includeObjects.length > 0) ? arrayToMap(searchParams.includeObjects) : null;\n        const excludeObjects = (searchParams.excludeObjects && searchParams.excludeObjects.length > 0) ? arrayToMap(searchParams.excludeObjects) : null;\n        const includeRelating = (searchParams.includeRelating && searchParams.includeRelating.length > 0) ? arrayToMap(searchParams.includeRelating) : null;\n        const excludeRelating = (searchParams.excludeRelating && searchParams.excludeRelating.length > 0) ? arrayToMap(searchParams.excludeRelating) : null;\n\n        function visit(dataObject: DataObject, depth: number) {\n            if (!dataObject) {\n                return;\n            }\n            let includeObject = true;\n            if (excludeObjects && excludeObjects[dataObject.type]) {\n                includeObject = false;\n            } else { // @ts-ignore\n                if (includeObjects && (!includeObjects[dataObject.type])) {\n                    includeObject = false;\n                }\n            }\n            if (depth === 0 && searchParams.includeStart === false) {\n                includeObject = false;\n            }\n            if (includeObject) {\n                if (searchParams.resultObjectIds) {\n                    searchParams.resultObjectIds.push(dataObject.id);\n                } else if (searchParams.resultObjects) {\n                    searchParams.resultObjects.push(dataObject);\n                } else if (searchParams.resultCallback) {\n                    if (searchParams.resultCallback(dataObject)) {\n                    }\n                }\n            }\n            const related = dataObject.related;\n            for (let type in related) {\n                const relations = related[type];\n                if (relations) {\n                    for (let i = 0, len = relations.length; i < len; i++) {\n                        let includeRelation = true;\n                        if (excludeRelating && excludeRelating[dataObject.type]) {\n                            includeRelation = false;\n                        } else {\n                            if (includeRelating && (!includeRelating[dataObject.type])) {\n                                includeRelation = false;\n                            }\n                        }\n                        if (includeRelation) {\n                            visit(relations[i].relatedObject, depth + 1);\n                        }\n                    }\n                }\n            }\n        }\n\n        const depth = 0;\n        if (searchParams.startObjectId) {\n            const startObject = this.objects[searchParams.startObjectId];\n            if (!startObject) {\n                return new SDKError(`Failed to search DataObjects - starting DataObject not found in Data: \"${searchParams.startObjectId}\"`);\n            }\n            visit(startObject, depth);\n        } else if (searchParams.startObject) {\n            if (searchParams.startObject.data != this) {\n                return new SDKError(`Failed to search DataObjects - starting DataObject not in same Data: \"${searchParams.startObjectId}\"`);\n            }\n            visit(searchParams.startObject, depth + 1);\n        } else {\n            for (let id in this.rootObjects) {\n                visit(this.rootObjects[id], depth + 1);\n            }\n        }\n    }\n\n    /**\n     * Destroys all contained {@link DataModel | DataModels}.\n     *\n     * * Fires {@link Data.onModelDestroyed | Data.onModelDestroyed} and {@link DataModel.onDestroyed | DataModel.onDestroyed}\n     * for each existing DataModel in this Data.\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Data has already been destroyed.\n     */\n    clear(): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Data already destroyed\");\n        }\n        for (let id in this.models) {\n            this.models[id].destroy();\n        }\n    }\n\n    /**\n     * Destroys this Data and all contained {@link DataModel | DataModels}.\n     *\n     * * Fires {@link Data.onModelDestroyed | Data.onModelDestroyed} and {@link DataModel.onDestroyed | DataModel.onDestroyed}\n     * for each existing DataModels in this Data.\n     * * Unsubscribes all subscribers to {@link Data.onModelCreated | Data.onModelCreated}, {@link Data.onModelDestroyed | Data.onModelDestroyed}, {@link DataModel.onDestroyed | DataModel.onDestroyed}\n     *\n     * See {@link \"@xeokit/data\"} for usage.\n     *\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Data has already been destroyed.\n     */\n    destroy(): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Data already destroyed\");\n        }\n        this.clear();\n        this.onModelCreated.clear();\n        this.onModelDestroyed.clear();\n        super.destroy();\n    }\n}\n\nfunction arrayToMap(array: any[]): { [key: string]: any } {\n    const map: { [key: string]: any } = {};\n    for (let i = 0, len = array.length; i < len; i++) {\n        map[array[i]] = true;\n    }\n    return map;\n}\n\n","import type {IntArrayParam} from \"@xeokit/math\";\nimport type {GeometryBucketParams} from \"./GeometryBucketParams\";\n\n/**\n * A geometry bucket within {@link @xeokit/scene!Geometry.geometryBuckets | Geometry.geometryBuckets}.\n *\n * See usage in:\n *\n * * [@xeokit/scene](/docs/modules/_xeokit_scene.html)\n * * [@xeokit/viewer](/docs/modules/_xeokit_viewer.html)\n */\nexport class GeometryBucket {\n\n    /**\n     * GeometryBucket's 3D vertex positions, quantized as 16-bit integers.\n     *\n     * Internally, the Viewer dequantizes these with {@link @xeokit/scene!Geometry.positionsDecompressMatrix}.\n     *\n     * Vertex positions are required for all primitive types.\n     */\n    positionsCompressed: IntArrayParam;\n\n    /**\n     * GeometryBucket's UV coordinates, quantized as 16-bit integers.\n     *\n     * Internally, the Viewer de-quantizes these with {@link @xeokit/scene!Geometry.uvsDecompressMatrix}.\n     */\n    uvsCompressed?: IntArrayParam;\n\n    /**\n     * GeometryBucket's vertex RGB colors, quantized as 8-bit integers.\n     */\n    colorsCompressed?: IntArrayParam;\n\n    /**\n     * GeometryBucket's primitive indices.\n     *\n     * This is either an array of 8-bit, 16-bit or 32-bit values.\n     */\n    indices?: IntArrayParam;\n\n    /**\n     * GeometryBucket's edge indices.\n     *\n     * This is either an array of 8-bit, 16-bit or 32-bit values.\n     */\n    edgeIndices?: IntArrayParam;\n\n    constructor(geometryBucketParams: GeometryBucketParams) {\n        this.positionsCompressed = geometryBucketParams.positionsCompressed;\n        this.uvsCompressed = geometryBucketParams.uvsCompressed;\n        this.colorsCompressed = geometryBucketParams.colorsCompressed;\n        this.indices = geometryBucketParams.indices;\n        this.edgeIndices = geometryBucketParams.edgeIndices;\n    }\n}","import type {FloatArrayParam} from \"@xeokit/math\";\nimport {GeometryBucket} from \"./GeometryBucket\";\nimport type {GeometryCompressedParams} from \"./GeometryCompressedParams\";\nimport type {RendererGeometry} from \"./RendererGeometry\";\n\n/**\n * A geometry in a {@link SceneModel}.\n *\n * * Stored in {@link @xeokit/scene!SceneModel.geometries | SceneModel.geometries}\n * * Created with {@link @xeokit/scene!SceneModel.createGeometry | SceneModel.createGeometry}\n * and {@link @xeokit/scene!SceneModel.createGeometryCompressed | SceneModel.createGeometryCompressed}\n * * Referenced by {@link @xeokit/scene!SceneObject.geometry}\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class Geometry {\n\n    /**\n     * ID for the geometry.\n     */\n    id: string;\n\n    /**\n     * Primitive type.\n     *\n     * Possible values are {@link SolidPrimitive}, {@link SurfacePrimitive}, {@link LinesPrimitive}, {@link PointsPrimitive}\n     * and {@link TrianglesPrimitive}.\n     */\n    primitive: number;\n\n    /**\n     * Matrix to decompress {@link @xeokit/scene!GeometryBucketParams.positionsCompressed}.\n     */\n    positionsDecompressMatrix: FloatArrayParam;\n\n    /**\n     * Axis-aligned, non-quantized 3D boundary of the geometry's vertex positions.\n     */\n    aabb?: FloatArrayParam;\n\n    /**\n     * 4x4 matrix to de-quantize the geometry's UV coordinates, when UVs are provided.\n     */\n    uvsDecompressMatrix?: FloatArrayParam;\n\n    /**\n     * The geometry arrays, organized into buckets for optimal memory use.\n     *\n     * The bucketing strategy aims to reduce memory consumed by indices. There are three buckets, each with an indices array that\n     * requires a different number of bits for its values. The first bucket's indices contain 8-bit values in range [0...255],\n     * the second contains 16-bit values in range ````[256..65535]````, and the third contains 32-bit values in\n     * range ````[65536...2147483647]````. With this strategy, we avoid wasting storage bits on the 8-bit and 16-bit values.\n     *\n     * The buckets also partition the geometry positions and UVs, so that the indices are indexing positions and UVs\n     * that are local to their bucket. This further optimizes memory use, by reducing the values of large indices to small\n     * locally-offset values, which can reduce the number of bits they need.\n     */\n    geometryBuckets: GeometryBucket[];\n\n    /**\n     * Interface through which this Geometry can load any user-updated geometry arrays into the renderer.\n     *\n     * @internal\n     */\n    rendererGeometry: RendererGeometry | null;\n\n    constructor(params: GeometryCompressedParams) {\n        this.geometryBuckets = [];\n        for (let i = 0, len = params.geometryBuckets.length; i < len; i++) {\n            this.geometryBuckets[i] = new GeometryBucket(params.geometryBuckets[i]);\n        }\n        this.id = params.id;\n        this.positionsDecompressMatrix = params.positionsDecompressMatrix;\n        this.primitive = params.primitive;\n    }\n}","import type {SceneObject} from \"./SceneObject\";\nimport type {Mesh} from \"./Mesh\";\nimport {decompressPositions3} from \"@xeokit/compression\";\nimport {transformPositions3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {Geometry} from \"./Geometry\";\nimport type {GeometryBucket} from \"./GeometryBucket\";\nimport {LinesPrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\n\n/**\n * The {@link getSceneObjectGeometry} passes an instance of GeometryView to its callback\n * for each {@link GeometryBucket} it visits. The GeometryView provides the SceneObject, Mesh, Geometry and\n * GeometryBucket at the current state of iteration, along with accessors through which the caller can\n * get various resources that the GeometryView lazy-computes on-demand, such as decompressed vertex positions, World-space\n * vertex positons, and decompressed vertex UV coordinates.\n */\nexport interface GeometryView {\n\n    /**\n     * The current {@link SceneObject}.\n     */\n    object: SceneObject;\n\n    /**\n     * The current {@link Mesh}.\n     */\n    mesh: Mesh;\n\n    /**\n     * The current {@link Mesh | Mesh's} position in {@link SceneModel.meshes | SceneObject.meshes}.\n     */\n    meshIndex: number;\n\n    /**\n     * The current {@link Geometry}.\n     */\n    geometry: Geometry;\n\n    /**\n     * The current {@link GeometryBucket}.\n     */\n    geometryBucket: GeometryBucket;\n\n    /**\n     * The current {@link GeometryBucket | GeometryBucket's} position in {@link Geometry.geometryBuckets | Geometry.geometryBuckets }.\n     */\n    geometryBucketIndex: number;\n\n    /**\n     * The total number of {@link GeometryBucket | GeometryBuckets} within the current {@link SceneObject}..\n     */\n    readonly totalGeometryBuckets: number;\n\n    /**\n     * The number of primitives in the current {@link GeometryBucket}.\n     */\n    readonly numPrimitives: number;\n\n    /**\n     * The current 3D vertex positions, dequantized, as 32-bit floats.\n     */\n    readonly positionsDecompressed: FloatArrayParam;\n\n    /**\n     * The current 3D World-space vertex positions, dequantized and world-transformed, as 64-bit floats.\n     */\n    readonly positionsWorld: FloatArrayParam;\n\n    /**\n     * The current vertex UV coordinates, if any, dequantized to 32-bit floats.\n     */\n    readonly uvsDecompressed: FloatArrayParam;\n}\n\nclass GeometryViewImpl {\n\n    object: SceneObject | null;\n    mesh: Mesh | null;\n    meshIndex: number;\n    geometry: Geometry | null;\n    geometryBucket: GeometryBucket | null;\n    geometryBucketIndex: number;\n    #positionsDecompressed: Float32Array | null;\n    #positionsWorld: Float64Array | null;\n\n    constructor() {\n        this.object = null;\n        this.mesh = null;\n        this.meshIndex = 0;\n        this.geometry = null;\n        this.geometryBucket = null;\n        this.geometryBucketIndex = 0;\n        this.#positionsDecompressed = null;\n        this.#positionsWorld = null;\n    }\n\n    get totalGeometryBuckets() {\n        let totalGeometryBuckets = 0;\n        if (this.object) {\n            for (let i = 0, len = this.object.meshes.length; i < len; i++) {\n                totalGeometryBuckets += this.object.meshes[i].geometry.geometryBuckets.length;\n            }\n        }\n        return totalGeometryBuckets;\n    }\n\n    get numPrimitives() {\n        const primitiveType = (<Geometry>this.geometry).primitive;\n        const elementsPerPrimitiveType = (primitiveType === TrianglesPrimitive ? 3 : (primitiveType === LinesPrimitive ? 2 : 1));\n        return (<FloatArrayParam>(<GeometryBucket>this.geometryBucket).indices).length / elementsPerPrimitiveType;\n    }\n\n    get positionsDecompressed(): FloatArrayParam {\n        if (!this.#positionsDecompressed) {\n            this.#positionsDecompressed = new Float32Array((<GeometryBucket>this.geometryBucket).positionsCompressed.length);\n            decompressPositions3((<GeometryBucket>this.geometryBucket).positionsCompressed, (<Geometry>this.geometry).positionsDecompressMatrix, this.#positionsDecompressed);\n        }\n        return this.#positionsDecompressed;\n    }\n\n    get positionsWorld(): FloatArrayParam {\n        if (!this.#positionsWorld) {\n            const positionsDecompressed = this.positionsDecompressed;\n            this.#positionsWorld = new Float64Array(positionsDecompressed.length);\n            transformPositions3(positionsDecompressed, (<Mesh>this.mesh).matrix, this.#positionsWorld);\n        }\n        return this.#positionsWorld;\n    }\n\n    get uvsDecompressed(): FloatArrayParam | null{\n        return null;\n    }\n\n    reset() {\n        this.#positionsDecompressed = null;\n        this.#positionsWorld = null;\n    }\n}\n\nconst geometryView = new GeometryViewImpl();\n\n/**\n * Gets the uncompressed, World-space geometry of each {@link GeometryBucket} in each\n * {@link Geometry} in each {@link Mesh} in a {@link SceneObject}.\n *\n * If the callback returns ````true````, then this method immediately stops iterating and also returns ````true````.\n *\n * @param sceneObject\n * @param withEachGeometry\n */\nexport function getSceneObjectGeometry(sceneObject: SceneObject, withEachGeometry: (geometryView: GeometryView) => boolean): boolean {\n    geometryView.reset();\n    geometryView.object = sceneObject;\n    for (let i = 0, len = sceneObject.meshes.length; i < len; i++) {\n        const mesh = sceneObject.meshes[i];\n        geometryView.mesh = mesh;\n        geometryView.meshIndex = i;\n        const geometry = mesh.geometry;\n        geometryView.geometry = geometry;\n        for (let j = 0, lenj = geometry.geometryBuckets.length; j < lenj; j++) {\n            geometryView.geometryBucket = geometry.geometryBuckets[j];\n            geometryView.geometryBucketIndex = j;\n            if (withEachGeometry(<GeometryView>geometryView)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n","import type {Mesh} from \"./Mesh\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {RendererObject} from \"./RendererObject\";\nimport type {Scene} from \"./Scene\";\nimport type {SceneModel} from \"./SceneModel\";\nimport {collapseAABB3, createAABB3, expandAABB3Points3} from \"@xeokit/boundaries\";\nimport {getSceneObjectGeometry} from \"./getSceneObjectGeometry\";\n\n/**\n * An object in a {@link @xeokit/scene!SceneModel}.\n *\n * * Stored in {@link @xeokit/scene!SceneModel.objects | SceneModel.objects} and {@link @xeokit/scene!Scene.objects | Scene.objects}\n * * Created with {@link @xeokit/scene!SceneModel.createObject | SceneModel.createObject}\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class SceneObject {\n\n    /**\n     * The {@link SceneModel} that contains this SceneObject.\n     */\n    public readonly model: SceneModel;\n\n    /**\n     * Unique ID of this SceneObject.\n     *\n     * SceneObjects are stored by ID in {@link Scene.objects | Scene.objects} and {@link SceneModel.objects | SceneModel.objects}.\n     */\n    public readonly id: string;\n\n    /**\n     * The {@link Mesh | Meshes} belonging to this SceneObject.\n     */\n    public readonly meshes: Mesh[];\n\n    /**\n     * Optional layer ID for this SceneObject.\n     */\n    public readonly layerId?: string;\n\n    /**\n     *  Internal interface through which a {@link SceneObject} can load property updates into a renderer.\n     *\n     *  This is defined while the owner {@link SceneModel} has been added to a {@link @xeokit/viewer!Viewer | Viewer}.\n     *\n     * @internal\n     */\n    rendererObject: RendererObject | null;\n\n    #aabb: FloatArrayParam;\n    #aabbDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(cfg: {\n        model: SceneModel;\n        meshes: Mesh[];\n        id: string;\n        layerId?: string;\n    }) {\n        this.id = cfg.id;\n        this.layerId = cfg.layerId;\n        this.meshes = cfg.meshes;\n        this.#aabb = createAABB3();\n        this.#aabbDirty = true;\n        this.rendererObject = null;\n    }\n\n    /**\n     * Gets the axis-aligned 3D World-space boundary of this SceneObject.\n     */\n    get aabb(): FloatArrayParam {\n        if (this.#aabbDirty) {\n            collapseAABB3(this.#aabb);\n            getSceneObjectGeometry(this, (geometryView) => {\n                expandAABB3Points3(this.#aabb, geometryView.positionsWorld);\n                return false;\n            });\n            this.#aabbDirty = false;\n        }\n        return this.#aabb;\n    }\n\n    /**\n     * @private\n     */\n    setAABBDirty() {\n        this.#aabbDirty = true;\n    }\n}\n","import type {Texture} from \"./Texture\";\nimport type {TextureSetParams} from \"./TextureSetParams\";\nimport type {RendererTextureSet} from \"./RendererTextureSet\";\n\n/**\n * A set of {@link Texture | Textures} in a {@link SceneModel}.\n *\n * * Stored in {@link @xeokit/scene!SceneModel.textureSets | SceneModel.textureSets}\n * * Created with {@link @xeokit/scene!SceneModel.createTextureSet | SceneModel.createTextureSet}\n * * Referenced by {@link Mesh.textureSet | Mesh.textureSet}\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class TextureSet {\n\n    /**\n     * The ID of this TextureSet.\n     */\n    id: string;\n\n    /**\n     * The color {@link Texture} in this set.\n     */\n    colorTexture?: Texture;\n\n    /**\n     * The metallic-roughness {@link Texture} in this set.\n     */\n    metallicRoughnessTexture?: Texture;\n\n    /**\n     * The occlusion {@link Texture} in this set.\n     */\n    occlusionTexture?: Texture;\n\n    /**\n     * The emissive {@link Texture} in this set.\n     */\n    emissiveTexture?: Texture;\n\n    /**\n     *  Internal interface through which a TextureSet can load property updates into a renderer.\n     *\n     *  This is defined while the owner {@link SceneModel} has been added to a {@link @xeokit/viewer!Viewer | Viewer}.\n     *\n     * @internal\n     */\n    rendererTextureSet: RendererTextureSet | null;\n\n    /**\n     * @private\n     */\n    constructor(textureSetParams: TextureSetParams,\n                textures: {\n                    emissiveTexture?: Texture;\n                    occlusionTexture?: Texture;\n                    metallicRoughnessTexture?: Texture;\n                    colorTexture?: Texture;\n                }) {\n\n        this.id = textureSetParams.id;\n        this.colorTexture = textures.colorTexture;\n        this.metallicRoughnessTexture = textures.metallicRoughnessTexture;\n        this.occlusionTexture = textures.occlusionTexture;\n        this.emissiveTexture = textures.emissiveTexture;\n        this.rendererTextureSet = null;\n    }\n}","import {\n    ClampToEdgeWrapping,\n    GIFMediaType,\n    JPEGMediaType,\n    LinearEncoding,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipMapLinearFilter,\n    LinearMipMapNearestFilter,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipMapLinearFilter,\n    NearestMipMapNearestFilter,\n    PNGMediaType,\n    RepeatWrapping,\n    sRGBEncoding\n} from \"@xeokit/constants\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {RendererTexture} from \"./RendererTexture\";\nimport type {TextureParams} from \"./TextureParams\";\nimport {createVec4} from \"@xeokit/matrix\";\n\n/**\n * A texture in a {@link SceneModel}.\n *\n * * Stored in {@link @xeokit/scene!SceneModel.textures | SceneModel.textures}\n * * Created with {@link @xeokit/scene!SceneModel.createTexture | SceneModel.createTexture}\n * * Referenced by {@link TextureSet.colorTexture | TextureSet.colorTexture},\n * {@link TextureSet.metallicRoughnessTexture | TextureSet.metallicRoughnessTexture},\n * {@link TextureSet.occlusionTexture | TextureSet.occlusionTexture} and {@link TextureSet.emissiveTexture | TextureSet.emissiveTexture}\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class Texture {\n\n    /**\n     *  Internal interface through which this {@link Texture} can load property updates into a renderer.\n     *\n     *  This is defined when the owner {@link SceneModel} has been added to a {@link @xeokit/viewer!Viewer | Viewer}.\n     *\n     * @internal\n     */\n    rendererTexture: RendererTexture | null;\n\n    /**\n     * ID for the texture.\n     */\n    id: string;\n\n    /**\n     * Path to an image file.\n     */\n    src?: string;\n\n    /**\n     * Image file data.\n     */\n    imageData?: any;\n\n    /**\n     * Transcoded texture data.\n     */\n    buffers?: ArrayBuffer[];\n\n    /**\n     * HTMLImage containing the texture image.\n     */\n    image?: HTMLImageElement;\n\n    /**\n     * Pixel height of the texture.\n     */\n    height: number;\n\n    /**\n     * Pixel width of the texture.\n     */\n    width: number;\n\n    /**\n     * True if the texture is compressed.\n     */\n    compressed: boolean;\n\n    /**\n     * Media type of this Texture.\n     *\n     * Supported values are {@link GIFMediaType}, {@link PNGMediaType} and {@link JPEGMediaType}.\n     *\n     * Ignored for compressed textures.\n     */\n    mediaType?: number;\n\n    /**\n     * How the texture is sampled when a texel covers more than one pixel.\n     *\n     * Supported values are {@link LinearFilter} and {@link NearestFilter}.\n     */\n    magFilter: number;\n\n    /**\n     * How the texture is sampled when a texel covers less than one pixel. Supported values\n     * are {@link LinearMipmapLinearFilter}, {@link LinearMipMapNearestFilter},\n     * {@link NearestMipMapNearestFilter}, {@link NearestMipMapLinearFilter}\n     * and {@link LinearMipMapLinearFilter}.\n     *\n     * Ignored for compressed textures.\n     */\n    minFilter: number;\n\n    /**\n     * S wrapping mode.\n     *\n     * Supported values are {@link ClampToEdgeWrapping}, {@link MirroredRepeatWrapping} and {@link RepeatWrapping}.\n     *\n     * Ignored for compressed textures.\n     */\n    wrapS: number;\n\n    /**\n     * T wrapping mode.\n     *\n     * Supported values are {@link ClampToEdgeWrapping}, {@link MirroredRepeatWrapping} and {@link RepeatWrapping}.\n     *\n     * Ignored for compressed textures.\n     */\n    wrapT: number;\n\n    /**\n     * R wrapping mode.\n     *\n     * Supported values are {@link ClampToEdgeWrapping}, {@link MirroredRepeatWrapping} and {@link RepeatWrapping}.\n     *\n     * Ignored for compressed textures.\n     */\n    wrapR: number;\n\n    /**\n     * Flips this Texture's source data along its vertical axis when ````true````.\n     */\n    flipY: boolean;\n\n    /**\n     * Texture encoding format.\n     *\n     * Supported values are {@link LinearEncoding} and {@link sRGBEncoding}.\n     */\n    encoding: number;\n\n    /**\n     * RGBA color to preload the texture with.\n     */\n    preloadColor: FloatArrayParam;\n\n    /**\n     * @private\n     */\n    channel: number;\n\n    /**\n     * @private\n     */\n    constructor(params: TextureParams) {\n        this.id = params.id;\n        this.imageData = params.imageData;\n        this.src = params.src;\n        this.mediaType = params.mediaType;\n        this.minFilter = params.minFilter || LinearMipMapNearestFilter;\n        this.magFilter = params.magFilter || LinearMipMapNearestFilter;\n        this.wrapS = params.wrapS || RepeatWrapping;\n        this.wrapT = params.wrapT || RepeatWrapping;\n        this.wrapR = params.wrapR || RepeatWrapping\n        this.encoding = params.encoding || LinearEncoding;\n        this.preloadColor = createVec4(params.preloadColor || [1, 1, 1, 1]);\n        this.channel = 0;\n        this.rendererTexture = null;\n    }\n}\n\n","import type {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec3, identityMat4} from \"@xeokit/matrix\";\nimport type {RendererMesh} from \"./RendererMesh\";\nimport type {Geometry} from \"./Geometry\";\nimport type {TextureSet} from \"./TextureSet\";\nimport type {SceneObject} from \"./SceneObject\";\n\n/**\n * A mesh in a {@link SceneModel}.\n *\n * * Stored in {@link @xeokit/scene!SceneModel.meshes | SceneModel.meshes}\n * * Created with {@link @xeokit/scene!SceneModel.createMesh | SceneModel.createMesh}\n * * Referenced by {@link @xeokit/scene!SceneModel.meshes | SceneObject.meshes}\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class Mesh {\n\n    /**\n     * Unique ID of this Mesh.\n     *\n     * Mesh is stored by this ID in {@link @xeokit/scene!SceneModel.meshes}.\n     */\n    id: string;\n\n    /**\n     * {@link @xeokit/scene!Geometry} used by this Mesh.\n     */\n    geometry: Geometry;\n\n    /**\n     * {@link @xeokit/scene!TextureSet} used by this Mesh.\n     */\n    textureSet?: TextureSet;\n\n    /**\n     *  Internal interface through which a {@link Mesh} can load property updates into a renderer.\n     *\n     *  This is defined when the owner {@link @xeokit/scene!SceneModel} has been added to a {@link @xeokit/viewer!Viewer | Viewer}.\n     *\n     * @internal\n     */\n    rendererMesh: RendererMesh | null;\n\n    /**\n     * The {@link @xeokit/scene!SceneObject} that uses this Mesh.\n     */\n    object: SceneObject | null;\n\n    #color: FloatArrayParam;\n    #matrix: FloatArrayParam;\n    #metallic: number;\n    #roughness: number;\n    #opacity: number;\n\n    /**\n     * @private\n     */\n    constructor(meshParams: {\n        id: string;\n        geometry: Geometry;\n        textureSet?: TextureSet;\n        matrix?: FloatArrayParam;\n        color?: FloatArrayParam;\n        opacity?: number;\n        roughness?: number;\n        metallic?: number;\n    }) {\n        this.id = meshParams.id;\n        this.#matrix = meshParams.matrix ? createMat4(meshParams.matrix) : identityMat4();\n        this.geometry = meshParams.geometry;\n        this.textureSet = meshParams.textureSet;\n        this.rendererMesh = null;\n\n        this.color = meshParams.color || createVec3([1, 1, 1]);\n        this.metallic = (meshParams.metallic !== null && meshParams.metallic !== undefined) ? meshParams.metallic : 0;\n        this.roughness = (meshParams.roughness !== null && meshParams.roughness !== undefined) ? meshParams.roughness : 1;\n        this.opacity = (meshParams.opacity !== undefined && meshParams.opacity !== null) ? meshParams.opacity : 1.0;\n    }\n\n    /**\n     * Gets the RGB color for this Mesh.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     */\n    get color(): FloatArrayParam {\n        return this.#color;\n    }\n\n    /**\n     * Sets the RGB color for this Mesh.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     */\n    set color(value: FloatArrayParam) {\n        let color = this.#color;\n        if (!color) {\n            color = this.#color = new Float32Array(4);\n            color[3] = 1;\n        }\n        if (value) {\n            color[0] = value[0];\n            color[1] = value[1];\n            color[2] = value[2];\n        } else {\n            color[0] = 1;\n            color[1] = 1;\n            color[2] = 1;\n        }\n        if (this.rendererMesh) {\n            this.rendererMesh.setColor(this.#color);\n        }\n    }\n\n    /**\n     * Gets this Mesh's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {FloatArrayParam}\n     */\n    get matrix(): FloatArrayParam {\n        return this.#matrix;\n    }\n\n    /**\n     * Updates this Mesh's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {FloatArrayParam}\n     */\n    set matrix(matrix: FloatArrayParam) {\n        if (matrix) {\n            // @ts-ignore\n            this.#matrix.set(matrix);\n        } else {\n            identityMat4(this.#matrix);\n        }\n        if (this.rendererMesh) {\n            this.rendererMesh.setMatrix(this.#matrix);\n        }\n        if (this.object) {\n            this.object.setAABBDirty();\n        }\n    }\n\n    /**\n     * Gets this Mesh's metallic factor.\n     *\n     * This is in the range ````[0..1]```` and indicates how metallic this Mesh is.\n     *\n     * ````1```` is metal, ````0```` is non-metal.\n     *\n     * Default value is ````1.0````.\n     */\n    get metallic(): number {\n        return this.#metallic;\n    }\n\n    /**\n     * Sets this Mesh's metallic factor.\n     *\n     * This is in the range ````[0..1]```` and indicates how metallic this Mesh is.\n     *\n     * ````1```` is metal, ````0```` is non-metal.\n     *\n     * Default value is ````1.0````.\n     */\n    set metallic(value: number) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this.#metallic === value) {\n            return;\n        }\n        this.#metallic = value;\n        if (this.rendererMesh) {\n            this.rendererMesh.setMetallic(this.#metallic);\n        }\n    }\n\n    /**\n     * Gets this Mesh's roughness factor.\n     *\n     * This factor is in the range ````[0..1]````, where ````0```` is fully smooth,````1```` is fully rough.\n     *\n     * Default value is ````1.0````.\n     */\n    get roughness(): number {\n        return this.#roughness;\n    }\n\n    /**\n     * Sets this Mesh's roughness factor.\n     *\n     * This factor is in the range ````[0..1]````, where ````0```` is fully smooth,````1```` is fully rough.\n     *\n     * Default value is ````1.0````.\n     */\n    set roughness(value: number) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this.#roughness === value) {\n            return;\n        }\n        this.#roughness = value;\n        if (this.rendererMesh) {\n            this.rendererMesh.setRoughness(this.#roughness);\n        }\n    }\n\n    /**\n     * Gets the opacity factor for this Mesh.\n     *\n     * This is a factor in range ````[0..1]````.\n     */\n    get opacity(): number {\n        return this.#opacity;\n    }\n\n    /**\n     * Sets the opacity factor for this Mesh.\n     *\n     * This is a factor in range ````[0..1]````.\n     */\n    set opacity(opacity: number) {\n        opacity = (opacity !== undefined && opacity !== null) ? opacity : 1.0;\n        if (this.#opacity === opacity) {\n            return;\n        }\n        this.#opacity = opacity;\n        if (this.rendererMesh) {\n            //       this.rendererMesh.setOpacity(this.#opacity);\n        }\n    }\n}\n","import {DEGTORAD, FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {createVec3, cross3Vec3, dotVec3, normalizeVec3, subVec3} from \"@xeokit/matrix\";\nimport {decompressPoint3} from \"@xeokit/compression\";\n\nconst uniquePositions: number[] = [];\nconst indicesLookup: number[] = [];\nconst indicesReverseLookup: number[] = [];\nconst weldedIndices: number[] = [];\n\n// TODO: Optimize with caching, but need to cater to both compressed and uncompressed positions\n\nconst faces: { normal: number[]; }[] = [];\nlet numFaces = 0;\nconst compa = new Uint16Array(3);\nconst compb = new Uint16Array(3);\nconst compc = new Uint16Array(3);\nconst a = createVec3();\nconst b = createVec3();\nconst c = createVec3();\nconst cb = createVec3();\nconst ab = createVec3();\nconst cross = createVec3();\nconst normal = createVec3();\n\nfunction weldVertices(positions: FloatArrayParam, indices: IntArrayParam) {\n    const positionsMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n    let vx;\n    let vy;\n    let vz;\n    let key;\n    const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n    const precision = Math.pow(10, precisionPoints);\n    let i;\n    let len;\n    let lenUniquePositions = 0;\n    for (i = 0, len = positions.length; i < len; i += 3) {\n        vx = positions[i];\n        vy = positions[i + 1];\n        vz = positions[i + 2];\n        key = Math.round(vx * precision) + '_' + Math.round(vy * precision) + '_' + Math.round(vz * precision);\n        // @ts-ignore\n        if (positionsMap[key] === undefined) {\n            // @ts-ignore\n            positionsMap[key] = lenUniquePositions / 3;\n            uniquePositions[lenUniquePositions++] = vx;\n            uniquePositions[lenUniquePositions++] = vy;\n            uniquePositions[lenUniquePositions++] = vz;\n        }\n        // @ts-ignore\n        indicesLookup[i / 3] = positionsMap[key];\n    }\n    for (i = 0, len = indices.length; i < len; i++) {\n        weldedIndices[i] = indicesLookup[indices[i]];\n        indicesReverseLookup[weldedIndices[i]] = indices[i];\n    }\n}\n\nfunction buildFaces(numIndices: number, positionsDecompressMatrix: FloatArrayParam) {\n    numFaces = 0;\n    for (let i = 0, len = numIndices; i < len; i += 3) {\n        const ia = ((weldedIndices[i]) * 3);\n        const ib = ((weldedIndices[i + 1]) * 3);\n        const ic = ((weldedIndices[i + 2]) * 3);\n        if (positionsDecompressMatrix) {\n            compa[0] = uniquePositions[ia];\n            compa[1] = uniquePositions[ia + 1];\n            compa[2] = uniquePositions[ia + 2];\n            compb[0] = uniquePositions[ib];\n            compb[1] = uniquePositions[ib + 1];\n            compb[2] = uniquePositions[ib + 2];\n            compc[0] = uniquePositions[ic];\n            compc[1] = uniquePositions[ic + 1];\n            compc[2] = uniquePositions[ic + 2];\n            // Decode\n            decompressPoint3(compa, positionsDecompressMatrix, a);\n            decompressPoint3(compb, positionsDecompressMatrix, b);\n            decompressPoint3(compc, positionsDecompressMatrix, c);\n        } else {\n            a[0] = uniquePositions[ia];\n            a[1] = uniquePositions[ia + 1];\n            a[2] = uniquePositions[ia + 2];\n            b[0] = uniquePositions[ib];\n            b[1] = uniquePositions[ib + 1];\n            b[2] = uniquePositions[ib + 2];\n            c[0] = uniquePositions[ic];\n            c[1] = uniquePositions[ic + 1];\n            c[2] = uniquePositions[ic + 2];\n        }\n        subVec3(c, b, cb);\n        subVec3(a, b, ab);\n        cross3Vec3(cb, ab, cross);\n        normalizeVec3(cross, normal);\n        // @ts-ignore\n        const face = faces[numFaces] || (faces[numFaces] = {normal: createVec3()});\n        face.normal[0] = normal[0];\n        face.normal[1] = normal[1];\n        face.normal[2] = normal[2];\n        numFaces++;\n    }\n}\n\n\n/**\n * Builds edge connectivity indices from a 3D triangle mesh given as vertex positions and triangle indices\n * @private\n */\nexport function buildEdgeIndices(\n    positions: FloatArrayParam,\n    indices: IntArrayParam,\n    positionsDecompressMatrix: FloatArrayParam,\n    edgeThreshold: number): IntArrayParam {\n\n    weldVertices(positions, indices);\n    buildFaces(indices.length, positionsDecompressMatrix);\n\n    const edgeIndices = [];\n    const thresholdDot = Math.cos(DEGTORAD * edgeThreshold);\n    const edges = {};\n\n    let edge1;\n    let edge2;\n    let index1;\n    let index2;\n    let key;\n    let largeIndex = false;\n    let edge;\n    let normal1;\n    let normal2;\n    let dot;\n    let ia;\n    let ib;\n\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        const faceIndex = i / 3;\n        for (let j = 0; j < 3; j++) {\n            edge1 = weldedIndices[i + j];\n            edge2 = weldedIndices[i + ((j + 1) % 3)];\n            index1 = Math.min(edge1, edge2);\n            index2 = Math.max(edge1, edge2);\n            key = index1 + \",\" + index2;\n            // @ts-ignore\n            if (edges[key] === undefined) {\n                // @ts-ignore\n                edges[key] = {\n                    index1: index1,\n                    index2: index2,\n                    face1: faceIndex,\n                    face2: undefined\n                };\n            } else {\n                // @ts-ignore\n                edges[key].face2 = faceIndex;\n            }\n        }\n    }\n\n    for (key in edges) {\n        // @ts-ignore\n        edge = edges[key];\n        // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n        if (edge.face2 !== undefined) {\n            normal1 = faces[edge.face1].normal;\n            normal2 = faces[edge.face2].normal;\n            dot = dotVec3(normal1, normal2);\n            if (dot > thresholdDot) {\n                continue;\n            }\n        }\n        ia = indicesReverseLookup[edge.index1];\n        ib = indicesReverseLookup[edge.index2];\n        if (!largeIndex && ia > 65535 || ib > 65535) {\n            largeIndex = true;\n        }\n        edgeIndices.push(ia);\n        edgeIndices.push(ib);\n    }\n\n    return (largeIndex) ? new Uint32Array(edgeIndices) : new Uint16Array(edgeIndices);\n}","/**\n * @author https://github.com/tmarti, with support from https://tribia.com/\n * @license MIT\n *\n * This file takes a geometry given by { positions, indices }, and returns\n * equivalent { positions, indices } arrays but which only contain unique\n * positions.\n *\n * The time is O(N logN) with the number of positions due to a pre-sorting\n * step, but is much more GC-friendly and actually faster than the classic O(N)\n * approach based in keeping a hash-based LUT to identify unique positions.\n */\n\nlet comparePositions: any = null;\n\n\n/**\n * This function obtains unique positions in the provided object\n * .positions array and calculates an index mapping, which is then\n * applied to the provided object .indices and .edgeindices.\n *\n * The input object items are not modified, and instead new set\n * of positions, indices and edgeIndices with the applied optimization\n * are returned.\n *\n * The algorithm, instead of being based in a hash-like LUT for\n * identifying unique positions, is based in pre-sorting the input\n * positions...\n *\n * (it's possible to define a _\"consistent ordering\"_ for the positions\n *  as positions are quantized and thus not suffer from float number\n *  comparison artifacts)\n *\n * ... so same positions are adjacent in the sorted array, and then\n * it's easy to scan linearly the sorted array. During the linear run,\n * we will know that we found a different position because the comparison\n * function will return != 0 between current and previous element.\n *\n * During this linear traversal of the array, a `unique counter` is used\n * in order to calculate the mapping between original indices and unique\n * indices.\n *\n * @param {*} mesh The input mesh to process, with `positions`, `indices` and `edgeIndices` keys.\n * @private\n * @returns An array with 3 elements: 0 => the uniquified positions; 1 and 2 => the remapped edges and edgeIndices arrays\n */\nexport function uniquifyPositions(mesh: any): [Uint16Array, Uint32Array, Uint32Array | undefined] {\n\n    let positionsCompressed = mesh.positionsCompressed;\n    let indices = mesh.indices;\n    let edgeIndices = mesh.edgeIndices;\n\n    setMaxNumberOfPositions(positionsCompressed.length / 3);\n\n    let seq = seqInit.slice(0, positionsCompressed.length / 3);\n    let remappings = seqInit.slice(0, positionsCompressed.length / 3);\n\n    comparePositions = positionsCompressed;\n\n    seq.sort(compareVertex);\n\n    let uniqueIdx = 0\n\n    remappings[seq[0]] = 0;\n\n    for (let i = 1, len = seq.length; i < len; i++) {\n        if (0 != compareVertex(seq[i], seq[i - 1])) {\n            uniqueIdx++;\n        }\n\n        remappings[seq[i]] = uniqueIdx;\n    }\n\n    const numUniquePositions = uniqueIdx + 1;\n\n    const uniquePositionsCompressed = new Uint16Array(numUniquePositions * 3);\n\n    uniqueIdx = 0\n\n    uniquePositionsCompressed [uniqueIdx * 3 + 0] = positionsCompressed [seq[0] * 3 + 0];\n    uniquePositionsCompressed [uniqueIdx * 3 + 1] = positionsCompressed [seq[0] * 3 + 1];\n    uniquePositionsCompressed [uniqueIdx * 3 + 2] = positionsCompressed [seq[0] * 3 + 2];\n\n    for (let i = 1, len = seq.length; i < len; i++) {\n        if (0 !== compareVertex(seq[i], seq[i - 1])) {\n            uniqueIdx++;\n\n            uniquePositionsCompressed [uniqueIdx * 3 + 0] = positionsCompressed [seq[i] * 3 + 0];\n            uniquePositionsCompressed [uniqueIdx * 3 + 1] = positionsCompressed [seq[i] * 3 + 1];\n            uniquePositionsCompressed [uniqueIdx * 3 + 2] = positionsCompressed [seq[i] * 3 + 2];\n        }\n\n        remappings[seq[i]] = uniqueIdx;\n    }\n\n    comparePositions = null;\n\n    let uniqueIndices = new Uint32Array(indices.length);\n\n    for (let i = 0, len = indices.length; i < len; i++) {\n        uniqueIndices[i] = remappings [indices[i]];\n    }\n\n    let uniqueEdgeIndices;\n\n    if (edgeIndices) {\n        uniqueEdgeIndices = new Uint32Array(edgeIndices.length);\n        for (let i = 0, len = edgeIndices.length; i < len; i++) {\n            uniqueEdgeIndices[i] = remappings [edgeIndices[i]];\n        }\n    }\n    return [\n        uniquePositionsCompressed,\n        uniqueIndices,\n        uniqueEdgeIndices\n    ];\n}\n\n\nfunction compareVertex(a: any, b: any) {\n    let res;\n\n    for (let i = 0; i < 3; i++) {\n        if (0 != (res = comparePositions[a * 3 + i] - comparePositions[b * 3 + i])) {\n            return res;\n        }\n    }\n\n    return 0;\n}\n\nlet seqInit: any = null;\n\nfunction setMaxNumberOfPositions(maxPositions: any) {\n    if (seqInit !== null && seqInit.length >= maxPositions) {\n        return;\n    }\n\n    seqInit = new Uint32Array(maxPositions);\n\n    for (let i = 0; i < maxPositions; i++) {\n        seqInit[i] = i;\n    }\n}\n\n","/**\n * @author https://github.com/tmarti, with support from https://tribia.com/\n * @license MIT\n **/\nimport type {IntArrayParam} from \"@xeokit/math\";\n\n\nconst MAX_RE_BUCKET_FAN_OUT = 8;\n\nlet bucketsForIndices: any = null;\n\nexport function rebucketPositions(\n    mesh: {\n        positionsCompressed: IntArrayParam,\n        indices: IntArrayParam,\n        edgeIndices?: IntArrayParam,\n    },\n    bitsPerBucket: any,\n    checkResult = false): {\n    positionsCompressed: IntArrayParam,\n    indices: IntArrayParam,\n    edgeIndices?: IntArrayParam\n}[] {\n\n    const positionsCompressed = (mesh.positionsCompressed || []);\n    const indices = preSortIndices(mesh.indices || [], bitsPerBucket);\n    const edgeIndices: any = [];//preSortEdgeIndices(mesh.edgeIndices || []);\n\n    /**\n     * Code adapted from https://stackoverflow.com/questions/22697936/binary-search-in-javascript\n     */\n    function edgeSearch(el0: any, el1: any) {\n        if (el0 > el1) {\n            let tmp = el0;\n            el0 = el1;\n            el1 = tmp;\n        }\n\n        function compare_fn(a: any, b: any) {\n            if (a != el0) {\n                return el0 - a;\n            }\n\n            if (b != el1) {\n                return el1 - b;\n            }\n\n            return 0;\n        }\n\n        var m = 0;\n        var n = (edgeIndices.length >> 1) - 1;\n        while (m <= n) {\n            var k = (n + m) >> 1;\n            var cmp = compare_fn(edgeIndices[k * 2], edgeIndices[k * 2 + 1]);\n            if (cmp > 0) {\n                m = k + 1;\n            } else if (cmp < 0) {\n                n = k - 1;\n            } else {\n                return k;\n                /**\n                 * Flat array of compressed integer vertex colors.\n                 *\n                 * Alternative to {@link @xeokit/scene!GeometryParams.colorsCompressed}.\n                 *\n                 * Ignored when {@link @xeokit/scene!GeometryParams.id} is defined.\n                 */\n            }\n        }\n        return -m - 1;\n    }\n\n    // console.log (edgeIndices);\n\n    // throw (e);\n\n    // console.log (`${mesh.edgeIndices.length / 2} edge indices`);\n    // console.log (`${edgeIndices.length / 2} edge indices sorted`);\n\n    const alreadyOutputEdgeIndices = new Int32Array(edgeIndices.length / 2);\n    alreadyOutputEdgeIndices.fill(0);\n\n    const numPositions = positionsCompressed.length / 3;\n\n    if (numPositions > ((1 << bitsPerBucket) * MAX_RE_BUCKET_FAN_OUT)) {\n        return [mesh];\n    }\n\n    const bucketIndicesRemap = new Int32Array(numPositions);\n    bucketIndicesRemap.fill(-1);\n\n    const buckets: any = [];\n\n    function addEmptyBucket() {\n        bucketIndicesRemap.fill(-1);\n\n        let newBucket: any = {\n            positionsCompressed: [],\n            indices: [],\n            edgeIndices: [],\n            maxNumPositions: (1 << bitsPerBucket) - bitsPerBucket,\n            numPositions: 0,\n            bucketNumber: buckets.length\n        };\n\n        buckets.push(newBucket);\n\n        return newBucket;\n    }\n\n    let currentBucket = addEmptyBucket();\n\n    // let currentBucket = 0;\n\n    let retVal = 0;\n\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        let additonalPositionsInBucket = 0;\n\n        const ii0 = indices[i];\n        const ii1 = indices[i + 1];\n        const ii2 = indices[i + 2];\n\n        if (bucketIndicesRemap[ii0] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if (bucketIndicesRemap[ii1] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if (bucketIndicesRemap[ii2] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if ((additonalPositionsInBucket + currentBucket.numPositions) > currentBucket.maxNumPositions) {\n            currentBucket = addEmptyBucket();\n        }\n\n        if (currentBucket.bucketNumber > MAX_RE_BUCKET_FAN_OUT) {\n            return [mesh];\n        }\n\n        if (bucketIndicesRemap[ii0] == -1) {\n            bucketIndicesRemap[ii0] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3 + 2]);\n        }\n\n        if (bucketIndicesRemap[ii1] == -1) {\n            bucketIndicesRemap[ii1] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3 + 2]);\n        }\n\n        if (bucketIndicesRemap[ii2] == -1) {\n            bucketIndicesRemap[ii2] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3 + 2]);\n        }\n\n        currentBucket.indices.push(bucketIndicesRemap[ii0]);\n        currentBucket.indices.push(bucketIndicesRemap[ii1]);\n        currentBucket.indices.push(bucketIndicesRemap[ii2]);\n\n        // Check possible edge1\n        let edgeIndex;\n\n        if ((edgeIndex = edgeSearch(ii0, ii1)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n\n        if ((edgeIndex = edgeSearch(ii0, ii2)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n\n        if ((edgeIndex = edgeSearch(ii1, ii2)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n    }\n\n    const prevBytesPerIndex = bitsPerBucket / 8 * 2;\n    const newBytesPerIndex = bitsPerBucket / 8;\n\n    const originalSize = positionsCompressed.length * 2 + (indices.length + edgeIndices.length) * prevBytesPerIndex;\n\n    let newSize = 0;\n    let newPositions = -positionsCompressed.length / 3;\n\n    buckets.forEach((bucket: any) => {\n        newSize += bucket.positionsCompressed.length * 2 + (bucket.indices.length + bucket.edgeIndices.length) * newBytesPerIndex;\n        newPositions += bucket.positionsCompressed.length / 3;\n    });\n\n    if (newSize > originalSize) {\n        return [mesh];\n    }\n\n    // console.log (\"added positions \" + newPositions + \", buckets: \" + buckets.length);\n\n    if (checkResult) {\n        doCheckResult(buckets, mesh);\n    }\n\n    // return [ mesh ];\n\n    return buckets;\n}\n\nfunction compareBuckets(a: any, b: any) {\n    let aa = a * 3;\n    let bb = b * 3;\n    let aa1, aa2, aa3, bb1, bb2, bb3;\n    const minBucketA = Math.min(\n        aa1 = bucketsForIndices[aa],\n        aa2 = bucketsForIndices[aa + 1],\n        aa3 = bucketsForIndices[aa + 2]\n    );\n    const minBucketB = Math.min(\n        bb1 = bucketsForIndices[bb],\n        bb2 = bucketsForIndices[bb + 1],\n        bb3 = bucketsForIndices[bb + 2]\n    );\n    if (minBucketA != minBucketB) {\n        return minBucketA - minBucketB;\n    }\n    const maxBucketA = Math.max(\n        aa1,\n        aa2,\n        aa3,\n    );\n    const maxBucketB = Math.max(\n        bb1,\n        bb2,\n        bb3,\n    );\n    if (maxBucketA != maxBucketB) {\n        return maxBucketA - maxBucketB;\n    }\n    return 0;\n}\n\nfunction preSortIndices(indices: any, bitsPerBucket: any) {\n    let seq = new Int32Array(indices.length / 3);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        seq[i] = i;\n    }\n    bucketsForIndices = new Int32Array(indices.length);\n    for (let i = 0, len = indices.length; i < len; i++) {\n        bucketsForIndices[i] = indices[i] >> bitsPerBucket;\n    }\n    seq.sort(compareBuckets);\n    const sortedIndices = new Int32Array(indices.length);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        sortedIndices[i * 3 + 0] = indices[seq[i] * 3 + 0];\n        sortedIndices[i * 3 + 1] = indices[seq[i] * 3 + 1];\n        sortedIndices[i * 3 + 2] = indices[seq[i] * 3 + 2];\n    }\n    return sortedIndices;\n}\n\nlet compareEdgeIndices: any = null;\n\nfunction compareIndices(a: any, b: any) {\n    let retVal = compareEdgeIndices[a * 2] - compareEdgeIndices[b * 2];\n    if (retVal != 0) {\n        return retVal;\n    }\n    return compareEdgeIndices[a * 2 + 1] - compareEdgeIndices[b * 2 + 1];\n}\n\nfunction preSortEdgeIndices(edgeIndices: any): any {\n    if ((edgeIndices || []).length == 0) {\n        return [];\n    }\n    let seq = new Int32Array(edgeIndices.length / 2);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        seq[i] = i;\n    }\n    for (let i = 0, j = 0, len = edgeIndices.length; i < len; i += 2) {\n        if (edgeIndices[i] > edgeIndices[i + 1]) {\n            let tmp = edgeIndices[i];\n            edgeIndices[i] = edgeIndices[i + 1];\n            edgeIndices[i + 1] = tmp;\n        }\n    }\n    compareEdgeIndices = new Int32Array(edgeIndices);\n    seq.sort(compareIndices);\n    const sortedEdgeIndices = new Int32Array(edgeIndices.length);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        sortedEdgeIndices[i * 2 + 0] = edgeIndices[seq[i] * 2 + 0];\n        sortedEdgeIndices[i * 2 + 1] = edgeIndices[seq[i] * 2 + 1];\n    }\n    return sortedEdgeIndices;\n}\n\n\nfunction unbucket(buckets: any) {\n    let positionsCompressed: any = [];\n    let indices: any = [];\n    let edgeIndices: any = [];\n\n    let positionsBase = 0;\n\n    buckets.forEach((bucket: any) => {\n        bucket.positionsCompressed.forEach((coord: any) => {\n            positionsCompressed.push(coord);\n        });\n\n        bucket.indices.forEach((index: any) => {\n            indices.push(index + positionsBase);\n        });\n\n        bucket.edgeIndices.forEach((edgeIndex: any) => {\n            edgeIndices.push(edgeIndex + positionsBase);\n        });\n\n        positionsBase += positionsCompressed.length / 3;\n    });\n\n    return {\n        positionsCompressed,\n        indices,\n        edgeIndices\n    };\n}\n\nfunction doCheckResult(buckets: any, mesh: any) {\n    const meshDict: any = {};\n    const edgesDict: any = {};\n\n    let edgeIndicesCount = 0;\n\n    buckets.forEach((bucket: any) => {\n        let indices = bucket.indices;\n        let edgeIndices = bucket.edgeIndices;\n        let positionsCompressed = bucket.positionsCompressed;\n\n        for (var i = 0, len = indices.length; i < len; i += 3) {\n            var key = positionsCompressed[indices[i] * 3] + \"_\" + positionsCompressed[indices[i] * 3 + 1] + \"_\" + positionsCompressed[indices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 1] * 3] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 2] * 3] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 2];\n\n            meshDict[key] = true;\n        }\n\n        edgeIndicesCount += bucket.edgeIndices.length / 2;\n\n        for (var i = 0, len = edgeIndices.length; i < len; i += 2) {\n            var key = positionsCompressed[edgeIndices[i] * 3] + \"_\" + positionsCompressed[edgeIndices[i] * 3 + 1] + \"_\" + positionsCompressed[edgeIndices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[edgeIndices[i + 1] * 3] + \"_\" + positionsCompressed[edgeIndices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[edgeIndices[i + 1] * 3 + 2] + \"/\";\n\n            edgesDict[key] = true;\n        }\n    });\n\n    {\n        let indices = mesh.indices;\n        let edgeIndices = mesh.edgeIndices;\n        let positionsCompressed = mesh.positionsCompressed;\n\n        for (var i = 0, len = indices.length; i < len; i += 3) {\n            var key = positionsCompressed[indices[i] * 3] + \"_\" + positionsCompressed[indices[i] * 3 + 1] + \"_\" + positionsCompressed[indices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 1] * 3] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 2] * 3] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 2];\n\n            if (!(key in meshDict)) {\n                console.log(\"Not found \" + key);\n                throw \"Ohhhh!\";\n            }\n        }\n\n        //  for (var i = 0, len = edgeIndices.length; i < len; i+=2)\n        //  {\n        //      var key = positionsCompressed[edgeIndices[i]*3] + \"_\" + positionsCompressed[edgeIndices[i]*3+1] + \"_\" + positionsCompressed[edgeIndices[i]*3+2] + \"/\" +\n        //                positionsCompressed[edgeIndices[i+1]*3] + \"_\" + positionsCompressed[edgeIndices[i+1]*3+1] + \"_\" + positionsCompressed[edgeIndices[i+1]*3+2] + \"/\";\n\n        //      if (!(key in edgesDict)) {\n        //          var key2 = edgeIndices[i] + \"_\" + edgeIndices[i+1];\n\n        //          console.log (\"   - Not found \" + key);\n        //          console.log (\"   - Not found \" + key2);\n        //         //  throw \"Ohhhh2!\";\n        //      }\n        //  }\n    }\n}\n\n","import {createMat4} from \"@xeokit/matrix\";\nimport {collapseAABB3, expandAABB3Points3} from \"@xeokit/boundaries\";\nimport {SolidPrimitive, SurfacePrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\nimport {quantizePositions3} from \"@xeokit/compression\";\n\nimport {buildEdgeIndices} from \"./buildEdgeIndices\";\nimport {uniquifyPositions} from \"./calculateUniquePositions\";\nimport {rebucketPositions} from \"./rebucketPositions\";\nimport type {GeometryParams} from \"./GeometryParams\";\nimport type {GeometryCompressedParams} from \"./GeometryCompressedParams\";\nimport type {IntArrayParam} from \"@xeokit/math\";\n\n/**\n * Compresses a {@link @xeokit/scene!GeometryParams | GeometryParams} into a {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}.\n *\n * See {@link @xeokit/scene} for usage examples.\n *\n * @param geometryParams Uncompressed geometry params.\n * @returns Compressed geometry params.\n */\nexport function compressGeometryParams(geometryParams: GeometryParams): GeometryCompressedParams {\n    const positionsDecompressMatrix = createMat4();\n    const aabb = collapseAABB3();\n    expandAABB3Points3(aabb, geometryParams.positions);\n    const positionsCompressed = quantizePositions3(geometryParams.positions, aabb, positionsDecompressMatrix);\n    const edgeIndices = (geometryParams.primitive === SolidPrimitive || geometryParams.primitive === SurfacePrimitive || geometryParams.primitive === TrianglesPrimitive) && geometryParams.indices\n        ? buildEdgeIndices(positionsCompressed, geometryParams.indices, positionsDecompressMatrix, 10)\n        : null;\n    let uniquePositionsCompressed: IntArrayParam;\n    let uniqueIndices: Uint32Array;\n    let uniqueEdgeIndices: Uint32Array | undefined;\n    [\n        uniquePositionsCompressed,\n        uniqueIndices,\n        uniqueEdgeIndices\n    ] = uniquifyPositions({\n        positionsCompressed,\n        uvs: geometryParams.uvs,\n        indices: geometryParams.indices,\n        edgeIndices: edgeIndices\n    });\n    const numUniquePositions = uniquePositionsCompressed.length / 3;\n    const geometryBuckets = <{\n        positionsCompressed: IntArrayParam,\n        indices: IntArrayParam,\n        edgeIndices: IntArrayParam\n    }[]>rebucketPositions({\n        positionsCompressed: uniquePositionsCompressed,\n        indices: uniqueIndices,\n        edgeIndices: uniqueEdgeIndices,\n    }, (numUniquePositions > (1 << 16)) ? 16 : 8);\n    return { // Assume that closed triangle mesh is decomposed into open surfaces\n        id: geometryParams.id,\n        primitive: (geometryParams.primitive === SolidPrimitive && geometryBuckets.length > 1) ? TrianglesPrimitive : geometryParams.primitive,\n        aabb,\n        positionsDecompressMatrix,\n        uvsDecompressMatrix: undefined,\n        geometryBuckets\n    };\n}","// import {KTX2BasisWriter} from \"@loaders.gl/textures\";\n// import {ImageLoader} from '@loaders.gl/images';\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter, SDKError} from \"@xeokit/core\";\nimport {LinesPrimitive, PointsPrimitive, SolidPrimitive, SurfacePrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\nimport {createAABB3} from \"@xeokit/boundaries\";\n\nimport {Geometry} from \"./Geometry\";\nimport {SceneObject} from \"./SceneObject\";\nimport {TextureSet} from \"./TextureSet\";\nimport {Texture} from \"./Texture\";\nimport {Mesh} from \"./Mesh\";\nimport type {RendererModel} from \"./RendererModel\";\nimport type {TransformParams} from \"./TransformParams\";\nimport type {TextureSetParams} from \"./TextureSetParams\";\nimport type {GeometryParams} from \"./GeometryParams\";\nimport type {GeometryCompressedParams} from \"./GeometryCompressedParams\";\nimport type {MeshParams} from \"./MeshParams\";\nimport type {SceneObjectParams} from \"./SceneObjectParams\";\nimport type {TextureParams} from \"./TextureParams\";\nimport {compressGeometryParams} from \"./compressGeometryParams\";\n//import {encode, load} from \"@loaders.gl/core\";\nimport type {SceneModelParams} from \"./SceneModelParams\";\nimport type {Scene} from \"./Scene\";\nimport type {SceneModelStats} from \"./SceneModelStats\";\n\n// XKT texture types\n\nconst COLOR_TEXTURE = 0;\nconst METALLIC_ROUGHNESS_TEXTURE = 1;\nconst NORMALS_TEXTURE = 2;\nconst EMISSIVE_TEXTURE = 3;\nconst OCCLUSION_TEXTURE = 4;\n\n// KTX2 encoding options for each texture type\n\nconst TEXTURE_ENCODING_OPTIONS: {\n    [key: string]: any\n} = {}\n\nTEXTURE_ENCODING_OPTIONS[COLOR_TEXTURE] = {\n    useSRGB: true,\n    qualityLevel: 50,\n    encodeUASTC: true,\n    mipmaps: true\n};\n\nTEXTURE_ENCODING_OPTIONS[EMISSIVE_TEXTURE] = {\n    useSRGB: true,\n    encodeUASTC: true,\n    qualityLevel: 10,\n    mipmaps: false\n};\n\nTEXTURE_ENCODING_OPTIONS[METALLIC_ROUGHNESS_TEXTURE] = {\n    useSRGB: false,\n    encodeUASTC: true,\n    qualityLevel: 50,\n    mipmaps: true // Needed for GGX roughness shading\n};\n\nTEXTURE_ENCODING_OPTIONS[NORMALS_TEXTURE] = {\n    useSRGB: false,\n    encodeUASTC: true,\n    qualityLevel: 10,\n    mipmaps: false\n};\n\nTEXTURE_ENCODING_OPTIONS[OCCLUSION_TEXTURE] = {\n    useSRGB: false,\n    encodeUASTC: true,\n    qualityLevel: 10,\n    mipmaps: false\n};\n\n/**\n * xeokit Geometry and Materials Model.\n *\n * * A representation of a model's geometry and materials within a {@link Scene}.\n * * Contains {@link SceneObject | SceneObjects}, {@link Mesh | Meshes}, {@link Geometry | Geometries} and {@link Texture | Textures}.\n * * Compresses textures using [Basis](/docs/pages/GLOSSARY.html#basis)\n * * Compresses geometry using [bucketing](/docs/pages/GLOSSARY.html#geometry-bucketing) and [quantization](/docs/pages/GLOSSARY.html#geometry-quantization)\n * * Viewable in the Browser with {@link @xeokit/viewer!Viewer}\n * * Importable from various model file formats, using {@link @xeokit/gltf!loadGLTF}, {@link @xeokit/las!loadLAS}, {@link @xeokit/cityjson!loadCityJSON}, {@link @xeokit/xkt!loadXKT} (etc)\n * * Exportable to XKT format using {@link @xeokit/xkt!saveXKT}\n * * Programmatically buildable using builder methods\n *\n * See {@link \"@xeokit/scene\"} for usage.\n */\nexport class SceneModel extends Component {\n\n    /**\n     * The {@link Scene} that contains this SceneModel.\n     */\n    public readonly scene: Scene;\n\n    /**\n     * Unique ID of this SceneModel.\n     *\n     * SceneModel are stored against this ID in {@link Scene.models}.\n     */\n    declare public readonly id: string;\n\n    /**\n     * If we want to view this SceneModel with a {@link @xeokit/viewer}, an\n     * optional ID of a {@link @xeokit/viewer!ViewLayer | ViewLayer} to view it in.\n     */\n    public readonly layerId?: string;\n\n    /**\n     * Indicates if this SceneModel has already been built.\n     *\n     * * Set ````true```` by {@link SceneModel.build | SceneModel.build}.\n     * * Subscribe to updates using {@link SceneModel.onBuilt | SceneModel.onBuilt} and {@link Scene.onModelCreated | Scene.onModelCreated}.\n     * * Don't create anything more in this SceneModel once it's built.\n     */\n    public built: boolean;\n\n    /**\n     * Indicates if this SceneModel has been destroyed.\n     *\n     * * Set ````true```` by {@link SceneModel.destroy | SceneModel.destroy}.\n     * * Don't create anything more in this SceneModel once it's destroyed.\n     */\n    declare readonly destroyed: boolean;\n\n    /**\n     * The edge threshold for automatic [edge primitive generation](/docs/pages/GLOSSARY.html#geometry-edge-generation).\n     */\n    public readonly edgeThreshold: number;\n\n    /**\n     * {@link @xeokit/scene!Geometry | Geometries} within this SceneModel, each mapped to {@link @xeokit/scene!Geometry.id | Geometry.id}.\n     *\n     * * Created by {@link SceneModel.createGeometry | SceneModel.createGeometry}.\n     */\n    public readonly geometries: { [key: string]: Geometry };\n\n    /**\n     * {@link Texture | Textures} within this SceneModel, each mapped to {@link Texture.id | Texture.id}.\n     *\n     * * Created by {@link SceneModel.createTexture | SceneModel.createTexture}.\n     * * Compressed asynchronously in {@link SceneModel.build | SceneModel.build}.\n     */\n    public readonly textures: { [key: string]: Texture };\n\n    /**\n     * {@link TextureSet | TextureSets} within this SceneModel, each mapped to {@link TextureSet.id | TextureSet.id}.\n     *\n     * * Created by {@link SceneModel.createTextureSet | SceneModel.createTextureSet}.\n     */\n    public readonly textureSets: { [key: string]: TextureSet };\n\n    /**\n     * {@link Mesh | Meshes} within this SceneModel, each mapped to {@link Mesh.id | Mesh.id}.\n     *\n     * * Created by {@link SceneModel.createMesh | SceneModel.createMesh}.\n     */\n    public readonly meshes: { [key: string]: Mesh };\n\n    /**\n     * {@link SceneObject | SceneObjects} within this SceneModel, each mapped to {@link SceneObject.id | SceneObject.id}.\n     *\n     * * Created by {@link SceneModel.createObject | SceneModel.createObject}.\n     */\n    readonly objects: { [key: string]: SceneObject };\n\n    /**\n     * The axis-aligned 3D World-space boundary of this SceneModel.\n     *\n     * * Created by {@link SceneModel.build | SceneModel.build}.\n     */\n    public readonly aabb: Float64Array;\n\n    /**\n     * Emits an event when this {@link @xeokit/scene!SceneModel | SceneModel} has been built.\n     *\n     * * Triggered by {@link SceneModel.build | SceneModel.build}.\n     *\n     * @event onBuilt\n     */\n    public readonly onBuilt: EventEmitter<SceneModel, null>;\n\n    /**\n     * Emits an event when this {@link @xeokit/scene!SceneModel | SceneModel} has been destroyed.\n     *\n     * * Triggered by {@link SceneModel.destroy | SceneModel.destroy}.\n     *\n     * @event\n     */\n    declare public readonly onDestroyed: EventEmitter<SceneModel, null>;\n\n    /**\n     *  Internal interface through which a SceneModel can load property updates into a renderer.\n     *\n     * @internal\n     */\n    public rendererModel: RendererModel | null;\n\n    /**\n     * Statistics on this SceneModel.\n     */\n    public readonly stats: SceneModelStats;\n\n    #texturesList: Texture[];\n    #numObjects: number;\n    #meshUsedByObject: { [key: string]: boolean };\n\n    /**\n     * @private\n     */\n    constructor(scene: Scene, sceneModelParams: SceneModelParams) {\n        super(scene, {\n            id: sceneModelParams.id\n        });\n\n        this.scene = scene;\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<SceneModel, null>());\n        this.onDestroyed = new EventEmitter(new EventDispatcher<SceneModel, null>());\n\n        this.#numObjects = 0;\n        this.#meshUsedByObject = {};\n\n        this.id = sceneModelParams.id || \"default\";\n        this.layerId = sceneModelParams.layerId;\n        this.edgeThreshold = 10;\n        this.geometries = {};\n        this.textures = {};\n        this.#texturesList = [];\n        this.textureSets = {};\n        this.meshes = {};\n        this.objects = {};\n        this.aabb = createAABB3();\n        this.built = false;\n        this.rendererModel = null;\n\n        this.stats = {\n            numGeometries: 0,\n            numLines: 0,\n            numMeshes: 0,\n            numObjects: 0,\n            numPoints: 0,\n            numTextureSets: 0,\n            numTextures: 0,\n            numTriangles: 0,\n            numVertices: 0,\n            textureBytes: 0\n        };\n\n        this.fromJSON(sceneModelParams);\n    }\n\n    /**\n     * Adds components to this SceneModel.\n     *\n     * See {@link \"@xeokit/scene\"} for usage.\n     *\n     * @param sceneModelParams\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this SceneModel has already been built.\n     * * If this SceneModel has already been destroyed.\n     * * A duplicate component ({@link SceneObject}, {@link Mesh}, {@link Geometry}, {@link Texture} etc.) was already created within this SceneModel.\n     */\n    fromJSON(sceneModelParams: SceneModelParams): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to add components to SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to add components to SceneModel - SceneModel already built\");\n        }\n        if (sceneModelParams.geometries) {\n            for (let i = 0, len = sceneModelParams.geometries.length; i < len; i++) {\n                this.createGeometry(sceneModelParams.geometries[i]);\n            }\n        }\n        if (sceneModelParams.textures) {\n            for (let i = 0, len = sceneModelParams.textures.length; i < len; i++) {\n                this.createTexture(sceneModelParams.textures[i]);\n            }\n        }\n        if (sceneModelParams.textureSets) {\n            for (let i = 0, len = sceneModelParams.textureSets.length; i < len; i++) {\n                this.createTextureSet(sceneModelParams.textureSets[i]);\n            }\n        }\n        if (sceneModelParams.meshes) {\n            for (let i = 0, len = sceneModelParams.meshes.length; i < len; i++) {\n                this.createMesh(sceneModelParams.meshes[i]);\n            }\n        }\n        if (sceneModelParams.objects) {\n            for (let i = 0, len = sceneModelParams.objects.length; i < len; i++) {\n                this.createObject(sceneModelParams.objects[i]);\n            }\n        }\n    }\n\n    /**\n     * Creates a new {@link Transform} within this SceneModel.\n     *\n     * * Stores the new {@link Transform} in {@link SceneModel.transforms | SceneModel.transforms}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const spinningTransform = sceneModel.createTransform({\n     *      id: \"spinningTransform\",\n     *      rotation: [0, 10, 0]\n     * });\n     *\n     * const spinningTransformAgain = sceneModel.transforms[\"spinningTransform\"];\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param transformParams Transform creation parameters.\n     * @returns *{@link Transform}*\n     * * On success\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If SceneModel has already been built or destroyed.\n     */\n    createTransform(transformParams: TransformParams): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create Transform in SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create Transform in SceneModel - SceneModel already built\");\n        }\n        //...\n    }\n\n    /**\n     * Creates a new {@link Texture} within this SceneModel.\n     *\n     * * Stores the new {@link Texture} in {@link SceneModel.textures | SceneModel.textures}.\n     * * Textures are compressed asynchronously by {@link SceneModel.build | SceneModel.build}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const texture = sceneModel.createTexture({\n     *      id: \"myColorTexture\",\n     *      src: // Path to JPEG, PNG, KTX2,\n     *      image: // HTMLImageElement,\n     *      buffers: // ArrayBuffer[] containing KTX2 MIP levels\n     *      preloadColor: [1,0,0,1],\n     *      flipY: false,\n     *      encoding: LinearEncoding, // @xeokit/constants\n     *      magFilter: LinearFilter,\n     *      minFilter: LinearFilter,\n     *      wrapR: ClampToEdgeWrapping,\n     *      wrapS: ClampToEdgeWrapping,\n     *      wrapT: ClampToEdgeWrapping,\n     * });\n     *\n     * const textureAgain = sceneModel.textures[\"myColorTexture\"];\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param textureParams - Texture creation parameters.\n     * @returns *{@link Texture}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If SceneModel has already been built or destroyed.\n     * * Invalid TextureParams were given.\n     * * Texture with given ID already exists in this Scene.\n     */\n    createTexture(textureParams: TextureParams): Texture | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create Texture in SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create Texture in SceneModel - SceneModel already built\");\n        }\n        if (!textureParams.imageData && !textureParams.src && !textureParams.buffers) {\n            return new SDKError(\"Failed to create Texture in SceneModel - Parameter expected: textureParams.imageData, textureParams.src or textureParams.buffers\");\n        }\n        if (this.textures[textureParams.id]) {\n            return new SDKError(`Failed to create Texture in SceneModel - Texture already exists with this ID: ${textureParams.id}`);\n        }\n        if (textureParams.src) {\n            const fileExt = textureParams.src.split('.').pop();\n            // if (fileExt !== \"jpg\" && fileExt !== \"jpeg\" && fileExt !== \"png\") {\n            //     console.error(`Model does not support image files with extension '${fileExt}' - won't create texture '${textureParams.id}`);\n            //     return;\n            // }\n        }\n        if (textureParams.imageData) {\n            this.stats.textureBytes += (textureParams.imageData.width * textureParams.imageData.height * 4); // Guessing\n        }\n        const texture = new Texture(textureParams);\n        this.textures[textureParams.id] = texture;\n        this.#texturesList.push(texture);\n        this.stats.numTextures++;\n        return texture;\n    }\n\n    /**\n     * Creates a new {@link TextureSet} within this SceneModel.\n     *\n     * * Stores the new {@link TextureSet} in {@link SceneModel.textureSets | SceneModel.textureSets}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const textureSet = sceneModel.createTextureSet({\n     *      id: \"myTextureSet\",\n     *      colorTextureId: \"myColorTexture\"\n     * });\n     *\n     * const textureSetAgain = sceneModel.textureSets[\"myTextureSet\"];\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param textureSetParams TextureSet creation parameters.\n     *\n     * @returns *{@link TextureSet}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If SceneModel has already been built or destroyed.\n     * * Invalid TextureSetParams were given.\n     * * TextureSet with given ID already exists in this SceneModel.\n     * * One or more of the given Textures could not be found in this SceneModel.\n     */\n    createTextureSet(textureSetParams: TextureSetParams): TextureSet | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create TextureSet in SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create TextureSet in SceneModel - SceneModel already built\");\n        }\n        if (this.textureSets[textureSetParams.id]) {\n            return new SDKError(`Failed to create TextureSet in SceneModel - TextureSet already exists with this ID: ${textureSetParams.id}`);\n        }\n        let colorTexture;\n        if (textureSetParams.colorTextureId !== undefined && textureSetParams.colorTextureId !== null) {\n            colorTexture = this.textures[textureSetParams.colorTextureId];\n            if (!colorTexture) {\n                return new SDKError(`Failed to create TextureSet in SceneModel - Texture not found: ${textureSetParams.colorTextureId} - ensure that you create it first with createTexture()`);\n            }\n            colorTexture.channel = COLOR_TEXTURE;\n        }\n        let metallicRoughnessTexture;\n        if (textureSetParams.metallicRoughnessTextureId !== undefined && textureSetParams.metallicRoughnessTextureId !== null) {\n            metallicRoughnessTexture = this.textures[textureSetParams.metallicRoughnessTextureId];\n            if (!metallicRoughnessTexture) {\n                return new SDKError(`Failed to create TextureSet in SceneModel - Texture not found: ${textureSetParams.metallicRoughnessTextureId} - ensure that you create it first with createTexture()`);\n            }\n            metallicRoughnessTexture.channel = METALLIC_ROUGHNESS_TEXTURE;\n        }\n        let normalsTexture;\n        if (textureSetParams.normalsTextureId !== undefined && textureSetParams.normalsTextureId !== null) {\n            normalsTexture = this.textures[textureSetParams.normalsTextureId];\n            if (!normalsTexture) {\n                return new SDKError(`Failed to create TextureSet in SceneModel - Texture not found: ${textureSetParams.normalsTextureId} - ensure that you create it first with createTexture()`);\n            }\n            normalsTexture.channel = NORMALS_TEXTURE;\n        }\n        let emissiveTexture;\n        if (textureSetParams.emissiveTextureId !== undefined && textureSetParams.emissiveTextureId !== null) {\n            emissiveTexture = this.textures[textureSetParams.emissiveTextureId];\n            if (!emissiveTexture) {\n                return new SDKError(`Failed to create TextureSet in SceneModel - Texture not found: ${textureSetParams.emissiveTextureId} - ensure that you create it first with createTexture()`);\n            }\n            emissiveTexture.channel = EMISSIVE_TEXTURE;\n        }\n        let occlusionTexture;\n        if (textureSetParams.occlusionTextureId !== undefined && textureSetParams.occlusionTextureId !== null) {\n            occlusionTexture = this.textures[textureSetParams.occlusionTextureId];\n            if (!occlusionTexture) {\n                return new SDKError(`Failed to create TextureSet in SceneModel - Texture not found: ${textureSetParams.occlusionTextureId} - ensure that you create it first with createTexture()`);\n            }\n            occlusionTexture.channel = OCCLUSION_TEXTURE;\n        }\n        const textureSet = new TextureSet(textureSetParams, {\n            emissiveTexture,\n            occlusionTexture,\n            metallicRoughnessTexture,\n            colorTexture\n        });\n        this.textureSets[textureSetParams.id] = textureSet;\n        this.stats.numTextureSets++;\n        return textureSet;\n    }\n\n    /**\n     * Creates a new {@link @xeokit/scene!Geometry} within this SceneModel, from non-compressed geometry parameters.\n     *\n     * * Stores the new {@link Geometry} in {@link SceneModel.geometries | SceneModel.geometries}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const boxGeometry = sceneModel.createGeometry({\n     *      id: \"boxGeometry\",\n     *      primitive: TrianglesPrimitive, // @xeokit/constants\n     *      positions: [\n     *          1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, // v0-v1-v2-v3 front\n     *          1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, // v0-v3-v4-v1 right\n     *          1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, // v0-v1-v6-v1 top\n     *          -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, // v1-v6-v7-v2 left\n     *          -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1,// v7-v4-v3-v2 bottom\n     *          1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1 // v4-v7-v6-v1 back\n     *      ],\n     *      indices: [\n     *          0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15,\n     *          16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n     *      ]\n     *  });\n     *\n     * if (boxGeometry instanceof SDKError) {\n     *     console.log(boxGeometry.message);\n     * } else {\n     *      const boxGeometryAgain = sceneModel.geometries[\"boxGeometry\"];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param geometryParams Non-compressed geometry parameters.\n     * @returns *{Geometry}*\n     *  * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this SceneModel has already been destroyed.\n     * * If this SceneModel has already been built.\n     * * Invalid GeometryParams were given.\n     * * Geometry of given ID already exists in this SceneModel.\n     * * Unsupported primitive type given.\n     * * Mandatory vertex positions were not given. Vertex positions are mandatory for all primitive types.\n     * * Mandatory indices were not given for primitive type that is not {@link PointsPrimitive}. Indices are mandatory for all primitive types except PointsPrimitive.\n     * * Indices out of range of vertex positions.\n     * * Indices out of range of vertex UVs.\n     * * Mismatch between given quantities of vertex positions and UVs.\n     */\n    createGeometry(geometryParams: GeometryParams): Geometry | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create Geometry in SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create Geometry in SceneModel - SceneModel already built\");\n        }\n        if (!geometryParams) {\n            return new SDKError(\"Failed to create Geometry in SceneModel - Parameters expected: geometryParams\");\n        }\n        if (geometryParams.id === null || geometryParams.id === undefined) {\n            return new SDKError(\"Failed to create Geometry in SceneModel - Parameter expected: geometryParams.id\");\n        }\n        const geometryId = geometryParams.id;\n        if (this.geometries[geometryId]) {\n            return new SDKError(`Failed to create Geometry in SceneModel - Geometry with this ID already created: ${geometryId}`);\n        }\n        const primitive = geometryParams.primitive;\n        if (primitive !== PointsPrimitive && primitive !== LinesPrimitive && primitive !== TrianglesPrimitive && primitive !== SolidPrimitive && primitive !== SurfacePrimitive) {\n            return new SDKError(`Failed to create Geometry in SceneModel - Unsupported value for geometryParams.primitive: '${primitive}' - supported values are PointsPrimitive, LinesPrimitive, TrianglesPrimitive, SolidPrimitive and SurfacePrimitive`);\n        }\n        if (!geometryParams.positions) {\n            return new SDKError(\"Failed to create Geometry in SceneModel - Param expected: geometryParams.positions\");\n        }\n        if (!geometryParams.indices && primitive !== PointsPrimitive) {\n            return new SDKError(`Failed to create Geometry in SceneModel - Param expected: geometryParams.indices (required for primitive type)`);\n        }\n        if (geometryParams.uvs) {\n            if (geometryParams.uvs.length / 2 !== geometryParams.positions.length / 3) {\n                return new SDKError(\"Failed to create Geometry in SceneModel - mismatch between given quantities of vertex positions and UVs\");\n            }\n        }\n        if (geometryParams.indices) {\n            const lastPositionsIdx = geometryParams.positions.length / 3;\n            for (let i = 0, len = geometryParams.indices.length; i < len; i++) {\n                const idx = geometryParams.indices[i];\n                if (idx < 0 || idx >= lastPositionsIdx) {\n                    return new SDKError(\"Failed to create Geometry in SceneModel - indices out of range of vertex positions\");\n                }\n                if (geometryParams.uvs) {\n                    const lastUVsIdx = geometryParams.uvs.length / 2;\n                    if (idx < 0 || idx >= lastUVsIdx) {\n                        return new SDKError(\"Failed to create Geometry in SceneModel - indices out of range of vertex UVs\");\n                    }\n                }\n            }\n        }\n        const geometry = new Geometry(<GeometryCompressedParams>compressGeometryParams(geometryParams));\n        this.geometries[geometryId] = geometry;\n        this.stats.numGeometries++;\n        if (geometryParams.indices) {\n            if (geometry.primitive === TrianglesPrimitive) {\n                this.stats.numTriangles += geometryParams.indices.length / 3;\n            } else if (geometry.primitive === LinesPrimitive) {\n                this.stats.numLines += geometryParams.indices.length / 2;\n            }\n        } else if (geometry.primitive === PointsPrimitive) {\n            this.stats.numPoints += geometryParams.positions.length / 3;\n        }\n        this.stats.numVertices += geometryParams.positions.length / 3;\n        return geometry;\n    }\n\n    /**\n     * Creates a new {@link @xeokit/scene!Geometry} within this SceneModel, from pre-compressed geometry parameters.\n     *\n     * * Stores the new {@link Geometry} in {@link SceneModel.geometries | SceneModel.geometries}.\n     * * Use {@link @xeokit/compression!compressGeometryParams} to pre-compress {@link @xeokit/scene!GeometryParams|GeometryParams} into {@link @xeokit/scene!GeometryCompressedParams|GeometryCompressedParams}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const boxGeometry = sceneModel.createGeometryCompressed({\n     *      id: \"boxGeometry\",\n     *      primitive: TrianglesPrimitive, // @xeokit/constants\n     *      positionsDecompressMatrix: [\n     *          0.00003052270125906143, 0, 0, 0,\n     *          0, 0.00003052270125906143, 0, 0,\n     *          0, 0, 0.00003052270125906143, 0,\n     *          -1, -1, -1, 1\n     *      ],\n     *      geometryBuckets: [\n     *          {\n     *              positionsCompressed: [\n     *                  65525, 65525, 65525, 0, 65525, 65525, 0, 0,\n     *                  65525, 65525, 0, 65525, 65525, 0, 0, 65525,\n     *                  65525, 0, 0, 65525, 0, 0, 0, 0\n     *              ],\n     *              indices: [\n     *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,\n     *                  0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2,\n     *                  4, 7, 6, 4, 6, 5\n     *              ]\n     *          }\n     *      ]\n     * });\n     *\n     * if (boxGeometry instanceof SDKError) {\n     *     console.log(boxGeometry.message);\n     * } else {\n     *      const boxGeometryAgain = sceneModel.geometries[\"boxGeometry\"];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param geometryCompressedParams Pre-compressed geometry parameters.\n     * @returns *{@link Geometry}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this SceneModel has already been destroyed.\n     * * If this SceneModel has already been built.\n     * * Invalid GeometryParams were given.\n     * * Geometry of given ID already exists in this SceneModel.\n     * * Unsupported primitive type given.\n     * * Mandatory vertex positions were not given. Vertex positions are mandatory for all primitive types.\n     * * Mandatory indices were not given for primitive type that is not {@link PointsPrimitive}. Indices are mandatory for all primitive types except PointsPrimitive.\n     * * Indices out of range of vertex positions.\n     * * Indices out of range of vertex UVs.\n     * * Mismatch between given quantities of vertex positions and UVs.\n     */\n    createGeometryCompressed(geometryCompressedParams: GeometryCompressedParams): Geometry | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to add compressed Geometry to SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to add compressed Geometry to SceneModel - SceneModel already built\");\n        }\n        if (!geometryCompressedParams) {\n            return new SDKError(\"Failed to add compressed Geometry to SceneModel - Parameters expected: geometryCompressedParams\");\n        }\n        const geometryId = geometryCompressedParams.id;\n        if (this.geometries[geometryId]) {\n            return new SDKError(`Failed to add compressed Geometry to SceneModel - Geometry with this ID already created: ${geometryId}`);\n        }\n        const primitive = geometryCompressedParams.primitive;\n        if (primitive !== PointsPrimitive && primitive !== LinesPrimitive && primitive !== TrianglesPrimitive && primitive !== SolidPrimitive && primitive !== SurfacePrimitive) {\n            return new SDKError(`Failed to add compressed Geometry to SceneModel - Unsupported value for geometryCompressedParams.primitive: '${primitive}' - supported values are PointsPrimitive, LinesPrimitive, TrianglesPrimitive, SolidPrimitive and SurfacePrimitive`);\n        }\n        const geometry = new Geometry(geometryCompressedParams);\n        this.geometries[geometryId] = geometry;\n        this.stats.numGeometries++;\n        return geometry;\n    }\n\n    /**\n     * Creates a new {@link Mesh} within this SceneModel.\n     *\n     * * Stores the new {@link Mesh} in {@link SceneModel.meshes | SceneModel.meshes}.\n     * * A {@link Mesh} can be owned by one {@link SceneObject}, which can own multiple {@link Mesh}es.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const redBoxMesh = sceneModel.createMesh({\n     *      id: \"redBoxMesh\",\n     *      geometryId: \"boxGeometry\",\n     *      textureSetId: \"myTextureSet\",\n     *      position: [-4, -6, -4],\n     *      scale: [1, 3, 1],\n     *      rotation: [0, 0, 0],\n     *      color: [1, 0.3, 0.3]\n     * });\n     *\n     * if (redBoxMesh instanceof SDKError) {\n     *      console.log(redBoxMesh.message);\n     * } else {\n     *      const redBoxMeshAgain = sceneModel.meshes[\"redBoxMesh\"];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param meshParams Pre-compressed mesh parameters.\n     * @returns *{@link Mesh}*\n     *  * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this SceneModel has already been destroyed.\n     * * If this SceneModel has already been built.\n     * * Invalid MeshParams were given.\n     * * Mesh of given ID already exists in this SceneModel.\n     * * Specified Geometry could not be found in this SceneModel.\n     * * Specified TextureSet could not be found in this SceneModel.\n     */\n    createMesh(meshParams: MeshParams): Mesh | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create Mesh in SceneModel - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create Mesh in SceneModel - SceneModel already built\");\n        }\n        if (this.meshes[meshParams.id]) {\n            return new SDKError(`Failed to create Mesh in SceneModel - Mesh already exists with this ID: ${meshParams.id}`);\n        }\n        const geometry = this.geometries[meshParams.geometryId];\n        if (!geometry) {\n            return new SDKError(`Failed to create Mesh in SceneModel - Geometry not found: ${meshParams.geometryId}`);\n        }\n        const textureSet = meshParams.textureSetId ? this.textureSets[meshParams.textureSetId] : undefined;\n        if (meshParams.textureSetId && !textureSet) {\n            return new SDKError(`Failed to create Mesh in SceneModel - TextureSet not found: ${meshParams.textureSetId}`);\n        }\n\n        // geometry.numInstances++;\n        // let matrix = meshParams.matrix;\n        // if (!matrix) {\n        //     const position = meshParams.position;\n        //     const scale = meshParams.scale;\n        //     const rotation = meshParams.rotation;\n        //     if (position || scale || rotation) {\n        //         matrix = identityMat4();\n        //         const quaternion = eulerToQuat(rotation || [0, 0, 0], \"XYZ\", identityQuat());\n        //         composeMat4(position || [0, 0, 0], quaternion, scale || [1, 1, 1], matrix)\n        //     } else {\n        //         matrix = identityMat4();\n        //     }\n        // }\n        // const meshIndex = this.meshesList.length;\n\n        const mesh = new Mesh({\n            id: meshParams.id,\n            geometry,\n            textureSet,\n            matrix: meshParams.matrix,\n            color: meshParams.color,\n            opacity: meshParams.opacity,\n            roughness: meshParams.roughness,\n            metallic: meshParams.metallic\n        });\n        this.meshes[meshParams.id] = mesh;\n        this.stats.numMeshes++;\n        return mesh;\n    }\n\n    /**\n     * Creates a new {@link SceneObject}.\n     *\n     * * Stores the new {@link SceneObject} in {@link SceneModel.objects | SceneModel.objects} and {@link Scene.objects | Scene.objects}.\n     * * Fires an event via {@link Scene.onObjectCreated | Scene.onObjectCreated}.\n     * * Each {@link Mesh} is allowed to belong to one SceneObject.\n     * * SceneObject IDs must be unique within the SceneModel's {@link Scene}.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const redBoxObject = sceneModel.createObject({\n     *     id: \"redBoxObject\",\n     *     meshIds: [\"redBoxMesh\"]\n     * });\n     *\n     * if (redBoxObject instanceof SDKError) {\n     *      console.log(redBoxObject.message);\n     * } else {\n     *      const redBoxObjectAgain = sceneModel.objects[\"redBoxObject\"];\n     *      const redBoxObjectOnceMore = scene.objects[\"redBoxObject\"];\n     * }\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @param objectParams SceneObject parameters.\n     * @returns *{@link SceneObject}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If this SceneModel has already been destroyed.\n     * * If this SceneModel has already been built.\n     * * Invalid ObjectParams were given.\n     * * SceneObject of given ID already exists in this SceneModel's Scene. Note that SceneObject IDs must be unique within the Scene.\n     * * No Meshes were specified.\n     * * One or more of the specified Meshes already belong to another SceneObject in this SceneModel.\n     * * Specified Meshes could not be found in this SceneModel.\n     */\n    createObject(objectParams: SceneObjectParams): SceneObject | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Failed to create SceneObject - SceneModel already destroyed\");\n        }\n        if (this.built) {\n            return new SDKError(\"Failed to create SceneObject SceneModel already built\");\n        }\n        if (objectParams.meshIds.length === 0) {\n            return new SDKError(\"Failed to create SceneObject - no meshes specified\");\n        }\n        if (this.scene.objects[objectParams.id]) {\n            return new SDKError(`Failed to create SceneObject - SceneObject already exists in Scene: ${objectParams.id}`);\n        }\n        const meshIds = objectParams.meshIds;\n        const meshes = [];\n        for (let meshIdIdx = 0, meshIdLen = meshIds.length; meshIdIdx < meshIdLen; meshIdIdx++) {\n            const meshId = meshIds[meshIdIdx];\n            const mesh = this.meshes[meshId];\n            if (!mesh) {\n                return new SDKError(`Failed to create SceneObject - Mesh not found: ${meshId}`);\n            }\n            if (this.#meshUsedByObject[meshId]) {\n                return new SDKError(`Failed to create SceneObject - Mesh ${meshId} already belongs to another SceneObject`);\n            }\n            meshes.push(mesh);\n            this.#meshUsedByObject[mesh.id] = true;\n        }\n        const sceneObject = new SceneObject({\n            id: objectParams.id,\n            layerId: objectParams.layerId || this.layerId,\n            model: this,\n            meshes\n        });\n        for (let i = 0, len = meshes.length; i < len; i++) {\n            const mesh = meshes[i];\n            mesh.object = sceneObject;\n        }\n        this.#numObjects++;\n        this.objects[objectParams.id] = sceneObject;\n        this.stats.numObjects++;\n        return sceneObject;\n    }\n\n    /**\n     * Finalizes this SceneModel, readying it for use.\n     *\n     * * Fires an event via {@link SceneModel.onBuilt | SceneModel.onBuilt} and {@link Scene.onModelCreated | SceneModel.onCreated}, to indicate to subscribers that\n     * the SceneModel is complete and ready to use.\n     * * Sets {@link SceneModel.built | SceneModel.built} ````true````.\n     * * You can only call this method once on a SceneModel.\n     * * The SceneModel must have at least one {@link SceneObject}.\n     * * Once built, no more components can be created in a SceneModel.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * sceneMode.onBuilt.subscribe(()=>{\n     *     // Our SceneModel is built and ready to use\n     * });\n     *\n     * myScene.onModelCreated.subscribe((sceneModel)=>{\n     *     // Another way to subscribe to SceneModel readiness\n     * });\n     *\n     * mySceneModel.build().then((result) => { // Asynchronous (texture compression etc).\n     *      if (result instanceof SDKError) {\n     *          console.log(result.message);\n     *      }  else {\n     *          // Now we can do things with our SceneModel\n     *      }\n     * }).catch(sdkError) {// SDKError\n     *     console.log(sdkError.message);\n     * };\n     * ````\n     *\n     * See {@link \"@xeokit/scene\"} for more usage info.\n     *\n     * @throws *{@link @xeokit/core!SDKError}*\n     * * If SceneModel has already been built or destroyed.\n     * * If no SceneObjects were created in this SceneModel.\n     */\n    build(): Promise<SceneModel> {\n        return new Promise<SceneModel>((resolve) => {\n            if (this.destroyed) {\n                throw new SDKError(\"Failed to build SceneModel - SceneModel already destroyed\");\n            }\n            if (this.built) {\n                throw new SDKError(\"Failed to build SceneModel - SceneModel already built\");\n            }\n            this.#removeUnusedTextures();\n           // this.#compressTextures().then(() => {\n                this.built = true;\n                this.onBuilt.dispatch(this, null);\n                resolve(this);\n            // }).catch((e) => {\n            //     throw e;\n            // });\n        });\n    }\n\n    #removeUnusedTextures() {\n        // let texturesList = [];\n        // const textures = {};\n        // for (let i = 0, leni = this.texturesList.length; i < leni; i++) {\n        //     const texture = this.texturesList[i];\n        //     if (texture.channel !== null) {\n        //         texture.textureIndex = texturesList.length;\n        //         texturesList.push(texture);\n        //         textures[texture.id] = texture;\n        //     }\n        // }\n        // this.texturesList = texturesList;\n        // this.textures = textures;\n    }\n\n    // #compressTextures(): Promise<any> {\n    //     let countTextures = this.#texturesList.length;\n    //     return new Promise<void>((resolve) => {\n    //         if (countTextures === 0) {\n    //             resolve();\n    //             return;\n    //         }\n    //         for (let i = 0, leni = this.#texturesList.length; i < leni; i++) {\n    //             const texture = this.#texturesList[i];\n    //             const encodingOptions = TEXTURE_ENCODING_OPTIONS[texture.channel] || {};\n    //             if (texture.src) {  // Texture created with SceneModel#createTexture({ src: ... })\n    //                 const src = texture.src;\n    //                 const fileExt = src.split('.').pop();\n    //                 switch (fileExt) {\n    //                     case \"jpeg\":\n    //                     case \"jpg\":\n    //                     case \"png\":\n    //\n    //                         load(src, ImageLoader, {\n    //                             image: {\n    //                                 type: \"data\"\n    //                             }\n    //                         }).then((imageData) => {\n    //                             if (texture.compressed) {\n    //                                 encode(imageData, KTX2BasisWriter, encodingOptions).then((encodedData) => {\n    //                                     const encodedImageData = new Uint8Array(encodedData);\n    //                                     this.stats.textureBytes += encodedImageData.byteLength;\n    //                                     texture.imageData = encodedImageData;\n    //                                     if (--countTextures <= 0) {\n    //                                         resolve();\n    //                                     }\n    //                                 }).catch((err) => {\n    //                                     return new SDKError(`Failed to compress texture: ${err}`);\n    //                                 });\n    //                             } else {\n    //                                 texture.imageData = new Uint8Array(1);\n    //                                 if (--countTextures <= 0) {\n    //                                     resolve();\n    //                                 }\n    //                             }\n    //                         }).catch((err) => {\n    //                             return new SDKError(`Failed to load texture image: ${err}`);\n    //                         });\n    //                         break;\n    //                     default:\n    //                         if (--countTextures <= 0) {\n    //                             resolve();\n    //                         }\n    //                         break;\n    //                 }\n    //             }\n    //             if (texture.imageData) {// Texture created with SceneModel#createTexture({ imageData: ... })\n    //                 if (texture.compressed) {\n    //                     encode(texture.imageData, KTX2BasisWriter, encodingOptions)\n    //                         .then((encodedImageData) => {\n    //                             texture.imageData = new Uint8Array(encodedImageData);\n    //                             this.stats.textureBytes += texture.imageData.byteLength;\n    //                             if (--countTextures <= 0) {\n    //                                 resolve();\n    //                             }\n    //                         }).catch((err) => {\n    //                         return new SDKError(`Failed to compress texture: ${err}`);\n    //                     });\n    //                 } else {\n    //                     texture.imageData = new Uint8Array(1);\n    //                     if (--countTextures <= 0) {\n    //                         resolve();\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //     });\n    // }\n}\n","import {Component, EventEmitter, SDKError} from \"@xeokit/core\";\nimport {FloatArrayParam, MAX_DOUBLE, MIN_DOUBLE} from \"@xeokit/math\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {SceneModel} from \"./SceneModel\";\nimport type {SceneObject} from \"./SceneObject\";\nimport type {SceneModelParams} from \"./SceneModelParams\";\nimport {createAABB3} from \"@xeokit/boundaries\";\n\n/**\n * A scene representation.\n *\n * A Scene is a container of {@link SceneModel | SceneModels} and {@link SceneObject | SceneObjects}.\n */\nexport class Scene extends Component {\n\n    /**\n     * The {@link @xeokit/scene!SceneModel | SceneModels} belonging to this Scene, each keyed to\n     * its {@link @xeokit/scene!SceneModel.id | SceneModel.id}.\n     */\n    public readonly models: { [key: string]: SceneModel };\n\n    /**\n     * The {@link SceneObject | SceneObjects} in this Scene, mapped to {@link SceneObject.id | SceneObject.id}.\n     */\n    public readonly objects: { [key: string]: SceneObject };\n\n    /**\n     * Emits an event each time a {@link SceneModel} is created in this Scene.\n     *\n     * @event\n     */\n    public readonly onModelCreated: EventEmitter<Scene, SceneModel>;\n\n    /**\n     * Emits an event each time a {@link SceneModel} is destroyed in this Scene.\n     *\n     * @event\n     */\n    public readonly onModelDestroyed: EventEmitter<Scene, SceneModel>;\n\n    #onModelBuilts: { [key: string]: any };\n    #onModelDestroys: { [key: string]: any };\n    #center: Float64Array;\n    #aabbDirty: boolean;\n    #aabb: Float64Array;\n\n    /**\n     * Creates a new Scene.\n     *\n     * See {@link \"@xeokit/scene\"} for usage.\n     */\n    constructor() {\n\n        super(null, {});\n\n        this.#aabb = createAABB3();\n        this.#aabbDirty = true;\n\n        this.models = {};\n        this.objects = {};\n\n        this.#onModelBuilts = {};\n        this.#onModelDestroys = {};\n        this.onModelCreated = new EventEmitter(new EventDispatcher<Scene, SceneModel>());\n        this.onModelDestroyed = new EventEmitter(new EventDispatcher<Scene, SceneModel>());\n    }\n\n    /**\n     * Gets the collective World-space 3D center of all the {@link SceneModel | SceneModels} in this Scene.\n     */\n    get center(): Float64Array {\n        if (this.#aabbDirty) {\n            const aabb = this.aabb; // Lazy-build\n            this.#center[0] = (aabb[0] + aabb[3]) / 2;\n            this.#center[1] = (aabb[1] + aabb[4]) / 2;\n            this.#center[2] = (aabb[2] + aabb[5]) / 2;\n        }\n        return this.#center;\n    }\n\n    /**\n     * Gets the collective World-space 3D [axis-aligned boundary](/docs/pages/GLOSSARY.html#aabb) of all the {@link SceneModel | SceneModels} in this Scene.\n     *\n     * The boundary will be of the form ````[xMin, yMin, zMin, xMax, yMax, zMax]````.\n     */\n    get aabb(): FloatArrayParam {\n        if (this.#aabbDirty) {\n            let xmin = MAX_DOUBLE;\n            let ymin = MAX_DOUBLE;\n            let zmin = MAX_DOUBLE;\n            let xmax = MIN_DOUBLE;\n            let ymax = MIN_DOUBLE;\n            let zmax = MIN_DOUBLE;\n            let aabb;\n            const objects = this.objects;\n            let valid = false;\n            for (const objectId in objects) {\n                if (objects.hasOwnProperty(objectId)) {\n                    const object = objects[objectId];\n                    // if (object.collidable === false) {\n                    //     continue;\n                    // }\n                    aabb = object.aabb;\n                    if (aabb[0] < xmin) {\n                        xmin = aabb[0];\n                    }\n                    if (aabb[1] < ymin) {\n                        ymin = aabb[1];\n                    }\n                    if (aabb[2] < zmin) {\n                        zmin = aabb[2];\n                    }\n                    if (aabb[3] > xmax) {\n                        xmax = aabb[3];\n                    }\n                    if (aabb[4] > ymax) {\n                        ymax = aabb[4];\n                    }\n                    if (aabb[5] > zmax) {\n                        zmax = aabb[5];\n                    }\n                    valid = true;\n                }\n            }\n            if (!valid) {\n                xmin = -100;\n                ymin = -100;\n                zmin = -100;\n                xmax = 100;\n                ymax = 100;\n                zmax = 100;\n            }\n            this.#aabb[0] = xmin;\n            this.#aabb[1] = ymin;\n            this.#aabb[2] = zmin;\n            this.#aabb[3] = xmax;\n            this.#aabb[4] = ymax;\n            this.#aabb[5] = zmax;\n            this.#aabbDirty = false;\n        }\n        return this.#aabb;\n    }\n\n    /**\n     * Creates a new {@link @xeokit/scene!SceneModel} in this Scene.\n     *\n     * Remember to call {@link SceneModel.build | SceneModel.build} when you've finished building or loading the SceneModel. That will\n     * fire events via {@link Scene.onModelCreated | Scene.onModelCreated} and {@link SceneModel.onBuilt | SceneModel.onBuilt}, to\n     * indicate to any subscribers that the SceneModel is built and ready for use.\n     *\n     * See {@link \"@xeokit/scene\"} for more details on usage.\n     *\n     * @param  sceneModelParams Creation parameters for the new {@link @xeokit/scene!SceneModel}.\n     * @returns *{@link SceneModel}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Scene has already been destroyed.\n     * * A SceneModel with the given ID already exists in this Scene.\n     */\n    createModel(sceneModelParams: SceneModelParams): SceneModel | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Scene already destroyed\");\n        }\n        const id = sceneModelParams.id;\n        if (this.models[id]) {\n            return new SDKError(`SceneModel already created in this Scene: ${id}`);\n        }\n        const sceneModel = new SceneModel(this, sceneModelParams);\n        this.models[id] = sceneModel;\n        sceneModel.onDestroyed.one(() => { // SceneModel#destroy() called\n            delete this.models[sceneModel.id];\n            this.#deregisterObjects(sceneModel);\n            this.onModelDestroyed.dispatch(this, sceneModel);\n        });\n        sceneModel.onBuilt.one(() => { // SceneModel#build() called\n            this.#registerObjects(sceneModel);\n            this.onModelCreated.dispatch(this, sceneModel);\n        });\n        return sceneModel;\n    }\n\n    /**\n     * @private\n     */\n    setAABBDirty() {\n        if (!this.#aabbDirty) {\n            this.#aabbDirty = true;\n            //this.events.fire(\"aabb\", true);\n        }\n    }\n\n    /**\n     * Destroys all contained {@link SceneModel | SceneModels}.\n     *\n     * * Fires {@link Scene.onModelDestroyed | Scene.onModelDestroyed} and {@link SceneModel.onDestroyed | SceneModel.onDestroyed}\n     * for each existing SceneModel in this Scene.\n     *\n     * See {@link \"@xeokit/scene\"} for usage.\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Scene has already been destroyed.\n     */\n    clear(): void | SDKError {\n        if (this.destroyed) {\n            return new SDKError(\"Scene already destroyed\");\n        }\n        for (let id in this.models) {\n            this.models[id].destroy();\n        }\n    }\n\n    /**\n     * Destroys this Scene and all contained {@link SceneModel | SceneModels}.\n     *\n     * * Fires {@link Scene.onModelDestroyed | Scene.onModelDestroyed} and {@link SceneModel.onDestroyed | SceneModel.onDestroyed}\n     * for each existing SceneModels in this Data.\n     * * Unsubscribes all subscribers to {@link Scene.onModelCreated | Scene.onModelCreated}, {@link Scene.onModelDestroyed | Scene.onModelDestroyed}, {@link SceneModel.onDestroyed | SceneModel.onDestroyed}\n     *\n     * See {@link \"@xeokit/scene\"} for usage.\n     *\n     * @returns *void*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * This Scene has already been destroyed.\n     */\n    destroy(): void | SDKError {\n        this.clear();\n        this.onModelCreated.clear();\n        this.onModelDestroyed.clear();\n        super.destroy();\n    }\n\n    #registerObjects(model: SceneModel) {\n        const objects = model.objects;\n        for (let id in objects) {\n            const object = objects[id];\n            this.objects[object.id] = <SceneObject>object;\n        }\n        this.#aabbDirty = true;\n    }\n\n    #deregisterObjects(model: SceneModel) {\n        const objects = model.objects;\n        for (let id in objects) {\n            const object = objects[id];\n            delete this.objects[object.id];\n        }\n        this.#aabbDirty = true;\n    }\n}","import type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {containsAABB2} from \"@xeokit/boundaries\";\n\nconst MAX_KD_TREE_DEPTH = 10; // Increase if greater precision needed\nconst kdTreeDimLength = new Float32Array(2);\n\n/**\n * An item stored in a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdItem2D {\n\n    /**\n     * The item stored in this KdItem2D.\n     */\n    item: any;\n}\n\n/**\n * A 2D k-d tree node.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdNode2D {\n\n    /**\n     * The axis-aligned 2D boundary of this kd-tree node.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * The left KD2Node.\n     */\n    left?: KdNode2D;\n\n    /**\n     * The right KD2Node.\n     */\n    right?: KdNode2D;\n\n    /**\n     * The {@link KdItem2D | KdItem2Ds} stored in this KD2Node.\n     */\n    items?: KdItem2D[];\n}\n\n/**\n * Parameters for creating a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdTree2DParams {\n\n    /**\n     * The 2D boundary of all the nodes we'll add to this k-d tree.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * Maximum depth of the 2D kd-tree.\n     */\n    maxDepth?: number;\n}\n\n/**\n * A static 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport class KdTree2 {\n\n    /**\n     * The root node in this k-d tree.\n     */\n    readonly root: KdNode2D;\n\n    /**\n     * The maximum allowed depth of this 2D k-d tree.\n     */\n    readonly maxDepth: number;\n\n    /**\n     * Creates a new 2D k-d tree.\n     *\n     * @param params\n     */\n    constructor(params?: KdTree2DParams) {\n        this.maxDepth = params?.maxDepth || MAX_KD_TREE_DEPTH;\n\n        this.root = {\n            // @ts-ignore\n            aabb: params.aabb.slice()\n        };\n    }\n\n    /**\n     * Inserts a bounded item into this 2D k-d tree.\n     *\n     * @param item\n     * @param aabb\n     */\n    insertItem(item: any, aabb: IntArrayParam) {\n        this.#insertItem(this.root, <KdItem2D>{item}, aabb, 1)\n    }\n\n    #insertItem(node: KdNode2D, item: KdItem2D, aabb: IntArrayParam, depth: number) {\n        if (depth >= this.maxDepth) {\n            node.items = node.items || [];\n            node.items.push(item);\n            return;\n        }\n        if (node.left) {\n            if (containsAABB2(node.left.aabb, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (node.right) {\n            if (containsAABB2(node.right.aabb, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        const nodeAABB = node.aabb;\n        kdTreeDimLength[0] = nodeAABB[2] - nodeAABB[0];\n        kdTreeDimLength[1] = nodeAABB[3] - nodeAABB[1];\n        let dim = 0;\n        if (kdTreeDimLength[1] > kdTreeDimLength[dim]) {\n            dim = 1;\n        }\n        if (!node.left) {\n            const aabbLeft = nodeAABB.slice();\n            aabbLeft[dim + 2] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.left = {\n                aabb: aabbLeft\n            };\n            if (containsAABB2(aabbLeft, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (!node.right) {\n            const aabbRight = nodeAABB.slice();\n            aabbRight[dim] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.right = {\n                aabb: aabbRight\n            };\n            if (containsAABB2(aabbRight, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        node.items = node.items || [];\n        node.items.push(item);\n    }\n}\n","import type {SceneObject} from \"@xeokit/scene\";\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\n\n/**\n * TODO\n */\nexport class KdVertex2 {\n    sceneObject: SceneObject;\n    worldPos: FloatArrayParam;\n    canvasPos: IntArrayParam;\n}","import {GeometryView, getSceneObjectGeometry, SceneObject} from \"@xeokit/scene\";\nimport {\n    INSIDE,\n    INTERSECT,\n    OUTSIDE,\n    setFrustum3,\n    intersectFrustum3AABB3,\n    intersectFrustum3Point3\n} from \"@xeokit/boundaries\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec4, transformPoint4} from \"@xeokit/matrix\";\nimport {KdTree2} from \"./KdTree2\";\nimport type {KdVertex2} from \"./KdVertex2\";\n\n/**\n * A k-d tree to accelerate intersection and nearest-neighbour tests on the projected\n * 2D canvas positions of {@link @xeokit/scene!SceneObject} geometry vertices.\n *\n * See {@link \"@xeokit/kd-canvas-verts\"} for usage.\n */\nexport function createKdTree2FromSceneObjectVerts(params: {\n    viewMatrix: FloatArrayParam,\n    projMatrix: FloatArrayParam,\n    canvasBoundary: FloatArrayParam,\n    sceneObjects: SceneObject[]\n}): KdTree2 {\n\n    const kdTree2D = new KdTree2({\n        aabb: params.canvasBoundary\n    });\n\n    const viewMatrix = createMat4(params.viewMatrix);\n    const projMatrix = createMat4(params.projMatrix);\n    const frustum = setFrustum3(viewMatrix, projMatrix);\n    const canvasBoundary = params.canvasBoundary;\n    const sceneObjects = params.sceneObjects;\n\n    if (sceneObjects) {\n        for (let i = 0, len = sceneObjects.length; i < len; i++) {\n            insertSceneObject(sceneObjects[i]);\n        }\n    }\n\n    function insertSceneObject(sceneObject: SceneObject, intersects: number = INTERSECT) {\n        if (intersects !== INSIDE) {\n            intersects = intersectFrustum3AABB3(frustum, sceneObject.aabb);\n        }\n        if (intersects === OUTSIDE) {\n            return;\n        }\n        // @ts-ignore\n        getSceneObjectGeometry(sceneObject, (geometryView: GeometryView): boolean | undefined => {\n                const positionsWorld = geometryView.positionsWorld;\n                for (let i = 0, len = positionsWorld.length; i < len; i += 3) {\n                    const worldPos = createVec4();\n                    worldPos[0] = positionsWorld[i];\n                    worldPos[1] = positionsWorld[i + 1];\n                    worldPos[2] = positionsWorld[i + 2];\n                    worldPos[3] = 1.0;\n                    if (intersects === INSIDE || intersectFrustum3Point3(frustum, worldPos)) {\n                        insertVertex(sceneObject, worldPos);\n                    }\n                }\n                return false;\n            });\n    }\n\n    function insertVertex(sceneObject: SceneObject, worldPos: FloatArrayParam) {\n        const viewPos = createVec4();\n        const projPos = createVec4();\n        const canvasPos = new Uint16Array(2);\n        transformPoint4(viewMatrix, worldPos, viewPos);\n        transformPoint4(projMatrix, viewPos, projPos);\n        canvasPos[0] = Math.floor((1 + projPos[0] / projPos[3]) * canvasBoundary[2] / 2);\n        canvasPos[1] = Math.floor((1 - projPos[1] / projPos[3]) * canvasBoundary[3] / 2);\n        kdTree2D.insertItem(<KdVertex2>{sceneObject, worldPos, canvasPos}, [canvasPos[0], canvasPos[1], canvasPos[0], canvasPos[1]]);\n    }\n\n    return kdTree2D;\n}\n","import type {FloatArrayParam} from \"@xeokit/math\";\nimport type {SceneObject} from \"@xeokit/scene\";\nimport type {KdTree2} from \"./KdTree2\";\n\n/**\n *\n */\nexport function searchKdTree2ForNearestNeighbor(params: {\n    kdTree: KdTree2,\n    canvasPos: FloatArrayParam\n}): SceneObject[] {\n    const kdTree = params.kdTree;\n    const canvasPos = params.canvasPos;\n    // @ts-ignore\n    const sceneObjects = [];\n\n//...\n\n    // @ts-ignore\n    return sceneObjects;\n}\n","import {containsAABB3, expandAABB3} from \"@xeokit/boundaries\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {KdNode3} from \"./KdNode3\";\nimport type {KdItem3D} from \"./KdItem3\";\nimport type {KdTree3Params} from \"./KdTree3Params\";\n\n\nconst MAX_KD_TREE_DEPTH = 10; // Increase if greater precision needed\nconst kdTreeDimLength = new Float32Array(3);\n\n/**\n * A static k-d tree that organizes anything that has a boundary for\n * efficient 3D World-space boundary and frustm searches.\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n */\nexport class KdTree3 {\n\n    #root: KdNode3;\n    #maxDepth: any;\n    #numNodes: number;\n    #numObjects: number;\n\n    /**\n     * Creates a new KdTree3.\n     *\n     * @param params\n     */\n    constructor(params: KdTree3Params) {\n        this.#maxDepth = params?.maxDepth || MAX_KD_TREE_DEPTH;\n        this.#root = {\n            index: 0,\n            aabb: params.aabb.slice()\n        };\n        this.#numNodes = 0;\n    }\n\n    get root(): KdNode3 {\n        return this.#root;\n    }\n\n    insertItem(item: any, aabb: FloatArrayParam) {\n        this.#insertItem(this.#root, <KdItem3D>{index: this.#numObjects++, item}, aabb, 1)\n    }\n\n    #insertItem(node: KdNode3, item: KdItem3D, aabb: FloatArrayParam, depth: number) {\n        if (depth >= this.#maxDepth) {\n            node.items = node.items || [];\n            node.items.push(item);\n            expandAABB3(node.aabb, aabb);\n            return;\n        }\n        if (node.left) {\n            if (containsAABB3(node.left.aabb, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (node.right) {\n            if (containsAABB3(node.right.aabb, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        const nodeAABB = node.aabb;\n        kdTreeDimLength[0] = nodeAABB[3] - nodeAABB[0];\n        kdTreeDimLength[1] = nodeAABB[4] - nodeAABB[1];\n        kdTreeDimLength[2] = nodeAABB[5] - nodeAABB[2];\n        let dim = 0;\n        if (kdTreeDimLength[1] > kdTreeDimLength[dim]) {\n            dim = 1;\n        }\n        if (kdTreeDimLength[2] > kdTreeDimLength[dim]) {\n            dim = 2;\n        }\n        if (!node.left) {\n            const aabbLeft = nodeAABB.slice();\n            aabbLeft[dim + 3] = ((nodeAABB[dim] + nodeAABB[dim + 3]) / 2.0);\n            node.left = {\n                index: this.#numNodes++,\n                aabb: aabbLeft\n            };\n            if (containsAABB3(aabbLeft, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (!node.right) {\n            const aabbRight = nodeAABB.slice();\n            aabbRight[dim] = ((nodeAABB[dim] + nodeAABB[dim + 3]) / 2.0);\n            node.right = {\n                index: this.#numNodes++,\n                aabb: aabbRight\n            };\n            if (containsAABB3(aabbRight, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        node.items = node.items || [];\n        node.items.push(item);\n        expandAABB3(node.aabb, aabb);\n    }\n}\n","import {KdTree3} from \"./KdTree3\";\n\n/**\n * k-d tree built by {@link createSceneObjectsKdTree3} that contains {@link @xeokit/scene!SceneObject | SceneObject} item types.\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n */\nexport class SceneObjectsKdTree3 extends KdTree3 {\n}","import {GeometryBucket, GeometryView, getSceneObjectGeometry, SceneObject} from \"@xeokit/scene\";\nimport {KdTree3} from \"./KdTree3\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {collapseAABB3, expandAABB3} from \"@xeokit/boundaries\";\nimport {LinesPrimitive, PointsPrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\nimport type {KdSceneObjectPrim} from \"./KdSceneObjectPrim\";\n\n/**\n * k-d tree built by {@link createSceneObjectPrimsKdTree3}.\n */\nexport class SceneObjectsPrimsKdTree3 extends KdTree3 {}\n\n/**\n * Creates a KdTree3 that indexes the primitives belonging to the given SceneObjects in 3D World-space.\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n *\n * @param sceneObjects\n */\nexport function createSceneObjectPrimsKdTree3(sceneObjects: SceneObject[]): SceneObjectsPrimsKdTree3 {\n\n    const tempAABBInt16 = new Int16Array(6);\n\n    function insertPoint(sceneObject: SceneObject, geometryBucket: GeometryBucket, positions: FloatArrayParam, a: number, kdTree: KdTree3) {\n        const ax = positions[(a * 3)];\n        const ay = positions[(a * 3) + 1];\n        const az = positions[(a * 3) + 2];\n        const aabb = tempAABBInt16;\n        aabb[0] = aabb[3] = ax;\n        aabb[1] = aabb[4] = ay;\n        aabb[2] = aabb[5] = az;\n        kdTree.insertItem(<KdSceneObjectPrim>{sceneObject, geometryBucket, prim: {a}}, aabb);\n    }\n\n    function insertLine(sceneObject: SceneObject, geometryBucket: GeometryBucket, positions: FloatArrayParam, a: number, b: number, kdTree: KdTree3) {\n        const ax = positions[(a * 3)];\n        const ay = positions[(a * 3) + 1];\n        const az = positions[(a * 3) + 2];\n        const bx = positions[(b * 3)];\n        const by = positions[(b * 3) + 1];\n        const bz = positions[(b * 3) + 2];\n        const aabb = tempAABBInt16;\n        aabb[0] = Math.min(ax, bx);\n        aabb[1] = Math.min(ay, by);\n        aabb[2] = Math.min(az, bz);\n        aabb[3] = Math.max(ax, bx);\n        aabb[4] = Math.max(ay, by);\n        aabb[5] = Math.max(az, bz);\n        kdTree.insertItem(<KdSceneObjectPrim>{sceneObject, geometryBucket, prim: {a, b}}, aabb);\n    }\n\n    function insertTriangle(sceneObject: SceneObject, geometryBucket: GeometryBucket, positions: FloatArrayParam, a: number, b: number, c: number, kdTree: KdTree3) {\n        const ax = positions[(a * 3)];\n        const ay = positions[(a * 3) + 1];\n        const az = positions[(a * 3) + 2];\n        const bx = positions[(b * 3)];\n        const by = positions[(b * 3) + 1];\n        const bz = positions[(b * 3) + 2];\n        const cx = positions[(c * 3)];\n        const cy = positions[(c * 3) + 1];\n        const cz = positions[(c * 3) + 2];\n        const aabb = tempAABBInt16;\n        aabb[0] = Math.min(ax, bx, cx);\n        aabb[1] = Math.min(ay, by, cy);\n        aabb[2] = Math.min(az, bz, cz);\n        aabb[3] = Math.max(ax, bx, cx);\n        aabb[4] = Math.max(ay, by, cy);\n        aabb[5] = Math.max(az, bz, cz);\n        kdTree.insertItem(<KdSceneObjectPrim>{sceneObject, geometryBucket, prim: {a, b, c}}, aabb);\n    }\n\n    const aabb = collapseAABB3();\n    for (let i = 0, len = sceneObjects.length; i < len; i++) {\n        const viewObject = sceneObjects[i];\n        expandAABB3(aabb, viewObject.aabb);\n    }\n    const kdTree = new SceneObjectsPrimsKdTree3({\n        aabb\n    });\n    for (let i = 0, len = sceneObjects.length; i < len; i++) {\n        const sceneObject = sceneObjects[i];\n        getSceneObjectGeometry(sceneObject, (geometryView: GeometryView) => {\n            const geometry = geometryView.geometry;\n            const geometryBucket = geometryView.geometryBucket;\n            const positionsWorld = geometryView.positionsWorld;  // <-- Can be expensive\n            const indices = geometryBucket.indices;\n            switch (geometry.primitive) {\n                case PointsPrimitive:\n                    for (let j = 0, lenj = positionsWorld.length / 3; j < lenj; j++) {\n                        insertPoint(sceneObject, geometryBucket, positionsWorld, j, kdTree);\n                    }\n                    break;\n                case TrianglesPrimitive:\n                    if (indices) {\n                        for (let j = 0, lenj = indices.length; j < lenj; j += 3) {\n                            insertTriangle(sceneObject, geometryBucket, positionsWorld, indices[j], indices[j + 1], indices[j + 2], kdTree);\n                        }\n                    }\n                    break;\n                case LinesPrimitive:\n                    if (indices) {\n                        for (let j = 0, lenj = indices.length; j < lenj; j += 2) {\n                            insertLine(sceneObject, geometryBucket, positionsWorld, indices[j], indices[j + 1], kdTree);\n                        }\n                    }\n                    break;\n            }\n            return true;\n\n        });\n    }\n    return kdTree;\n}\n","import {KdTree3} from \"./KdTree3\";\n\n/**\n * k-d tree built by {@link createPrimsKdTree3} that contains {@link KdTriangle3}, {@link KdLine3} and {@link KdPoint3} item types.\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n */\nexport class PrimsKdTree3 extends KdTree3 {\n\n}","import {createAABB3Int16, expandAABB3Points3} from \"@xeokit/boundaries\";\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {LinesPrimitive, PointsPrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\nimport type {KdTree3} from \"./KdTree3\";\nimport type {KdTrianglePrim} from \"./KdTrianglePrim\";\nimport type {KdLinePrim} from \"./KdLinePrim\";\nimport type {KdPointPrim} from \"./KdPointPrim\";\nimport {PrimsKdTree3} from \"./PrimsKdTree3\";\n\nconst tempAABBInt16 = new Int16Array(6);\n\n/**\n * Creates a KdTree3 that indexes the 3D primitives in the given arrays.\n *\n * This function does not care which coordinate space the primitives are in (ie. Local, World, View etc).\n *\n * This function also works for coordinates of any precision (ie. Float32Array, Float64Array, Int16Array, Int32Array etc).\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n */\nexport function createPrimsKdTree3(primitiveType: number, positions: FloatArrayParam, indices?: IntArrayParam): PrimsKdTree3 {\n    const kdTree = new PrimsKdTree3({\n        aabb: <IntArrayParam>expandAABB3Points3(createAABB3Int16(), positions)\n    });\n\n    switch (primitiveType) {\n        case PointsPrimitive:\n            for (let i = 0, len = positions.length / 3; i < len; i++) {\n                insertPoint(positions, i, kdTree);\n            }\n            break;\n        case TrianglesPrimitive:\n            if (indices) {\n                for (let i = 0, len = indices.length; i < len; i += 3) {\n                    insertTriangle(positions, indices[i], indices[i + 1], indices[i + 2], kdTree);\n                }\n            }\n            break;\n        case LinesPrimitive:\n            if (indices) {\n                for (let i = 0, len = indices.length; i < len; i += 2) {\n                    insertLine(positions, indices[i], indices[i + 1], kdTree);\n                }\n            }\n            break;\n    }\n    return kdTree;\n}\n\nfunction insertPoint(positions: FloatArrayParam, a: number, kdTree: KdTree3) {\n    const ax = positions[(a * 3)];\n    const ay = positions[(a * 3) + 1];\n    const az = positions[(a * 3) + 2];\n    const aabb = tempAABBInt16;\n    aabb[0] = aabb[3] = ax;\n    aabb[1] = aabb[4] = ay;\n    aabb[2] = aabb[5] = az;\n    kdTree.insertItem(<KdPointPrim>{a}, aabb);\n}\n\nfunction insertLine(positions: FloatArrayParam, a: number, b: number, kdTree: KdTree3) {\n    const ax = positions[(a * 3)];\n    const ay = positions[(a * 3) + 1];\n    const az = positions[(a * 3) + 2];\n    const bx = positions[(b * 3)];\n    const by = positions[(b * 3) + 1];\n    const bz = positions[(b * 3) + 2];\n    const aabb = tempAABBInt16;\n    aabb[0] = Math.min(ax, bx);\n    aabb[1] = Math.min(ay, by);\n    aabb[2] = Math.min(az, bz);\n    aabb[3] = Math.max(ax, bx);\n    aabb[4] = Math.max(ay, by);\n    aabb[5] = Math.max(az, bz);\n    kdTree.insertItem(<KdLinePrim>{a, b}, aabb);\n}\n\nfunction insertTriangle(positions: FloatArrayParam, a: number, b: number, c: number, kdTree: KdTree3) {\n    const ax = positions[(a * 3)];\n    const ay = positions[(a * 3) + 1];\n    const az = positions[(a * 3) + 2];\n    const bx = positions[(b * 3)];\n    const by = positions[(b * 3) + 1];\n    const bz = positions[(b * 3) + 2];\n    const cx = positions[(c * 3)];\n    const cy = positions[(c * 3) + 1];\n    const cz = positions[(c * 3) + 2];\n    const aabb = tempAABBInt16;\n    aabb[0] = Math.min(ax, bx, cx);\n    aabb[1] = Math.min(ay, by, cy);\n    aabb[2] = Math.min(az, bz, cz);\n    aabb[3] = Math.max(ax, bx, cx);\n    aabb[4] = Math.max(ay, by, cy);\n    aabb[5] = Math.max(az, bz, cz);\n    kdTree.insertItem(<KdTrianglePrim>{a, b, c}, aabb);\n}\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fdatatypes.svg)](https://badge.fury.io/js/%40xeokit%2Fdatatypes)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/datatypes/badge)](https://www.jsdelivr.com/package/npm/@xeokit/datatypes)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:30px; height:130px;\" src=\"media://images/cityJSONLogo.svg\"/>\n *\n * # xeokit CityJSON 1.1.3 Data Types\n *\n * * Defines numeric constants for the set of [CityJSON](/docs/pages/GLOSSARY.html#cityjson) 1.1.3 entity and relationship types.\n * * Use with {@link \"@xeokit/data\"} to assign CityJSON types to {@link @xeokit/data!DataObject | DataObjects}\n * and {@link @xeokit/data!Relationship | Relationships} and treat them as elements of a basic entity-relationship graph.\n * * Use with {@link \"@xeokit/treeview\"}, to configure the appearance and behaviour of\n * {@link @xeokit/treeview!TreeView | TreeViews} for navigating CityJSON objects.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/cityjsontypes1x1x3\n * ````\n *\n * @module @xeokit/cityjsontypes_1_1_3\n */\n\n/**\n * A generic aggregation relationship between two generic entities.\n */\nexport const BasicAggregation = 2001;\n\n/**\n * This CityObject type represents a bridge, which can have attributes such as the length, height, and type of bridge.\n */\nexport const Bridge = 2000;\n\n/**\n * This CityJSON object represents a physical or functional subdivision of a Bridge.\n */\nexport const BridgePart = 2001;\n\n/**\n * This CityJSON type represents a permanent part of a Bridge (inside and/or outside) which does not have the significance of a\n * BridgePart. In contrast to BridgeConstructiveElements, a BridgeInstallation is not essential from a structural point of view.\n * Examples are stairs, antennas or railways.\n */\nexport const BridgeInstallation = 2002;\n\n/**\n * This CityJSON type represents an element of a bridge which is essential from a structural point of view. Examples are pylons,\n * anchorages, slabs, beams.\n */\nexport const BridgeConstructiveElement = 2003;\n\n/**\n * This CityJSON type represents  a space within a Bridge or BridgePart intended for human occupancy (e.g. a place of work or\n * recreation) and/or containment (storage) of animals or things. A BridgeRoom is bounded physically and/or virtually (e.g. by\n * ClosureSurfaces or GenericSurfaces).\n */\nexport const BridgeRoom = 2004;\n\n/**\n * This CityJSON type represents equipment for occupant use, usually not fixed to the bridge. [cf. ISO 6707-1]\n */\nexport const BridgeFurniture = 2005;\n\n/**\n *  This CityObject type represents a building, which can contain one or more \"BuildingPart\" objects. The Building object can\n *  have attributes such as the building height, number of floors, and the year of construction.\n */\nexport const Building = 2006;\n\n/**\n * This CityObject type represents a part of a building, such as a wing or a tower. Building parts can have attributes such\n * as the building part height and the material used in its construction.\n */\nexport const BuildingPart = 2007;\n\n/**\n * This CityJSON type represents a permanent part of a Building (inside and/or outside) which has not the significance of a\n * BuildingPart. Examples are stairs, antennas, balconies or small roofs.\n */\nexport const BuildingInstallation = 2008;\n\n/**\n * This CityJSON type represents an element of a Building which is essential from a structural point of view. Examples are walls,\n * slabs, staircases, beams.\n */\nexport const BuildingConstructiveElement = 2009;\n\n/**\n * This CityJSON type represents equipment for occupant use, usually not fixed to the building. [cf. ISO 6707-1]\n */\nexport const BuildingFurniture = 2010;\n\n/**\n * This CityJSON type represents  a horizontal section of a Building. BuildingStorey are not always defined according to the\n * building structure, but can also be defined according to logical considerations.\n */\nexport const BuildingStorey = 2011;\n\n/**\n * This CityJSON type represents a space within a Building or BuildingPart intended for human occupancy (e.g. a place of work or recreation)\n * and/or containment of animals or things. A BuildingRoom is bounded physically and/or virtually (e.g. by ClosureSurfaces or GenericSurfaces).\n */\nexport const BuildingRoom = 2012;\n\n/**\n * This CityJSON type represents a logical subdivision of a Building. BuildingUnits are formed according to some homogeneous\n * property like function, ownership, management, or accessibility. They may be separately sold, rented out, inherited, managed, etc.\n */\nexport const BuildingUnit = 2013;\n\n/**\n * This CityObject type represents outdoor furniture, such as benches, trash cans, and street lamps. CityFurniture objects can\n * have attributes such as the type of furniture and its location.\n */\nexport const CityFurniture = 2014;\n\n/**\n * This CityObject type represents a group of other CityObjects. CityObjectGroup objects can have attributes such as the name\n * of the group and the CityObjects it contains.\n */\nexport const CityObjectGroup = 2015;\n\n/**\n * This CityObject type represents the land use of a particular area, such as residential, commercial, or industrial. LandUse\n * objects can have attributes such as the name of the land use and the area it covers.\n */\nexport const LandUse = 2016;\n\n/**\n * this CityObject type represents an unclassified, generic element of construction.\n */\nexport const OtherConstruction = 2017;\n\n/**\n * This CityObject type represents vegetation, such as trees, bushes, and grass. PlantCover objects can have attributes such\n * as the type of vegetation and its location.\n */\nexport const PlantCover = 2018;\n\n/**\n * This CityObject type represents individual vegetation objects, e.g. trees or bushes.\n */\nexport const SolitaryVegetationObject = 2019;\n\n/**\n * This CityJSON type represents a terrain component as a triangulated irregular network.\n */\nexport const TINRelief = 2020;\n\n\nexport const TransportationSquare = 2021;\n\n/**\n * This CityObject type represents a railway, which can have attributes such as the type of railway and the tracks' location.\n */\nexport const Railway = 2022;\n\n/**\n * This CityObject type represents a road, which can have attributes such as the road type and the road's location.\n */\nexport const Road = 2023;\n\n/**\n * This CityObject type  is used to represent any type of underground or underwater structure designed for passage or transportation,\n * such as a subway or water tunnel. It is defined by its geometry and other attributes.\n */\nexport const Tunnel = 2024;\n\n/**\n * This CityObject type represents a physical or functional subdivision of a Tunnel. It would be considered a Tunnel, if it were\n * not part of a collection of other TunnelParts.\n */\nexport const TunnelPart = 2025;\n\n/**\n * This CityObject type represents  a permanent part of a Tunnel (inside and/or outside) which does not have the significance of a\n * TunnelPart. In contrast to TunnelConstructiveElement, a TunnelInstallation is not essential from a structural point of view. Examples\n * are stairs, antennas or railings.\n */\nexport const TunnelInstallation = 2026;\n\n/**\n * This CityObject type represents an element of a Tunnel which is essential from a structural point of view. Examples are walls, slabs, beams.\n */\nexport const TunnelConstructiveElement = 2027;\n\n/**\n * This CityObject type represents a hollow space within a Tunnel.\n */\nexport const TunnelHollowSpace = 2028;\n\n/**\n * This CityObject type represents equipment for occupant use, usually not fixed to the tunnel. [cf. ISO 6707-1]\n */\nexport const TunnelFurniture = 2029;\n\n/**\n * This CityObject type represents a body of water, such as a river, lake, or ocean. It is defined by its geometry and other attributes,\n * and can be used to model and analyze hydrological features.\n */\nexport const WaterBody = 2030;\n\n/**\n * This CityObject type  is used to represent a natural or man-made channel that carries water, such as a river, canal, or stormwater drain.\n * It is defined by its geometry and other attributes, and can be used to model and analyze hydrological features.\n */\nexport const Waterway = 2031;\n\n/**\n * Map of names for all supported CityObject types.\n */\nexport const typeNames: { [key: number]: string } = {\n    [Bridge]: \"Bridge\",\n    [BridgePart]: \"BridgePart\",\n    [BridgeInstallation]: \"BridgeInstallation\",\n    [BridgeConstructiveElement]: \"BridgeConstructiveElement\",\n    [BridgeRoom]: \"BridgeRoom\",\n    [BridgeFurniture]: \"BridgeFurniture\",\n    [Building]: \"Building\",\n    [BuildingPart]: \"BuildingPart\",\n    [BuildingInstallation]: \"BuildingInstallation\",\n    [BuildingConstructiveElement]: \"BuildingConstructiveElement\",\n    [BuildingFurniture]: \"BuildingFurniture\",\n    [BuildingStorey]: \"BuildingStorey\",\n    [BuildingRoom]: \"BuildingRoom\",\n    [BuildingUnit]: \"BuildingUnit\",\n    [CityFurniture]: \"CityFurniture\",\n    [CityObjectGroup]: \"CityObjectGroup\",\n    [LandUse]: \"LandUse\",\n    [OtherConstruction]: \"OtherConstruction\",\n    [PlantCover]: \"PlantCover\",\n    [SolitaryVegetationObject]: \"SolitaryVegetationObject\",\n    [TINRelief]: \"TINRelief\",\n    [TransportationSquare]: \"TransportationSquare\",\n    [Railway]: \"Railway\",\n    [Road]: \"Road\",\n    [Tunnel]: \"Tunnel\",\n    [TunnelPart]: \"TunnelPart\",\n    [TunnelInstallation]: \"TunnelInstallation\",\n    [TunnelConstructiveElement]: \"TunnelInstallation\",\n    [TunnelHollowSpace]: \"TunnelHollowSpace\",\n    [TunnelFurniture]: \"TunnelFurniture\",\n    [WaterBody]: \"WaterBody\",\n    [Waterway]: \"Waterway\",\n};\n\n/**\n * Map of type codes for all CityObject type names.\n */\nexport const typeCodes: { [key: string]: number } = {\n    \"Bridge\": Bridge,\n    \"BridgePart\": BridgePart,\n    \"BridgeInstallation\": BridgeInstallation,\n    \"BridgeConstructiveElement\": BridgeConstructiveElement,\n    \"BridgeRoom\": BridgeRoom,\n    \"BridgeFurniture\": BridgeFurniture,\n    \"Building\": Building,\n    \"BuildingPart\": BuildingPart,\n    \"BuildingInstallation\": BuildingInstallation,\n    \"BuildingConstructiveElement\": BuildingConstructiveElement,\n    \"BuildingFurniture\": BuildingFurniture,\n    \"BuildingStorey\": BuildingStorey,\n    \"BuildingRoom\": BuildingRoom,\n    \"BuildingUnit\": BuildingUnit,\n    \"CityFurniture\": CityFurniture,\n    \"CityObjectGroup\": CityObjectGroup,\n    \"LandUse\": LandUse,\n    \"OtherConstruction\": OtherConstruction,\n    \"PlantCover\": PlantCover,\n    \"SolitaryVegetationObject\": SolitaryVegetationObject,\n    \"TINRelief\": TINRelief,\n    \"TransportationSquare\": TransportationSquare,\n    \"Railway\": Railway,\n    \"Road\": Road,\n    \"Tunnel\": Tunnel,\n    \"TunnelPart\": TunnelPart,\n    \"TunnelInstallation\": TunnelInstallation,\n    \"TunnelConstructiveElement\": TunnelInstallation,\n    \"TunnelHollowSpace\": TunnelHollowSpace,\n    \"TunnelFurniture\": TunnelFurniture,\n    \"WaterBody\": WaterBody,\n    \"Waterway\": Waterway\n};\n","import type {SceneObject} from \"@xeokit/scene\";\nimport {collapseAABB3, expandAABB3} from \"@xeokit/boundaries\";\nimport {SceneObjectsKdTree3} from \"./sceneObjectsKdTree3\";\n\n/**\n * Indexes the given SceneObjects in a k-d tree for efficient collision detection.\n *\n * See {@link \"@xeokit/collision/kdtree3\"} for usage.\n */\nexport function createSceneObjectsKdTree3(sceneObjects: SceneObject[]): SceneObjectsKdTree3 {\n    const aabb = collapseAABB3();\n    for (let i = 0, len = sceneObjects.length; i < len; i++) {\n        expandAABB3(aabb, sceneObjects[i].aabb);\n    }\n    const kdTree = new SceneObjectsKdTree3({aabb});\n    for (let i = 0, len = sceneObjects.length; i < len; i++) {\n        const sceneObject = sceneObjects[i];\n        kdTree.insertItem(sceneObject, sceneObject.aabb);\n    }\n    return kdTree;\n}\n\n\n","import type {FloatArrayParam} from \"@xeokit/math\";\nimport {INTERSECT, intersectAABB3s, OUTSIDE} from \"@xeokit/boundaries\";\nimport type {KdTree3} from \"./KdTree3\";\nimport type {KdNode3} from \"./KdNode3\";\nimport type {KdItem3D} from \"./KdItem3\";\n\n\n/**\n * Queries a {@link KdTree3} for {@link KdItem3D | KDItems} that intersect\n * a 3D axis-aligned bounding box (AABB).\n *\n * See {@link \"@xeokit/collison/kdtree3\"} for usage.\n */\nexport function searchKdTree3WithAABB(params: {\n    kdTree: KdTree3,\n    aabb: FloatArrayParam\n}): KdItem3D[] {\n\n    const kdTree = params.kdTree;\n    const aabb = params.aabb;\n    const foundItems: KdItem3D[] = [];\n\n    function visit(node: KdNode3, isect: number) {\n        if (isect === OUTSIDE) {\n            return;\n        }\n        isect = intersectAABB3s(aabb, node.aabb);\n        if (isect === OUTSIDE) {\n            return;\n        }\n        const items = node.items;\n        if (items && items.length > 0) {\n            for (let i = 0, len = items.length; i < len; i++) {\n                foundItems.push(items[i].item);\n            }\n        }\n        if (node.left) {\n            visit(node.left, isect);\n        }\n        if (node.right) {\n            visit(node.right, isect);\n        }\n    }\n\n    visit(kdTree.root, INTERSECT);\n    return foundItems;\n}\n","import {Frustum3, INTERSECT, intersectFrustum3AABB3, OUTSIDE} from \"@xeokit/boundaries\";\nimport type {KdTree3} from \"./KdTree3\";\nimport type {KdNode3} from \"./KdNode3\";\nimport type {KdItem3D} from \"./KdItem3\";\n\n/**\n * Queries a {@link KdTree3} for {@link KdItem3D | KDItems} that intersect\n * a 3D {@link @xeokit/boundaries!Frustum3}.\n *\n * See {@link \"@xeokit/collison/kdtree3\"} for usage.\n */\nexport function searchKdTree3WithFrustum(params: {\n    kdTree: KdTree3,\n    frustum: Frustum3\n}): KdItem3D[] {\n    const kdTree = params.kdTree;\n    const frustum = params.frustum;\n    const foundItems: KdItem3D[] = [];\n\n    function visit(node: KdNode3, isect: number) {\n        if (isect === OUTSIDE) {\n            return;\n        }\n        isect = intersectFrustum3AABB3(frustum, node.aabb);\n        if (isect === OUTSIDE) {\n            return;\n        }\n        const items = node.items;\n        if (items && items.length > 0) {\n            for (let i = 0, len = items.length; i < len; i++) {\n                foundItems.push(items[i].item);\n            }\n        }\n        if (node.left) {\n            visit(node.left, isect);\n        }\n        if (node.right) {\n            visit(node.right, isect);\n        }\n    }\n\n    visit(kdTree.root, INTERSECT);\n    return foundItems;\n}\n","import type {FloatArrayParam} from \"@xeokit/math\";\nimport {INTERSECT, OUTSIDE} from \"@xeokit/boundaries\";\nimport type {KdTree3} from \"./KdTree3\";\nimport type {KdNode3} from \"./KdNode3\";\nimport type {KdItem3D} from \"./KdItem3\";\n\n\n/**\n * Queries a {@link KdTree3} for {@link KdItem3D | KDItems} that intersect\n * a 3D ray.\n *\n * See {@link \"@xeokit/collison/kdtree3\"} for usage.\n */\nexport function searchKdTree3WithRay(params: {\n    kdTree: KdTree3,\n    origin: FloatArrayParam,\n    dir: FloatArrayParam\n}): KdItem3D[] {\n\n    const kdTree = params.kdTree;\n    const origin = params.origin;\n    const dir = params.dir;\n    const foundItems: KdItem3D[] = [];\n\n    function testRayIntersectsAABB3(origin: FloatArrayParam, dir: FloatArrayParam, aabb: FloatArrayParam) : number{\n        return 0;\n    }\n\n    function visit(node: KdNode3, isect: number) {\n        if (isect === OUTSIDE) {\n            return;\n        }\n        isect = testRayIntersectsAABB3(origin, dir, node.aabb);\n        if (isect === OUTSIDE) {\n            return;\n        }\n        const items = node.items;\n        if (items && items.length > 0) {\n            for (let i = 0, len = items.length; i < len; i++) {\n                foundItems.push(items[i].item);\n            }\n        }\n        if (node.left) {\n            visit(node.left, isect);\n        }\n        if (node.right) {\n            visit(node.right, isect);\n        }\n    }\n\n    visit(kdTree.root, INTERSECT);\n    return foundItems;\n}\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fdatatypes.svg)](https://badge.fury.io/js/%40xeokit%2Fdatatypes)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/datatypes/badge)](https://www.jsdelivr.com/package/npm/@xeokit/datatypes)\n *\n * <img style=\"padding:10px; width:300px\" src=\"media://images/xeokit_components_icon.png\"/>\n *\n * # xeokit Basic Semantic Data Types\n *\n * * Defines numeric constants for a basic set of entity and relationship types.\n * * Use with {@link \"@xeokit/data\"} to assign basic types to {@link @xeokit/data!DataObject | DataObjects}\n * and {@link @xeokit/data!Relationship | Relationships} and treat them as elements of a basic entity-relationship graph.\n * * Use with {@link \"@xeokit/treeview\"}, to configure the appearance and behaviour of\n * {@link @xeokit/treeview!TreeView | TreeViews} for navigating basic element hierachies.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/basictypes\n * ````\n *\n * @module @xeokit/basictypes\n */\n\n/**\n * A generic entity.\n */\nexport const BasicEntity = 1000;\n\n/**\n * A generic aggregation relationship between two generic entities.\n */\nexport const BasicAggregation = 1001;\n\n\n/**\n * Map of names for all basic entity types.\n */\nexport const typeNames: { [key: number]: string } = {\n    [BasicEntity]: \"BasicEntity\",\n    [BasicAggregation]: \"BasicAggregation\"\n};\n\n/**\n * Map of type codes for all basic entity type names.\n */\nexport const typeCodes: { [key: string]: number } = {\n    \"BasicEntity\": BasicEntity,\n    \"BasicAggregation\": BasicAggregation\n};\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fdatatypes.svg)](https://badge.fury.io/js/%40xeokit%2Fdatatypes)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/datatypes/badge)](https://www.jsdelivr.com/package/npm/@xeokit/datatypes)\n *\n * <img style=\"padding-top:20px; padding-bottom: 10px;\" src=\"media://images/ifc_logo.png\"/>\n *\n * # xeokit IFC Data Types\n *\n * * Defines numeric constants for IFC entity and relationship types.\n * * Use with {@link \"@xeokit/data\"} to assign IFC types to {@link @xeokit/data!DataObject | DataObjects} and\n * {@link @xeokit/data!Relationship | Relationships} and treat them as IFC elements.\n * * Use with {@link \"@xeokit/treeview\"} to configure the appearance and behaviour of\n * {@link @xeokit/treeview!TreeView | TreeViews} for navigating IFC element hierachies.\n * * Supports IFC versions 2x3 and 4.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/datatypes\n * ````\n *\n * @module @xeokit/ifcTypes\n */\n\n/**\n * A request is the act or instance of asking for something, such as a request for information, bid submission, or performance of work.\n */\nexport const IfcActionRequest = 1000;\n\n/**\n * The IfcActor defines all actors or human agents involved in a project during its full life cycle. It facilitates the use of person and organization definitions in the resource part of the IFC object model. This includes name, address, telecommunication addresses, and roles.\n */\nexport const IfcActor = 1001;\n\n/**\n * This entity indicates a role which is performed by an actor, either a person, an organization or a person related to an organization.\n */\nexport const IfcActorRole:number = 1002;\n\n/**\n * An actuator is a mechanical device for moving or controlling a mechanism or system. An actuator takes energy, usually created by air, electricity, or liquid, and converts that into some kind of motion.\n */\nexport const IfcActuator = 1003;\n\n/**\n * The distribution control element type IfcActuatorType defines commonly shared information for occurrences of actuators. The set of shared information may include:\n */\nexport const IfcActuatorType = 1004;\n\n/**\n * This abstract entity represents various kinds of postal and telecom addresses.\n */\nexport const IfcAddress = 1005;\n\n/**\n * An advanced B-rep is a boundary representation model in which all faces, edges and vertices are explicitly represented. It is a solid with explicit topology and elementary or free-form geometry. The faces of the B-rep are of type IfcAdvancedFace. An advanced B-rep has to meet the same topological constraints as the manifold solid B-rep.\n */\nexport const IfcAdvancedBrep = 1006;\n\n/**\n * The IfcAdvancedBrepWithVoids is a specialization of an advanced B-rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void.\n */\nexport const IfcAdvancedBrepWithVoids = 1007;\n\n/**\n * An advanced face is a specialization of a face surface that has to meet requirements on using particular topological and geometric representation items for the definition of the faces, edges and vertices.\n */\nexport const IfcAdvancedFace = 1008;\n\n/**\n * An air terminal is a terminating or origination point for the transfer of air between distribution system(s) and one or more spaces. It can also be used for the transfer of air between adjacent spaces.\n */\nexport const IfcAirTerminal = 1009;\n\n/**\n * An air terminal box typically participates in an HVAC duct distribution system and is used to control or modulate the amount of air delivered to its downstream ductwork. An air terminal box type is often referred to as an \"air flow regulator\".\n */\nexport const IfcAirTerminalBox = 1010;\n\n/**\n * The flow controller type IfcAirTerminalBoxType defines commonly shared information for occurrences of air terminal boxes. The set of shared information may include:\n */\nexport const IfcAirTerminalBoxType = 1011;\n\n/**\n * The flow terminal type IfcAirTerminalType defines commonly shared information for occurrences of air terminals. The set of shared information may include:\n */\nexport const IfcAirTerminalType = 1012;\n\n/**\n * An air-to-air heat recovery device employs a counter-flow heat exchanger between inbound and outbound air flow. It is typically used to transfer heat from warmer air in one chamber to cooler air in the second chamber (i.e., typically used to recover heat from the conditioned air being exhausted and the outside air being supplied to a building), resulting in energy savings from reduced heating (or cooling) requirements.\n */\nexport const IfcAirToAirHeatRecovery = 1013;\n\n/**\n * The energy conversion device type IfcAirToAirHeatRecoveryType defines commonly shared information for occurrences of air to air heat recoverys. The set of shared information may include:\n */\nexport const IfcAirToAirHeatRecoveryType = 1014;\n\n/**\n * An alarm is a device that signals the existence of a condition or situation that is outside the boundaries of normal expectation or that activates such a device.\n */\nexport const IfcAlarm = 1015;\n\n/**\n * The distribution control element type IfcAlarmType defines commonly shared information for occurrences of alarms. The set of shared information may include:\n */\nexport const IfcAlarmType = 1016;\n\n/**\n * An annotation is an information element within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model. Annotations include additional points, curves, text, dimensioning, hatching and other forms of graphical notes. It also includes virtual or symbolic representations of additional model components, not representing products or spatial structures, such as event elements, survey points, contour lines or similar.\n */\nexport const IfcAnnotation = 1017;\n\n/**\n * The IfcAnnotationFillArea defines an area by a definite OuterBoundary, that might include InnerBoundaries. The areas defined by the InnerBoundaries are excluded from applying the fill area style. The InnerBoundaries shall not intersect with the OuterBoundary nor being outside of the OuterBoundary.\n */\nexport const IfcAnnotationFillArea = 1018;\n\n/**\n * IfcApplication holds the information about an IFC compliant application developed by an application developer. The IfcApplication utilizes a short identifying name as provided by the application developer.\n */\nexport const IfcApplication = 1019;\n\n/**\n * This entity captures a value driven by a formula, with additional qualifications including unit basis, valid date range, and categorization.\n */\nexport const IfcAppliedValue = 1020;\n\n/**\n * An IfcApproval represents information about approval processes such as for a plan, a design, a proposal, or a change order in a construction or facilities management project. IfcApproval is referenced by IfcRelAssociatesApproval in IfcControlExtension schema, and thereby can be related to all subtypes of IfcRoot. An approval may also be given to resource objects using IfcResourceApprovalRelationship\n */\nexport const IfcApproval = 1021;\n\n/**\n * An IfcApprovalRelationship associates approvals (one relating approval and one or more related approvals), each having different status or level as the approval process or the approved objects evolve.\n */\nexport const IfcApprovalRelationship = 1022;\n\n/**\n * The closed profile IfcArbitraryClosedProfileDef defines an arbitrary two-dimensional profile for the use within the swept surface geometry, the swept area solid or a sectioned spine. It is given by an outer boundary from which the surface or solid can be constructed.\n */\nexport const IfcArbitraryClosedProfileDef = 1023;\n\n/**\n * The open profile IfcArbitraryOpenProfileDef defines an arbitrary two-dimensional open profile for the use within the swept surface geometry. It is given by an open boundary from which the surface can be constructed.\n */\nexport const IfcArbitraryOpenProfileDef = 1024;\n\n/**\n * The IfcArbitraryProfileDefWithVoids defines an arbitrary closed two-dimensional profile with holes. It is given by an outer boundary and inner boundaries. A kdtree3 usage of IfcArbitraryProfileDefWithVoids is as the cross section for the creation of swept surfaces or swept solids.\n */\nexport const IfcArbitraryProfileDefWithVoids = 1025;\n\n/**\n * An asset is a uniquely identifiable grouping of elements acting as a single entity that has a financial value or that can be operated on as a single unit.\n */\nexport const IfcAsset = 1026;\n\n/**\n * IfcAsymmetricIShapeProfileDef defines a section profile that provides the defining parameters of a singly symmetric I-shaped section. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The centre of the position coordinate system is in the profile's centre of the bounding box.\n */\nexport const IfcAsymmetricIShapeProfileDef = 1027;\n\n/**\n * An audio-visual appliance is a device that displays, captures, transmits, or receives audio or video.\n */\nexport const IfcAudioVisualAppliance = 1028;\n\n/**\n * The flow terminal type IfcAudioVisualApplianceType defines commonly shared information for occurrences of audio visual appliances. The set of shared information may include:\n */\nexport const IfcAudioVisualApplianceType = 1029;\n\n/**\n * The IfcAxis1Placement provides location and direction of a single axis.\n */\nexport const IfcAxis1Placement = 1030;\n\n/**\n * The IfcAxis2Placement2D provides location and orientation to place items in a two-dimensional space. The attribute RefDirection defines the x axis, the y axis is derived. If the attribute RefDirection is not given, the placement defaults to P[1] (x-axis) as [1.,0.] and P[2] (y-axis) as [0.,1.].\n */\nexport const IfcAxis2Placement2D = 1031;\n\n/**\n * The IfcAxis2Placement3D provides location and orientations to place items in a three-dimensional space. The attribute Axis defines the Z direction, RefDirection the X direction. The Y direction is derived.\n */\nexport const IfcAxis2Placement3D = 1032;\n\n/**\n * An IfcBeam is a horizontal, or nearly horizontal, structural member that is capable of withstanding load primarily by resisting bending. It represents such a member from an architectural point of view. It is not required to be load bearing.\n */\nexport const IfcBeam = 1033;\n\n/**\n * The standard beam, IfcBeamStandardCase, defines a beam with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcBeamStandardCase handles all cases of beams, that:\n */\nexport const IfcBeamStandardCase = 1034;\n\n/**\n * The element type IfcBeamType defines commonly shared information for occurrences of beams. The set of shared information may include:\n */\nexport const IfcBeamType = 1035;\n\n/**\n * An IfcBlobTexture provides a 2-dimensional distribution of the lighting parameters of a surface onto which it is mapped. The texture itself is given as a single binary blob, representing the content of a pixel format file. The file format of the pixel file is given by the RasterFormat attribute and allowable formats are guided by where rule SupportedRasterFormat.\n */\nexport const IfcBlobTexture = 1036;\n\n/**\n * The IfcBlock is a Construction Solid Geometry (CSG) 3D primitive. It is defined by a position and a positve distance along the three orthogonal axes. The inherited Position attribute has the IfcAxisPlacement3D type and provides:\n */\nexport const IfcBlock = 1037;\n\n/**\n * A boiler is a closed, pressure-rated vessel in which water or other fluid is heated using an energy source such as natural gas, heating oil, or electricity. The fluid in the vessel is then circulated out of the boiler for use in various processes or heating applications.\n */\nexport const IfcBoiler = 1038;\n\n/**\n * The energy conversion device type IfcBoilerType defines commonly shared information for occurrences of boilers. The set of shared information may include:\n */\nexport const IfcBoilerType = 1039;\n\n/**\n * A clipping result is defined as a special subtype of the general IfcBooleanResult. It constrains the operands and the operator of the Boolean result.\n */\nexport const IfcBooleanClippingResult = 1040;\n\n/**\n * The IfcBooleanResult is the result of applying a Boolean operation to two operands being solids.\n */\nexport const IfcBooleanResult = 1041;\n\n/**\n * The abstract entity IfcBoundaryCondition is the supertype of all boundary conditions that can be applied to structural connection definitions, either directly for the connection (e.g. the joint) or for the relation between a structural member and the connection.\n */\nexport const IfcBoundaryCondition = 1042;\n\n/**\n * An IfcBoundaryCurve defines a curve acting as the boundary of a surface.\n */\nexport const IfcBoundaryCurve = 1043;\n\n/**\n * Describes linearly elastic support conditions or connection conditions.\n */\nexport const IfcBoundaryEdgeCondition = 1044;\n\n/**\n * Describes linearly elastic support conditions or connection conditions.\n */\nexport const IfcBoundaryFaceCondition = 1045;\n\n/**\n * Describes linearly elastic support conditions or connection conditions.\n */\nexport const IfcBoundaryNodeCondition = 1046;\n\n/**\n * Describes linearly elastic support conditions or connection conditions, including linearly elastic warping restraints.\n */\nexport const IfcBoundaryNodeConditionWarping = 1047;\n\n/**\n * An IfcBoundedCurve is a curve of finite length.\n */\nexport const IfcBoundedCurve = 1048;\n\n/**\n * An IfcBoundedSurface is a surface of finite area.\n */\nexport const IfcBoundedSurface = 1049;\n\n/**\n * The IfcBoundingBox defines an orthogonal box oriented parallel to the axes of the object coordinate system in which it is defined. It is defined by a Corner being a three-dimensional Cartesian point and three length measures defining the X, Y and Z parameters of the box in the direction of the positive axes.\n */\nexport const IfcBoundingBox = 1050;\n\n/**\n * The IfcBoxedHalfSpace is used (as its supertype IfcHalfSpaceSolid) only within Boolean operations. It divides the domain into exactly two subsets, where the domain in question is that of the attribute Enclosure.\n */\nexport const IfcBoxedHalfSpace = 1051;\n\n/**\n * The IfcBSplineCurve is a spline curve parameterized by spline functions.\n */\nexport const IfcBSplineCurve = 1052;\n\n/**\n * The IfcBSplineCurveWithKnots is a spline curve parameterized by spline functions for which the knot values are explicitly given.\n */\nexport const IfcBSplineCurveWithKnots = 1053;\n\n/**\n * The IfcBSplineSurface is a general form of rational or polynomial parametric surface.\n */\nexport const IfcBSplineSurface = 1054;\n\n/**\n * The IfcBSplineSurfaceWithKnots is a general form of rational or polynomial parametric surface in which the knot values are explicitly given.\n */\nexport const IfcBSplineSurfaceWithKnots = 1055;\n\n/**\n * A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space).\n */\nexport const IfcBuilding = 1056;\n\n/**\n * IfcBuildingElementPart represents major components as subordinate parts of a building element. Typical usage examples include precast concrete sandwich walls, where the layers may have different geometry representations. In this case the layered material representation does not sufficiently describe the element. Each layer is represented by an own instance of the IfcBuildingElementPart with its own geometry description.\n */\nexport const IfcBuildingElementPart = 1057;\n\n/**\n * The building element part type defines lists of commonly shared property set definitions and representation maps of parts of a building element.\n */\nexport const IfcBuildingElementPartType = 1058;\n\n/**\n * The IfcBuildingElementProxy is a proxy definition that provides the same functionality as subtypes of IfcBuildingElement, but without having a predefined meaning of the special type of building element, it represents.\n */\nexport const IfcBuildingElementProxy = 1059;\n\n/**\n * IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcBuildingElementProxyType = 1060;\n\n/**\n * The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.\n */\nexport const IfcBuildingStorey = 1061;\n\n/**\n * A building system is a group by which building elements are grouped according to a kdtree3 function within the facility.\n */\nexport const IfcBuildingSystem = 1062;\n\n/**\n * A burner is a device that converts fuel into heat through combustion. It includes gas, oil, and wood burners.\n */\nexport const IfcBurner = 1063;\n\n/**\n * The energy conversion device type IfcBurnerType defines commonly shared information for occurrences of burners. The set of shared information may include:\n */\nexport const IfcBurnerType = 1064;\n\n/**\n * A cable carrier fitting is a fitting that is placed at junction or transition in a cable carrier system.\n */\nexport const IfcCableCarrierFitting = 1065;\n\n/**\n * The flow fitting type IfcCableCarrierFittingType defines commonly shared information for occurrences of cable carrier fittings. The set of shared information may include:\n */\nexport const IfcCableCarrierFittingType = 1066;\n\n/**\n * A cable carrier segment is a flow segment that is specifically used to carry and support cabling.\n */\nexport const IfcCableCarrierSegment = 1067;\n\n/**\n * The flow segment type IfcCableCarrierSegmentType defines commonly shared information for occurrences of cable carrier segments. The set of shared information may include:\n */\nexport const IfcCableCarrierSegmentType = 1068;\n\n/**\n * A cable fitting is a fitting that is placed at a junction, transition or termination in a cable system.\n */\nexport const IfcCableFitting = 1069;\n\n/**\n * The flow fitting type IfcCableFittingType defines commonly shared information for occurrences of cable fittings. The set of shared information may include:\n */\nexport const IfcCableFittingType = 1070;\n\n/**\n * A cable segment is a flow segment used to carry electrical power, data, or telecommunications signals.\n */\nexport const IfcCableSegment = 1071;\n\n/**\n * The flow segment type IfcCableSegmentType defines commonly shared information for occurrences of cable segments. The set of shared information may include:\n */\nexport const IfcCableSegmentType = 1072;\n\n/**\n * An IfcCartesianPoint defines a point by coordinates in an orthogonal, right-handed Cartesian coordinate system. For the purpose of this specification only two and three dimensional Cartesian points are used.\n */\nexport const IfcCartesianPoint = 1073;\n\n/**\n * The IfcCartesianPointList is the abstract supertype of list of points.\n */\nexport const IfcCartesianPointList = 1074;\n\n/**\n * The IfcCartesianPointList2D defines an ordered collection of two-dimentional Cartesian points. Each Cartesian point is provided as an two-dimensional point by a fixed list of two coordinates. The attribute CoordList is a two-dimensional list, where\n */\nexport const IfcCartesianPointList2D = 1075;\n\n/**\n * The IfcCartesianPointList3D defines an ordered collection of three-dimentional Cartesian points. Each Cartesian point is provided as an three-dimensional point by a fixed list of three coordinates. The attribute CoordList is a two-dimensional list, where\n */\nexport const IfcCartesianPointList3D = 1076;\n\n/**\n * An IfcCartesianTransformationOperator defines an abstract supertype of different kinds of geometric transformations.\n */\nexport const IfcCartesianTransformationOperator = 1077;\n\n/**\n * An IfcCartesianTransformationOperator2D defines a geometric transformation in two-dimensional space.\n */\nexport const IfcCartesianTransformationOperator2D = 1078;\n\n/**\n * A Cartesian transformation operator 2d non uniform defines a geometric transformation in two-dimensional space composed of translation, rotation, mirroring and non uniform scaling. Non uniform scaling is given by two different scaling factors:\n */\nexport const IfcCartesianTransformationOperator2DnonUniform = 1079;\n\n/**\n * An IfcCartesianTransformationOperator defines a geometric transformation in three-dimensional space.\n */\nexport const IfcCartesianTransformationOperator3D = 1080;\n\n/**\n * A Cartesian transformation operator 3d non uniform defines a geometric transformation in three-dimensional space composed of translation, rotation, mirroring and non uniform scaling. Non uniform scaling is given by three different scaling factors:\n */\nexport const IfcCartesianTransformationOperator3DnonUniform = 1081;\n\n/**\n * The profile IfcCenterLineProfileDef defines an arbitrary two-dimensional open, not self intersecting profile for the use within the swept solid geometry. It is given by an area defined by applying a constant thickness to a centerline, generating an area from which the solid can be constructed.\n */\nexport const IfcCenterLineProfileDef = 1082;\n\n/**\n * A chiller is a device used to remove heat from a liquid via a vapor-compression or absorption refrigeration cycle to cool a fluid, typically water or a mixture of water and glycol. The chilled fluid is then used to cool and dehumidify air in a building.\n */\nexport const IfcChiller = 1083;\n\n/**\n * The energy conversion device type IfcChillerType defines commonly shared information for occurrences of chillers. The set of shared information may include:\n */\nexport const IfcChillerType = 1084;\n\n/**\n * Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre-cast or insitu concrete, today seldom by bricks.\n */\nexport const IfcChimney = 1085;\n\n/**\n * The building element type IfcChimneyType defines commonly shared information for occurrences of chimneys. The set of shared information may include:\n */\nexport const IfcChimneyType = 1086;\n\n/**\n * An IfcCircle is a curve consisting of a set of points having equal distance from the center.\n */\nexport const IfcCircle = 1087;\n\n/**\n * IfcCircleHollowProfileDef defines a section profile that provides the defining parameters of a circular hollow section (tube) to be used by the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration.The centre of the position coordinate system is in the profile's centre of the bounding box (for symmetric profiles identical with the centre of gravity).\n */\nexport const IfcCircleHollowProfileDef = 1088;\n\n/**\n * IfcCircleProfileDef defines a circle as the profile definition used by the swept surface geometry or by the swept area solid. It is given by its Radius attribute and placed within the 2D position coordinate system, established by the Position attribute.\n */\nexport const IfcCircleProfileDef = 1089;\n\n/**\n * An IfcCivilElement is a generalization of all elements within a civil engineering works that cannot be represented as BuildingElements, DistributionElements or GeographicElements. Depending on the context of the construction project, included building work, such as buildings or factories, are represented as a collection of IfcBuildingElement's, distribution systems, such as piping or drainage, are represented as a collection of IfcDistributionElement's, and other geographic elements, such as trees, light posts, traffic signs etc. are represented as IfcGeographicElement's.\n */\nexport const IfcCivilElement = 1090;\n\n/**\n * An IfcCivilElementType is used to define an element specification of an element used within civil engineering works. Civil element types include for different types of element that may be used to represent information for construction works external to a building. IfcCivilElementType's may include:\n */\nexport const IfcCivilElementType = 1091;\n\n/**\n * An IfcClassification is used for the arrangement of objects into a class or category according to a kdtree3 purpose or their possession of kdtree3 characteristics. A classification in the sense of IfcClassification is taxonomy, or taxonomic scheme, arranged in a hierarchical structure. A category of objects relates to other categories in a generalization-specialization relationship. Therefore the classification items in an classification are organized in a tree structure.\n */\nexport const IfcClassification = 1092;\n\n/**\n * An IfcClassificationReference is a reference into a classification system or source (see IfcClassification) for a specific classification key (or notation).\n */\nexport const IfcClassificationReference = 1093;\n\n/**\n *\n */\nexport const IfcClosedShell = 1094;\n\n/**\n * A coil is a device used to provide heat transfer between non-mixing media. A kdtree3 example is a cooling coil, which utilizes a finned coil in which circulates chilled water, antifreeze, or refrigerant that is used to remove heat from air moving across the surface of the coil. A coil may be used either for heating or cooling purposes by placing a series of tubes (the coil) carrying a heating or cooling fluid into an airstream. The coil may be constructed from tubes bundled in a serpentine form or from finned tubes that give a extended heat transfer surface.\n */\nexport const IfcCoil = 1095;\n\n/**\n * The energy conversion device type IfcCoilType defines commonly shared information for occurrences of coils. The set of shared information may include:\n */\nexport const IfcCoilType = 1096;\n\n/**\n *\n */\nexport const IfcColourRgb = 1097;\n\n/**\n * The IfcColourRgbList defines an ordered collection of RGB colour values. Each colour value is a fixed list of three colour components (red, green, blue). The attribute ColourList is a two-dimensional list, where:\n */\nexport const IfcColourRgbList = 1098;\n\n/**\n *\n */\nexport const IfcColourSpecification = 1099;\n\n/**\n * <An IfcColumn is a vertical structural member which often is aligned with a structural grid intersection. It represents a vertical, or nearly vertical, structural member that transmits, through compression, the weight of the structure above to other structural elements below. It represents such a member from an architectural point of view. It is not required to be load bearing.\n */\nexport const IfcColumn = 1100;\n\n/**\n * The standard column, IfcColumnStandardCase, defines a column with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcColumnStandardCase handles all cases of columns, that:\n */\nexport const IfcColumnStandardCase = 1101;\n\n/**\n * The element type IfcColumnType defines commonly shared information for occurrences of columns. The set of shared information may include:\n */\nexport const IfcColumnType = 1102;\n\n/**\n * A communications appliance transmits and receives electronic or digital information as data or sound.\n */\nexport const IfcCommunicationsAppliance = 1103;\n\n/**\n * The flow terminal type IfcCommunicationsApplianceType defines commonly shared information for occurrences of communications appliances. The set of shared information may include:\n */\nexport const IfcCommunicationsApplianceType = 1104;\n\n/**\n * IfcComplexProperty is used to define complex properties to be handled completely within a property set. The included set of properties may be a mixed or consistent collection of IfcProperty subtypes. This enables the definition of a set of properties to be included as a single 'property' entry in an IfcPropertySet. The definition of such an IfcComplexProperty can be reused in many different IfcPropertySet's.\n */\nexport const IfcComplexProperty = 1105;\n\n/**\n * The IfcComplexPropertyTemplate defines the template for all complex properties, either the IfcComplexProperty's, or the IfcPhysicalComplexQuantity's. The individual complex property templates are interpreted according to their Name attribute and and optional UsageName attribute.\n */\nexport const IfcComplexPropertyTemplate = 1106;\n\n/**\n * An IfcCompositeCurve is a continuous curve composed of curve segments.\n */\nexport const IfcCompositeCurve = 1107;\n\n/**\n * The IfcCompositeCurveOnSurface is a collection of segments, based on p-curves. i.e. a curve which lies on the basis of a surface and is defined in the parameter space of that surface. The p-curve segment is a special type of a composite curve segment and shall only be used to bound a surface.\n */\nexport const IfcCompositeCurveOnSurface = 1108;\n\n/**\n * An IfcCompositeCurveSegment is a bounded curve constructed for the sole purpose to be a segment within an IfcCompositeCurve.\n */\nexport const IfcCompositeCurveSegment = 1109;\n\n/**\n * The IfcCompositeProfileDef defines the profile by composition of other profiles. The composition is given by a set of at least two other profile definitions. Any profile definition (except for another composite profile) can be used to construct the composite.\n */\nexport const IfcCompositeProfileDef = 1110;\n\n/**\n * A compressor is a device that compresses a fluid typically used in a refrigeration circuit.\n */\nexport const IfcCompressor = 1111;\n\n/**\n * The flow moving device type IfcCompressorType defines commonly shared information for occurrences of compressors. The set of shared information may include:\n */\nexport const IfcCompressorType = 1112;\n\n/**\n * A condenser is a device that is used to dissipate heat, typically by condensing a substance such as a refrigerant from its gaseous to its liquid state.\n */\nexport const IfcCondenser = 1113;\n\n/**\n * The energy conversion device type IfcCondenserType defines commonly shared information for occurrences of condensers. The set of shared information may include:\n */\nexport const IfcCondenserType = 1114;\n\n/**\n * An IfcConic is a parameterized planar curve.\n */\nexport const IfcConic = 1115;\n\n/**\n *\n */\nexport const IfcConnectedFaceSet = 1116;\n\n/**\n * IfcConnectionCurveGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a curve or at an edge with curve geometry associated. It is envisioned as a control that applies to the element connection relationships.\n */\nexport const IfcConnectionCurveGeometry = 1117;\n\n/**\n * IfcConnectionGeometry is used to describe the geometric and topological constraints that facilitate the physical connection of two objects. It is envisioned as a control that applies to the element connection relationships.\n */\nexport const IfcConnectionGeometry = 1118;\n\n/**\n * IfcConnectionPointEccentricity is used to describe the geometric constraints that facilitate the physical connection of two objects at a point or vertex point with associated point coordinates. There is a physical distance, or eccentricity, etween the connection points of both object. The eccentricity can be either given by:\n */\nexport const IfcConnectionPointEccentricity = 1119;\n\n/**\n * IfcConnectionPointGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a point (here IfcCartesianPoint) or at an vertex with point coordinates associated. It is envisioned as a control that applies to the element connection relationships.\n */\nexport const IfcConnectionPointGeometry = 1120;\n\n/**\n * IfcConnectionSurfaceGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a surface or at a face with surface geometry associated. It is envisioned as a control that applies to the element connection relationships.\n */\nexport const IfcConnectionSurfaceGeometry = 1121;\n\n/**\n * IfcConnectionVolumeGeometry is used to describe the geometric constraints that facilitate the physical connection (or overlap) of two objects at a volume defined by a solid or closed shell. It is envisioned as a control that applies to the element connection or interference relationships.\n */\nexport const IfcConnectionVolumeGeometry = 1122;\n\n/**\n * An IfcConstraint is used to define a constraint or limiting value or boundary condition that may be applied to an object or to the value of a property.\n */\nexport const IfcConstraint = 1123;\n\n/**\n * IfcConstructionEquipmentResource is usage of construction equipment to assist in the performance of construction. Construction Equipment resources are wholly or partially consumed or occupied in the performance of construction.\n */\nexport const IfcConstructionEquipmentResource = 1124;\n\n/**\n * The resource type IfcConstructionEquipmentType defines commonly shared information for occurrences of construction equipment resources. The set of shared information may include:\n */\nexport const IfcConstructionEquipmentResourceType = 1125;\n\n/**\n * IfcConstructionMaterialResource identifies a material resource type in a construction project.\n */\nexport const IfcConstructionMaterialResource = 1126;\n\n/**\n * The resource type IfcConstructionMaterialType defines commonly shared information for occurrences of construction material resources. The set of shared information may include:\n */\nexport const IfcConstructionMaterialResourceType = 1127;\n\n/**\n * IfcConstructionProductResource defines the role of a product that is consumed (wholly or partially), or occupied in the performance of construction.\n */\nexport const IfcConstructionProductResource = 1128;\n\n/**\n * The resource type IfcConstructionProductType defines commonly shared information for occurrences of construction product resources. The set of shared information may include:\n */\nexport const IfcConstructionProductResourceType = 1129;\n\n/**\n * IfcConstructionResource is an abstract generalization of the different resources used in construction projects, mainly labour, material, equipment and product resources, plus subcontracted resources and aggregations such as a crew resource.\n */\nexport const IfcConstructionResource = 1130;\n\n/**\n * IfcConstructionResourceType is an abstract generalization of the different resource types used in construction projects, mainly labor, material, equipment and product resource types, plus subcontracted resource types and aggregations such as a crew resource type.\n */\nexport const IfcConstructionResourceType = 1131;\n\n/**\n * IfcContext is the generalization of a project context in which objects, type objects, property sets, and properties are defined. The IfcProject as subtype of IfcContext provides the context for all information on a construction project, it may include one or several IfcProjectLibrary's as subtype of IfcContext to register the included libraries for the project. A library of products that is referenced is declared within the IfcProjectLibrary as the context of that library.\n */\nexport const IfcContext = 1132;\n\n/**\n *\n */\nexport const IfcContextDependentUnit = 1133;\n\n/**\n * IfcControl is the abstract generalization of all concepts that control or constrain the utilization of products, processes, or resources in general. It can be seen as a regulation, cost schedule, request or order, or other requirements applied to a product, process or resource whose requirements and provisions must be fulfilled.\n */\nexport const IfcControl = 1134;\n\n/**\n * A controller is a device that monitors inputs and controls outputs within a building automation system.\n */\nexport const IfcController = 1135;\n\n/**\n * The distribution control element type IfcControllerType defines commonly shared information for occurrences of controllers. The set of shared information may include:\n */\nexport const IfcControllerType = 1136;\n\n/**\n * An IfcConversionBasedUnit is used to define a unit that has a conversion rate to a base unit. To identify some commonly used conversion based units, the standard designations (case insensitive) for the Name attribute are indicated in Table 696.\n */\nexport const IfcConversionBasedUnit = 1137;\n\n/**\n * IfcConversionBasedUnitWithOffset is a unit which is converted from another unit by applying a conversion factor and an offset.\n */\nexport const IfcConversionBasedUnitWithOffset = 1138;\n\n/**\n * A cooled beam (or chilled beam) is a device typically used to cool air by circulating a fluid such as chilled water through exposed finned tubes above a space. Typically mounted overhead near or within a ceiling, the cooled beam uses convection to cool the space below it by acting as a heat sink for the naturally rising warm air of the space. Once cooled, the air naturally drops back to the floor where the cycle begins again.\n */\nexport const IfcCooledBeam = 1139;\n\n/**\n * The energy conversion device type IfcCooledBeamType defines commonly shared information for occurrences of cooled beams. The set of shared information may include:\n */\nexport const IfcCooledBeamType = 1140;\n\n/**\n * A cooling tower is a device which rejects heat to ambient air by circulating a fluid such as water through it to reduce its temperature by partial evaporation.\n */\nexport const IfcCoolingTower = 1141;\n\n/**\n * The energy conversion device type IfcCoolingTowerType defines commonly shared information for occurrences of cooling towers. The set of shared information may include:\n */\nexport const IfcCoolingTowerType = 1142;\n\n/**\n * The coordinate operation is an abstract supertype to handle any operation (transformation or conversion) between two coordinate reference systems. It is meant to provide expandability for future versions, since currently only the conversion of a local engineering coordinate system into a map coordinate reference system is dealt with by the subtype IfcMapConversion.\n */\nexport const IfcCoordinateOperation = 1143;\n\n/**\n * The IfcCoordinateReferenceSystem is a definition of a coordinate reference system by means of qualified identifiers only. The interpretation of the identifier is expected to be well-known to the receiving software.\n */\nexport const IfcCoordinateReferenceSystem = 1144;\n\n/**\n * An IfcCostItem describes a cost or financial value together with descriptive information that describes its context in a form that enables it to be used within a cost schedule. An IfcCostItem can be used to represent the cost of goods and services, the execution of works by a process, lifecycle cost and more.\n */\nexport const IfcCostItem = 1145;\n\n/**\n * An IfcCostSchedule brings together instances of IfcCostItem either for the purpose of identifying purely cost information as in an estimate for constructions costs or for including cost information within another presentation form such as a work order.\n */\nexport const IfcCostSchedule = 1146;\n\n/**\n * IfcCostValue is an amount of money or a value that affects an amount of money.\n */\nexport const IfcCostValue = 1147;\n\n/**\n * A covering is an element which covers some part of another element and is fully dependent on that other element. The IfcCovering defines the occurrence of a covering type, that (if given) is expressed by the IfcCoveringType.\n */\nexport const IfcCovering = 1148;\n\n/**\n * The element type IfcCoveringType defines commonly shared information for occurrences of coverings. The set of shared information may include:\n */\nexport const IfcCoveringType = 1149;\n\n/**\n * IfcCrewResource represents a collection of internal resources used in construction processes.\n */\nexport const IfcCrewResource = 1150;\n\n/**\n * The resource type IfcCrewResourceType defines commonly shared information for occurrences of crew resources. The set of shared information may include:\n */\nexport const IfcCrewResourceType = 1151;\n\n/**\n * IfcCsgPrimitive3D is an abstract supertype of all three dimensional primitives used as either tree root item, or as Boolean results within a CSG solid model. All 3D CSG primitives are defined within a three-dimensional placement coordinate system.\n */\nexport const IfcCsgPrimitive3D = 1152;\n\n/**\n * An IfcCsgSolid is the representation of a 3D shape using constructive solid geometry model. It is represented by a single 3D CSG primitive, or as a result of a Boolean operation. The operants of a Boolean operation can be Boolean operations themselves forming a CSG tree. The following volumes can be parts of the CSG tree:\n */\nexport const IfcCsgSolid = 1153;\n\n/**\n * IfcCShapeProfileDef defines a section profile that provides the defining parameters of a C-shaped section to be used by the swept area solid. This section is typically produced by cold forming steel. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The centre of the position coordinate system is in the profile's centre of the bounding box.\n */\nexport const IfcCShapeProfileDef = 1154;\n\n/**\n * IfcCurrencyRelationship defines the rate of exchange that applies between two designated currencies at a particular time and as published by a particular source.\n */\nexport const IfcCurrencyRelationship = 1155;\n\n/**\n * A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor. Curtain wall is represented as a building element assembly and implemented as a subtype of IfcBuildingElement that uses an IfcRelAggregates relationship.\n */\nexport const IfcCurtainWall = 1156;\n\n/**\n * The building element type IfcCurtainWallType defines commonly shared information for occurrences of curtain walls. The set of shared information may include:\n */\nexport const IfcCurtainWallType = 1157;\n\n/**\n * An IfcCurve is a curve in two-dimensional or three-dimensional space. It includes definitions for bounded and unbounded curves.\n */\nexport const IfcCurve = 1158;\n\n/**\n * The IfcCurveBoundedPlane is a parametric planar surface with curved boundaries defined by one or more boundary curves. The bounded plane is defined to be the portion of the basis surface in the direction of N x T from any point on the boundary, where N is the surface normal and T the boundary curve tangent vector at this point. The region so defined shall be arcwise connected.\n */\nexport const IfcCurveBoundedPlane = 1159;\n\n/**\n * The IfcCurveBoundedSurface is a parametric surface with boundaries defined by p-curves, that is, a curve which lies on the basis of a surface and is defined in the parameter space of that surface. The p-curve is a special type of a composite curve segment and shall only be used to bound a surface.\n */\nexport const IfcCurveBoundedSurface = 1160;\n\n/**\n * An IfcCurveStyle provides the style table for presentation information assigned to geometric curves. The style is defined by a color, a font and a width. The IfcCurveStyle defines curve patterns as model patterns, that is, the distance between visible and invisible segments of curve patterns are given in model space dimensions (that have to be scaled using the target plot scale).\n */\nexport const IfcCurveStyle = 1161;\n\n/**\n *\n */\nexport const IfcCurveStyleFont = 1162;\n\n/**\n * The IfcCurveStyleFontAndScaling allows for the reuse of the same curve style definition in several sizes. The definition of the CurveFontScale is the scaling of a base curve style pattern to be used as a new or derived curve style pattern.\n */\nexport const IfcCurveStyleFontAndScaling = 1163;\n\n/**\n *\n */\nexport const IfcCurveStyleFontPattern = 1164;\n\n/**\n * The cylindrical surface is a surface unbounded in the direction of z. Bounded cylindrical surfaces are defined by using a subtype of IfcBoundedSurface with BasisSurface being a cylindrical surface.\n */\nexport const IfcCylindricalSurface = 1165;\n\n/**\n * A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air.\n */\nexport const IfcDamper = 1166;\n\n/**\n * The flow controller type IfcDamperType defines commonly shared information for occurrences of dampers. The set of shared information may include:\n */\nexport const IfcDamperType = 1167;\n\n/**\n * IfcDerivedProfileDef defines the profile by transformation from the parent profile. The transformation is given by a two dimensional transformation operator. Transformation includes translation, rotation, mirror and scaling. The latter can be uniform or non uniform. The derived profiles may be used to define swept surfaces, swept area solids or sectioned spines.\n */\nexport const IfcDerivedProfileDef = 1168;\n\n/**\n *\n */\nexport const IfcDerivedUnit = 1169;\n\n/**\n *\n */\nexport const IfcDerivedUnitElement = 1170;\n\n/**\n *\n */\nexport const IfcDimensionalExponents = 1171;\n\n/**\n * The IfcDirection provides a direction in two or three dimensional space depending on the number of DirectionRatio's provided. The IfcDirection does not imply a vector length, and the direction ratios does not have to be normalized.\n */\nexport const IfcDirection = 1172;\n\n/**\n * A discrete accessory is a representation of different kinds of accessories included in or added to elements.\n */\nexport const IfcDiscreteAccessory = 1173;\n\n/**\n * The element component type IfcDiscreteAccessoryType defines commonly shared information for occurrences of discrete accessorys. The set of shared information may include:\n */\nexport const IfcDiscreteAccessoryType = 1174;\n\n/**\n * A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel.\n */\nexport const IfcDistributionChamberElement = 1175;\n\n/**\n * The distribution flow element type IfcDistributionChamberElementType defines commonly shared information for occurrences of distribution chamber elements. The set of shared information may include:\n */\nexport const IfcDistributionChamberElementType = 1176;\n\n/**\n * A distribution circuit is a partition of a distribution system that is conditionally switched such as an electrical circuit.\n */\nexport const IfcDistributionCircuit = 1177;\n\n/**\n * The distribution element IfcDistributionControlElement defines occurrence elements of a building automation control system that are used to impart control over elements of a distribution system.\n */\nexport const IfcDistributionControlElement = 1178;\n\n/**\n * The element type IfcDistributionControlElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcDistributionControlElementType = 1179;\n\n/**\n * This IfcDistributionElement is a generalization of all elements that participate in a distribution system. Typical examples of IfcDistributionElement's are (among others):\n */\nexport const IfcDistributionElement = 1180;\n\n/**\n * The IfcDistributionElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcDistributionElementType = 1181;\n\n/**\n * The distribution element IfcDistributionFlowElement defines occurrence elements of a distribution system that facilitate the distribution of energy or matter, such as air, water or power.\n */\nexport const IfcDistributionFlowElement = 1182;\n\n/**\n * The element type IfcDistributionFlowElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcDistributionFlowElementType = 1183;\n\n/**\n * A distribution port is an inlet or outlet of a product through which a particular substance may flow.\n */\nexport const IfcDistributionPort = 1184;\n\n/**\n * A distribution system is a network designed to receive, store, maintain, distribute, or control the flow of a distribution media. A kdtree3 example is a heating hot water system that consists of a pump, a tank, and an interconnected piping system for distributing hot water to terminals.\n */\nexport const IfcDistributionSystem = 1185;\n\n/**\n * IfcDocumentInformation captures \"metadata\" of an external document. The actual content of the document is not defined in this specification; instead, it can be found following the Location attribute.\n */\nexport const IfcDocumentInformation = 1186;\n\n/**\n * An IfcDocumentInformationRelationship is a relationship entity that enables a document to have the ability to reference other documents. It is used to describe relationships in which one document may reference one or more other sub documents or where a document is used as a replacement for another document (but where both the original and the replacing document need to be retained).\n */\nexport const IfcDocumentInformationRelationship = 1187;\n\n/**\n * An IfcDocumentReference is a reference to the location of a document. The reference is given by a system interpretable Location attribute (a URL string) where the document can be found, and an optional inherited internal reference Identification, which refers to a system interpretable position within the document. The optional inherited Name attribute is meant to have meaning for human readers. Optional document metadata can also be captured through reference to IfcDocumentInformation.\n */\nexport const IfcDocumentReference = 1188;\n\n/**\n * The door is a built element that is predominately used to provide controlled access for people, goods, animals and vehicles. It includes constructions with hinged, pivoted, sliding, and additionally revolving and folding operations. REMOVE: A door consists of a lining and one or several panels.\n */\nexport const IfcDoor = 1189;\n\n/**\n * The door lining is the frame which enables the door leaf to be fixed in position. The door lining is used to hang the door leaf. The parameters of the door lining define the geometrically relevant parameter of the lining.\n */\nexport const IfcDoorLiningProperties = 1190;\n\n/**\n * A door panel is normally a door leaf that opens to allow people or goods to pass. The parameters of the door panel define the geometrically relevant parameter of the panel,\n */\nexport const IfcDoorPanelProperties = 1191;\n\n/**\n * The standard door, IfcDoorStandardCase, defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation. The IfcDoorStandardCase handles all cases of doors, that:\n */\nexport const IfcDoorStandardCase = 1192;\n\n/**\n * Definition: The door style, IfcDoorStyle, defines a particular style of doors, which may be included into the spatial context of the building model through instances of IfcDoor. A door style defines the overall parameter of the door style and refers to the particular parameter of the lining and one (or several) panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties.\n */\nexport const IfcDoorStyle = 1193;\n\n/**\n * The element type IfcDoorType defines commonly shared information for occurrences of doors. The set of shared information may include:\n */\nexport const IfcDoorType = 1194;\n\n/**\n * The draughting pre defined colour is a pre defined colour for the purpose to identify a colour by name. Allowable names are:\n */\nexport const IfcDraughtingPreDefinedColour = 1195;\n\n/**\n * The draughting predefined curve font type defines a selection of widely used curve fonts for draughting purposes by name.\n */\nexport const IfcDraughtingPreDefinedCurveFont = 1196;\n\n/**\n * A duct fitting is a junction or transition in a ducted flow distribution system or used to connect duct segments, resulting in changes in flow characteristics to the fluid such as direction and flow rate.\n */\nexport const IfcDuctFitting = 1197;\n\n/**\n * The flow fitting type IfcDuctFittingType defines commonly shared information for occurrences of duct fittings. The set of shared information may include:\n */\nexport const IfcDuctFittingType = 1198;\n\n/**\n * A duct segment is used to typically join two sections of duct network.\n */\nexport const IfcDuctSegment = 1199;\n\n/**\n * The flow segment type IfcDuctSegmentType defines commonly shared information for occurrences of duct segments. The set of shared information may include:\n */\nexport const IfcDuctSegmentType = 1200;\n\n/**\n * A duct silencer is a device that is typically installed inside a duct distribution system for the purpose of reducing the noise levels from air movement, fan noise, etc. in the adjacent space or downstream of the duct silencer device.\n */\nexport const IfcDuctSilencer = 1201;\n\n/**\n * The flow treatment device type IfcDuctSilencerType defines commonly shared information for occurrences of duct silencers. The set of shared information may include:\n */\nexport const IfcDuctSilencerType = 1202;\n\n/**\n * An IfcEdge defines two vertices being connected topologically. The geometric representation of the connection between the two vertices defaults to a straight line if no curve geometry is assigned using the subtype IfcEdgeCurve. The IfcEdge can therefore be used to exchange straight edges without an associated geometry provided by IfcLine or IfcPolyline thought IfcEdgeCurve.EdgeGeometry.\n */\nexport const IfcEdge = 1203;\n\n/**\n * An IfcEdgeCurve defines two vertices being connected topologically including the geometric representation of the connection.\n */\nexport const IfcEdgeCurve = 1204;\n\n/**\n *\n */\nexport const IfcEdgeLoop = 1205;\n\n/**\n * An electric appliance is a device intended for consumer usage that is powered by electricity.\n */\nexport const IfcElectricAppliance = 1206;\n\n/**\n * The flow terminal type IfcElectricApplianceType defines commonly shared information for occurrences of electric appliances. The set of shared information may include:\n */\nexport const IfcElectricApplianceType = 1207;\n\n/**\n * A distribution board is a flow controller in which instances of electrical devices are brought together at a single place for a particular purpose.\n */\nexport const IfcElectricDistributionBoard = 1208;\n\n/**\n * The flow controller type IfcElectricDistributionBoardType defines commonly shared information for occurrences of electric distribution boards. The set of shared information may include:\n */\nexport const IfcElectricDistributionBoardType = 1209;\n\n/**\n * An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released.\n */\nexport const IfcElectricFlowStorageDevice = 1210;\n\n/**\n * The flow storage device type IfcElectricFlowStorageDeviceType defines commonly shared information for occurrences of electric flow storage devices. The set of shared information may include:\n */\nexport const IfcElectricFlowStorageDeviceType = 1211;\n\n/**\n * An electric generator is an engine that is a machine for converting mechanical energy into electrical energy.\n */\nexport const IfcElectricGenerator = 1212;\n\n/**\n * The energy conversion device type IfcElectricGeneratorType defines commonly shared information for occurrences of electric generators. The set of shared information may include:\n */\nexport const IfcElectricGeneratorType = 1213;\n\n/**\n * An electric motor is an engine that is a machine for converting electrical energy into mechanical energy.\n */\nexport const IfcElectricMotor = 1214;\n\n/**\n * The energy conversion device type IfcElectricMotorType defines commonly shared information for occurrences of electric motors. The set of shared information may include:\n */\nexport const IfcElectricMotorType = 1215;\n\n/**\n * An electric time control is a device that applies control to the provision or flow of electrical energy over time.\n */\nexport const IfcElectricTimeControl = 1216;\n\n/**\n * The flow controller type IfcElectricTimeControlType defines commonly shared information for occurrences of electric time controls. The set of shared information may include:\n */\nexport const IfcElectricTimeControlType = 1217;\n\n/**\n * An element is a generalization of all components that make up an AEC product.\n */\nexport const IfcElement = 1218;\n\n/**\n * An IfcElementarySurface in the kdtree3 supertype of analytical surfaces.\n */\nexport const IfcElementarySurface = 1219;\n\n/**\n * The IfcElementAssembly represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.\n */\nexport const IfcElementAssembly = 1220;\n\n/**\n * The IfcElementAssemblyType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcElementAssemblyType = 1221;\n\n/**\n * An element component is a representation for minor items included in, added to or connecting to or between elements, which usually are not of interest from the overall building structure viewpoint. However, these small parts may have vital and load carrying functions within the construction. These items do not provide any actual space boundaries. Typical examples of _IfcElementComponent_s include different kinds of fasteners and various accessories.\n */\nexport const IfcElementComponent = 1222;\n\n/**\n * The element type IfcElementComponentType defines commonly shared information for occurrences of element components. The set of shared information may include:\n */\nexport const IfcElementComponentType = 1223;\n\n/**\n * An IfcElementQuantity defines a set of derived measures of an element's physical property. Elements could be spatial structure elements (like buildings, storeys, or spaces) or building elements (like walls, slabs, finishes). The IfcElementQuantity gets assigned to the element by using the IfcRelDefinesByProperties relationship.\n */\nexport const IfcElementQuantity = 1224;\n\n/**\n * IfcElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcElementType = 1225;\n\n/**\n * An IfcEllipse is a curve consisting of a set of points whose distances to two fixed points add to the same constant.\n */\nexport const IfcEllipse = 1226;\n\n/**\n * IfcEllipseProfileDef defines an ellipse as the profile definition used by the swept surface geometry or the swept area solid. It is given by its semi axis attributes and placed within the 2D position coordinate system, established by the Position attribute.\n */\nexport const IfcEllipseProfileDef = 1227;\n\n/**\n * The distribution flow element IfcEnergyConversionDevice defines the occurrence of a device used to perform energy conversion or heat transfer and typically participates in a flow distribution system. Its type is defined by IfcEnergyConversionDeviceType or its subtypes.\n */\nexport const IfcEnergyConversionDevice = 1228;\n\n/**\n * The element type IfcEnergyConversionType defines a list of commonly shared property set definitions of an energy conversion device and an optional set of product representations. It is used to define an energy conversion device specification (the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcEnergyConversionDeviceType = 1229;\n\n/**\n * An engine is a device that converts fuel into mechanical energy through combustion.\n */\nexport const IfcEngine = 1230;\n\n/**\n * The energy conversion device type IfcEngineType defines commonly shared information for occurrences of engines. The set of shared information may include:\n */\nexport const IfcEngineType = 1231;\n\n/**\n * An evaporative cooler is a device that cools air by saturating it with water vapor.\n */\nexport const IfcEvaporativeCooler = 1232;\n\n/**\n * The energy conversion device type IfcEvaporativeCoolerType defines commonly shared information for occurrences of evaporative coolers. The set of shared information may include:\n */\nexport const IfcEvaporativeCoolerType = 1233;\n\n/**\n * An evaporator is a device in which a liquid refrigerent is vaporized and absorbs heat from the surrounding fluid.\n */\nexport const IfcEvaporator = 1234;\n\n/**\n * The energy conversion device type IfcEvaporatorType defines commonly shared information for occurrences of evaporators. The set of shared information may include:\n */\nexport const IfcEvaporatorType = 1235;\n\n/**\n * An IfcEvent is something that happens that triggers an action or response.\n */\nexport const IfcEvent = 1236;\n\n/**\n * IfcEventTime captures the time-related information about an event including the different types of event dates (i.e. actual, scheduled, early, and late).\n */\nexport const IfcEventTime = 1237;\n\n/**\n * An IfcEventType defines a particular type of event that may be specified.\n */\nexport const IfcEventType = 1238;\n\n/**\n * The IfcExtendedProperties is an abstract supertype of all extensible property collections that are applicable to certain characterized entities. Instantiable subtypes of IfcExtendedProperties assign the property collection to a particular characterized entity.\n */\nexport const IfcExtendedProperties = 1239;\n\n/**\n * An IfcExternalInformation is the identification of an information source that is not explicitly represented in the current model or in the project database (as an implementation of the current model). The IfcExternalInformation identifies the external source (classification, document, or library), but not the particular items such as a dictionary entry, a classification notation, or a document reference within the external source\n */\nexport const IfcExternalInformation = 1240;\n\n/**\n *\n */\nexport const IfcExternallyDefinedHatchStyle = 1241;\n\n/**\n * IfcExternallyDefinedSurfaceStyle is a definition of a surface style through referencing an external source, such as a material library for rendering information.\n */\nexport const IfcExternallyDefinedSurfaceStyle = 1242;\n\n/**\n *\n */\nexport const IfcExternallyDefinedTextFont = 1243;\n\n/**\n * An IfcExternalReference is the identification of information that is not explicitly represented in the current model or in the project database (as an implementation of the current model). Such information may be contained in classifications, documents or libraries. The IfcExternalReference identifies a particular item, such as a dictionary entry, a classification notation, or a document reference within the external source.\n */\nexport const IfcExternalReference = 1244;\n\n/**\n * IfcExternalReferenceRelationship is a relationship entity that enables objects from the IfcResourceObjectSelect to have the ability to be tagged by external references.\n */\nexport const IfcExternalReferenceRelationship = 1245;\n\n/**\n * The external spatial element defines external regions at the building site. Those regions can be defined:\n */\nexport const IfcExternalSpatialElement = 1246;\n\n/**\n * The external spatial structure element is an abstract entity provided for different kind of external spaces, regions, and volumes.\n */\nexport const IfcExternalSpatialStructureElement = 1247;\n\n/**\n * The IfcExtrudedAreaSolid is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries (holes defined), then those holes shall be swept into holes of the solid.\n */\nexport const IfcExtrudedAreaSolid = 1248;\n\n/**\n * IfcExtrudedAreaSolidTapered is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces: A start face, an end face (each defined by start and end planes and sections), and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section.\n */\nexport const IfcExtrudedAreaSolidTapered = 1249;\n\n/**\n * An IfcFace is topological entity used to define surface, bounded by loops, of a shell.\n */\nexport const IfcFace = 1250;\n\n/**\n * The IfcFaceBasedSurfaceModel represents the a shape by connected face sets. The connected faces have a dimensionality 2 and are placed in a coordinate space of dimensionality 3.\n */\nexport const IfcFaceBasedSurfaceModel = 1251;\n\n/**\n *\n */\nexport const IfcFaceBound = 1252;\n\n/**\n *\n */\nexport const IfcFaceOuterBound = 1253;\n\n/**\n * The IfcFaceSurface defines the underlying geometry of the associated surface to the face.\n */\nexport const IfcFaceSurface = 1254;\n\n/**\n * The IfcFacetedBrep is a manifold solid brep with the restriction that all faces are planar and bounded polygons.\n */\nexport const IfcFacetedBrep = 1255;\n\n/**\n * The IfcFacetedBrepWithVoids is a specialization of a faceted B-rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void.\n */\nexport const IfcFacetedBrepWithVoids = 1256;\n\n/**\n * Defines forces at which a support or connection fails.\n */\nexport const IfcFailureConnectionCondition = 1257;\n\n/**\n * A fan is a device which imparts mechanical work on a gas. A typical usage of a fan is to induce airflow in a building services air distribution system.\n */\nexport const IfcFan = 1258;\n\n/**\n * The flow moving device type IfcFanType defines commonly shared information for occurrences of fans. The set of shared information may include:\n */\nexport const IfcFanType = 1259;\n\n/**\n * Representations of fixing parts which are used as fasteners to connect or join elements with other elements. Excluded are mechanical fasteners which are modeled by a separate entity (IfcMechanicalFastener).\n */\nexport const IfcFastener = 1260;\n\n/**\n * The element component type IfcFastenerType defines commonly shared information for occurrences of fasteners. The set of shared information may include:\n */\nexport const IfcFastenerType = 1261;\n\n/**\n * A feature element is a generalization of all existence dependent elements which modify the shape and appearance of the associated master element. The IfcFeatureElement offers the ability to handle shape modifiers as semantic objects within the IFC object model.\n */\nexport const IfcFeatureElement = 1262;\n\n/**\n * A feature element addition is a specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element. The IfcFeatureElementAddition offers the ability to handle shape modifiers as semantic objects within the IFC object model that add to the shape of the master element.\n */\nexport const IfcFeatureElementAddition = 1263;\n\n/**\n * The IfcFeatureElementSubtraction is specialization of the general feature element, that represents an existence dependent elements which modifies the shape and appearance of the associated master element. The IfcFeatureElementSubtraction offers the ability to handle shape modifiers as semantic objects within the IFC object model that subtract from the shape of the master element.\n */\nexport const IfcFeatureElementSubtraction = 1264;\n\n/**\n * An IfcFillAreaStyle provides the style table for presentation information assigned to annotation fill areas or surfaces for hatching and tiling. The _IfcFillAreaStyle_defines hatches as model hatches, that is, the distance between hatch lines, or the curve patterns of hatch lines are given in model space dimensions (that have to be scaled using the target plot scale). The IfcFillAreaStyle allows for the following combinations of defining the style of hatching and tiling:\n */\nexport const IfcFillAreaStyle = 1265;\n\n/**\n * The IfcFillAreaStyleHatching is used to define simple, vector-based hatching patterns, based on styled straight lines. The curve font, color and thickness is given by the HatchLineAppearance, the angle by the HatchLineAngle and the distance to the next hatch line by StartOfNextHatchLine, being either an offset distance or a vector.\n */\nexport const IfcFillAreaStyleHatching = 1266;\n\n/**\n * The IfcFillAreaStyleTiles defines the filling of an IfcAnnotationFillArea by recurring patterns of styled two dimensional geometry, called a tile. The recurrence pattern is determined by two vectors, that multiply the tile in regular form.\n */\nexport const IfcFillAreaStyleTiles = 1267;\n\n/**\n * A filter is an apparatus used to remove particulate or gaseous matter from fluids and gases.\n */\nexport const IfcFilter = 1268;\n\n/**\n * The flow treatment device type IfcFilterType defines commonly shared information for occurrences of filters. The set of shared information may include:\n */\nexport const IfcFilterType = 1269;\n\n/**\n * A fire suppression terminal has the purpose of delivering a fluid (gas or liquid) that will suppress a fire.\n */\nexport const IfcFireSuppressionTerminal = 1270;\n\n/**\n * The flow terminal type IfcFireSuppressionTerminalType defines commonly shared information for occurrences of fire suppression terminals. The set of shared information may include:\n */\nexport const IfcFireSuppressionTerminalType = 1271;\n\n/**\n * An IfcFixedReferenceSweptAreaSolid is a type of swept area solid which is the result of sweeping an area along a Directrix. The swept area is provided by a subtype of IfcProfileDef. The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile''s x-axis agrees to the FixedReference direction. The orientation of the curve during the sweeping operation is controlled by the FixedReference direction.\n */\nexport const IfcFixedReferenceSweptAreaSolid = 1272;\n\n/**\n * The distribution flow element IfcFlowController defines the occurrence of elements of a distribution system that are used to regulate flow through a distribution system. Examples include dampers, valves, switches, and relays. Its type is defined by IfcFlowControllerType or subtypes.\n */\nexport const IfcFlowController = 1273;\n\n/**\n * The element type IfcFlowControllerType defines a list of commonly shared property set definitions of a flow controller and an optional set of product representations. It is used to define a flow controller specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowControllerType = 1274;\n\n/**\n * The distribution flow element IfcFlowFitting defines the occurrence of a junction or transition in a flow distribution system, such as an elbow or tee. Its type is defined by IfcFlowFittingType or its subtypes.\n */\nexport const IfcFlowFitting = 1275;\n\n/**\n * The element type IfcFlowFittingType defines a list of commonly shared property set definitions of a flow fitting and an optional set of product representations. It is used to define a flow fitting specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowFittingType = 1276;\n\n/**\n * A flow instrument reads and displays the value of a particular property of a system at a point, or displays the difference in the value of a property between two points.\n */\nexport const IfcFlowInstrument = 1277;\n\n/**\n * The distribution control element type IfcFlowInstrumentType defines commonly shared information for occurrences of flow instruments. The set of shared information may include:\n */\nexport const IfcFlowInstrumentType = 1278;\n\n/**\n * A flow meter is a device that is used to measure the flow rate in a system.\n */\nexport const IfcFlowMeter = 1279;\n\n/**\n * The flow controller type IfcFlowMeterType defines commonly shared information for occurrences of flow meters. The set of shared information may include:\n */\nexport const IfcFlowMeterType = 1280;\n\n/**\n * The distribution flow element IfcFlowMovingDevice defines the occurrence of an apparatus used to distribute, circulate or perform conveyance of fluids, including liquids and gases (such as a pump or fan), and typically participates in a flow distribution system. Its type is defined by IfcFlowMovingDeviceType or its subtypes.\n */\nexport const IfcFlowMovingDevice = 1281;\n\n/**\n * The element type IfcFlowMovingDeviceType defines a list of commonly shared property set definitions of a flow moving device and an optional set of product representations. It is used to define a flow moving device specification (i.e. the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowMovingDeviceType = 1282;\n\n/**\n * The distribution flow element IfcFlowSegment defines the occurrence of a segment of a flow distribution system.\n */\nexport const IfcFlowSegment = 1283;\n\n/**\n * The element type IfcFlowSegmentType defines a list of commonly shared property set definitions of a flow segment and an optional set of product representations. It is used to define a flow segment specification (the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowSegmentType = 1284;\n\n/**\n * The distribution flow element IfcFlowStorageDevice defines the occurrence of a device that participates in a distribution system and is used for temporary storage (such as a tank). Its type is defined by IfcFlowStorageDeviceType or its subtypes.\n */\nexport const IfcFlowStorageDevice = 1285;\n\n/**\n * The element type IfcFlowStorageDeviceType defines a list of commonly shared property set definitions of a flow storage device and an optional set of product representations. It is used to define a flow storage device specification (the specific product information that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowStorageDeviceType = 1286;\n\n/**\n * The distribution flow element IfcFlowTerminal defines the occurrence of a permanently attached element that acts as a terminus or beginning of a distribution system (such as an air outlet, drain, water closet, or sink). A terminal is typically a point at which a system interfaces with an external environment. Its type is defined by IfcFlowTerminalType or its subtypes.\n */\nexport const IfcFlowTerminal = 1287;\n\n/**\n * The element type IfcFlowTerminalType defines a list of commonly shared property set definitions of a flow terminal and an optional set of product representations. It is used to define a flow terminal specification (the specific product information that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowTerminalType = 1288;\n\n/**\n * The distribution flow element IfcFlowTreatmentDevice defines the occurrence of a device typically used to remove unwanted matter from a fluid, either liquid or gas, and typically participates in a flow distribution system. Its type is defined by IfcFlowTreatmentDeviceType or its subtypes.\n */\nexport const IfcFlowTreatmentDevice = 1289;\n\n/**\n * The element type IfcFlowTreatmentDeviceType defines a list of commonly shared property set definitions of a flow treatment device and an optional set of product representations. It is used to define a flow treatment device specification (the specific product information that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFlowTreatmentDeviceType = 1290;\n\n/**\n * A footing is a part of the foundation of a structure that spreads and transmits the load to the soil. A footing is also characterized as shallow foundation, where the loads are transfered to the ground near the surface.\n */\nexport const IfcFooting = 1291;\n\n/**\n * The building element type IfcFootingType defines commonly shared information for occurrences of footings. The set of shared information may include:\n */\nexport const IfcFootingType = 1292;\n\n/**\n * A furnishing element is a generalization of all furniture related objects. Furnishing objects are characterized as being\n */\nexport const IfcFurnishingElement = 1293;\n\n/**\n * IfcFurnishingElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information, that is kdtree3 to all occurrences of that product type).\n */\nexport const IfcFurnishingElementType = 1294;\n\n/**\n * Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure.\n */\nexport const IfcFurniture = 1295;\n\n/**\n * The furnishing element type IfcFurnitureType defines commonly shared information for occurrences of furnitures. The set of shared information may include:\n */\nexport const IfcFurnitureType = 1296;\n\n/**\n * An IfcGeographicElement is a generalization of all elements within a geographical landscape. It includes occurrences of typical geographical elements, often referred to as features, such as trees or terrain. Common type information behind several occurrences of IfcGeographicElement is provided by the IfcGeographicElementType.\n */\nexport const IfcGeographicElement = 1297;\n\n/**\n * An IfcGeographicElementType is used to define an element specification of a geographic element (i.e. the specific product information, that is kdtree3 to all occurrences of that product type). Geographic element types include for different types of element that may be used to represent information within a geographical landscape external to a building. Within the world of geographic information they are referred to generally as ''features''. IfcGeographicElementType''s include:\n */\nexport const IfcGeographicElementType = 1298;\n\n/**\n * The IfcGeometricCurveSet is used for the exchange of shape representation consisting of an collection of (2D or 3D) points and curves only.\n */\nexport const IfcGeometricCurveSet = 1299;\n\n/**\n * The IfcGeometricRepresentationContext defines the context that applies to several shape representations of products within a project. It defines the type of the context in which the shape representation is defined, and the numeric precision applicable to the geometric representation items defined in this context. In addition it can be used to offset the project coordinate system from a global point of origin, using the WorldCoordinateSystem attribute. The main representation context may also provide the true north direction, see Figure 426.\n */\nexport const IfcGeometricRepresentationContext = 1300;\n\n/**\n * An IfcGeometricRepresentationItem is the kdtree3 supertype of all geometric items used within a representation. It is positioned within a geometric coordinate system, directly or indirectly through intervening items.\n */\nexport const IfcGeometricRepresentationItem = 1301;\n\n/**\n * IfcGeometricRepresentationSubContext defines the context that applies to several shape representations of a product being a sub context, sharing the WorldCoordinateSystem, CoordinateSpaceDimension, Precision and TrueNorth attributes with the parent IfcGeometricRepresentationContext.\n */\nexport const IfcGeometricRepresentationSubContext = 1302;\n\n/**\n * The IfcGeometricSet is used for the exchange of shape representation consisting of (2D or 3D) points, curves, and surfaces, which do not have a topological structure (such as connected face sets or shells), are not tessellated and are not solid models (such as swept solids, CSG or Brep).\n */\nexport const IfcGeometricSet = 1303;\n\n/**\n * IfcGrid ia a planar design grid defined in 3D space used as an aid in locating structural and design elements. The position of the grid (ObjectPlacement) is defined by a 3D coordinate system (and thereby the design grid can be used in plan, section or in any position relative to the world coordinate system). The position can be relative to the object placement of other products or grids. The XY plane of the 3D coordinate system is used to place the grid axes, which are 2D curves (for example, line, circle, arc, polyline).\n */\nexport const IfcGrid = 1304;\n\n/**\n * An individual axis, IfcGridAxis, is defined in the context of a design grid. The axis definition is based on a curve of dimensionality 2. The grid axis is positioned within the XY plane of the position coordinate system defined by the IfcGrid.\n */\nexport const IfcGridAxis = 1305;\n\n/**\n * IfcGridPlacement provides a specialization of IfcObjectPlacement in which the placement and axis direction of the object coordinate system is defined by a reference to the design grid as defined in IfcGrid.\n */\nexport const IfcGridPlacement = 1306;\n\n/**\n * IfcGroup is an generalization of any arbitrary group. A group is a logical collection of objects. It does not have its own position, nor can it hold its own shape representation. Therefore a group is an aggregation under some non-geometrical / topological grouping aspects.\n */\nexport const IfcGroup = 1307;\n\n/**\n * A half space solid divides the domain into two by a base surface. Normally, the base surface is a plane and devides the infinitive space into two and indicates the side of the half-space by agreeing or disagreeing to the normal of the plane.\n */\nexport const IfcHalfSpaceSolid = 1308;\n\n/**\n * A heat exchanger is a device used to provide heat transfer between non-mixing media such as plate and shell and tube heat exchangers.\n */\nexport const IfcHeatExchanger = 1309;\n\n/**\n * The energy conversion device type IfcHeatExchangerType defines commonly shared information for occurrences of heat exchangers. The set of shared information may include:\n */\nexport const IfcHeatExchangerType = 1310;\n\n/**\n * A humidifier is a device that adds moisture into the air.\n */\nexport const IfcHumidifier = 1311;\n\n/**\n * The energy conversion device type IfcHumidifierType defines commonly shared information for occurrences of humidifiers. The set of shared information may include:\n */\nexport const IfcHumidifierType = 1312;\n\n/**\n * An IfcImageTexture provides a 2-dimensional texture that can be applied to a surface of an geometric item and that provides lighting parameters of a surface onto which it is mapped. The texture is provided as an image file at an external location for which an URL is provided.\n */\nexport const IfcImageTexture = 1313;\n\n/**\n * The IfcIndexedColourMap provides the assignment of colour information to individual faces. It is used for colouring faces of tessellated face sets. The IfcIndexedColourMap defines an index into an indexed list of colour information. The Colours are a two-dimensional list of colours provided by three RGB values. The ColourIndex attribute corresponds to the CoordIndex of the IfcTessellatedFaceSet defining the corresponding index list of faces. The Opacity attribute provides the alpha channel for all faces of the tessellated face set.\n */\nexport const IfcIndexedColourMap = 1314;\n\n/**\n * The IfcIndexedPolyCurve is a bounded curve with only linear and circular arc segments defined by a Cartesian point list and an optional list of segments, providing indices into the Cartesian point list. In the case that the list of Segments is not provided, all points in the IfcCartesianPointList are connected by straight line segments in the order they appear in the IfcCartesianPointList.\n */\nexport const IfcIndexedPolyCurve = 1315;\n\n/**\n * The IfcIndexedPolygonalFace is a compact representation of a planar face being part of a face set. The vertices of the polygonal planar face are provided by 3 or more Cartesian points, defined by indices that point into an IfcCartesianPointList3D, either direcly, or via the PnIndex, if provided at IfcPolygonalFaceSet.\n */\nexport const IfcIndexedPolygonalFace = 1316;\n\n/**\n * The IfcIndexedPolygonalFaceWithVoids is a compact representation of a planar face with inner loops, being part of a face set.\n */\nexport const IfcIndexedPolygonalFaceWithVoids = 1317;\n\n/**\n * The IfcIndexedTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped. It is used for mapping the texture to faces of tessellated face sets.\n */\nexport const IfcIndexedTextureMap = 1318;\n\n/**\n * The IfcIndexedTriangleTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped. It is used for mapping the texture to triangles of the IfcTriangulatedFaceSet.\n */\nexport const IfcIndexedTriangleTextureMap = 1319;\n\n/**\n * An interceptor is a device designed and installed in order to separate and retain deleterious, hazardous or undesirable matter while permitting normal sewage or liquids to discharge into a collection system by gravity.\n */\nexport const IfcInterceptor = 1320;\n\n/**\n * The flow treatment device type IfcInterceptorType defines commonly shared information for occurrences of interceptors. The set of shared information may include:\n */\nexport const IfcInterceptorType = 1321;\n\n/**\n * An IfcIntersectionCurve is a 3-dimensional curve that has two additional representations provided by two pcurves defined within two distinct and intersecting surfaces.\n */\nexport const IfcIntersectionCurve = 1322;\n\n/**\n * An inventory is a list of items within an enterprise.\n */\nexport const IfcInventory = 1323;\n\n/**\n * In an irregular time series, unpredictable bursts of data arrive at unspecified points in time, or most time stamps cannot be characterized by a repeating pattern.\n */\nexport const IfcIrregularTimeSeries = 1324;\n\n/**\n * The IfcIrregularTimeSeriesValue describes a value (or set of values) at a particular time point.\n */\nexport const IfcIrregularTimeSeriesValue = 1325;\n\n/**\n * IfcIShapeProfileDef defines a section profile that provides the defining parameters of an 'I' or 'H' section. The I-shape profile has values for its overall depth, width and its web and flange thicknesses. Additionally a fillet radius, flange edge radius, and flange slope may be given. This profile definition represents an I-section which is symmetrical about its major and minor axes; top and bottom flanges are equal and centred on the web.\n */\nexport const IfcIShapeProfileDef = 1326;\n\n/**\n * A junction box is an enclosure within which cables are connected.\n */\nexport const IfcJunctionBox = 1327;\n\n/**\n * The flow fitting type IfcJunctionBoxType defines commonly shared information for occurrences of junction boxs. The set of shared information may include:\n */\nexport const IfcJunctionBoxType = 1328;\n\n/**\n * An IfcLaborResource is used in construction with particular skills or crafts required to perform certain types of construction or management related work.\n */\nexport const IfcLaborResource = 1329;\n\n/**\n * The resource type IfcLaborResourceType defines commonly shared information for occurrences of labour resources. The set of shared information may include:\n */\nexport const IfcLaborResourceType = 1330;\n\n/**\n * IfcLagTime describes the time parameters that may exist within a sequence relationship between two processes.\n */\nexport const IfcLagTime = 1331;\n\n/**\n * A lamp is an artificial light source such as a light bulb or tube.\n */\nexport const IfcLamp = 1332;\n\n/**\n * The flow terminal type IfcLampType defines commonly shared information for occurrences of lamps. The set of shared information may include:\n */\nexport const IfcLampType = 1333;\n\n/**\n * An IfcLibraryInformation describes a library where a library is a structured store of information, normally organized in a manner which allows information lookup through an index or reference value. IfcLibraryInformation provides the library Name and optional Description, Version, VersionDate and Publisher attributes. A Location may be added for electronic access to the library.\n */\nexport const IfcLibraryInformation = 1334;\n\n/**\n * An IfcLibraryReference is a reference into a library of information by Location (provided as a URI). It also provides an optional inherited Identification key to allow more specific references to library sections or tables. The inherited Name attribute allows for a human interpretable identification of the library item. Also, general information on the library from which the reference is taken, is given by the ReferencedLibrary relation which identifies the relevant occurrence of IfcLibraryInformation.\n */\nexport const IfcLibraryReference = 1335;\n\n/**\n * IfcLightDistributionData defines the luminous intensity of a light source given at a particular main plane angle. It is based on some standardized light distribution curves; the MainPlaneAngle is either the\n */\nexport const IfcLightDistributionData = 1336;\n\n/**\n * A light fixture is a container that is designed for the purpose of housing one or more lamps and optionally devices that control, restrict or vary their emission.\n */\nexport const IfcLightFixture = 1337;\n\n/**\n * The flow terminal type IfcLightFixtureType defines commonly shared information for occurrences of light fixtures. The set of shared information may include:\n */\nexport const IfcLightFixtureType = 1338;\n\n/**\n * IfcLightIntensityDistribution defines the the luminous intensity of a light source that changes according to the direction of the ray. It is based on some standardized light distribution curves, which are defined by the LightDistributionCurve attribute.\n */\nexport const IfcLightIntensityDistribution = 1339;\n\n/**\n *\n */\nexport const IfcLightSource = 1340;\n\n/**\n *\n */\nexport const IfcLightSourceAmbient = 1341;\n\n/**\n *\n */\nexport const IfcLightSourceDirectional = 1342;\n\n/**\n * IfcLightSourceGoniometric defines a light source for which exact lighting data is available. It specifies the type of a light emitter, defines the position and orientation of a light distribution curve and the data concerning lamp and photometric information.\n */\nexport const IfcLightSourceGoniometric = 1343;\n\n/**\n *\n */\nexport const IfcLightSourcePositional = 1344;\n\n/**\n *\n */\nexport const IfcLightSourceSpot = 1345;\n\n/**\n * The IfcLine is an unbounded line parameterized by an IfcCartesianPoint and an IfcVector. The magnitude of the IfcVector affects the parameterization of the line, but it does not bound the line.\n */\nexport const IfcLine = 1346;\n\n/**\n * An IfcLocalPlacement defines the relative placement of a product in relation to the placement of another product or the absolute placement of a product within the geometric representation context of the project.\n */\nexport const IfcLocalPlacement = 1347;\n\n/**\n *\n */\nexport const IfcLoop = 1348;\n\n/**\n * IfcLShapeProfileDef defines a section profile that provides the defining parameters of an L-shaped section (equilateral L profiles are also covered by this entity) to be used by the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The shorter leg has the same direction as the positive Position.P[1]-axis, the longer or equal leg the same as the positive Position.P[2]-axis. The centre of the position coordinate system is in the profiles centre of the bounding box.\n */\nexport const IfcLShapeProfileDef = 1349;\n\n/**\n * The IfcManifoldSolidBrep is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non-solid.\n */\nexport const IfcManifoldSolidBrep = 1350;\n\n/**\n * The map conversion deals with transforming the local engineering coordinate system, often called world coordinate system, into the coordinate reference system of the underlying map.\n */\nexport const IfcMapConversion = 1351;\n\n/**\n * The IfcMappedItem is the inserted instance of a source definition (to be compared with a block / shared cell / macro definition). The instance is inserted by applying a Cartesian transformation operator as the MappingTarget.\n */\nexport const IfcMappedItem = 1352;\n\n/**\n * IfcMaterial is a homogeneous or inhomogeneous substance that can be used to form elements (physical products or their components).\n */\nexport const IfcMaterial = 1353;\n\n/**\n * IfcMaterialClassificationRelationship is a relationship assigning classifications to materials.\n */\nexport const IfcMaterialClassificationRelationship = 1354;\n\n/**\n * IfcMaterialConstituent is a single and identifiable part of an element which is constructed of a number of part (one or more) each having an individual material. The association of the material constituent to the part is provided by a keyword as value of the Name attribute. In order to identify and distinguish the part of the shape representation to which the material constituent applies the IfcProductDefinitionShape of the element has to include instances of IfcShapeAspect, using the same keyword for their Name attribute.\n */\nexport const IfcMaterialConstituent = 1355;\n\n/**\n * IfcMaterialConstituentSet is a collection of individual material constituents, each assigning a material to a part of an element. The parts are only identified by a keyword (as opposed to an IfcMaterialLayerSet or IfcMaterialProfileSet where each part has an individual shape parameter (layer thickness or layer profile).\n */\nexport const IfcMaterialConstituentSet = 1356;\n\n/**\n * IfcMaterialDefinition is a general supertype for all material related information items in IFC that have kdtree3 material related properties that may include association of material with some shape parameters or assignments to identified parts of a component.\n */\nexport const IfcMaterialDefinition = 1357;\n\n/**\n * IfcMaterialDefinitionRepresentation defines presentation information relating to IfcMaterial. It allows for multiple presentations of the same material for different geometric representation contexts.\n */\nexport const IfcMaterialDefinitionRepresentation = 1358;\n\n/**\n * IfcMaterialLayer is a single and identifiable part of an element which is constructed of a number of layers (one or more). Each IfcMaterialLayer has a constant thickness and is located relative to the referencing IfcMaterialLayerSet along the material layer set base (MlsBase).\n */\nexport const IfcMaterialLayer = 1359;\n\n/**\n * The IfcMaterialLayerSet is a designation by which materials of an element constructed of a number of material layers is known and through which the relative positioning of individual layers can be expressed.\n */\nexport const IfcMaterialLayerSet = 1360;\n\n/**\n * The IfcMaterialLayerSetUsage determines the usage of IfcMaterialLayerSet in terms of its location and orientation relative to the associated element geometry. The location of material layer set shall be compatible with the building element geometry (that is, material layers shall fit inside the element geometry). The rules to ensure the compatibility depend on the type of the building element.\n */\nexport const IfcMaterialLayerSetUsage = 1361;\n\n/**\n * IfcMaterialLayerWithOffsets is a specialization of IfcMaterialLayer enabling definition of offset values along edges (within the material layer set usage in parent layer set).\n */\nexport const IfcMaterialLayerWithOffsets = 1362;\n\n/**\n * IfcMaterialList is a list of the different materials that are used in an element.\n */\nexport const IfcMaterialList = 1363;\n\n/**\n * IfcMaterialProfile is a single and identifiable cross section of an element which is constructed of a number of profiles (one or more).\n */\nexport const IfcMaterialProfile = 1364;\n\n/**\n * The IfcMaterialProfileSet is a designation by which individual material(s) of a prismatic element (for example, beam or column) constructed of a single or multiple material profiles is known.\n */\nexport const IfcMaterialProfileSet = 1365;\n\n/**\n * IfcMaterialProfileSetUsage determines the usage of IfcMaterialProfileSet in terms of its location relative to the associated element geometry. The location of a material profile set shall be compatible with the building element geometry (that is, material profiles shall fit inside the element geometry). The rules to ensure the compatibility depend on the type of the building element. For building elements with shape representations which are based on extruded solids, this is accomplished by referring to the identical profile definition in the shape model as in the material profile set.\n */\nexport const IfcMaterialProfileSetUsage = 1366;\n\n/**\n * IfcMaterialProfileSetUsageTapering specifies dual material profile sets in association with tapered prismatic (beam- or column-like) elements.\n */\nexport const IfcMaterialProfileSetUsageTapering = 1367;\n\n/**\n * IfcMaterialProfileWithOffsets is a specialization of IfcMaterialProfile with additional longitudinal offsets .\n */\nexport const IfcMaterialProfileWithOffsets = 1368;\n\n/**\n * The IfcMaterialProperties assigns a set of material properties to associated material definitions. The set may be identified by a Name and a Description. The IfcProperty (instantiable subtypes) is used to express the individual material properties by name, description, value and unit.\n */\nexport const IfcMaterialProperties = 1369;\n\n/**\n * IfcMaterialRelationship defines a relationship between part and whole in material definitions (as in composite materials). The parts, expressed by the set of RelatedMaterials, are material constituents of which a single material aggregate is composed.\n */\nexport const IfcMaterialRelationship = 1370;\n\n/**\n * IfcMaterialUsageDefinition is a general supertype for all material related information items in IFC that have occurrence specific assignment parameters to assign a set of materials with shape parameters to a reference geometry item of that component.\n */\nexport const IfcMaterialUsageDefinition = 1371;\n\n/**\n *\n */\nexport const IfcMeasureWithUnit = 1372;\n\n/**\n * A mechanical fasteners connecting building elements or parts mechanically. A single instance of this class may represent one or many of actual mechanical fasteners, for example an array of bolts or a row of nails.\n */\nexport const IfcMechanicalFastener = 1373;\n\n/**\n * The element component type IfcMechanicalFastenerType defines commonly shared information for occurrences of mechanical fasteners. The set of shared information may include:\n */\nexport const IfcMechanicalFastenerType = 1374;\n\n/**\n * A medical device is attached to a medical piping system and operates upon medical gases to perform a specific function. Medical gases include medical air, medical vacuum, oxygen, carbon dioxide, nitrogen, and nitrous oxide.\n */\nexport const IfcMedicalDevice = 1375;\n\n/**\n * The flow terminal type IfcMedicalDeviceType defines commonly shared information for occurrences of medical devices. The set of shared information may include:\n */\nexport const IfcMedicalDeviceType = 1376;\n\n/**\n * An IfcMember is a structural member designed to carry loads between or beyond points of support. It is not required to be load bearing. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to IfcBeam and IfcColumn). An IfcMember represents a linear structural element from an architectural or structural modeling point of view and shall be used if it cannot be expressed more specifically as either an IfcBeam or an IfcColumn.\n */\nexport const IfcMember = 1377;\n\n/**\n * The standard member, IfcMemberStandardCase, defines a member with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcMemberStandardCase handles all cases of members, that:\n */\nexport const IfcMemberStandardCase = 1378;\n\n/**\n * The element type IfcMemberType defines commonly shared information for occurrences of members. Members are predominately linear building elements, often forming part of a structural system. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to beam and column). The set of shared information may include:\n */\nexport const IfcMemberType = 1379;\n\n/**\n * An IfcMetric is used to capture quantitative resultant metrics that can be applied to objectives.\n */\nexport const IfcMetric = 1380;\n\n/**\n * The IfcMirroredProfileDef defines the profile by mirroring the parent profile about the y axis of the parent profile coordinate system. That is, left and right of the parent profile are swapped.\n */\nexport const IfcMirroredProfileDef = 1381;\n\n/**\n * IfcMonetaryUnit is a unit to define currency for money.\n */\nexport const IfcMonetaryUnit = 1382;\n\n/**\n * A motor connection provides the means for connecting a motor as the driving device to the driven device.\n */\nexport const IfcMotorConnection = 1383;\n\n/**\n * The energy conversion device type IfcMotorConnectionType defines commonly shared information for occurrences of motor connections. The set of shared information may include:\n */\nexport const IfcMotorConnectionType = 1384;\n\n/**\n *\n */\nexport const IfcNamedUnit = 1385;\n\n/**\n * An IfcObject is the generalization of any semantically treated thing or process. Objects are things as they appear - i.e. occurrences.\n */\nexport const IfcObject = 1386;\n\n/**\n * An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object defintions can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined.\n */\nexport const IfcObjectDefinition = 1387;\n\n/**\n * An IfcObjective captures qualitative information for an objective-based constraint.\n */\nexport const IfcObjective = 1388;\n\n/**\n * IfcObjectPlacement is an abstract supertype for the special types defining the object coordinate system. The IfcObjectPlacement has to be provided for each product that has a shape representation.\n */\nexport const IfcObjectPlacement = 1389;\n\n/**\n * An occupant is a type of actor that defines the form of occupancy of a property.\n */\nexport const IfcOccupant = 1390;\n\n/**\n * An IfcOffsetCurve2D is a curve defined by an offset in 2D space from its BasisCurve.\n */\nexport const IfcOffsetCurve2D = 1391;\n\n/**\n * An IfcOffsetCurve3D is a curve defined by an offset in 3D space from its BasisCurve.\n */\nexport const IfcOffsetCurve3D = 1392;\n\n/**\n * The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings can be inserted into walls, slabs, beams, columns, or other elements.\n */\nexport const IfcOpeningElement = 1393;\n\n/**\n * The standard opening, IfcOpeningStandardCase, defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation. The IfcOpeningStandardCase handles all cases of openings, that:\n */\nexport const IfcOpeningStandardCase = 1394;\n\n/**\n *\n */\nexport const IfcOpenShell = 1395;\n\n/**\n * A named and structured grouping with a corporate identity.\n */\nexport const IfcOrganization = 1396;\n\n/**\n * The IfcOrganizationRelationship establishes an association between one relating organization and one or more related organizations.\n */\nexport const IfcOrganizationRelationship = 1397;\n\n/**\n * The IfcOrientedEdge represents an IfcEdge with an Orientation flag applied. It allows to reuse the same IfcEdge when traversed exactly twice, once forwards and once backwards.\n */\nexport const IfcOrientedEdge = 1398;\n\n/**\n * The IfcOuterBoundaryCurve defines the outer boundary of a bounded surface.\n */\nexport const IfcOuterBoundaryCurve = 1399;\n\n/**\n * An outlet is a device installed at a point to receive one or more inserted plugs for electrical power or communications.\n */\nexport const IfcOutlet = 1400;\n\n/**\n * The flow terminal type IfcOutletType defines commonly shared information for occurrences of outlets. The set of shared information may include:\n */\nexport const IfcOutletType = 1401;\n\n/**\n * IfcOwnerHistory defines all history and identification related information. In order to provide fast access it is directly attached to all independent objects, relationships and properties.\n */\nexport const IfcOwnerHistory = 1402;\n\n/**\n * The parameterized profile definition defines a 2D position coordinate system to which the parameters of the different profiles relate to. All profiles are defined centric to the origin of the position coordinate system, or more specific, the origin [0.,0.] shall be in the center of the bounding box of the profile.\n */\nexport const IfcParameterizedProfileDef = 1403;\n\n/**\n *\n */\nexport const IfcPath = 1404;\n\n/**\n * The IfcPcurve is a curve defined within the parameter space of its reference surface.\n */\nexport const IfcPcurve = 1405;\n\n/**\n * IfcPerformanceHistory is used to document the actual performance of an occurrence instance over time. It includes machine-measured data from building automation systems and human-specified data such as task and resource usage. The data may represent actual conditions, predictions, or simulations.\n */\nexport const IfcPerformanceHistory = 1406;\n\n/**\n * This entity is a description of a panel within a door or window (as fillers for opening) which allows for air flow. It is given by its properties (IfcPermeableCoveringProperties). A permeable covering is a casement, such as a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling is normally a grill, a louver or a screen. The way of operation is defined in the operation type.\n */\nexport const IfcPermeableCoveringProperties = 1407;\n\n/**\n * A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply.\n */\nexport const IfcPermit = 1408;\n\n/**\n * This entity represents an individual human being.\n */\nexport const IfcPerson = 1409;\n\n/**\n * This entity represents a person acting on behalf of an organization.\n */\nexport const IfcPersonAndOrganization = 1410;\n\n/**\n * The complex physical quantity, IfcPhysicalComplexQuantity, is an entity that holds a set of single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity), that all apply to a given component or aspect of the element.\n */\nexport const IfcPhysicalComplexQuantity = 1411;\n\n/**\n * The physical quantity, IfcPhysicalQuantity, is an abstract entity that holds a complex or simple quantity measure together with a semantic definition of the usage for the single or several measure value.\n */\nexport const IfcPhysicalQuantity = 1412;\n\n/**\n * The physical quantity, IfcPhysicalSimpleQuantity, is an entity that holds a single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity) together with a semantic definition of the usage for the measure value.\n */\nexport const IfcPhysicalSimpleQuantity = 1413;\n\n/**\n * A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load. A pile is also characterized as deep foundation, where the loads are transfered to deeper subsurface layers.\n */\nexport const IfcPile = 1414;\n\n/**\n * The building element type IfcPileType defines commonly shared information for occurrences of piles. The set of shared information may include:\n */\nexport const IfcPileType = 1415;\n\n/**\n * A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate.\n */\nexport const IfcPipeFitting = 1416;\n\n/**\n * The flow fitting type IfcPipeFittingType defines commonly shared information for occurrences of pipe fittings. The set of shared information may include:\n */\nexport const IfcPipeFittingType = 1417;\n\n/**\n * A pipe segment is used to typically join two sections of a piping network.\n */\nexport const IfcPipeSegment = 1418;\n\n/**\n * The flow segment type IfcPipeSegmentType defines commonly shared information for occurrences of pipe segments. The set of shared information may include:\n */\nexport const IfcPipeSegmentType = 1419;\n\n/**\n * An IfcPixelTexture provides a 2D image-based texture map as an explicit array of pixel values (list of Pixel binary attributes). In contrary to the IfcImageTexture the IfcPixelTexture holds a 2 dimensional list of pixel color (and opacity) directly, instead of referencing to an URL.\n */\nexport const IfcPixelTexture = 1420;\n\n/**\n * An IfcPlacement is an abstract supertype of placement subtypes that define the location of an item, or an entire shape representation, and provide its orientation. All placement subtypes define right-handed Cartesian coordinate systems and do not allow mirroring.\n */\nexport const IfcPlacement = 1421;\n\n/**\n * A planar box specifies an arbitrary rectangular box and its location in a two dimensional Cartesian coordinate system. If the planar box is used within a three-dimensional coordinate system, it defines the rectangular box within the XY plane.\n */\nexport const IfcPlanarBox = 1422;\n\n/**\n * The planar extent defines the extent along the two axes of the two-dimensional coordinate system, independently of its position. If the planar extent is used within a three-dimensional coordinate system, it defines the extent along the x and y axes.\n */\nexport const IfcPlanarExtent = 1423;\n\n/**\n * The planar surface is an unbounded surface in the direction of x and y. Bounded planar surfaces are defined by using a subtype of IfcBoundedSurface with BasisSurface being a plane.\n */\nexport const IfcPlane = 1424;\n\n/**\n * An IfcPlate is a planar and often flat part with constant thickness. A plate may carry loads between or beyond points of support, or provide stiffening. The location of the plate (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to IfcWall and IfcSlab (as floor slab)).\n */\nexport const IfcPlate = 1425;\n\n/**\n * The standard plate, IfcPlateStandardCase, defines a plate with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcPlateStandardCase handles all cases of plates, that:\n */\nexport const IfcPlateStandardCase = 1426;\n\n/**\n * The element type IfcPlateType defines commonly shared information for occurrences of plates. The set of shared information may include:\n */\nexport const IfcPlateType = 1427;\n\n/**\n * The IfcPoint is the abstract generalisation of all point representations within a Cartesian coordinate system.\n */\nexport const IfcPoint = 1428;\n\n/**\n * The IfcPointOnCurve is a point defined by a parameter value of its defining curve.\n */\nexport const IfcPointOnCurve = 1429;\n\n/**\n * The IfcPointOnSurface is a point defined by two parameter value of its defining surface.\n */\nexport const IfcPointOnSurface = 1430;\n\n/**\n * The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system (as defined at the supertype IfcHalfSpaceSolid), and its polygonal (with or without arc segments) boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute.\n */\nexport const IfcPolygonalBoundedHalfSpace = 1431;\n\n/**\n * The IfcPolygonalFaceSet is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of IfcIndexedPolygonalFace, or in case of faces with inner loops by IfcIndexedPolygonalFaceWithVoids.\n */\nexport const IfcPolygonalFaceSet = 1432;\n\n/**\n * The IfcPolyline is a bounded curve with only linear segments defined by a list of Cartesian points. If the first and the last Cartesian point in the list are identical, then the polyline is a closed curve, otherwise it is an open curve.\n */\nexport const IfcPolyline = 1433;\n\n/**\n *\n */\nexport const IfcPolyLoop = 1434;\n\n/**\n * A port provides the means for an element to connect to other elements.\n */\nexport const IfcPort = 1435;\n\n/**\n * This entity represents an address for delivery of paper based mail and other postal deliveries.\n */\nexport const IfcPostalAddress = 1436;\n\n/**\n * The pre defined colour determines those qualified names which can be used to identify a colour that is in scope of the current data exchange specification (in contrary to colour specification which defines the colour directly by its colour components).\n */\nexport const IfcPreDefinedColour = 1437;\n\n/**\n *\n */\nexport const IfcPreDefinedCurveFont = 1438;\n\n/**\n * A pre defined item is a qualified name given to a style or font which is determined within the data exchange specification by convention on using the Name attribute value (in contrary to externally defined items, which are agreed by an external source).\n */\nexport const IfcPreDefinedItem = 1439;\n\n/**\n * The IfcPreDefinedProperties is an abstract supertype of all predefined property collections that have explicit attributes, each representing a property. Instantiable subtypes are assigned to specific characterised entities.\n */\nexport const IfcPreDefinedProperties = 1440;\n\n/**\n * IfcPreDefinedPropertySet is a generalization of all statically defined property sets that are assigned to an object or type object. The statically or pre-defined property sets are entities with a fixed list of attributes having particular defined data types.\n */\nexport const IfcPreDefinedPropertySet = 1441;\n\n/**\n * The pre defined text font determines those qualified names which can be used for fonts that are in scope of the current data exchange specification (in contrary to externally defined text fonts). There are two choices:\n */\nexport const IfcPreDefinedTextFont = 1442;\n\n/**\n * The IfcPresentationItem is the abstract supertype of all entities used for presentation appearance definitions.\n */\nexport const IfcPresentationItem = 1443;\n\n/**\n * The presentation layer assignment provides the layer name (and optionally a description and an identifier) for a collection of geometric representation items. The IfcPresentationLayerAssignment corresponds to the term \"CAD Layer\" and is used mainly for grouping and visibility control.\n */\nexport const IfcPresentationLayerAssignment = 1444;\n\n/**\n * An IfcPresentationLayerAssignmentWithStyle extends the presentation layer assignment with capabilities to define visibility control, access control and kdtree3 style information.\n */\nexport const IfcPresentationLayerWithStyle = 1445;\n\n/**\n * The IfcPresentationStyle is an abstract generalization of style table for presentation information assigned to geometric representation items. It includes styles for curves, areas, surfaces, and text. Style information may include colour, hatching, rendering, and text fonts.\n */\nexport const IfcPresentationStyle = 1446;\n\n/**\n * Assignment of style information to a styled item.\n */\nexport const IfcPresentationStyleAssignment = 1447;\n\n/**\n * An IfcProcedure is a logical set of actions to be taken in response to an event or to cause an event to occur.\n */\nexport const IfcProcedure = 1448;\n\n/**\n * An IfcProcedureType defines a particular type of procedure that may be specified.\n */\nexport const IfcProcedureType = 1449;\n\n/**\n * IfcProcess is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships. An IfcProcess can be an activity (or task), or an event. It takes usually place in building construction with the intent of designing, costing, acquiring, constructing, or maintaining products or other and similar tasks or procedures. Figure 131 illustrates process relationships.\n */\nexport const IfcProcess = 1450;\n\n/**\n * The IfcProduct is an abstract representation of any object that relates to a geometric or spatial context. An IfcProduct occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the project coordinate system. The ObjectPlacement attribute establishes the coordinate system in which all points and directions used by the geometric representation items under Representation are founded. The Representation is provided by an IfcProductDefinitionShape being either a geometric shape representation, or a topology representation (with or without underlying geometry of the topological items).\n */\nexport const IfcProduct = 1451;\n\n/**\n * The IfcProductDefinitionShape defines all shape relevant information about an IfcProduct. It allows for multiple geometric shape representations of the same product. The shape relevant information includes:\n */\nexport const IfcProductDefinitionShape = 1452;\n\n/**\n * IfcProductRepresentation defines a representation of a product, including its (geometric or topological) representation. A product can have zero, one or many geometric representations, and a single geometric representation can be shared among various products using mapped representations.\n */\nexport const IfcProductRepresentation = 1453;\n\n/**\n * IfcProfileDef is the supertype of all definitions of standard and arbitrary profiles within IFC. It is used to define a standard set of commonly used section profiles by their parameters or by their explicit curve geometry.\n */\nexport const IfcProfileDef = 1454;\n\n/**\n * This is a collection of properties applicable to section profile definitions.\n */\nexport const IfcProfileProperties = 1455;\n\n/**\n * IfcProject indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. The IfcProject's main purpose in an exchange structure is to provide the root instance and the context for all other information items included.\n */\nexport const IfcProject = 1456;\n\n/**\n * IfcProjectedCRS is a coordinate reference system of the map to which the map translation of the local engineering coordinate system of the construction or facility engineering project relates. The MapProjection and MapZone attributes uniquely identify the projection to the underlying geographic coordinate reference system, provided that they are well-known in the receiving application. The projected coordinate reference system is assumed to be a 2D or 3D right-handed Cartesian coordinate system, the optional MapUnit attribute can be used determine the length unit used by the map.\n */\nexport const IfcProjectedCRS = 1457;\n\n/**\n * The projection element is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation.\n */\nexport const IfcProjectionElement = 1458;\n\n/**\n * An IfcProjectLibrary collects all library elements that are included within a referenced project data set.\n */\nexport const IfcProjectLibrary = 1459;\n\n/**\n * A project order is a directive to purchase products and/or perform work, such as for construction or facilities management.\n */\nexport const IfcProjectOrder = 1460;\n\n/**\n * IfcProperty is an abstract generalization for all types of properties that can be associated with IFC objects through the property set mechanism.\n */\nexport const IfcProperty = 1461;\n\n/**\n * The IfcPropertyAbstraction is an abstract supertype of all property related entities defined as dependent resource entities within the specification. It may have an external reference to a dictionary or library that provides additional information about its definition. Instantiable subtypes have property name, value and other instance information.\n */\nexport const IfcPropertyAbstraction = 1462;\n\n/**\n * A property with a bounded value, IfcPropertyBoundedValue, defines a property object which has a maximum of two (numeric or descriptive) values assigned, the first value specifying the upper bound and the second value specifying the lower bound. It defines a property - value bound (min-max) combination for which the property Name, an optional Description, the optional UpperBoundValue with measure type, the optional LowerBoundValue with measure type, and the optional Unit is given. A set point value can be provided in addition to the upper and lower bound values for operational value setting.\n */\nexport const IfcPropertyBoundedValue = 1463;\n\n/**\n * IfcPropertyDefinition defines the generalization of all characteristics (i.e. a grouping of individual properties), that may be assigned to objects. Currently, subtypes of IfcPropertyDefinition include property set occurrences, property set templates, and property templates.\n */\nexport const IfcPropertyDefinition = 1464;\n\n/**\n * An IfcPropertyDependencyRelationship describes an identified dependency between the value of one property and that of another.\n */\nexport const IfcPropertyDependencyRelationship = 1465;\n\n/**\n * A property with an enumerated value, IfcPropertyEnumeratedValue, defines a property object which has a value assigned that is chosen from an enumeration. It defines a property - value combination for which the property Name, an optional Description, the optional EnumerationValues with measure type and optionally an Unit is given.\n */\nexport const IfcPropertyEnumeratedValue = 1466;\n\n/**\n * IfcPropertyEnumeration is a collection of simple or measure values that define a prescribed set of alternatives from which 'enumeration values' are selected. This enables inclusion of enumeration values in property sets. IfcPropertyEnumeration provides a name for the enumeration as well as a list of unique (numeric or descriptive) values (that may have a measure type assigned). The entity defines the list of potential enumerators to be exchanged together (or separately) with properties of type IfcPropertyEnumeratedValue that selects their actual property values from this enumeration.\n */\nexport const IfcPropertyEnumeration = 1467;\n\n/**\n * An IfcPropertyListValue defines a property that has several (numeric or descriptive) values assigned, these values are given by an ordered list. It defines a property - list value combination for which the property Name, an optional Description, the optional ListValues with measure type and optionally an Unit is given. An IfcPropertyListValue is a list of values. The order in which values appear is significant. All list members shall be of the same type.\n */\nexport const IfcPropertyListValue = 1468;\n\n/**\n * The IfcPropertyReferenceValue allows a property value to be of type of an resource level entity. The applicable entities that can be used as value references are given by the IfcObjectReferenceSelect.\n */\nexport const IfcPropertyReferenceValue = 1469;\n\n/**\n * The IfcPropertySet is a container that holds properties within a property tree. These properties are interpreted according to their name attribute. Each individual property has a significant name string. Some property sets are included in the specification of this standard and have a predefined set of properties indicated by assigning a significant name. These property sets are listed under \"property sets\" within this specification. Property sets applicable to certain objects are listed in the object specification. The naming convention \"Pset_Xxx\" applies to all those property sets that are defined as part of this specification and it shall be used as the value of the Name attribute.\n */\nexport const IfcPropertySet = 1470;\n\n/**\n * IfcPropertySetDefinition is a generalization of all individual property sets that can be assigned to an object or type object. The property set definition can be either:\n */\nexport const IfcPropertySetDefinition = 1471;\n\n/**\n * IfcPropertySetTemplate defines the template for all dynamically extensible property sets represented by IfcPropertySet. The property set template is a container of property templates within a property tree. The individual property templates are interpreted according to their Name attribute and shall have no values assigned.\n */\nexport const IfcPropertySetTemplate = 1472;\n\n/**\n * The property with a single value IfcPropertySingleValue defines a property object which has a single (numeric or descriptive) value assigned. It defines a property - single value combination for which the property Name, an optional Description, and an optional NominalValue with measure type is provided. In addition, the default unit as specified within the project unit context can be overriden by assigning an Unit.\n */\nexport const IfcPropertySingleValue = 1473;\n\n/**\n * IfcPropertyTableValue is a property with a value range defined by a property object which has two lists of (numeric or descriptive) values assigned. The values specify a table with two columns. The defining values provide the first column and establish the scope for the defined values (the second column). An optional Expression attribute may give the equation used for deriving the range value, which is for information purposes only.\n */\nexport const IfcPropertyTableValue = 1474;\n\n/**\n * The IfcPropertyTemplate is an abstract supertype comprising the templates for all dynamically extensible properties, either as an IfcComplexPropertyTemplate, or an IfcSimplePropertyTemplate. These templates determine the structure of:\n */\nexport const IfcPropertyTemplate = 1475;\n\n/**\n * IfcPropertyTemplateDefinition is a generalization of all property and property set templates. Templates define the collection, types, names, applicable measure types and units of individual properties used in a project. The property template definition can be either:\n */\nexport const IfcPropertyTemplateDefinition = 1476;\n\n/**\n * A protective device breaks an electrical circuit when a stated electric current that passes through it is exceeded.\n */\nexport const IfcProtectiveDevice = 1477;\n\n/**\n * A protective device tripping unit breaks an electrical circuit at a separate breaking unit when a stated electric current that passes through the unit is exceeded.\n */\nexport const IfcProtectiveDeviceTrippingUnit = 1478;\n\n/**\n * The distribution control element type IfcProtectiveDeviceTrippingUnitType defines commonly shared information for occurrences of protective device tripping units. The set of shared information may include:\n */\nexport const IfcProtectiveDeviceTrippingUnitType = 1479;\n\n/**\n * The flow controller type IfcProtectiveDeviceType defines commonly shared information for occurrences of protective devices. The set of shared information may include:\n */\nexport const IfcProtectiveDeviceType = 1480;\n\n/**\n * IfcProxy is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space. A proxy may have a semantic meaning, defined by the Name attribute, and property definitions, attached through the property assignment relationship, which definition may be outside of the definitions given by the current release of IFC.\n */\nexport const IfcProxy = 1481;\n\n/**\n * A pump is a device which imparts mechanical work on fluids or slurries to move them through a channel or pipeline. A typical use of a pump is to circulate chilled water or heating hot water in a building services distribution system.\n */\nexport const IfcPump = 1482;\n\n/**\n * The flow moving device type IfcPumpType defines commonly shared information for occurrences of pumps. The set of shared information may include:\n */\nexport const IfcPumpType = 1483;\n\n/**\n * IfcQuantityArea is a physical quantity that defines a derived area measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityArea = 1484;\n\n/**\n * IfcQuantityCount is a physical quantity that defines a derived count measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityCount = 1485;\n\n/**\n * IfcQuantityLength is a physical quantity that defines a derived length measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityLength = 1486;\n\n/**\n * IfcQuantitySet is the the abstract supertype for all quantity sets attached to objects. The quantity set is a container class that holds the individual quantities within a quantity tree. These quantities are interpreted according to their name attribute and classified according to their measure type. Some quantity sets are included in the IFC specification and have a predefined set of quantities indicated by assigning a significant name. These quantity sets are listed as \"quantity sets\" within this specification. Quantity sets applicable to certain objects are listed in the object specification.\n */\nexport const IfcQuantitySet = 1487;\n\n/**\n * IfcQuantityTime is an element quantity that defines a time measure to provide a property of time related to an element. It is normally given by the recipe information of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityTime = 1488;\n\n/**\n * IfcQuantityVolume is a physical quantity that defines a derived volume measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityVolume = 1489;\n\n/**\n * IfcQuantityWeight is a physical element quantity that defines a derived weight measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.\n */\nexport const IfcQuantityWeight = 1490;\n\n/**\n * The railing is a frame assembly adjacent to human or vehicle circulation spaces and at some space boundaries where it is used in lieu of walls or to complement walls. Designed as an optional physical support, or to prevent injury or damage, either by falling or collision.\n */\nexport const IfcRailing = 1491;\n\n/**\n * The building element type IfcRailingType defines commonly shared information for occurrences of railings. The set of shared information may include:\n */\nexport const IfcRailingType = 1492;\n\n/**\n * A ramp is a vertical passageway which provides a human or vehicle circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps.\n */\nexport const IfcRamp = 1493;\n\n/**\n * A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, refered to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical.\n */\nexport const IfcRampFlight = 1494;\n\n/**\n * The building element type IfcRampFlightType defines commonly shared information for occurrences of ramp flights. The set of shared information may include:\n */\nexport const IfcRampFlightType = 1495;\n\n/**\n * The building element type IfcRampType defines commonly shared information for occurrences of ramps. The set of shared information may include:\n */\nexport const IfcRampType = 1496;\n\n/**\n * A rational B-spline curve with knots is a B-spline curve described in terms of control points and basic functions. It describes weights in addition to the control points defined at the supertype IfcBSplineCurve.\n */\nexport const IfcRationalBSplineCurveWithKnots = 1497;\n\n/**\n * A rational B-spline surface with knots is a piecewise parametric rational surface described in terms of control points, and associated weight values.\n */\nexport const IfcRationalBSplineSurfaceWithKnots = 1498;\n\n/**\n * IfcRectangleHollowProfileDef defines a section profile that provides the defining parameters of a rectangular (or square) hollow section to be used by the swept surface geometry or the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration. A square hollow section can be defined by equal values for h and b. The centre of the position coordinate system is in the profiles centre of the bounding box (for symmetric profiles identical with the centre of gravity). Normally, the longer sides are parallel to the y-axis, the shorter sides parallel to the x-axis.\n */\nexport const IfcRectangleHollowProfileDef = 1499;\n\n/**\n * IfcRectangleProfileDef defines a rectangle as the profile definition used by the swept surface geometry or the swept area solid. It is given by its X extent and its Y extent, and placed within the 2D position coordinate system, established by the Position attribute. It is placed centric within the position coordinate system.\n */\nexport const IfcRectangleProfileDef = 1500;\n\n/**\n * The IfcRectangularPyramid is a Construction Solid Geometry (CSG) 3D primitive. It is a solid with a rectangular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the pyramid:\n */\nexport const IfcRectangularPyramid = 1501;\n\n/**\n * The IfcRectangularTrimmedSurface is a surface created by bounding its BasisSurface along two pairs of parallel curves defined within the parametric space of the referenced surface.\n */\nexport const IfcRectangularTrimmedSurface = 1502;\n\n/**\n * IfcRecurrencePattern defines repetitive time periods on the basis of regular recurrences such as each Monday in a week, or every third Tuesday in a month. The population of the remaining attributes such as DayComponent, Position, and Interval depend on the specified recurrence type.\n */\nexport const IfcRecurrencePattern = 1503;\n\n/**\n * This entity is used to refer to a value of an attribute on an instance. It may refer to the value of a scalar attribute or a value within a collection-based attribute. Referenced attributes may be direct values, object references, collections, inverse object references, and inverse collections. References may be chained to form a path of object-attribute references.\n */\nexport const IfcReference = 1504;\n\n/**\n * In a regular time series, the data arrives predictably at predefined intervals. In a regular time series there is no need to store multiple time stamps and the algorithms for analyzing the time series are therefore significantly simpler. Using the start time provided in the supertype, the time step is used to identify the frequency of the occurrences of the list of values.\n */\nexport const IfcRegularTimeSeries = 1505;\n\n/**\n * IfcReinforcementProperties defines the set of properties for a specific combination of reinforcement bar steel grade, bar type and effective depth.\n */\nexport const IfcReinforcementBarProperties = 1506;\n\n/**\n * IfcReinforcementDefinitionProperties defines the cross section properties of reinforcement included in reinforced concrete building elements. The property set definition may be used both in conjunction with insitu and precast structures.\n */\nexport const IfcReinforcementDefinitionProperties = 1507;\n\n/**\n * A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength. A single instance of this class may represent one or many of actual rebars, for example a row of rebars.\n */\nexport const IfcReinforcingBar = 1508;\n\n/**\n * The reinforcing element type IfcReinforcingBarType defines commonly shared information for occurrences of reinforcing bars. The set of shared information may include:\n */\nexport const IfcReinforcingBarType = 1509;\n\n/**\n * A reinforcing element represents bars, wires, strands, meshes, tendons, and other components embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.\n */\nexport const IfcReinforcingElement = 1510;\n\n/**\n * The element component type IfcReinforcingElementType defines commonly shared information for occurrences of reinforcing elements. The set of shared information may include:\n */\nexport const IfcReinforcingElementType = 1511;\n\n/**\n * A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection; usually used for concrete slab reinforcement. It is also known as welded wire fabric. In scope are plane meshes as well as bent meshes.\n */\nexport const IfcReinforcingMesh = 1512;\n\n/**\n * The reinforcing element type IfcReinforcingMeshType defines commonly shared information for occurrences of reinforcing meshs. The set of shared information may include:\n */\nexport const IfcReinforcingMeshType = 1513;\n\n/**\n * The aggregation relationship IfcRelAggregates is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes. The aggregation relationship can be applied to all subtypes of IfcObjectDefinition.\n */\nexport const IfcRelAggregates = 1514;\n\n/**\n * The assignment relationship, IfcRelAssigns, is a generalization of \"link\" relationships among instances of IfcObject and its various 1st level subtypes. A link denotes the specific association through which one object (the client) applies the services of other objects (the suppliers), or through which one object may navigate to other objects.\n */\nexport const IfcRelAssigns = 1515;\n\n/**\n * The objectified relationship IfcRelAssignsToActor handles the assignment of objects (subtypes of IfcObject) to an actor (subtypes of IfcActor).\n */\nexport const IfcRelAssignsToActor = 1516;\n\n/**\n * The objectified relationship IfcRelAssignsToControl handles the assignment of a control (represented by subtypes of IfcControl) to other objects (represented by subtypes of IfcObject, with the exception of controls).\n */\nexport const IfcRelAssignsToControl = 1517;\n\n/**\n * The objectified relationship IfcRelAssignsToGroup handles the assignment of object definitions (individual object occurrences as subtypes of IfcObject, and object types as subtypes of IfcTypeObject) to a group (subtypes of IfcGroup).\n */\nexport const IfcRelAssignsToGroup = 1518;\n\n/**\n * The objectified relationship IfcRelAssignsToGroupByFactor is a specialization of the general grouping mechanism. It allows to add a factor to define the ratio that applies to the assignment of object definitions (individual object occurrences as subtypes of IfcObject and object types as subtypes of IfcTypeObject) to a group (subtypes of IfcGroup).\n */\nexport const IfcRelAssignsToGroupByFactor = 1519;\n\n/**\n * The objectified relationship IfcRelAssignsToProcess handles the assignment of one or many objects to a process or activity. An object can be a product that is the item the process operates on. Processes and activities can operate on things other than products, and can operate in ways other than input and output.\n */\nexport const IfcRelAssignsToProcess = 1520;\n\n/**\n * The objectified relationship IfcRelAssignsToProduct handles the assignment of objects (subtypes of IfcObject) to a product (subtypes of IfcProduct). The Name attribute should be used to classify the usage of the IfcRelAssignsToProduct objectified relationship. The following Name values are proposed:\n */\nexport const IfcRelAssignsToProduct = 1521;\n\n/**\n * The objectified relationship IfcRelAssignsToResource handles the assignment of objects (as subtypes of IfcObject), acting as a resource usage or consumption, to a resource (as subtypes of IfcResource).\n */\nexport const IfcRelAssignsToResource = 1522;\n\n/**\n * The association relationship IfcRelAssociates refers to sources of information (most notably a classification, library, document, approval, contraint, or material). The information associated may reside internally or externally of the project data. There is no dependency implied by the association.\n */\nexport const IfcRelAssociates = 1523;\n\n/**\n * The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval, in IfcApprovalResource schema, to subtypes of IfcRoot.\n */\nexport const IfcRelAssociatesApproval = 1524;\n\n/**\n * The objectified relationship IfcRelAssociatesClassification handles the assignment of a classification item (items of the select IfcClassificationSelect) to objects occurrences (subtypes of IfcObject) or object types (subtypes of IfcTypeObject).\n */\nexport const IfcRelAssociatesClassification = 1525;\n\n/**\n * The entity IfcRelAssociatesConstraint is used to apply constraint information defined by IfcConstraint, in the IfcConstraintResource schema, to subtypes of IfcRoot.\n */\nexport const IfcRelAssociatesConstraint = 1526;\n\n/**\n * The objectified relationship (IfcRelAssociatesDocument) handles the assignment of a document information (items of the select IfcDocumentSelect) to objects occurrences (subtypes of IfcObject) or object types (subtypes of IfcTypeObject).\n */\nexport const IfcRelAssociatesDocument = 1527;\n\n/**\n * The objectified relationship (IfcRelAssociatesLibrary) handles the assignment of a library item (items of the select IfcLibrarySelect) to subtypes of IfcObjectDefinition or IfcPropertyDefinition.\n */\nexport const IfcRelAssociatesLibrary = 1528;\n\n/**\n * IfcRelAssociatesMaterial is an objectified relationship between a material definition and elements or element types to which this material definition applies.\n */\nexport const IfcRelAssociatesMaterial = 1529;\n\n/**\n * IfcRelationship is the abstract generalization of all objectified relationships in IFC. Objectified relationships are the preferred way to handle relationships among objects. This allows to keep relationship specific properties directly at the relationship and opens the possibility to later handle relationship specific behavior.\n */\nexport const IfcRelationship = 1530;\n\n/**\n * IfcRelConnects is a connectivity relationship that connects objects under some criteria. As a general connectivity it does not imply constraints, however subtypes of the relationship define the applicable object types for the connectivity relationship and the semantics of the particular connectivity.\n */\nexport const IfcRelConnects = 1531;\n\n/**\n * The IfcRelConnectsElements objectified relationship provides the generalization of the connectivity between elements. It is a 1 to 1 relationship. The concept of two elements being physically or logically connected is described independently from the connecting elements. The connectivity may be related to the shape representation of the connected entities by providing a connection geometry.\n */\nexport const IfcRelConnectsElements = 1532;\n\n/**\n * The IfcRelConnectsPathElements relationship provides the connectivity information between two elements, which have path information.\n */\nexport const IfcRelConnectsPathElements = 1533;\n\n/**\n * An IfcRelConnectsPorts relationship defines the relationship that is made between two ports at their point of connection. It may include the connection geometry between two ports.\n */\nexport const IfcRelConnectsPorts = 1534;\n\n/**\n * IfcRelConnectsPortToElement is a relationship between a distribution element and dynamically connected ports where connections are realised to other distribution elements.\n */\nexport const IfcRelConnectsPortToElement = 1535;\n\n/**\n * The IfcRelConnectsStructuralActivity relationship connects a structural activity (either an action or reaction) to a structural member, structural connection, or element.\n */\nexport const IfcRelConnectsStructuralActivity = 1536;\n\n/**\n * The entity IfcRelConnectsStructuralMember defines all needed properties describing the connection between structural members and structural connection objects (nodes or supports).\n */\nexport const IfcRelConnectsStructuralMember = 1537;\n\n/**\n * The entity IfcRelConnectsWithEccentricity adds the definition of eccentricity to the connection between a structural member and a structural connection (representing either a node or support).\n */\nexport const IfcRelConnectsWithEccentricity = 1538;\n\n/**\n * IfcRelConnectsWithRealizingElements defines a generic relationship that is made between two elements that require the realization of that relationship by means of further realizing elements.\n */\nexport const IfcRelConnectsWithRealizingElements = 1539;\n\n/**\n * This objectified relationship, IfcRelContainedInSpatialStructure, is used to assign elements to a certain level of the spatial project structure. Any element can only be assigned once to a certain level of the spatial structure. The question, which level is relevant for which type of element, can only be answered within the context of a particular project and might vary within the various regions.\n */\nexport const IfcRelContainedInSpatialStructure = 1540;\n\n/**\n * The IfcRelCoversBldgElements relationship is an objectified relationship between an element and one to many coverings, which cover that element.\n */\nexport const IfcRelCoversBldgElements = 1541;\n\n/**\n * The objectified relationship, IfcRelCoversSpace, relates a space object to one or many coverings, which faces (or is assigned to) the space.\n */\nexport const IfcRelCoversSpaces = 1542;\n\n/**\n * The objectified relationship IfcRelDeclares handles the declaration of objects (subtypes of IfcObject) or properties (subtypes of IfcPropertyDefinition) to a project or project library (represented by IfcProject, or IfcProjectLibrary).\n */\nexport const IfcRelDeclares = 1543;\n\n/**\n * The decomposition relationship, IfcRelDecomposes, defines the general concept of elements being composed or decomposed. The decomposition relationship denotes a whole/part hierarchy with the ability to navigate from the whole (the composition) to the parts and vice versa.\n */\nexport const IfcRelDecomposes = 1544;\n\n/**\n * A generic and abstract relationship which subtypes are used to:\n */\nexport const IfcRelDefines = 1545;\n\n/**\n * The objectified relationship IfcRelDefinesByObject defines the relationship between an object taking part in an object type decomposition and an object occurrences taking part in an occurrence decomposition of that type.\n */\nexport const IfcRelDefinesByObject = 1546;\n\n/**\n * The objectified relationship IfcRelDefinesByProperties defines the relationships between property set definitions and objects. Properties are aggregated in property sets. Property sets can be either directly assigned to occurrence objects using this relationship, or assigned to an object type and assigned via that type to occurrence objects. The assignment of an IfcPropertySet to an IfcTypeObject is not handled via this objectified relationship, but through the direct relationship HasPropertySets at IfcTypeObject.\n */\nexport const IfcRelDefinesByProperties = 1547;\n\n/**\n * The objectified relationship IfcRelDefinesByTemplate defines the relationships between property set template and property sets. Common information about property sets, e.g. the applicable name, description, contained properties, is defined by the property set template and assigned to all property sets.\n */\nexport const IfcRelDefinesByTemplate = 1548;\n\n/**\n * The objectified relationship IfcRelDefinesByType defines the relationship between an object type and object occurrences. The IfcRelDefinesByType is a 1-to-N relationship, as it allows for the assignment of one type information to a single or to many objects. Those objects then share the same object type, and the property sets and properties assigned to the object type.\n */\nexport const IfcRelDefinesByType = 1549;\n\n/**\n * IfcRelFillsElement is an objectified relationship between an opening element and an element that fills (or partially fills) the opening element. It is an one-to-one relationship.\n */\nexport const IfcRelFillsElement = 1550;\n\n/**\n * This objectified relationship between a distribution flow element occurrence and one-to-many control element occurrences indicates that the control element(s) sense or control some aspect of the flow element. It is applied to IfcDistributionFlowElement and IfcDistributionControlElement.\n */\nexport const IfcRelFlowControlElements = 1551;\n\n/**\n * The IfcRelInterferesElements objectified relationship indicates that two elements interfere. Interference is a spatial overlap between the two elements. It is a 1 to 1 relationship. The concept of two elements interfering physically or logically is described independently from the elements. The interference may be related to the shape representation of the entities by providing an interference geometry.\n */\nexport const IfcRelInterferesElements = 1552;\n\n/**\n * The nesting relationship IfcRelNests is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes. The nesting relationship can be applied to all non physical subtypes of object and object types, namely processes, controls (like cost items), and resources. It can also be applied to physical subtypes of object and object types, namely elements having ports. The nesting implies an order among the nested parts.\n */\nexport const IfcRelNests = 1553;\n\n/**\n * The IfcRelProjectsElement is an objectified relationship between an element and one projection element that creates a modifier to the shape of the element. The relationship is defined to be a 1:1 relationship, if an element has more than one projection, several relationship objects have to be used, each pointing to a different projection element. The IfcRelProjectsElement establishes an aggregation relationship between the main element and a sub ordinary addition feature.\n */\nexport const IfcRelProjectsElement = 1554;\n\n/**\n * The objectified relationship, IfcRelReferencedInSpatialStructure is used to assign elements in addition to those levels of the project spatial\\S\\ structure, in which they are referenced, but not primarily contained. It is also used to connect a system to the relevant spatial element that it serves.\n */\nexport const IfcRelReferencedInSpatialStructure = 1555;\n\n/**\n * IfcRelSequence is a sequential relationship between processes where one process must occur before the other in time and where the timing of the relationship may be described as a type of sequence. The relating process (IfcRelSequence.RelatingProcess) is considered to be the predecessor in the relationship (has precedence) whilst the related process (IfcRelSequence.RelatedProcess) is the successor.\n */\nexport const IfcRelSequence = 1556;\n\n/**\n * The IfcRelServicesBuildings is an objectified relationship that defines the relationship between a system and the sites, buildings, storeys, spaces, or spatial zones, it serves. Examples of systems are:\n */\nexport const IfcRelServicesBuildings = 1557;\n\n/**\n * The space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary to the surrounding elements.\n */\nexport const IfcRelSpaceBoundary = 1558;\n\n/**\n * The 1st level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary1stLevel to the surrounding elements. 1st level space boundaries are characterizeda by:\n */\nexport const IfcRelSpaceBoundary1stLevel = 1559;\n\n/**\n * The 2nd level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary2ndLevel to the surrounding elements. 2nd level space boundaries are characterized by:\n */\nexport const IfcRelSpaceBoundary2ndLevel = 1560;\n\n/**\n * IfcRelVoidsElement is an objectified relationship between a building element and one opening element that creates a void in the element. It is a one-to-one relationship. This relationship implies a Boolean operation of subtraction between the geometric bodies of the element and the opening.\n */\nexport const IfcRelVoidsElement = 1561;\n\n/**\n * The IfcReparametrisedCompositeCurveSegment is geometrically identical to a IfcCompositeCurveSegment but with the additional capability of reparametrization.\n */\nexport const IfcReparametrisedCompositeCurveSegment = 1562;\n\n/**\n * The IfcRepresentation defines the general concept of representing product properties and in particular the product shape.\n */\nexport const IfcRepresentation = 1563;\n\n/**\n * The IfcRepresentationContext defines the context to which the IfcRepresentation of a product is related.\n */\nexport const IfcRepresentationContext = 1564;\n\n/**\n * The IfcRepresentationItem is used within an IfcRepresentation (directly or indirectly through other IfcRepresentationItem's) to represent an IfcProductRepresentation. Most commonly these IfcRepresentationItem's are geometric or topological representation items, that can (but not need to) have presentation style infomation assigned.\n */\nexport const IfcRepresentationItem = 1565;\n\n/**\n * An IfcRepresentationMap defines the base definition (also referred to as block, cell or macro) called MappedRepresentation within the MappingOrigin. The MappingOrigin defines the coordinate system in which the MappedRepresentation is defined.\n */\nexport const IfcRepresentationMap = 1566;\n\n/**\n * IfcResource contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process. It is not intended to use IfcResource to model the general properties of the things themselves, while an optional linkage from IfcResource to the things to be used can be specified (specifically, the relationship from subtypes of IfcResource to IfcProduct through the IfcRelAssignsToResource relationship).\n */\nexport const IfcResource = 1567;\n\n/**\n * An IfcResourceApprovalRelationship is used for associating an approval to resource objects. A single approval might be given to one or many items via IfcResourceObjectSelect.\n */\nexport const IfcResourceApprovalRelationship = 1568;\n\n/**\n * An IfcResourceConstraintRelationship is a relationship entity that enables a constraint to be related to one or more resource level objects.\n */\nexport const IfcResourceConstraintRelationship = 1569;\n\n/**\n * IfcResourceLevelRelationship is an abstract base entity for relationships between resource-level entities.\n */\nexport const IfcResourceLevelRelationship = 1570;\n\n/**\n * IfcResourceTime captures the time-related information about a construction resource.\n */\nexport const IfcResourceTime = 1571;\n\n/**\n * An IfcRevolvedAreaSolid is a solid created by revolving a cross section provided by a profile definition about an axis.\n */\nexport const IfcRevolvedAreaSolid = 1572;\n\n/**\n * IfcRevolvedAreaSolidTapered is defined by revolving a cross section along a circular arc. The cross section may change along the revolving sweep from the shape of the start cross section into the shape of the end cross section. Corresponding vertices of the start and end cross sections are then connected. The bounded surface may have holes which will sweep into holes in the solid.\n */\nexport const IfcRevolvedAreaSolidTapered = 1573;\n\n/**\n * The IfcRightCircularCone is a Construction Solid Geometry (CSG) 3D primitive. It is a solid with a circular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the circular base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the cone:\n */\nexport const IfcRightCircularCone = 1574;\n\n/**\n * The IfcRightCircularCylinder is a Construction Solid Geometry (CSG) 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides:\n */\nexport const IfcRightCircularCylinder = 1575;\n\n/**\n * A roof is the covering of the top part of a building, it protects the building against the effects of wheather.\n */\nexport const IfcRoof = 1576;\n\n/**\n * The building element type IfcRoofType defines commonly shared information for occurrences of roofs. The set of shared information may include:\n */\nexport const IfcRoofType = 1577;\n\n/**\n * IfcRoot is the most abstract and root class for all entity definitions that roots in the kernel or in subsequent layers of the IFC specification. It is therefore the kdtree3 supertype of all IFC entities, beside those defined in an IFC resource schema. All entities that are subtypes of IfcRoot can be used independently, whereas resource schema entities, that are not subtypes of IfcRoot, are not supposed to be independent entities.\n */\nexport const IfcRoot = 1578;\n\n/**\n * IfcRoundedRectangleProfileDef defines a rectangle with equally rounded corners as the profile definition used by the swept surface geometry or the swept area solid. It is given by the X extent, the Y extent, and the radius for the rounded corners, and placed within the 2D position coordinate system, established by the Position attribute. It is placed centric within the position coordinate system, that is, in the center of the bounding box.\n */\nexport const IfcRoundedRectangleProfileDef = 1579;\n\n/**\n * A sanitary terminal is a fixed appliance or terminal usually supplied with water and used for drinking, cleaning or foul water disposal or that is an item of equipment directly used with such an appliance or terminal.\n */\nexport const IfcSanitaryTerminal = 1580;\n\n/**\n * The flow terminal type IfcSanitaryTerminalType defines commonly shared information for occurrences of sanitary terminals. The set of shared information may include:\n */\nexport const IfcSanitaryTerminalType = 1581;\n\n/**\n * IfcSchedulingTime is the abstract supertype of entities that capture time-related information of processes.\n */\nexport const IfcSchedulingTime = 1582;\n\n/**\n * An IfcSeamCurve is a 3-dimensional curve that has additional representations provided by exactly two distinct pcurves describing the same curve at the two extreme ends of a closed parametric surface.\n */\nexport const IfcSeamCurve = 1583;\n\n/**\n * An IfcSectionedSpine is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined.\n */\nexport const IfcSectionedSpine = 1584;\n\n/**\n * IfcSectionProperties defines the cross section properties for a single longitudinal piece of a cross section. It is a special-purpose helper class for IfcSectionReinforcementProperties.\n */\nexport const IfcSectionProperties = 1585;\n\n/**\n * IfcSectionReinforcementProperties defines the cross section properties of reinforcement for a single longitudinal piece of a cross section with a specific reinforcement usage type.\n */\nexport const IfcSectionReinforcementProperties = 1586;\n\n/**\n * A sensor is a device that measures a physical quantity and converts it into a signal which can be read by an observer or by an instrument.\n */\nexport const IfcSensor = 1587;\n\n/**\n * The distribution control element type IfcSensorType defines commonly shared information for occurrences of sensors. The set of shared information may include:\n */\nexport const IfcSensorType = 1588;\n\n/**\n * Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable.\n */\nexport const IfcShadingDevice = 1589;\n\n/**\n * The building element type IfcShadingDeviceType defines commonly shared information for occurrences of shading devices. The set of shared information may include:\n */\nexport const IfcShadingDeviceType = 1590;\n\n/**\n * IfcShapeAspect allows for grouping of shape representation items that represent aspects (or components) of the shape of a product. Thereby shape representations of components of the product shape represent a distinctive part to a product that can be explicitly addressed.\n */\nexport const IfcShapeAspect = 1591;\n\n/**\n * IfcShapeModel represents the concept of a particular geometric and/or topological representation of a product's shape or a product component's shape within a representation context. This representation context has to be a geometric representation context (with the exception of topology representations without associated geometry). The two subtypes are IfcShapeRepresentation to cover geometric models that represent a shape, and IfcTopologyRepresentation to cover the conectivity of a product or product component. The topology may or may not have geometry associated.\n */\nexport const IfcShapeModel = 1592;\n\n/**\n * The IfcShapeRepresentation represents the concept of a particular geometric representation of a product or a product component within a specific geometric representation context. The inherited attribute RepresentationType is used to define the geometric model used for the shape representation (e.g. 'SweptSolid', or 'Brep'), the inherited attribute RepresentationIdentifier is used to denote the kind of the representation captured by the IfcShapeRepresentation (e.g. 'Axis', 'Body', etc.).\n */\nexport const IfcShapeRepresentation = 1593;\n\n/**\n * An IfcShellBasedSurfaceModel represents the shape by a set of open or closed shells. The connected faces within the shell have a dimensionality 2 and are placed in a coordinate space of dimensionality 3.\n */\nexport const IfcShellBasedSurfaceModel = 1594;\n\n/**\n * IfcSimpleProperty is a generalization of a single property object. The various subtypes of IfcSimpleProperty establish different ways in which a property value can be set.\n */\nexport const IfcSimpleProperty = 1595;\n\n/**\n * The IfcSimplePropertyTemplate defines the template for all dynamically extensible properties, either the subtypes of IfcSimpleProperty, or the subtypes of IfcPhysicalSimpleQuantity. The individual property templates are interpreted according to their Name attribute and may have a predefined template type, property units, and property measure types. The correct interpretation of the attributes:\n */\nexport const IfcSimplePropertyTemplate = 1596;\n\n/**\n * A site is a defined area of land, possibly covered with water, on which the project construction is to be completed. A site may be used to erect, retrofit or turn down building(s), or for other construction related developments.\n */\nexport const IfcSite = 1597;\n\n/**\n * The IfcSIUnit covers both standard base SI units such as meter and second, and derived SI units such as Pascal, square meter and cubic meter.\n */\nexport const IfcSIUnit = 1598;\n\n/**\n * A slab is a component of the construction that may enclose a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building.\n */\nexport const IfcSlab = 1599;\n\n/**\n * The IfcSlabElementedCase defines a slab with certain constraints for the provision of its components. The IfcSlabElementedCase handles all cases of slabs, that are decomposed into parts:\n */\nexport const IfcSlabElementedCase = 1600;\n\n/**\n * The standard slab, IfcSlabStandardCase, defines a slab with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcSlabStandardCase handles all cases of slabs, that:\n */\nexport const IfcSlabStandardCase = 1601;\n\n/**\n * The element type IfcSlabType defines commonly shared information for occurrences of slabs. The set of shared information may include:\n */\nexport const IfcSlabType = 1602;\n\n/**\n * Describes slippage in support conditions or connection conditions. Slippage means that a relative displacement may occur in a support or connection before support or connection reactions are awoken.\n */\nexport const IfcSlippageConnectionCondition = 1603;\n\n/**\n * A solar device converts solar radiation into other energy such as electric current or thermal energy.\n */\nexport const IfcSolarDevice = 1604;\n\n/**\n * The energy conversion device type IfcSolarDeviceType defines commonly shared information for occurrences of solar devices. The set of shared information may include:\n */\nexport const IfcSolarDeviceType = 1605;\n\n/**\n * An IfcSolidModel represents the 3D shape by different types of solid model representations. It is the kdtree3 abstract supertype of Boundary representation, CSG representation, Sweeping representation and other suitable solid representation schemes.\n */\nexport const IfcSolidModel = 1606;\n\n/**\n * A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.\n */\nexport const IfcSpace = 1607;\n\n/**\n * Space heaters utilize a combination of radiation and/or natural convection using a heating source such as electricity, steam or hot water to heat a limited space or area. Examples of space heaters include radiators, convectors, baseboard and finned-tube heaters.\n */\nexport const IfcSpaceHeater = 1608;\n\n/**\n * The flow terminal type IfcSpaceHeaterType defines commonly shared information for occurrences of space heaters. The set of shared information may include:\n */\nexport const IfcSpaceHeaterType = 1609;\n\n/**\n * A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.\n */\nexport const IfcSpaceType = 1610;\n\n/**\n * A spatial element is the generalization of all spatial elements that might be used to define a spatial structure or to define spatial zones.\n */\nexport const IfcSpatialElement = 1611;\n\n/**\n * IfcSpatialElementType defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define a spatial element specification (the specific element information, that is kdtree3 to all occurrences of that element type).\n */\nexport const IfcSpatialElementType = 1612;\n\n/**\n * A spatial structure element is the generalization of all spatial elements that might be used to define a spatial structure. That spatial structure is often used to provide a project structure to organize a building project.\n */\nexport const IfcSpatialStructureElement = 1613;\n\n/**\n * The element type (IfcSpatialStructureElementType) defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define an element specification (i.e. the specific element information, that is kdtree3 to all occurrences of that element type).\n */\nexport const IfcSpatialStructureElementType = 1614;\n\n/**\n * A spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration. A spatial zone might be used to represent a thermal zone, a construction zone, a lighting zone, a usable area zone. A spatial zone might have its independent placement and shape representation.\n */\nexport const IfcSpatialZone = 1615;\n\n/**\n * The IfcSpatialZoneType defines a list of commonly shared property set definitions of a space and an optional set of product representations. It is used to define a space specification (i.e. the specific space information, that is kdtree3 to all occurrences of that space type).\n */\nexport const IfcSpatialZoneType = 1616;\n\n/**\n * The IfcSphere is a Construction Solid Geometry (CSG) 3D primitive. It is a solid where all points at the surface have the same distance from the center point. The inherited Position attribute defines the IfcAxisPlacement3D and provides:\n */\nexport const IfcSphere = 1617;\n\n/**\n * The IfcSphericalSurface is a bounded elementary surface. The inherited Position attribute defines the IfcAxisPlacement3D and provides:\n */\nexport const IfcSphericalSurface = 1618;\n\n/**\n * A stack terminal is placed at the top of a ventilating stack (such as to prevent ingress by birds or rainwater) or rainwater pipe (to act as a collector or hopper for discharge from guttering).\n */\nexport const IfcStackTerminal = 1619;\n\n/**\n * The flow terminal type IfcStackTerminalType defines commonly shared information for occurrences of stack terminals. The set of shared information may include:\n */\nexport const IfcStackTerminalType = 1620;\n\n/**\n * A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab.\n */\nexport const IfcStair = 1621;\n\n/**\n * A stair flight is an assembly of building components in a single \"run\" of stair steps (not interrupted by a landing). The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight.\n */\nexport const IfcStairFlight = 1622;\n\n/**\n * The building element type IfcStairFlightType defines commonly shared information for occurrences of stair flights. The set of shared information may include:\n */\nexport const IfcStairFlightType = 1623;\n\n/**\n * The building element type IfcStairType defines commonly shared information for occurrences of stairs. The set of shared information may include:\n */\nexport const IfcStairType = 1624;\n\n/**\n * A structural action is a structural activity that acts upon a structural item or building element.\n */\nexport const IfcStructuralAction = 1625;\n\n/**\n * The abstract entity IfcStructuralActivity combines the definition of actions (such as forces, displacements, etc.) and reactions (support reactions, internal forces, deflections, etc.) which are specified by using the basic load definitions from the IfcStructuralLoadResource.\n */\nexport const IfcStructuralActivity = 1626;\n\n/**\n * The IfcStructuralAnalysisModel is used to assemble all information needed to represent a structural analysis model. It encompasses certain general properties (such as analysis type), references to all contained structural members, structural supports or connections, as well as loads and the respective load results.\n */\nexport const IfcStructuralAnalysisModel = 1627;\n\n/**\n * An IfcStructuralConnection represents a structural connection object (node connection, edge connection, or surface connection) or supports.\n */\nexport const IfcStructuralConnection = 1628;\n\n/**\n * Describe more rarely needed connection properties.\n */\nexport const IfcStructuralConnectionCondition = 1629;\n\n/**\n * A structural curve action defines an action which is distributed over a curve. A curve action may be connected with a curve member or curve connection, or surface member or surface connection.\n */\nexport const IfcStructuralCurveAction = 1630;\n\n/**\n * Instances of IfcStructuralCurveConnection describe edge 'nodes', i.e. edges where two or more surface members are joined, or edge supports. Edge curves may be straight or curved.\n */\nexport const IfcStructuralCurveConnection = 1631;\n\n/**\n * Instances of IfcStructuralCurveMember describe edge members, i.e. structural analysis idealizations of beams, columns, rods etc.. Curve members may be straight or curved.\n */\nexport const IfcStructuralCurveMember = 1632;\n\n/**\n * This entity describes edge members with varying profile properties. Each instance of IfcStructuralCurveMemberVarying is composed of two or more instances of IfcStructuralCurveMember with differing profile properties. These subordinate members relate to the instance of IfcStructuralCurveMemberVarying by IfcRelAggregates.\n */\nexport const IfcStructuralCurveMemberVarying = 1633;\n\n/**\n * This entity defines a reaction which occurs distributed over a curve. A curve reaction may be connected with a curve member or curve connection, or surface member or surface connection.\n */\nexport const IfcStructuralCurveReaction = 1634;\n\n/**\n * The abstract entity IfcStructuralItem is the generalization of structural members and structural connections, that is, analysis idealizations of elements in the building model. It defines the relation between structural members and connections with structural activities (actions and reactions).\n */\nexport const IfcStructuralItem = 1635;\n\n/**\n * This entity defines an action with constant value which is distributed over a curve.\n */\nexport const IfcStructuralLinearAction = 1636;\n\n/**\n * This abstract entity is the supertype of all loads (actions or reactions) or of certain requirements resulting from structural analysis, or certain provisions which influence structural analysis.\n */\nexport const IfcStructuralLoad = 1637;\n\n/**\n * A load case is a load group, commonly used to group loads from the same action source.\n */\nexport const IfcStructuralLoadCase = 1638;\n\n/**\n * This class combines one or more load or result values in a 1- or 2-dimensional configuration.\n */\nexport const IfcStructuralLoadConfiguration = 1639;\n\n/**\n * The entity IfcStructuralLoadGroup is used to structure the physical impacts. By using the grouping features inherited from IfcGroup, instances of IfcStructuralAction (or its subclasses) and of IfcStructuralLoadGroup can be used to define load groups, load cases and load combinations. (See also IfcLoadGroupTypeEnum.)\n */\nexport const IfcStructuralLoadGroup = 1640;\n\n/**\n * An instance of the entity IfcStructuralLoadLinearForce shall be used to define actions on curves.\n */\nexport const IfcStructuralLoadLinearForce = 1641;\n\n/**\n * Abstract superclass of simple load or result classes.\n */\nexport const IfcStructuralLoadOrResult = 1642;\n\n/**\n * An instance of the entity IfcStructuralLoadPlanarForce shall be used to define actions on faces.\n */\nexport const IfcStructuralLoadPlanarForce = 1643;\n\n/**\n * Instances of the entity IfcStructuralLoadSingleDisplacement shall be used to define displacements.\n */\nexport const IfcStructuralLoadSingleDisplacement = 1644;\n\n/**\n * Defines a displacement with warping.\n */\nexport const IfcStructuralLoadSingleDisplacementDistortion = 1645;\n\n/**\n * Instances of the entity IfcStructuralLoadSingleForce shall be used to define the forces and moments of an action operating on a single point.\n */\nexport const IfcStructuralLoadSingleForce = 1646;\n\n/**\n * Instances of the entity IfcStructuralLoadSingleForceWarping, as a subtype of IfcStructuralLoadSingleForce, shall be used to define an action operation on a single point. In addition to forces and moments defined by its supertype a warping moment can be defined.\n */\nexport const IfcStructuralLoadSingleForceWarping = 1647;\n\n/**\n * The abstract entity IfcStructuralLoadStatic is the supertype of all static loads (actions or reactions) which can be defined. Within scope are single i.e. concentrated forces and moments, linear i.e. one-dimensionally distributed forces and moments, planar i.e. two-dimensionally distributed forces, furthermore displacements and temperature loads.\n */\nexport const IfcStructuralLoadStatic = 1648;\n\n/**\n * An instance of the entity IfcStructuralLoadTemperature shall be used to define actions which are caused by a temperature change. As shown in Figure 430, the change of temperature is given with a constant value which is applied to the complete section and values for temperature differences between outer fibres of the section.\n */\nexport const IfcStructuralLoadTemperature = 1649;\n\n/**\n * The abstract entity IfcStructuralMember is the superclass of all structural items which represent the idealized structural behavior of building elements.\n */\nexport const IfcStructuralMember = 1650;\n\n/**\n * This entity defines an action with constant value which is distributed over a surface.\n */\nexport const IfcStructuralPlanarAction = 1651;\n\n/**\n * This entity defines an action which acts on a point. A point action is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.\n */\nexport const IfcStructuralPointAction = 1652;\n\n/**\n * Instances of IfcStructuralPointConnection describe structural nodes or point supports.\n */\nexport const IfcStructuralPointConnection = 1653;\n\n/**\n * This entity defines a reaction which occurs at a point. A point reaction is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.\n */\nexport const IfcStructuralPointReaction = 1654;\n\n/**\n * A structural reaction is a structural activity that results from a structural action imposed to a structural item or building element. Examples are support reactions, internal forces, and deflections.\n */\nexport const IfcStructuralReaction = 1655;\n\n/**\n * Instances of the entity IfcStructuralResultGroup are used to group results of structural analysis calculations and to capture the connection to the underlying basic load group. The basic functionality for grouping inherited from IfcGroup is used to collect instances from IfcStructuralReaction or its respective subclasses.\n */\nexport const IfcStructuralResultGroup = 1656;\n\n/**\n * This entity defines an action which is distributed over a surface. A surface action may be connected with a surface member or surface connection.\n */\nexport const IfcStructuralSurfaceAction = 1657;\n\n/**\n * Instances of IfcStructuralSurfaceConnection describe face 'nodes', i.e. faces where two or more surface members are joined, or face supports. Face surfaces may be planar or curved.\n */\nexport const IfcStructuralSurfaceConnection = 1658;\n\n/**\n * Instances of IfcStructuralSurfaceMember describe face members, that is, structural analysis idealizations of slabs, walls, and shells. Surface members may be planar or curved.\n */\nexport const IfcStructuralSurfaceMember = 1659;\n\n/**\n * This entity describes surface members with varying section properties. The properties are provided by means of Pset_StructuralSurfaceMemberVaryingThickness via IfcRelDefinesByProperties, or by means of aggregation: An instance of IfcStructuralSurfaceMemberVarying may be composed of two or more instances of IfcStructuralSurfaceMember with differing section properties. These subordinate members relate to the instance of IfcStructuralSurfaceMemberVarying by IfcRelAggregates.\n */\nexport const IfcStructuralSurfaceMemberVarying = 1660;\n\n/**\n * This entity defines a reaction which occurs distributed over a surface. A surface reaction may be connected with a surface member or surface connection.\n */\nexport const IfcStructuralSurfaceReaction = 1661;\n\n/**\n * The IfcStyledItem holds presentation style information for products, either explicitly for an IfcGeometricRepresentationItem being part of an IfcShapeRepresentation assigned to a product, or by assigning presentation information to IfcMaterial being assigned as other representation for a product.\n */\nexport const IfcStyledItem = 1662;\n\n/**\n * The IfcStyledRepresentation represents the concept of a styled presentation being a representation of a product or a product component, like material. within a representation context. This representation context does not need to be (but may be) a geometric representation context.\n */\nexport const IfcStyledRepresentation = 1663;\n\n/**\n * IfcStyleModel represents the concept of a particular presentation style defined for a material (or other characteristic) of a product or a product component within a representation context. This representation context may (but has not to be) a geometric representation context.\n */\nexport const IfcStyleModel = 1664;\n\n/**\n * IfcSubContractResource is a construction resource needed in a construction process that represents a sub-contractor.\n */\nexport const IfcSubContractResource = 1665;\n\n/**\n * The resource type IfcSubContractResourceType defines commonly shared information for occurrences of subcontract resources. The set of shared information may include:\n */\nexport const IfcSubContractResourceType = 1666;\n\n/**\n *\n */\nexport const IfcSubedge = 1667;\n\n/**\n * An IfcSurface is a 2-dimensional representation item positioned in 3-dimensional space. 2-dimensional means that each point at the surface can be defined by a 2-dimensional coordinate system, usually by u and v coordinates.\n */\nexport const IfcSurface = 1668;\n\n/**\n * An IfcSurfaceCurve is a 3-dimensional curve that has additional representations provided by one or two pcurves.\n */\nexport const IfcSurfaceCurve = 1669;\n\n/**\n * The IfcSurfaceCurveSweptAreaSolid is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of IfcProfileDef. The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile''s x-axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile''s normal points towards the tangent of the directrix, and the profile''s x-axis is identical to the surface normal at this point.\n */\nexport const IfcSurfaceCurveSweptAreaSolid = 1670;\n\n/**\n * A surface feature is a modification at (onto, or into) of the surface of an element. Parts of the surface of the entire surface may be affected. The volume and mass of the element may be increased, remain unchanged, or be decreased by the surface feature, depending on manufacturing technology. However, any increase or decrease of volume is small compared to the total volume of the element.\n */\nexport const IfcSurfaceFeature = 1671;\n\n/**\n * The IfcSurfaceOfLinearExtrusion is a surface derived by sweeping a curve along a vector.\n */\nexport const IfcSurfaceOfLinearExtrusion = 1672;\n\n/**\n * The IfcSurfaceOfRevolution is a surface derived by rotating a curve about an axis.\n */\nexport const IfcSurfaceOfRevolution = 1673;\n\n/**\n * Describes required or provided reinforcement area of surface members.\n */\nexport const IfcSurfaceReinforcementArea = 1674;\n\n/**\n * IfcSurfaceStyle is an assignment of one or many surface style elements to a surface, defined by subtypes of IfcSurface, IfcFaceBasedSurfaceModel, IfcShellBasedSurfaceModel, or by subtypes of IfcSolidModel. The positive direction of the surface normal relates to the positive side. In case of solids the outside of the solid is to be taken as positive side.\n */\nexport const IfcSurfaceStyle = 1675;\n\n/**\n * IfcSurfaceStyleLighting is a container class for properties for calculation of physically exact illuminance related to a particular surface style.\n */\nexport const IfcSurfaceStyleLighting = 1676;\n\n/**\n * IfcSurfaceStyleRefraction extends the surface style lighting, or the surface style rendering definition for properties for calculation of physically exact illuminance by adding seldomly used properties. Currently this includes the refraction index (by which the light ray refracts when passing through a prism) and the dispersion factor (or Abbe constant) which takes into account the wavelength dependency of the refraction.\n */\nexport const IfcSurfaceStyleRefraction = 1677;\n\n/**\n * IfcSurfaceStyleRendering holds the properties for visualization related to a particular surface side style. It allows rendering properties to be defined by:\n */\nexport const IfcSurfaceStyleRendering = 1678;\n\n/**\n * The IfcSurfaceStyleShading allows for colour information and transparency used for shading and simple rendering. The surface colour is used for colouring or simple shading of the assigned surfaces and the transparency for identifying translucency, where 0.0 is completely opaque, and 1.0 is completely transparent.\n */\nexport const IfcSurfaceStyleShading = 1679;\n\n/**\n * The entity IfcSurfaceStyleWithTextures allows to include image textures in surface styles. These image textures can be applied repeating across the surface or mapped with a particular scale upon the surface.\n */\nexport const IfcSurfaceStyleWithTextures = 1680;\n\n/**\n * An IfcSurfaceTexture provides a 2-dimensional image-based texture map. It can either be given by referencing an external image file through an URL reference (IfcImageTexture), including the image file as a blob (long binary) into the data set (IfcBlobTexture), or by explicitly including an array of pixels (IfcPixelTexture).\n */\nexport const IfcSurfaceTexture = 1681;\n\n/**\n * An IfcSweptAreaSolid represents the 3D shape by a sweeping representation scheme allowing a two dimensional planar cross section to sweep through space.\n */\nexport const IfcSweptAreaSolid = 1682;\n\n/**\n * An IfcSweptDiskSolid represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space.\n */\nexport const IfcSweptDiskSolid = 1683;\n\n/**\n * The IfcSweptDiskSolidPolygonal is a IfcSweptDiskSolid where the Directrix is restricted to be provided by an poly line only. An optional FilletRadius attribute can be asserted, it is then applied as a fillet to all transitions between the segments of the poly line.\n */\nexport const IfcSweptDiskSolidPolygonal = 1684;\n\n/**\n * An IfcSweptSurface is a surface defined by sweeping a curve. The swept surface is defined by a open or closed curve, represented by a subtype if IfcProfileDef, that is provided as a two-dimensional curve on an implicit plane, and by the sweeping operation.\n */\nexport const IfcSweptSurface = 1685;\n\n/**\n * A switch is used in a cable distribution system (electrical circuit) to control or modulate the flow of electricity.\n */\nexport const IfcSwitchingDevice = 1686;\n\n/**\n * The flow controller type IfcSwitchingDeviceType defines commonly shared information for occurrences of switching devices. The set of shared information may include:\n */\nexport const IfcSwitchingDeviceType = 1687;\n\n/**\n * A system is an organized combination of related parts within an AEC product, composed for a kdtree3 purpose or function or to provide a service. A system is essentially a functionally related aggregation of products. The grouping relationship to one or several instances of IfcProduct (the system members) is handled by IfcRelAssignsToGroup.\n */\nexport const IfcSystem = 1688;\n\n/**\n * A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture.\n */\nexport const IfcSystemFurnitureElement = 1689;\n\n/**\n * The furnishing element type IfcSystemFurnitureElementType defines commonly shared information for occurrences of system furniture elements. The set of shared information may include:\n */\nexport const IfcSystemFurnitureElementType = 1690;\n\n/**\n * An IfcTable is a data structure for the provision of information in the form of rows and columns. Each instance may have IfcTableColumn instances that define the name, description and units for each column. The rows of information are stored as a list of IfcTableRow objects.\n */\nexport const IfcTable = 1691;\n\n/**\n * An IfcTableColumn is a data structure that captures column information for use in an IfcTable. Each instance defines the identifier, name, description, and units of measure that are applicable to the columnar data associated with the IfcTableRow objects.\n */\nexport const IfcTableColumn = 1692;\n\n/**\n * IfcTableRow contains data for a single row within an IfcTable.\n */\nexport const IfcTableRow = 1693;\n\n/**\n * A tank is a vessel or container in which a fluid or gas is stored for later use.\n */\nexport const IfcTank = 1694;\n\n/**\n * The flow storage device type IfcTankType defines commonly shared information for occurrences of tanks. The set of shared information may include:\n */\nexport const IfcTankType = 1695;\n\n/**\n * An IfcTask is an identifiable unit of work to be carried out in a construction project.\n */\nexport const IfcTask = 1696;\n\n/**\n * IfcTaskTime captures the time-related information about a task including the different types (actual or scheduled) of starting and ending times.\n */\nexport const IfcTaskTime = 1697;\n\n/**\n * IfcTaskTimeRecurring is a recurring instance of IfcTaskTime for handling regularly scheduled or repetitive tasks.\n */\nexport const IfcTaskTimeRecurring = 1698;\n\n/**\n * An IfcTaskType defines a particular type of task that may be specified for use within a work control.\n */\nexport const IfcTaskType = 1699;\n\n/**\n * This entity represents an address to which telephone, electronic mail and other forms of telecommunications should be addressed.\n */\nexport const IfcTelecomAddress = 1700;\n\n/**\n * A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned.\n */\nexport const IfcTendon = 1701;\n\n/**\n * A tendon anchor is the end connection for tendons in prestressed or posttensioned concrete.\n */\nexport const IfcTendonAnchor = 1702;\n\n/**\n * The reinforcing element type IfcTendonAnchorType defines commonly shared information for occurrences of tendon anchors. The set of shared information may include:\n */\nexport const IfcTendonAnchorType = 1703;\n\n/**\n * The reinforcing element type IfcTendonType defines commonly shared information for occurrences of tendons. The set of shared information may include:\n */\nexport const IfcTendonType = 1704;\n\n/**\n * The IfcTessellatedFaceSet is a boundary representation topological model limited to planar faces and straight edges. It may represent an approximation of an analytical surface or solid that may be provided in addition to its tessellation as a separate shape representation. The IfcTessellatedFaceSet provides a compact data representation of an connected face set using indices into ordered lists of vertices, normals, colours, and texture maps.\n */\nexport const IfcTessellatedFaceSet = 1705;\n\n/**\n * The IfcTessellatedItem is the abstract supertype of all tessellated geometric models.\n */\nexport const IfcTessellatedItem = 1706;\n\n/**\n * The text literal is a geometric representation item which describes a text string using a string literal and additional position and path information. The text size and appearance is determined by the IfcTextStyle that is associated to the IfcTextLiteral through an IfcStyledItem.\n */\nexport const IfcTextLiteral = 1707;\n\n/**\n * The text literal with extent is a text literal with the additional explicit information of the planar extent. An alignment attribute defines how the text box is aligned to the placement and how it may expand if additional lines of text need to be added.\n */\nexport const IfcTextLiteralWithExtent = 1708;\n\n/**\n * The IfcTextStyle is a presentation style for annotations that place a text in model space. The IfcTextStyle provides the text style for presentation information assigned to IfcTextLiteral's. The style is defined by color, text font characteristics, and text box characteristics.\n */\nexport const IfcTextStyle = 1709;\n\n/**\n *\n */\nexport const IfcTextStyleFontModel = 1710;\n\n/**\n * The IfcTextStyleForDefinedFont combines the text font color with an optional background color, that fills the text box, defined by the planar extent given to the text literal.\n */\nexport const IfcTextStyleForDefinedFont = 1711;\n\n/**\n * The IfcTextStyleTextModel combines all text style properties, that affect the presentation of a text literal within a given extent. It includes the spacing between characters and words, the horizontal and vertical alignment of the text within the planar box of the extent, decorations (like underline), transformations of the literal (like uppercase), and the height of each text line within a multi-line text block.\n */\nexport const IfcTextStyleTextModel = 1712;\n\n/**\n * The IfcTextureCoordinate is an abstract supertype of the different kinds to apply texture coordinates to geometries. For vertex based geometries an explicit assignment of 2D texture vertices to the 3D geometry points is supported by the subtype IfcTextureMap, in addition there can be a procedural description of how texture coordinates shall be applied to geometric items. If no IfcTextureCoordinate is provided for the IfcSurfaceTexture, the default mapping shall be used.\n */\nexport const IfcTextureCoordinate = 1713;\n\n/**\n * The IfcTextureCoordinateGenerator describes a procedurally defined mapping function with input parameter to map 2D texture coordinates to 3D geometry vertices. The allowable Mode values and input Parameter need to be agreed upon in view definitions and implementer agreements.\n */\nexport const IfcTextureCoordinateGenerator = 1714;\n\n/**\n * An IfcTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped. It is used for mapping the texture to surfaces of vertex based geometry models, such as\n */\nexport const IfcTextureMap = 1715;\n\n/**\n * An IfcTextureVertex is a list of 2 (S, T) texture coordinates.\n */\nexport const IfcTextureVertex = 1716;\n\n/**\n * The IfcTextureVertexList defines an ordered collection of texture vertices. Each texture vertex is a two-dimensional vertex provided by a fixed list of two texture coordinates. The attribute TexCoordsList is a two-dimensional list, where\n */\nexport const IfcTextureVertexList = 1717;\n\n/**\n * IfcTimePeriod defines a time period given by a start and end time. Both time definitions consider the time zone and allow for the daylight savings offset.\n */\nexport const IfcTimePeriod = 1718;\n\n/**\n * A time series is a set of a time-stamped data entries. It allows a natural association of data collected over intervals of time. Time series can be regular or irregular. In regular time series data arrive predictably at predefined intervals. In irregular time series some or all time stamps do not follow a repetitive pattern and unpredictable bursts of data may arrive at unspecified points in time.\n */\nexport const IfcTimeSeries = 1719;\n\n/**\n * A time series value is a list of values that comprise the time series. At least one value must be supplied. Applications are expected to normalize values by applying the following three rules:\n */\nexport const IfcTimeSeriesValue = 1720;\n\n/**\n *\n */\nexport const IfcTopologicalRepresentationItem = 1721;\n\n/**\n * IfcTopologyRepresentation represents the concept of a particular topological representation of a product or a product component within a representation context. This representation context does not need to be (but may be) a geometric representation context. Several representation types for shape representation are included as predefined types:\n */\nexport const IfcTopologyRepresentation = 1722;\n\n/**\n * The IfcToroidalSurface is a bounded elementary surface. It is constructed by completely revolving a circle around an axis line. The inherited Position attribute defines the IfcAxisPlacement3D and provides:\n */\nexport const IfcToroidalSurface = 1723;\n\n/**\n * A transformer is an inductive stationary device that transfers electrical energy from one circuit to another.\n */\nexport const IfcTransformer = 1724;\n\n/**\n * The energy conversion device type IfcTransformerType defines commonly shared information for occurrences of transformers. The set of shared information may include:\n */\nexport const IfcTransformerType = 1725;\n\n/**\n * A transport element is a generalization of all transport related objects that move people, animals or goods within a facility. The IfcTransportElement defines the occurrence of a transport element, that (if given), is expressed by the IfcTransportElementType .\n */\nexport const IfcTransportElement = 1726;\n\n/**\n * The element type IfcTransportElementType  defines commonly shared information for occurrences of transport elements. The set of shared information may include:\n */\nexport const IfcTransportElementType = 1727;\n\n/**\n * IfcTrapeziumProfileDef defines a trapezium as the profile definition used by the swept surface geometry or the swept area solid. It is given by its Top X and Bottom X extent and its Y extent as well as by the offset of the Top X extend, and placed within the 2D position coordinate system, established by the Position attribute. It is placed centric within the position coordinate system, that is, in the center of the bounding box.\n */\nexport const IfcTrapeziumProfileDef = 1728;\n\n/**\n * The IfcTriangulatedFaceSet is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of IfcTriangulatedFaceSet represents:\n */\nexport const IfcTriangulatedFaceSet = 1729;\n\n/**\n * An IfcTrimmedCurve is a bounded curve that is trimmed at both ends. The trimming points may be provided by a Cartesian point or by a parameter value, based on the parameterization of the BasisCurve. The SenseAgreement attribute indicates whether the direction of the IfcTrimmedCurve agrees with or is opposed to the direction of the BasisCurve.\n */\nexport const IfcTrimmedCurve = 1730;\n\n/**\n * IfcTShapeProfileDef defines a section profile that provides the defining parameters of a T-shaped section to be used by the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The centre of the position coordinate system is in the profile's centre of the bounding box.\n */\nexport const IfcTShapeProfileDef = 1731;\n\n/**\n * A tube bundle is a device consisting of tubes and bundles of tubes used for heat transfer and contained typically within other energy conversion devices, such as a chiller or coil.\n */\nexport const IfcTubeBundle = 1732;\n\n/**\n * The energy conversion device type IfcTubeBundleType defines commonly shared information for occurrences of tube bundles. The set of shared information may include:\n */\nexport const IfcTubeBundleType = 1733;\n\n/**\n * The object type defines the specific information about a type, being kdtree3 to all occurrences of this type. It refers to the specific level of the well recognized generic - specific - occurrance modeling paradigm. The IfcTypeObject gets assigned to the individual object instances (the occurrences) via the IfcRelDefinesByType relationship.\n */\nexport const IfcTypeObject = 1734;\n\n/**\n * IfcTypeProcess defines a specific (or type) definition of a process or activity without being assigned to a schedule or a time. It is used to define a process or activity specification, that is, the specific process or activity information that is kdtree3 to all occurrences that are defined for that process or activity type.\n */\nexport const IfcTypeProcess = 1735;\n\n/**\n * IfcTypeProduct defines a type definition of a product without being already inserted into a project structure (without having a placement), and not being included in the geometric representation context of the project. It is used to define a product specification, that is, the specific product information that is kdtree3 to all occurrences of that product type.\n */\nexport const IfcTypeProduct = 1736;\n\n/**\n * IfcTypeResource defines a specific (or type) definition of a resource. It is used to define a resource specification (the specific resource, that is kdtree3 to all occurrences that are defined for that resource) and could act as a resource template.\n */\nexport const IfcTypeResource = 1737;\n\n/**\n * A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat.\n */\nexport const IfcUnitaryControlElement = 1738;\n\n/**\n * The distribution control element type IfcUnitaryControlElementType defines commonly shared information for occurrences of unitary control elements. The set of shared information may include:\n */\nexport const IfcUnitaryControlElementType = 1739;\n\n/**\n * Unitary equipment typically combine a number of components into a single product, such as air handlers, pre-packaged rooftop air-conditioning units, heat pumps, and split systems.\n */\nexport const IfcUnitaryEquipment = 1740;\n\n/**\n * The energy conversion device type IfcUnitaryEquipmentType defines commonly shared information for occurrences of unitary equipments. The set of shared information may include:\n */\nexport const IfcUnitaryEquipmentType = 1741;\n\n/**\n * IfcUnitAssignment indicates a set of units which may be assigned. Within an IfcUnitAssigment each unit definition shall be unique; that is, there shall be no redundant unit definitions for the same unit type such as length unit or area unit. For currencies, there shall be only a single IfcMonetaryUnit within an IfcUnitAssignment.\n */\nexport const IfcUnitAssignment = 1742;\n\n/**\n * IfcUShapeProfileDef defines a section profile that provides the defining parameters of a U-shape (channel) section to be used by the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The centre of the position coordinate system is in the profile's centre of the bounding box.\n */\nexport const IfcUShapeProfileDef = 1743;\n\n/**\n * A valve is used in a building services piping distribution system to control or modulate the flow of the fluid.\n */\nexport const IfcValve = 1744;\n\n/**\n * The flow controller type IfcValveType defines commonly shared information for occurrences of valves. The set of shared information may include:\n */\nexport const IfcValveType = 1745;\n\n/**\n * An IfcVector is a geometric representation item having both a magnitude and direction. The magnitude of the vector is solely defined by the Magnitude attribute and the direction is solely defined by the Orientation attribute.\n */\nexport const IfcVector = 1746;\n\n/**\n *\n */\nexport const IfcVertex = 1747;\n\n/**\n *\n */\nexport const IfcVertexLoop = 1748;\n\n/**\n *\n */\nexport const IfcVertexPoint = 1749;\n\n/**\n * A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure.\n */\nexport const IfcVibrationIsolator = 1750;\n\n/**\n * The element component type IfcVibrationIsolatorType defines commonly shared information for occurrences of vibration isolators. The set of shared information may include:\n */\nexport const IfcVibrationIsolatorType = 1751;\n\n/**\n * A virtual element is a special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces. Virtual elements are usually not displayed and does not have quantities and other measures. Therefore IfcVirtualElement does not have material information and quantities attached.\n */\nexport const IfcVirtualElement = 1752;\n\n/**\n * IfcVirtualGridIntersection defines the derived location of the intersection between two grid axes. Offset values may be given to set an offset distance to the grid axis for the calculation of the virtual grid intersection.\n */\nexport const IfcVirtualGridIntersection = 1753;\n\n/**\n * A voiding feature is a modification of an element which reduces its volume. Such a feature may be manufactured in different ways, for example by cutting, drilling, or milling of members made of various materials, or by inlays into the formwork of cast members made of materials such as concrete.\n */\nexport const IfcVoidingFeature = 1754;\n\n/**\n * The wall represents a vertical construction that may bound or subdivide spaces. Wall are usually vertical, or nearly vertical, planar elements, often designed to bear structural loads. A wall is however not required to be load bearing.\n */\nexport const IfcWall = 1755;\n\n/**\n * The IfcWallElementedCase defines a wall with certain constraints for the provision of its components. The IfcWallElementedCase handles all cases of walls, that are decomposed into parts:\n */\nexport const IfcWallElementedCase = 1756;\n\n/**\n * The IfcWallStandardCase defines a wall with certain constraints for the provision of parameters and with certain constraints for the geometric representation. The IfcWallStandardCase handles all cases of walls, that are extruded vertically:\n */\nexport const IfcWallStandardCase = 1757;\n\n/**\n * The element type IfcWallType defines commonly shared information for occurrences of walls.\n */\nexport const IfcWallType = 1758;\n\n/**\n * A waste terminal has the purpose of collecting or intercepting waste from one or more sanitary terminals or other fluid waste generating equipment and discharging it into a single waste/drainage system.\n */\nexport const IfcWasteTerminal = 1759;\n\n/**\n * The flow terminal type IfcWasteTerminalType defines commonly shared information for occurrences of waste terminals. The set of shared information may include:\n */\nexport const IfcWasteTerminalType = 1760;\n\n/**\n * The window is a building element that is predominately used to provide natural light and fresh air. It includes vertical opening but also horizontal opening such as skylights or light domes. It includes constructions with swinging, pivoting, sliding, or revolving panels and fixed panels. A window consists of a lining and one or several panels.\n */\nexport const IfcWindow = 1761;\n\n/**\n * The window lining is the outer frame which enables the window to be fixed in position. The window lining is used to hold the window panels or other casements. The parameter of the IfcWindowLiningProperties define the geometrically relevant parameter of the lining.\n */\nexport const IfcWindowLiningProperties = 1762;\n\n/**\n * A window panel is a casement, that is, a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling of a window panel is normally glazing. The way of operation is defined in the operation type.\n */\nexport const IfcWindowPanelProperties = 1763;\n\n/**\n * The standard window, IfcWindowStandardCase, defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation. The IfcWindowStandardCase handles all cases of windows, that:\n */\nexport const IfcWindowStandardCase = 1764;\n\n/**\n * The window style defines a particular style of windows, which may be included into the spatial context of the building model through instances of IfcWindow. A window style defines the overall parameter of the window style and refers to the particular parameter of the lining and one (or several) panels through IfcWindowLiningProperties and IfcWindowPanelProperties.\n */\nexport const IfcWindowStyle = 1765;\n\n/**\n * The element type IfcWindowType defines commonly shared information for occurrences of windows. The set of shared information may include:\n */\nexport const IfcWindowType = 1766;\n\n/**\n * An IfcWorkCalendar defines working and non-working time periods for tasks and resources. It enables to define both specific time periods, such as from 7:00 till 12:00 on 25th August 2009, as well as repetitive time periods based on frequently used recurrence patterns, such as each Monday from 7:00 till 12:00 between 1st March 2009 and 31st December 2009.\n */\nexport const IfcWorkCalendar = 1767;\n\n/**\n * An IfcWorkControl is an abstract supertype which captures information that is kdtree3 to both IfcWorkPlan and IfcWorkSchedule.\n */\nexport const IfcWorkControl = 1768;\n\n/**\n * An IfcWorkPlan represents work plans in a construction or a facilities management project.\n */\nexport const IfcWorkPlan = 1769;\n\n/**\n * An IfcWorkSchedule represents a task schedule of a work plan, which in turn can contain a set of schedules for different purposes.\n */\nexport const IfcWorkSchedule = 1770;\n\n/**\n * IfcWorkTime defines time periods that are used by IfcWorkCalendar for either describing working times or non-working exception times. Besides start and finish dates, a set of time periods can be given by various types of recurrence patterns.\n */\nexport const IfcWorkTime = 1771;\n\n/**\n * A zone is a group of spaces, partial spaces or other zones. Zone structures may not be hierarchical (in contrary to the spatial structure of a project - see IfcSpatialStructureElement), i.e. one individual IfcSpace may be associated with zero, one, or several IfcZone's. IfcSpace's are grouped into an IfcZone by using the objectified relationship IfcRelAssignsToGroup as specified at the supertype IfcGroup.\n */\nexport const IfcZone = 1772;\n\n/**\n * IfcZShapeProfileDef defines a section profile that provides the defining parameters of a Z-shape section to be used by the swept area solid. Its parameters and orientation relative to the position coordinate system are according to the following illustration. The centre of the position coordinate system is in the profile's centre of the bounding box.\n */\nexport const IfcZShapeProfileDef = 1773;\n\n/**\n * Map of names for all supported IFC types.\n */\nexport const typeNames: { [key: number]: string } = {\n    // TODO\n};\n\n/**\n * Map of type codes for all IFC type names.\n */\nexport const typeCodes: { [key: string]: number } = {\n   // TODO\n};\n","/** @private */\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n        (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n        (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n        (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n            intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n            (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\nexport {earcut};","import {\n    createVec2,\n    createVec3,\n    cross3Vec3,\n    dotVec3,\n    lenVec3,\n    mulVec3Scalar,\n    normalizeVec3,\n    subVec3\n} from \"@xeokit/matrix\";\nimport type {SceneModel} from \"@xeokit/scene\";\nimport type {DataModel} from \"@xeokit/data\";\n// @ts-ignore\nimport {earcut} from './earcut';\nimport {TrianglesPrimitive} from \"@xeokit/constants\";\nimport {BasicAggregation} from \"@xeokit/basictypes\";\nimport {typeCodes} from \"@xeokit/cityjsontypes_1_1_3\";\nimport {SDKError} from \"@xeokit/core\";\n\nconst tempVec2a = createVec2();\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\n\n/**\n * Loads CityJSON into a {@link @xeokit/scene!SceneModel | SceneModel} and/or a {@link @xeokit/data!DataModel | DataModel}.\n *\n * * Expects {@link @xeokit/scene!SceneModel.built | SceneModel.built} and {@link @xeokit/scene!SceneModel.destroyed | SceneModel.destroyed} to be ````false````\n * * Does not call {@link @xeokit/scene!SceneModel.build | SceneModel.build} - we call that ourselves, when we have finished building the SceneModel\n *\n * See {@link \"@xeokit/cityjson\"} for usage.\n *\n * @param params - Loading parameters.\n * @param params.fileData - CityJSON file data.\n * @param params.sceneModel - SceneModel to load into.\n * @param params.dataModel - DataModel to load into.\n * @param options - CityJSON loading options\n * @param options.rotateX - True to rotate the model about the X-axis. Default is false.\n * @returns {Promise} Resolves when CityJSON has been loaded into the SceneModel and/or DataModel.\n * @throws *{@link @xeokit/core!SDKError}*\n * * If the SceneModel has already been destroyed.\n * * If the SceneModel has already been built.\n * * If the DataModel has already been destroyed.\n * * If the DataModel has already been built.\n */\nexport function loadCityJSON(params: {\n                                 fileData: any,\n                                 sceneModel: SceneModel,\n                                 dataModel?: DataModel\n                             },\n                             options: {\n                                 rotateX?: boolean;\n                             } = {\n                                 rotateX: false\n                             }): Promise<any> {\n    if (params.sceneModel) {\n        if (params.sceneModel.destroyed) {\n            return Promise.reject(new SDKError(\"SceneModel already destroyed\"));\n        }\n        if (params.sceneModel.built) {\n            return Promise.reject(new SDKError(\"SceneModel already built\"));\n        }\n    }\n    if (params.dataModel) {\n        if (params.dataModel.destroyed) {\n            return Promise.reject(new SDKError(\"DataModel already destroyed\"));\n        }\n        if (params.dataModel.built) {\n            return Promise.reject(new SDKError(\"DataModel already built\"));\n        }\n    }\n    const fileData = params.fileData;\n    const ctx = {\n        fileData,\n        vertices: (fileData.transform && params.sceneModel)\n            ? transformVertices(fileData.vertices, fileData.transform, options.rotateX)\n            : fileData.vertices,\n        sceneModel: params.sceneModel,\n        dataModel: params.dataModel,\n        nextId: 0\n    };\n    parseCityJSON(ctx);\n    return Promise.resolve();\n}\n\nfunction transformVertices(vertices: any, transform: any, rotateX?: boolean) {\n    const transformedVertices = [];\n    const scale = transform.scale || createVec3([1, 1, 1]);\n    const translate = transform.translate || createVec3([0, 0, 0]);\n    for (let i = 0, j = 0; i < vertices.length; i++, j += 3) {\n        const x = (vertices[i][0] * scale[0]) + translate[0];\n        const y = (vertices[i][1] * scale[1]) + translate[1];\n        const z = (vertices[i][2] * scale[2]) + translate[2];\n        if (rotateX) {\n            transformedVertices.push([x, z, y]);\n        } else {\n            transformedVertices.push([x, y, z]);\n        }\n    }\n    return transformedVertices;\n}\n\nfunction parseCityJSON(ctx: any) {\n    const fileData = ctx.fileData;\n    const cityObjects = fileData.CityObjects;\n    for (const objectId in cityObjects) {\n        parseCityObject(ctx, cityObjects[objectId], objectId);\n    }\n    if (ctx.dataModel) {\n        for (const objectId in cityObjects) {\n            parseRelationship(ctx, cityObjects[objectId], objectId);\n        }\n    }\n}\n\nfunction parseCityObject(ctx: any, cityObject: any, objectId: any) {\n    if (ctx.dataModel) {\n        ctx.dataModel.createObject({\n            id: objectId,\n            name: cityObject.type + \" : \" + objectId,\n            type: typeCodes[cityObject.type] | 0,\n            parent: cityObject.parents ? cityObject.parents[0] : null\n        });\n    }\n    if (ctx.sceneModel) {\n        if (!(cityObject.geometry && cityObject.geometry.length > 0)) {\n            return;\n        }\n        const meshIds: string | any[] = [];\n        for (let i = 0, len = cityObject.geometry.length; i < len; i++) {\n            const geometry = cityObject.geometry[i];\n            let objectMaterial;\n            let surfaceMaterials;\n            const appearance = ctx.fileData.appearance;\n            if (appearance) {\n                const materials = appearance.materials;\n                if (materials) {\n                    const geometryMaterial = geometry.material;\n                    if (geometryMaterial) {\n                        const themeIds = Object.keys(geometryMaterial);\n                        if (themeIds.length > 0) {\n                            const themeId = themeIds[0];\n                            const theme = geometryMaterial[themeId];\n                            if (theme.value !== undefined) {\n                                objectMaterial = materials[theme.value];\n                            } else {\n                                const values = theme.values;\n                                if (values) {\n                                    surfaceMaterials = [];\n                                    for (let j = 0, lenj = values.length; j < lenj; j++) {\n                                        const value = values[i];\n                                        const surfaceMaterial = materials[value];\n                                        surfaceMaterials.push(surfaceMaterial);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (surfaceMaterials) {\n                parseGeometrySurfacesWithOwnMaterials(ctx, geometry, surfaceMaterials, meshIds);\n            } else {\n                parseGeometrySurfacesWithSharedMaterial(ctx, geometry, objectMaterial, meshIds);\n            }\n        }\n        if (meshIds.length > 0) {\n            ctx.sceneModel.createObject({\n                id: objectId,\n                meshIds: meshIds\n            });\n        }\n    }\n}\n\nfunction parseRelationship(ctx: any, cityObject: any, objectId: any) {\n    if (cityObject.parents) {\n        ctx.dataModel.createRelationship({\n            relatingObjectId: cityObject.parents[0],\n            relatedObjectId: objectId,\n            type: BasicAggregation\n        });\n    }\n}\n\nfunction parseGeometrySurfacesWithOwnMaterials(ctx: any, geometry: any, surfaceMaterials: any, meshIds: any) {\n    const geomType = geometry.type;\n    switch (geomType) {\n        case \"MultiPoint\":\n            break;\n        case \"MultiLineString\":\n            break;\n        case \"MultiSurface\":\n        case \"CompositeSurface\":\n            const surfaces = geometry.boundaries;\n            parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n            break;\n        case \"Solid\":\n            const shells = geometry.boundaries;\n            for (let j = 0; j < shells.length; j++) {\n                const surfaces = shells[j];\n                parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n            }\n            break;\n        case \"MultiSolid\":\n        case \"CompositeSolid\":\n            const solids = geometry.boundaries;\n            for (let j = 0; j < solids.length; j++) {\n                for (let k = 0; k < solids[j].length; k++) {\n                    const surfaces = solids[j][k];\n                    parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n                }\n            }\n            break;\n        case \"GeometryInstance\":\n            break;\n    }\n}\n\nfunction parseSurfacesWithOwnMaterials(ctx: any, surfaceMaterials: any, surfaces: any, meshIds: any) {\n    const vertices = ctx.vertices;\n    const sceneModel = ctx.sceneModel;\n    for (let i = 0; i < surfaces.length; i++) {\n        const surface = surfaces[i];\n        const surfaceMaterial = surfaceMaterials[i] || {diffuseColor: [0.8, 0.8, 0.8], transparency: 1.0};\n        const face = [];\n        const holes = [];\n        const sharedIndices: any[] = [];\n        const geometryCfg: any = {\n            positions: [],\n            indices: []\n        };\n        for (let j = 0; j < surface.length; j++) {\n            if (face.length > 0) {\n                holes.push(face.length);\n            }\n            const newFace = extractLocalIndices(ctx, surface[j], sharedIndices, geometryCfg);\n            face.push(...newFace);\n        }\n        if (face.length === 3) { // Triangle\n            geometryCfg.indices.push(face[0]);\n            geometryCfg.indices.push(face[1]);\n            geometryCfg.indices.push(face[2]);\n        } else if (face.length > 3) { // Polygon\n            // Prepare to triangulate\n            const pList = [];\n            for (let k = 0; k < face.length; k++) {\n                pList.push({\n                    x: vertices[sharedIndices[face[k]]][0],\n                    y: vertices[sharedIndices[face[k]]][1],\n                    z: vertices[sharedIndices[face[k]]][2]\n                });\n            }\n            const normal = getNormalOfPositions(pList, createVec3());\n            // Convert to 2D\n            let pv = [];\n            for (let k = 0; k < pList.length; k++) {\n                to2D(pList[k], normal, tempVec2a);\n                pv.unshift(tempVec2a[0]);\n                pv.unshift(tempVec2a[1]);\n            }\n            // Triangulate\n            const tr = earcut(pv, holes, 2);\n            // Create triangles\n            for (let k = 0; k < tr.length; k += 3) {\n                geometryCfg.indices.unshift(face[tr[k]]);\n                geometryCfg.indices.unshift(face[tr[k + 1]]);\n                geometryCfg.indices.unshift(face[tr[k + 2]]);\n            }\n        }\n        const geometryId = \"\" + ctx.nextId++;\n        sceneModel.createGeometry({\n            id: geometryId,\n            primitive: TrianglesPrimitive,\n            positions: geometryCfg.positions,\n            indices: geometryCfg.indices\n        });\n        const meshId = \"\" + ctx.nextId++;\n        sceneModel.createMesh({\n            id: meshId,\n            geometryId,\n            color: (surfaceMaterial && surfaceMaterial.diffuseColor) ? surfaceMaterial.diffuseColor : [0.8, 0.8, 0.8],\n            opacity: (surfaceMaterial && surfaceMaterial.transparency !== undefined) ? (1.0 - surfaceMaterial.transparency) : 1.0\n        });\n        meshIds.push(meshId);\n    }\n}\n\nfunction parseGeometrySurfacesWithSharedMaterial(ctx: any, geometry: any, objectMaterial: any, meshIds: any) {\n    const sceneModel = ctx.sceneModel;\n    const sharedIndices: any = [];\n    const geometryCfg: any = {\n        positions: [],\n        indices: []\n    };\n    const geomType = geometry.type;\n    switch (geomType) {\n        case \"MultiPoint\":\n            break;\n        case \"MultiLineString\":\n            break;\n        case \"MultiSurface\":\n        case \"CompositeSurface\":\n            const surfaces = geometry.boundaries;\n            parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n            break;\n        case \"Solid\":\n            const shells = geometry.boundaries;\n            for (let j = 0; j < shells.length; j++) {\n                const surfaces = shells[j];\n                parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n            }\n            break;\n        case \"MultiSolid\":\n        case \"CompositeSolid\":\n            const solids = geometry.boundaries;\n            for (let j = 0; j < solids.length; j++) {\n                for (let k = 0; k < solids[j].length; k++) {\n                    const surfaces = solids[j][k];\n                    parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n                }\n            }\n            break;\n        case \"GeometryInstance\":\n            break;\n    }\n    if (geometryCfg.positions.length > 0 && geometryCfg.indices.length > 0) {\n        const geometryId = \"\" + ctx.nextId++;\n        sceneModel.createGeometry({\n            id: geometryId,\n            primitive: TrianglesPrimitive,\n            positions: geometryCfg.positions,\n            indices: geometryCfg.indices\n        });\n        const meshId = \"\" + ctx.nextId++;\n        sceneModel.createMesh({\n            id: meshId,\n            geometryId,\n            color: (objectMaterial && objectMaterial.diffuseColor) ? objectMaterial.diffuseColor : [0.8, 0.8, 0.8],\n            opacity: 1.0\n        });\n        meshIds.push(meshId);\n    }\n}\n\nfunction parseSurfacesWithSharedMaterial(ctx: any, surfaces: any, sharedIndices: any, primitiveCfg: any) {\n    const vertices = ctx.vertices;\n    for (let i = 0; i < surfaces.length; i++) {\n        let boundary = [];\n        let holes = [];\n        for (let j = 0; j < surfaces[i].length; j++) {\n            if (boundary.length > 0) {\n                holes.push(boundary.length);\n            }\n            const newBoundary = extractLocalIndices(ctx, surfaces[i][j], sharedIndices, primitiveCfg);\n            boundary.push(...newBoundary);\n        }\n        if (boundary.length === 3) { // Triangle\n            primitiveCfg.indices.push(boundary[0]);\n            primitiveCfg.indices.push(boundary[1]);\n            primitiveCfg.indices.push(boundary[2]);\n        } else if (boundary.length > 3) { // Polygon\n            let pList = [];\n            for (let k = 0; k < boundary.length; k++) {\n                pList.push({\n                    x: vertices[sharedIndices[boundary[k]]][0],\n                    y: vertices[sharedIndices[boundary[k]]][1],\n                    z: vertices[sharedIndices[boundary[k]]][2]\n                });\n            }\n            const normal = getNormalOfPositions(pList, createVec3());\n            let pv = [];\n            for (let k = 0; k < pList.length; k++) {\n                to2D(pList[k], normal, tempVec2a);\n                pv.unshift(tempVec2a[0]);\n                pv.unshift(tempVec2a[1]);\n            }\n            const tr = earcut(pv, holes, 2);\n            for (let k = 0; k < tr.length; k += 3) {\n                primitiveCfg.indices.unshift(boundary[tr[k]]);\n                primitiveCfg.indices.unshift(boundary[tr[k + 1]]);\n                primitiveCfg.indices.unshift(boundary[tr[k + 2]]);\n            }\n        }\n    }\n}\n\nfunction extractLocalIndices(ctx: any, boundary: any, sharedIndices: any, geometryCfg: any) {\n    const vertices = ctx.vertices;\n    const newBoundary = []\n    for (let i = 0, len = boundary.length; i < len; i++) {\n        const index = boundary[i];\n        if (sharedIndices.includes(index)) {\n            const vertexIndex = sharedIndices.indexOf(index);\n            newBoundary.push(vertexIndex);\n        } else {\n            geometryCfg.positions.push(vertices[index][0]);\n            geometryCfg.positions.push(vertices[index][1]);\n            geometryCfg.positions.push(vertices[index][2]);\n            newBoundary.push(sharedIndices.length);\n            sharedIndices.push(index);\n        }\n    }\n    return newBoundary\n}\n\nfunction getNormalOfPositions(positions: any, normal: any) {\n    for (let i = 0; i < positions.length; i++) {\n        let nexti = i + 1;\n        if (nexti === positions.length) {\n            nexti = 0;\n        }\n        normal[0] += ((positions[i].y - positions[nexti].y) * (positions[i].z + positions[nexti].z));\n        normal[1] += ((positions[i].z - positions[nexti].z) * (positions[i].x + positions[nexti].x));\n        normal[2] += ((positions[i].x - positions[nexti].x) * (positions[i].y + positions[nexti].y));\n    }\n    return normalizeVec3(normal);\n}\n\nfunction to2D(_p: any, _n: any, re: any) {\n    const p = tempVec3a;\n    const n = tempVec3b;\n    const x3 = tempVec3c;\n    p[0] = _p.x;\n    p[1] = _p.y;\n    p[2] = _p.z;\n    n[0] = _n.x;\n    n[1] = _n.y;\n    n[2] = _n.z;\n    x3[0] = 1.1;\n    x3[1] = 1.1;\n    x3[2] = 1.1;\n    const dist = lenVec3(subVec3(x3, n));\n    if (dist < 0.01) {\n        x3[0] += 1.0;\n        x3[1] += 2.0;\n        x3[2] += 3.0;\n    }\n    const dot = dotVec3(x3, n);\n    const tmp2 = mulVec3Scalar(n, dot, createVec3());\n    x3[0] -= tmp2[0];\n    x3[1] -= tmp2[1];\n    x3[2] -= tmp2[2];\n    normalizeVec3(x3);\n    const y3 = cross3Vec3(n, x3, createVec3());\n    const x = dotVec3(p, x3);\n    const y = dotVec3(p, y3);\n    re[0] = x;\n    re[1] = y;\n}","import type {SceneModel} from \"@xeokit/scene\";\nimport type {DataModel} from \"@xeokit/data\";\nimport {SDKError} from \"@xeokit/core\";\nimport {TrianglesPrimitive} from \"@xeokit/constants\";\n\n\n/**\n * Loads .BIM into a {@link @xeokit/scene!SceneModel | SceneModel} and/or a {@link @xeokit/data!DataModel | DataModel}.\n *\n * * Expects {@link @xeokit/scene!SceneModel.built | SceneModel.built} and {@link @xeokit/scene!SceneModel.destroyed | SceneModel.destroyed} to be ````false````\n * * Does not call {@link @xeokit/scene!SceneModel.build | SceneModel.build} - we call that ourselves, when we have finished building the SceneModel\n *\n * See {@link \"@xeokit/dotbim\"} for usage.\n *\n * @param params - Loading parameters.\n * @param params.fileData - .BIM file data.\n * @param params.sceneModel - SceneModel to load into.\n * @param params.dataModel - DataModel to load into.\n * @param options - .BIM loading options\n * @param options.error - Callback to log any non-fatal errors that occur while loading.\n * @returns {Promise} Resolves when .BIM has been loaded into the SceneModel and/or DataModel.\n * @throws *{@link @xeokit/core!SDKError}*\n * * If the SceneModel has already been destroyed.\n * * If the SceneModel has already been built.\n * * If the DataModel has already been destroyed.\n * * If the DataModel has already been built.\n */\nexport function loadDotBIM(params: {\n                               fileData: any,\n                               sceneModel: SceneModel,\n                               dataModel?: DataModel\n                           },\n                           options: {\n                               error?: (errMsg: string) => void;\n                           } = {}): Promise<any> {\n    return new Promise<void>(function (resolve, reject) {\n        if (params.sceneModel.destroyed) {\n            throw new SDKError(\"SceneModel already destroyed\");\n        }\n        if (params.sceneModel.built) {\n            throw new SDKError(\"SceneModel already built\");\n        }\n        if (params.dataModel) {\n            if (params.dataModel.destroyed) {\n                throw new SDKError(\"DataModel already destroyed\");\n            }\n            if (params.dataModel.built) {\n                throw new SDKError(\"DataModel already built\");\n            }\n        }\n        const fileData = params.fileData;\n        const ctx = {\n            fileData,\n            sceneModel: params.sceneModel,\n            dataModel: params.dataModel,\n            nextId: 0,\n            error: options.error || function (errMsg: string) {\n            }\n        };\n        parseDotBIM(ctx);\n        resolve();\n    });\n}\n\nfunction parseDotBIM(ctx: any) {\n    const fileData = ctx.fileData;\n    const meshes = fileData.meshes;\n    for (let i = 0, len = meshes.length; i < len; i++) {\n        const mesh = meshes[i];\n        const geometry = ctx.sceneModel.createGeometry({\n            id: mesh.mesh_id,\n            primitive: TrianglesPrimitive,\n            positions: mesh.coordinates,\n            indices: mesh.indices\n        });\n        if (geometry instanceof SDKError) {\n            ctx.error(`[SceneModel.createGeometry]: ${geometry.message}`);\n        }\n    }\n    const elements = fileData.elements;\n    for (let i = 0, len = elements.length; i < len; i++) {\n        const element = elements[i];\n        const objectId = \"\" + element.guid;\n        if (ctx.sceneModel) {\n            const geometryId = element.mesh_id;\n            const meshId = `${objectId}-mesh-${i}`;\n            const mesh = ctx.sceneModel.createMesh({\n                id: meshId,\n                geometryId,\n                baseColor: element.color\n            });\n            if (mesh instanceof SDKError) {\n                ctx.error(`[SceneModel.createMesh]: ${mesh.message}`);\n                continue;\n            }\n            const sceneObject = ctx.sceneModel.createObject({\n                id: objectId,\n                meshIds: [meshId]\n            });\n            if (sceneObject instanceof SDKError) {\n                ctx.error(`[SceneModel.createObject]: ${sceneObject.message}`);\n                continue;\n            }\n        }\n        if (ctx.dataModel) {\n            if (!ctx.dataModel.objects[element.guid]) {\n                const dataObject = ctx.dataModel.createObject({\n                    id: objectId,\n                    type: element.type\n                });\n                if (dataObject instanceof SDKError) {\n                    ctx.error(`[SceneModel.createObject]: ${dataObject.message}`);\n                }\n            }\n        }\n    }\n}\n","import type {FloatArrayParam} from \"@xeokit/math\";\n\nimport type {ViewLayer} from \"./ViewLayer\";\nimport type {SceneObject} from \"@xeokit/scene\";\nimport type {RendererViewObject} from \"./RendererViewObject\";\n\n/**\n * Represents and controls the visual state of a {@link @xeokit/scene!SceneModel | SceneObject} in\n * a {@link @xeokit/viewer!View |View's} canvas.\n *\n * ## Summary\n *\n * * Stored in {@link View.objects | View.objects} and {@link ViewLayer.objects | ViewLayer.objects}\n * * Viewer automatically creates one of these in each existing {@link @xeokit/viewer!View} for each {@link @xeokit/scene!SceneModel | SceneObject} created\n * * {@link SceneObject.layerId | SceneObject.layerId} determines which of the View's {@link ViewLayer | ViewLayers} to put the ViewObject in\n *\n * ## Overview\n *\n * Every View automatically maintains within itself a ViewObject for each {@link @xeokit/scene!SceneModel | SceneObject} that exists in the {@link @xeokit/viewer!Viewer}.\n *\n * Whenever we create a SceneObject, each View will automatically create a corresponding ViewObject within itself. When\n * we destroy a SceneObject, each View will automatically destroy its corresponding ViewObject. The ViewObjects in a View\n * are therefore a manifest of the ViewerObjects in the View.\n *\n * {@link ViewLayer}.\n */\nexport class ViewObject {\n\n    /**\n     * Unique ID of this ViewObject within {@link ViewLayer.objects}.\n     */\n    public readonly id: string;\n\n    /**\n     * The ViewLayer to which this ViewObject belongs.\n     */\n    public readonly layer: ViewLayer;\n\n    /**\n     * The corresponding {@link SceneObject}.\n     */\n    public readonly sceneObject: SceneObject;\n\n    /**\n     * The corresponding {@link RendererViewObject}.\n     * @internal\n     */\n    #rendererViewObject: RendererViewObject;\n\n    #state: {\n        visible: boolean;\n        culled: boolean;\n        pickable: boolean;\n        clippable: boolean;\n        collidable: boolean;\n        xrayed: boolean;\n        selected: boolean;\n        highlighted: boolean;\n        edges: boolean;\n        colorize: Float32Array;\n        colorized: boolean;\n        opacityUpdated: boolean;\n    };\n\n    /**\n     * @private\n     */\n    constructor(layer: ViewLayer, sceneObject: SceneObject, rendererViewObject: RendererViewObject) {\n\n        this.id = sceneObject.id;\n        this.layer = layer;\n        this.sceneObject = sceneObject;\n        this.#rendererViewObject = rendererViewObject;\n\n        this.#state = {\n            visible: true,\n            culled: false,\n            pickable: true,\n            clippable: true,\n            collidable: true,\n            xrayed: false,\n            selected: false,\n            highlighted: false,\n            edges: false,\n            colorize: new Float32Array(4),\n            colorized: false,\n            opacityUpdated: false,\n        };\n\n        this.#rendererViewObject.setVisible(this.layer.view.viewIndex, this.#state.visible);\n        this.layer.objectVisibilityUpdated(this, this.#state.visible, true);\n    }\n\n    /**\n     * Gets the World-space axis-aligned 3D boundary of this ViewObject.\n     */\n    get aabb(): FloatArrayParam {\n        return this.sceneObject.aabb;\n    }\n\n    /**\n     * Gets if this ViewObject is visible.\n     *\n     * * When {@link ViewObject.visible} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.visibleObjects}.\n     * * Each ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsVisible} to batch-update the visibility of ViewObjects, which fires a single event for the batch.\n     */\n    get visible(): boolean {\n        return this.#state.visible;\n    }\n\n    /**\n     * Sets if this ViewObject is visible.\n     *\n     * * When {@link ViewObject.visible} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.visibleObjects}.\n     * * Each ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Fires an \"objectVisibility\" event on associated {@link ViewLayer}s.\n     * * Use {@link ViewLayer.setObjectsVisible} to batch-update the visibility of ViewObjects, which fires a single event for the batch.\n     */\n    set visible(visible: boolean) {\n        if (visible === this.#state.visible) {\n            return;\n        }\n        this.#state.visible = visible;\n        this.#rendererViewObject.setVisible(this.layer.view.viewIndex, visible);\n        this.layer.objectVisibilityUpdated(this, visible, true);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is X-rayed.\n     *\n     * * When {@link ViewObject.xrayed} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.xrayedObjects | ViewLayer.xrayedObjects}.\n     * * Use {@link ViewLayer.setObjectsXRayed} to batch-update the X-rayed state of ViewObjects.\n     */\n    get xrayed(): boolean {\n        return this.#state.xrayed;\n    }\n\n    /**\n     * Sets if this ViewObject is X-rayed.\n     *\n     * * When {@link ViewObject.xrayed} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.xrayedObjects | ViewLayer.xrayedObjects}.\n     * * Use {@link ViewLayer.setObjectsXRayed} to batch-update the X-rayed state of ViewObjects.\n     */\n    set xrayed(xrayed: boolean) {\n        if (this.#state.xrayed === xrayed) {\n            return;\n        }\n        this.#state.xrayed = xrayed;\n        this.#rendererViewObject.setXRayed(this.layer.view.viewIndex, xrayed);\n        this.layer.objectXRayedUpdated(this, xrayed);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject shows edges.\n     */\n    get edges(): boolean {\n        return this.#state.edges;\n    }\n\n    /**\n     * Sets if this ViewObject shows edges.\n     */\n    set edges(edges: boolean) {\n        if (this.#state.edges === edges) {\n            return;\n        }\n        this.#state.edges = edges;\n        this.#rendererViewObject.setEdges(this.layer.view.viewIndex, edges);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is highlighted.\n     *\n     * * When {@link ViewObject.highlighted} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.highlightedObjects | ViewLayer.highlightedObjects}.\n     * * Use {@link ViewLayer.setObjectsHighlighted} to batch-update the highlighted state of ViewObjects.\n     */\n    get highlighted(): boolean {\n        return this.#state.highlighted;\n    }\n\n    /**\n     * Sets if this ViewObject is highlighted.\n     *\n     * * When {@link ViewObject.highlighted} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.highlightedObjects | ViewLayer.highlightedObjects}.\n     * * Use {@link ViewLayer.setObjectsHighlighted} to batch-update the highlighted state of ViewObjects.\n     */\n    set highlighted(highlighted: boolean) {\n        if (highlighted === this.#state.highlighted) {\n            return;\n        }\n        this.#state.highlighted = highlighted;\n        this.#rendererViewObject.setHighlighted(\n            this.layer.view.viewIndex,\n            highlighted\n        );\n        this.layer.objectHighlightedUpdated(this, highlighted);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is selected.\n     *\n     * * When {@link ViewObject.selected} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.selectedObjects | ViewLayer.selectedObjects}.\n     * * Use {@link ViewLayer.setObjectsSelected} to batch-update the selected state of ViewObjects.\n     */\n    get selected(): boolean {\n        return this.#state.selected;\n    }\n\n    /**\n     * Sets if this ViewObject is selected.\n     *\n     * * When {@link ViewObject.selected} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.selectedObjects | ViewLayer.selectedObjects}.\n     * * Use {@link ViewLayer.setObjectsSelected} to batch-update the selected state of ViewObjects.\n     */\n    set selected(selected: boolean) {\n        if (selected === this.#state.selected) {\n            return;\n        }\n        this.#state.selected = selected;\n        this.#rendererViewObject.setSelected(this.layer.view.viewIndex, selected);\n        this.layer.objectSelectedUpdated(this, selected);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is culled.\n     *\n     * * The ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsCulled} to batch-update the culled state of ViewObjects.\n     */\n    get culled(): boolean {\n        return this.#state.culled;\n    }\n\n    /**\n     * Sets if this ViewObject is culled.\n     *\n     * * The ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsCulled} to batch-update the culled state of ViewObjects.\n     */\n    set culled(culled: boolean) {\n        if (culled === this.#state.culled) {\n            return;\n        }\n        this.#state.culled = culled;\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is clippable.\n     *\n     * * Clipping is done by the {@link SectionPlane}s in {@link ViewLayer.sectionPlanes}.\n     * * Use {@link ViewLayer.setObjectsClippable} to batch-update the clippable state of ViewObjects.\n     */\n    get clippable(): boolean {\n        return this.#state.clippable;\n    }\n\n    /**\n     * Sets if this ViewObject is clippable.\n     *\n     * * Clipping is done by the {@link SectionPlane}s in {@link ViewLayer.sectionPlanes}.\n     * * Use {@link ViewLayer.setObjectsClippable} to batch-update the clippable state of ViewObjects.\n     */\n    set clippable(value: boolean) {\n        if (value === this.#state.clippable) {\n            return;\n        }\n        this.#state.clippable = value;\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is included in boundary calculations.\n     *\n     * * When ````true````, the 3D World boundaries returned by {@link ViewLayer.aabb} will include this ViewObject's boundary.\n     * * The ViewObject's 3D boundary is held in {@link SceneObject.aabb}.\n     * * Use {@link ViewLayer.setObjectsCollidable} to batch-update the collidable state of ViewObjects.\n     */\n    get collidable(): boolean {\n        return this.#state.collidable;\n    }\n\n    /**\n     * Sets if this ViewObject included in boundary calculations.\n     *\n     * * When ````true````, the 3D World boundaries returned by {@link ViewLayer.aabb} will include this ViewObject's boundary.\n     * * The ViewObject's 3D boundary is held in {@link SceneObject.aabb}.\n     * * Use {@link ViewLayer.setObjectsCollidable} to batch-update the collidable state of ViewObjects.\n     */\n    set collidable(value: boolean) {\n        if (value === this.#state.collidable) {\n            return;\n        }\n        this.#state.collidable = value;\n        // this._setAABBDirty();\n        // this.layer._aabbDirty = true;\n    }\n\n    /**\n     * Gets if this ViewObject is pickable.\n     *\n     * * Picking is done with {@link ViewLayer.pick}.\n     * * Use {@link ViewLayer.setObjectsPickable} to batch-update the pickable state of ViewObjects.\n     */\n    get pickable(): boolean {\n        return this.#state.pickable;\n    }\n\n    /**\n     * Sets if this ViewObject is pickable.\n     *\n     * * Picking is done with {@link ViewLayer.pick}.\n     * * Use {@link ViewLayer.setObjectsPickable} to batch-update the pickable state of ViewObjects.\n     */\n    set pickable(pickable: boolean) {\n        if (this.#state.pickable === pickable) {\n            return;\n        }\n        this.#state.pickable = pickable;\n        // No need to trigger a render;\n        // state is only used when picking\n    }\n\n    /**\n     * Gets the RGB colorize color for this ViewObject.\n     *\n     * * Multiplies by rendered fragment colors.\n     * * Each element of the color is in range ````[0..1]````.\n     * * Use {@link ViewLayer.setObjectsColorized} to batch-update the colorized state of ViewObjects.\n     */\n    get colorize(): Float32Array {\n        return this.#state.colorize;\n    }\n\n    /**\n     * Sets the RGB colorize color for this ViewObject.\n     *\n     * * Multiplies by rendered fragment colors.\n     * * Each element of the color is in range ````[0..1]````.\n     * * Set to ````null```` or ````undefined```` to reset the colorize color to its default value of ````[1,1,1]````.\n     * * Use {@link ViewLayer.setObjectsColorized} to batch-update the colorized state of ViewObjects.\n     */\n    set colorize(value: FloatArrayParam | undefined | null) {\n        let colorize = this.#state.colorize;\n        if (value) {\n            colorize[0] = value[0];\n            colorize[1] = value[1];\n            colorize[2] = value[2];\n        } else {\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        this.#state.colorized = !!value;\n        this.layer.objectColorizeUpdated(this, this.#state.colorized);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets the opacity factor for this ViewObject.\n     *\n     * * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     * * Use {@link ViewLayer.setObjectsOpacity} to batch-update the opacities of ViewObjects.\n     */\n    get opacity(): number {\n        return this.#state.colorize[3];\n    }\n\n    /**\n     * Sets the opacity factor for this ViewObject.\n     *\n     * * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     * * Set to ````null```` or ````undefined```` to reset the opacity to its default value of ````1````.\n     * * Use {@link ViewLayer.setObjectsOpacity} to batch-update the opacities of ViewObjects.\n     */\n    set opacity(opacity: number | undefined | null) {\n        let colorize = this.#state.colorize;\n        this.#state.opacityUpdated = opacity !== null && opacity !== undefined;\n        // @ts-ignore\n        colorize[3] = this.#state.opacityUpdated ? opacity : 1.0;\n        this.layer.objectOpacityUpdated(this, this.#state.opacityUpdated);\n        this.layer.redraw();\n    }\n\n    /**\n     * @private\n     */\n    _destroy() {\n        // Called by ViewLayer#destroyViewObjects\n        if (this.#state.visible) {\n            this.layer.objectVisibilityUpdated(this, false, false);\n        }\n        if (this.#state.xrayed) {\n            this.layer.objectXRayedUpdated(this, false);\n        }\n        if (this.#state.selected) {\n            this.layer.objectSelectedUpdated(this, false);\n        }\n        if (this.#state.highlighted) {\n            this.layer.objectHighlightedUpdated(this, false);\n        }\n        if (this.#state.colorized) {\n            this.layer.objectColorizeUpdated(this, false);\n        }\n        if (this.#state.opacityUpdated) {\n            this.layer.objectOpacityUpdated(this, false);\n        }\n        this.layer.redraw();\n    }\n}\n\n","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\n\nimport * as matrix from '@xeokit/matrix';\n\n\nimport type {View} from \"./View\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\n\n/**\n *  An arbitrarily-aligned World-space clipping plane.\n *\n * ## Summary\n *\n * * Belongs to a {@link @xeokit/viewer!View}.\n * * Slices portions off {@link ViewObject | ViewObjects} to create cross-section views or reveal interiors.\n * * Registered by {@link SectionPlane.id} in {@link View.sectionPlanes}.\n * * Indicates its World-space position in {@link SectionPlane.pos} and orientation vector in {@link SectionPlane.dir}.\n * * Discards elements from the half-space in the direction of {@link SectionPlane.dir}.\n * * Can be be enabled or disabled via {@link SectionPlane.active}.\n *\n * ## Usage\n *\n * In the example below, we'll create two SectionPlanes to slice a model loaded from glTF. Note that we could also create them\n * using a {@link SectionPlanesPlugin}.\n *\n * ````javascript\n * import {Viewer, GLTFLoaderPlugin, SectionPlane} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * const gltfLoaderPlugin = new GLTFModelsPlugin(viewer, {\n *      id: \"GLTFModels\"\n * });\n *\n * const model = gltfLoaderPlugin.load({\n *      id: \"myModel\",\n *      src: \"./models/gltf/mygltfmodel.gltf\"\n * });\n *\n * // Create a SectionPlane on negative diagonal\n * const sectionPlane1 = new SectionPlane(viewer.scene, {\n *     pos: [1.0, 1.0, 1.0],\n *     dir: [-1.0, -1.0, -1.0],\n *     active: true\n * }),\n *\n * // Create a SectionPlane on positive diagonal\n * const sectionPlane2 = new SectionPlane(viewer.scene, {\n *     pos: [-1.0, -1.0, -1.0],\n *     dir: [1.0, 1.0, 1.0],\n *     active: true\n * });\n * ````\n */\nclass SectionPlane extends Component {\n\n    /**\n     ID of this SectionPlane, unique within the {@link @xeokit/viewer!View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this DirLight belongs.\n     *\n     * @property view\n     * @type {View}\n     * @final\n     */\n    public readonly view: View;\n\n    /**\n     * Emits an event each time {@link SectionPlane.pos} changes.\n     *\n     * @event\n     */\n    readonly onPos: EventEmitter<SectionPlane, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link SectionPlane.dir} changes.\n     *\n     * @event\n     */\n    readonly onDir: EventEmitter<SectionPlane, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link SectionPlane.active} changes.\n     *\n     * @event\n     */\n    readonly onActive: EventEmitter<SectionPlane, boolean>;\n\n    #state: {\n        pos: Float64Array;\n        active: boolean;\n        dist: number;\n        dir: Float32Array\n    };\n\n    /**\n     * @private\n     * @constructor\n     */\n    constructor(view: View, cfg: {\n        pos?: FloatArrayParam;\n        active?: boolean;\n        dir?: FloatArrayParam\n    } = {}) {\n\n        super(view, cfg);\n\n        this.view = view;\n\n        this.#state = {\n            active: cfg.active !== false,\n            pos: new Float64Array(cfg.pos || [0, 0, 0]),\n            dir: new Float32Array(cfg.pos || [0, 0, -1]),\n            dist: 0\n        };\n\n        this.onPos = new EventEmitter(new EventDispatcher<SectionPlane, FloatArrayParam>());\n        this.onDir = new EventEmitter(new EventDispatcher<SectionPlane, FloatArrayParam>());\n        this.onActive = new EventEmitter(new EventDispatcher<SectionPlane, boolean>());\n    }\n\n    /**\n     * Gets if this SectionPlane is active or not.\n     *\n     * Default value is ````true````.\n     *\n     * @returns Returns ````true```` if active.\n     */\n    get active(): boolean {\n        return this.#state.active;\n    }\n\n    /**\n     * Sets if this SectionPlane is active or not.\n     *\n     * Default value is ````true````.\n     *\n     * @param value Set ````true```` to activate else ````false```` to deactivate.\n     */\n    set active(value: boolean) {\n        if (this.#state.active === value) {\n            return;\n        }\n        this.#state.active = value;\n        this.view.redraw();\n        this.onActive.dispatch(this, this.#state.active);\n    }\n\n    /**\n     * Gets the World-space position of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * @returns  Current position.\n     */\n    get pos(): Float64Array {\n        return this.#state.pos;\n    }\n\n    /**\n     * Sets the World-space position of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * @param value New position.\n     */\n    set pos(value: FloatArrayParam) {\n        this.#state.pos.set(value);\n        this.#state.dist = (-matrix.dotVec3(this.#state.pos, this.#state.dir));\n        this.onPos.dispatch(this, this.#state.pos);\n    }\n\n    /**\n     * Gets the direction of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, -1]````.\n     *\n     * @returns value Current direction.\n     */\n    get dir(): Float32Array {\n        return this.#state.dir;\n    }\n\n    /**\n     * Sets the direction of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, -1]````.\n     *\n     * @param value New direction.\n     */\n    set dir(value: FloatArrayParam) {\n        this.#state.dir.set(value);\n        this.#state.dist = (-matrix.dotVec3(this.#state.pos, this.#state.dir));\n        this.view.redraw();\n        this.onDir.dispatch(this, this.#state.dir);\n    }\n\n    /**\n     * Gets this SectionPlane's distance to the origin of the World-space coordinate system.\n     *\n     * This is the dot product of {@link SectionPlane.pos} and {@link SectionPlane.dir} and is automatically re-calculated\n     * each time either of two properties are updated.\n     *\n     * @returns Distance to the origin of the World-space coordinate system.\n     */\n    get dist(): number {\n        return this.#state.dist;\n    }\n\n    /**\n     * Inverts the direction of {@link SectionPlane.dir}.\n     */\n    flipDir() {\n        const dir = this.#state.dir;\n        dir[0] *= -1.0;\n        dir[1] *= -1.0;\n        dir[2] *= -1.0;\n        this.#state.dist = (-matrix.dotVec3(this.#state.pos, this.#state.dir));\n        this.onDir.dispatch(this, this.#state.dir);\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this SectionPlane.\n     */\n    destroy() {\n        this.onPos.clear();\n        this.onActive.clear;\n        this.onDir.clear();\n        super.destroy();\n    }\n}\n\nexport {SectionPlane};\n","import type {View} from \"./View\";\nimport {CentimetersUnit, FeetUnit, InchesUnit, MetersUnit, MillimetersUnit, YardsUnit} from \"@xeokit/constants\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {createVec3} from \"@xeokit/matrix\";\n\n\nconst unitsInfo = {\n    [MetersUnit]: {\n        abbrev: \"m\"\n    },\n    [CentimetersUnit]: {\n        abbrev: \"cm\"\n    },\n    [MillimetersUnit]: {\n        abbrev: \"mm\"\n    },\n    [YardsUnit]: {\n        abbrev: \"yd\"\n    },\n    [FeetUnit]: {\n        abbrev: \"ft\"\n    },\n    [InchesUnit]: {\n        abbrev: \"in\"\n    }\n};\n\n/**\n * Configures its {@link @xeokit/viewer!View}'s measurement unit and mapping between the Real-space and World-space 3D Cartesian coordinate systems.\n *\n *\n * ## Summary\n *\n * * Located at {@link View.metrics}.\n * * {@link Metrics.units} configures the Real-space unit type, which is {@link MetersUnit} by default.\n * * {@link Metrics.scale} configures the number of Real-space units represented by each unit within the World-space 3D coordinate system. This is ````1.0```` by default.\n * * {@link Metrics.origin} configures the 3D Real-space origin, in current Real-space units, at which this {@link @xeokit/viewer!View}'s World-space coordinate origin sits, This is ````[0,0,0]```` by default.\n *\n * ## Usage\n *\n * ````JavaScript\n * import {Viewer, constants} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new Viewer();\n *\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\"\n * });\n *\n * const metrics = view1.metrics;\n *\n * metrics.units = MetersUnit;\n * metrics.scale = 10.0;\n * metrics.origin = [100.0, 0.0, 200.0];\n * ````\n */\nclass Metrics extends Component {\n\n    #units: number;\n    #scale: number;\n    #origin: FloatArrayParam;\n\n    /**\n     * Emits an event each time {@link Metrics.units} changes.\n     *\n     * @event\n     */\n    readonly onUnits: EventEmitter<Metrics, number>;\n\n    /**\n     * Emits an event each time {@link Metrics.scale} changes.\n     *\n     * @event\n     */\n    readonly onScale: EventEmitter<Metrics, number>;\n\n    /**\n     * Emits an event each time {@link Metrics.origin} changes.\n     *\n     * @event\n     */\n    readonly onOrigin: EventEmitter<Metrics, FloatArrayParam>;\n\n\n    /**\n     * @private\n     */\n    constructor(view: View, cfg: {\n        origin?: FloatArrayParam;\n        scale?: number;\n        units?: number\n    } = {\n        units: MetersUnit,\n        scale: 1.0,\n        origin: [1, 1, 1]\n    }) {\n\n        super(view, cfg);\n\n        this.onUnits = new EventEmitter(new EventDispatcher<Metrics, number>());\n        this.onScale = new EventEmitter(new EventDispatcher<Metrics, number>());\n        this.onOrigin = new EventEmitter(new EventDispatcher<Metrics, FloatArrayParam>());\n\n        this.#units = MetersUnit;\n        this.#scale = 1.0;\n        this.#origin = createVec3([0, 0, 0]);\n\n        this.units = cfg.units;\n        this.scale = cfg.scale;\n        this.origin = cfg.origin;\n    }\n\n    /**\n     * Gets info about the supported Real-space unit types.\n     *\n     * With {@link constants} indicating each unit type, the info will be:\n     *\n     * ````javascript\n     * {\n     *     [MetersUnit]: {\n     *         abbrev: \"m\"\n     *     },\n     *     [CentimetersUnit]: {\n     *         abbrev: \"cm\"\n     *     },\n     *     [MillimetersUnit]: {\n     *         abbrev: \"mm\"\n     *     },\n     *     [YardsUnit]: {\n     *         abbrev: \"yd\"\n     *     },\n     *     [FeetUnit]: {\n     *         abbrev: \"ft\"\n     *     },\n     *     [InchesUnit]: {\n     *         abbrev: \"in\"\n     *     }\n     * }\n     * ````\n     *\n     * @type {*}\n     */\n    get unitsInfo(): {} {\n        return unitsInfo;\n    }\n\n    /**\n     * Gets the {@link @xeokit/viewer!View}'s Real-space unit type.\n     */\n    get units(): number {\n        return this.#units;\n    }\n\n    /**\n     * Sets the {@link @xeokit/viewer!View}'s Real-space unit type.\n     *\n     * Accepted values are {@link MetersUnit}, {@link CentimetersUnit}, {@link MillimetersUnit}, {@link YardsUnit}, {@link FeetUnit} and {@link InchesUnit}.\n     */\n    set units(value: number | undefined) {\n        if (!value) {\n            value = MetersUnit;\n        }\n        // @ts-ignore\n        const info = unitsInfo[value];\n        if (!info) {\n            this.error(\"Unsupported value for 'units': \" + value + \" defaulting to MetersUnit\");\n            value = MetersUnit;\n        }\n        this.#units = value;\n        this.onUnits.dispatch(this, this.#units);\n    }\n\n    /**\n     * Gets the number of Real-space units represented by each unit of the {@link @xeokit/viewer!View}'s World-space coordinate system.\n     */\n    get scale(): number {\n        return this.#scale;\n    }\n\n    /**\n     * Sets the number of Real-space units represented by each unit of the {@link @xeokit/viewer!View}'s World-space coordinate system.\n     *\n     * For example, if {@link Metrics.units} is {@link MetersUnit}, and there are ten meters per World-space coordinate system unit, then ````scale```` would have a value of ````10.0````.\n     */\n    set scale(value: number | undefined) {\n        value = value || 1;\n        if (value <= 0) {\n            this.error(\"scale value should be larger than zero\");\n            return;\n        }\n        this.#scale = value;\n        this.onScale.dispatch(this, this.#scale);\n    }\n\n    /**\n     * Gets the 3D Real-space origin, in Real-space units, at which this {@link @xeokit/viewer!View}'s World-space coordinate origin ````[0,0,0]```` sits.\n     */\n    get origin(): FloatArrayParam {\n        return this.#origin;\n    }\n\n    /**\n     * Sets the Real-space 3D origin, in Real-space units, at which this {@link @xeokit/viewer!View}'s World-space coordinate origin ````[0,0,0]```` sits.\n     */\n    set origin(value: FloatArrayParam | undefined) {\n        if (!value) {\n            this.#origin[0] = 0;\n            this.#origin[1] = 0;\n            this.#origin[2] = 0;\n            return;\n        }\n        this.#origin[0] = value[0];\n        this.#origin[1] = value[1];\n        this.#origin[2] = value[2];\n        this.onOrigin.dispatch(this, this.#origin);\n    }\n\n    /**\n     * Converts a 3D position from World-space to Real-space.\n     *\n     * This is equivalent to ````realPos = #origin + (worldPos * #scale)````.\n     *\n     * @param worldPos World-space 3D position, in World coordinate system units.\n     * @param [realPos] Destination for Real-space 3D position.\n     * @returns  Real-space 3D position, in units indicated by {@link Metrics#units}.\n     */\n    worldToRealPos(worldPos: FloatArrayParam, realPos: FloatArrayParam = createVec3()): FloatArrayParam {\n        realPos[0] = this.#origin[0] + (this.#scale * worldPos[0]);\n        realPos[1] = this.#origin[1] + (this.#scale * worldPos[1]);\n        realPos[2] = this.#origin[2] + (this.#scale * worldPos[2]);\n        return realPos;\n    }\n\n    /**\n     * Converts a 3D position from Real-space to World-space.\n     *\n     * This is equivalent to ````worldPos = (worldPos - #origin) / #scale````.\n     *\n     * @param realPos Real-space 3D position.\n     * @param [worldPos] Destination for World-space 3D position.\n     * @returns  World-space 3D position.\n     */\n    realToWorldPos(realPos: FloatArrayParam, worldPos: FloatArrayParam = createVec3()): FloatArrayParam {\n        worldPos[0] = (realPos[0] - this.#origin[0]) / this.#scale;\n        worldPos[1] = (realPos[1] - this.#origin[1]) / this.#scale;\n        worldPos[2] = (realPos[2] - this.#origin[2]) / this.#scale;\n        return worldPos;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this.onUnits.clear();\n        this.onScale.clear();\n        this.onOrigin.clear();\n    }\n}\n\nexport {Metrics};","import type {View} from \"./View\";\nimport {Component} from \"@xeokit/core\";\nimport {CustomProjectionType, FrustumProjectionType, QualityRender} from \"@xeokit/constants\";\n\n/**\n * Configures Scalable Ambient Obscurance (SAO) for a {@link @xeokit/viewer!View}.\n */\nexport class SAO extends Component {\n\n    /**\n     * The View to which this SAO belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        renderModes: number[];\n        intensity: number;\n        minResolution: number;\n        blendFactor: number;\n        numSamples: number;\n        bias: number;\n        scale: number;\n        blur: boolean;\n        blendCutoff: number;\n        enabled: boolean;\n        kernelRadius: number;\n    }\n\n    /** @private */\n    constructor(view: View, params: any) {\n\n        super(view, params);\n\n        this.view = view;\n\n        this.#state = {\n            renderModes: [QualityRender],\n            enabled: params.enabled !== false,\n            kernelRadius: params.kernelRadius || 100.0,\n            intensity: (params.intensity !== undefined) ? params.intensity : 0.15,\n            bias: (params.bias !== undefined) ? params.bias : 0.5,\n            scale: (params.scale !== undefined) ? params.scale : 1.0,\n            minResolution: (params.minResolution !== undefined) ? params.minResolution : 0.0,\n            numSamples: (params.numSamples !== undefined) ? params.numSamples : 10,\n            blur: !!(params.blur),\n            blendCutoff: (params.blendCutff !== undefined) ? params.blendCutoff : 0.3,\n            blendFactor: (params.blendFactor !== undefined) ? params.blendFactor : 1.0\n        };\n    }\n\n    /**\n     * Gets which rendering modes in which to render SAO.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    get renderModes(): number[] {\n        return this.#state.renderModes;\n    }\n\n    /**\n     * Sets which rendering modes in which to render SAO.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    set renderModes(value: number[]) {\n        this.#state.renderModes = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether or not SAO is supported by this browser and GPU.\n     *\n     * Even when enabled, SAO will only work if supported.\n     */\n    get supported(): boolean {\n        return this.view.viewer.renderer.getSAOSupported();\n    }\n\n    /**\n     * Gets whether SAO is enabled for the {@link @xeokit/viewer!View}.\n     *\n     * Even when enabled, SAO will only apply if supported.\n     *\n     * Default value is ````false````.\n     */\n    get enabled(): boolean {\n        return this.#state.enabled;\n    }\n\n    /**\n     * Sets whether SAO is enabled for the {@link @xeokit/viewer!View}.\n     *\n     * Even when enabled, SAO will only work if supported.\n     *\n     * Default value is ````false````.\n     */\n    set enabled(value: boolean) {\n        value = !!value;\n        if (this.#state.enabled === value) {\n            return;\n        }\n        this.#state.enabled = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Returns true if SAO is currently possible, where it is supported, enabled, and the current view state is compatible.\n     * Called internally by renderer logic.\n     * @private\n     */\n    get possible(): boolean {\n        if (!this.supported) {\n            return false;\n        }\n        if (!this.#state.enabled) {\n            return false;\n        }\n        const projectionType = this.view.camera.projectionType;\n        if (projectionType === CustomProjectionType) {\n            return false;\n        }\n        if (projectionType === FrustumProjectionType) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Gets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     */\n    get kernelRadius(): number {\n        return this.#state.kernelRadius;\n    }\n\n    /**\n     * Sets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     */\n    set kernelRadius(value: number) {\n        if (value === undefined || value === null) {\n            value = 100.0;\n        }\n        if (this.#state.kernelRadius === value) {\n            return;\n        }\n        this.#state.kernelRadius = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     */\n    set intensity(value: number) {\n        if (value === undefined || value === null) {\n            value = 0.15;\n        }\n        if (this.#state.intensity === value) {\n            return;\n        }\n        this.#state.intensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     */\n    get bias(): number {\n        return this.#state.bias;\n    }\n\n    /**\n     * Sets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     */\n    set bias(value: number) {\n        if (value === undefined || value === null) {\n            value = 0.5;\n        }\n        if (this.#state.bias === value) {\n            return;\n        }\n        this.#state.bias = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     */\n    get scale(): number {\n        return this.#state.scale;\n    }\n\n    /**\n     * Sets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     */\n    set scale(value: number) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this.#state.scale === value) {\n            return;\n        }\n        this.#state.scale = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     */\n    get minResolution(): number {\n        return this.#state.minResolution;\n    }\n\n    /**\n     * Sets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     */\n    set minResolution(value: number) {\n        if (value === undefined || value === null) {\n            value = 0.0;\n        }\n        if (this.#state.minResolution === value) {\n            return;\n        }\n        this.#state.minResolution = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     */\n    get numSamples(): number {\n        return this.#state.numSamples;\n    }\n\n    /**\n     * Sets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     *\n     * Update this sparingly, since it causes a shader recompile.\n     */\n    set numSamples(value: number) {\n        if (value === undefined || value === null) {\n            value = 10;\n        }\n        if (this.#state.numSamples === value) {\n            return;\n        }\n        this.#state.numSamples = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     */\n    get blur(): boolean {\n        return this.#state.blur;\n    }\n\n    /**\n     * Sets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     */\n    set blur(value: boolean) {\n        value = (value !== false);\n        if (this.#state.blur === value) {\n            return;\n        }\n        this.#state.blur = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     */\n    get blendCutoff(): number {\n        return this.#state.blendCutoff;\n    }\n\n    /**\n     * Sets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     */\n    set blendCutoff(value: number) {\n        if (value === undefined || value === null) {\n            value = 0.3;\n        }\n        if (this.#state.blendCutoff === value) {\n            return;\n        }\n        this.#state.blendCutoff = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO blend scale.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     */\n    get blendFactor(): number {\n        return this.#state.blendFactor;\n    }\n\n    /**\n     * Sets the SAO blend factor.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     */\n    set blendFactor(value: number) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this.#state.blendFactor === value) {\n            return;\n        }\n        this.#state.blendFactor = value;\n        this.view.redraw();\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n","import {Component} from \"@xeokit/core\";\nimport type {View} from \"./View\";\n\n\n/**\n * Configures the shape of \"lines\" geometry primitives.\n *\n * * Located at {@link View#linesMaterial}.\n */\nclass LinesMaterial extends Component {\n\n    /**\n     * The View to which this LinesMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        lineWidth: number\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: { lineWidth: number } = {lineWidth: 1}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            lineWidth: (options.lineWidth !== undefined && options.lineWidth !== null) ? options.lineWidth : 1\n        };\n    }\n\n    /**\n     * Sets line width.\n     *\n     * Default value is ````1```` pixels.\n     */\n    set lineWidth(value: number) {\n        this.#state.lineWidth = value || 1;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the line width.\n     *\n     * Default value is ````1```` pixels.\n     */\n    get lineWidth(): number {\n        return this.#state.lineWidth;\n    }\n}\n\nexport {LinesMaterial};","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\n\nimport {ViewObject} from \"./ViewObject\";\nimport type {Viewer} from \"./Viewer\";\nimport type {View} from \"./View\";\nimport type {Scene, SceneModel} from \"@xeokit/scene\";\n\n\n\n/**\n * A layer of {@link ViewObject | ViewObjects} in a {@link @xeokit/viewer!View}.\n *\n * See {@link \"@xeokit/viewer\"} for usage.\n *\n * ## Summary\n *\n * * Automatically stores a {@link ViewObject} for each existing {@link RendererObject} that has a matching {@link RendererObject.layerId | ViewerObject.layerId}\n * * Useful for segreggating {@link ViewObject | ViewObjects} into layers\n * * Created automatically or manually (see {@link View.createLayer | View.createLayer})\n * * Stored in {@link View.layers | View.layers}\n *\n * ## Overview\n *\n * ViewLayers organize a {@link View |View's} {@link ViewObject | ViewObjects} into layers, according to which aspects of\n * the view they represent. They make it easier for us to focus our interactions on the ViewObjects that are relevant\n * to the particular aspects we're interested in.\n *\n * ### Typical use case: segregating model objects from environment objects\n *\n * A typical use case for this feature is to group environmental {@link ViewObject | ViewObjects} (e.g. ground, skybox) in an \"environment\" ViewLayer,\n * and group model ViewObjects in a \"model\" ViewLayer. Then we can focus our model interactions (show, hide, highlight,\n * save/load BCF viewpoints, etc.) on the ViewObjects in the \"model\" ViewLayer, without involving the \"environment\"\n * ViewObjects at all, which are effectively in the background. We can basically ignore the environment objects as we\n * do various batch operations on our model objects, i.e. \"X-ray all\", \"X-ray everything except for walls\" and so on.\n *\n * ### Automatic ViewLayers\n *\n * By default, each {@link @xeokit/viewer!View} automatically lazy-creates ViewLayers within itself as required. As {@link RendererObject | ViewerObjects} appear in the\n * {@link @xeokit/viewer!Viewer}, {@link ViewObject | ViewObjects} and Viewlayers magically appear in each existing View.\n *\n * Recall that, whenever a {@link RendererObject} is created, each existing {@link @xeokit/viewer!View} will automatically create a\n * corresponding {@link ViewObject} to represent and control that ViewerObject's appearance within the View's canvas.\n *\n * If the {@link RendererObject} also happens to have a value set on its {@link RendererObject.layerId} ID property, then the View\n * will also automatically ensure that it contains a matching {@link ViewLayer}, and will register the new ViewObject\n * in that ViewLayer. Note that each ViewObject can belong to a maximum of one ViewLayer.\n *\n * When a {@link @xeokit/viewer!View} automatically creates Viewlayers, it will also automatically destroy them again whenever\n * their {@link RendererObject | ViewerObjects} have all been destroyed.\n *\n * ### Manual ViewLayers\n *\n * We can configure a {@link @xeokit/viewer!View} to **not** automatically create ViewLayers, and instead rely on us to manually create them.\n *\n * When we do that, the View will only create the {@link ViewObject | ViewObjects} within itself for the ViewLayers that we created. The\n * View will ignore all ViewerObjects that don't have {@link RendererObject.layerId} values that match the IDs of our\n * manually-created ViewLayers.\n *\n * This feature is useful for ensuring that aspect-focused Views don't contain huge numbers of unused ViewObjects for\n * ViewerObjects that they never need to show.\n *\n * When we manually create ViewLayers like this, then the View will not automatically destroy them whenever\n * their {@link RendererObject | ViewerObjects} have all been destroyed. This keeps the ViewLayers around, in case\n * we create matching ViewerObjects again in future.\n *\n * ## Examples\n *\n * ### Exampe 1: Automatic ViewLayers\n *\n * Create a {@link @xeokit/viewer!Viewer}:\n *\n *````javascript\n * import {Viewer} from \"@xeokit/viewer\";\n *\n * const myViewer = new Viewer({\n *      id: \"myViewer\"\n * });\n *````\n *\n * Create a {@link @xeokit/viewer!View}, with the default setting of ````false```` for {@link ViewParams.autoLayers}:\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myView1\",\n *      autoLayers: true // <<----------- Default\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n * ````\n *\n * Next, we'll create a {@link @xeokit/scene!SceneModel | SceneModel} containing two model {@link RendererObject | ViewerObjects} that represent a building\n * foundation and walls, along with two environmental ViewerObjects that represent a skybox and ground plane.\n *\n * The ground and skybox ViewerObjects specify that their {@link ViewObject | ViewObjects} belong\n * to \"environment\" ViewLayers, while the model ViewerObjects specify that their ViewObjects belong to \"model\" ViewLayers.\n *\n * ````javascript\n * const sceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n * });\n *\n * // (calls to SceneModel createGeometry and\n * // createMesh omitted for brevity)\n *\n * sceneModel.createObject({\n *      id: \"ground\",\n *      meshIds: [\"groundMesh}],\n *      layerId: \"environment\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"skyBox\",\n *      meshIds: [\"skyBoxMesh}],\n *      layerId: \"environment\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"houseFoundation\",\n *      meshIds: [\"myMesh}],\n *      layerId: \"model\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"houseWalls\",\n *      meshIds: [\"myMesh}],\n *      layerId: \"model\"\n * });\n *\n * sceneModel.build();\n * ````\n *\n * Our {@link @xeokit/viewer!View} has now automatically created an \"environment\" {@link ViewLayer}, which contains {@link ViewObject | ViewObjects} for the skybox and\n * ground plane ViewerObjects, and a \"model\" ViewLayer, which contains ViewObjects for the house foundation and walls.\n *\n * We can now batch-update the ViewObjects in each ViewLayer independently. As mentioned, this is useful when we need to ignore things\n * like UI or environmental objects in batch-updates, BCF viewpoints etc.\n *\n * ````javascript\n * // viewer.objects contains four ViewerObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.objects contains four ViewObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.layers contains two ViewLayers with IDs \"environment\" and \"model\"\n *\n * const environmentLayer = view1.layers[\"environment\"];\n * environmentLayer.setObjectsVisible(environmentLayer.objectIds, true);\n\n * const modelLayer = view1.layers[\"model\"];\n * modelLayer.setObjectsVisible(modelLayer.objectIds, true);\n * ````\n *\n * ### Example 2: Manual ViewLayers\n *\n * Create a {@link @xeokit/viewer!Viewer}:\n *\n * ````javascript\n * import {Viewer} from \"@xeokit/viewer\";\n *\n * const myViewer = new Viewer({\n *      id: \"myViewer\"\n * });\n * ````\n *\n * Create a {@link @xeokit/viewer!View}, this time with ````false```` for {@link ViewParams.autoLayers}, in order to **not**\n * automatically create ViewLayers on demand:\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\",\n *      autoLayers: false // <<----------- Override default\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n * ````\n *\n * We'll manually create the \"model\" ViewLayer, and won't create an \"environment\" ViewLayer:\n *\n * ````javascript\n * const modelViewLayer = view1.createLayer({\n *     id: \"model\",\n *     visible: true\n * });\n * ````\n *\n * As we did in the previous example, we'll now create a {@link @xeokit/scene!SceneModel | SceneModel} containing two model\n * {@link RendererObject | ViewerObjects} that represent a building foundation and walls, along with two environmental\n * ViewerObjects that represent a skybox and ground plane.\n *\n * As before, the ground and skybox ViewerObjects specify that their {@link ViewObject | ViewObjects} belong to \"environment\" ViewLayers,\n * while the model ViewerObjects specify that their ViewObjects belong to \"model\" ViewLayers.\n *\n * ````javascript\n * const sceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n * });\n *\n * // (calls to SceneModel createGeometry and\n * // createMesh omitted for brevity)\n *\n * sceneModel.createObject({\n *      id: \"ground\",\n *      meshIds: [\"groundMesh}],\n *      layerId: \"environment\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"skyBox\",\n *      meshIds: [\"skyBoxMesh}],\n *      layerId: \"environment\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"houseFoundation\",\n *      meshIds: [\"myMesh}],\n *      layerId: \"model\"\n * });\n *\n * sceneModel.createObject({\n *      id: \"houseWalls\",\n *      meshIds: [\"myMesh}],\n *      layerId: \"model\"\n * });\n *\n * sceneModel.build();\n * ````\n *\n * This time, however, our {@link @xeokit/viewer!View} has now created {@link ViewObject | ViewObjects} for the \"model\" ViewerObjects, while\n * ignoring the \"environment\" ViewerObjects.\n *\n * As far as this View is concerned, the \"environment\" ViewerObjects do not exist.\n *\n * ````javascript\n * // viewer.scene.objects contains four SceneObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.objects contains two ViewObjects with IDs \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.layers contains one ViewLayer with ID \"model\"\n *\n * const modelLayer = view1.layers[\"model\"];\n * modelLayer.setObjectsVisible(modelLayer.objectIds, true);\n * ````\n */\nclass ViewLayer extends Component {\n\n    /**\n     ID of this ViewLayer, unique within the {@link @xeokit/viewer!View}.\n\n     This ViewLayer is mapped by this ID in {@link View.layers}.\n     */\n    declare readonly id: string;\n\n    /**\n     * The Viewer to which this ViewLayer belongs.\n     */\n    declare readonly viewer: Viewer;\n\n    /**\n     * The View to which this ViewLayer belongs.\n     */\n    declare readonly view: View;\n\n    /**\n     * Map of the all {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * These are the ViewObjects for which {@link ViewObject.layerId} has the same value as {@link ViewLayer.id}.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     *\n     * The ViewLayer automatically ensures that there is a {@link ViewObject} here for\n     * each {@link RendererObject} in the {@link @xeokit/viewer!Viewer}\n     */\n    readonly objects: { [key: string]: ViewObject };\n\n    /**\n     * Map of the currently visible {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is visible when {@link ViewObject.visible} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly visibleObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently x-rayed {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is x-rayed when {@link ViewObject.xrayed} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly xrayedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently highlighted {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is highlighted when {@link ViewObject.highlighted} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly highlightedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently selected {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is selected when {@link ViewObject.selected} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly selectedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently colorized {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly colorizedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link ViewObject | ViewObjects} in this ViewLayer whose opacity has been updated.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly opacityObjects: { [key: string]: ViewObject };\n\n    /**\n     * When true, View destroys this ViewLayer as soon as there are no ViewObjects\n     * that need it. When false, View retains it.\n     * @private\n     */\n    autoDestroy: boolean;\n\n    /**\n     * Emits an event each time the visibility of a {@link ViewObject} changes.\n     *\n     * ViewObjects are shown and hidden with {@link View.setObjectsVisible}, {@link ViewLayer.setObjectsVisible} or {@link ViewObject.visible}.\n     *\n     * @event\n     */\n    readonly onObjectVisibility: EventEmitter<ViewLayer, ViewObject>;\n\n    #numObjects: number;\n    #objectIds: string[] | null;\n    #numVisibleObjects: number;\n    #visibleObjectIds: string[] | null;\n    #numXRayedObjects: number;\n    #xrayedObjectIds: string[] | null;\n    #numHighlightedObjects: number;\n    #highlightedObjectIds: string[] | null;\n    #numSelectedObjects: number;\n    #selectedObjectIds: string[] | null;\n    #numColorizedObjects: number;\n    #colorizedObjectIds: string[] | null;\n    #numOpacityObjects: number;\n    #opacityObjectIds: string[] | null;\n\n    #qualityRender: boolean;\n\n    gammaOutput: boolean;\n\n    constructor(options: {\n        id: string;\n        viewer: Viewer;\n        view: View;\n        qualityRender?: boolean;\n        autoDestroy?: boolean;\n    }) {\n\n        super(options.view, options);\n\n        this.id = options.id;\n        this.viewer = options.viewer;\n        this.view = options.view;\n\n        this.objects = {};\n        this.visibleObjects = {};\n        this.xrayedObjects = {};\n        this.highlightedObjects = {};\n        this.selectedObjects = {};\n        this.colorizedObjects = {};\n        this.opacityObjects = {};\n\n        this.autoDestroy = (options.autoDestroy !== false);\n\n        this.#numObjects = 0;\n        this.#numVisibleObjects = 0;\n        this.#numXRayedObjects = 0\n        this.#numHighlightedObjects = 0;\n        this.#numSelectedObjects = 0;\n        this.#numColorizedObjects = 0;\n        this.#numOpacityObjects = 0;\n\n        this.#qualityRender = !!options.qualityRender;\n\n        this.onObjectVisibility = new EventEmitter(new EventDispatcher<ViewLayer, ViewObject>());\n\n        this.#initViewObjects();\n    }\n\n    /**\n     * Gets the gamma factor.\n     */\n    get gammaFactor() { // TODO\n        return 1.0;\n    }\n\n    /**\n     * Sets whether quality rendering is enabled for this ViewLayer.\n     *\n     * Default is ````false````.\n     */\n    set qualityRender(value: boolean) {\n        if (this.#qualityRender === value) {\n            return;\n        }\n        this.#qualityRender = value;\n        this.redraw();\n    }\n\n    /**\n     * Gets whether quality rendering is enabled for this ViewLayer.\n     *\n     * Default is ````false````.\n     */\n    get qualityRender(): boolean {\n        return this.#qualityRender;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numObjects(): number {\n        return this.#numObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get objectIds(): string[] {\n        if (!this.#objectIds) {\n            this.#objectIds = Object.keys(this.objects);\n        }\n        return this.#objectIds;\n    }\n\n    /**\n     * Gets the number of visible {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numVisibleObjects(): number {\n        return this.#numVisibleObjects;\n    }\n\n    /**\n     * Gets the IDs of the visible {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get visibleObjectIds(): string[] {\n        if (!this.#visibleObjectIds) {\n            this.#visibleObjectIds = Object.keys(this.visibleObjects);\n        }\n        return this.#visibleObjectIds;\n    }\n\n    /**\n     * Gets the number of X-rayed {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numXRayedObjects(): number {\n        return this.#numXRayedObjects;\n    }\n\n    /**\n     * Gets the IDs of the X-rayed {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get xrayedObjectIds(): string[] {\n        if (!this.#xrayedObjectIds) {\n            this.#xrayedObjectIds = Object.keys(this.xrayedObjects);\n        }\n        return this.#xrayedObjectIds;\n    }\n\n    /**\n     * Gets the number of highlighted {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numHighlightedObjects(): number {\n        return this.#numHighlightedObjects;\n    }\n\n    /**\n     * Gets the IDs of the highlighted {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get highlightedObjectIds(): string[] {\n        if (!this.#highlightedObjectIds) {\n            this.#highlightedObjectIds = Object.keys(this.highlightedObjects);\n        }\n        return this.#highlightedObjectIds;\n    }\n\n    /**\n     * Gets the number of selected {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numSelectedObjects(): number {\n        return this.#numSelectedObjects;\n    }\n\n    /**\n     * Gets the IDs of the selected {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get selectedObjectIds(): string[] {\n        if (!this.#selectedObjectIds) {\n            this.#selectedObjectIds = Object.keys(this.selectedObjects);\n        }\n        return this.#selectedObjectIds;\n    }\n\n    /**\n     * Gets the number of colorized {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get numColorizedObjects(): number {\n        return this.#numColorizedObjects;\n    }\n\n    /**\n     * Gets the IDs of the colorized {@link ViewObject | ViewObjects} in this ViewLayer.\n     */\n    get colorizedObjectIds(): string[] {\n        if (!this.#colorizedObjectIds) {\n            this.#colorizedObjectIds = Object.keys(this.colorizedObjects);\n        }\n        return this.#colorizedObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject | ViewObjects} in this ViewLayer that have updated opacities.\n     */\n    get opacityObjectIds(): string[] {\n        if (!this.#opacityObjectIds) {\n            this.#opacityObjectIds = Object.keys(this.opacityObjects);\n        }\n        return this.#opacityObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject | ViewObjects} in this ViewLayer that have updated opacities.\n     */\n    get numOpacityObjects(): number {\n        return this.#numOpacityObjects;\n    }\n\n    /**\n     * @private\n     */\n    registerViewObject(viewObject: ViewObject) {\n        this.objects[viewObject.id] = viewObject;\n        this.#numObjects++;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    deregisterViewObject(viewObject: ViewObject) {\n        delete this.objects[viewObject.id];\n        delete this.visibleObjects[viewObject.id];\n        delete this.xrayedObjects[viewObject.id];\n        delete this.highlightedObjects[viewObject.id];\n        delete this.selectedObjects[viewObject.id];\n        delete this.colorizedObjects[viewObject.id];\n        delete this.opacityObjects[viewObject.id];\n        this.#numObjects--;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    redraw() {\n        this.viewer.renderer.setImageDirty(this.view.viewIndex);\n    }\n\n    /**\n     * @private\n     */\n    objectVisibilityUpdated(viewObject: ViewObject, visible: boolean, notify: boolean = true) {\n        if (visible) {\n            this.visibleObjects[viewObject.id] = viewObject;\n            this.#numVisibleObjects++;\n        } else {\n            delete this.visibleObjects[viewObject.id];\n            this.#numVisibleObjects--;\n        }\n        this.#visibleObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.onObjectVisibility.dispatch(this, viewObject);\n        }\n        this.view.objectVisibilityUpdated(viewObject, visible, notify);\n    }\n\n    /**\n     * @private\n     */\n    objectXRayedUpdated(viewObject: ViewObject, xrayed: boolean) {\n        if (xrayed) {\n            this.xrayedObjects[viewObject.id] = viewObject;\n            this.#numXRayedObjects++;\n        } else {\n            delete this.xrayedObjects[viewObject.id];\n            this.#numXRayedObjects--;\n        }\n        this.#xrayedObjectIds = null; // Lazy regenerate\n        this.view.objectXRayedUpdated(viewObject, xrayed);\n    }\n\n    /**\n     * @private\n     */\n    objectHighlightedUpdated(viewObject: ViewObject, highlighted: boolean) {\n        if (highlighted) {\n            this.highlightedObjects[viewObject.id] = viewObject;\n            this.#numHighlightedObjects++;\n        } else {\n            delete this.highlightedObjects[viewObject.id];\n            this.#numHighlightedObjects--;\n        }\n        this.#highlightedObjectIds = null; // Lazy regenerate\n        this.view.objectHighlightedUpdated(viewObject, highlighted);\n    }\n\n    /**\n     * @private\n     */\n    objectSelectedUpdated(viewObject: ViewObject, selected: boolean) {\n        if (selected) {\n            this.selectedObjects[viewObject.id] = viewObject;\n            this.#numSelectedObjects++;\n        } else {\n            delete this.selectedObjects[viewObject.id];\n            this.#numSelectedObjects--;\n        }\n        this.#selectedObjectIds = null; // Lazy regenerate\n        this.view.objectSelectedUpdated(viewObject, selected);\n    }\n\n    /**\n     * @private\n     */\n    objectColorizeUpdated(viewObject: ViewObject, colorized: boolean) {\n        if (colorized) {\n            this.colorizedObjects[viewObject.id] = viewObject;\n            this.#numColorizedObjects++;\n        } else {\n            delete this.colorizedObjects[viewObject.id];\n            this.#numColorizedObjects--;\n        }\n        this.#colorizedObjectIds = null; // Lazy regenerate\n        this.view.objectColorizeUpdated(viewObject, colorized);\n    }\n\n    /**\n     * @private\n     */\n    objectOpacityUpdated(viewObject: ViewObject, opacityUpdated: boolean) {\n        if (opacityUpdated) {\n            this.opacityObjects[viewObject.id] = viewObject;\n            this.#numOpacityObjects++;\n        } else {\n            delete this.opacityObjects[viewObject.id];\n            this.#numOpacityObjects--;\n        }\n        this.#opacityObjectIds = null; // Lazy regenerate\n        this.view.objectOpacityUpdated(viewObject, opacityUpdated);\n    }\n\n    /**\n     * Updates the visibility of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.visible} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.visibleObjects} and {@link ViewLayer.numVisibleObjects}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param visible Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsVisible(objectIds: string[], visible: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.visible !== visible);\n            viewObject.visible = visible;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the collidability of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * Updates {@link ViewObject.collidable} on the Objects with the given IDs.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param collidable Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCollidable(objectIds: string[], collidable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.collidable !== collidable);\n            viewObject.collidable = collidable;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the culled status of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * Updates {@link ViewObject.culled} on the Objects with the given IDs.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param culled Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCulled(objectIds: string[], culled: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.culled !== culled);\n            viewObject.culled = culled;\n            return changed;\n        });\n    }\n\n    /**\n     * Selects or deselects the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.selected} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.selectedObjects} and {@link ViewLayer.numSelectedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param selected Whether or not to select.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsSelected(objectIds: string[], selected: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.selected !== selected);\n            viewObject.selected = selected;\n            return changed;\n        });\n    }\n\n    /**\n     * Highlights or un-highlights the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.highlighted} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.highlightedObjects} and {@link ViewLayer.numHighlightedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param highlighted Whether or not to highlight.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsHighlighted(objectIds: string[], highlighted: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.highlighted !== highlighted);\n            viewObject.highlighted = highlighted;\n            return changed;\n        });\n    }\n\n    /**\n     * Applies or removes X-ray rendering for the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.xrayed} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.xrayedObjects} and {@link ViewLayer.numXRayedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param xrayed Whether or not to xray.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsXRayed(objectIds: string[], xrayed: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.xrayed !== xrayed);\n            if (changed) {\n                viewObject.xrayed = xrayed;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Colorizes the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.colorize} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.colorizedObjects} and {@link ViewLayer.numColorizedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param colorize - RGB colorize factors in range ````[0..1,0..1,0..1]````.\n     * @returns True if any {@link ViewObject | ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsColorized(objectIds: string[], colorize: number[]) {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            viewObject.colorize = colorize;\n        });\n    }\n\n    /**\n     * Sets the opacity of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.opacity} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.opacityObjects} and {@link ViewLayer.numOpacityObjects}.\n     *\n     * @param  objectIds - One or more {@link ViewObject.id} values.\n     * @param opacity - Opacity factor in range ````[0..1]````.\n     * @returns True if any {@link ViewObject | ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsOpacity(objectIds: string[], opacity: number): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.opacity !== opacity);\n            if (changed) {\n                viewObject.opacity = opacity;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the pickability of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.pickable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link ViewLayer.pick}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param pickable Whether or not to set pickable.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsPickable(objectIds: string[], pickable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.pickable !== pickable);\n            if (changed) {\n                viewObject.pickable = pickable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the clippability of the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.clippable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link ViewLayer.pick}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param clippable Whether or not to set clippable.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsClippable(objectIds: string[], clippable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = (viewObject.clippable !== clippable);\n            if (changed) {\n                viewObject.clippable = clippable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Iterates with a callback over the given {@link ViewObject | ViewObjects} in this ViewLayer.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param callback Callback to execute on each {@link ViewObject}.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    withObjects(objectIds: string[], callback: Function): boolean {\n        let changed = false;\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            const id = objectIds[i];\n            let viewObject = this.objects[id];\n            if (viewObject) {\n                changed = callback(viewObject) || changed;\n            }\n        }\n        return changed;\n    }\n\n    #initViewObjects() {\n        const models = this.viewer.scene.models;\n        for (const id in models) {\n            const model = models[id];\n            this.#createViewObjects(model);\n        }\n        this.viewer.scene.onModelCreated.subscribe((scene: Scene, model: SceneModel) => {\n            this.#createViewObjects(model);\n        });\n        this.viewer.scene.onModelDestroyed.subscribe((scene:Scene, model: SceneModel) => {\n            this.#destroyViewObjects(model);\n        });\n    }\n\n    #createViewObjects(model: SceneModel) {\n        const sceneObjects = model.objects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            const rendererViewObject = this.viewer.renderer.rendererViewObjects[id];\n            if (rendererViewObject.layerId == this.id) {\n                const viewObject = new ViewObject(this, sceneObject, rendererViewObject);\n                this.objects[viewObject.id] = viewObject;\n                this.#numObjects++;\n                this.#objectIds = null; // Lazy regenerate\n            }\n        }\n    }\n\n    #destroyViewObjects(model: SceneModel) {\n        const viewerObjects = model.objects;\n        for (let id in viewerObjects) {\n            const viewerObject = viewerObjects[id];\n            const viewObject = this.objects[viewerObject.id];\n            viewObject._destroy();\n            this.#numObjects--;\n            this.#objectIds = null; // Lazy regenerate\n        }\n    }\n\n    /**\n     * Destroys this ViewLayer.\n     *\n     * Causes {@link @xeokit/viewer!Viewer} to fire a \"viewDestroyed\" event.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {ViewLayer};\n","import {Component} from \"@xeokit/core\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nimport type {View} from \"./View\";\n\n/**\n * Configures the appearance of {@link ViewObject | ViewObjects} when they are xrayed, highlighted or selected.\n *\n * ## Summary\n *\n * * Located at {@link View.xrayMaterial}, {@link View.highlightMaterial} and {@link View.selectedMaterial}.\n * * XRay a {@link ViewObject} by setting {@link ViewObject.xrayed} ````true````.\n * * Highlight a {@link ViewObject} by setting {@link ViewObject.highlighted} ````true````.\n * * Select a {@link ViewObject} by setting {@link ViewObject.selected} ````true````.\n */\nclass EmphasisMaterial extends Component {\n\n    /**\n     * The View to which this EmphasisMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        fillColor: Float32Array;\n        backfaces: boolean;\n        edgeColor: Float32Array;\n        edgeWidth: number;\n        edgeAlpha: number;\n        edges: boolean;\n        fillAlpha: number;\n        fill: boolean\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        fillColor?: FloatArrayParam;\n        backfaces?: boolean;\n        edgeColor?: FloatArrayParam;\n        edgeWidth?: number;\n        edgeAlpha?: number;\n        edges?: boolean;\n        fillAlpha?: number;\n        fill?: boolean;\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            fill: !!options.fill,\n            fillColor: new Float32Array(options.fillColor || [0.4, 0.4, 0.4]),\n            fillAlpha: (options.fillAlpha !== undefined && options.fillAlpha !== null) ? options.fillAlpha : 0.2,\n            edges: options.edges !== false,\n            edgeColor: new Float32Array(options.edgeColor || [0.2, 0.2, 0.2]),\n            edgeAlpha: (options.edgeAlpha !== undefined && options.edgeAlpha !== null) ? options.edgeAlpha : 0.5,\n            edgeWidth: (options.edgeWidth !== undefined && options.edgeWidth !== null) ? options.edgeWidth : 1,\n            backfaces: !!options.backfaces\n        };\n    }\n\n    /**\n     * Sets if the surfaces of emphasized {@link ViewObject | ViewObjects} are filled with color.\n     *\n     * Default is ````true````.\n     */\n    set fill(value: boolean) {\n        if (this.#state.fill === value) {\n            return;\n        }\n        this.#state.fill = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if the surfaces of emphasized {@link ViewObject | ViewObjects} are filled with color.\n     *\n     * Default is ````true````.\n     */\n    get fill(): boolean {\n        return this.#state.fill;\n    }\n\n    /**\n     * Sets the RGB surface fill color for the surfaces of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     */\n    set fillColor(value: FloatArrayParam) {\n        const fillColor = this.#state.fillColor;\n        if (fillColor[0] === value[0] && fillColor[1] === value[1] && fillColor[2] === value[2]) {\n            return;\n        }\n        fillColor[0] = 0.4;\n        fillColor[1] = 0.4;\n        fillColor[2] = 0.4;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB surface fill color for the surfaces of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     */\n    get fillColor(): Float32Array {\n        return this.#state.fillColor;\n    }\n\n    /**\n     * Sets the transparency of the surfaces of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    set fillAlpha(value: number) {\n        if (this.#state.fillAlpha === value) {\n            return;\n        }\n        this.#state.fillAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the transparency of the surfaces of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    get fillAlpha(): number {\n        return this.#state.fillAlpha;\n    }\n\n    /**\n     * Sets if the edges on emphasized {@link ViewObject | ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    set edges(value: boolean) {\n        if (this.#state.edges === value) {\n            return;\n        }\n        this.#state.edges = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if the edges on emphasized {@link ViewObject | ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    get edges(): boolean {\n        return this.#state.edges;\n    }\n\n    /**\n     * Sets the RGB color of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     */\n    set edgeColor(value: FloatArrayParam) {\n        let edgeColor = this.#state.edgeColor;\n        if (edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        edgeColor[0] = 0.2;\n        edgeColor[1] = 0.2;\n        edgeColor[2] = 0.2;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     */\n    get edgeColor(): Float32Array {\n        return this.#state.edgeColor;\n    }\n\n    /**\n     * Sets the transparency of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    set edgeAlpha(value: number) {\n        if (this.#state.edgeAlpha === value) {\n            return;\n        }\n        this.#state.edgeAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the transparency of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    get edgeAlpha(): number {\n        return this.#state.edgeAlpha;\n    }\n\n    /**\n     * Sets the width of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set edgeWidth(value: number) {\n        this.#state.edgeWidth = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the width of the edges of emphasized {@link ViewObject | ViewObjects}.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    get edgeWidth(): number {\n        return this.#state.edgeWidth;\n    }\n\n    /**\n     * Sets whether to render backfaces of emphasized {@link ViewObject | ViewObjects} when {@link EmphasisMaterial.fill} is ````true````.\n     *\n     * Default is ````false````.\n     */\n    set backfaces(value: boolean) {\n        if (this.#state.backfaces === value) {\n            return;\n        }\n        this.#state.backfaces = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether to render backfaces of emphasized {@link ViewObject | ViewObjects} when {@link EmphasisMaterial.fill} is ````true````.\n     *\n     * Default is ````false````.\n     */\n    get backfaces(): boolean {\n        return this.#state.backfaces;\n    }\n\n    /**\n     * @private\n     */\n    get hash(): string {\n        return \"\";\n    }\n\n    /**\n     * @private\n     */\n    destroy(): void {\n        super.destroy();\n    }\n}\n\nexport {EmphasisMaterial};","import {Component} from \"@xeokit/core\";\n\n\n\nimport type {View} from \"./View\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {QualityRender} from \"@xeokit/constants\";\n\n\n/**\n * Configures the appearance of {@link ViewObject | ViewObjects} when their edges are emphasised.\n *\n * ## Summary\n *\n * * Located at {@link View.edgeMaterial}.\n * * Emphasise edges of a {@link ViewObject} by setting {@link ViewObject.edges} ````true````.\n */\nclass EdgeMaterial extends Component {\n\n    /**\n     * The View to which this EdgeMaterial belongs.\n     */\n    public readonly view: View;\n\n    /**\n     * @private\n     */\n    #state: {\n        edgeColor: Float32Array;\n        edgeWidth: number;\n        edgeAlpha: number;\n        edges: boolean;\n        renderModes: number[];\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        edgeColor?: FloatArrayParam;\n        edgeWidth?: number;\n        edgeAlpha?: number;\n        edges?: boolean;\n        renderModes?: number[];\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            renderModes: options.renderModes || [QualityRender],\n            edges: options.edges !== false,\n            edgeColor: new Float32Array(options.edgeColor || [0.2, 0.2, 0.2]),\n            edgeAlpha: (options.edgeAlpha !== undefined && options.edgeAlpha !== null) ? options.edgeAlpha : 0.5,\n            edgeWidth: (options.edgeWidth !== undefined && options.edgeWidth !== null) ? options.edgeWidth : 1\n        };\n    }\n\n    /**\n     * Sets which rendering modes in which to render edges.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    set renderModes(value: number[]) {\n        this.#state.renderModes = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets which rendering modes in which to render edges.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    get renderModes(): number[] {\n        return this.#state.renderModes;\n    }\n\n    /**\n     * Sets if edges of {@link ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    set edges(value: boolean) {\n        if (this.#state.edges === value) {\n            return;\n        }\n        this.#state.edges = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if edges of {@link ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    get edges(): boolean {\n        return this.#state.edges;\n    }\n\n    /**\n     * Sets RGB edge color for {@link ViewObjects}.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     */\n    set edgeColor(value: FloatArrayParam) {\n        let edgeColor = this.#state.edgeColor;\n        if (value && edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        edgeColor[0] = 0.2;\n        edgeColor[1] = 0.2;\n        edgeColor[2] = 0.2;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets RGB edge color for {@link ViewObjects}.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     */\n    get edgeColor(): Float32Array {\n        return this.#state.edgeColor;\n    }\n\n    /**\n     * Sets edge transparency for {@link ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     */\n    set edgeAlpha(value: number) {\n        if (this.#state.edgeAlpha === value) {\n            return;\n        }\n        this.#state.edgeAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets edge transparency for {@link ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     */\n    get edgeAlpha(): number {\n        return this.#state.edgeAlpha;\n    }\n\n    /**\n     * Sets edge width for {@link ViewObjects}.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set edgeWidth(value: number) {\n        if (this.#state.edgeWidth === value) {\n            return;\n        }\n        this.#state.edgeWidth = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets edge width for {@link ViewObjects}.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    get edgeWidth(): number {\n        return this.#state.edgeWidth;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {EdgeMaterial};","import {Component} from \"@xeokit/core\";\nimport type {View} from \"./View\";\n\n/**\n * Configures the size and shape of {@link ViewObject | ViewObjects} that represent clouds of points.\n *\n * ## Summary\n *\n * * Located at {@link View.pointsMaterial}.\n * * Supports round and square points.\n * * Optional perspective point scaling.\n */\nclass PointsMaterial extends Component {\n\n    /**\n     * The View to which this PointsMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        pointSize: number,\n        roundPoints: boolean,\n        perspectivePoints: boolean,\n        minPerspectivePointSize: number,\n        maxPerspectivePointSize: number,\n        filterIntensity: boolean,\n        minIntensity: number,\n        maxIntensity: number\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        pointSize?: number,\n        roundPoints?: boolean,\n        perspectivePoints?: boolean,\n        minPerspectivePointSize?: number,\n        maxPerspectivePointSize?: number,\n        filterIntensity?: boolean,\n        minIntensity?: number,\n        maxIntensity?: number\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            pointSize: (options.pointSize !== undefined && options.pointSize !== null) ? options.pointSize : 1,\n            roundPoints: options.roundPoints !== false,\n            perspectivePoints: options.perspectivePoints !== false,\n            minPerspectivePointSize: (options.minPerspectivePointSize !== undefined && options.minPerspectivePointSize !== null) ? options.minPerspectivePointSize : 1,\n            maxPerspectivePointSize: (options.maxPerspectivePointSize !== undefined && options.maxPerspectivePointSize !== null) ? options.maxPerspectivePointSize : 6,\n            filterIntensity: !!options.filterIntensity,\n            minIntensity: (options.minIntensity !== undefined && options.minIntensity !== null) ? options.minIntensity : 0,\n            maxIntensity: (options.maxIntensity !== undefined && options.maxIntensity !== null) ? options.maxIntensity : 1\n        };\n    }\n\n    /**\n     * Sets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     */\n    set pointSize(value: number) {\n        this.#state.pointSize = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     */\n    get pointSize(): number {\n        return this.#state.pointSize;\n    }\n\n\n    /**\n     * Sets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     */\n    set roundPoints(value: boolean) {\n        if (this.#state.roundPoints === value) {\n            return;\n        }\n        this.#state.roundPoints = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     */\n    get roundPoints(): boolean {\n        return this.#state.roundPoints;\n    }\n\n    /**\n     * Sets if rendered point size reduces with distance when {@link Camera.projection} is set to ````PerspectiveProjectionType````.\n     *\n     * Default is ````true````.\n     */\n    set perspectivePoints(value: boolean) {\n        if (this.#state.perspectivePoints === value) {\n            return;\n        }\n        this.#state.perspectivePoints = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if rendered point size reduces with distance when {@link Camera.projection} is set to PerspectiveProjectionType.\n     *\n     * Default is ````false````.\n     */\n    get perspectivePoints(): boolean {\n        return this.#state.perspectivePoints;\n    }\n\n    /**\n     * Sets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set minPerspectivePointSize(value: number) {\n        if (this.#state.minPerspectivePointSize === value) {\n            return;\n        }\n        this.#state.minPerspectivePointSize = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get minPerspectivePointSize(): number {\n        return this.#state.minPerspectivePointSize;\n    }\n\n    /**\n     * Sets the maximum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     */\n    set maxPerspectivePointSize(value: number) {\n        if (this.#state.maxPerspectivePointSize === value) {\n            return;\n        }\n        this.#state.maxPerspectivePointSize = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets the maximum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     */\n    get maxPerspectivePointSize(): number {\n        return this.#state.maxPerspectivePointSize;\n    }\n\n    /**\n     * Sets if rendered point size reduces with distance when {@link Camera.projection} is set to ````PerspectiveProjectionType````.\n     *\n     * Default is ````false````.\n     */\n    set filterIntensity(value: boolean) {\n        if (this.#state.filterIntensity === value) {\n            return;\n        }\n        this.#state.filterIntensity = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if rendered point size reduces with distance when {@link Camera.projection} is set to PerspectiveProjectionType.\n     *\n     * Default is ````false````.\n     */\n    get filterIntensity(): boolean {\n        return this.#state.filterIntensity;\n    }\n\n    /**\n     * Sets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````0````.\n     */\n    set minIntensity(value: number) {\n        if (this.#state.minIntensity === value) {\n            return;\n        }\n        this.#state.minIntensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the minimum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````0````.\n     */\n    get minIntensity(): number {\n        return this.#state.minIntensity;\n    }\n\n    /**\n     * Sets the maximum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````1````.\n     */\n    set maxIntensity(value: number) {\n        if (this.#state.maxIntensity === value) {\n            return;\n        }\n        this.#state.maxIntensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the maximum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````1````.\n     */\n    get maxIntensity(): number {\n        return this.#state.maxIntensity;\n    }\n\n    /**\n     * @private\n     */\n    get hash(): string {\n        const state = this.#state;\n        return `${state.pointSize};\n        ${state.roundPoints};\n        ${state.perspectivePoints};\n        ${state.minPerspectivePointSize};\n        ${state.maxPerspectivePointSize};\n        ${state.filterIntensity}`;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {PointsMaterial};","import {EventDispatcher} from \"strongly-typed-events\";\n\n\nimport type {Camera} from \"./Camera\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {PerspectiveProjectionType} from \"@xeokit/constants\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {inverseMat4, createMat4, mulMat4v4, mulVec3Scalar, perspectiveMat4, transposeMat4} from \"@xeokit/matrix\";\n\n/**\n * PerspectiveProjection projection configuration for a {@link @xeokit/viewer!Camera} .\n *\n * ## Summary\n *\n * * Located at {@link Camera.perspectiveProjection}.\n * * Implicitly sets the left, right, top, bottom frustum planes using {@link PerspectiveProjection.fov}.\n * * {@link PerspectiveProjection.near} and {@link PerspectiveProjection.far} specify the distances to the clipping planes.\n * * {@link PerspectiveProjection.onProjMatrix} will fire an event whenever {@link PerspectiveProjection.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nexport class PerspectiveProjection extends Component {\n\n    /**\n     * The Camera this PerspectiveProjection belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link PerspectiveProjection.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<PerspectiveProjection, FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = PerspectiveProjectionType;\n\n    #state: {\n        far: number;\n        near: number;\n        fov: number;\n        fovAxis: string;\n        projMatrix: FloatArrayParam;\n        inverseProjMatrix: FloatArrayParam;\n        transposedProjMatrix: FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n    #onViewBoundary: any;\n\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        fov?: number,\n        fovAxis?: string,\n        near?: number,\n        far?: number\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            near: cfg.near || 0.1,\n            far: cfg.far || 2000.0,\n            fov: cfg.fov || 60.0,\n            fovAxis: cfg.fovAxis || \"min\",\n            projMatrix: createMat4(),\n            inverseProjMatrix: createMat4(),\n            transposedProjMatrix: createMat4()\n        };\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.#onViewBoundary = this.camera.view.onBoundary.subscribe( () => {\n            this.setDirty();\n        });\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<PerspectiveProjection, FloatArrayParam>());\n    }\n\n    /**\n     * Gets the PerspectiveProjection's field-of-view angle (FOV).\n     *\n     * Default value is ````60.0````.\n     *\n     * @returns {Number} Current field-of-view.\n     */\n    get fov(): number {\n        return this.#state.fov;\n    }\n\n    /**\n     * Sets the PerspectiveProjection's field-of-view angle (FOV).\n     *\n     * Default value is ````60.0````.\n     *\n     * @param value New field-of-view.\n     */\n    set fov(value: number) {\n        if (value === this.#state.fov) {\n            return;\n        }\n        this.#state.fov = value;\n        this.setDirty();\n     }\n\n    /**\n     * Gets the PerspectiveProjection's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis.\n     *\n     * Default value is ````\"min\"````.\n     *\n     * @returns {String} The current FOV axis value.\n     */\n    get fovAxis(): string {\n        return this.#state.fovAxis;\n    }\n\n    /**\n     * Sets the PerspectiveProjection's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis. \n     *\n     * Default value ````\"min\"````.\n     *\n     * @param value New FOV axis value.\n     */\n    set fovAxis(value: string) {\n        value = value || \"min\";\n        if (this.#state.fovAxis === value) {\n            return;\n        }\n        if (value !== \"x\" && value !== \"y\" && value !== \"min\") {\n            this.error(\"Unsupported value for 'fovAxis': \" + value + \" - defaulting to 'min'\");\n            value = \"min\";\n        }\n        this.#state.fovAxis = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the PerspectiveProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @returns The PerspectiveProjection's near plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the PerspectiveProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New PerspectiveProjection near plane position.\n     */\n    set near(value: number) {\n        if (this.#state.near === value) {\n            return;\n        }\n        this.#state.near = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of this PerspectiveProjection's far plane on the positive View-space Z-axis.\n     *\n     * @return {Number} The PerspectiveProjection's far plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of this PerspectiveProjection's far plane on the positive View-space Z-axis.\n     *\n     * @param value New PerspectiveProjection far plane position.\n     */\n    set far(value: number) {\n        if (this.#state.far === value) {\n            return;\n        }\n        this.#state.far = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the PerspectiveProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns  The PerspectiveProjection's projection matrix.\n     */\n    get projMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link PerspectiveProjection.projMatrix}.\n     *\n     * @returns  The inverse of {@link PerspectiveProjection.projMatrix}.\n     */\n    get inverseProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link PerspectiveProjection.projMatrix}.\n     *\n     * @returns  The transpose of {@link PerspectiveProjection.projMatrix}.\n     */\n    get transposedProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n        const boundary = this.camera.view.boundary;\n        const aspect = boundary[WIDTH_INDEX] / boundary[HEIGHT_INDEX];\n        const fovAxis = this.#state.fovAxis;\n        let fov = this.#state.fov;\n        if (fovAxis === \"x\" || (fovAxis === \"min\" && aspect < 1) || (fovAxis === \"max\" && aspect > 1)) {\n            fov = fov / aspect;\n        }\n        fov = Math.min(fov, 120);\n        perspectiveMat4(fov * (Math.PI / 180.0), aspect, this.#state.near, this.#state.far, this.#state.projMatrix);\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given View-space coordinates and Screen-space depth, using this PerspectiveProjection projection.\n     *\n     * @param canvasPos Inputs 2D View-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos: FloatArrayParam, screenZ: number, screenPos: FloatArrayParam, viewPos: FloatArrayParam, worldPos: FloatArrayParam): FloatArrayParam {\n\n        const canvasElement = this.camera.view.canvasElement;\n        const halfViewWidth = canvasElement.offsetWidth / 2.0;\n        const halfViewHeight = canvasElement.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfViewWidth) / halfViewWidth;\n        screenPos[1] = (canvasPos[1] - halfViewHeight) / halfViewHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.camera.view.onBoundary.unsubscribe(this.#onViewBoundary);\n        this.onProjMatrix.clear();\n    }\n}\n","\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {Camera} from \"./Camera\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {OrthoProjectionType} from \"@xeokit/constants\";\nimport {inverseMat4, createMat4, mulMat4v4, mulVec3Scalar, orthoMat4c, transposeMat4} from \"@xeokit/matrix\";\n\n/**\n * Orthographic projection configuration for a {@link @xeokit/viewer!Camera} .\n *\n * * Located at {@link Camera.orthoProjection}.\n * * Works like Blender's orthographic projection, where the positions of the left, right, top and bottom planes are implicitly\n * indicated with a single {@link OrthoProjection.scale} property, which causes the frustum to be symmetrical on X and Y axis, large enough to\n * contain the number of units given by {@link OrthoProjection.scale}.\n * * {@link OrthoProjection.near} and {@link OrthoProjection.far} indicated the distances to the clipping planes.\n * * {@link OrthoProjection.onProjMatrix} will fire an event whenever {@link OrthoProjection.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nexport class OrthoProjection extends Component {\n\n    /**\n     * The Camera this OrthoProjection belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link OrthoProjection.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<OrthoProjection, FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = OrthoProjectionType;\n\n    #state: {\n        far: number;\n        near: number;\n        scale: number;\n        projMatrix: FloatArrayParam;\n        inverseProjMatrix: FloatArrayParam;\n        transposedProjMatrix: FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n    #onViewBoundary: any;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        far?: number;\n        near?: number;\n        scale?: number;\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            near: cfg.near || 0.1,\n            far: cfg.far || 2000.0,\n            scale: cfg.scale || 1.0,\n            projMatrix: createMat4(),\n            inverseProjMatrix: createMat4(),\n            transposedProjMatrix: createMat4()\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<OrthoProjection, FloatArrayParam>());\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.#onViewBoundary = this.camera.view.onBoundary.subscribe(() => {\n            this.setDirty();\n        });\n    }\n\n    /**\n     * Gets scale factor for this OrthoProjection's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Default value is ````1.0````\n     *\n     * returns New OrthoProjection scale value.\n     */\n    get scale(): number {\n        return this.#state.scale;\n    }\n\n    /**\n     * Sets scale factor for this OrthoProjection's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Default value is ````1.0````\n     * @param value New scale value.\n     */\n    set scale(value: number) {\n        if (value <= 0) {\n            value = 0.01;\n        }\n        this.#state.scale = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the OrthoProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * returns New OrthoProjection near plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the OrthoProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New OrthoProjection near plane position.\n     */\n    set near(value: number) {\n        if (this.#state.near === value) {\n            return;\n        }\n        this.#state.near = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the OrthoProjection's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * returns New far ortho plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of the OrthoProjection's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````2000.0````.\n     *\n     * @param value New far ortho plane position.\n     */\n    set far(value: number) {\n        if (this.#state.far === value) {\n            return;\n        }\n        this.#state.far = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the OrthoProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns  The OrthoProjection's projection matrix.\n     */\n    get projMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link OrthoProjection.projMatrix}.\n     *\n     * @returns  The inverse of {@link OrthoProjection.projMatrix}.\n     */\n    get inverseProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link OrthoProjection.projMatrix}.\n     *\n     * @returns  The transpose of {@link OrthoProjection.projMatrix}.\n     */\n    get transposedProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n\n        const view = this.camera.view;\n        const scale = this.#state.scale;\n        const halfSize = 0.5 * scale;\n\n        const boundary = view.boundary;\n        const boundaryWidth = boundary[WIDTH_INDEX];\n        const boundaryHeight = boundary[HEIGHT_INDEX];\n        const aspect = boundaryWidth / boundaryHeight;\n\n        let left;\n        let right;\n        let top;\n        let bottom;\n\n        if (boundaryWidth > boundaryHeight) {\n            left = -halfSize;\n            right = halfSize;\n            top = halfSize / aspect;\n            bottom = -halfSize / aspect;\n\n        } else {\n            left = -halfSize * aspect;\n            right = halfSize * aspect;\n            top = halfSize;\n            bottom = -halfSize;\n        }\n\n        orthoMat4c(left, right, bottom, top, this.#state.near, this.#state.far, this.#state.projMatrix);\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.camera.view.redraw();\n\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given View-space coordinates, using this OrthoProjection projection.\n     *\n     * @param canvasPos Inputs 2D View-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: FloatArrayParam,\n        screenZ: number,\n        screenPos: FloatArrayParam,\n        viewPos: FloatArrayParam,\n        worldPos: FloatArrayParam): FloatArrayParam {\n\n        const canvas = this.camera.view.canvasElement;\n\n        const halfViewWidth = canvas.offsetWidth / 2.0;\n        const halfViewHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfViewWidth) / halfViewWidth;\n        screenPos[1] = (canvasPos[1] - halfViewHeight) / halfViewHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.camera.view.onBoundary.unsubscribe(this.#onViewBoundary);\n        this.onProjMatrix.clear();\n    }\n}\n\n","import {EventDispatcher} from \"strongly-typed-events\";\n\nimport type {Camera} from \"./Camera\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {FrustumProjectionType} from \"@xeokit/constants\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, frustumMat4, inverseMat4, mulMat4v4, mulVec3Scalar, transposeMat4} from \"@xeokit/matrix\";\n\n/**\n *  FrustumProjection-based perspective projection configuration for a {@link @xeokit/viewer!Camera} .\n *\n * * Located at {@link Camera.frustumProjection}.\n * * Allows to explicitly set the positions of the left, right, top, bottom, near and far planes, which is useful for asymmetrical view volumes, such as for stereo viewing.\n * * {@link FrustumProjection.near} and {@link FrustumProjection.far} specify the distances to the clipping planes.\n * * {@link FrustumProjection.onProjMatrix} will fire an event whenever {@link FrustumProjection.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nexport class FrustumProjection extends Component {\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = FrustumProjectionType;\n    /**\n     * The Camera this FrustumProjection belongs to.\n     */\n    public readonly camera: Camera;\n    /**\n     * Emits an event each time {@link FrustumProjection.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<FrustumProjection, FloatArrayParam>;\n    #state: {\n        far: number;\n        near: number;\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n        projMatrix: FloatArrayParam;\n        inverseProjMatrix: FloatArrayParam;\n        transposedProjMatrix: FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        far?: number;\n        near?: number;\n        top?: number;\n        bottom?: number;\n        right?: number;\n        left?: number;\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            projMatrix: createMat4(),\n            inverseProjMatrix: createMat4(),\n            transposedProjMatrix: createMat4(),\n            near: 0.1,\n            far: 10000.0,\n            left: (cfg.left !== undefined && cfg.left !== null) ? cfg.left : -1.0,\n            right: (cfg.right !== undefined && cfg.right !== null) ? cfg.right : 1.0,\n            bottom: (cfg.bottom !== undefined && cfg.bottom !== null) ? cfg.bottom : -1.0,\n            top: (cfg.top !== undefined && cfg.top !== null) ? cfg.top : 1.0\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<FrustumProjection, FloatArrayParam>());\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's left plane on the View-space X-axis.\n     *\n     * @return {Number} Left frustum plane position.\n     */\n    get left(): number {\n        return this.#state.left;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's left plane on the View-space X-axis.\n     *\n     * @param value New left frustum plane position.\n     */\n    set left(value: number) {\n        this.#state.left = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's right plane on the View-space X-axis.\n     *\n     * @return {Number} Right frustum plane position.\n     */\n    get right(): number {\n        return this.#state.right;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's right plane on the View-space X-axis.\n     *\n     * @param value New right frustum plane position.\n     */\n    set right(value: number) {\n        this.#state.right = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's top plane on the View-space Y-axis.\n     *\n     * @return {Number} Top frustum plane position.\n     */\n    get top(): number {\n        return this.#state.top;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's top plane on the View-space Y-axis.\n     *\n     * @param value New top frustum plane position.\n     */\n    set top(value: number) {\n        this.#state.top = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's bottom plane on the View-space Y-axis.\n     *\n     * @return {Number} Bottom frustum plane position.\n     */\n    get bottom(): number {\n        return this.#state.bottom;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's bottom plane on the View-space Y-axis.\n     *\n     * @param value New bottom frustum plane position.\n     */\n    set bottom(value: number) {\n        this.#state.bottom = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @return {Number} Near frustum plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New FrustumProjection near plane position.\n     */\n    set near(value: number) {\n        this.#state.near = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the FrustumProjection's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @return {Number} Far frustum plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of the FrustumProjection's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @param value New far frustum plane position.\n     */\n    set far(value: number) {\n        this.#state.far = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the FrustumProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns The FrustumProjection's projection matrix\n     */\n    get projMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link FrustumProjection.projMatrix}.\n     *\n     * @returns  The inverse orthographic projection projMatrix.\n     */\n    get inverseProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link FrustumProjection.projMatrix}.\n     *\n     * @returns The transpose of {@link FrustumProjection.projMatrix}.\n     */\n    get transposedProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n        frustumMat4(this.#state.left, this.#state.right, this.#state.bottom, this.#state.top, this.#state.near, this.#state.far, this.#state.projMatrix);\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given View-space coordinates, using this FrustumProjection projection.\n     *\n     * @param canvasPos Inputs 2D View-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: FloatArrayParam,\n        screenZ: number,\n        screenPos: FloatArrayParam,\n        viewPos: FloatArrayParam,\n        worldPos: FloatArrayParam): FloatArrayParam {\n\n        const canvasElement = this.camera.view.canvasElement;\n\n        const halfViewWidth = canvasElement.offsetWidth / 2.0;\n        const halfViewHeight = canvasElement.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfViewWidth) / halfViewWidth;\n        screenPos[1] = (canvasPos[1] - halfViewHeight) / halfViewHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.onProjMatrix.clear();\n    }\n}\n","\nimport {EventDispatcher} from \"strongly-typed-events\";\n\nimport type {Camera} from \"./Camera\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {CustomProjectionType} from \"@xeokit/constants\";\nimport {identityMat4, inverseMat4, createMat4, mulMat4v4, mulVec3Scalar, transposeMat4} from \"@xeokit/matrix\";\n\n/**\n * Configures a custom projection for a {@link @xeokit/viewer!Camera} .\n *\n * * Located at {@link Camera.customProjection}.\n * * {@link CustomProjection.onProjMatrix} will fire an event whenever {@link CustomProjection.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nclass CustomProjection extends Component {\n\n    /**\n     * The Camera this CustomProjection belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link CustomProjection.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<CustomProjection, FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = CustomProjectionType;\n\n    #state: {\n        projMatrix: FloatArrayParam;\n        transposedProjMatrix: FloatArrayParam;\n        inverseProjMatrix: FloatArrayParam\n    };\n\n    #inverseProjMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        projMatrix?: FloatArrayParam\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            projMatrix: createMat4(cfg.projMatrix || identityMat4()),\n            inverseProjMatrix: createMat4(),\n            transposedProjMatrix: createMat4()\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<CustomProjection, FloatArrayParam>());\n\n        this.#inverseProjMatrixDirty = true;\n        this.#transposedProjMatrixDirty = false;\n    }\n\n    /**\n     * Gets the CustomProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @return  New value for the CustomProjection's matrix.\n     */\n    get projMatrix(): FloatArrayParam {\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Sets the CustomProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @param projMatrix New value for the CustomProjection's matrix.\n     */\n    set projMatrix(projMatrix: FloatArrayParam) {\n        // @ts-ignore\n        this.#state.projMatrix.set(projMatrix);\n        this.#inverseProjMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.setDirty();\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Gets the inverse of {@link CustomProjection.projMatrix}.\n     *\n     * @returns The inverse of {@link CustomProjection.projMatrix}.\n     */\n    get inverseProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseProjMatrixDirty) {\n            inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseProjMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link CustomProjection.projMatrix}.\n     *\n     * @returns The transpose of {@link CustomProjection.projMatrix}.\n     */\n    get transposedProjMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * Un-projects the given View-space coordinates, using this CustomProjection.\n     *\n     * @param canvasPos Inputs 2D View-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: FloatArrayParam,\n        screenZ: number,\n        screenPos: FloatArrayParam,\n        viewPos: FloatArrayParam,\n        worldPos: FloatArrayParam) {\n        const canvasElement = this.camera.view.canvasElement;\n        const halfViewWidth = canvasElement.offsetWidth / 2.0;\n        const halfViewHeight = canvasElement.offsetHeight / 2.0;\n        screenPos[0] = (canvasPos[0] - halfViewWidth) / halfViewWidth;\n        screenPos[1] = (canvasPos[1] - halfViewHeight) / halfViewHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n        mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n        mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.onProjMatrix.clear();\n    }\n}\n\nexport {CustomProjection};","import {EventDispatcher} from \"strongly-typed-events\";\nimport {\n    addVec3,\n    createMat4,\n    createVec3,\n    cross3Vec3,\n    dotVec3,\n    identityMat4,\n    inverseMat4,\n    lenVec3,\n    lookAtMat4v,\n    mulMat4,\n    mulVec3Scalar,\n    normalizeVec3,\n    rotationMat4v,\n    subVec3,\n    transformPoint3,\n    transposeMat4\n} from \"@xeokit/matrix\";\n\nimport {PerspectiveProjection} from './PerspectiveProjection';\nimport {OrthoProjection} from './OrthoProjection';\nimport {FrustumProjection} from './FrustumProjection';\nimport {CustomProjection} from './CustomProjection';\nimport type {View} from \"./View\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {DEGTORAD, FloatArrayParam} from \"@xeokit/math\";\nimport {\n    CustomProjectionType,\n    FrustumProjectionType,\n    OrthoProjectionType,\n    PerspectiveProjectionType\n} from \"@xeokit/constants\";\nimport {Frustum3, setFrustum3} from \"@xeokit/boundaries\";\n\n\nconst tempVec3 = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\nconst tempVec3d = createVec3();\nconst tempVec3e = createVec3();\nconst tempVec3f = createVec3();\nconst tempMat = createMat4();\nconst tempMatb = createMat4();\nconst eyeLookVec = createVec3();\nconst eyeLookVecNorm = createVec3();\nconst eyeLookOffset = createVec3();\nconst offsetEye = createVec3();\n\n\n/**\n * Controls the viewpoint and projection for a {@link @xeokit/viewer!View}.\n *\n * ## Summary\n *\n * * Located at {@link View.camera}\n * * Views are located at {@link Viewer.views}\n * * Controls camera viewing and projection transforms\n * * Provides methods to pan, zoom and orbit\n * * Dynamically configurable World-space axis\n * * Has {@link PerspectiveProjection}, {@link OrthoProjection} and {@link FrustumProjection} and {@link CustomProjection}, which you can dynamically switch between\n * * Switchable gimbal lock\n * * Can be flown to look at targets using the View's {@link CameraFlightAnimation}\n * * Can be animated along a path using a {@link CameraPathAnimation}\n *\n * ## Getting a View's Camera\n *\n * Let's create a {@link @xeokit/viewer!Viewer} with a single {@link @xeokit/viewer!View}, from which we'll get a Camera:\n *\n * ````javascript\n * const viewer = new Viewer();\n *\n * const view = new View(viewer, {\n *      canvasId: \"myCanvas1\"\n * });\n *\n * const camera = view.camera;\n * ````\n *\n * ## Setting the Camera Position\n *\n * Get and set the Camera's absolute position:\n *\n * ````javascript\n * camera.eye = [-10,0,0];\n * camera.look = [-10,0,0];\n * camera.up = [0,1,0];\n * ````\n *\n * ## Camera View and Projection Matrices\n *\n * The Camera's *view matrix* transforms coordinates from World-space to View-space:\n *\n * ````javascript\n * var viewMatrix = camera.viewMatrix;\n * ````\n *\n * {@link Camera.onViewMatrix} fires whenever {@link Camera.viewMatrix} updates:\n *\n * ````javascript\n * camera.onViewMatrix.subscribe((camera, matrix) => { ... });\n * ````\n *\n * ## Rotating the Camera\n *\n * Orbiting the {@link Camera.look} position:\n *\n * ````javascript\n * camera.orbitYaw(20.0);\n * camera.orbitPitch(10.0);\n * ````\n *\n * Perform a *first-person* rotation, in which we rotate {@link Camera.look} and {@link Camera.up} about {@link Camera.eye}:\n *\n * ````javascript\n * camera.yaw(5.0);\n * camera.pitch(-10.0);\n * ````\n *\n * ## Panning the Camera\n *\n * Pan along the Camera's local axis (ie. left/right, up/down, forward/backward):\n *\n * ````javascript\n * camera.pan([-20, 0, 10]);\n * ````\n *\n * ## Zooming the Camera\n *\n * Zoom to vary distance between {@link Camera.eye} and {@link Camera.look}:\n *\n * ````javascript\n * camera.zoom(-5); // Move five units closer\n * ````\n *\n * Get the current distance between {@link Camera.eye} and {@link Camera.look}:\n *\n * ````javascript\n * var distance = camera.eyeLookDist;\n * ````\n *\n * ## Projection\n *\n * The Camera has a Component to manage each projection type, which are: {@link PerspectiveProjection}, {@link OrthoProjection}\n * and {@link FrustumProjection} and {@link CustomProjection}.\n *\n * You can configure those components at any time, regardless of which is currently active:\n *\n * The Camera has a {@link PerspectiveProjection} to manage perspective\n * ````javascript\n *\n * // Set some properties on PerspectiveProjection\n * camera.perspectiveProjection.near = 0.4;\n * camera.perspectiveProjection.fov = 45;\n *\n * // Set some properties on OrthoProjection\n * camera.orthoProjection.near = 0.8;\n * camera.orthoProjection.far = 1000;\n *\n * // Set some properties on FrustumProjection\n * camera.frustumProjection.left = -1.0;\n * camera.frustumProjection.right = 1.0;\n * camera.frustumProjection.far = 1000.0;\n *\n * // Set the matrix property on CustomProjection\n * camera.customProjection.projMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n *\n * // Switch between the projection types\n * Camera.projectionType = PerspectiveProjectionType; // Switch to perspective\n * Camera.projectionType = FrustumProjectiontype; // Switch to frustum\n * Camera.projectionType = OrthoProjectionType; // Switch to ortho\n * Camera.projectionType = CustomProjectionType; // Switch to custom\n * ````\n *\n * Camera provides the projection matrix for the currently active projection in {@link Camera.projMatrix}.\n *\n * Get the projection matrix:\n *\n * ````javascript\n * var projMatrix = camera.projMatrix;\n * ````\n *\n * Listen for projection matrix updates:\n *\n * ````javascript\n * camera.onProjMatrix((camera, matrix) => { ... });\n * ````\n *\n * ## Configuring World up direction\n *\n * We can dynamically configure the directions of the World-space coordinate system.\n *\n * Setting the +Y axis as World \"up\", +X as right and -Z as forwards (convention in some modeling software):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0,    // Right\n *     0, 1, 0,    // Up\n *     0, 0,-1     // Forward\n * ];\n * ````\n *\n * Setting the +Z axis as World \"up\", +X as right and -Y as \"up\" (convention in most CAD and BIM viewers):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0, // Right\n *     0, 0, 1, // Up\n *     0,-1, 0  // Forward\n * ];\n * ````\n *\n * The Camera has read-only convenience properties that provide each axis individually:\n *\n * ````javascript\n * var worldRight = camera.worldRight;\n * var worldForward = camera.worldForward;\n * var worldUp = camera.worldUp;\n * ````\n *\n * ## Gimbal locking\n *\n * By default, the Camera locks yaw rotation to pivot about the World-space \"up\" axis. We can dynamically lock and unlock that at any time:\n *\n * ````javascript\n * camera.gimbalLock = false; // Yaw rotation now happens about Camera's local Y-axis\n * camera.gimbalLock = true; // Yaw rotation now happens about World's \"up\" axis\n * ````\n *\n * See: <a href=\"https://en.wikipedia.org/wiki/Gimbal_lock\">https://en.wikipedia.org/wiki/Gimbal_lock</a>\n */\nclass Camera extends Component {\n\n    /**\n     * The View to which this Camera belongs.\n     *\n     * @property view\n     * @type {View}\n     * @final\n     */\n    public readonly view: View;\n\n    /**\n     * The perspective projection.\n     *\n     * The Camera uses this while {@link Camera.projectionType} equals {@link PerspectiveProjectionType}.\n     */\n    public readonly perspectiveProjection: PerspectiveProjection;\n\n    /**\n     * The orthographic projection.\n     *\n     * The Camera uses this while {@link Camera.projectionType} equals {@link OrthoProjectionType}.\n     */\n    public readonly orthoProjection: OrthoProjection;\n\n    /**\n     * The frustum projection.\n     *\n     * The Camera uses this while {@link Camera.projectionType} equals {@link FrustumProjectionType}.\n     */\n    public readonly frustumProjection: FrustumProjection;\n\n    /**\n     * The custom projection.\n     *\n     * The Camera uses this while {@link Camera.projectionType} equals {@link CustomProjectionType}.\n     */\n    public readonly customProjection: CustomProjection;\n\n    /**\n     * Emits an event each time {@link Camera.projectionType} updates.\n     *\n     * ````javascript\n     * myView.camera.onProjectionType.subscribe((camera, projType) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onProjectionType: EventEmitter<Camera, number>;\n\n    /**\n     * Emits an event each time {@link Camera.viewMatrix} updates.\n     *\n     * ````javascript\n     * myView.camera.onViewMatrix.subscribe((camera, viewMatrix) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onViewMatrix: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link Camera.projMatrix} updates.\n     *\n     * ````javascript\n     * myView.camera.onProjMatrix.subscribe((camera, projMatrix) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link Camera.worldAxis} updates.\n     *\n     * ````javascript\n     * myView.camera.onWorldAxis.subscribe((camera, worldAxis) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onWorldAxis: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link Camera.frustum} updates.\n     *\n     * ````javascript\n     * myView.camera.onFrustum.subscribe((camera, frustum) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onFrustum: EventEmitter<Camera, Frustum3>;\n\n    readonly #state: {\n        deviceMatrix: FloatArrayParam,\n        viewNormalMatrix: FloatArrayParam,\n        hasDeviceMatrix: boolean,\n        viewMatrix: FloatArrayParam,\n        inverseViewMatrix: FloatArrayParam,\n        eye: FloatArrayParam,\n        look: FloatArrayParam,\n        up: FloatArrayParam,\n        worldAxis: FloatArrayParam,\n        worldUp: FloatArrayParam,\n        worldRight: FloatArrayParam,\n        worldForward: FloatArrayParam,\n        gimbalLock: boolean,\n        constrainPitch: boolean,\n        projectionType: number\n    };\n\n    /**\n     * The viewing frustum.\n     */\n    #frustum: Frustum3;\n    #activeProjection: PerspectiveProjection | OrthoProjection | FrustumProjection | CustomProjection;\n\n    /**\n     * @private\n     */\n    constructor(view: View, cfg: {\n        eye?: FloatArrayParam;\n        look?: FloatArrayParam,\n        up?: FloatArrayParam;\n        deviceMatrix?: FloatArrayParam;\n        gimbalLock?: boolean;\n        worldAxis?: FloatArrayParam;\n        constrainPitch?: boolean;\n        projectionType?: number\n    } = {}) {\n\n        super(view, cfg);\n\n        this.onProjectionType = new EventEmitter(new EventDispatcher<Camera, number>());\n        this.onViewMatrix = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n        this.onWorldAxis = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n        this.onFrustum = new EventEmitter(new EventDispatcher<Camera, Frustum3>());\n\n        this.view = view;\n\n        this.#state = {\n            eye: createVec3(cfg.eye || [0, 0, 10]),\n            look: createVec3(cfg.look || [0, 0, 0]),\n            up: createVec3(cfg.up || [0, 1, 0]),\n            worldUp: createVec3([0, 1, 0]),\n            worldRight: createVec3([1, 0, 0]),\n            worldForward: createVec3([0, 0, -1]),\n            worldAxis: new Float32Array(cfg.worldAxis || [1, 0, 0, 0, 1, 0, 0, 0, 1]),\n            gimbalLock: cfg.gimbalLock !== false,\n            constrainPitch: cfg.constrainPitch === true,\n            projectionType: cfg.projectionType || PerspectiveProjectionType,\n            deviceMatrix: cfg.deviceMatrix ? createMat4(cfg.deviceMatrix) : identityMat4(),\n            hasDeviceMatrix: !!cfg.deviceMatrix,\n            viewMatrix: createMat4(),\n            viewNormalMatrix: createMat4(),\n            inverseViewMatrix: createMat4()\n        };\n\n        this.#frustum = new Frustum3();\n\n        this.perspectiveProjection = new PerspectiveProjection(this);\n        this.orthoProjection = new OrthoProjection(this);\n        this.frustumProjection = new FrustumProjection(this);\n        this.customProjection = new CustomProjection(this);\n\n        this.#activeProjection = this.perspectiveProjection;\n\n        this.perspectiveProjection.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === PerspectiveProjectionType) {\n                this.onProjMatrix.dispatch(this, this.perspectiveProjection.projMatrix);\n            }\n        });\n\n        this.orthoProjection.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === OrthoProjectionType) {\n                this.onProjMatrix.dispatch(this, this.orthoProjection.projMatrix);\n            }\n        });\n\n        this.frustumProjection.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === FrustumProjectionType) {\n                this.onProjMatrix.dispatch(this, this.frustumProjection.projMatrix);\n            }\n        });\n\n        this.customProjection.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === CustomProjectionType) {\n                this.onProjMatrix.dispatch(this, this.customProjection.projMatrix);\n            }\n        });\n    }\n\n    /**\n     * Gets the currently active projection for this Camera.\n     *\n     * The currently active project is selected with {@link Camera.projectionType}.\n     *\n     * @returns {PerspectiveProjection|OrthoProjection|FrustumProjection|CustomProjection} The currently active projection is active.\n     */\n    get project(): PerspectiveProjection | OrthoProjection | FrustumProjection | CustomProjection {\n        return this.#activeProjection;\n    }\n\n    /**\n     * Gets the position of the Camera's eye.\n     *\n     * Default vale is ````[0,0,10]````.\n     *\n     * @type {Number[]} New eye position.\n     */\n    get eye(): FloatArrayParam {\n        return this.#state.eye;\n    }\n\n    /**\n     * Sets the position of the Camera's eye.\n     *\n     * Default value is ````[0,0,10]````.\n     *\n     * @emits \"eye\" event on change, with the value of this property.\n     * @type {Number[]} New eye position.\n     */\n    set eye(eye: FloatArrayParam) {\n        // @ts-ignore\n        this.#state.eye.set(eye);\n        this.setDirty(); // Ensure matrix built on next \"tick\"\n    }\n\n    /**\n     * Gets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @returns {Number[]} Camera look position.\n     */\n    get look(): FloatArrayParam {\n        return this.#state.look;\n    }\n\n    /**\n     * Sets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @param look Camera look position.\n     */\n    set look(look: FloatArrayParam) {\n        // @ts-ignore\n        this.#state.look.set(look);\n        this.setDirty(); // Ensure matrix built on next \"tick\"\n    }\n\n    /**\n     * Gets the direction of this Camera's {@link Camera.up} vector.\n     *\n     * @returns {Number[]} Direction of \"up\".\n     */\n    get up(): FloatArrayParam {\n        return this.#state.up;\n    }\n\n    /**\n     * Sets the direction of this Camera's {@link Camera.up} vector.\n     *\n     * @param up Direction of \"up\".\n     */\n    set up(up: FloatArrayParam) {\n        // @ts-ignore\n        this.#state.up.set(up);\n        this.setDirty();\n    }\n\n    /**\n     * Gets the direction of World-space \"up\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[0,1,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldUp(): FloatArrayParam {\n        return this.#state.worldUp;\n    }\n\n    /**\n     * Gets the direction of World-space \"right\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[1,0,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldRight(): FloatArrayParam {\n        return this.#state.worldRight;\n    }\n\n    /**\n     * Gets the direction of World-space \"forwards\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[0,0,1]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldForward(): FloatArrayParam {\n        return this.#state.worldForward;\n    }\n\n    /**\n     * Gets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera.up} and {@link Camera.worldUp} is less than one degree.\n     *\n     * Default value is ````false````.\n     *\n     * @returns {Boolean} ````true```` if pitch rotation is currently constrained.\n     */\n    get constrainPitch(): boolean {\n        return this.#state.constrainPitch;\n    }\n\n    /**\n     * Sets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera.up} and {@link Camera.worldUp} is less than one degree.\n     *\n     * Default value is ````false````.\n     *\n     * @param value Set ````true```` to contrain pitch rotation.\n     */\n    set constrainPitch(value: boolean) {\n        this.#state.constrainPitch = value;\n    }\n\n    /**\n     * Gets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * @returns {Boolean} Returns ````true```` if gimbal is locked.\n     */\n    get gimbalLock(): boolean {\n        return this.#state.gimbalLock;\n    }\n\n    /**\n     * Sets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * @params {Boolean} gimbalLock Set true to lock gimbal.\n     */\n    set gimbalLock(value: boolean) {\n        this.#state.gimbalLock = value;\n    }\n\n    /**\n     * Gets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @returns {Number[]} The current World coordinate axis.\n     */\n    get worldAxis(): FloatArrayParam {\n        return this.#state.worldAxis;\n    }\n\n    /**\n     * Sets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @param axis The new Wworld coordinate axis.\n     */\n    set worldAxis(axis: FloatArrayParam) {\n        const state = this.#state;\n        // @ts-ignore\n        state.worldAxis.set(axis);\n        state.worldRight[0] = state.worldAxis[0];\n        state.worldRight[1] = state.worldAxis[1];\n        state.worldRight[2] = state.worldAxis[2];\n        state.worldUp[0] = state.worldAxis[3];\n        state.worldUp[1] = state.worldAxis[4];\n        state.worldUp[2] = state.worldAxis[5];\n        state.worldForward[0] = state.worldAxis[6];\n        state.worldForward[1] = state.worldAxis[7];\n        state.worldForward[2] = state.worldAxis[8];\n        this.onWorldAxis.dispatch(this, state.worldAxis);\n    }\n\n    /**\n     * Gets an optional matrix to premultiply into {@link Camera.projMatrix} matrix.\n     *\n     * @returns {Number[]} The matrix.\n     */\n    get deviceMatrix(): FloatArrayParam {\n        // @ts-ignore\n        return this.#state.deviceMatrix;\n    }\n\n    /**\n     * Sets an optional matrix to premultiply into {@link Camera.projMatrix} matrix.\n     *\n     * This is intended to be used for stereo rendering with WebVR etc.\n     *\n     * @param matrix The matrix.\n     */\n    set deviceMatrix(matrix: FloatArrayParam) {\n        // @ts-ignore\n        this.#state.deviceMatrix.set(matrix || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.#state.hasDeviceMatrix = !!matrix;\n        this.setDirty();\n    }\n\n    /**\n     * Gets if the World-space X-axis is \"up\".\n     * @returns {boolean}\n     */\n    get xUp(): boolean {\n        return this.#state.worldUp[0] > this.#state.worldUp[1] && this.#state.worldUp[0] > this.#state.worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Y-axis is \"up\".\n     * @returns {boolean}\n     */\n    get yUp(): boolean {\n        return this.#state.worldUp[1] > this.#state.worldUp[0] && this.#state.worldUp[1] > this.#state.worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Z-axis is \"up\".\n     * @returns {boolean}\n     */\n    get zUp(): boolean {\n        return this.#state.worldUp[2] > this.#state.worldUp[0] && this.#state.worldUp[2] > this.#state.worldUp[1];\n    }\n\n    /**\n     * Gets distance from {@link Camera.look} to {@link Camera.eye}.\n     *\n     * @returns {Number} The distance.\n     */\n    get eyeLookDist(): number {\n        return lenVec3(subVec3(this.#state.look, this.#state.eye, tempVec3));\n    }\n\n    /**\n     * Gets the Camera's viewing transformation matrix.\n     *\n     * @returns {Number[]} The viewing transform matrix.\n     */\n    get viewMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.viewMatrix;\n    }\n\n    /**\n     * Gets the inverse of the Camera's viewing transform matrix.\n     *\n     * @returns {Number[]} The inverse viewing transform matrix.\n     */\n    get inverseViewMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.inverseViewMatrix;\n    }\n\n    /**\n     * Gets the Camera's projection transformation projMatrix.\n     *\n     * @returns {Number[]} The projection matrix.\n     */\n    get projMatrix(): FloatArrayParam {\n        // @ts-ignore\n        return this.#activeProjection.projMatrix;\n    }\n\n    /**\n     * Gets the Camera's 3D World-space viewing frustum.\n     *\n     * @returns {Frustum3} The frustum.\n     */\n    get frustum() {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#frustum;\n    }\n\n    /**\n     * Gets the active projection type.\n     *\n     * Possible values are ````PerspectiveProjectionType````, ````OrthoProjectionType````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````PerspectiveProjectionType````.\n     *\n     * @returns {number} Identifies the active projection type.\n     */\n    get projectionType(): number {\n        return this.#state.projectionType;\n    }\n\n    /**\n     * Sets the active projection type.\n     *\n     * Accepted values are ````PerspectiveProjectionType````, ````OrthoProjectionType````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````PerspectiveProjectionType````.\n     *\n     * @param value Identifies the active projection type.\n     */\n    set projectionType(value: number | undefined) {\n        value = value || PerspectiveProjectionType;\n        if (this.#state.projectionType === value) {\n            return;\n        }\n        if (value === PerspectiveProjectionType) {\n            this.#activeProjection = this.perspectiveProjection;\n        } else if (value === OrthoProjectionType) {\n            this.#activeProjection = this.orthoProjection;\n        } else if (value === FrustumProjectionType) {\n            this.#activeProjection = this.frustumProjection;\n        } else if (value === CustomProjectionType) {\n            this.#activeProjection = this.customProjection;\n        } else {\n            this.error(\"Unsupported value for 'projection': \" + value + \" defaulting to PerspectiveProjectionType\");\n            this.#activeProjection = this.perspectiveProjection;\n            value = PerspectiveProjectionType;\n        }\n        // @ts-ignore\n        this.#activeProjection.clean();\n        this.#state.projectionType = value;\n        this.clean();\n        this.onProjectionType.dispatch(this, this.#state.projectionType);\n        this.onProjMatrix.dispatch(this, this.#activeProjection.projMatrix);\n    }\n\n    clean() {\n        const state = this.#state;\n        // In ortho mode, build the view matrix with an eye position that's translated\n        // well back from look, so that the front sectionPlane plane doesn't unexpectedly cut\n        // the front off the view (not a problem with perspective, since objects close enough\n        // to be clipped by the front plane are usually too big to see anything of their cross-sections).\n        let eye;\n        if (this.projectionType === OrthoProjectionType) {\n            subVec3(this.#state.eye, this.#state.look, eyeLookVec);\n            normalizeVec3(eyeLookVec, eyeLookVecNorm);\n            mulVec3Scalar(eyeLookVecNorm, 1000.0, eyeLookOffset);\n            addVec3(this.#state.look, eyeLookOffset, offsetEye);\n            eye = offsetEye;\n        } else {\n            eye = this.#state.eye;\n        }\n        if (state.hasDeviceMatrix) {\n            lookAtMat4v(eye, this.#state.look, this.#state.up, tempMatb);\n            mulMat4(state.deviceMatrix, tempMatb, state.viewMatrix);\n        } else {\n            lookAtMat4v(eye, this.#state.look, this.#state.up, state.viewMatrix);\n        }\n        inverseMat4(this.#state.viewMatrix, this.#state.inverseViewMatrix);\n        transposeMat4(this.#state.inverseViewMatrix, this.#state.viewNormalMatrix);\n        this.view.redraw();\n        setFrustum3(this.#state.viewMatrix, this.#activeProjection.projMatrix, this.#frustum);\n        this.onViewMatrix.dispatch(this, this.#state.viewMatrix);\n        this.onFrustum.dispatch(this, this.#frustum);\n    }\n\n    /**\n     * Rotates {@link Camera.eye} about {@link Camera.look}, around the {@link Camera.up} vector\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    orbitYaw(angleInc: number) {\n        let lookEyeVec = subVec3(this.#state.eye, this.#state.look, tempVec3);\n        rotationMat4v(angleInc * 0.0174532925, this.#state.gimbalLock ? this.#state.worldUp : this.#state.up, tempMat);\n        lookEyeVec = transformPoint3(tempMat, lookEyeVec, tempVec3b);\n        this.eye = addVec3(this.#state.look, lookEyeVec, tempVec3c); // Set eye position as 'look' plus 'eye' vector\n        this.up = transformPoint3(tempMat, this.#state.up, tempVec3d); // Rotate 'up' vector\n    }\n\n    /**\n     * Rotates {@link Camera.eye} about {@link Camera.look} around the right axis (orthogonal to {@link Camera.up} and \"look\").\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    orbitPitch(angleInc: number) {\n        if (this.#state.constrainPitch) {\n            angleInc = dotVec3(this.#state.up, this.#state.worldUp) / DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let eye2 = subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const left = cross3Vec3(normalizeVec3(eye2, tempVec3b), normalizeVec3(this.#state.up, tempVec3c));\n        rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        eye2 = transformPoint3(tempMat, eye2, tempVec3d);\n        this.up = transformPoint3(tempMat, this.#state.up, tempVec3e);\n        this.eye = addVec3(eye2, this.#state.look, tempVec3f);\n    }\n\n    /**\n     * Rotates {@link Camera.look} about {@link Camera.eye}, around the {@link Camera.up} vector.\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    yaw(angleInc: number) {\n        let look2 = subVec3(this.#state.look, this.#state.eye, tempVec3);\n        rotationMat4v(angleInc * 0.0174532925, this.#state.gimbalLock ? this.#state.worldUp : this.#state.up, tempMat);\n        look2 = transformPoint3(tempMat, look2, tempVec3b);\n        this.look = addVec3(look2, this.#state.eye, tempVec3c);\n        if (this.#state.gimbalLock) {\n            this.up = transformPoint3(tempMat, this.#state.up, tempVec3d);\n        }\n    }\n\n    /**\n     * Rotates {@link Camera.look} about {@link Camera.eye}, around the right axis (orthogonal to {@link Camera.up} and \"look\").\n\n     * @param angleInc Angle of rotation in degrees\n     */\n    pitch(angleInc: number) {\n        if (this.#state.constrainPitch) {\n            angleInc = dotVec3(this.#state.up, this.#state.worldUp) / DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let look2 = subVec3(this.#state.look, this.#state.eye, tempVec3);\n        const left = cross3Vec3(normalizeVec3(look2, tempVec3b), normalizeVec3(this.#state.up, tempVec3c));\n        rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        this.up = transformPoint3(tempMat, this.#state.up, tempVec3f);\n        look2 = transformPoint3(tempMat, look2, tempVec3d);\n        this.look = addVec3(look2, this.#state.eye, tempVec3e);\n    }\n\n    /**\n     * Pans the Camera along its local X, Y and Z axis.\n     *\n     * @param pan The pan vector\n     */\n    pan(pan: FloatArrayParam) {\n        const eye2 = subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const vec = [0, 0, 0];\n        let v;\n        if (pan[0] !== 0) {\n            const left = cross3Vec3(normalizeVec3(eye2, []), normalizeVec3(this.#state.up, tempVec3b));\n            v = mulVec3Scalar(left, pan[0]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[1] !== 0) {\n            v = mulVec3Scalar(normalizeVec3(this.#state.up, tempVec3c), pan[1]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[2] !== 0) {\n            v = mulVec3Scalar(normalizeVec3(eye2, tempVec3d), pan[2]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        this.eye = addVec3(this.#state.eye, vec, tempVec3e);\n        this.look = addVec3(this.#state.look, vec, tempVec3f);\n    }\n\n    /**\n     * Increments/decrements the Camera's zoom factor, which is the distance between {@link Camera.eye} and {@link Camera.look}.\n     *\n     * @param delta Zoom factor increment.\n     */\n    zoom(delta: number) {\n        const vec = subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const lenLook = Math.abs(lenVec3(vec));\n        const newLenLook = Math.abs(lenLook + delta);\n        if (newLenLook < 0.5) {\n            return;\n        }\n        const dir = normalizeVec3(vec, tempVec3c);\n        this.eye = addVec3(this.#state.look, mulVec3Scalar(dir, newLenLook), tempVec3d);\n    }\n\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this.onProjectionType.clear();\n        this.onViewMatrix.clear();\n        this.onProjMatrix.clear();\n        this.onWorldAxis.clear();\n    }\n\n\n}\n\nexport {Camera};\n","import {Queue, Map, inQuotes} from \"@xeokit/utils\";\n\nimport {stats} from './stats';\nimport type {Viewer} from \"./Viewer\";\n\n\nexport interface TickEvent {\n    viewerId: string;\n    time: number;\n    startTime: number;\n    prevTime: number;\n    deltaTime: number;\n}\n\nconst tickEvent: TickEvent = {\n    viewerId: \"\",\n    time: 0,\n    startTime: 0,\n    prevTime: 0,\n    deltaTime: 0\n};\n\nclass Scheduler {\n\n    public readonly viewers: { [key: string]: Viewer };\n\n    #viewersRenderInfo: { [key: string]: any } = {};\n\n    // @ts-ignore\n    #viewerIDMap: Map = new Map(); // Ensures unique viewer IDs\n    #taskQueue: Queue = new Queue(); // Task queue, which is pumped on each frame; tasks are pushed to it with calls to xeokit.schedule\n    #taskBudget: number = 10; // Millisecs we're allowed to spend on tasks in each frame\n    #lastTime: number = 0;\n    #elapsedTime: number = 0;\n\n    /**\n     * @private\n     */\n    constructor() {\n\n        this.viewers = {};\n\n        const frame = () => {\n            const time = Date.now();\n            if (this.#lastTime > 0) {\n                this.#elapsedTime = time - this.#lastTime;\n            }\n            this.#runTasks(time);\n            this.#fireTickEvents(time);\n            this.#renderViewers();\n            this.#lastTime = time;\n\n            requestAnimationFrame(frame);\n        };\n\n        requestAnimationFrame(frame);\n    }\n\n    #runTasks(time: number) {\n        const tasksRun = this.#runTasksUntil(time + this.#taskBudget);\n        const tasksScheduled = this.getNumTasks();\n        stats.frame.tasksRun = tasksRun;\n        stats.frame.tasksScheduled = tasksScheduled;\n        stats.frame.tasksBudget = this.#taskBudget;\n    }\n\n    #runTasksUntil(until: number = -1) {\n        let time = (new Date()).getTime();\n        let tasksRun = 0;\n        while (this.#taskQueue.length > 0 && (until < 0 || time < until)) {\n            const callback = this.#taskQueue.shift();\n            const scope = this.#taskQueue.shift();\n            if (scope) {\n                callback.call(scope);\n            } else {\n                callback();\n            }\n            time = (new Date()).getTime();\n            tasksRun++;\n        }\n        return tasksRun;\n    }\n\n    #fireTickEvents(time: number) {\n        tickEvent.time = time;\n        for (let id in scheduler.viewers) {\n            if (this.viewers.hasOwnProperty(id)) {\n                const viewer = this.viewers[id];\n                tickEvent.viewerId = id;\n                tickEvent.startTime = viewer.startTime;\n                tickEvent.deltaTime = tickEvent.prevTime != null ? tickEvent.time - tickEvent.prevTime : 0;\n                viewer.onTick.dispatch(viewer, tickEvent);\n            }\n        }\n        tickEvent.prevTime = time;\n    }\n\n    #renderViewers() {\n        for (let id in this.viewers) {\n            if (this.viewers.hasOwnProperty(id)) {\n                const viewer = this.viewers[id];\n                let renderInfo = this.#viewersRenderInfo[id];\n                if (!renderInfo) {\n                    renderInfo = this.#viewersRenderInfo[id] = {}; // FIXME\n                }\n\n\n                // const ticksPerOcclusionTest = viewer.ticksPerOcclusionTest;\n                // if (renderInfo.ticksPerOcclusionTest !== ticksPerOcclusionTest) {\n                //     renderInfo.ticksPerOcclusionTest = ticksPerOcclusionTest;\n                //     renderInfo.renderCountdown = ticksPerOcclusionTest;\n                // }\n                // if (--viewer.occlusionTestCountdown <= 0) {\n                //     viewer.doOcclusionTest();\n                //     viewer.occlusionTestCountdown = ticksPerOcclusionTest;\n                // }\n                //\n                // ticksPerRender = viewer.ticksPerRender;\n                // if (renderInfo.ticksPerRender !== ticksPerRender) {\n                //     renderInfo.ticksPerRender = ticksPerRender;\n                //     renderInfo.renderCountdown = ticksPerRender;\n                // }\n                // if (--renderInfo.renderCountdown === 0) {\n                    viewer.render({});\n                //     renderInfo.renderCountdown = ticksPerRender;\n                // }\n            }\n        }\n    }\n\n    registerViewer(viewer: Viewer) {\n        if (viewer.id) {\n            if (this.viewers[viewer.id]) {\n                console.error(`[ERROR] Viewer ${inQuotes(viewer.id)} already exists`);\n                return;\n            }\n        } else { // Auto-generated ID\n            // @ts-ignore\n            // noinspection JSConstantReassignment\n            viewer.id = this.#viewerIDMap.addItem({});\n        }\n        this.viewers[viewer.id] = viewer;\n        // const ticksPerOcclusionTest = viewer.ticksPerOcclusionTest;\n        // const ticksPerRender = viewer.ticksPerRender;\n        this.#viewersRenderInfo[viewer.id] = {\n            // ticksPerOcclusionTest: ticksPerOcclusionTest,\n            // ticksPerRender: ticksPerRender,\n            // renderCountdown: ticksPerRender\n        };\n        stats.components.viewers++;\n    }\n\n    deregisterViewer(viewer:Viewer) {\n        if (!this.viewers[viewer.id]) {\n            return;\n        }\n        this.#viewerIDMap.removeItem(viewer.id);\n        delete this.viewers[viewer.id];\n        delete this.#viewersRenderInfo[viewer.id];\n        stats.components.viewers--;\n    }\n\n    scheduleTask(callback: Function, scope: any) {\n        this.#taskQueue.push(callback);\n        this.#taskQueue.push(scope);\n    }\n\n    getNumTasks() {\n        return this.#taskQueue.length;\n    }\n}\n\nconst scheduler = new Scheduler();\n\nexport {scheduler};","import {EventDispatcher} from \"strongly-typed-events\";\n\n\nimport {scheduler} from './scheduler';\nimport type {View} from \"./View\";\nimport type {Camera} from \"./Camera\";\nimport {addVec3, lenVec3, lerpMat4, lerpVec3, mulVec3Scalar, normalizeVec3, subVec3, createVec3} from \"@xeokit/matrix\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {DEGTORAD, FloatArrayParam} from \"@xeokit/math\";\nimport {getAABB3Center, getAABB3Diag, getAABB3DiagPoint} from \"@xeokit/boundaries\";\nimport {CustomProjectionType, OrthoProjectionType, PerspectiveProjectionType} from \"@xeokit/constants\";\n\nconst tempVec3 = createVec3();\nconst newLook = createVec3();\nconst newEye = createVec3();\nconst newUp = createVec3();\nconst newLookEyeVec = createVec3();\n\n/**\n * Animates its {@link View |View's} {@link @xeokit/viewer!Camera}  to look at specified objects, boundaries or locations.\n *\n * ## Summary\n *\n * * Belongs to a {@link @xeokit/viewer!View}, and is located at {@link View.cameraFlight}\n * * Controls the View's {@link @xeokit/viewer!Camera} , which is located at {@link View.camera}\n * * Navigates the Camera to look at a {@link ViewerObject} or boundary\n * * Navigates the Camera to an explicit position given as ````eye````, ````look```` and ````up```` vectors\n * * Jumps or flies the Camera\n * * Smoothly transitions between projections\n */\nclass CameraFlightAnimation extends Component {\n\n    /**\n     * The View that owns this CameraFlightAnimation.\n     */\n    public readonly view: View;\n\n    /**\n     * The Camera controlled by this CameraFlightAnimation.\n     */\n    public readonly camera: Camera;\n\n    #duration: number;\n    #look1: FloatArrayParam;\n    #eye1: FloatArrayParam;\n    #up1: FloatArrayParam;\n    #look2: FloatArrayParam;\n    #eye2: FloatArrayParam;\n    #up2: FloatArrayParam;\n    #orthoScale1: number;\n    #orthoScale2: number;\n    #fit: boolean;\n    #trail: boolean;\n    #flying: boolean;\n    #flyEyeLookUp: boolean;\n    #flyingEye: boolean;\n    #flyingLook: boolean;\n    #callback: any;\n    #callbackScope: any;\n    #time1: number | null;\n    #time2: number | null;\n    easing: boolean;\n    #flyingEyeLookUp: boolean;\n    #fitFOV: number;\n    #projection2: number;\n    #projMatrix1: FloatArrayParam;\n    #projMatrix2: FloatArrayParam;\n\n\n    /**\n     * Emits an event each time the animation starts.\n     *\n     * @event\n     */\n    readonly onStarted: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     * Emits an event each time the animation stops.\n     *\n     * @event\n     */\n    readonly onStopped: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     * Emits an event each time the animation stops.\n     *\n     * @event\n     */\n    readonly onCancelled: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     @private\n     */\n    constructor(view: View, cfg?: {\n        duration: number\n    }) {\n\n        super(view, cfg);\n\n        this.view = view;\n        this.camera = view.camera;\n\n        this.#look1 = createVec3();\n        this.#eye1 = createVec3();\n        this.#up1 = createVec3();\n        this.#look2 = createVec3();\n        this.#eye2 = createVec3();\n        this.#up2 = createVec3();\n        this.#orthoScale1 = 1;\n        this.#orthoScale2 = 1;\n        this.#flying = false;\n        this.#flyEyeLookUp = false;\n        this.#flyingEye = false;\n        this.#flyingLook = false;\n        this.#callback = null;\n        this.#callbackScope = null;\n        this.#time1 = null;\n        this.#time2 = null;\n        this.easing = true;\n        this.#trail = false;\n        this.#fit = true;\n        this.#duration = 500;\n\n        this.onStarted = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n        this.onStopped = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n        this.onCancelled = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n    }\n\n    /**\n     * Flies the {@link @xeokit/viewer!Camera}  to a target.\n     *\n     *  * When the target is a boundary, the {@link @xeokit/viewer!Camera}  will fly towards the target and stop when the target fills most of the canvas.\n     *  * When the target is an explicit {@link @xeokit/viewer!Camera}  position, given as ````eye````, ````look```` and ````up````, then CameraFlightAnimation will interpolate the {@link @xeokit/viewer!Camera}  to that target and stop there.\n     *\n     * @param {Object|Component} [params=Scene] Either a parameters object or a {@link @xeokit/core!Component} subtype that has\n     * an AABB. Defaults to the {@link Scene}, which causes the {@link @xeokit/viewer!Camera}  to fit the Scene in view.\n     * @param [params.arc=0] Factor in range ````[0..1]```` indicating how much the {@link Camera.eye} position\n     * will swing away from its {@link Camera.look} position as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to. Defaults to the entire {@link Scene}.\n     * @param [params.aabb] World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param [params.eye] Position to fly the eye position to.\n     * @param [params.look] Position to fly the look position to.\n     * @param [params.up] Position to fly the up vector to.\n     * @param [params.projection] Projection type to transition into as we fly. Can be any of the values of {@link Camera.projectionType}.\n     * @param [params.fit=true] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation.fit}.\n     * @param [params.fitFOV] How much of field-of-view, in degrees, that a target {@link ViewerObject} or its AABB should\n     * fill the canvas on arrival. Overrides {@link CameraFlightAnimation.fitFOV}.\n     * @param [params.duration] Flight duration in seconds.  Overrides {@link CameraFlightAnimation.duration}.\n     * @param [params.orthoScale] Animate the Camera's orthographic scale to this target value. See {@link Ortho.scale}.\n     * @param {Function} [callback] Callback fired on arrival.\n     * @param {Object} [scope] Optional scope for callback.\n     */\n    flyTo(params: {\n              projection?: number;\n              orthoScale?: number;\n              aabb?: FloatArrayParam;\n              length?: number;\n              eye?: FloatArrayParam;\n              look?: FloatArrayParam;\n              up?: FloatArrayParam;\n              poi?: FloatArrayParam;\n              fitFOV?: number;\n              duration?: number;\n          } = {},\n          callback: {\n              (): void; call: (arg0: any) => void;\n          }) {\n\n        if (this.#flying) {\n            this.stop();\n        }\n\n        this.#flying = false;\n        this.#flyingEye = false;\n        this.#flyingLook = false;\n        this.#flyingEyeLookUp = false;\n\n        this.#callback = callback;\n\n        const camera = this.camera;\n        const flyToProjection = (!!params.projection) && (params.projection !== camera.projectionType);\n\n        this.#eye1[0] = camera.eye[0];\n        this.#eye1[1] = camera.eye[1];\n        this.#eye1[2] = camera.eye[2];\n\n        this.#look1[0] = camera.look[0];\n        this.#look1[1] = camera.look[1];\n        this.#look1[2] = camera.look[2];\n\n        this.#up1[0] = camera.up[0];\n        this.#up1[1] = camera.up[1];\n        this.#up1[2] = camera.up[2];\n\n        this.#orthoScale1 = camera.orthoProjection.scale;\n        this.#orthoScale2 = params.orthoScale || this.#orthoScale1;\n\n        let aabb: FloatArrayParam;\n        let eye: FloatArrayParam;\n        let look: FloatArrayParam;\n        let up: FloatArrayParam;\n\n        if (params.aabb) {\n            aabb = params.aabb;\n\n        } else if ((params.eye && params.look) || params.up) {\n            // @ts-ignore\n            eye = params.eye;\n            // @ts-ignore\n            look = params.look;\n            // @ts-ignore\n            up = params.up;\n\n        } else if (params.eye) {\n            eye = params.eye;\n\n        } else if (params.look) {\n            look = params.look;\n\n        } else {\n            if (!flyToProjection) {\n                aabb = this.view.aabb;\n            }\n        }\n\n        const poi = params.poi;\n        // @ts-ignore\n        if (aabb) {\n\n            if (aabb[3] < aabb[0] || aabb[4] < aabb[1] || aabb[5] < aabb[2]) { // Don't fly to an inverted boundary\n                return;\n            }\n\n            if (aabb[3] === aabb[0] && aabb[4] === aabb[1] && aabb[5] === aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            aabb = aabb.slice();\n            const aabbCenter = getAABB3Center(aabb);\n\n            this.#look2 = poi || aabbCenter;\n\n            const eyeLookVec = subVec3(this.#eye1, this.#look1, tempVec3);\n            const eyeLookVecNorm = normalizeVec3(eyeLookVec);\n            const diag = poi ? getAABB3DiagPoint(aabb, poi) : getAABB3Diag(aabb);\n            const fitFOV = params.fitFOV || this.#fitFOV;\n            const sca = Math.abs(diag / Math.tan(fitFOV * DEGTORAD));\n\n            this.#orthoScale2 = diag * 1.1;\n\n            this.#eye2[0] = this.#look2[0] + (eyeLookVecNorm[0] * sca);\n            this.#eye2[1] = this.#look2[1] + (eyeLookVecNorm[1] * sca);\n            this.#eye2[2] = this.#look2[2] + (eyeLookVecNorm[2] * sca);\n\n            this.#up2[0] = this.#up1[0];\n            this.#up2[1] = this.#up1[1];\n            this.#up2[2] = this.#up1[2];\n\n            this.#flyingEyeLookUp = true;\n\n            // @ts-ignore\n        } else if (eye || look || up) {\n            // @ts-ignore\n            this.#flyingEyeLookUp = !!eye && !!look && !!up;\n            // @ts-ignore\n            this.#flyingEye = !!eye && !look;\n            // @ts-ignore\n            this.#flyingLook = !!look && !eye;\n            // @ts-ignore\n            if (eye) {\n                this.#eye2[0] = eye[0];\n                this.#eye2[1] = eye[1];\n                this.#eye2[2] = eye[2];\n            }\n            // @ts-ignore\n            if (look) {\n                this.#look2[0] = look[0];\n                this.#look2[1] = look[1];\n                this.#look2[2] = look[2];\n            }\n            // @ts-ignore\n            if (up) {\n                this.#up2[0] = up[0];\n                this.#up2[1] = up[1];\n                this.#up2[2] = up[2];\n            }\n        }\n\n        if (flyToProjection) {\n\n            if (params.projection === OrthoProjectionType && camera.projectionType !== OrthoProjectionType) {\n                this.#projection2 = OrthoProjectionType;\n                this.#projMatrix1 = camera.projMatrix.slice();\n                this.#projMatrix2 = camera.orthoProjection.projMatrix.slice();\n                camera.projectionType = CustomProjectionType;\n            }\n\n            if (params.projection === PerspectiveProjectionType && camera.projectionType !== PerspectiveProjectionType) {\n                this.#projection2 = PerspectiveProjectionType;\n                this.#projMatrix1 = camera.projMatrix.slice();\n                this.#projMatrix2 = camera.perspectiveProjection.projMatrix.slice();\n                camera.projectionType = CustomProjectionType;\n            }\n        } else {\n            // @ts-ignore\n            this.#projection2 = null;\n        }\n\n        this.onStarted.dispatch(this, null);\n\n        this.#time1 = Date.now();\n        this.#time2 = this.#time1 + (params.duration ? params.duration * 1000 : this.#duration);\n\n        this.#flying = true; // False as soon as we stop\n\n        scheduler.scheduleTask(this.#update, this);\n    }\n\n    /**\n     * Jumps the {@link @xeokit/viewer!View}'s {@link @xeokit/viewer!Camera}  to the given target.\n     *\n     * * When the target is a boundary, this CameraFlightAnimation will position the {@link @xeokit/viewer!Camera}  at where the target fills most of the canvas.\n     * * When the target is an explicit {@link @xeokit/viewer!Camera}  position, given as ````eye````, ````look```` and ````up```` vectors, then this CameraFlightAnimation will jump the {@link @xeokit/viewer!Camera}  to that target.\n     *\n     * @param {*|Component} params  Either a parameters object or a {@link @xeokit/core!Component} subtype that has a World-space AABB.\n     * @param [params.arc=0]  Factor in range [0..1] indicating how much the {@link Camera.eye} will swing away from its {@link Camera.look} as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to.\n     * @param [params.aabb]  World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param [params.eye] Position to fly the eye position to.\n     * @param [params.look]  Position to fly the look position to.\n     * @param [params.up] Position to fly the up vector to.\n     * @param [params.projection] Projection type to transition into. Can be any of the values of {@link Camera.projectionType}.\n     * @param [params.fitFOV] How much of field-of-view, in degrees, that a target {@link ViewerObject} or its AABB should fill the canvas on arrival. Overrides {@link CameraFlightAnimation.fitFOV}.\n     * @param [params.fit] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation.fit}.\n     */\n    jumpTo(params: any) {\n        this.#jumpTo(params);\n    }\n\n    #jumpTo(params: any) {\n\n        if (this.#flying) {\n            this.stop();\n        }\n\n        const camera = this.camera;\n\n        let aabb: FloatArrayParam;\n        let newEye: FloatArrayParam;\n        let newLook: FloatArrayParam;\n        let newUp: FloatArrayParam;\n\n        if (params.aabb) { // Boundary3D\n            aabb = params.aabb;\n        } else if (params.eye || params.look || params.up) { // Camera pose\n            newEye = params.eye;\n            newLook = params.look;\n            newUp = params.up;\n        } else {\n            aabb = this.view.aabb;\n        }\n\n        const poi = params.poi;\n        // @ts-ignore\n        if (aabb) {\n\n            if (aabb[3] <= aabb[0] || aabb[4] <= aabb[1] || aabb[5] <= aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            const diag = poi ? getAABB3DiagPoint(aabb, poi) : getAABB3Diag(aabb);\n            // @ts-ignore\n            newLook = poi || getAABB3Center(aabb, newLook);\n\n            if (this.#trail) {\n                subVec3(camera.look, newLook, newLookEyeVec);\n            } else {\n                subVec3(camera.eye, camera.look, newLookEyeVec);\n            }\n\n            normalizeVec3(newLookEyeVec);\n            let dist;\n            const fit = (params.fit !== undefined) ? params.fit : this.#fit;\n\n            if (fit) {\n                dist = Math.abs((diag) / Math.tan((params.fitFOV || this.#fitFOV) * DEGTORAD));\n\n            } else {\n                dist = lenVec3(subVec3(camera.eye, camera.look, tempVec3));\n            }\n\n            mulVec3Scalar(newLookEyeVec, dist);\n\n            camera.eye = addVec3(newLook, newLookEyeVec, tempVec3);\n            camera.look = newLook;\n\n            this.camera.orthoProjection.scale = diag * 1.1;\n            // @ts-ignore\n        } else if (newEye || newLook || newUp) {\n            // @ts-ignore\n            if (newEye) {\n                camera.eye = newEye;\n            } // @ts-ignore\n            if (newLook) {\n                camera.look = newLook;\n            } // @ts-ignore\n            if (newUp) {\n                camera.up = newUp;\n            }\n        }\n\n        if (params.projection) {\n            camera.projectionType = params.projection;\n        }\n    }\n\n    #update() {\n        if (!this.#flying) {\n            return;\n        }\n        const time = Date.now();\n        // @ts-ignore\n        let t = (time - this.#time1) / (this.#time2 - this.#time1);\n        const stopping = (t >= 1);\n\n        if (t > 1) {\n            t = 1;\n        }\n\n        const tFlight = this.easing ? CameraFlightAnimation.#ease(t, 0, 1, 1) : t;\n        const camera = this.camera;\n\n        if (this.#flyingEye || this.#flyingLook) {\n\n            if (this.#flyingEye) {\n                subVec3(camera.eye, camera.look, newLookEyeVec);\n                camera.eye = lerpVec3(tFlight, 0, 1, this.#eye1, this.#eye2, newEye);\n                camera.look = subVec3(newEye, newLookEyeVec, newLook);\n            } else if (this.#flyingLook) {\n                camera.look = lerpVec3(tFlight, 0, 1, this.#look1, this.#look2, newLook);\n                camera.up = lerpVec3(tFlight, 0, 1, this.#up1, this.#up2, newUp);\n            }\n\n        } else if (this.#flyingEyeLookUp) {\n\n            camera.eye = lerpVec3(tFlight, 0, 1, this.#eye1, this.#eye2, newEye);\n            camera.look = lerpVec3(tFlight, 0, 1, this.#look1, this.#look2, newLook);\n            camera.up = lerpVec3(tFlight, 0, 1, this.#up1, this.#up2, newUp);\n        }\n\n        if (this.#projection2) {\n            const tProj = (this.#projection2 === OrthoProjectionType) ? CameraFlightAnimation.#easeOutExpo(t, 0, 1, 1) : CameraFlightAnimation.#easeInCubic(t, 0, 1, 1);\n            camera.customProjection.projMatrix = lerpMat4(tProj, 0, 1, this.#projMatrix1, this.#projMatrix2);\n\n        } else {\n            camera.orthoProjection.scale = this.#orthoScale1 + (t * (this.#orthoScale2 - this.#orthoScale1));\n        }\n\n        if (stopping) {\n            camera.orthoProjection.scale = this.#orthoScale2;\n            this.stop();\n            return;\n        }\n        scheduler.scheduleTask(this.#update, this); // Keep flying\n    }\n\n    static #ease(t: number, b: number, c: number, d: number) { // Quadratic easing out - decelerating to zero velocity http://gizma.com/easing\n        t /= d;\n        return -c * t * (t - 2) + b;\n    }\n\n    static #easeInCubic(t: number, b: number, c: number, d: number) {\n        t /= d;\n        return c * t * t * t + b;\n    }\n\n    static #easeOutExpo(t: number, b: number, c: number, d: number) {\n        return c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n\n    /**\n     * Stops an earlier {@link CameraFlightAnimation.flyTo}, fires arrival callback, then \"stopped\" event.\n     */\n    stop() {\n        if (!this.#flying) {\n            return;\n        }\n        this.#flying = false;\n        this.#time1 = null;\n        this.#time2 = null;\n        if (this.#projection2) {\n            this.camera.projectionType = this.#projection2;\n        }\n        const callback = this.#callback;\n        if (callback) {\n            this.#callback = null;\n            callback();\n        }\n        this.onStopped.dispatch(this, null);\n    }\n\n    /**\n     * Cancels a flight in progress, without calling the arrival callback.\n     */\n    cancel() {\n        if (!this.#flying) {\n            return;\n        }\n        this.#flying = false;\n        this.#time1 = null;\n        this.#time2 = null;\n        if (this.#callback) {\n            this.#callback = null;\n        }\n        this.onCancelled.dispatch(this, null);\n    }\n\n    /**\n     * Sets the flight duration in seconds.\n     *\n     * Stops any flight currently in progress.\n     *\n     * Default value is ````0.5````.\n     */\n    set duration(value: number) {\n        this.#duration = value ? (value * 1000.0) : 500;\n        this.stop();\n    }\n\n    /**\n     * Gets the flight duration in seconds.\n     *\n     * Default value is ````0.5````.\n     */\n    get duration(): number {\n        return this.#duration / 1000.0;\n    }\n\n    /**\n     * When flying to a {@link @xeokit/scene!SceneModel | SceneModel}, {@link ViewerObject} or boundary, indicates if the CameraFlightAnimation always adjusts\n     * the distance of {@link Camera.eye} from {@link Camera.look} to ensure that the target always fits in view.\n     *\n     * When false, the eye will remain fixed at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     */\n    set fit(value: boolean) {\n        this.#fit = value;\n    }\n\n    /**\n     * When flying to a {@link @xeokit/scene!SceneModel | SceneModel}, {@link ViewerObject} or boundary, indicates if the CameraFlightAnimation always adjusts\n     * the distance of {@link Camera.eye} from {@link Camera.look} to ensure that the target always fits in view.\n     *\n     * When false, the eye will remain fixed at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     */\n    get fit(): boolean {\n        return this.#fit;\n    }\n\n    /**\n     * Sets how much of the perspective field-of-view, in degrees, that a target {@link ViewerObject.aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation.flyTo} or {@link CameraFlightAnimation.jumpTo}.\n     *\n     * Default value is ````45````.\n     */\n    set fitFOV(value: number) {\n        this.#fitFOV = value;\n    }\n\n    /**\n     * Gets how much of the perspective field-of-view, in degrees, that a target {@link ViewerObject.aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation.flyTo} or {@link CameraFlightAnimation.jumpTo}.\n     *\n     * Default value is ````45````.\n     */\n    get fitFOV(): number {\n        return this.#fitFOV;\n    }\n\n    /**\n     * Indicates if this CameraFlightAnimation will orient the {@link @xeokit/viewer!Camera} \n     * in the direction that it is flying.\n     *\n     * Default value is ````false````.\n     */\n    set trail(value: boolean) {\n        this.#trail = value;\n    }\n\n    /**\n     * Indicates if this CameraFlightAnimation will orient the {@link @xeokit/viewer!Camera} \n     * in the direction that it is flying.\n     *\n     * Default value is ````false````.\n     */\n    get trail(): boolean {\n        return this.#trail;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        this.stop();\n        super.destroy();\n        this.onStarted.clear();\n        this.onStopped.clear();\n        this.onCancelled.clear();\n    }\n}\n\nexport {CameraFlightAnimation};\n","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {createUUID} from \"@xeokit/utils\";\nimport {QualityRender} from \"@xeokit/constants\";\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {createVec3} from \"@xeokit/matrix\";\nimport type {Scene, SceneModel} from \"@xeokit/scene\";\n\nimport {ViewObject} from \"./ViewObject\";\nimport {SectionPlane} from \"./SectionPlane\";\nimport type {Viewer} from \"./Viewer\";\nimport {Metrics} from \"./Metriqs\";\nimport {SAO} from \"./SAO\";\nimport {LinesMaterial} from \"./LinesMaterial\";\nimport {ViewLayer} from \"./ViewLayer\";\nimport type {ViewLayerParams} from \"./ViewLayerParams\";\nimport type {SectionPlaneParams} from \"./SectionPlaneParams\";\nimport {EmphasisMaterial} from \"./EmphasisMaterial\";\nimport {EdgeMaterial} from \"./EdgeMaterial\";\nimport {PointsMaterial} from \"./PointsMaterial\";\nimport {Camera} from \"./Camera\";\nimport type {PointLight} from \"./PointLight\";\nimport {CameraFlightAnimation} from \"./CameraFlightAnimation\";\nimport type {AmbientLight} from \"./AmbientLight\";\nimport type {DirLight} from \"./DirLight\";\nimport type {RendererViewObject} from \"./RendererViewObject\";\n\n/**\n * An independently-configurable view of the models in a {@link @xeokit/viewer!Viewer}.\n *\n * See {@link @xeokit/viewer} for usage.\n *\n * ## Overview\n *\n * A View is an independently-configurable view of the {@link RendererViewObject | ViewerObjects} existing within a Viewer, with\n * its own HTML canvas. A View automatically contains a {@link ViewObject} for each existing ViewerObject. ViewObjects\n * function as a kind of proxy for the ViewerObjects, through which we control their appearance\n * (show/hide/highlight etc.) within that particular View's canvas.\n *\n * Using Views, we can essentially have multiple canvases viewing the same model, each canvas perhaps showing a different subset\n * of the objects, with different visual effects, camera position etc.\n *\n * ## Quickstart\n *\n * * Create a View with {@link Viewer.createView}\n * * Control the View's viewpoint and projection with {@link View.camera}\n * * Create light sources with {@link View.createLightSource}\n * * Create slicing planes with {@link View createSectionPlane}\n * * Each View automatically has a {@link ViewObject} for every {@link RendererViewObject}\n * * Uses {@link ViewLayer | ViewLayers} to organize ViewObjects into layers\n * * Optionally uses ViewLayers to mask which ViewObjects are automatically maintained\n * * Control the visibility of ViewObjects with {@link View.setObjectsVisible}\n * * Emphasise ViewObjects with {@link View.setObjectsHighlighted}, {@link View.setObjectsSelected}, {@link View.setObjectsXRayed} and {@link View.setObjectsColorized}\n *\n * ## Examples\n *\n * Create a view in a given canvas, with three objects visible and a couple of object X-rayed (rendered translucent):\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myView1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * view1.setObjectsVisible([\"myObject1\", \"myObject2\", \"myObject3\", ...], true);\n * view1.setObjectsXRayed([\"myObject1\", \"myObject\", ...], true);\n * ````\n *\n * Create a second view, using a different canvas, that shows two objects visible, with one of them highlighted:\n *\n * ```` javascript\n * const view2 = myViewer.createView({\n *      id: \"myView2\",\n *      canvasId: \"myView2\"\n * });\n *\n * view2.camera.eye = [-1.4, 1.5, 15.8];\n * view2.camera.look = [4.0, 3.7, 1.8];\n * view2.camera.up = [0.0, 0.9, 0.0];\n *\n * view2.setObjectsVisible([\"myObject1\", \"myObject3\", ...], true);\n * view2.setObjectsHighlighted([\"myObject3\", ...], true);\n * ````\n */\nclass View extends Component {\n    /**\n     ID of this View, unique within the {@link @xeokit/viewer!Viewer}.\n     */\n    declare viewId: string;\n\n    /**\n     * The Viewer to which this View belongs.\n     */\n    declare readonly viewer: Viewer;\n\n    /**\n     * The index of this View in {@link Viewer.viewList}.\n     * @private\n     */\n    viewIndex: number;\n\n    /**\n     * Manages the Camera for this View.\n     */\n    readonly camera: Camera;\n\n    /**\n     * The HTML canvas.\n     */\n    public canvasElement: HTMLCanvasElement;\n\n    /**\n     * Indicates if this View is transparent.\n     */\n    public readonly transparent: boolean;\n\n    /**\n     * Boundary of the canvas in absolute browser window coordinates.\n     * Format is ````[xmin, ymin, xwidth, ywidth]````.\n     */\n    public readonly boundary: number[];\n    /**\n     * Whether the logarithmic depth buffer is enabled for this View.\n     */\n    readonly logarithmicDepthBufferEnabled: boolean;\n    /**\n     * Configures Scalable Ambient Obscurance (SAO) for this View.\n     */\n    readonly sao: SAO;\n    /**\n     * Flies or jumps the View's {@link @xeokit/viewer!Camera}  to given positions.\n     */\n    readonly cameraFlight: CameraFlightAnimation;\n    /**\n     * Manages measurement units, origin and scale for this View.\n     */\n    readonly metrics: Metrics;\n    /**\n     * Configures the X-rayed appearance of {@link ViewObject | ViewObjects} in this View.\n     */\n    readonly xrayMaterial: EmphasisMaterial;\n    /**\n     * Configures the highlighted appearance of {@link ViewObject | ViewObjects} in this View.\n     */\n    readonly highlightMaterial: EmphasisMaterial;\n    /**\n     * Configures the appearance of {@link ViewObject | ViewObjects} in this View.\n     */\n    readonly selectedMaterial: EmphasisMaterial;\n    /**\n     * Configures the appearance of edges belonging to {@link ViewObject} in this View.\n     */\n    readonly edgeMaterial: EdgeMaterial;\n    /**\n     * Configures the appearance of point primitives belonging to {@link ViewObject | ViewObjects} in this View .\n     */\n    readonly pointsMaterial: PointsMaterial;\n    /**\n     * Configures the appearance of lines belonging to {@link ViewObject | ViewObjects} in this View.\n     */\n    readonly linesMaterial: LinesMaterial;\n\n    /**\n     * Map of the all {@link ViewObject | ViewObjects} in this View.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     *\n     * The View automatically ensures that there is a {@link ViewObject} here for\n     * each {@link RendererViewObject} in the {@link @xeokit/viewer!Viewer}\n     */\n    readonly objects: { [key: string]: ViewObject };\n\n    /**\n     * Map of the currently visible {@link ViewObject | ViewObjects} in this View.\n     *\n     * A ViewObject is visible when {@link ViewObject.visible} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly visibleObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently x-rayed {@link ViewObject | ViewObjects} in this View.\n     *\n     * A ViewObject is x-rayed when {@link ViewObject.xrayed} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly xrayedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently highlighted {@link ViewObject | ViewObjects} in this View.\n     *\n     * A ViewObject is highlighted when {@link ViewObject.highlighted} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly highlightedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently selected {@link ViewObject | ViewObjects} in this View.\n     *\n     * A ViewObject is selected when {@link ViewObject.selected} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly selectedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently colorized {@link ViewObject | ViewObjects} in this View.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly colorizedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link ViewObject | ViewObjects} in this View whose opacity has been updated.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly opacityObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link SectionPlane}s in this View.\n     *\n     * Each {@link SectionPlane} is mapped here by {@link SectionPlane.id}.\n     */\n    readonly sectionPlanes: { [key: string]: SectionPlane };\n\n    /**\n     * List of {@link SectionPlane}s in this View.\n     */\n    readonly sectionPlanesList: SectionPlane[] = [];\n\n    /**\n     * Map of light sources in this View.\n     */\n    readonly lights: { [key: string]: AmbientLight | PointLight | DirLight };\n\n    /**\n     * List of light sources in this View.\n     */\n    readonly lightsList: (AmbientLight | PointLight | DirLight)[] = [];\n    gammaOutput: boolean;\n\n    /**\n     * Map of the all {@link ViewLayer}s in this View.\n     *\n     * Each {@link ViewLayer} is mapped here by {@link ViewLayer.id}.\n     */\n    readonly layers: { [key: string]: ViewLayer };\n\n    /**\n     * Whether the View will automatically create {@link ViewLayer | ViewLayers} on-demand\n     * as {@link RendererViewObject | ViewerObjects} are created.\n     *\n     * When ````true```` (default), the View will automatically create {@link ViewLayer | ViewLayers} as needed for each new\n     * {@link RendererViewObject.layerId} encountered, including a \"default\" ViewLayer for ViewerObjects that have no\n     * layerId. This default setting therefore ensures that a ViewObject is created in the View for every ViewerObject that is created.\n     *\n     * If you set this ````false````, however, then the View will only create {@link ViewObject | ViewObjects} for {@link RendererViewObject | ViewerObjects} that have\n     * a {@link RendererViewObject.layerId} that matches the ID of a {@link ViewLayer} that you have explicitly created previously with {@link View.createLayer}.\n     *\n     * Setting this parameter false enables Views to contain only the ViewObjects that they actually need to show, i.e. to represent only\n     * ViewerObjects that they need to view. This enables a View to avoid wastefully creating and maintaining ViewObjects for ViewerObjects\n     * that it never needs to show.\n     */\n    readonly autoLayers: boolean;\n\n    /**\n     * Emits an event each time the canvas boundary changes.\n     *\n     * @event\n     */\n    readonly onBoundary: EventEmitter<View, IntArrayParam>;\n\n    /**\n     * Emits an event each time the visibility of a {@link ViewObject} changes in this View.\n     *\n     * ViewObjects are shown and hidden with {@link View.setObjectsVisible}, {@link ViewLayer.setObjectsVisible} or {@link ViewObject.visible}.\n     *\n     * @event\n     */\n    readonly onObjectVisibility: EventEmitter<View, ViewObject>;\n\n    /**\n     * Emits an event each time the X-ray state of a {@link ViewObject} changes in this View.\n     *\n     * ViewObjects are X-rayed with {@link View.setObjectsXRayed}, {@link ViewLayer.setObjectsXRayed} or {@link ViewObject.xrayed}.\n     *\n     * @event\n     */\n    readonly onObjectXRayed: EventEmitter<View, ViewObject>;\n\n    /**\n     * Emits an event each time a {@link ViewLayer} is created in this View.\n     *\n     * Layers are created explicitly with {@link View.createLayer}, or implicitly with {@link View.createModel} and {@link CreateModelParams.layerId}.\n     *\n     * @event\n     */\n    readonly onLayerCreated: EventEmitter<View, ViewLayer>;\n\n    /**\n     * Emits an event each time a {@link ViewLayer} in this View is destroyed.\n     *\n     * ViewLayers are destroyed explicitly with {@link ViewLayer.destroy}, or implicitly when they become empty and {@link View.autoLayers} is false.\n     *\n     * @event\n     */\n    readonly onLayerDestroyed: EventEmitter<View, ViewLayer>;\n\n    /**\n     * Emits an event each time a {@link SectionPlane} is created in this View.\n     *\n     * @event\n     */\n    readonly onSectionPlaneCreated: EventEmitter<View, SectionPlane>;\n\n    /**\n     * Emits an event each time a {@link SectionPlane} in this View is destroyed.\n     *\n     * @event\n     */\n    readonly onSectionPlaneDestroyed: EventEmitter<View, SectionPlane>;\n\n    #onTick: () => void;\n\n    #backgroundColor: FloatArrayParam;\n    #backgroundColorFromAmbientLight: boolean;\n    #resolutionScale: number;\n    #numObjects: number;\n    #objectIds: string[] | null;\n    #numVisibleObjects: number;\n    #visibleObjectIds: string[] | null;\n    #numXRayedObjects: number;\n    #xrayedObjectIds: string[] | null;\n    #numHighlightedObjects: number;\n    #highlightedObjectIds: string[] | null;\n    #numSelectedObjects: number;\n    #selectedObjectIds: string[] | null;\n    #numColorizedObjects: number;\n    #colorizedObjectIds: string[] | null;\n    #numOpacityObjects: number;\n    #opacityObjectIds: string[] | null;\n    #qualityRender: boolean;\n    #lightsHash: string | null = null;\n    #sectionPlanesHash: string | null = null;\n\n    /**\n     * @private\n     */\n    constructor(options: {\n        viewer: Viewer;\n        origin?: number[];\n        scale?: number;\n        units?: number;\n        canvasId?: string;\n        canvasElement: HTMLCanvasElement;\n        backgroundColor?: any[];\n        backgroundColorFromAmbientLight?: boolean;\n        premultipliedAlpha?: boolean;\n        transparent?: boolean;\n        qualityRender?: boolean;\n        logarithmicDepthBufferEnabled?: boolean;\n        autoLayers?: boolean;\n    }) {\n        super(null, options);\n\n        this.viewer = options.viewer;\n\n        const canvas =\n            options.canvasElement ||\n            document.getElementById(<string>options.canvasId);\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw \"Mandatory View config expected: valid canvasId or canvasElement\";\n        }\n        this.canvasElement = canvas;\n        this.viewIndex = 0;\n        this.objects = {};\n        this.visibleObjects = {};\n        this.xrayedObjects = {};\n        this.highlightedObjects = {};\n        this.selectedObjects = {};\n        this.colorizedObjects = {};\n        this.opacityObjects = {};\n        this.sectionPlanes = {};\n        this.sectionPlanesList = [];\n        this.lights = {};\n        this.lightsList = [];\n        this.layers = {};\n\n        this.#numObjects = 0;\n        this.#objectIds = null;\n        this.#numVisibleObjects = 0;\n        this.#visibleObjectIds = null;\n        this.#numXRayedObjects = 0;\n        this.#xrayedObjectIds = null;\n        this.#numHighlightedObjects = 0;\n        this.#highlightedObjectIds = null;\n        this.#numSelectedObjects = 0;\n        this.#selectedObjectIds = null;\n        this.#numColorizedObjects = 0;\n        this.#colorizedObjectIds = null;\n        this.#numOpacityObjects = 0;\n        this.#opacityObjectIds = null;\n        this.#qualityRender = !!options.qualityRender;\n        this.gammaOutput = true;\n\n        this.#sectionPlanesHash = null;\n        this.#lightsHash = null;\n\n        // this.canvas = new View(this, {\n        //     canvas: canvas,\n        //     transparent: !!options.transparent,\n        //     backgroundColor: options.backgroundColor,\n        //     backgroundColorFromAmbientLight: !!options.backgroundColorFromAmbientLight,\n        //     premultipliedAlpha: !!options.premultipliedAlpha\n        // });\n        //\n        // this.canvas.onBoundary.subscribe(() => {\n        //     this.redraw();\n        // });\n\n        this.onBoundary = new EventEmitter(\n            new EventDispatcher<View, IntArrayParam>()\n        );\n\n        this.#resolutionScale = 1;\n        this.#backgroundColor = createVec3([\n            options.backgroundColor ? options.backgroundColor[0] : 1,\n            options.backgroundColor ? options.backgroundColor[1] : 1,\n            options.backgroundColor ? options.backgroundColor[2] : 1,\n        ]);\n        this.#backgroundColorFromAmbientLight =\n            !!options.backgroundColorFromAmbientLight;\n        this.transparent = !!options.transparent;\n        this.canvasElement.width = this.canvasElement.clientWidth;\n        this.canvasElement.height = this.canvasElement.clientHeight;\n        this.boundary = [\n            this.canvasElement.offsetLeft,\n            this.canvasElement.offsetTop,\n            this.canvasElement.clientWidth,\n            this.canvasElement.clientHeight,\n        ];\n\n        // Publish canvasElement size and position changes on each scene tick\n\n        let lastWindowWidth = 0;\n        let lastWindowHeight = 0;\n        let lastViewWidth = 0;\n        let lastViewHeight = 0;\n        let lastViewOffsetLeft = 0;\n        let lastViewOffsetTop = 0;\n        let lastParent: null | HTMLElement = null;\n\n        let lastResolutionScale: null | number = null;\n\n        this.#onTick = this.viewer.onTick.subscribe(() => {\n            const canvasElement = this.canvasElement;\n            const newResolutionScale = this.#resolutionScale !== lastResolutionScale;\n            const newWindowSize =\n                window.innerWidth !== lastWindowWidth ||\n                window.innerHeight !== lastWindowHeight;\n            const newViewSize =\n                canvasElement.clientWidth !== lastViewWidth ||\n                canvasElement.clientHeight !== lastViewHeight;\n            const newViewPos =\n                canvasElement.offsetLeft !== lastViewOffsetLeft ||\n                canvasElement.offsetTop !== lastViewOffsetTop;\n            const parent = canvasElement.parentElement;\n            const newParent = parent !== lastParent;\n\n            if (\n                newResolutionScale ||\n                newWindowSize ||\n                newViewSize ||\n                newViewPos ||\n                newParent\n            ) {\n                //   this._spinner._adjustPosition();\n                if (newResolutionScale || newViewSize || newViewPos) {\n                    const newWidth = canvasElement.clientWidth;\n                    const newHeight = canvasElement.clientHeight;\n                    if (newResolutionScale || newViewSize) {\n                        canvasElement.width = Math.round(\n                            canvasElement.clientWidth * this.#resolutionScale\n                        );\n                        canvasElement.height = Math.round(\n                            canvasElement.clientHeight * this.#resolutionScale\n                        );\n                    }\n                    const boundary = this.boundary;\n                    boundary[0] = canvasElement.offsetLeft;\n                    boundary[1] = canvasElement.offsetTop;\n                    boundary[2] = newWidth;\n                    boundary[3] = newHeight;\n                    if (!newResolutionScale || newViewSize) {\n                        this.onBoundary.dispatch(this, boundary);\n                    }\n                    lastViewWidth = newWidth;\n                    lastViewHeight = newHeight;\n                }\n\n                if (newResolutionScale) {\n                    lastResolutionScale = this.#resolutionScale;\n                }\n                if (newWindowSize) {\n                    lastWindowWidth = window.innerWidth;\n                    lastWindowHeight = window.innerHeight;\n                }\n                if (newViewPos) {\n                    lastViewOffsetLeft = canvasElement.offsetLeft;\n                    lastViewOffsetTop = canvasElement.offsetTop;\n                }\n                lastParent = parent;\n            }\n        });\n\n        this.camera = new Camera(this);\n\n        this.sao = new SAO(this, {});\n\n        this.cameraFlight = new CameraFlightAnimation(this, {\n            duration: 0.5,\n        });\n\n        this.metrics = new Metrics(this, {\n            units: options.units,\n            scale: options.scale,\n            origin: options.origin,\n        });\n\n        this.xrayMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [0.9, 0.7, 0.6],\n            fillAlpha: 0.4,\n            edges: true,\n            edgeColor: [0.5, 0.4, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n        });\n\n        this.highlightMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [1.0, 1.0, 0.0],\n            fillAlpha: 0.5,\n            edges: true,\n            edgeColor: [0.5, 0.4, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n        });\n\n        this.selectedMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [0.0, 1.0, 0.0],\n            fillAlpha: 0.5,\n            edges: true,\n            edgeColor: [0.4, 0.5, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n        });\n\n        this.edgeMaterial = new EdgeMaterial(this, {\n            edgeColor: [0.0, 0.0, 0.0],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n            edges: true,\n            renderModes: [QualityRender],\n        });\n\n        this.pointsMaterial = new PointsMaterial(this, {\n            pointSize: 1,\n            roundPoints: true,\n            perspectivePoints: true,\n            minPerspectivePointSize: 1,\n            maxPerspectivePointSize: 6,\n            filterIntensity: false,\n            minIntensity: 0,\n            maxIntensity: 1,\n        });\n\n        this.linesMaterial = new LinesMaterial(this, {\n            lineWidth: 1,\n        });\n\n        this.lights = {};\n\n        this.#qualityRender = !!options.qualityRender;\n\n        this.autoLayers = options.autoLayers !== false;\n\n        this.logarithmicDepthBufferEnabled =\n            !!options.logarithmicDepthBufferEnabled;\n\n        this.onObjectVisibility = new EventEmitter(\n            new EventDispatcher<View, ViewObject>()\n        );\n        this.onObjectXRayed = new EventEmitter(\n            new EventDispatcher<View, ViewObject>()\n        );\n        this.onLayerCreated = new EventEmitter(\n            new EventDispatcher<View, ViewLayer>()\n        );\n        this.onLayerDestroyed = new EventEmitter(\n            new EventDispatcher<View, ViewLayer>()\n        );\n        this.onSectionPlaneCreated = new EventEmitter(\n            new EventDispatcher<View, SectionPlane>()\n        );\n        this.onSectionPlaneDestroyed = new EventEmitter(\n            new EventDispatcher<View, SectionPlane>()\n        );\n    }\n\n    /**\n     * @private\n     */\n    initViewObjects() {\n        for (const id in this.viewer.scene.models) {\n            this.#createViewObjects(this.viewer.scene.models[id]);\n        }\n        this.viewer.scene.onModelCreated.subscribe((scene: Scene, sceneModel: SceneModel) => {\n                this.#createViewObjects(sceneModel);\n            }\n        );\n        this.viewer.scene.onModelDestroyed.subscribe((scene: Scene, sceneModel: SceneModel) => {\n                this.#destroyViewObjects(sceneModel);\n            }\n        );\n    }\n\n    #createViewObjects(sceneModel: SceneModel) {\n        // The Renderer has a RendererViewObject for each object, through which a ViewObject can\n        // push state changes into the Renderer for its object.\n        // The RendererViewObject\n        const sceneObjects = sceneModel.objects;\n        const rendererViewObjects = this.viewer.renderer.rendererViewObjects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            const rendererViewObject = rendererViewObjects[id];\n            //     const layerId = viewerObject.layerId || \"default\";\n            const layerId = \"default\";\n            let viewLayer = this.layers[layerId];\n            if (!viewLayer) {\n                if (!this.autoLayers) {\n                    continue;\n                }\n                viewLayer = new ViewLayer({\n                    id: layerId,\n                    view: this,\n                    viewer: this.viewer,\n                });\n                this.layers[layerId] = viewLayer;\n                viewLayer.onDestroyed.one(() => {\n                    delete this.layers[viewLayer.id];\n                    this.onLayerDestroyed.dispatch(this, viewLayer);\n                });\n                this.onLayerCreated.dispatch(this, viewLayer);\n            }\n            const viewObject = new ViewObject(viewLayer, sceneObject, rendererViewObject);\n            viewLayer.registerViewObject(viewObject);\n            this.registerViewObject(viewObject);\n        }\n    }\n\n    /**\n     *\n     */\n    get aabb(): FloatArrayParam {\n        return this.viewer.scene.aabb;\n    }\n\n    /**\n     * Gets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     */\n    get backgroundColor(): FloatArrayParam {\n        return this.#backgroundColor;\n    }\n\n    /**\n     * Sets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     */\n    set backgroundColor(value: FloatArrayParam) {\n        if (value) {\n            this.#backgroundColor[0] = value[0];\n            this.#backgroundColor[1] = value[1];\n            this.#backgroundColor[2] = value[2];\n        } else {\n            this.#backgroundColor[0] = 1.0;\n            this.#backgroundColor[1] = 1.0;\n            this.#backgroundColor[2] = 1.0;\n        }\n        this.redraw();\n    }\n\n    /**\n     * Gets whether the canvas clear color will be derived from {@link AmbientLight} or {@link View#backgroundColor}\n     * when {@link View#transparent} is ```true```.\n     *\n     * When {@link View#transparent} is ```true``` and this is ````true````, then the canvas clear color will\n     * be taken from the ambient light color.\n     *\n     * When {@link View#transparent} is ```true``` and this is ````false````, then the canvas clear color will\n     * be taken from {@link View#backgroundColor}.\n     *\n     * Default value is ````true````.\n     */\n    get backgroundColorFromAmbientLight(): boolean {\n        return this.#backgroundColorFromAmbientLight;\n    }\n\n    /**\n     * Sets if the canvas background color is derived from an {@link AmbientLight}.\n     *\n     * This only has effect when the canvas is not transparent. When not enabled, the background color\n     * will be the canvas element's HTML/CSS background color.\n     *\n     * Default value is ````true````.\n     */\n    set backgroundColorFromAmbientLight(\n        backgroundColorFromAmbientLight: boolean\n    ) {\n        this.#backgroundColorFromAmbientLight =\n            backgroundColorFromAmbientLight !== false;\n    }\n\n    /**\n     * Gets the scale of the canvas back buffer relative to the CSS-defined size of the canvas.\n     *\n     * This is a kdtree3 way to trade off rendering quality for speed. If the canvas size is defined in CSS, then\n     * setting this to a value between ````[0..1]```` (eg ````0.5````) will render into a smaller back buffer, giving\n     * a performance boost.\n     *\n     * @returns  The resolution scale.\n     */\n    get resolutionScale(): number {\n        return this.#resolutionScale;\n    }\n\n    /**\n     * Sets the scale of the canvas back buffer relative to the CSS-defined size of the canvas.\n     *\n     * This is a kdtree3 way to trade off rendering quality for speed. If the canvas size is defined in CSS, then\n     * setting this to a value between ````[0..1]```` (eg ````0.5````) will render into a smaller back buffer, giving\n     * a performance boost.\n     *\n     * @param resolutionScale The resolution scale.\n     */\n    set resolutionScale(resolutionScale: number) {\n        resolutionScale = resolutionScale || 1.0;\n        if (resolutionScale === this.#resolutionScale) {\n            return;\n        }\n        this.#resolutionScale = resolutionScale;\n        const canvasElement = this.canvasElement;\n        canvasElement.width = Math.round(\n            canvasElement.clientWidth * this.#resolutionScale\n        );\n        canvasElement.height = Math.round(\n            canvasElement.clientHeight * this.#resolutionScale\n        );\n        this.redraw();\n    }\n\n    /**\n     * Gets the gamma factor.\n     */\n    get gammaFactor() {\n        // TODO\n        return 1.0;\n    }\n\n    /**\n     * Gets whether quality rendering is enabled for this View.\n     *\n     * Default is ````false````.\n     */\n    get qualityRender(): boolean {\n        return this.#qualityRender;\n    }\n\n    /**\n     * Sets whether quality rendering is enabled for this View.\n     *\n     * Default is ````false````.\n     */\n    set qualityRender(value: boolean) {\n        if (this.#qualityRender === value) {\n            return;\n        }\n        this.#qualityRender = value;\n        this.redraw();\n    }\n\n    /**\n     * Gets the number of {@link ViewObject | ViewObjects} in this View.\n     */\n    get numObjects(): number {\n        return this.#numObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject | ViewObjects} in this View.\n     */\n    get objectIds(): string[] {\n        if (!this.#objectIds) {\n            this.#objectIds = Object.keys(this.objects);\n        }\n        return this.#objectIds;\n    }\n\n    /**\n     * Gets the number of visible {@link ViewObject | ViewObjects} in this View.\n     */\n    get numVisibleObjects(): number {\n        return this.#numVisibleObjects;\n    }\n\n    /**\n     * Gets the IDs of the visible {@link ViewObject | ViewObjects} in this View.\n     */\n    get visibleObjectIds(): string[] {\n        if (!this.#visibleObjectIds) {\n            this.#visibleObjectIds = Object.keys(this.visibleObjects);\n        }\n        return this.#visibleObjectIds;\n    }\n\n    /**\n     * Gets the number of X-rayed {@link ViewObject | ViewObjects} in this View.\n     */\n    get numXRayedObjects(): number {\n        return this.#numXRayedObjects;\n    }\n\n    /**\n     * Gets the IDs of the X-rayed {@link ViewObject | ViewObjects} in this View.\n     */\n    get xrayedObjectIds(): string[] {\n        if (!this.#xrayedObjectIds) {\n            this.#xrayedObjectIds = Object.keys(this.xrayedObjects);\n        }\n        return this.#xrayedObjectIds;\n    }\n\n    /**\n     * Gets the number of highlighted {@link ViewObject | ViewObjects} in this View.\n     */\n    get numHighlightedObjects(): number {\n        return this.#numHighlightedObjects;\n    }\n\n    /**\n     * Gets the IDs of the highlighted {@link ViewObject | ViewObjects} in this View.\n     */\n    get highlightedObjectIds(): string[] {\n        if (!this.#highlightedObjectIds) {\n            this.#highlightedObjectIds = Object.keys(this.highlightedObjects);\n        }\n        return this.#highlightedObjectIds;\n    }\n\n    /**\n     * Gets the number of selected {@link ViewObject | ViewObjects} in this View.\n     */\n    get numSelectedObjects(): number {\n        return this.#numSelectedObjects;\n    }\n\n    /**\n     * Gets the IDs of the selected {@link ViewObject | ViewObjects} in this View.\n     */\n    get selectedObjectIds(): string[] {\n        if (!this.#selectedObjectIds) {\n            this.#selectedObjectIds = Object.keys(this.selectedObjects);\n        }\n        return this.#selectedObjectIds;\n    }\n\n    /**\n     * Gets the number of colorized {@link ViewObject | ViewObjects} in this View.\n     */\n    get numColorizedObjects(): number {\n        return this.#numColorizedObjects;\n    }\n\n    /**\n     * Gets the IDs of the colorized {@link ViewObject | ViewObjects} in this View.\n     */\n    get colorizedObjectIds(): string[] {\n        if (!this.#colorizedObjectIds) {\n            this.#colorizedObjectIds = Object.keys(this.colorizedObjects);\n        }\n        return this.#colorizedObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject | ViewObjects} in this View that have updated opacities.\n     */\n    get opacityObjectIds(): string[] {\n        if (!this.#opacityObjectIds) {\n            this.#opacityObjectIds = Object.keys(this.opacityObjects);\n        }\n        return this.#opacityObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject | ViewObjects} in this View that have updated opacities.\n     */\n    get numOpacityObjects(): number {\n        return this.#numOpacityObjects;\n    }\n\n    /**\n     * @private\n     */\n    registerViewObject(viewObject: ViewObject) {\n        this.objects[viewObject.id] = viewObject;\n        this.#numObjects++;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    deregisterViewObject(viewObject: ViewObject) {\n        delete this.objects[viewObject.id];\n        delete this.visibleObjects[viewObject.id];\n        delete this.xrayedObjects[viewObject.id];\n        delete this.highlightedObjects[viewObject.id];\n        delete this.selectedObjects[viewObject.id];\n        delete this.colorizedObjects[viewObject.id];\n        delete this.opacityObjects[viewObject.id];\n        this.#numObjects--;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectVisibilityUpdated(\n        viewObject: ViewObject,\n        visible: boolean,\n        notify: boolean = true\n    ) {\n        if (visible) {\n            this.visibleObjects[viewObject.id] = viewObject;\n            this.#numVisibleObjects++;\n        } else {\n            delete this.visibleObjects[viewObject.id];\n            this.#numVisibleObjects--;\n        }\n        this.#visibleObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.onObjectVisibility.dispatch(this, viewObject);\n        }\n    }\n\n    /**\n     * @private\n     */\n    objectXRayedUpdated(\n        viewObject: ViewObject,\n        xrayed: boolean,\n        notify: boolean = true\n    ) {\n        if (xrayed) {\n            this.xrayedObjects[viewObject.id] = viewObject;\n            this.#numXRayedObjects++;\n        } else {\n            delete this.xrayedObjects[viewObject.id];\n            this.#numXRayedObjects--;\n        }\n        this.#xrayedObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.onObjectXRayed.dispatch(this, viewObject);\n        }\n    }\n\n    /**\n     * @private\n     */\n    objectHighlightedUpdated(viewObject: ViewObject, highlighted: boolean) {\n        if (highlighted) {\n            this.highlightedObjects[viewObject.id] = viewObject;\n            this.#numHighlightedObjects++;\n        } else {\n            delete this.highlightedObjects[viewObject.id];\n            this.#numHighlightedObjects--;\n        }\n        this.#highlightedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectSelectedUpdated(viewObject: ViewObject, selected: boolean) {\n        if (selected) {\n            this.selectedObjects[viewObject.id] = viewObject;\n            this.#numSelectedObjects++;\n        } else {\n            delete this.selectedObjects[viewObject.id];\n            this.#numSelectedObjects--;\n        }\n        this.#selectedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectColorizeUpdated(viewObject: ViewObject, colorized: boolean) {\n        if (colorized) {\n            this.colorizedObjects[viewObject.id] = viewObject;\n            this.#numColorizedObjects++;\n        } else {\n            delete this.colorizedObjects[viewObject.id];\n            this.#numColorizedObjects--;\n        }\n        this.#colorizedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectOpacityUpdated(viewObject: ViewObject, opacityUpdated: boolean) {\n        if (opacityUpdated) {\n            this.opacityObjects[viewObject.id] = viewObject;\n            this.#numOpacityObjects++;\n        } else {\n            delete this.opacityObjects[viewObject.id];\n            this.#numOpacityObjects--;\n        }\n        this.#opacityObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * Creates a {@link SectionPlane} in this View.\n     *\n     * @param sectionPlaneParams\n     */\n    createSectionPlane(sectionPlaneParams: SectionPlaneParams): SectionPlane {\n        let id = sectionPlaneParams.id || createUUID();\n        if (this.sectionPlanes[id]) {\n            this.error(\n                `SectionPlane with ID \"${id}\" already exists - will randomly-generate ID`\n            );\n            id = createUUID();\n        }\n        const sectionPlane = new SectionPlane(this, sectionPlaneParams);\n        this.#registerSectionPlane(sectionPlane);\n        sectionPlane.onDestroyed.one(() => {\n            this.#deregisterSectionPlane(sectionPlane);\n        });\n        return sectionPlane;\n    }\n\n    /**\n     * Destroys the {@link SectionPlane}s in this View.\n     */\n    clearSectionPlanes(): void {\n        const objectIds = Object.keys(this.sectionPlanes);\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            this.sectionPlanes[objectIds[i]].destroy();\n        }\n        this.sectionPlanesList.length = 0;\n        this.#sectionPlanesHash = null;\n    }\n\n    /**\n     * @private\n     */\n    getSectionPlanesHash() {\n        if (this.#sectionPlanesHash) {\n            return this.#sectionPlanesHash;\n        }\n        if (this.sectionPlanesList.length === 0) {\n            return (this.#sectionPlanesHash = \";\");\n        }\n        let sectionPlane;\n        const hashParts = [];\n        for (let i = 0, len = this.sectionPlanesList.length; i < len; i++) {\n            sectionPlane = this.sectionPlanesList[i];\n            hashParts.push(\"cp\");\n        }\n        hashParts.push(\";\");\n        this.#sectionPlanesHash = hashParts.join(\"\");\n        return this.#sectionPlanesHash;\n    }\n\n    /**\n     * @private\n     */\n    registerLight(light: PointLight | DirLight | AmbientLight) {\n        this.lightsList.push(light);\n        this.lights[light.id] = light;\n        this.#lightsHash = null;\n        this.rebuild();\n    }\n\n    /**\n     * @private\n     */\n    deregisterLight(light: PointLight | DirLight | AmbientLight) {\n        for (let i = 0, len = this.lightsList.length; i < len; i++) {\n            if (this.lightsList[i].id === light.id) {\n                this.lightsList.splice(i, 1);\n                this.#lightsHash = null;\n                delete this.lights[light.id];\n                this.rebuild();\n                return;\n            }\n        }\n    }\n\n    /**\n     * Destroys the light sources in this View.\n     */\n    clearLights(): void {\n        const objectIds = Object.keys(this.lights);\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            this.lights[objectIds[i]].destroy();\n        }\n    }\n\n    /**\n     * @private\n     */\n    getLightsHash() {\n        if (this.#lightsHash) {\n            return this.#lightsHash;\n        }\n        if (this.lightsList.length === 0) {\n            return (this.#lightsHash = \";\");\n        }\n        const hashParts = [];\n        const lights = this.lightsList;\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light: any = lights[i];\n            hashParts.push(\"/\");\n            hashParts.push(light.type);\n            hashParts.push(light.space === \"world\" ? \"w\" : \"v\");\n            if (light.castsShadow) {\n                hashParts.push(\"sh\");\n            }\n        }\n        // if (this.lightMaps.length > 0) {\n        //     hashParts.push(\"/lm\");\n        // }\n        // if (this.reflectionMaps.length > 0) {\n        //     hashParts.push(\"/rm\");\n        // }\n        hashParts.push(\";\");\n        this.#lightsHash = hashParts.join(\"\");\n        return this.#lightsHash;\n    }\n\n    //createLight(lightParams) {\n    //\n    // }\n\n    /**\n     * @private\n     */\n    rebuild() {\n        this.viewer.renderer.needsRebuild(this.viewIndex);\n    }\n\n    /**\n     * @private\n     */\n    redraw() {\n        this.viewer.renderer.setImageDirty(this.viewIndex);\n    }\n\n\n    /**\n     * @private\n     */\n    getAmbientColorAndIntensity(): FloatArrayParam {\n        return [0, 0, 0, 1];\n    }\n\n    /**\n     * Updates the visibility of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.visible} on the Objects with the given IDs.\n     * - Updates {@link View.visibleObjects} and {@link View.numVisibleObjects}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param visible Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsVisible(objectIds: string[], visible: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.visible !== visible;\n            viewObject.visible = visible;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the collidability of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * Updates {@link ViewObject.collidable} on the Objects with the given IDs.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param collidable Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCollidable(objectIds: string[], collidable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.collidable !== collidable;\n            viewObject.collidable = collidable;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the culled status of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * Updates {@link ViewObject.culled} on the Objects with the given IDs.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param culled Whether or not to cull.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCulled(objectIds: string[], culled: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.culled !== culled;\n            viewObject.culled = culled;\n            return changed;\n        });\n    }\n\n    /**\n     * Selects or deselects the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.selected} on the Objects with the given IDs.\n     * - Updates {@link View.selectedObjects} and {@link View.numSelectedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param selected Whether or not to select.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsSelected(objectIds: string[], selected: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.selected !== selected;\n            viewObject.selected = selected;\n            return changed;\n        });\n    }\n\n    /**\n     * Highlights or un-highlights the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.highlighted} on the Objects with the given IDs.\n     * - Updates {@link View.highlightedObjects} and {@link View.numHighlightedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param highlighted Whether or not to highlight.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsHighlighted(objectIds: string[], highlighted: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.highlighted !== highlighted;\n            viewObject.highlighted = highlighted;\n            return changed;\n        });\n    }\n\n    /**\n     * Applies or removes X-ray rendering for the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.xrayed} on the Objects with the given IDs.\n     * - Updates {@link View.xrayedObjects} and {@link View.numXRayedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param xrayed Whether or not to xray.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsXRayed(objectIds: string[], xrayed: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.xrayed !== xrayed;\n            if (changed) {\n                viewObject.xrayed = xrayed;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Colorizes the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.colorize} on the Objects with the given IDs.\n     * - Updates {@link View.colorizedObjects} and {@link View.numColorizedObjects}.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param colorize - RGB colorize factors in range ````[0..1,0..1,0..1]````.\n     * @returns True if any {@link ViewObject | ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsColorized(objectIds: string[], colorize: number[]) {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            viewObject.colorize = colorize;\n        });\n    }\n\n    /**\n     * Sets the opacity of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.opacity} on the Objects with the given IDs.\n     * - Updates {@link View.opacityObjects} and {@link View.numOpacityObjects}.\n     *\n     * @param  objectIds - One or more {@link ViewObject.id} values.\n     * @param opacity - Opacity factor in range ````[0..1]````.\n     * @returns True if any {@link ViewObject | ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsOpacity(objectIds: string[], opacity: number): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.opacity !== opacity;\n            if (changed) {\n                viewObject.opacity = opacity;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the pickability of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.pickable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link View.pick}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param pickable Whether or not to set pickable.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsPickable(objectIds: string[], pickable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.pickable !== pickable;\n            if (changed) {\n                viewObject.pickable = pickable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the clippability of the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.clippable} on the Objects with the given IDs.\n     * - Enables or disables the ability to clip the given Objects with {@link SectionPlane}.\n     *\n     * @param {String[]} objectIds Array of {@link ViewObject.id} values.\n     * @param clippable Whether or not to set clippable.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsClippable(objectIds: string[], clippable: boolean): boolean {\n        return this.withObjects(objectIds, (viewObject: ViewObject) => {\n            const changed = viewObject.clippable !== clippable;\n            if (changed) {\n                viewObject.clippable = clippable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Iterates with a callback over the given {@link ViewObject | ViewObjects} in this View.\n     *\n     * @param  objectIds One or more {@link ViewObject.id} values.\n     * @param callback Callback to execute on each {@link ViewObject}.\n     * @returns True if any {@link ViewObject | ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    withObjects(objectIds: string[], callback: Function): boolean {\n        let changed = false;\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            const id = objectIds[i];\n            let viewObject = this.objects[id];\n            if (viewObject) {\n                changed = callback(viewObject) || changed;\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Creates a {@link ViewLayer} in this View.\n     *\n     * The ViewLayer is then registered in {@link View.layers}.\n     *\n     * Since the ViewLayer is created explicitly by this method, the ViewLayer will persist until {@link ViewLayer.destroy}\n     * is called, or the {@link @xeokit/viewer!View} itself is destroyed. If a ViewLayer with the given ID already exists, then the method\n     * returns that existing ViewLayer. The method will also ensure that the existing ViewLayer likewise persists.\n     *\n     * @param viewLayerParams\n     * @returns The new ViewLayer\n     */\n    createLayer(viewLayerParams: ViewLayerParams): ViewLayer {\n        let viewLayer = this.layers[viewLayerParams.id];\n        if (!viewLayer) {\n            viewLayer = new ViewLayer({\n                // Automatically creates ViewObjects\n                id: viewLayerParams.id,\n                view: this,\n                viewer: this.viewer,\n            });\n            this.layers[viewLayerParams.id] = viewLayer;\n            this.onLayerCreated.dispatch(this, viewLayer);\n            viewLayer.onDestroyed.one(() => {\n                delete this.layers[viewLayer.id];\n                this.onLayerDestroyed.dispatch(this, viewLayer);\n            });\n        }\n        viewLayer.autoDestroy = false;\n        return viewLayer;\n    }\n\n    #registerSectionPlane(sectionPlane: SectionPlane) {\n        this.sectionPlanesList.push(sectionPlane);\n        this.sectionPlanes[sectionPlane.id] = sectionPlane;\n        this.#sectionPlanesHash = null;\n        this.rebuild();\n        this.onSectionPlaneCreated.dispatch(this, sectionPlane);\n    }\n\n    #deregisterSectionPlane(sectionPlane: SectionPlane) {\n        for (let i = 0, len = this.sectionPlanesList.length; i < len; i++) {\n            if (this.sectionPlanesList[i].id === sectionPlane.id) {\n                this.sectionPlanesList.splice(i, 1);\n                this.#sectionPlanesHash = null;\n                delete this.sectionPlanes[sectionPlane.id];\n                this.rebuild();\n                this.onSectionPlaneDestroyed.dispatch(this, sectionPlane);\n                return;\n            }\n        }\n    }\n\n    /**\n     * Destroys this View.\n     *\n     * Causes {@link @xeokit/viewer!Viewer} to fire a \"viewDestroyed\" event.\n     */\n    destroy() {\n        this.viewer.onTick.unsubscribe(this.#onTick);\n        super.destroy();\n        this.onObjectVisibility.clear();\n        this.onObjectXRayed.clear();\n        this.onLayerCreated.clear();\n        this.onLayerDestroyed.clear();\n        this.onSectionPlaneCreated.clear();\n        this.onSectionPlaneDestroyed.clear();\n    }\n\n    #destroyViewObjects(sceneModel: SceneModel) {\n        const objects = sceneModel.objects;\n        for (let id in objects) {\n            const object = objects[id];\n            //     const layerId = object.layerId || \"main\";\n            const layerId = \"default\";\n            let viewLayer = this.layers[layerId];\n            const viewObject = this.objects[object.id];\n            this.deregisterViewObject(viewObject);\n            if (viewLayer) {\n                viewLayer.deregisterViewObject(viewObject);\n                if (viewLayer.autoDestroy && viewLayer.numObjects === 0) {\n                    viewLayer.destroy();\n                }\n            }\n        }\n    }\n}\n\nexport {View};\n","import {apply, createUUID, inQuotes} from \"@xeokit/utils\";\nimport {Capabilities, Component, EventEmitter, SDKError} from \"@xeokit/core\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {Scene, SceneModel} from \"@xeokit/scene\";\n\nimport {View} from \"./View\";\nimport {scheduler} from \"./scheduler\";\nimport type {Renderer} from \"./Renderer\";\n\nimport type {ViewParams} from \"./ViewParams\";\n\nclass TickParams {\n}\n\n/**\n * A Browser-based 2D/3D model viewer.\n *\n * See {@link @xeokit/viewer} for usage.\n */\nexport class Viewer extends Component {\n\n    /**\n     ID of this Viewer.\n     */\n    declare readonly id: string;\n\n    /**\n     True once this Viewer has been destroyed.\n\n     Don't use this Viewer if this is ````true````.\n     */\n    declare readonly destroyed: boolean;\n\n    /**\n     * Indicates the capabilities of this Viewer.\n     */\n    readonly capabilities: Capabilities;\n\n    /**\n     * Emits an event each time a Viewer \"tick\" occurs (~10-60 times per second).\n     *\n     * @event\n     */\n    readonly onTick: EventEmitter<Viewer, TickParams>;\n\n    /**\n     * Emits an event each time a {@link @xeokit/viewer!View} is created.\n     *\n     * @event\n     */\n    readonly onViewCreated: EventEmitter<Viewer, View>;\n\n    /**\n     * Emits an event each time a {@link @xeokit/viewer!View} is destroyed.\n     *\n     * @event\n     */\n    readonly onViewDestroyed: EventEmitter<Viewer, View>;\n\n    /**\n     * The Viewer's scene representation.\n     */\n    readonly scene: Scene;\n\n    /**\n     * Map of all the Views in this Viewer.\n     *\n     * Each {@link @xeokit/viewer!View} is an independently configurable view of the Viewer's models, with its own canvas, camera position, section planes, lights, and object visual states.\n     */\n    readonly views: { [key: string]: View };\n\n    /**\n     * List of all the Views in this Viewer.\n     *\n     * Each {@link @xeokit/viewer!View} is an independently configurable view of the Viewer's models, with its own canvas, camera position, section planes, lights, and object visual states.\n     */\n    readonly viewList: View[];\n\n    /**\n     *  The number of {@link View | Views} belonging to this Viewer.\n     */\n    numViews: number;\n\n    /**\n     The time that this Viewer was created.\n     */\n    readonly startTime: number = (new Date()).getTime();\n\n    /**\n     * @private\n     */\n    readonly renderer: Renderer;\n\n    /**\n     Creates a Viewer.\n\n     @param params - Viewer configuration.\n     @param params.scene - Contains model representations.\n     @param params.renderer - Manages rendering of models.\n     @param params.id - ID for this Viewer, automatically generated by default.\n     @param params.units - The measurement unit type. Accepted values are ````\"meters\"````, ````\"metres\"````, , ````\"centimeters\"````, ````\"centimetres\"````, ````\"millimeters\"````,  ````\"millimetres\"````, ````\"yards\"````, ````\"feet\"```` and ````\"inches\"````.\n     @param params.scale - The number of Real-space units in each World-space coordinate system unit.\n     @param params.origin - The Real-space 3D origin, in current measurement units, at which the World-space coordinate origin ````[0,0,0]```` sits.\n     @param params.localeService - Locale-based translation service.\n\n     */\n    constructor(params: {\n        scene?: Scene,\n        renderer: Renderer,\n        id?: string,\n        units?: string,\n        scale?: number,\n        origin?: FloatArrayParam,\n    }) {\n        super(null, {});\n\n        this.onTick = new EventEmitter(new EventDispatcher<Viewer, TickParams>());\n        this.onViewCreated = new EventEmitter(new EventDispatcher<Viewer, View>());\n        this.onViewDestroyed = new EventEmitter(new EventDispatcher<Viewer, View>());\n\n        this.id = params.id || createUUID();\n\n        this.viewList = [];\n        this.numViews = 0;\n        this.views = {};\n        this.destroyed = false;\n\n        this.capabilities = {\n            maxViews: 0,\n            astcSupported: false,\n            etc1Supported: false,\n            etc2Supported: false,\n            dxtSupported: false,\n            bptcSupported: false,\n            pvrtcSupported: false\n        };\n\n        this.scene = params.scene || new Scene();\n\n        this.renderer = params.renderer;\n\n        this.renderer.getCapabilities(this.capabilities);\n\n        this.renderer.attachViewer(this);\n\n        scheduler.registerViewer(this);\n    }\n\n    /**\n     * Creates a new {@link @xeokit/viewer!View} within this Viewer.\n     *\n     * * The maximum number of views you're allowed to create is provided in {@link Capabilities.maxViews}. This\n     * will be determined by the {@link Renderer} implementation the Viewer is configured with.\n     * * To destroy the View after use, call {@link View.destroy}.\n     * * You must add a View to the Viewer before you can create or load content into the Viewer's Viewer.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const view1 = myViewer.createView({\n     *      id: \"myView\",\n     *      canvasId: \"myView1\"\n     *  });\n     *\n     * if (view1 instanceof SDKError) {\n     *      console.log(view1.message);\n     * } else {\n     *      view1.camera.eye = [-3.933, 2.855, 27.018];\n     *      view1.camera.look = [4.400, 3.724, 8.899];\n     *      view1.camera.up = [-0.018, 0.999, 0.039];\n     *\n     *      //...\n     * }\n     * ````\n     *\n     * @param params View configuration.\n     * @returns *{@link View}*\n     * * On success.\n     * @returns *{@link @xeokit/core!SDKError}*\n     * * If View already exists with the given ID.\n     * * Attempted to create too many Views - see {@link Capabilities.maxViews | Capabilities.maxViews}.\n     */\n    createView(params: ViewParams): View | SDKError {\n        if (this.viewList.length >= this.capabilities.maxViews) {\n            return new SDKError(`Attempted to create too many Views with View.createView() - maximum of ${this.capabilities.maxViews} is allowed`);\n        }\n        let viewId = params.id || createUUID();\n        if (this.views[viewId]) {\n            return new SDKError(`View with ID \"${viewId}\" already exists`);\n        }\n        // @ts-ignore\n        const canvasElement = params.canvasElement || document.getElementById(params.canvasId);\n        if (!(canvasElement instanceof HTMLCanvasElement)) {\n            return new SDKError(\"Mandatory View config expected: valid canvasId or canvasElement\");\n        }\n        const view = new View(apply({viewId, viewer: this}, params));\n        this.#registerView(view);\n        // Renderer.attachView sets up internal Renderer resources\n        // that are expected by Renderer.attachSceneModel\n        view.viewIndex = this.renderer.attachView(view);\n        view.onDestroyed.one(() => {\n            this.#deregisterView(view);\n            this.renderer.detachView(view.viewIndex);\n            this.onViewDestroyed.dispatch(this, view);\n        });\n        // Renderer.attachSceneModel creates RendererViewObjects in Renderer.rendererViewObjects,\n        // which are then expected by View.initViewObjects\n        // TODO: assumes one View\n        this.scene.onModelCreated.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.renderer.attachSceneModel(sceneModel);\n        });\n        this.scene.onModelDestroyed.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.renderer.detachSceneModel(sceneModel);\n        });\n        for (let id in this.scene.models) {\n            this.renderer.attachSceneModel(this.scene.models[id]);\n        }\n        view.initViewObjects();\n        this.onViewCreated.dispatch(this, view);\n        this.log(`View created: ${view.viewId}`);\n        return view;\n    }\n\n    /**\n     Trigger redraw of all {@link View | Views} belonging to this Viewer.\n\n     @private\n     */\n    redraw(): void {\n        for (let viewId in this.views) {\n            this.views[viewId].redraw();\n        }\n    }\n\n    /**\n     Logs a console debugging message for this Viewer.\n\n     The console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n\n     @private\n     @param message - The message to log\n     */\n    log(message: string): void {\n        message = `[LOG] ${this.#prefixMessageWithID(message)}`;\n        window.console.log(message);\n    }\n\n    /**\n     Logs a warning for this Viewer to the JavaScript console.\n\n     The console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n\n     @private\n     @param message - The warning message to log\n     */\n    warn(message: string): void {\n        message = `[WARN] ${this.#prefixMessageWithID(message)}`;\n        window.console.warn(message);\n    }\n\n    /**\n     Logs an error for this Viewer to the JavaScript console.\n\n     The console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\n     @private\n     @param message The error message to log\n     */\n    error(message: string): void {\n        message = `[ERROR] ${this.#prefixMessageWithID(message)}`;\n        window.console.error(message);\n    }\n\n    /**\n     * Destroys this Viewer and all {@link View | Views} and {@link Plugin}s we've created within it.\n     */\n    destroy(): void {\n        if (this.destroyed) {\n            return;\n        }\n        scheduler.deregisterViewer(this);\n        for (let id in this.views) {\n            this.views[id].destroy();\n        }\n        this.onTick.clear();\n        this.onViewCreated.clear();\n        this.onViewDestroyed.clear();\n\n    }\n\n    /**\n     * @private\n     * @param params\n     */\n    render(params: any) {\n        for (let viewIndex = 0; viewIndex < this.viewList.length; viewIndex++) {\n            this.renderer.render(viewIndex, {force: true});\n        }\n    }\n\n    #prefixMessageWithID(message: string): string {\n        return ` [${this.constructor.name} \"${inQuotes(this.id)}\"]: ${message}`;\n    }\n\n    #registerView(view: View): void {\n        if (this.views[view.id]) {\n            return;\n        }\n        this.views[view.id] = view;\n        for (let viewIndex = 0; ; viewIndex++) {\n            if (!this.viewList[viewIndex]) {\n                this.viewList[viewIndex] = view;\n                this.numViews++;\n                view.viewIndex = viewIndex;\n                return;\n            }\n        }\n    }\n\n    #deregisterView(view: View): void {\n        if (!this.views[view.id]) {\n            return;\n        }\n        delete this.views[view.id];\n        delete this.viewList[view.viewIndex];\n        this.numViews--;\n    }\n}","import {Component} from \"@xeokit/core\";\nimport type {View} from \"./View\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\n\n/**\n * An ambient light source within a {@link @xeokit/viewer!View}.\n *\n * ## Summary\n *\n * * Has fixed color and intensity that illuminates all objects equally.\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass AmbientLight extends Component {\n\n    /**\n     ID of this AmbientLight, unique within the {@link @xeokit/viewer!View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this AmbientLight belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        intensity: number;\n        color: Float32Array;\n        type: string\n    };\n\n    /**\n     * @param view Owner component. When destroyed, the owner will destroy this AmbientLight as well.\n     * @param cfg AmbientLight configuration\n     */\n    constructor(view: View, cfg: {\n        /** Optional ID, generated automatically when omitted.*/\n        id?: string;\n        /** Intensity factor in range ````[0..1]````.  Default is ````1````.*/\n        intensity?: number;\n        /** RGB color in range ````[0..1,0..1,0..1]````. Default is ````[0.7, 0.7, 0.7]````.*/\n        color?: FloatArrayParam\n    } = {}) {\n        super(view, cfg);\n        this.view = view;\n        this.#state = {\n            type: \"ambient\",\n            color: new Float32Array(cfg.color || [0.7, 0.7, 0.7]),\n            intensity: (cfg.intensity !== undefined && cfg.intensity !== null) ? cfg.intensity : 1.0\n        };\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Sets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.7]````.\n     *\n     * @param color The AmbientLight's RGB color.\n     */\n    set color(color: FloatArrayParam) {\n        this.#state.color.set(color);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.7]````.\n     */\n    get color(): FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The AmbientLight's intensity.\n     */\n    set intensity(intensity: number) {\n        this.#state.intensity = intensity !== undefined ? intensity : 1.0;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The AmbientLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Destroys this AmbientLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n    }\n}\n\nexport {AmbientLight};\n","import {Component} from \"@xeokit/core\";\n\n\nimport type {View} from \"./View\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\n/**\n * A directional light source within a {@link @xeokit/viewer!View}.\n *\n * ## Summary\n *\n * * Illuminates all objects equally from a given direction.\n * * Has an emission direction vector in {@link DirLight.dir}, but no position.\n * * Defined in either *World* or *View* coordinate space. When in World-space, {@link DirLight.dir} is relative to the\n * World coordinate system, and will appear to move as the {@link @xeokit/viewer!Camera}  moves. When in View-space, {@link DirLight.dir} is\n * relative to the View coordinate system, and will behave as if fixed to the viewer's head.\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass DirLight extends Component {\n\n    /**\n     ID of this DirLight, unique within the {@link @xeokit/viewer!View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this DirLight belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        type: \"dir\";\n        dir: Float32Array;\n        color: Float32Array;\n        intensity: number;\n        space: \"world\" | \"view\"\n    };\n\n    /**\n     * @param view View that owns this DirLight. When destroyed, the View will destroy this DirLight as well.\n     * @param options The DirLight configuration\n     * @param [options.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param [options.dir=[1.0, 1.0, 1.0]]  A unit vector indicating the direction that the light is shining,  given in either World or View space, depending on the value of the ````space```` parameter.\n     * @param [options.color=[0.7, 0.7, 0.8 ]] The color of this DirLight.\n     * @param [options.intensity=1.0] The intensity of this DirLight, as a factor in range ````[0..1]````.\n     * @param [options.space=\"view\"] The coordinate system the DirLight is defined in - ````\"view\"```` or ````\"space\"````.\n     */\n    constructor(view: View, options: {\n        intensity?: number; color?: FloatArrayParam;\n        dir?: FloatArrayParam; space?: \"world\" | \"view\"\n    } = {}) {\n        super(view, options);\n        this.view = view;\n        this.#state = {\n            type: \"dir\",\n            dir: new Float32Array(options.dir || [1.0, 1.0, 1.0]),\n            color: new Float32Array(options.color || [0.7, 0.7, 0.8]),\n            intensity: (options.intensity !== undefined && options.intensity !== null) ? options.intensity : 1.0,\n            space: options.space || \"view\"\n        };\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Gets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @returns {Number[]} The direction vector.\n     */\n    get dir(): FloatArrayParam {\n        return this.#state.dir;\n    }\n\n    /**\n     * Sets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @param value The direction vector.\n     */\n    set dir(value: FloatArrayParam) {\n        this.#state.dir.set(value);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The DirLight's RGB color.\n     */\n    get color(): FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param color The DirLight's RGB color.\n     */\n    set color(color: FloatArrayParam) {\n        this.#state.color.set(color);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this DirLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The DirLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the intensity of this DirLight.\n     *\n     * Default intensity is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The DirLight's intensity\n     */\n    set intensity(intensity: number) {\n        this.#state.intensity = intensity;\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this DirLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n        this.view.redraw();\n    }\n}\n\nexport {DirLight};\n","import {Component} from \"@xeokit/core\";\n\n\nimport type {View} from \"./View\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\n\n/**\n * A positional light source within a {@link @xeokit/viewer!View}.\n *\n * ## Summary\n *\n * * Originates from a single point and spreads outward in all directions, with optional attenuation over distance.\n * * Has a position in {@link PointLight.pos}, but no direction.\n * * Defined in either *World* or *View* coordinate space. When in World-space, {@link PointLight.pos} is relative to\n * the World coordinate system, and will appear to move as the {@link @xeokit/viewer!Camera}  moves. When in View-space,\n * {@link PointLight.pos} is relative to the View coordinate system, and will behave as if fixed to the viewer's head.\n * * Has {@link PointLight.constantAttenuation}, {@link PointLight.linearAttenuation} and {@link PointLight.quadraticAttenuation}\n * factors, which indicate how intensity attenuates over distance.\n * * {@link AmbientLight}s, {@link PointLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass PointLight extends Component {\n\n    /**\n     ID of this PointLight, unique within the {@link @xeokit/viewer!View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this PointLight belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        intensity: number;\n        attenuation: Float32Array;\n        color: Float32Array;\n        pos: Float64Array;\n        type: string;\n        space: string\n    };\n\n    /**\n     * @param view View that owns this PointLight. When destroyed, the View will destroy this PointLight as well.\n     * @param cfg The PointLight configuration\n     * @param [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param [cfg.pos=[ 1.0, 1.0, 1.0 ]] Position, in either World or View space, depending on the value of the **space** parameter.\n     * @param [cfg.color=[0.7, 0.7, 0.8 ]] Color of this PointLight.\n     * @param [cfg.intensity=1.0] Intensity of this PointLight, as a factor in range ````[0..1]````.\n     * @param [cfg.constantAttenuation=0] Constant attenuation factor.\n     * @param [cfg.linearAttenuation=0] Linear attenuation factor.\n     * @param [cfg.quadraticAttenuation=0] Quadratic attenuation factor.\n     * @param [cfg.space=\"view\"] The coordinate system this PointLight is defined in - \"view\" or \"world\".\n     * @param [cfg.castsShadow=false] Flag which indicates if this PointLight casts a castsShadow.\n     */\n    constructor(view: View, cfg: {\n        /** Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.*/\n        id?: string;\n        /** Intensity of this PointLight, as a factor in range ````[0..1]````. */\n        intensity?: number;\n        /** RGB color */\n        color?: FloatArrayParam;\n        /** World-space position */\n        pos?: FloatArrayParam;\n        /** Quadratic attenuation factor. */\n        quadraticAttenuation?: number;\n        /** Constant attenuation factor */\n        constantAttenuation?: number;\n        /** The coordinate system this PointLight is defined in - \"view\" or \"world\". */\n        space?: string;\n        /** Linear attenuation factor */\n        linearAttenuation?: number\n    } = {}) {\n\n        super(view, cfg);\n\n        this.view = view;\n\n\n        this.#state = {\n            type: \"point\",\n            pos: new Float64Array(cfg.pos || [1.0, 1.0, 1.0]),\n            color: new Float32Array(cfg.color || [0.7, 0.7, 0.8]),\n            intensity: 1.0,\n            // @ts-ignore\n            attenuation: new Float32Array([cfg.constantAttenuation, cfg.linearAttenuation, cfg.quadraticAttenuation]),\n            space: cfg.space || \"view\"\n        };\n\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Gets the position of this PointLight.\n     *\n     * This will be either World- or View-space, depending on the value of {@link PointLight.space}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @returns {Number[]} The position.\n     */\n    get pos(): FloatArrayParam {\n        return this.#state.pos;\n    }\n\n    /**\n     * Sets the position of this PointLight.\n     *\n     * This will be either World- or View-space, depending on the value of {@link PointLight.space}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @param pos The position.\n     */\n    set pos(pos: FloatArrayParam) {\n        this.#state.pos.set(pos || [1.0, 1.0, 1.0]);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this PointLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The PointLight's RGB color.\n     */\n    get color(): FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the RGB color of this PointLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param color The PointLight's RGB color.\n     */\n    set color(color: FloatArrayParam) {\n        this.#state.color.set(color || [0.7, 0.7, 0.8]);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this PointLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The PointLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the intensity of this PointLight.\n     *\n     * Default intensity is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The PointLight's intensity\n     */\n    set intensity(intensity: number) {\n        if (intensity === this.#state.intensity) {\n            return;\n        }\n        this.#state.intensity = intensity;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the constant attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The constant attenuation factor.\n     */\n    get constantAttenuation(): number {\n        return this.#state.attenuation[0];\n    }\n\n    /**\n     * Sets the constant attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The constant attenuation factor.\n     */\n    set constantAttenuation(value: number) {\n        this.#state.attenuation[0] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the linear attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The linear attenuation factor.\n     */\n    get linearAttenuation(): number {\n        return this.#state.attenuation[1];\n    }\n\n    /**\n     * Sets the linear attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The linear attenuation factor.\n     */\n    set linearAttenuation(value: number) {\n        this.#state.attenuation[1] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the quadratic attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The quadratic attenuation factor.\n     */\n    get quadraticAttenuation(): number {\n        return this.#state.attenuation[2];\n    }\n\n    /**\n     * Sets the quadratic attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The quadratic attenuation factor.\n     */\n    set quadraticAttenuation(value: number) {\n        this.#state.attenuation[2] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this PointLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n        this.view.redraw();\n    }\n}\n\nexport {PointLight};\n","\nimport type {ViewObject} from \"./ViewObject\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\n\n/**\n * Results of a pick attempted with {@link View.pick}.\n */\nclass PickResult {\n\n    #viewObject?: ViewObject | null | undefined;\n    #gotCanvasPos: boolean;\n    #gotOrigin: boolean;\n    #gotDirection: boolean;\n    #gotIndices: boolean;\n    #gotLocalPos: boolean;\n    #gotWorldPos: boolean;\n    #gotViewPos: boolean;\n    #gotWorldNormal: boolean;\n    #gotUV: boolean;\n    #canvasPos: Int16Array;\n    #origin: FloatArrayParam;\n    #direction: FloatArrayParam;\n    #indices: Int32Array;\n    #localPos: FloatArrayParam;\n    #worldPos: FloatArrayParam;\n    #viewPos: FloatArrayParam;\n    #worldNormal: FloatArrayParam;\n    #uv: FloatArrayParam;\n\n    constructor() {\n\n        this.#viewObject = null;\n        this.#canvasPos = new Int16Array([0, 0]);\n        this.#origin = new Float64Array([0, 0, 0]);\n        this.#direction = new Float64Array([0, 0, 0]);\n        this.#indices = new Int32Array(3);\n        this.#localPos = new Float64Array([0, 0, 0]);\n        this.#worldPos = new Float64Array([0, 0, 0]);\n        this.#viewPos = new Float64Array([0, 0, 0]);\n        this.#worldNormal = new Float64Array([0, 0, 0]);\n        this.#uv = new Float64Array([0, 0]);\n        this.#gotOrigin = false;\n        this.#gotDirection = false;\n        this.#gotIndices = false;\n        this.#gotCanvasPos = false;\n        this.#gotLocalPos = false;\n        this.#gotWorldPos = false;\n        this.#gotViewPos = false;\n        this.#gotWorldNormal = false;\n        this.#gotUV = false;\n\n        this.reset();\n    }\n\n    /**\n     * The picked {@link ViewObject}.\n     */\n    get viewObject(): ViewObject | null | undefined {\n        return this.#viewObject;\n    }\n\n    /**\n     * @private\n     */\n    set viewObject(value: ViewObject | null | undefined) {\n        this.#viewObject = value;\n    }\n\n    /**\n     * Canvas coordinates when picking with a 2D pointer.\n     */\n    get canvasPos(): Int16Array | undefined {\n        return this.#gotCanvasPos ? this.#canvasPos : undefined;\n    }\n\n    /**\n     * @private\n     */\n    set canvasPos(value: FloatArrayParam | Int16Array | undefined) {\n        if (value) {\n            this.#canvasPos[0] = value[0];\n            this.#canvasPos[1] = value[1];\n            this.#gotCanvasPos = true;\n        } else {\n            this.#gotCanvasPos = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray origin when raypicked.\n     */\n    get origin(): FloatArrayParam | null {\n        return this.#gotOrigin ? this.#origin : null;\n    }\n\n    /**\n     * @private\n     */\n    set origin(value: any) {\n        if (value) {\n            this.#origin[0] = value[0];\n            this.#origin[1] = value[1];\n            this.#origin[2] = value[2];\n            this.#gotOrigin = true;\n        } else {\n            this.#gotOrigin = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray direction when raypicked.\n     */\n    get direction(): FloatArrayParam | null {\n        return this.#gotDirection ? this.#direction : null;\n    }\n\n    /**\n     * @private\n     */\n    set direction(value: any) {\n        if (value) {\n            this.#direction[0] = value[0];\n            this.#direction[1] = value[1];\n            this.#direction[2] = value[2];\n            this.#gotDirection = true;\n        } else {\n            this.#gotDirection = false;\n        }\n    }\n\n    /**\n     * Picked triangle's vertex indices.\n     * Only defined when an object and triangle was picked.\n     */\n    get indices(): Int32Array | null {\n        return this.#viewObject && this.#gotIndices ? this.#indices : null;\n    }\n\n    /**\n     * @private\n     */\n    set indices(value: any) {\n        if (value) {\n            this.#indices[0] = value[0];\n            this.#indices[1] = value[1];\n            this.#indices[2] = value[2];\n            this.#gotIndices = true;\n        } else {\n            this.#gotIndices = false;\n        }\n    }\n\n    /**\n     * Picked Local-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get localPos(): FloatArrayParam | null {\n        return this.#viewObject && this.#gotLocalPos ? this.#localPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set localPos(value: any) {\n        if (value) {\n            this.#localPos[0] = value[0];\n            this.#localPos[1] = value[1];\n            this.#localPos[2] = value[2];\n            this.#gotLocalPos = true;\n        } else {\n            this.#gotLocalPos = false;\n        }\n    }\n\n    /**\n     * Picked World-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get worldPos(): FloatArrayParam | null {\n        return this.#viewObject && this.#gotWorldPos ? this.#worldPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set worldPos(value: any) {\n        if (value) {\n            this.#worldPos[0] = value[0];\n            this.#worldPos[1] = value[1];\n            this.#worldPos[2] = value[2];\n            this.#gotWorldPos = true;\n        } else {\n            this.#gotWorldPos = false;\n        }\n    }\n\n    /**\n     * Picked View-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get viewPos(): FloatArrayParam | null {\n        return this.#viewObject && this.#gotViewPos ? this.#viewPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set viewPos(value: any) {\n        if (value) {\n            this.#viewPos[0] = value[0];\n            this.#viewPos[1] = value[1];\n            this.#viewPos[2] = value[2];\n            this.#gotViewPos = true;\n        } else {\n            this.#gotViewPos = false;\n        }\n    }\n\n    /**\n     * Normal vector at picked position on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get worldNormal(): FloatArrayParam | null {\n        return this.#viewObject && this.#gotWorldNormal ? this.#worldNormal : null;\n    }\n\n    /**\n     * @private\n     */\n    set worldNormal(value: any) {\n        if (value) {\n            this.#worldNormal[0] = value[0];\n            this.#worldNormal[1] = value[1];\n            this.#worldNormal[2] = value[2];\n            this.#gotWorldNormal = true;\n        } else {\n            this.#gotWorldNormal = false;\n        }\n    }\n\n    /**\n     * UV coordinates at picked position on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get uv(): FloatArrayParam | null {\n        return this.#viewObject && this.#gotUV ? this.#uv : null;\n    }\n\n    /**\n     * @private\n     */\n    set uv(value: any) {\n        if (value) {\n            this.#uv[0] = value[0];\n            this.#uv[1] = value[1];\n            this.#gotUV = true;\n        } else {\n            this.#gotUV = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    reset() {\n        this.#viewObject = null;\n        this.#gotCanvasPos = false;\n        this.#gotOrigin = false;\n        this.#gotDirection = false;\n        this.#gotIndices = false;\n        this.#gotLocalPos = false;\n        this.#gotWorldPos = false;\n        this.#gotViewPos = false;\n        this.#gotWorldNormal = false;\n        this.#gotUV = false;\n    }\n}\n\nexport {PickResult};","import {\n    LinearEncoding,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    RGB_ETC1_Format,\n    RGB_ETC2_Format,\n    RGB_PVRTC_4BPPV1_Format,\n    RGB_S3TC_DXT1_Format,\n    RGBA_ASTC_4x4_Format,\n    RGBA_BPTC_Format,\n    RGBA_ETC2_EAC_Format,\n    RGBA_PVRTC_4BPPV1_Format,\n    RGBA_S3TC_DXT5_Format,\n    RGBAFormat,\n    sRGBEncoding\n} from \"@xeokit/constants\";\nimport {FileLoader, WorkerPool} from \"@xeokit/utils\";\nimport type {Capabilities, TextureCompressedParams, TextureTranscoder} from \"@xeokit/core\";\n\nconst KTX2TransferSRGB = 2;\nconst KTX2_ALPHA_PREMULTIPLIED = 1;\n\nlet activeTranscoders = 0;\n\nconst BasisFormat = {\n    ETC1S: 0,\n    UASTC_4x4: 1\n};\n\nconst TranscoderFormat = {\n    ETC1: 0,\n    ETC2: 1,\n    BC1: 2,\n    BC3: 3,\n    BC4: 4,\n    BC5: 5,\n    BC7_M6_OPAQUE_ONLY: 6,\n    BC7_M5: 7,\n    PVRTC1_4_RGB: 8,\n    PVRTC1_4_RGBA: 9,\n    ASTC_4x4: 10,\n    ATC_RGB: 11,\n    ATC_RGBA_INTERPOLATED_ALPHA: 12,\n    RGBA32: 13,\n    RGB565: 14,\n    BGR565: 15,\n    RGBA4444: 16\n};\n\nconst EngineFormat = {\n    RGBAFormat: RGBAFormat,\n    RGBA_ASTC_4x4_Format: RGBA_ASTC_4x4_Format,\n    RGBA_BPTC_Format: RGBA_BPTC_Format,\n    RGBA_ETC2_EAC_Format: RGBA_ETC2_EAC_Format,\n    RGBA_PVRTC_4BPPV1_Format: RGBA_PVRTC_4BPPV1_Format,\n    RGBA_S3TC_DXT5_Format: RGBA_S3TC_DXT5_Format,\n    RGB_ETC1_Format: RGB_ETC1_Format,\n    RGB_ETC2_Format: RGB_ETC2_Format,\n    RGB_PVRTC_4BPPV1_Format: RGB_PVRTC_4BPPV1_Format,\n    RGB_S3TC_DXT1_Format: RGB_S3TC_DXT1_Format\n};\n\n/**\n * KTX2 texture decompression strategy.\n *\n * See {@link @xeokit/ktx2} for usage.\n */\nexport class KTX2TextureTranscoder implements TextureTranscoder {\n\n    #transcoderPath: string;\n    #transcoderBinary: any;\n    #transcoderPending: null | Promise<void>;\n    #workerPool: WorkerPool;\n    #workerSourceURL: string;\n    #workerConfig: null | { astcSupported: any; etc1Supported: any; pvrtcSupported: any; etc2Supported: any; dxtSupported: any; bptcSupported: any };\n    #supportedFileTypes: string[];\n    #withCredentials: boolean;\n\n    /**\n     * Creates a new KTX2TextureTranscoder.\n     *\n     * @param {String} [params.transcoderPath=\"https://cdn.jsdelivr.net/npm/@xeokit/sdk/dist/basis/\"] Path to the Basis\n     * transcoder module that internally does the heavy lifting for our KTX2TextureTranscoder. If we omit this configuration,\n     * then our KTX2TextureTranscoder will load it from ````https://cdn.jsdelivr.net/npm/@xeokit/sdk/dist/basis/```` by\n     * default. Therefore, make sure your application is connected to the internet if you wish to use the default transcoder path.\n     * @param {Number} [params.workerLimit] The maximum number of Workers to use for transcoding.\n     */\n    constructor(params: { transcoderPath?: string, workerLimit?: number }) {\n\n        this.#transcoderPath = params.transcoderPath || \"https://cdn.jsdelivr.net/npm/@xeokit/sdk/dist/basis/\";\n        this.#transcoderBinary = null;\n        this.#transcoderPending = null;\n        this.#workerPool = new WorkerPool();\n        this.#workerSourceURL = '';\n\n        if (params.workerLimit) {\n            this.#workerPool.setWorkerLimit(params.workerLimit);\n        }\n\n        this.#workerConfig = null;\n        this.#withCredentials = false;\n        this.#supportedFileTypes = [\"xkt2\"];\n    }\n\n    /**\n     * Initializes this transcoder.\n     *\n     * @param capabilities A set of flags indicating the capabilities of this TextureTranscoder.\n     */\n    init(capabilities: Capabilities) {\n        this.#workerConfig = {\n            astcSupported: capabilities.astcSupported,\n            etc1Supported: capabilities.etc1Supported,\n            etc2Supported: capabilities.etc2Supported,\n            dxtSupported: capabilities.dxtSupported,\n            bptcSupported: capabilities.bptcSupported,\n            pvrtcSupported: capabilities.pvrtcSupported\n        };\n    }\n\n    /**\n     * Transcodes texture data from transcoded buffers.\n     *\n     * @param {ArrayBuffer[]} buffers Transcoded input texture data. Given as an array of buffers so that we can support multi-image textures, such as cube maps.\n     * @param {*} config Transcoding options.\n     * @returns {Promise<TextureCompressedParams>} Transcoded output texture data.\n     */\n    transcode(buffers: ArrayBuffer[], config = {}): Promise<TextureCompressedParams> {\n        return new Promise<TextureCompressedParams>((resolve, reject) => {\n            const taskConfig = config;\n            this.#initTranscoder().then(() => {\n                return this.#workerPool.postMessage({\n                    type: 'transcode',\n                    buffers,\n                    taskConfig: taskConfig\n                }, buffers);\n            }).then((e) => {\n                // @ts-ignore\n                const transcodeResult = e.data;\n                const {mipmaps, width, height, format, type, error, dfdTransferFn, dfdFlags} = transcodeResult;\n                if (type === 'error') {\n                    return reject(error);\n                }\n                resolve(<TextureCompressedParams>{\n                    mipmaps,\n                    props: {\n                        format,\n                        minFilter: mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter,\n                        magFilter: mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter,\n                        encoding: dfdTransferFn === KTX2TransferSRGB ? sRGBEncoding : LinearEncoding,\n                        premultiplyAlpha: !!(dfdFlags & KTX2_ALPHA_PREMULTIPLIED)\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Destroys this KTX2TextureTranscoder\n     */\n    destroy() {\n        URL.revokeObjectURL(this.#workerSourceURL);\n        this.#workerPool.destroy();\n        activeTranscoders--;\n    }\n\n    #initTranscoder() {\n        if (!this.#transcoderPending) {\n            const jsLoader = new FileLoader();\n            jsLoader.setPath(this.#transcoderPath);\n            jsLoader.setWithCredentials(this.#withCredentials);\n            // @ts-ignore\n            const jsContent = jsLoader.loadAsync('basis_transcoder.js');\n            const binaryLoader = new FileLoader();\n            binaryLoader.setPath(this.#transcoderPath);\n            binaryLoader.setResponseType('arraybuffer');\n            binaryLoader.setWithCredentials(this.#withCredentials);\n            // @ts-ignore\n            const binaryContent = binaryLoader.loadAsync('basis_transcoder.wasm');\n            this.#transcoderPending = Promise.all([jsContent, binaryContent])\n                .then(([jsContent, binaryContent]) => {\n                    const fn = BasisWorker.toString();\n                    const body = [\n                        '/* constants */',\n                        'let _EngineFormat = ' + JSON.stringify(EngineFormat),\n                        'let _TranscoderFormat = ' + JSON.stringify(TranscoderFormat),\n                        'let _BasisFormat = ' + JSON.stringify(BasisFormat),\n                        '/* basis_transcoder.js */',\n                        jsContent,\n                        '/* worker */',\n                        fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n                    ].join('\\n');\n                    this.#workerSourceURL = URL.createObjectURL(new Blob([body]));\n                    this.#transcoderBinary = binaryContent;\n                    this.#workerPool.setWorkerCreator(() => {\n                        const worker = new Worker(this.#workerSourceURL);\n                        const transcoderBinary = this.#transcoderBinary.slice(0);\n                        worker.postMessage({\n                            type: 'init',\n                            config: this.#workerConfig,\n                            transcoderBinary\n                        }, [transcoderBinary]);\n                        return worker;\n                    });\n                });\n            if (activeTranscoders > 0) {\n                console.warn('KTX2TextureTranscoder: Multiple active KTX2TextureTranscoder may cause performance issues.' + ' Use a single KTX2TextureTranscoder instance, or call .dispose() on old instances.');\n            }\n            activeTranscoders++;\n        }\n        return this.#transcoderPending;\n    }\n}\n\n\nconst BasisWorker = function () {\n\n    let config: { [x: string]: any; };\n    let transcoderPending: Promise<any>;\n    let BasisModule: any;\n\n    // @ts-ignore\n    const EngineFormat = _EngineFormat; // eslint-disable-line no-undef\n    // @ts-ignore\n    const TranscoderFormat = _TranscoderFormat; // eslint-disable-line no-undef\n    // @ts-ignore\n    const BasisFormat = _BasisFormat; // eslint-disable-line no-undef\n\n    self.addEventListener('message', function (e) {\n        const message = e.data;\n        switch (message.type) {\n            case 'init':\n                config = message.config;\n                init(message.transcoderBinary);\n                break;\n            case 'transcode':\n                transcoderPending.then(() => {\n                    try {\n                        const {\n                            width,\n                            height,\n                            hasAlpha,\n                            mipmaps,\n                            format,\n                            dfdTransferFn,\n                            dfdFlags\n                        } = transcode(message.buffers[0]);\n                        const buffers = [];\n                        for (let i = 0; i < mipmaps.length; ++i) {\n                            buffers.push(mipmaps[i].data.buffer);\n                        }\n                        self.postMessage({\n                            type: 'transcode',\n                            id: message.id,\n                            width,\n                            height,\n                            hasAlpha,\n                            mipmaps,\n                            format,\n                            dfdTransferFn,\n                            dfdFlags\n                            // @ts-ignore\n                        }, buffers);\n                    } catch (error) {\n                        console.error(`[BasisWorker]: ${error}`);\n                        // @ts-ignore\n                        self.postMessage({type: 'error', id: message.id, error: error.message});\n                    }\n                });\n                break;\n        }\n    });\n\n    function init(wasmBinary: any) {\n        transcoderPending = new Promise(resolve => {\n            BasisModule = {\n                wasmBinary,\n                onRuntimeInitialized: resolve\n            };\n            // @ts-ignore\n            BASIS(BasisModule); // eslint-disable-line no-undef\n        }).then(() => {\n            BasisModule.initializeBasis();\n            if (BasisModule.KTX2File === undefined) {\n                console.warn('KTX2TextureTranscoder: Please update Basis Universal transcoder.');\n            }\n        });\n    }\n\n    function transcode(buffer: Iterable<number>) {\n        const ktx2File = new BasisModule.KTX2File(new Uint8Array(buffer));\n\n        function cleanup() {\n            ktx2File.close();\n            ktx2File.delete();\n        }\n\n        if (!ktx2File.isValid()) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: Invalid or unsupported .ktx2 file');\n        }\n        const basisFormat = ktx2File.isUASTC() ? BasisFormat.UASTC_4x4 : BasisFormat.ETC1S;\n        const width = ktx2File.getWidth();\n        const height = ktx2File.getHeight();\n        const levels = ktx2File.getLevels();\n        const hasAlpha = ktx2File.getHasAlpha();\n        const dfdTransferFn = ktx2File.getDFDTransferFunc();\n        const dfdFlags = ktx2File.getDFDFlags();\n        const {transcoderFormat, engineFormat} = getTranscoderFormat(basisFormat, width, height, hasAlpha);\n        if (!width || !height || !levels) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: Invalid texture');\n        }\n        if (!ktx2File.startTranscoding()) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: .startTranscoding failed');\n        }\n        const mipmaps = [];\n        for (let mip = 0; mip < levels; mip++) {\n            const levelInfo = ktx2File.getImageLevelInfo(mip, 0, 0);\n            const mipWidth = levelInfo.origWidth;\n            const mipHeight = levelInfo.origHeight;\n            const dst = new Uint8Array(ktx2File.getImageTranscodedSizeInBytes(mip, 0, 0, transcoderFormat));\n            const status = ktx2File.transcodeImage(dst, mip, 0, 0, transcoderFormat, 0, -1, -1);\n            if (!status) {\n                cleanup();\n                throw new Error('KTX2TextureTranscoder: .transcodeImage failed.');\n            }\n            mipmaps.push({data: dst, width: mipWidth, height: mipHeight});\n        }\n        cleanup();\n        return {width, height, hasAlpha, mipmaps, format: engineFormat, dfdTransferFn, dfdFlags};\n    }\n\n    // Optimal choice of a transcoder target format depends on the Basis format (ETC1S or UASTC),\n    // device capabilities, and texture dimensions. The list below ranks the formats separately\n    // for ETC1S and UASTC.\n    //\n    // In some cases, transcoding UASTC to RGBA32 might be preferred for higher quality (at\n    // significant memory cost) compared to ETC1/2, BC1/3, and PVRTC. The transcoder currently\n    // chooses RGBA32 only as a last resort and does not expose that option to the caller.\n\n    const FORMAT_OPTIONS = [{\n        if: 'astcSupported',\n        basisFormat: [BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ASTC_4x4, TranscoderFormat.ASTC_4x4],\n        engineFormat: [EngineFormat.RGBA_ASTC_4x4_Format, EngineFormat.RGBA_ASTC_4x4_Format],\n        priorityETC1S: Infinity,\n        priorityUASTC: 1,\n        needsPowerOfTwo: false\n    }, {\n        if: 'bptcSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.BC7_M5, TranscoderFormat.BC7_M5],\n        engineFormat: [EngineFormat.RGBA_BPTC_Format, EngineFormat.RGBA_BPTC_Format],\n        priorityETC1S: 3,\n        priorityUASTC: 2,\n        needsPowerOfTwo: false\n    }, {\n        if: 'dxtSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.BC1, TranscoderFormat.BC3],\n        engineFormat: [EngineFormat.RGB_S3TC_DXT1_Format, EngineFormat.RGBA_S3TC_DXT5_Format],\n        priorityETC1S: 4,\n        priorityUASTC: 5,\n        needsPowerOfTwo: false\n    }, {\n        if: 'etc2Supported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ETC1, TranscoderFormat.ETC2],\n        engineFormat: [EngineFormat.RGB_ETC2_Format, EngineFormat.RGBA_ETC2_EAC_Format],\n        priorityETC1S: 1,\n        priorityUASTC: 3,\n        needsPowerOfTwo: false\n    }, {\n        if: 'etc1Supported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ETC1],\n        engineFormat: [EngineFormat.RGB_ETC1_Format],\n        priorityETC1S: 2,\n        priorityUASTC: 4,\n        needsPowerOfTwo: false\n    }, {\n        if: 'pvrtcSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.PVRTC1_4_RGB, TranscoderFormat.PVRTC1_4_RGBA],\n        engineFormat: [EngineFormat.RGB_PVRTC_4BPPV1_Format, EngineFormat.RGBA_PVRTC_4BPPV1_Format],\n        priorityETC1S: 5,\n        priorityUASTC: 6,\n        needsPowerOfTwo: true\n    }];\n    const ETC1S_OPTIONS = FORMAT_OPTIONS.sort(function (a, b) {\n        return a.priorityETC1S - b.priorityETC1S;\n    });\n    const UASTC_OPTIONS = FORMAT_OPTIONS.sort(function (a, b) {\n        return a.priorityUASTC - b.priorityUASTC;\n    });\n\n    function getTranscoderFormat(basisFormat: number, width: number, height: number, hasAlpha: any) {\n        let transcoderFormat;\n        let engineFormat;\n        const options = basisFormat === BasisFormat.ETC1S ? ETC1S_OPTIONS : UASTC_OPTIONS;\n        for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (!config[opt.if]) continue;\n            if (!opt.basisFormat.includes(basisFormat)) continue;\n            if (hasAlpha && opt.transcoderFormat.length < 2) continue;\n            if (opt.needsPowerOfTwo && !(isPowerOfTwo(width) && isPowerOfTwo(height))) continue;\n            transcoderFormat = opt.transcoderFormat[hasAlpha ? 1 : 0];\n            engineFormat = opt.engineFormat[hasAlpha ? 1 : 0];\n            return {\n                transcoderFormat,\n                engineFormat\n            };\n        }\n        console.warn('KTX2TextureTranscoder: No suitable compressed texture format found. Decoding to RGBA32.');\n        transcoderFormat = TranscoderFormat.RGBA32;\n        engineFormat = EngineFormat.RGBAFormat;\n        return {\n            transcoderFormat,\n            engineFormat\n        };\n    }\n\n    function isPowerOfTwo(value: number) {\n        if (value <= 2) return true;\n        return (value & value - 1) === 0 && value !== 0;\n    }\n};\n\n","import type {GLArrayBuf} from \"./GLArrayBuf\";\n\n/**\n * Represents a WebGL vertex attribute.\n */\nexport class GLAttribute {\n    gl: WebGL2RenderingContext;\n    location: number;\n\n    /**\n     * Creates a new vertex attribute.\n     * @param gl\n     * @param location\n     */\n    constructor(gl: WebGL2RenderingContext, location: number) {\n        this.gl = gl;\n        this.location = location;\n    }\n\n    /**\n     * Binds an array buffer to this vertex attribute.\n     * @param arrayBuf\n     */\n    bindArrayBuffer(arrayBuf: GLArrayBuf) {\n        if (!arrayBuf) {\n            return;\n        }\n        arrayBuf.bind();\n        this.gl.enableVertexAttribArray(this.location);\n        this.gl.vertexAttribPointer(this.location, arrayBuf.itemSize, arrayBuf.itemType, arrayBuf.normalized, arrayBuf.stride, arrayBuf.offset);\n    }\n}\n","import type {GLProgram} from \"./GLProgram\";\nimport type {GLSampler} from \"./GLSampler\";\nimport type {GLAbstractTexture} from \"./GLAbstractTexture\";\n\n/**\n * Represents a WebGL2 data texture.\n */\nexport class GLDataTexture implements GLAbstractTexture {\n\n    gl?: WebGL2RenderingContext;\n    texture?: WebGLTexture | null;\n    textureWidth?: number;\n    textureHeight?: number;\n    textureData?: any;\n    #onDestroyed?: Function;\n\n    /**\n     * Constructs a new GLDataTexture.\n     * @param params\n     */\n    constructor(params: {\n        gl?: WebGL2RenderingContext,\n        texture?: WebGLTexture,\n        textureWidth?: number,\n        textureHeight?: number,\n        textureData?: any,\n        onDestroyed?: Function\n    }={}) {\n        this.gl = params.gl;\n        this.texture = params.texture;\n        this.textureWidth = params.textureWidth;\n        this.textureHeight = params.textureHeight;\n        this.textureData = params.textureData;\n        this.#onDestroyed = params.onDestroyed;\n    }\n\n    /**\n     * Binds this GLDataTexture to the given {@link GLSampler}.\n     * @param glProgram\n     * @param sampler\n     * @param unit\n     */\n    bindTexture(glProgram: GLProgram, sampler: GLSampler, unit: number) {\n        if (!this.gl) {\n            return;\n        }\n        sampler.bindTexture(this, unit);\n    }\n\n    /**\n     * Unbinds this GLDataTexture from whichever {@link GLSampler} it's currently bound to, if any.\n     * @param unit\n     */\n    bind(unit: number) : boolean{\n        if (!this.gl || !this.texture) {\n            return false;\n        }\n        // @ts-ignore\n        this.gl.activeTexture(this.gl[\"TEXTURE\" + unit]);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n        return true;\n    }\n\n    disableFiltering(): void {\n        if (!this.gl) {\n            return;\n        }\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    }\n\n    unbind(unit: number) {\n        if (!this.gl) {\n            return;\n        }\n        // This `unbind` method is ignored at the moment to allow avoiding to rebind same texture already bound to a texture unit.\n\n        // this.gl.activeTexture(this.state.gl[\"TEXTURE\" + unit]);\n        // this.gl.bindTexture(this.state.gl.TEXTURE_2D, null);\n    }\n\n    destroy() {\n        if (!this.gl || !this.texture) {\n            return;\n        }\n        this.gl.deleteTexture(this.texture);\n        this.texture = null;\n        if (this.#onDestroyed) {\n            this.#onDestroyed();\n        }\n    }\n}","/**\n * Represents a WebGL2 shader.\n */\nexport class GLShader {\n\n    /**\n     * Compilation errors, if any.\n     */\n    errors: string[];\n\n    /**\n     * True when this shader was successfully allocated.\n     */\n    allocated: boolean;\n\n    /**\n     * True when this shader was successfully compiled.\n     */\n    compiled: boolean;\n\n    /**\n     * Handle to GPU-resident WebGL2 shader.\n     */\n    handle: WebGLShader;\n\n    /**\n     * Creates a new shader.\n     * @param gl\n     * @param type\n     * @param source\n     */\n    constructor(gl: WebGL2RenderingContext, type: number, source: string) {\n        this.allocated = false;\n        this.compiled = false;\n        // @ts-ignore\n        this.handle = gl.createShader(type);\n        if (!this.handle) {\n            this.errors = [\n                \"Failed to allocate\"\n            ];\n            return;\n        }\n        this.allocated = true;\n        gl.shaderSource(this.handle, source);\n        gl.compileShader(this.handle);\n        this.compiled = gl.getShaderParameter(this.handle, gl.COMPILE_STATUS);\n        if (!this.compiled) {\n            if (!gl.isContextLost()) { // Handled explicitly elsewhere, so won't re-handle here\n                const lines = source.split(\"\\n\");\n                const numberedLines = [];\n                for (let i = 0; i < lines.length; i++) {\n                    numberedLines.push((i + 1) + \": \" + lines[i] + \"\\n\");\n                }\n                this.errors = [];\n                this.errors.push(\"\");\n                this.errors.push(gl.getShaderInfoLog(this.handle) || \"\");\n                this.errors = this.errors.concat(numberedLines.join(\"\"));\n            }\n        }\n    }\n\n    /**\n     * Destroys this shader.\n     */\n    destroy() {\n\n    }\n}","import type {GLAbstractTexture} from \"./GLAbstractTexture\";\n\n/**\n * Represents a WebGL2 sampler.\n */\nexport class GLSampler {\n\n    private readonly location: WebGLUniformLocation;\n    private readonly gl: WebGL2RenderingContext;\n\n    /**\n     * Creates a new sampler.\n     * @param gl\n     * @param location\n     */\n    constructor(gl: WebGL2RenderingContext, location: WebGLUniformLocation) {\n        this.gl = gl;\n        this.location = location;\n    }\n\n    /**\n     * Binds a texture to this sampler.\n     * @param texture\n     * @param unit\n     */\n    bindTexture(texture: GLAbstractTexture, unit: number) {\n        if (texture.bind(unit)) {\n            this.gl.uniform1i(this.location, unit);\n            return true;\n        }\n        return false;\n    }\n}\n","import {Map} from \"@xeokit/utils\";\n\nimport {GLShader} from \"./GLShader\";\nimport {GLSampler} from \"./GLSampler\";\nimport {GLAttribute} from \"./GLAttribute\";\nimport type {GLAbstractTexture} from \"./GLAbstractTexture\";\n\nconst ids = new Map({}, \"\");\n\n/**\n * Represents a WebGL2 program.\n */\nexport class GLProgram {\n\n    /**\n     * Unique ID of this program.\n     */\n    id: number;\n\n    /**\n     * The vertex shader.\n     */\n    vertexShader: GLShader;\n\n    /**\n     * The fragment shader.\n     */\n    fragmentShader: GLShader;\n\n    /**\n     * Map of all attributes in this program.\n     */\n    attributes: { [key: string]: GLAttribute };\n\n    /**\n     * Map of all samplers in this program.\n     */\n    samplers: { [key: string]: GLSampler };\n\n    /**\n     * Map of all uniforms in this program.\n     */\n    uniforms: { [key: string]: WebGLUniformLocation };\n\n    /**\n     * List of compilation errors for this program, if any.\n     */\n    errors: string[];\n\n    /**\n     * Flag set true when program has been validated.\n     */\n    validated: boolean;\n\n    /**\n     * Flag set true when this program has been successfully linked.\n     */\n    linked: boolean;\n\n    /**\n     * Flag set true when this program has been successfully conpiled.\n     */\n    compiled: boolean;\n\n    /**\n     * Flag set true when this program has been successfully allocated.\n     */\n    allocated: boolean;\n\n    /**\n     * The WebGL2 rendering context.\n     */\n    gl: WebGL2RenderingContext;\n\n    /**\n     * The source code from which the shaders are built.\n     */\n    source: any;\n\n    /**\n     * Handle to the WebGL program itself, which resides on the GPU.\n     */\n    handle: WebGLProgram;\n\n    /**\n     * Creates a new program.\n     * @param gl\n     * @param shaderSource\n     */\n    constructor(gl: WebGL2RenderingContext, shaderSource: any) {\n\n        // @ts-ignore\n        this.id = ids.addItem({});\n        this.source = shaderSource;\n        this.gl = gl;\n        this.allocated = false;\n        this.compiled = false;\n        this.linked = false;\n        this.validated = false;\n        this.errors = [];\n        this.uniforms = {};\n        this.samplers = {};\n        this.attributes = {};\n\n        this.vertexShader = new GLShader(gl, gl.VERTEX_SHADER, this.source.vertex);\n        this.fragmentShader = new GLShader(gl, gl.FRAGMENT_SHADER, this.source.fragment);\n\n        if (!this.vertexShader.allocated) {\n            this.errors = [\"Vertex shader failed to allocate\"].concat(this.vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        if (!this.fragmentShader.allocated) {\n            this.errors = [\"Fragment shader failed to allocate\"].concat(this.fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        this.allocated = true;\n\n        if (!this.vertexShader.compiled) {\n            this.errors = [\"Vertex shader failed to compile\"].concat(this.vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        if (!this.fragmentShader.compiled) {\n            this.errors = [\"Fragment shader failed to compile\"].concat(this.fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        this.compiled = true;\n        // @ts-ignore\n        this.handle = gl.createProgram();\n\n        if (!this.handle) {\n            this.errors = [\"Failed to allocate program\"];\n            return;\n        }\n\n        gl.attachShader(this.handle, this.vertexShader.handle);\n        gl.attachShader(this.handle, this.fragmentShader.handle);\n        gl.linkProgram(this.handle);\n\n        this.linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n\n        // HACK: Disable validation temporarily: https://github.com/xeolabs/xeokit-sdk/issues/5\n        // Perhaps we should defer validation until render-time, when the program has values set for all inputs?\n\n        this.validated = true;\n\n        if (!this.linked || !this.validated) {\n            this.errors = [];\n            this.errors.push(\"\");\n            // @ts-ignore\n            this.errors.push(gl.getProgramInfoLog(this.handle));\n            this.errors.push(\"\\nVertex shader:\\n\");\n            this.errors = this.errors.concat(this.source.vertex);\n            this.errors.push(\"\\nFragment shader:\\n\");\n            this.errors = this.errors.concat(this.source.fragment);\n            logErrors(this.errors);\n            return;\n        }\n\n        const numUniforms = gl.getProgramParameter(this.handle, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < numUniforms; ++i) {\n            const u = gl.getActiveUniform(this.handle, i);\n            if (u) {\n                let uName = u.name;\n                if (uName[uName.length - 1] === \"\\u0000\") {\n                    uName = uName.substr(0, uName.length - 1);\n                }\n                const location = gl.getUniformLocation(this.handle, uName);\n                if ((u.type === gl.SAMPLER_2D) || (u.type === gl.SAMPLER_CUBE) || (u.type === 35682)) {\n                    // @ts-ignore\n                    this.samplers[uName] = new GLSampler(gl, location);\n                } else {\n                    // @ts-ignore\n                    this.uniforms[uName] = location;\n                }\n            }\n        }\n\n        const numAttribs = gl.getProgramParameter(this.handle, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < numAttribs; i++) {\n            const a = gl.getActiveAttrib(this.handle, i);\n            if (a) {\n                const location = gl.getAttribLocation(this.handle, a.name);\n                this.attributes[a.name] = new GLAttribute(gl, location);\n            }\n        }\n\n        this.allocated = true;\n    }\n\n    /**\n     * Binds this program.\n     */\n    bind() {\n        if (!this.allocated) {\n            return;\n        }\n        this.gl.useProgram(this.handle);\n    }\n\n    /**\n     * Gets the location of the given uniform within this program.\n     * @param name\n     */\n    getLocation(name: string): WebGLUniformLocation {\n        return this.uniforms[name];\n    }\n\n    /**\n     * Gets an attribute within this program.\n     * @param name\n     */\n    getAttribute(name: string): GLAttribute {\n        return this.attributes[name];\n    }\n\n    /**\n     * Gets a sampler within this program.\n     * @param name\n     */\n    getSampler(name: string): GLSampler {\n        return this.samplers[name];\n    }\n\n    /**\n     * Binds a texture to this program.\n     * @param name\n     * @param texture\n     * @param unit\n     */\n    bindTexture(name: string, texture: GLAbstractTexture, unit: number): boolean {\n        if (!this.allocated) {\n            return false;\n        }\n        const sampler = this.samplers[name];\n        if (sampler) {\n            return sampler.bindTexture(texture, unit);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Destroys this program.\n     */\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        ids.removeItem(this.id);\n        this.gl.deleteProgram(this.handle);\n        this.gl.deleteShader(this.vertexShader.handle);\n        this.gl.deleteShader(this.fragmentShader.handle);\n        this.attributes = {};\n        this.uniforms = {};\n        this.samplers = {};\n        this.allocated = false;\n    }\n}\n\nfunction joinSansComments(srcLines: string[]) {\n    const src = [];\n    let line;\n    ``\n    for (let i = 0, len = srcLines.length; i < len; i++) {\n        line = srcLines[i];\n        const n = line.indexOf(\"/\");\n        if (n > 0) {\n            if (line.charAt(n + 1) === \"/\") {\n                line = line.substring(0, n);\n            }\n        }\n        src.push(line);\n    }\n    return src.join(\"\\n\");\n}\n\nfunction logErrors(errors: string[]) {\n    console.error(errors.join(\"\\n\"));\n}\n","/**\n * Gets a WebGL2 extension.\n * @param gl\n * @param name\n */\nexport function getExtension(gl: WebGL2RenderingContext, name: string) {\n    // @ts-ignore\n    if (gl._cachedExtensions === undefined) {\n        // @ts-ignore\n        gl._cachedExtensions = {};\n    }\n    // @ts-ignore\n    if (gl._cachedExtensions[name] !== undefined) {\n        // @ts-ignore\n        return gl._cachedExtensions[name];\n    }\n    let extension;\n    switch (name) {\n        case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n        case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n        case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n        case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n        default:\n            extension = gl.getExtension(name);\n    }\n    // @ts-ignore\n    gl._cachedExtensions[name] = extension;\n    return extension;\n}","import {\n    AlphaFormat,\n    ByteType,\n    ClampToEdgeWrapping,\n    DepthFormat,\n    DepthStencilFormat,\n    FloatType,\n    HalfFloatType,\n    IntType,\n    LinearFilter,\n    LinearMipMapLinearFilter,\n    LinearMipMapNearestFilter,\n    LuminanceAlphaFormat,\n    LuminanceFormat,\n    NearestFilter,\n    NearestMipMapLinearFilter,\n    NearestMipMapNearestFilter,\n    RedFormat,\n    RedIntegerFormat,\n    RepeatWrapping,\n    RGB_ETC1_Format,\n    RGB_ETC2_Format,\n    RGB_PVRTC_2BPPV1_Format,\n    RGB_PVRTC_4BPPV1_Format,\n    RGB_S3TC_DXT1_Format,\n    RGBA_ASTC_10x10_Format,\n    RGBA_ASTC_10x5_Format,\n    RGBA_ASTC_10x6_Format,\n    RGBA_ASTC_10x8_Format,\n    RGBA_ASTC_12x10_Format,\n    RGBA_ASTC_12x12_Format,\n    RGBA_ASTC_4x4_Format,\n    RGBA_ASTC_5x4_Format,\n    RGBA_ASTC_5x5_Format,\n    RGBA_ASTC_6x5_Format,\n    RGBA_ASTC_6x6_Format,\n    RGBA_ASTC_8x5_Format,\n    RGBA_ASTC_8x6_Format,\n    RGBA_ASTC_8x8_Format,\n    RGBA_BPTC_Format,\n    RGBA_ETC2_EAC_Format,\n    RGBA_PVRTC_2BPPV1_Format,\n    RGBA_PVRTC_4BPPV1_Format,\n    RGBA_S3TC_DXT1_Format,\n    RGBA_S3TC_DXT3_Format,\n    RGBA_S3TC_DXT5_Format,\n    RGBAFormat,\n    RGBAIntegerFormat,\n    RGBFormat,\n    RGFormat,\n    RGIntegerFormat,\n    ShortType,\n    sRGBEncoding,\n    UnsignedByteType,\n    UnsignedInt248Type,\n    UnsignedIntType,\n    UnsignedShort4444Type,\n    UnsignedShort5551Type,\n    UnsignedShortType\n} from \"@xeokit/constants\";\n\nimport {getExtension} from \"./getExtension\";\n\n/**\n * Converts a xeokit SDK constant to its eauivalent WebGL2 constant/enumeration value.\n *\n * @param gl\n * @param constantVal\n * @param encoding\n */\nexport function convertConstant(gl: WebGL2RenderingContext, constantVal: number, encoding?: number) {\n\n    let extension;\n    const p = constantVal;\n\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n        return gl.HALF_FLOAT;\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === RedFormat) return gl.RED;\n\n    if (p === RGBFormat) {\n        return gl.RGBA;\n    }\n\n    // WebGL formats.\n\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n    // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        if (encoding === sRGBEncoding) {\n            const extension = getExtension(gl, 'WEBGL_compressed_texture_s3tc_srgb');\n            if (extension !== null) {\n                if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n                if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n            } else {\n                return null;\n            }\n        } else {\n            extension = getExtension(gl, 'WEBGL_compressed_texture_s3tc');\n            if (extension !== null) {\n                if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    // PVRTC\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_pvrtc');\n        if (extension !== null) {\n            if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n            if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n            if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n            if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        } else {\n            return null;\n        }\n    }\n\n    // ETC1\n\n    if (p === RGB_ETC1_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_etc1');\n        if (extension !== null) {\n            return extension.COMPRESSED_RGB_ETC1_WEBGL;\n        } else {\n            return null;\n        }\n    }\n\n    // ETC2\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_etc');\n        if (extension !== null) {\n            if (p === RGB_ETC2_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n            if (p === RGBA_ETC2_EAC_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n        } else {\n            return null;\n        }\n    }\n\n    // ASTC\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n        p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n        p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n        p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n        p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_astc');\n        if (extension !== null) {\n            if (p === RGBA_ASTC_4x4_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n            if (p === RGBA_ASTC_5x4_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n            if (p === RGBA_ASTC_5x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n            if (p === RGBA_ASTC_6x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n            if (p === RGBA_ASTC_6x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n            if (p === RGBA_ASTC_8x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n            if (p === RGBA_ASTC_8x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n            if (p === RGBA_ASTC_8x8_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n            if (p === RGBA_ASTC_10x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n            if (p === RGBA_ASTC_10x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n            if (p === RGBA_ASTC_10x8_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n            if (p === RGBA_ASTC_10x10_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n            if (p === RGBA_ASTC_12x10_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n            if (p === RGBA_ASTC_12x12_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n        } else {\n            return null;\n        }\n    }\n\n    // BPTC\n\n    if (p === RGBA_BPTC_Format) {\n        const extension = getExtension(gl, 'EXT_texture_compression_bptc');\n        if (extension !== null) {\n            if (p === RGBA_BPTC_Format) {\n                return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    //\n\n    if (p === UnsignedInt248Type) {\n        return gl.UNSIGNED_INT_24_8;\n    }\n    if (p === RepeatWrapping) {\n        return gl.REPEAT;\n    }\n    if (p === ClampToEdgeWrapping) {\n        return gl.CLAMP_TO_EDGE;\n    }\n    if (p === NearestMipMapNearestFilter) {\n        return gl.NEAREST_MIPMAP_LINEAR;\n    }\n    if (p === NearestMipMapLinearFilter) {\n        return gl.NEAREST_MIPMAP_LINEAR;\n    }\n    if (p === LinearMipMapNearestFilter) {\n        return gl.LINEAR_MIPMAP_NEAREST;\n    }\n    if (p === LinearMipMapLinearFilter) {\n        return gl.LINEAR_MIPMAP_LINEAR;\n    }\n    if (p === NearestFilter) {\n        return gl.NEAREST;\n    }\n    if (p === LinearFilter) {\n        return gl.LINEAR;\n    }\n\n    return null;\n}\n\n","/**\n * Canvas2Image v0.1\n * Copyright (c) 2008 Jacob Seidelin, cupboy@gmail.com\n * MIT License [http://www.opensource.org/licenses/mit-license.php]\n *\n * Modified by @xeolabs to permit vertical flipping, so that snapshot can be taken from WebGL frame buffers,\n * which vertically flip image data as part of the way that WebGL renders textures.\n */\nexport const Canvas2Image = (function () {\n    // check if we have canvas support\n    const oCanvas = document.createElement(\"canvas\"), sc = String.fromCharCode, strDownloadMime = \"image/octet-stream\",\n        bReplaceDownloadMime = false;\n\n    // no canvas, bail out.\n    if (!oCanvas.getContext) {\n        return {\n            saveAsBMP: function () {\n            },\n            saveAsPNG: function () {\n            },\n            saveAsJPEG: function () {\n            }\n        }\n    }\n\n    // @ts-ignore\n    const bHasImageData = !!(oCanvas.getContext(\"2d\").getImageData), bHasDataURL = !!(oCanvas.toDataURL),\n        bHasBase64 = !!(window.btoa);\n\n    // ok, we're good\n    const readCanvasData = function (oCanvas: HTMLCanvasElement) {\n        // @ts-ignore\n        const iWidth = parseInt(oCanvas.width), iHeight = parseInt(oCanvas.height);\n        // @ts-ignore\n        return oCanvas.getContext(\"2d\").getImageData(0, 0, iWidth, iHeight);\n    };\n\n    // base64 encodes either a string or an array of charcodes\n    const encodeData = function (data: any) {\n        let i: any, aData: any, strData: any = \"\";\n        if (typeof data == \"string\") {\n            strData = data;\n        } else {\n            aData = data;\n            for (i = 0; i < aData.length; i++) {\n                strData += sc(aData[i]);\n            }\n        }\n        return btoa(strData);\n    };\n\n    // creates a base64 encoded string containing BMP data takes an imagedata object as argument\n    const createBMP = function (oData: ImageData) {\n        let strHeader = '';\n        const iWidth = oData.width;\n        const iHeight = oData.height;\n\n        strHeader += 'BM';\n\n        let iFileSize = iWidth * iHeight * 4 + 54; // total header size = 54 bytes\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n\n        strHeader += sc(0, 0, 0, 0, 54, 0, 0, 0); // data offset\n        strHeader += sc(40, 0, 0, 0); // info header size\n\n        let iImageWidth = iWidth;\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n\n        let iImageHeight = iHeight;\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n\n        strHeader += sc(1, 0, 32, 0); // num of planes & num of bits per pixel\n        strHeader += sc(0, 0, 0, 0); // compression = none\n\n        let iDataSize = iWidth * iHeight * 4;\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n\n        strHeader += sc(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); // these bytes are not used\n\n        const aImgData = oData.data;\n        let strPixelData = \"\";\n        let c;\n        let x;\n        let y = iHeight;\n        let iOffsetX;\n        let iOffsetY;\n        let strPixelRow;\n\n        do {\n            iOffsetY = iWidth * (y - 1) * 4;\n            strPixelRow = \"\";\n            for (x = 0; x < iWidth; x++) {\n                iOffsetX = 4 * x;\n                strPixelRow += sc(\n                    aImgData[iOffsetY + iOffsetX + 2], // B\n                    aImgData[iOffsetY + iOffsetX + 1], // G\n                    aImgData[iOffsetY + iOffsetX],     // R\n                    aImgData[iOffsetY + iOffsetX + 3]  // A\n                );\n            }\n            strPixelData += strPixelRow;\n        } while (--y);\n\n        return encodeData(strHeader + strPixelData);\n    };\n\n    // sends the generated file to the client\n    const saveFile = function (strData: string) {\n        if (!window.open(strData)) {\n            document.location.href = strData;\n        }\n    };\n\n    const makeDataURI = function (strData: string, strMime: string) {\n        return \"data:\" + strMime + \";base64,\" + strData;\n    };\n\n    // generates a <img> object containing the imagedata\n    const makeImageObject = function (strSource: any) {\n        const oImgElement = document.createElement(\"img\");\n        oImgElement.src = strSource;\n        return oImgElement;\n    };\n\n    const scaleCanvas = function (oCanvas: HTMLCanvasElement, iWidth: number, iHeight: number, flipy: boolean) {\n        if (iWidth && iHeight) {\n            const oSaveCanvas = document.createElement(\"canvas\");\n            oSaveCanvas.width = iWidth;\n            oSaveCanvas.height = iHeight;\n            oSaveCanvas.style.width = iWidth + \"px\";\n            oSaveCanvas.style.height = iHeight + \"px\";\n            const oSaveCtx = oSaveCanvas.getContext(\"2d\");\n            if (flipy) {\n                // @ts-ignore\n                oSaveCtx.save();\n                // @ts-ignore\n                oSaveCtx.scale(1.0, -1.0);\n                // @ts-ignore\n                oSaveCtx.imageSmoothingEnabled = true;\n                // @ts-ignore\n                oSaveCtx.drawImage(oCanvas, 0, 0, oCanvas.width, oCanvas.height, 0, 0, iWidth, -iHeight);\n                // @ts-ignore\n                oSaveCtx.restore();\n            } else {\n                // @ts-ignore\n                oSaveCtx.imageSmoothingEnabled = true;\n                // @ts-ignore\n                oSaveCtx.drawImage(oCanvas, 0, 0, oCanvas.width, oCanvas.height, 0, 0, iWidth, iHeight);\n            }\n            return oSaveCanvas;\n        }\n        return oCanvas;\n    };\n\n    return {\n        saveAsPNG: function (oCanvas: HTMLCanvasElement, bReturnImg: boolean, iWidth: number, iHeight: number, flipy: boolean): boolean | HTMLImageElement {\n            if (!bHasDataURL) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/png\";\n            const strData = oScaledCanvas.toDataURL(strMime);\n            if (bReturnImg) {\n                return makeImageObject(strData);\n            } else {\n                saveFile(bReplaceDownloadMime ? strData.replace(strMime, strDownloadMime) : strData);\n            }\n            return true;\n        },\n\n        saveAsJPEG: function (oCanvas: HTMLCanvasElement, bReturnImg: boolean, iWidth: number, iHeight: number, flipy: boolean): boolean | HTMLImageElement {\n            if (!bHasDataURL) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/jpeg\";\n            const strData = oScaledCanvas.toDataURL(strMime);\n            // check if browser actually supports jpeg by looking for the mime type in the data uri. if not, return false\n            if (strData.indexOf(strMime) != 5) return false;\n            if (bReturnImg) {\n                return makeImageObject(strData);\n            } else {\n                saveFile(bReplaceDownloadMime ? strData.replace(strMime, strDownloadMime) : strData);\n            }\n            return true;\n        },\n\n        saveAsBMP: function (oCanvas: HTMLCanvasElement, bReturnImg: boolean, iWidth: number, iHeight: number, flipy: boolean): boolean | HTMLImageElement {\n            if (!(bHasDataURL && bHasImageData && bHasBase64)) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/bmp\";\n            const oData = readCanvasData(oScaledCanvas), strImgData = createBMP(oData);\n            if (bReturnImg) {\n                return makeImageObject(makeDataURI(strImgData, strMime));\n            } else {\n                saveFile(makeDataURI(strImgData, strMime));\n            }\n            return true;\n        }\n    };\n})();\n","import type * as math from '@xeokit/math';\nimport {\n    NearestFilter,\n    NearestMipmapLinearFilter, NearestMipmapNearestFilter,\n    RepeatWrapping,\n    RGBAFormat, sRGBEncoding,\n    UnsignedByteType\n} from \"@xeokit/constants\";\n\nimport {isArray} from \"@xeokit/utils\";\n\nimport {convertConstant} from \"./convertConstant\";\nimport {getExtension} from \"./getExtension\";\nimport type {GLAbstractTexture} from \"./GLAbstractTexture\";\nimport type {TextureCompressedParams} from \"@xeokit/core\";\n\nconst color = new Uint8Array([0, 0, 0, 1]);\n\n/**\n * Represents a WebGL2 texture.\n */\nexport class GLTexture implements GLAbstractTexture {\n\n    private gl: WebGL2RenderingContext;\n    private target: number;\n    private format: number;\n    private type: number;\n    private internalFormat: number;\n    private premultiplyAlpha: boolean;\n    private flipY: boolean;\n    private unpackAlignment: number;\n    private wrapS: number;\n    private wrapT: number;\n    private wrapR: number;\n    private texture: WebGLTexture;\n    private allocated: boolean;\n    private minFilter: number;\n    private magFilter: number;\n    private encoding: number;\n\n    constructor(params: {\n        gl: WebGL2RenderingContext,\n        target?: number,\n        format?: number,\n        type?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number,\n        preloadColor?: math.FloatArrayParam,\n        premultiplyAlpha?: boolean,\n        flipY?: boolean\n    }) {\n\n        this.gl = params.gl;\n\n        this.target = params.target || params.gl.TEXTURE_2D;\n        this.format = params.format || RGBAFormat;\n        this.type = params.type || UnsignedByteType;\n        this.internalFormat = -1;\n        this.premultiplyAlpha = !!params.premultiplyAlpha;\n        this.flipY = !!params.flipY;\n        this.unpackAlignment = 4;\n        this.wrapS = params.wrapS || RepeatWrapping;\n        this.wrapT = params.wrapT || RepeatWrapping;\n        this.wrapR = params.wrapR || RepeatWrapping;\n\n        // @ts-ignore\n        this.texture = params.gl.createTexture();\n\n        if (params.preloadColor) {\n            this.setPreloadColor(params.preloadColor); // Prevents \"there is no texture bound to the unit 0\" error\n        }\n\n        this.allocated = true;\n    }\n\n    setPreloadColor(value: math.FloatArrayParam) {\n        if (!value) {\n            color[0] = 0;\n            color[1] = 0;\n            color[2] = 0;\n            color[3] = 255;\n        } else {\n            color[0] = Math.floor(value[0] * 255);\n            color[1] = Math.floor(value[1] * 255);\n            color[2] = Math.floor(value[2] * 255);\n            color[3] = Math.floor((value[3] !== undefined ? value[3] : 1) * 255);\n        }\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n            const faces = [\n                gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n            ];\n            for (let i = 0, len = faces.length; i < len; i++) {\n                gl.texImage2D(faces[i], 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n            }\n        } else {\n            gl.texImage2D(this.target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n        }\n        gl.bindTexture(this.target, null);\n    }\n\n    setTarget(target: number) {\n        this.target = target || this.gl.TEXTURE_2D;\n    }\n\n    setImage(image: HTMLImageElement, props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment?: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }={}) {\n\n        const gl = this.gl;\n\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.flipY !== undefined) {\n            this.flipY = props.flipY;\n        }\n        if (props.premultiplyAlpha !== undefined) {\n            this.premultiplyAlpha = props.premultiplyAlpha;\n        }\n        if (props.unpackAlignment !== undefined) {\n            this.unpackAlignment = props.unpackAlignment;\n        }\n        if (props.minFilter !== undefined) {\n            this.minFilter = props.minFilter;\n        }\n        if (props.magFilter !== undefined) {\n            this.magFilter = props.magFilter;\n        }\n        if (props.wrapS !== undefined) {\n            this.wrapS = props.wrapS;\n        }\n        if (props.wrapT !== undefined) {\n            this.wrapT = props.wrapT;\n        }\n        if (props.wrapR !== undefined) {\n            this.wrapR = props.wrapR;\n        }\n\n        let generateMipMap = false;\n\n        gl.bindTexture(this.target, this.texture);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        const minFilter = convertConstant(gl, this.minFilter);\n        gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);\n\n        if (minFilter === gl.NEAREST_MIPMAP_NEAREST\n            || minFilter === gl.LINEAR_MIPMAP_NEAREST\n            || minFilter === gl.NEAREST_MIPMAP_LINEAR\n            || minFilter === gl.LINEAR_MIPMAP_LINEAR) {\n            generateMipMap = true;\n        }\n\n        const magFilter = convertConstant(gl, this.magFilter);\n        if (magFilter) {\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);\n        }\n\n        const wrapS = convertConstant(gl, this.wrapS);\n        if (wrapS) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n        }\n\n        const wrapT = convertConstant(gl, this.wrapT);\n        if (wrapT) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n        }\n\n        const glFormat = convertConstant(gl, this.format, this.encoding);\n        const glType = convertConstant(gl, this.type);\n        const glInternalFormat = getInternalFormat(gl, this.internalFormat, glFormat, glType, this.encoding, false);\n\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n            if (isArray(image)) {\n                const images = image;\n                const faces = [\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n                ];\n                for (let i = 0, len = faces.length; i < len; i++) {\n                    // @ts-ignore\n                    gl.texImage2D(faces[i], 0, glInternalFormat, glFormat, glType, images[i]);\n                }\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n        }\n\n        // if (generateMipMap) {\n        //     gl.generateMipmap(this.target);\n        // }\n\n        gl.bindTexture(this.target, null);\n    }\n\n    setCompressedData(params: TextureCompressedParams) {\n\n        const gl = this.gl;\n        const mipmaps = params.mipmaps || [];\n        const levels = mipmaps.length;\n        const props = params.props;\n\n        // Cache props\n\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.flipY !== undefined) {\n            this.flipY = props.flipY;\n        }\n        if (props.premultiplyAlpha !== undefined) {\n            this.premultiplyAlpha = props.premultiplyAlpha;\n        }\n        if (props.unpackAlignment !== undefined) {\n            this.unpackAlignment = props.unpackAlignment;\n        }\n        if (props.minFilter !== undefined) {\n            this.minFilter = props.minFilter;\n        }\n        if (props.magFilter !== undefined) {\n            this.magFilter = props.magFilter;\n        }\n        if (props.wrapS !== undefined) {\n            this.wrapS = props.wrapS;\n        }\n        if (props.wrapT !== undefined) {\n            this.wrapT = props.wrapT;\n        }\n        if (props.wrapR !== undefined) {\n            this.wrapR = props.wrapR;\n        }\n\n        gl.activeTexture(gl.TEXTURE0 + 0);\n        gl.bindTexture(this.target, this.texture);\n\n        let supportsMips = mipmaps.length > 1;\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        const wrapS = convertConstant(gl, this.wrapS);\n        if (wrapS) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n        }\n\n        const wrapT = convertConstant(gl, this.wrapT);\n        if (wrapT) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n        }\n\n        // @ts-ignore\n        if (this.type === gl.TEXTURE_3D || this.type === gl.TEXTURE_2D_ARRAY) {\n            const wrapR = convertConstant(gl, this.wrapR);\n            if (wrapR) {\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_R, wrapR);\n            }\n            gl.texParameteri(this.type, gl.TEXTURE_WRAP_R, wrapR);\n        }\n\n        if (supportsMips) {\n            gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, filterFallback(gl, this.minFilter));\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, filterFallback(gl, this.magFilter));\n\n        } else {\n            gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, convertConstant(gl, this.minFilter));\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, convertConstant(gl, this.magFilter));\n        }\n\n        const glFormat = convertConstant(gl, this.format, this.encoding);\n        const glType = convertConstant(gl, this.type);\n        const glInternalFormat = getInternalFormat(gl, this.internalFormat, glFormat, glType, this.encoding, false);\n\n        gl.texStorage2D(gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n\n        for (let i = 0, len = mipmaps.length; i < len; i++) {\n\n            const mipmap = mipmaps[i];\n\n            if (this.format !== RGBAFormat) {\n                if (glFormat !== null) {\n                    gl.compressedTexSubImage2D(gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n                } else {\n                    console.warn('Attempt to load unsupported compressed texture format in .setCompressedData()');\n                }\n            } else {\n                gl.texSubImage2D(gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n            }\n        }\n\n        gl.bindTexture(this.target, null);\n    }\n\n    setProps(props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }) {\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        this._uploadProps(props);\n        gl.bindTexture(this.target, null);\n    }\n\n    _uploadProps(props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }) {\n        const gl = this.gl;\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.minFilter !== undefined) {\n            const minFilter = convertConstant(gl, props.minFilter);\n            if (minFilter) {\n                this.minFilter = props.minFilter;\n                gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);\n                if (minFilter === gl.NEAREST_MIPMAP_NEAREST || minFilter === gl.LINEAR_MIPMAP_NEAREST || minFilter === gl.NEAREST_MIPMAP_LINEAR || minFilter === gl.LINEAR_MIPMAP_LINEAR) {\n                    gl.generateMipmap(this.target);\n                }\n            }\n        }\n        if (props.magFilter !== undefined) {\n            const magFilter = convertConstant(gl, props.magFilter);\n            if (magFilter) {\n                this.magFilter = props.magFilter;\n                gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);\n            }\n        }\n        if (props.wrapS !== undefined) {\n            const wrapS = convertConstant(gl, props.wrapS);\n            if (wrapS) {\n                this.wrapS = props.wrapS;\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n            }\n        }\n        if (props.wrapT !== undefined) {\n            const wrapT = convertConstant(gl, props.wrapT);\n            if (wrapT) {\n                this.wrapT = props.wrapT;\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n            }\n        }\n    }\n\n    bind(unit: number) :boolean{\n        if (!this.allocated) {\n            return false;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            // @ts-ignore\n            gl.activeTexture(gl[`TEXTURE${unit}`]);\n            gl.bindTexture(this.target, this.texture);\n            return true;\n        }\n        return false;\n    }\n\n    unbind(unit: number) {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            // @ts-ignore\n            gl.activeTexture(gl[`TEXTURE${unit}`]);\n            gl.bindTexture(this.target, null);\n        }\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            // @ts-ignore\n            this.texture = null;\n        }\n    }\n}\n\nfunction getInternalFormat(\n    gl: WebGL2RenderingContext,\n    internalFormatName: string | number,\n    glFormat: any,\n    glType: any,\n    encoding: number,\n    isVideoTexture = false): number {\n    if (internalFormatName !== null) {\n        // @ts-ignore\n        if (gl[internalFormatName] !== undefined) {\n            // @ts-ignore\n            return gl[internalFormatName];\n        }\n        console.warn('Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n    }\n    let internalFormat = glFormat;\n    if (glFormat === gl.RED) {\n        if (glType === gl.FLOAT) internalFormat = gl.R32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.R16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = gl.R8;\n    }\n    if (glFormat === gl.RG) {\n        if (glType === gl.FLOAT) internalFormat = gl.RG32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.RG16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = gl.RG8;\n    }\n    if (glFormat === gl.RGBA) {\n        if (glType === gl.FLOAT) internalFormat = gl.RGBA32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.RGBA16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = (encoding === sRGBEncoding && isVideoTexture === false) ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n        if (glType === gl.UNSIGNED_SHORT_4_4_4_4) internalFormat = gl.RGBA4;\n        if (glType === gl.UNSIGNED_SHORT_5_5_5_1) internalFormat = gl.RGB5_A1;\n    }\n    if (internalFormat === gl.R16F || internalFormat === gl.R32F ||\n        internalFormat === gl.RG16F || internalFormat === gl.RG32F ||\n        internalFormat === gl.RGBA16F || internalFormat === gl.RGBA32F) {\n        getExtension(gl, 'EXT_color_buffer_float');\n    }\n    return internalFormat;\n}\n\nfunction filterFallback(gl: WebGL2RenderingContext, f: number): number {\n    if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n        return gl.NEAREST;\n    }\n    return gl.LINEAR;\n\n}","/**\n * Information about WebGL2 support on the client machine.\n */\nconst WEBGL_INFO: {\n    [key: string]: any\n} = {\n    WEBGL: false,\n    SUPPORTED_EXTENSIONS: {}\n};\n\nconst canvas = document.createElement(\"canvas\");\n\nif (canvas) {\n\n    // @ts-ignore\n    const gl: WebGL2RenderingContext = canvas.getContext(\"webgl2\", {antialias: true});\n\n    WEBGL_INFO.WEBGL = !!gl;\n\n    if (WEBGL_INFO.WEBGL) {\n        // @ts-ignore\n        WEBGL_INFO.ANTIALIAS = gl.getContextAttributes().antialias;\n        if (gl.getShaderPrecisionFormat) {\n            // @ts-ignore\n            if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"highp\";\n            } else { // @ts-ignore\n                if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n                                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n                            } else {\n                                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"lowp\";\n                            }\n            }\n        } else {\n            WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n        }\n        WEBGL_INFO.DEPTH_BUFFER_BITS = gl.getParameter(gl.DEPTH_BITS);\n        WEBGL_INFO.MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_CUBE_MAP_SIZE = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_RENDERBUFFER_SIZE = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n        WEBGL_INFO.MAX_TEXTURE_UNITS = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_VERTEX_ATTRIBS = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n        WEBGL_INFO.MAX_VERTEX_UNIFORM_VECTORS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_FRAGMENT_UNIFORM_VECTORS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_VARYING_VECTORS = gl.getParameter(gl.MAX_VARYING_VECTORS);\n        // @ts-ignore\n        gl.getSupportedExtensions().forEach(function (ext: any) {\n            WEBGL_INFO.SUPPORTED_EXTENSIONS[ext] = true;\n        });\n        WEBGL_INFO.depthTexturesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"];\n    }\n}\n\nexport {WEBGL_INFO};","import type {View, Viewer} from \"@xeokit/viewer\";\nimport {GLAbstractTexture, GLDataTexture, WEBGL_INFO} from \"@xeokit/webglutils\";\n\n\n\n/**\n * Provides rendering context within a WebGLRenderer.\n */\nexport class RenderContext {\n\n    /**\n     * The Viewer.\n     */\n    public viewer: Viewer;\n\n    /**\n     * The View we are rendering.\n     */\n    public view: View;\n\n    /**\n     * The WebGL rendering context.\n     */\n    public gl: WebGL2RenderingContext;\n\n    public viewMatrixDataTexture: GLDataTexture;\n\n    /**\n     * Whether to render a quality representation for triangle surfaces.\n     *\n     * When ````false````, we'll render them with a fast vertex-shaded Gouraud-shaded representation, which\n     * is great for zillions of objects.\n     *\n     * When ````true````, we'll render them at a better visual quality, using smooth, per-fragment shading\n     * and a more realistic lighting model.\n     */\n    public pbrEnabled: boolean;\n\n    /**\n     * Whether SAO is currently enabled during the current frame.\n     */\n    public withSAO: boolean;\n\n    /**\n     * Whether backfaces are currently enabled during the current frame.\n     */\n    public backfaces: boolean;\n\n    /**\n     * The vertex winding order for what we currently consider to be a backface during current\n     * frame: true == \"cw\", false == \"ccw\".\n     */\n    public frontface: boolean;\n\n    /**\n     * The next available texture unit to bind a {@link GLAbstractTexture} to.\n     */\n    public textureUnit: number;\n\n    /**\n     * Statistic that counts how many times ````gl.bindTexture()```` has been called so far within the current frame.\n     */\n    public bindTexture: number;\n\n    /**\n     * Indicates which pass the renderer is currently rendering.\n     */\n    public renderPass: number;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering castsShadows.\n     *\n     * This sets the viewpoint to look from the point of view of each {@link DirLight}\n     * or {@link PointLight} that casts a shadow.\n     */\n    public shadowViewMatrix: any;\n\n    /**\n     * The 4x4 viewing projection matrix the renderer is currently using when rendering shadows.\n     */\n    public shadowProjMatrix: any;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering a ray-pick.\n     *\n     * This sets the viewpoint to look along the ray given to {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}}\n     * when picking with a ray.\n     */\n    public pickViewMatrix: any;\n\n    /**\n     * The 4x4 orthographic projection transform matrix the renderer is currently using when rendering a ray-pick.\n     */\n    public pickProjMatrix: any;\n\n    /**\n     * Distance to the near clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZNear: number;\n\n    /**\n     * Distance to the far clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZFar: number;\n\n    /**\n     * Whether or not the renderer is currently picking invisible objects.\n     */\n    public pickInvisible: boolean;\n\n    /** The current line width.\n     */\n    public lineWidth: number;\n\n    /**\n     * ID of the last {@link WebGLProgram} that was bound during the current frame.\n     */\n    public lastProgramId: number;\n\n    /**\n     * The occlusion rendering texture.\n     */\n    public occlusionTexture: GLAbstractTexture | null;\n\n    constructor(viewer: Viewer, view: View, gl: WebGL2RenderingContext) {\n        this.viewer = viewer;\n        this.view = view;\n        this.gl = gl;\n        this.reset();\n    }\n\n    /**\n     * Called by the renderer before each frame.\n     */\n    reset() {\n        this.lastProgramId = -1;\n        this.pbrEnabled = false;\n        this.withSAO = false;\n        this.backfaces = false;\n        this.frontface = true;\n        this.textureUnit = 0;\n        this.shadowViewMatrix = null;\n        this.shadowProjMatrix = null;\n        this.pickViewMatrix = null;\n        this.pickProjMatrix = null;\n        this.pickZNear = 0.01;\n        this.pickZFar = 5000;\n        this.pickInvisible = false;\n        this.lineWidth = 1;\n        this.occlusionTexture = null;\n    }\n\n    /**\n     * Gets the next available texture unit for this render\n     */\n    get nextTextureUnit() {\n        const textureUnit = this.textureUnit;\n        this.textureUnit = (this.textureUnit + 1) % WEBGL_INFO.MAX_TEXTURE_UNITS;\n        return textureUnit;\n    }\n}\n","\n/**\n * @private\n */\nexport const RENDER_PASSES = {\n\n    // Skipped - suppress rendering\n\n    NOT_RENDERED: 0,\n\n    // Normal rendering - mutually exclusive modes\n\n    COLOR_OPAQUE: 1,\n    COLOR_TRANSPARENT: 2,\n\n    // Emphasis silhouette rendering - mutually exclusive modes\n\n    SILHOUETTE_HIGHLIGHTED: 3,\n    SILHOUETTE_SELECTED: 4,\n    SILHOUETTE_XRAYED: 5,\n\n    // Edges rendering - mutually exclusive modes\n\n    EDGES_COLOR_OPAQUE: 6,\n    EDGES_COLOR_TRANSPARENT: 7,\n    EDGES_HIGHLIGHTED: 8,\n    EDGES_SELECTED: 9,\n    EDGES_XRAYED: 10,\n\n    // Picking\n\n    PICK: 11\n};\n\n","import {createVec4} from \"@xeokit/matrix\";\nimport {OrthoProjectionType} from \"@xeokit/constants\";\nimport {AmbientLight, DirLight, PerspectiveProjection, PointLight} from \"@xeokit/viewer\";\n\nimport type {RenderContext} from \"./RenderContext\";\nimport {RENDER_PASSES} from \"./RENDER_PASSES\";\nimport type {Layer} from \"./Layer\";\nimport {GLProgram, GLSampler} from \"@xeokit/webglutils\";\n\nconst tempVec4 = createVec4();\n\n/**\n * @private\n */\nexport abstract class LayerRenderer {\n\n    /**\n     * Initialization error messages\n     */\n    errors: string[] | undefined;\n\n    protected renderContext: RenderContext;\n\n    #hash: string;\n    #program: GLProgram | null;\n    #needRebuild: boolean;\n\n    #uniforms: {\n        renderPass: WebGLUniformLocation,\n        viewMatrix: WebGLUniformLocation,\n        projMatrix: WebGLUniformLocation,\n        worldMatrix: WebGLUniformLocation,\n        sectionPlanes: {\n            pos: WebGLUniformLocation,\n            dir: WebGLUniformLocation,\n            active: WebGLUniformLocation\n        }[];\n        lights: {\n            pos?: WebGLUniformLocation,\n            dir?: WebGLUniformLocation,\n            color: WebGLUniformLocation,\n            attenuation?: WebGLUniformLocation\n        }[];\n        pickInvisible: WebGLUniformLocation;\n        pickZFar: WebGLUniformLocation;\n        pickZNear: WebGLUniformLocation;\n        pointCloudIntensityRange: WebGLUniformLocation;\n        nearPlaneHeight: WebGLUniformLocation;\n        pointSize: WebGLUniformLocation;\n        gammaFactor: WebGLUniformLocation;\n        logDepthBufFC: WebGLUniformLocation;\n        sao: WebGLUniformLocation;\n        lightAmbient: WebGLUniformLocation;\n        color: WebGLUniformLocation;\n    }\n\n    #samplers: {\n        viewMatrices: GLSampler;\n        positions: GLSampler;\n        indices: GLSampler;\n        edgeIndices: GLSampler;\n        eachMeshMatrices: GLSampler;\n        eachMeshAttributes: GLSampler;\n        //    eachMeshOffsets: GLSampler;\n        eachEdgeOffset: GLSampler;\n        eachPrimitiveMesh: GLSampler;\n        eachEdgeMesh: GLSampler;\n        baseColorMap: GLSampler;\n        metallicRoughMap: GLSampler;\n        emissiveMap: GLSampler;\n        normalMap: GLSampler;\n        occlusionMap: GLSampler;\n    };\n\n    protected constructor(renderContext: RenderContext) {\n        this.renderContext = renderContext;\n        this.#needRebuild = true;\n        this.#build();\n    }\n\n    #build(): void {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n\n        this.#program = new GLProgram(gl, this.#buildShader());\n\n        if (this.#program.errors) {\n            this.errors = this.#program.errors;\n            return;\n        }\n\n        const program = this.#program;\n\n        this.#uniforms = {\n            renderPass: program.getLocation(\"renderPass\"),\n            viewMatrix: program.getLocation(\"viewMatrix\"),\n            projMatrix: program.getLocation(\"projMatrix\"),\n            worldMatrix: program.getLocation(\"worldMatrix\"),\n            sao: program.getLocation(\"sao\"),\n            logDepthBufFC: program.getLocation(\"logDepthBufFC\"),\n            gammaFactor: program.getLocation(\"gammaFactor\"),\n            pointSize: program.getLocation(\"pointSize\"),\n            nearPlaneHeight: program.getLocation(\"nearPlaneHeight\"),\n            pointCloudIntensityRange: program.getLocation(\"pointCloudIntensityRange\"),\n            pickZNear: program.getLocation(\"pickZNear\"),\n            pickZFar: program.getLocation(\"pickZFar\"),\n            pickInvisible: program.getLocation(\"pickInvisible\"),\n            color: program.getLocation(\"color\"),\n            lightAmbient: program.getLocation(\"lightAmbient\"),\n            lights: [],\n            sectionPlanes: []\n        };\n\n        const uniforms = this.#uniforms;\n\n        const lights = view.lightsList;\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light: any = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        dir: program.getLocation(\"lightDir\" + i)\n                    });\n                    break;\n                case \"point\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n                case \"spot\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        dir: program.getLocation(\"lightDir\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n            }\n        }\n\n        for (let i = 0, len = view.sectionPlanesList.length; i < len; i++) {\n            uniforms.sectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this.#samplers = {\n            viewMatrices: program.getSampler(\"viewMatrices\"),\n            positions: program.getSampler(\"positions\"),\n            indices: program.getSampler(\"indices\"),\n            edgeIndices: program.getSampler(\"edgeIndices\"),\n            eachMeshAttributes: program.getSampler(\"eachMeshAttributes\"),\n            eachMeshMatrices: program.getSampler(\"eachMeshMatrices\"),\n            eachEdgeOffset: program.getSampler(\"eachMeshOffset\"),\n            eachPrimitiveMesh: program.getSampler(\"eachMeshTriangleMesh\"),\n            eachEdgeMesh: program.getSampler(\"eachEdgeMesh\"),\n            baseColorMap: program.getSampler(\"baseColorMap\"),\n            metallicRoughMap: program.getSampler(\"metallicRoughMap\"),\n            emissiveMap: program.getSampler(\"emissiveMap\"),\n            normalMap: program.getSampler(\"normalMap\"),\n            occlusionMap: program.getSampler(\"occlusionMap\")\n        };\n\n        this.#hash = this.getHash();\n    }\n\n    #buildShader() {\n        return {\n            vertex: this.buildVertexShader(),\n            fragment: this.buildFragmentShader()\n        };\n    }\n\n    /**\n     * Generates vertex shader GLSL for the current View state\n     */\n    protected abstract buildVertexShader(): string;\n\n    /**\n     * Generates fragment shader GLSL for the current View state\n     */\n    protected abstract buildFragmentShader(): string;\n\n    /**\n     * Gets a hash for the View's current configuration as pertaining to the LayerRenderer.\n     */\n    protected abstract getHash(): string;\n\n    /**\n     * Indicates that the LayerRenderer may need to rebuild shaders\n     */\n    needRebuild() {\n        this.#needRebuild = true;\n    }\n\n    /**\n     * Gets if this LayerRenderer's configuration is still valid for the current View state.\n     */\n    #getValid() {\n        if (!this.#needRebuild) {\n            return true;\n        }\n        this.#needRebuild = false;\n        return this.#hash === this.getHash();\n    };\n\n    /**\n     * Draws the given Layer.\n     *\n     * @param layer The Layer to draw\n     */\n    draw(layer: Layer) {\n\n        if (this.#program && !this.#getValid()) {\n            this.#program.destroy();\n            this.#program = null;\n        }\n\n        if (!this.#program) {\n            this.#build();\n            if (this.errors) {\n                return;\n            }\n            this.renderContext.lastProgramId = -1;\n        }\n\n        const renderState = layer.renderState;\n        const program = this.#program;\n        const renderContext = this.renderContext;\n        const renderPass = renderContext.renderPass;\n        const gl = this.renderContext.gl;\n        const view = this.renderContext.view;\n        const uniforms = this.#uniforms;\n        const samplers = this.#samplers;\n\n        // @ts-ignore\n        if (renderContext.lastProgramId !== program.id) {\n            // @ts-ignore\n            renderContext.lastProgramId = program.id;\n            this.#bind();\n        }\n\n        if (uniforms.renderPass) {\n            gl.uniform1i(uniforms.renderPass, renderPass);\n        }\n\n        // if (uniforms.viewMatrix) {\n        //     //gl.uniformMatrix4fv(uniforms.viewMatrix, false, <Float32Array | GLfloat[]>layer.rtcViewMat.viewMatrix);\n        //     gl.uniformMatrix4fv(uniforms.viewMatrix, false, <Float32Array | GLfloat[]>view.camera.viewMatrix);\n        // }\n\n        if (uniforms.projMatrix) {\n            gl.uniformMatrix4fv(uniforms.projMatrix, false, <Float32Array | GLfloat[]>view.camera.projMatrix);\n        }\n\n        if (uniforms.worldMatrix) {\n            gl.uniformMatrix4fv(uniforms.worldMatrix, false, <Float32Array | GLfloat[]>layer.rendererModel.worldMatrix);\n        }\n\n        if (uniforms.color) {\n            if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n                const material = view.xrayMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n                const material = view.highlightMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n                const material = view.selectedMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else {\n                gl.uniform4fv(uniforms.color, new Float32Array([1, 1, 1]));\n            }\n        }\n\n        // if (view.sectionPlanesList.length) {\n        //     const numSectionPlanes = view.sectionPlanesList.length;\n        //     const origin = layer.renderState.origin;\n        //     const sectionPlanes = view.sectionPlanesList;\n        //     const baseIndex = layer.layerIndex * numSectionPlanes;\n        //     const drawFlags = rendererModel.drawFlags;\n        //     for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n        //         const sectionPlaneUniforms = this.#uniforms.sectionPlanes[sectionPlaneIndex];\n        //         if (sectionPlaneUniforms) {\n        //             const active = drawFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n        //             gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n        //             if (active) {\n        //                 const sectionPlane = sectionPlanes[sectionPlaneIndex];\n        //                 if (origin) {\n        //                     const rtcSectionPlanePos = rtc.getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, origin, tempVec3a);\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n        //                 } else {\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n        //                 }\n        //                 gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n        //             }\n        //         }\n        //     }\n        // }\n\n        if (samplers.viewMatrices) {\n            // @ts-ignore\n            renderState.dataTextureSet.viewMatrices.bindTexture(program, samplers.viewMatrices, renderContext.nextTextureUnit);\n        }\n        if (samplers.positions) {\n            // @ts-ignore\n            renderState.dataTextureSet.positions.bindTexture(program, samplers.positions, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshMatrices) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshMatrices.bindTexture(program, samplers.eachMeshMatrices, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshAttributes) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshAttributes.bindTexture(program, samplers.eachMeshAttributes, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachPrimitiveMesh) {\n            if (renderState.numIndices8Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_8Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_8Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices8Bits);\n            }\n            if (renderState.numIndices16Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_16Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_16Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices16Bits);\n            }\n            if (renderState.numIndices32Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_32Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_32Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices32Bits);\n            }\n        }\n        if (samplers.baseColorMap) {\n            samplers.baseColorMap.bindTexture(renderState.materialTextureSet.colorTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.metallicRoughMap) {\n            samplers.metallicRoughMap.bindTexture(renderState.materialTextureSet.metallicRoughnessTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.emissiveMap) {\n            samplers.emissiveMap.bindTexture(renderState.materialTextureSet.emissiveTexture.texture2D, renderContext.nextTextureUnit);\n        }\n        if (samplers.occlusionMap) {\n            samplers.occlusionMap.bindTexture(renderState.materialTextureSet.occlusionTexture.texture2D, renderContext.nextTextureUnit);\n        }\n    }\n\n    #bind() {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n        const uniforms = this.#uniforms;\n        const project = view.camera.project;\n\n        // @ts-ignore\n        this.#program.bind();\n        // if (this.#uProjMatrix) {\n        //     gl.uniformMatrix4fv(this.#uProjMatrix, false, project.matrix);\n        // }\n        if (uniforms.lightAmbient) {      // @ts-ignore\n            gl.uniform4fv(uniforms.lightAmbient, view.getAmbientColorAndIntensity());\n        }\n        for (let i = 0, len = uniforms.lights.length; i < len; i++) {\n            const fragLightSourceUniforms = uniforms.lights[i];\n            const light = view.lightsList[i];\n            if (fragLightSourceUniforms.color) {\n                gl.uniform4f(fragLightSourceUniforms.color, light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (fragLightSourceUniforms.dir) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.dir, light.dir[0], light.dir[1], light.dir[2]);\n            }\n            if (fragLightSourceUniforms.pos) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.pos, light.pos[0], light.pos[1], light.pos[2]);\n            }\n            if (fragLightSourceUniforms.attenuation) { // @ts-ignore\n                gl.uniform1f(fragLightSourceUniforms.attenuation, light.attenuation);\n            }\n        }\n        if (uniforms.sao) {\n            const sao = view.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                // @ts-ignore\n                gl.uniform4fv(uniforms.sao, tempVec4);\n                // program.bindTexture(this.#uOcclusionTexture, renderContext.occlusionTexture, 0);\n            }\n        }\n        if (uniforms.gammaFactor) {\n            gl.uniform1f(uniforms.gammaFactor, view.gammaFactor);\n        }\n        if (uniforms.pointSize) {\n            gl.uniform1f(uniforms.pointSize, view.pointsMaterial.pointSize);\n        }\n        if (uniforms.nearPlaneHeight) {\n            gl.uniform1f(uniforms.nearPlaneHeight, (view.camera.projectionType === OrthoProjectionType) ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * view.camera.perspectiveProjection.fov * Math.PI / 180.0))));\n        }\n        if (uniforms.pickZNear) {\n            gl.uniform1f(uniforms.pickZNear, this.renderContext.pickZNear);\n            gl.uniform1f(uniforms.pickZFar, this.renderContext.pickZFar);\n        }\n        if (uniforms.pickInvisible) {\n            gl.uniform1i(uniforms.pickInvisible, this.renderContext.pickInvisible ? 1 : 0);\n        }\n        if (uniforms.logDepthBufFC) {\n            const logDepthBufFC = 2.0 / (Math.log((project as PerspectiveProjection).far + 1.0) / Math.LN2);\n            gl.uniform1f(uniforms.logDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    // protected get vertexShader(): string {\n    //     return `${this.vertHeader}\n    //     ${this.vertDataTextureDefs}\n    //     ${this.vertLogDepthBufDefs}\n    //     void main(void) {\n    //             ${this.vertDataTextureSamples}\n    //             ${this.vertLogDepthBufOutputs}\n    //     }`;\n    // }\n\n    protected get vertHeader(): string {\n        return `#version 300 es\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                precision highp float;\n                precision highp int;\n                precision highp usampler2D;\n                precision highp isampler2D;\n                precision highp sampler2D;\n                #else\n                precision mediump float;\n                precision mediump int;\n                precision mediump usampler2D;\n                precision mediump isampler2D;\n                precision mediump sampler2D;\n                uniform int renderPass;\n                #endif`;\n    }\n\n    protected get vertDataTextureDefs(): string {\n        return `uniform mediump sampler2D eachMeshMatrices;\n                uniform lowp usampler2D eachMeshAttributes;\n                uniform highp sampler2D eachMeshOffset;\n                uniform mediump usampler2D positions;\n                uniform highp usampler2D indices;\n                uniform mediump usampler2D eachPrimitiveMesh;\n                uniform highp sampler2D cameraMatrices;\n                uniform highp sampler2D sceneModelRendererMatrices;`;\n    }\n\n    protected get vertLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `uniform float logDepthBufFC;\n                    out float fragDepth;\n                    bool isPerspectiveMatrix(mat4 m) {\n                        return (m[2][3] == - 1.0);\n                    }\n                    out float isPerspective;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get vertDataTextureSamples(): string {\n        return \"\";\n    }\n\n    protected get vertLogDepthBufOutputs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `fragDepth = 1.0 + clipPos.w;\n                    isPerspective = float (isPerspectiveMatrix(projMatrix));`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragmentShader(): string {\n        return `${this.fragHeader}\n        ${this.fragGammaDefs}\n        ${this.fragSectionPlaneDefs}\n        ${this.fragLightDefs}\n        ${this.fragLogDepthBufDefs}\n        void main(void) {\n            ${this.fragSectionPlanesSlice}\n            ${this.fragLighting}\n            ${this.fragLogDepthBufOutput}\n        }`;\n    }\n\n    protected get fragHeader(): string {\n        return `#version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n       precision highp float;\n        precision highp int;\n        #else\n        precision mediump float;\n        precision mediump int;\n        #endif`;\n    }\n\n    protected get fragGammaDefs(): string {\n        return `uniform float gammaFactor;\n        vec4 linearToLinear( in vec4 value ) {\n            return value;\n        }\n        vec4 sRGBToLinear( in vec4 value ) {\n            return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n        }\n        vec4 gammaToLinear( in vec4 value) {\n            return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n        }\n        vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\n              return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        }`;\n    }\n\n    protected get fragLightDefs(): string {\n        const view = this.renderContext.view;\n        const src = [];\n        src.push(\"uniform vec4 lightAmbient;\");\n        for (let i = 0, len = view.lightsList.length; i < len; i++) {\n            const light: any = view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `in float isPerspective;\n                    uniform float logDepthBufFC;\n                    in float fragDepth;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLogDepthBufOutput(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return \"gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;\";\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLighting(): string {\n        const src = [];\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);\");\n        src.push(\"vec3 viewNormal = normalize(vec4(viewNormalMatrix * worldNormal).xyz);\");\n        src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n        src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n        src.push(\"float lambertian = 1.0;\");\n\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light: any = this.renderContext.view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n        src.push(\"vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));\");\n        src.push(\"meshColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);\");\n\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSAOOutput(): string {\n        if (this.renderContext.view.sao.enabled) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            return `float viewportWidth     = uSAOParams[0];\n                    float viewportHeight    = uSAOParams[1];\n                    float blendCutoff       = uSAOParams[2];\n                    float blendFactor       = uSAOParams[3];\n                    vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\n                    float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture(uOcclusionTexture, uv))) * blendFactor;\n                    outColor                = vec4(fragColor.rgb * ambient, 1.0);`;\n        } else {\n            return `outColor            = fragColor;`;\n        }\n    }\n\n    protected get fragOutput(): string {\n        return `outColor            = fragColor;`;\n    }\n\n\n    protected get fragSectionPlaneDefs(): string {\n        const src = [];\n        src.push(`in vec4 worldPosition;\n                  in vec4 meshFlags2;`);\n        for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n            src.push(`uniform bool sectionPlaneActive${i};\n                      uniform vec3 sectionPlanePos${i};\n                      uniform vec3 sectionPlaneDir${i};`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLightSourceUniforms(): string {\n        const src = [];\n        src.push(`uniform vec4 lightAmbient;`);\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light = this.renderContext.view.lightsList[i];\n            if (light instanceof AmbientLight) {\n                continue;\n            }\n            src.push(`uniform vec4 lightColor${i};`);\n            if (light instanceof DirLight) {\n                src.push(`uniform vec3 lightDir${i};`);\n            }\n            if (light instanceof PointLight) {\n                src.push(`uniform vec3 lightPos${i};`);\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSectionPlanesSlice(): string {\n        const src = [];\n        const clipping = (this.renderContext.view.sectionPlanesList.length > 0);\n        if (clipping) {\n            src.push(`bool clippable = (float(meshFlags2.x) > 0.0);\n                      if (clippable) {\n                          float dist = 0.0;`);\n            for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n                src.push(`if (sectionPlaneActive${i}) {\n                              dist += clamp(dot(-sectionPlaneDir${i}.xyz, worldPosition.xyz - sectionPlanePos${i}.xyz), 0.0, 1000.0);\n                          }`);\n            }\n            src.push(`if (dist > 0.0) { \n                          discard;\n                      }\n                  }`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragFlatShading(): string {\n        const src = [];\n        src.push(\"\");\n        return src.join(\"\\n\");\n    }\n\n    destroy() {\n        if (this.#program) {\n            this.#program.destroy();\n        }\n        this.#program = null;\n    }\n}\n","import {LayerRenderer} from \"./LayerRenderer\";\nimport type {RenderContext} from \"./RenderContext\";\n\nexport class FastColorTrianglesRenderer extends LayerRenderer {\n\n    constructor(renderContext: RenderContext) {\n        super(renderContext);\n    }\n\n    getHash(): string {\n        return `${this.renderContext.view.getSectionPlanesHash()}-${this.renderContext.view.getLightsHash()}`;\n    }\n\n    buildVertexShader(): string {\n        return `${this.vertHeader}   \n        \n                uniform int                 renderPass;   \n            \n                uniform highp   mat4        projMatrix;\n                uniform highp   mat4        worldMatrix;\n                      \n                uniform mediump sampler2D   viewMatrices;\n                           \n                uniform mediump usampler2D  eachPrimitiveMesh;\n                uniform lowp    usampler2D  eachMeshAttributes;\n                \n                uniform mediump sampler2D   eachMeshMatrices;\n                uniform mediump usampler2D  positions;\n                uniform highp   usampler2D  indices;\n                \n                uniform  float  logDepthBufFC;\n                 \n                out vec4        worldPosition;\n                flat out uint   meshFlags2r;                       \n                flat out uvec4  meshColor;\n                out float       fragDepth;\n                \n                bool isPerspectiveMatrix(mat4 m) {\n                    return (m[2][3] == - 1.0);\n                }\n                \n                out float isPerspective;\n                    \n                void main(void) {\n                                   \n                    int triangleIndex      = gl_VertexID / 3;\n                    \n                    int hPackedMeshIdIndex = (triangleIndex >> 3) & 1023;\n                    int vPackedMeshIdIndex = (triangleIndex >> 3) >> 10;\n                    \n                    int meshIndex          = int(texelFetch(eachPrimitiveMesh, ivec2(hPackedMeshIdIndex, vPackedMeshIdIndex), 0).r);                   \n                    uvec4 meshFlags        = texelFetch (eachMeshAttributes, ivec2(2, meshIndex), 0);\n\n                    if (int(meshFlags.x) != renderPass) {\n                        gl_Position = vec4(3.0, 3.0, 3.0, 1.0);\n                        return;\n                    } \n                 \n                    uvec4 meshFlags2 = texelFetch (eachMeshAttributes, ivec2(3, meshIndex), 0);\n\n                    ivec4 packedVertexBase = ivec4(texelFetch (eachMeshAttributes, ivec2(4, meshIndex), 0));\n                    ivec4 packedIndexBaseOffset = ivec4(texelFetch (eachMeshAttributes, ivec2(5, meshIndex), 0));\n                    int indexBaseOffset =   (packedIndexBaseOffset.r << 24) + \n                                            (packedIndexBaseOffset.g << 16) + \n                                            (packedIndexBaseOffset.b << 8) + \n                                            (packedIndexBaseOffset.a);\n\n                    int hIndex = (triangleIndex - indexBaseOffset) & 1023;\n                    int vIndex = (triangleIndex - indexBaseOffset) >> 10;\n\n                    ivec3 vertexIndices = ivec3(texelFetch(indices, ivec2(hIndex, vIndex), 0));\n                    ivec3 uniqueVertexIndexes = vertexIndices + (packedVertexBase.r << 24) + (packedVertexBase.g << 16) + (packedVertexBase.b << 8) + packedVertexBase.a;\n\n                    ivec3 indexPositionH = uniqueVertexIndexes & 1023;\n                    ivec3 indexPositionV = uniqueVertexIndexes >> 10;\n\n                    mat4 positionsDecompressMatrix = mat4 (\n                        texelFetch (eachMeshMatrices, ivec2(0, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(1, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(2, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(3, meshIndex), 0));\n                        \n                    mat4 meshMatrix = mat4 (\n                        texelFetch (eachMeshMatrices, ivec2(4, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(5, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(6, meshIndex), 0), \n                        texelFetch (eachMeshMatrices, ivec2(7, meshIndex), 0));\n\n                    ivec4 packedViewMatrixIndex = ivec4(texelFetch (eachMeshAttributes, ivec2(7, meshIndex), 0));\n                    int viewMatrixIndex = \n                            (packedViewMatrixIndex.r << 24) + \n                            (packedViewMatrixIndex.g << 16) + \n                            (packedViewMatrixIndex.b << 8) + \n                            (packedViewMatrixIndex.a);\n                   \n                    mat4 viewMatrix = mat4 (\n                        texelFetch (viewMatrices, ivec2(4, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(5, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(6, viewMatrixIndex), 0), \n                        texelFetch (viewMatrices, ivec2(7, viewMatrixIndex), 0));\n\n                    vec3 _positions[3];\n                   \n                    _positions[0] = vec3(texelFetch(positions, ivec2(indexPositionH.r, indexPositionV.r), 0));\n                    _positions[1] = vec3(texelFetch(positions, ivec2(indexPositionH.g, indexPositionV.g), 0));\n                    _positions[2] = vec3(texelFetch(positions, ivec2(indexPositionH.b, indexPositionV.b), 0));\n  \n                    vec3  position       = _positions[gl_VertexID % 3];\n                   \n                    vec4  _worldPosition = worldMatrix * ((meshMatrix * positionsDecompressMatrix) * vec4(position, 1.0)); \n                    vec4  viewPosition   = viewMatrix * _worldPosition;                   \n                    vec4  clipPosition   = projMatrix * viewPosition;\n\n                    meshFlags2r     = meshFlags2.r;                     \n                    meshColor       = texelFetch (eachMeshAttributes, ivec2(0, meshIndex), 0);                          \n                    fragDepth       = 1.0 + clipPosition.w;\n                    isPerspective   = float (isPerspectiveMatrix(projMatrix));\n                    worldPosition   = _worldPosition;                                               \n                    \n                    gl_Position     = clipPosition;\n                }`;\n    }\n\n    buildFragmentShader(): string {\n        return `${this.fragHeader}                        \n    \n             flat   in uvec4    meshColor;\n                in float        fragDepth;\n                in float        isPerspective;    \n                flat in uint    meshFlags2r;        \n                uniform float   logDepthBufFC;                        \n    \n                ${this.fragSectionPlaneDefs}                  \n                ${this.fragLightSourceUniforms}                                                             \n    \n                out vec4 outColor;        \n    \n                void main(void) {         \n                \n                // src.push(\"float lambertian = 1.0;\");\n                // \n                //  vec3 xTangent = dFdx( vViewPosition.xyz );\n                //  vec3 yTangent = dFdy( vViewPosition.xyz );\n                // \n                //  vec3 viewNormal = normalize( cross( xTangent, yTangent ) );        \n    \n                    ${this.fragSectionPlanesSlice}                                    \n                    ${this.fragFlatShading}     \n          \n                    outColor = vec4(meshColor);                   \n                    gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;                        \n                }`;\n    }\n\n    // get lambertianLighting() : string{\n    //     const src = [];\n    //     src.push(\"createVec3 reflectedColor = createVec3(0.0, 0.0, 0.0);\");\n    //     src.push(\"createVec3 viewLightDir = createVec3(0.0, 0.0, -1.0);\");\n    //     src.push(\"float lambertian = 1.0;\");\n    //     for (let i = 0, len = this.view.lightsList.length; i < len; i++) {\n    //         const light = this.view.lightsList[i];\n    //         if (light.type === \"ambient\") {\n    //             continue;\n    //         }\n    //         if (light.type === \"dir\") {\n    //             src.push(\"viewLightDir = normalize((viewMatrix * createVec4(lightDir\" + i + \", 0.0)).xyz);\");\n    //         } else {\n    //             continue;\n    //         }\n    //         src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n    //         src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n    //     }\n    //     return src.join(\"\\n\");\n    // }\n\n}","/**\n * @private\n */\nimport type {GLDataTexture} from \"@xeokit/webglutils\";\n\n\nexport class DataTextureSet {\n\n    positions: GLDataTexture | null; // All quantized positions for a Layer\n    indices_8Bits: GLDataTexture | null; // All 8-bit indices\n    indices_16Bits: GLDataTexture | null; // All 16-bit indices\n    indices_32Bits: GLDataTexture | null; // All 32-bt indices\n    edgeIndices_8Bits: GLDataTexture | null; // All 8-bit edge indices\n    edgeIndices_16Bits: GLDataTexture | null; // All 16-bit edges indices\n    edgeIndices_32Bits: GLDataTexture | null; // All 32-bit edges indices\n    indices: { [key: number]: GLDataTexture | null }; // All 8, 16, and 32-bit indices\n    edgeIndices: { [key: number]: GLDataTexture | null } | null; // All 8, 16 and 32-bit indices\n    eachMeshAttributes: GLDataTexture | null; // For each mesh, a set of attributes including color, opacity, visibility etc\n    eachMeshMatrices: GLDataTexture | null; // For each mesh, a positions decompression matrix and a modeling matrix\n    eachEdgeOffset: GLDataTexture | null;\n    eachPrimitiveMesh_8Bits: GLDataTexture | null;\n    eachPrimitiveMesh_16Bits: GLDataTexture | null;\n    eachPrimitiveMesh_32Bits: GLDataTexture | null;\n    eachPrimitiveMesh: { [key: number]: GLDataTexture | null } | null;\n    eachEdgeMesh_8Bits: GLDataTexture | null;\n    eachEdgeMesh_16Bits: GLDataTexture | null;\n    eachEdgeMesh_32Bits: GLDataTexture | null;\n    eachEdgeMesh: { [key: number]: GLDataTexture | null } | null;\n    #built: boolean;\n\n    constructor() {\n        this.positions = null;\n        this.indices_8Bits = null;\n        this.indices_16Bits = null;\n        this.indices_32Bits = null;\n        this.edgeIndices_8Bits = null;\n        this.edgeIndices_16Bits = null;\n        this.edgeIndices_32Bits = null;\n        this.eachMeshAttributes = null;\n        this.eachMeshMatrices = null;\n        this.eachPrimitiveMesh_8Bits = null;\n        this.eachPrimitiveMesh_16Bits = null;\n        this.eachPrimitiveMesh_32Bits = null;\n        this.eachEdgeMesh_8Bits = null;\n        this.eachEdgeMesh_16Bits = null;\n        this.eachEdgeMesh_32Bits = null;\n        this.eachEdgeOffset = null;\n        this.#built = false;\n    }\n\n    build() {\n        this.indices = {\n            8: this.indices_8Bits,\n            16: this.indices_16Bits,\n            32: this.indices_32Bits,\n        };\n        this.eachPrimitiveMesh = {\n            8: this.eachPrimitiveMesh_8Bits,\n            16: this.eachPrimitiveMesh_16Bits,\n            32: this.eachPrimitiveMesh_32Bits,\n        };\n        this.edgeIndices = {\n            8: this.edgeIndices_8Bits,\n            16: this.edgeIndices_16Bits,\n            32: this.edgeIndices_32Bits,\n        };\n        this.eachEdgeMesh = {\n            8: this.eachEdgeMesh_8Bits,\n            16: this.eachEdgeMesh_16Bits,\n            32: this.eachEdgeMesh_32Bits,\n        };\n        this.#built = true;\n    }\n\n    destroy() {\n        if (this.positions) {\n            this.positions.destroy();\n        }\n        if (this.indices_8Bits) {\n            this.indices_8Bits.destroy();\n        }\n        if (this.indices_16Bits) {\n            this.indices_16Bits.destroy();\n        }\n        if (this.indices_32Bits) {\n            this.indices_32Bits.destroy();\n        }\n        if (this.edgeIndices_8Bits) {\n            this.edgeIndices_8Bits.destroy();\n        }\n        if (this.edgeIndices_16Bits) {\n            this.edgeIndices_16Bits.destroy();\n        }\n        if (this.edgeIndices_32Bits) {\n            this.edgeIndices_32Bits.destroy();\n        }\n        if (this.eachMeshMatrices) {\n            this.eachMeshMatrices.destroy();\n        }\n        if (this.eachMeshAttributes) {\n            this.eachMeshAttributes.destroy();\n        }\n        if (this.eachEdgeOffset) {\n            this.eachEdgeOffset.destroy();\n        }\n        if (this.eachPrimitiveMesh_8Bits) {\n            this.eachPrimitiveMesh_8Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_16Bits) {\n            this.eachPrimitiveMesh_16Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_32Bits) {\n            this.eachPrimitiveMesh_32Bits.destroy();\n        }\n        if (this.eachEdgeMesh_8Bits) {\n            this.eachEdgeMesh_8Bits.destroy();\n        }\n        if (this.eachEdgeMesh_16Bits) {\n            this.eachEdgeMesh_16Bits.destroy();\n        }\n        if (this.eachEdgeMesh_32Bits) {\n            this.eachEdgeMesh_32Bits.destroy();\n        }\n    }\n}\n","\n/**\n * @private\n */\nexport class MeshCounts {\n\n    numMeshes: number;\n    numVisible: number;\n    numTransparent: number;\n    numEdges: number;\n    numXRayed: number;\n    numSelected: number;\n    numHighlighted: number;\n    numClippable: number;\n    numPickable: number;\n    numCulled: number;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset() {\n        this.numMeshes = 0;\n        this.numVisible = 0;\n        this.numTransparent = 0;\n        this.numEdges = 0;\n        this.numXRayed = 0;\n        this.numSelected = 0;\n        this.numHighlighted = 0;\n        this.numClippable = 0;\n        this.numPickable = 0;\n        this.numCulled = 0;\n    }\n}","\n/**\n * @private\n */\nexport const SCENE_OBJECT_FLAGS = {\n    VISIBLE: 1,\n    CULLED: 1 << 2,\n    PICKABLE: 1 << 3,\n    CLIPPABLE: 1 << 4,\n    COLLIDABLE: 1 << 5,\n    CAST_SHADOW: 1 << 6,\n    RECEIVE_SHADOW: 1 << 7,\n    XRAYED: 1 << 8,\n    HIGHLIGHTED: 1 << 9,\n    SELECTED: 1 << 10,\n    EDGES: 1 << 11,\n    BACKFACES: 1 << 12,\n    TRANSPARENT: 1 << 13\n};\n","/**\n * Bundled by jsDelivr using Rollup v2.59.0 and Terser v5.9.0.\n * Original file: /npm/@petamoriken/float16@3.5.11/src/index.mjs\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\nfunction t(t: Function) {\n    // @ts-ignore\n    return (r: any, ...e: ArrayLike<any>) => n(t, r, e)\n}\n\nfunction r(r: object, n: PropertyKey) {\n    // @ts-ignore\n    return t(s(r, n).get)\n}\n\n// @ts-ignore\n// @ts-ignore\nconst {\n        apply: n,\n        construct: e,\n        defineProperty: o,\n        get: i,\n        getOwnPropertyDescriptor: s,\n        getPrototypeOf: c,\n        has: u,\n        ownKeys: f,\n        set: h,\n        setPrototypeOf: l\n    } = Reflect, a = Proxy, y = Number,\n    {\n        isFinite: p,\n        isNaN: w\n    } = y,\n    {\n        iterator: g,\n        species: d,\n        toStringTag: v,\n        for: b\n    } = Symbol, A = Object,\n    {\n        create: m,\n        defineProperty: B,\n        freeze: x,\n        is: E\n        // @ts-ignore\n    } = A, T = A.prototype, O = t(T.isPrototypeOf), j = A.hasOwn || t(T.hasOwnProperty), I = Array, P = I.isArray,\n    // @ts-ignore\n    S = I.prototype, _ = t(S.join), F = t(S.push), L = t(S.toLocaleString), R = S[g], C = t(R), N = Math.trunc,\n    U = ArrayBuffer, M = U.isView, D = t(U.prototype.slice), k = r(U.prototype, \"byteLength\"),\n    W = \"undefined\" != typeof SharedArrayBuffer ? SharedArrayBuffer : null, V = W && r(W.prototype, \"byteLength\"),\n    // @ts-ignore\n    Y = c(Uint8Array), z = Y.from, G = Y.prototype, K = G[g], X = t(G.keys), q = t(G.values), H = t(G.entries),\n    J = t(G.set), Q = t(G.reverse), Z = t(G.fill), $ = t(G.copyWithin), tt = t(G.sort), rt = t(G.slice),\n    nt = t(G.subarray), et = r(G, \"buffer\"), ot = r(G, \"byteOffset\"), it = r(G, \"length\"), st = r(G, v),\n    // @ts-ignore\n    ct = Uint16Array, ut = (...t) => n(z, ct, t), ft = Uint32Array, ht = Float32Array, lt = c([][g]()), at = t(lt.next),\n    yt = t(function* () {\n        // @ts-ignore\n    }().next), pt = c(lt), wt = DataView.prototype, gt = t(wt.getUint16), dt = t(wt.setUint16), vt = TypeError,\n    bt = RangeError, At = Set, mt = At.prototype, Bt = t(mt.add), xt = t(mt.has), Et = WeakMap, Tt = Et.prototype,\n    Ot = t(Tt.get), jt = t(Tt.has), It = t(Tt.set), Pt = new U(4), St = new ht(Pt), _t = new ft(Pt), Ft = new ft(512),\n    Lt = new ft(512);\nfor (let t = 0; t < 256; ++t) {\n    const r = t - 127;\n    r < -27 ? (Ft[t] = 0, Ft[256 | t] = 32768, Lt[t] = 24, Lt[256 | t] = 24) : r < -14 ? (Ft[t] = 1024 >> -r - 14, Ft[256 | t] = 1024 >> -r - 14 | 32768, Lt[t] = -r - 1, Lt[256 | t] = -r - 1) : r <= 15 ? (Ft[t] = r + 15 << 10, Ft[256 | t] = r + 15 << 10 | 32768, Lt[t] = 13, Lt[256 | t] = 13) : r < 128 ? (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 24, Lt[256 | t] = 24) : (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 13, Lt[256 | t] = 13)\n}\n\nfunction Rt(t: number) {\n    St[0] = t;\n    const r = _t[0],\n        n = r >> 23 & 511;\n    return Ft[n] + ((8388607 & r) >> Lt[n])\n}\n\nconst Ct = new ft(2048),\n    Nt = new ft(64),\n    Ut = new ft(64);\nCt[0] = 0;\nfor (let t = 1; t < 1024; ++t) {\n    let r = t << 13,\n        n = 0;\n    for (; 0 == (8388608 & r);) n -= 8388608, r <<= 1;\n    r &= -8388609, n += 947912704, Ct[t] = r | n\n}\nfor (let t = 1024; t < 2048; ++t) Ct[t] = 939524096 + (t - 1024 << 13);\nNt[0] = 0;\nfor (let t = 1; t < 31; ++t) Nt[t] = t << 23;\nNt[31] = 1199570944, Nt[32] = 2147483648;\nfor (let t = 33; t < 63; ++t) Nt[t] = 2147483648 + (t - 32 << 23);\nNt[63] = 3347054592, Ut[0] = 0;\nfor (let t = 1; t < 64; ++t) Ut[t] = 32 === t ? 0 : 1024;\n\nfunction Mt(t: number) {\n    const r = t >> 10;\n    return _t[0] = Ct[Ut[r] + (1023 & t)] + Nt[r], St[0]\n}\n\nfunction Dt(t: unknown) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    if (t = y(t), !p(t) || 0 === t) return t;\n    // @ts-ignore\n    return Mt(Rt(t))\n}\n\nfunction kt(t: any[]) {\n    // @ts-ignore\n    if (t[g] === R) return t;\n    const r = C(t);\n    return m(null,\n        {\n            next:\n                {\n                    value: function () {\n                        return at(r)\n                    }\n                },\n            [g]:\n                {\n                    value: function () {\n                        return this\n                    }\n                }\n        })\n}\n\nconst Wt = new Et,\n    Vt = m(pt,\n        {\n            next:\n                {\n                    value: function () {\n                        const t = Ot(Wt, this);\n                        return yt(t)\n                    },\n                    writable: !0,\n                    configurable: !0\n                },\n            [v]:\n                {\n                    value: \"Array Iterator\",\n                    configurable: !0\n                }\n        });\n\nfunction Yt(t:any) {\n    const r = m(Vt);\n    return It(Wt, r, t), r\n}\n\nfunction zt(t:any) {\n    return null !== t && \"object\" == typeof t || \"function\" == typeof t\n}\n\nfunction Gt(t:any) {\n    return null !== t && \"object\" == typeof t\n}\n\nfunction Kt(t:any) {\n    return void 0 !== st(t)\n}\n\nfunction Xt(t:any) {\n    const r = st(t);\n    return \"BigInt64Array\" === r || \"BigUint64Array\" === r\n}\n\nfunction qt(t:any) {\n    if (null === W) return !1;\n    try {\n        // @ts-ignore\n        return V(t), !0\n    } catch (t:any) {\n        return !1\n    }\n}\n\nfunction Ht(t:any) {\n    if (!P(t)) return !1;\n    // @ts-ignore\n    if (t[g] === R) return !0;\n    // @ts-ignore\n    return \"Array Iterator\" === t[g]()[v]\n}\n\nfunction Jt(t:any) {\n    if (\"string\" != typeof t) return !1;\n    const r = y(t);\n    return t === r + \"\" && (!!p(r) && r === N(r))\n}\n\nconst Qt = y.MAX_SAFE_INTEGER;\n\nfunction Zt(t:any) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    const r = y(t);\n    return w(r) || 0 === r ? 0 : N(r)\n}\n\nfunction $t(t:any) {\n    const r = Zt(t);\n    return r < 0 ? 0 : r < Qt ? r : Qt\n}\n\nfunction tr(t: { constructor: any; }, r: ArrayBufferConstructor) {\n    if (!zt(t)) throw vt(\"This is not an object\");\n    const n = t.constructor;\n    if (void 0 === n) return r;\n    if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n    const e = n[d];\n    return null == e ? r : e\n}\n\nfunction rr(t:any) {\n    if (qt(t)) return !1;\n    try {\n        return D(t, 0, 0), !1\n    } catch (t:any) {\n    }\n    return !0\n}\n\nfunction nr(t: unknown, r: unknown) {\n    const n = w(t),\n        e = w(r);\n    if (n && e) return 0;\n    if (n) return 1;\n    if (e) return -1;\n    // @ts-ignore\n    if (t < r) return -1;\n    // @ts-ignore\n    if (t > r) return 1;\n    if (0 === t && 0 === r) {\n        const n = E(t, 0),\n            e = E(r, 0);\n        if (!n && e) return -1;\n        if (n && !e) return 1\n    }\n    return 0\n}\n\nconst er = b(\"__Float16Array__\"),\n    or = new Et;\n\nfunction ir(t:any) {\n    return jt(or, t) || !M(t) && function (t:any) {\n        if (!Gt(t)) return !1;\n        const r = c(t);\n        if (!Gt(r)) return !1;\n        // @ts-ignore\n        const n = r.constructor;\n        if (void 0 === n) return !1;\n        if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n        return u(n, er)\n    }(t)\n}\n\nfunction sr(t:any) {\n    if (!ir(t)) throw vt(\"This is not a Float16Array object\")\n}\n\nfunction cr(t: any, r: number) {\n    const n = ir(t),\n        e = Kt(t);\n    if (!n && !e) throw vt(\"Species constructor didn't return TypedArray object\");\n    if (\"number\" == typeof r) {\n        let e;\n        if (n) {\n            const r = ur(t);\n            e = it(r)\n        } else e = it(t);\n        if (e < r) throw vt(\"Derived constructor created TypedArray object which was too small length\")\n    }\n    if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\")\n}\n\nfunction ur(t:any) {\n    const r = Ot(or, t);\n    if (void 0 !== r) {\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        return r\n    }\n    const n = t.buffer;\n    if (rr(n)) throw vt(\"Attempting to access detached ArrayBuffer\");\n    const o = e(ar, [n, t.byteOffset, t.length], t.constructor);\n    return Ot(or, o)\n}\n\nfunction fr(t:any) {\n    const r = it(t),\n        n = [];\n    for (let e = 0; e < r; ++e) n[e] = Mt(t[e]);\n    return n\n}\n\nconst hr = new At;\nfor (const t of f(G)) {\n    if (t === v) continue;\n    const r = s(G, t);\n    j(r, \"get\") && Bt(hr, t)\n}\nconst lr = x(\n    {\n        get: (t: object, r: PropertyKey, n: any) => Jt(r) && j(t, r) ? Mt(i(t, r)) : xt(hr, r) && O(G, t) ? i(t, r) : i(t, r, n),\n        set: (t: object, r: PropertyKey, n: number, e: any) => Jt(r) && j(t, r) ? h(t, r, Rt(n)) : h(t, r, n, e),\n        getOwnPropertyDescriptor(t: object, r: PropertyKey) {\n            if (Jt(r) && j(t, r)) {\n                const n = s(t, r);\n                // @ts-ignore\n                return n.value = Mt(n.value), n\n            }\n            return s(t, r)\n        },\n        defineProperty: (t: object, r: PropertyKey, n: PropertyDescriptor & ThisType<any>) => Jt(r) && j(t, r) && j(n, \"value\") ? (n.value = Rt(n.value), o(t, r, n)) : o(t, r, n)\n    });\n\nclass ar {\n    constructor(t: string | number | any[], r: undefined, n: undefined) {\n        let o;\n        if (ir(t)) o = e(ct, [ur(t)], new.target);\n        else if (zt(t) && !function (t:any) {\n            try {\n                return k(t), !0\n            } catch (t) {\n                return !1\n            }\n        }(t)) {\n            let r, n;\n            if (Kt(t)) {\n                r = t, n = it(t);\n                const i = et(t),\n                    s = qt(i) ? U : tr(i, U);\n                if (rr(i)) throw vt(\"Attempting to access detached ArrayBuffer\");\n                if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n                const c = new s(2 * n);\n                o = e(ct, [c], new.target)\n            } else {\n                // @ts-ignore\n                const i = t[g];\n                if (null != i && \"function\" != typeof i) throw vt(\"@@iterator property is not callable\");\n                // @ts-ignore\n                null != i ? Ht(t) ? (r = t, n = t.length) : (r = [...t], n = r.length) : (r = t, n = $t(r.length)), o = e(ct, [n], new.target)\n            }\n            for (let t = 0; t < n; ++t) { // @ts-ignore\n                o[t] = Rt(r[t])\n            }\n        } else o = e(ct, arguments, new.target);\n        const i = new a(o, lr);\n        return It(or, i, o), i\n    }\n\n    static from(t: string | any[], ...r: any[]) {\n        const e = this;\n        if (!u(e, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        if (e === ar) {\n            if (ir(t) && 0 === r.length) {\n                const r = ur(t),\n                    n = new ct(et(r), ot(r), it(r));\n                // @ts-ignore\n                return new ar(et(rt(n)))\n            }\n            // @ts-ignore\n            if (0 === r.length) return new ar(et(ut(t, Rt)));\n            const e = r[0],\n                o = r[1];\n            // @ts-ignore\n            return new ar(et(ut(t, ((t, ...r) => {\n                return Rt(n(e, this, [t, ...kt(r)]))\n            }), o)))\n        }\n        let o, i;\n        // @ts-ignore\n        const s = t[g];\n        if (null != s && \"function\" != typeof s) throw vt(\"@@iterator property is not callable\");\n        // @ts-ignore\n        if (null != s) Ht(t) ? (o = t, i = t.length) : !Kt(c = t) || c[g] !== K && \"Array Iterator\" !== c[g]()[v] ? (o = [...t], i = o.length) : (o = t, i = it(t));\n        else {\n            if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n            o = A(t), i = $t(o.length)\n        }\n        var c;\n        // @ts-ignore\n        const f = new e(i);\n        if (0 === r.length)\n            // @ts-ignore\n            for (let t = 0; t < i; ++t) f[t] = o[t];\n        else {\n            const t = r[0],\n                e = r[1];\n            // @ts-ignore\n            for (let r = 0; r < i; ++r) f[r] = n(t, e, [o[r], r])\n        }\n        return f\n    }\n\n    static of(...t:any) {\n        const r = this;\n        if (!u(r, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        const n = t.length;\n        if (r === ar) {\n            // @ts-ignore\n            const r = new ar(n),\n                e = ur(r);\n            for (let r = 0; r < n; ++r) e[r] = Rt(t[r]);\n            return r\n        }\n        // @ts-ignore\n        const e = new r(n);\n        // @ts-ignore\n        for (let r = 0; r < n; ++r) e[r] = t[r];\n        return e\n    }\n\n    keys() {\n        sr(this);\n        const t = ur(this);\n        return X(t)\n    }\n\n    values() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const r of q(t)) yield Mt(r)\n        }())\n    }\n\n    entries() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const [r, n] of H(t)) yield [r, Mt(n)]\n        }())\n    }\n\n    at(t:any) {\n        sr(this);\n        const r = ur(this),\n            n = it(r),\n            e = Zt(t),\n            o = e >= 0 ? e : n + e;\n        if (!(o < 0 || o >= n)) return Mt(r[o])\n    }\n\n    map(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = tr(e, ar);\n        if (s === ar) {\n            // @ts-ignore\n            const r = new ar(o),\n                s = ur(r);\n            for (let r = 0; r < o; ++r) {\n                const o = Mt(e[r]);\n                s[r] = Rt(n(t, i, [o, r, this]))\n            }\n            return r\n        }\n        const c = new s(o);\n        cr(c, o);\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            c[r] = n(t, i, [o, r, this])\n        }\n        return c\n    }\n\n    filter(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = [];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            // @ts-ignore\n            n(t, i, [o, r, this]) && F(s, o)\n        }\n        // @ts-ignore\n        const c = new (tr(e, ar))(s);\n        // @ts-ignore\n        return cr(c), c\n    }\n\n    reduce(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[0]), i = 1) : (o = r[0], i = 0);\n        for (let r = i; r < e; ++r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    reduceRight(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[e - 1]), i = e - 2) : (o = r[0], i = e - 1);\n        for (let r = i; r >= 0; --r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    forEach(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) n(t, i, [Mt(e[r]), r, this])\n    }\n\n    find(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    findLast(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findLastIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    every(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (!n(t, i, [Mt(e[r]), r, this])) return !1;\n        return !0\n    }\n\n    some(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (n(t, i, [Mt(e[r]), r, this])) return !0;\n        return !1\n    }\n\n    set(t: number, ...r: number[]) {\n        sr(this);\n        const n = ur(this),\n            e = Zt(r[0]);\n        if (e < 0) throw bt(\"Offset is out of bounds\");\n        if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n        if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n        if (ir(t)) return J(ur(this), ur(t), e);\n        if (Kt(t)) {\n            if (rr(et(t))) throw vt(\"Attempting to access detached ArrayBuffer\")\n        }\n        const o = it(n),\n            i = A(t),\n            s = $t(i.length);\n        if (e === 1 / 0 || s + e > o) throw bt(\"Offset is out of bounds\");\n        for (let t = 0; t < s; ++t) n[t + e] = Rt(i[t])\n    }\n\n    reverse() {\n        sr(this);\n        const t = ur(this);\n        return Q(t), this\n    }\n\n    fill(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this);\n        return Z(n, Rt(t), ...kt(r)), this\n    }\n\n    copyWithin(t: any, r: any, ...n: any[]) {\n        sr(this);\n        const e = ur(this);\n        return $(e, t, r, ...kt(n)), this\n    }\n\n    sort(...t:any) {\n        sr(this);\n        const r = ur(this),\n            n = void 0 !== t[0] ? t[0] : nr;\n        // @ts-ignore\n        return tt(r, ((t, r) => n(Mt(t), Mt(r)))), this\n    }\n\n    slice(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar);\n        if (n === ar) {\n            const n = new ct(et(r), ot(r), it(r));\n            // @ts-ignore\n            return new ar(et(rt(n, ...kt(t))))\n        }\n        const e = it(r),\n            o = Zt(t[0]),\n            i = void 0 === t[1] ? e : Zt(t[1]);\n        let s, c;\n        s = o === -1 / 0 ? 0 : o < 0 ? e + o > 0 ? e + o : 0 : e < o ? e : o, c = i === -1 / 0 ? 0 : i < 0 ? e + i > 0 ? e + i : 0 : e < i ? e : i;\n        const u = c - s > 0 ? c - s : 0,\n            f = new n(u);\n        if (cr(f, u), 0 === u) return f;\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        let h = 0;\n        for (; s < c;) f[h] = Mt(r[s]), ++s, ++h;\n        return f\n    }\n\n    subarray(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar),\n            e = new ct(et(r), ot(r), it(r)),\n            o = nt(e, ...kt(t)),\n            i = new n(et(o), ot(o), it(o));\n        // @ts-ignore\n        return cr(i), i\n    }\n\n    indexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return -1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        for (let r = o; r < e; ++r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n        lastIndexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = r.length >= 1 ? Zt(r[0]) : e - 1;\n        if (o === -1 / 0) return -1;\n        o >= 0 ? o = o < e - 1 ? o : e - 1 : o += e;\n        for (let r = o; r >= 0; --r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n    includes(t: unknown, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return !1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        const i = w(t);\n        for (let r = o; r < e; ++r) {\n            const e = Mt(n[r]);\n            if (i && w(e)) return !0;\n            if (e === t) return !0\n        }\n        return !1\n    }\n\n    join(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return _(r, ...kt(t))\n    }\n\n    toLocaleString(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return L(r, ...kt(t))\n    }\n\n    get [v]() {\n        if (ir(this)) return \"Float16Array\"\n    }\n}\n\nB(ar, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(ar, er,\n    {}), l(ar, Y);\nconst yr = ar.prototype;\n\nfunction pr(t: any, r: any, ...n: any[]) {\n    return Mt(gt(t, r, ...kt(n)))\n}\n\nfunction wr(t: any, r: any, n: number, ...e: any[]) {\n    return dt(t, r, Rt(n), ...kt(e))\n}\n\nB(yr, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(yr, g,\n    {\n        value: yr.values,\n        writable: !0,\n        configurable: !0\n    }), l(yr, G);\nexport\n{\n    ar as Float16Array, pr as getFloat16, Dt as hfround, ir as isFloat16Array, wr as setFloat16\n};","import type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {GLDataTexture} from \"@xeokit/webglutils\";\nimport {Float16Array} from \"./float16\";\n\nconst emptyDataTexture = new GLDataTexture({textureWidth: 0, textureHeight: 0});\n\n/**\n * Enables the currently bound ````WebGLTexture```` to be used as a data texture.\n */\nexport function disableFilteringForBoundTexture(gl: WebGL2RenderingContext) {\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n}\n\n/**\n * Creates a GLDataTexture that holds per-geometry matrices for positions decode.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param positionDecodeMatrices Positions decode matrix for each mesh in the layer\n */\nexport function createEachGeometryMatricesDataTexture(gl: WebGL2RenderingContext, positionDecodeMatrices: FloatArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: Positions decode matrix\n\n    const textureHeight = positionDecodeMatrices.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < positionDecodeMatrices.length; i++) {\n        textureData.set(positionDecodeMatrices [i], i * 24);   // 4x4 values\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n\n/**\n * Creates a GLDataTexture containing the given vertex positions.\n */\nexport function createPositionsDataTexture(gl: WebGL2RenderingContext, positions: FloatArrayParam): GLDataTexture {\n    const numVertices = positions.length / 3;\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(numVertices / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint16Array(textureDataSize);\n    //   dataTextureRamStats.sizeDataTexturePositions += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(positions, 0);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    // @ts-ignore\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 8-bit indices.\n */\nexport function createIndices8BitDataTexture(gl: WebGL2RenderingContext, indices_8Bits: IntArrayParam): GLDataTexture {\n    if (indices_8Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_8Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint8Array(textureDataSize);\n    //dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    textureData.set(indices_8Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 16-bit indices.\n */\nexport function createIndices16BitDataTexture(gl: WebGL2RenderingContext, indices_16Bits: IntArrayParam): GLDataTexture {\n    if (indices_16Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_16Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint16Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(indices_16Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 32-bit indices.\n */\nexport function createIndices32BitDataTexture(gl: WebGL2RenderingContext, indices_32Bits: IntArrayParam): GLDataTexture {\n    if (indices_32Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(indices_32Bits.length / 3 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 3;\n    const textureData = new Uint32Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(indices_32Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 8-bit edge indices.\n */\nexport function createEdgeIndices8BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_8Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_8Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_8Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint8Array(textureDataSize);\n    // dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_8Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 16-bit edge indices.\n */\nexport function createEdgeIndices16BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_16Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_16Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_16Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint16Array(textureDataSize);\n    //     dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_16Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given 32-bit edge indices.\n */\nexport function createEdgeIndices32BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_32Bits: IntArrayParam): GLDataTexture {\n    if (edgeIndices_32Bits.length == 0) {\n        return emptyDataTexture;\n    }\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(edgeIndices_32Bits.length / 2 / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight * 2;\n    const textureData = new Uint32Array(textureDataSize);\n    //   dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n    textureData.fill(0);\n    // @ts-ignore\n    textureData.set(edgeIndices_32Bits, 0)\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n    disableFilteringForBoundTexture(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing per-mesh colors, pick colors, flags, vertex portion bases, indices portion bases, edge indices portion bases\n *\n * The texture will have:\n * - 4 RGBA columns per row: for each mesh (pick) color and flags(2)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param colors Color per mesh\n * @param pickColors Pick color per mesh\n * @param vertexBases Vertex index base for each mesh\n * @param indexBaseOffsets For triangles: array of offsets between the (gl_VertexID / 3) and the position where the indices start in the texture layer\n * @param edgeIndexBaseOffsets For edges: Array of offsets between the (gl_VertexID / 2) and the position where the edge indices start in the texture layer\n */\nexport function createEachMeshAttributesDataTexture(gl: WebGL2RenderingContext, colors: FloatArrayParam[], pickColors: FloatArrayParam[], vertexBases: IntArrayParam, indexBaseOffsets: IntArrayParam, edgeIndexBaseOffsets: IntArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: (RGBA) mesh color RGBA\n    //    - col1: (packed Uint32 as RGBA) mesh pick color\n    //    - col2: (packed 4 bytes as RGBA) mesh flags\n    //    - col3: (packed 4 bytes as RGBA) mesh flags2\n    //    - col4: (packed Uint32 bytes as RGBA) vertex base\n    //    - col5: (packed Uint32 bytes as RGBA) index base offset\n    //    - col6: (packed Uint32 bytes as RGBA) edge index base offset\n    //    - col7: (packed Uint32 bytes as RGBA) RTC view matrix index base offset\n\n    const textureHeight = colors.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 8;\n    const textureData = new Uint8Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < textureHeight; i++) {\n        textureData.set(colors [i], i * 28 + 0); // mesh color\n        textureData.set(pickColors [i], i * 28 + 4); // mesh pick color\n        textureData.set([0, 0, 0, 0], i * 28 + 8);  // mesh flags\n        textureData.set([0, 0, 0, 0], i * 28 + 12); // mesh flags2\n        textureData.set([(vertexBases[i] >> 24) & 255, (vertexBases[i] >> 16) & 255, (vertexBases[i] >> 8) & 255, (vertexBases[i]) & 255], i * 28 + 16);   // vertex base\n        textureData.set([(indexBaseOffsets[i] >> 24) & 255, (indexBaseOffsets[i] >> 16) & 255, (indexBaseOffsets[i] >> 8) & 255, (indexBaseOffsets[i]) & 255], i * 28 + 20);    // triangles index base offset\n        textureData.set([(edgeIndexBaseOffsets[i] >> 24) & 255, (edgeIndexBaseOffsets[i] >> 16) & 255, (edgeIndexBaseOffsets[i] >> 8) & 255, (edgeIndexBaseOffsets[i]) & 255], i * 28 + 24);    // edge index base offset\n    //    textureData.set([(rtcViewMatIndices[i] >> 24) & 255, (rtcViewMatIndices[i] >> 16) & 255, (rtcViewMatIndices[i] >> 8) & 255, (rtcViewMatIndices[i]) & 255], i * 28 + 28);    // RTC view matrix\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n}\n\n/**\n * Creates GLDataTexture containing a 3D offset for each mesh\n *\n * @param gl\n * @param offsets An offset for each mesh\n */\nexport function createEachEdgeOffsetDataTexture(gl: WebGL2RenderingContext, offsets: FloatArrayParam[]) :GLDataTexture{\n    const textureHeight = offsets.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 1;\n    const textureData = new Float32Array(3 * textureWidth * textureHeight);\n    for (let i = 0; i < offsets.length; i++) {\n        textureData.set(offsets [i], i * 3); // mesh offset\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32F, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB, gl.FLOAT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n}\n\n/**\n * Creates a GLDataTexture that holds per-mesh matrices for positions decode, position modeling, and normals modeling.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of meshes\n *\n * @param gl\n * @param positionDecodeMatrices Positions decode matrix for each mesh in the layer\n * @param matrices Positions instancing matrix for each mesh in the layer. Null if the meshes are not instanced.\n */\nexport function createEachMeshMatricesDataTexture(gl: WebGL2RenderingContext, positionDecodeMatrices: FloatArrayParam, matrices: FloatArrayParam): GLDataTexture {\n\n    // Texture has one row per mesh:\n    //\n    //    - col0: Positions decode matrix\n    //    - col1: Positions modeling matrix\n    //    - col2: Normals modeling matrix\n\n    const textureHeight = positionDecodeMatrices.length;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    for (let i = 0; i < positionDecodeMatrices.length; i++) {\n        textureData.set(positionDecodeMatrices [i], i * 48);   // 4x4 values\n        textureData.set(matrices [i], i * 48 + 16);   // 4x4 values\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture containing the given mesh IDs.\n * This type of texture is used for a lookup table, of mesh IDs for given keys.\n *\n * @param gl\n * @param meshIds\n */\nexport function createPointerTableDataTexture(gl: WebGL2RenderingContext, meshIds: IntArrayParam): GLDataTexture {\n    if (meshIds.length == 0) {\n        return emptyDataTexture;\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    const lenArray = meshIds.length;\n    const textureWidth = 1024;\n    const textureHeight = Math.ceil(lenArray / textureWidth);\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureDataSize = textureWidth * textureHeight;\n    const textureData = new Uint16Array(textureDataSize);\n    textureData.set(meshIds, 0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R16UI, textureWidth, textureHeight);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RED_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n\n/**\n * Creates a GLDataTexture that holds matrices.\n *\n * The texture will have:\n * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n * - N rows where N is the number of matrices\n *\n * @param gl\n * @param numMatrices\n */\nexport function createMatricesDataTexture(gl: WebGL2RenderingContext, numMatrices: number): GLDataTexture {\n    const textureHeight = numMatrices;\n    if (textureHeight == 0) {\n        throw \"texture height == 0\";\n    }\n    const textureWidth = 4 * 3;\n    // @ts-ignore\n    const textureData = new Float16Array(4 * textureWidth * textureHeight);\n    const texture = gl.createTexture();\n    if (!texture) {\n        return emptyDataTexture;\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n    // @ts-ignore\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return new GLDataTexture({gl, texture, textureWidth, textureHeight});\n}\n","export class DataTextureBuffer { // Temp data buffer as we build a Layer; converted into data textures once Layer is built\n\n    positionsDecompressMatrices: number[];\n    positionsCompressed: number[];\n    indices_8Bits: number[];\n    indices_16Bits: number[];\n    indices_32Bits: number[];\n    edgeIndices_8Bits: number[];\n    edgeIndices_16Bits: number[];\n    edgeIndices_32Bits: number[];\n\n    eachPrimitiveMesh_8Bits: number[];\n    eachPrimitiveMesh_16Bits: number[];\n    eachPrimitiveMesh_32Bits: number[];\n\n    eachEdgeMesh_8Bits: number[];\n    eachEdgeMesh_16Bits: number[];\n    eachEdgeMesh_32Bits: number[];\n\n    eachMeshVertexPortionBase: number[];\n    eachMeshVertexPortionOffset: number[];\n    eachMeshEdgeIndicesOffset: number[];\n\n    eachMeshColor: any[];\n    eachMeshPickColor: any[];\n    eachMeshMatrices: any[];\n    eachMeshNormalMatrix: any[];\n    eachMeshPositionsDecompressMatrix: any[];\n    eachMeshFlags1: any[];\n    eachMeshFlags2: any[];\n    eachEdgeOffset: any[];\n    eachMeshParts: number[];\n\n    constructor() {\n        this.positionsDecompressMatrices = [];\n        this.positionsCompressed = [];\n        this.indices_8Bits = [];\n        this.indices_16Bits = [];\n        this.indices_32Bits = [];\n        this.edgeIndices_8Bits = [];\n        this.edgeIndices_16Bits = [];\n        this.edgeIndices_32Bits = [];\n        this.eachMeshVertexPortionBase = [];\n        this.eachMeshVertexPortionOffset = [];\n        this.eachMeshEdgeIndicesOffset = [];\n        this.eachMeshColor = [];\n        this.eachMeshPickColor = [];\n        this.eachMeshMatrices = [];\n        this.eachMeshNormalMatrix = [];\n        this.eachMeshPositionsDecompressMatrix = [];\n        this.eachMeshFlags1 = [];\n        this.eachMeshFlags2 = [];\n        this.eachPrimitiveMesh_32Bits = [];\n        this.eachPrimitiveMesh_16Bits = [];\n        this.eachPrimitiveMesh_8Bits = [];\n        this.eachEdgeMesh_32Bits = [];\n        this.eachEdgeMesh_16Bits = [];\n        this.eachEdgeMesh_8Bits = [];\n        this.eachEdgeOffset = [];\n        this.eachMeshParts = [];\n    }\n}","import {createVec4, identityMat4, transformPoint4} from \"@xeokit/matrix\";\nimport type {View} from \"@xeokit/viewer\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nimport type {RendererModelImpl} from \"./RendererModelImpl\";\nimport {DataTextureSet} from \"./DataTextureSet\";\nimport {MeshCounts} from \"./MeshCounts\";\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport {RENDER_PASSES} from './RENDER_PASSES';\nimport {LinesPrimitive, PointsPrimitive} from \"@xeokit/constants\";\nimport {AABB3ToOBB3, collapseAABB3, expandAABB3Point3} from \"@xeokit/boundaries\";\nimport type {GeometryBucketParams, GeometryCompressedParams, MeshParams} from \"@xeokit/scene\";\nimport type {RendererTextureSetImpl} from \"./RendererTextureSetImpl\";\nimport {\n    createEachEdgeOffsetDataTexture,\n    createEachMeshAttributesDataTexture,\n    createEachMeshMatricesDataTexture,\n    createEdgeIndices16BitDataTexture,\n    createEdgeIndices32BitDataTexture,\n    createEdgeIndices8BitDataTexture,\n    createIndices16BitDataTexture,\n    createIndices32BitDataTexture,\n    createIndices8BitDataTexture,\n    createPositionsDataTexture\n} from \"./dataTextures\";\nimport type {LayerParams} from \"./LayerParams\";\nimport type {GeometryBucketHandle} from \"./GeometryBucketHandle\";\nimport {DataTextureBuffer} from \"./DataTextureBuffer\";\n\nconst MAX_MESH_PARTS = (1 << 12); // 12 bits \nconst MAX_DATATEXTURE_HEIGHT = (1 << 11); // 2048\nconst INDICES_EDGE_INDICES_ALIGNMENT_SIZE = 8;\n\nconst identityMatrix = identityMat4();\nconst tempVec4a = createVec4([0, 0, 0, 1]);\nconst tempVec4b = createVec4([0, 0, 0, 1]);\nconst tempVec4c = createVec4([0, 0, 0, 1]);\nconst tempUint8Array4 = new Uint8Array(4);\nconst tempFloat32Array3 = new Float32Array(3);\n\n\ninterface GeometryHandle { // Storage handle for a geometry within a Layer\n    aabb: FloatArrayParam;\n    positionsDecompressMatrix: FloatArrayParam;\n    geometryBucketHandles: GeometryBucketHandle[]\n}\n\ninterface MeshPartParams {\n    aabb: FloatArrayParam;\n}\n\ninterface MeshPartHandle {\n    vertsBase: number;\n    numVerts: number;\n}\n\n/**\n * @private\n */\nexport interface LayerRenderState { // What a LayerRenderer needs to render this Layer\n    materialTextureSet: RendererTextureSetImpl; // Color, opacity, metal/roughness, ambient occlusion maps\n    dataTextureSet: DataTextureSet;  // Data textures containing geometry, transforms, flags and material attributes\n    primitive: number; // Layer primitive type\n    numIndices8Bits: number; // How many 8-bit encodable indices in layer\n    numIndices16Bits: number; // How many 16-bit encodable indices in layer\n    numIndices32Bits: number; // How many 32-bit encodable indices in layer\n    numEdgeIndices8Bits: number; // How many 8-bit encodable edge indices in layer\n    numEdgeIndices16Bits: number; // How many 16-bit encodable edge indices in layer\n    numEdgeIndices32Bits: number; // How many 32-bit encodable edge indices in layer\n    numVertices: number; // How many vertices in layer\n}\n\n/**\n * @private\n */\nexport class Layer {\n\n    rendererModel: RendererModelImpl;\n    layerIndex: number;\n    meshCounts: MeshCounts;\n    renderState: LayerRenderState;\n\n    #gl: WebGL2RenderingContext;\n    #view: View;\n    #dataTextureBuffer: DataTextureBuffer;\n    #geometryHandles: { [key: string]: any };\n    #meshPartHandles: MeshPartHandle[];\n    #numMeshParts: number;\n    #deferredSetFlagsActive: boolean;\n    #deferredSetFlagsDirty: boolean;\n    #built: boolean;\n\n    constructor(layerParams: LayerParams, renderers?: any) {\n\n        this.meshCounts = new MeshCounts();\n        this.layerIndex = layerParams.layerIndex;\n        this.rendererModel = layerParams.rendererModel;\n\n        this.renderState = <LayerRenderState>{\n            primitive: layerParams.primitive,\n            dataTextureSet: new DataTextureSet(),\n            numIndices8Bits: 0,\n            numIndices16Bits: 0,\n            numIndices32Bits: 0,\n            numEdgeIndices8Bits: 0,\n            numEdgeIndices16Bits: 0,\n            numEdgeIndices32Bits: 0,\n            numVertices: 0\n        };\n\n        this.#gl = layerParams.gl;\n        this.#view = layerParams.view;\n        this.#dataTextureBuffer = new DataTextureBuffer();\n        this.#numMeshParts = 0;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n        this.#built = false;\n\n        this.beginDeferredFlags();\n    }\n\n    get hash() {\n        return `layer-${this.renderState.primitive}`;\n    }\n\n    canCreateMesh(geometryCompressedParams: GeometryCompressedParams): boolean {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const renderState = this.renderState;\n        const numGeometryBuckets = geometryCompressedParams.geometryBuckets.length;\n        if ((this.#numMeshParts + numGeometryBuckets) > MAX_MESH_PARTS) {\n            return false;\n        }\n        let numPositions = 0;\n        let numIndices = 0;\n        for (let i = 0; i < numGeometryBuckets; i++) {\n            const geometryBucket = geometryCompressedParams.geometryBuckets[i];\n            numPositions += geometryBucket.positionsCompressed.length;\n            if (geometryBucket.indices) {\n                numIndices += geometryBucket.indices.length;\n            }\n        }\n        const primVerts = (geometryCompressedParams.primitive === PointsPrimitive) ? 1 : (geometryCompressedParams.primitive == LinesPrimitive ? 2 : 3);\n        const maxIndicesOfAnyBits = Math.max(renderState.numIndices8Bits, renderState.numIndices16Bits, renderState.numIndices32Bits);\n        const numVerts = numPositions / primVerts;\n        let numTriangleIndices = numIndices / 3;\n        return (renderState.numVertices + numVerts) <= MAX_DATATEXTURE_HEIGHT * 1024 && (numTriangleIndices + numIndices) <= MAX_DATATEXTURE_HEIGHT * 1024;\n    }\n\n    hasGeometry(geometryId: string): boolean {\n        return this.#geometryHandles[geometryId];\n    }\n\n    createGeometryCompressed(geometryCompressedParams: GeometryCompressedParams) {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const geometryBucketHandles = [];\n        for (let i = 0, len = geometryCompressedParams.geometryBuckets.length; i < len; i++) {\n            geometryBucketHandles.push(this.#createGeometryBucket(geometryCompressedParams.geometryBuckets[i]));\n        }\n        this.#geometryHandles[geometryCompressedParams.id] = <GeometryHandle>{\n            id: geometryCompressedParams.id,\n            aabb: geometryCompressedParams.aabb,\n            positionsDecompressMatrix: geometryCompressedParams.positionsDecompressMatrix,\n            geometryBucketHandles\n        };\n    }\n\n    #createGeometryBucket(geometryBucket: GeometryBucketParams): GeometryBucketHandle {\n        const renderState = this.renderState;\n        if (geometryBucket.indices) {  // Align indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const numVertsForPrim = (this.renderState.primitive === PointsPrimitive ? 1 : (this.renderState.primitive === LinesPrimitive ? 2 : 3));\n            const alignedIndicesLen = Math.ceil((geometryBucket.indices.length / numVertsForPrim) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * numVertsForPrim;\n            const alignedIndices = new Uint32Array(alignedIndicesLen);\n            alignedIndices.fill(0);\n            alignedIndices.set(geometryBucket.indices);\n            geometryBucket.indices = alignedIndices;\n        }\n        if (geometryBucket.edgeIndices) {  // Align edge indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const alignedEdgeIndicesLen = Math.ceil((geometryBucket.edgeIndices.length / 2) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * 2;\n            const alignedEdgeIndices = new Uint32Array(alignedEdgeIndicesLen);\n            alignedEdgeIndices.fill(0);\n            alignedEdgeIndices.set(geometryBucket.edgeIndices);\n            geometryBucket.edgeIndices = alignedEdgeIndices;\n        }\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const positionsCompressed = geometryBucket.positionsCompressed;\n        const indices = geometryBucket.indices;\n        const edgeIndices = geometryBucket.edgeIndices;\n        const vertexBase = dataTextureBuffer.positionsCompressed.length / 3;\n        const numVertices = positionsCompressed.length / 3;\n        for (let i = 0, len = positionsCompressed.length; i < len; i++) {\n            dataTextureBuffer.positionsCompressed.push(positionsCompressed[i]);\n        }\n        let indicesBase;\n        let numTriangles = 0;\n        if (indices) {\n            numTriangles = indices.length / 3;\n            let indicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                indicesBuffer = dataTextureBuffer.indices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                indicesBuffer = dataTextureBuffer.indices_16Bits;\n            } else {\n                indicesBuffer = dataTextureBuffer.indices_32Bits;\n            }\n            indicesBase = indicesBuffer.length / 3;\n            for (let i = 0, len = indices.length; i < len; i++) {\n                indicesBuffer.push(indices[i]);\n            }\n        }\n        let edgeIndicesBase;\n        let numEdges = 0;\n        if (edgeIndices) {\n            numEdges = edgeIndices.length / 2;\n            let edgeIndicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_16Bits;\n            } else {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_32Bits;\n            }\n            edgeIndicesBase = edgeIndicesBuffer.length / 2;\n            for (let i = 0, len = edgeIndices.length; i < len; i++) {\n                edgeIndicesBuffer.push(edgeIndices[i]);\n            }\n        }\n        renderState.numVertices += numVertices;\n        return <GeometryBucketHandle>{\n            vertexBase,\n            numVertices,\n            numTriangles,\n            numEdges,\n            indicesBase,\n            edgeIndicesBase\n        };\n    }\n\n    createMesh(meshParams: MeshParams): number {\n        if (this.#built) {\n            throw new Error(\"Already built\");\n        }\n        const meshIndex = this.meshCounts.numMeshes;\n        const meshPartIds: number[] = [];\n        if (!meshParams.geometryId) {\n            throw new Error(\"geometryId expected\");\n        }\n        const geometryHandle = this.#geometryHandles[meshParams.geometryId];\n        if (!geometryHandle) {\n            throw new Error(\"Geometry not found\");\n        }\n        geometryHandle.geometryBucketHandles.forEach((geometryBucketHandle: GeometryBucketHandle) => {\n            const meshPartId = this.#createMeshPart(meshParams, geometryHandle, geometryBucketHandle);\n            meshPartIds.push(meshPartId);\n        });\n        const worldAABB = collapseAABB3();\n        const geometryOBB = AABB3ToOBB3(geometryHandle.aabb);\n        for (let i = 0, len = geometryOBB.length; i < len; i += 4) {\n            tempVec4a[0] = geometryOBB[i + 0];\n            tempVec4a[1] = geometryOBB[i + 1];\n            tempVec4a[2] = geometryOBB[i + 2];\n            if (meshParams.matrix) {\n                transformPoint4(meshParams.matrix, tempVec4a, tempVec4b);\n                // transformPoint4(meshParams.matrix, tempVec4b, tempVec4c);\n                expandAABB3Point3(worldAABB, tempVec4b);\n            } else {\n                expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n        this.meshCounts.numMeshes++;\n        return meshIndex;\n    }\n\n    #createMeshPart(meshParams: MeshParams, geometryHandle: GeometryHandle, geometryBucketHandle: GeometryBucketHandle): number {\n\n        const dataTextureBuffer = this.#dataTextureBuffer;\n\n        const renderState = this.renderState;\n\n        const matrix = meshParams.matrix || identityMatrix;\n        const color = meshParams.color || [255, 255, 255];\n        const opacity = meshParams.opacity;\n        const metallic = meshParams.metallic;\n        const roughness = meshParams.roughness;\n\n        const positionsIndex = dataTextureBuffer.positionsCompressed.length;\n        const vertsIndex = positionsIndex / 3;\n\n        dataTextureBuffer.eachMeshPositionsDecompressMatrix.push(geometryHandle.positionsDecompressMatrix);\n        dataTextureBuffer.eachMeshMatrices.push(matrix);\n        dataTextureBuffer.eachMeshColor.push([color[0], color[1], color[2], 255]);\n        dataTextureBuffer.eachMeshPickColor.push(meshParams.pickColor);\n\n        let currentNumIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumIndices = renderState.numIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumIndices = renderState.numIndices16Bits;\n        } else {\n            currentNumIndices = renderState.numIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshVertexPortionBase.push(geometryBucketHandle.vertexBase);\n        dataTextureBuffer.eachMeshVertexPortionOffset.push(currentNumIndices / 3 - geometryBucketHandle.indicesBase);\n\n        // Edge indices\n\n        let currentNumEdgeIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices16Bits;\n        } else {\n            currentNumEdgeIndices = renderState.numEdgeIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshEdgeIndicesOffset.push(currentNumEdgeIndices / 2 - geometryBucketHandle.edgeIndicesBase);\n\n        // Primitive -> mesh lookup\n\n        const meshPartId = this.#meshPartHandles.length;\n\n        if (geometryBucketHandle.numTriangles > 0) {\n            const numIndices = geometryBucketHandle.numTriangles * 3;\n            let eachPrimitiveMeshBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_8Bits;\n                renderState.numIndices8Bits += numIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_16Bits;\n                renderState.numIndices16Bits += numIndices;\n            } else {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_32Bits;\n                renderState.numIndices32Bits += numIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numTriangles; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                eachPrimitiveMeshBuffer.push(meshPartId);\n            }\n        }\n\n        // Edge index -> mesh lookup\n\n        if (geometryBucketHandle.numEdges > 0) {\n            let numEdgeIndices = geometryBucketHandle.numEdges * 2;\n            let edgeIndicesMeshIdBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_8Bits;\n                renderState.numEdgeIndices8Bits += numEdgeIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_16Bits;\n                renderState.numEdgeIndices16Bits += numEdgeIndices;\n            } else {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_32Bits;\n                renderState.numEdgeIndices32Bits += numEdgeIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numEdges; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                edgeIndicesMeshIdBuffer.push(meshPartId);\n            }\n        }\n        dataTextureBuffer.eachEdgeOffset.push([0, 0, 0]);\n\n        this.#meshPartHandles.push(<MeshPartHandle>{\n            vertsBase: vertsIndex,\n            numVerts: geometryBucketHandle.numTriangles //////////////////// TODO\n        });\n        this.#numMeshParts++;\n        return meshPartId;\n    }\n\n    build() {\n        if (this.#built) {\n            throw new Error(\"Already built\");\n        }\n        const gl = this.#gl;\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        dataTextureSet.positions = createPositionsDataTexture(gl, dataTextureBuffer.positionsCompressed);\n        dataTextureSet.indices_8Bits = createIndices8BitDataTexture(gl, dataTextureBuffer.indices_8Bits);\n        dataTextureSet.indices_16Bits = createIndices16BitDataTexture(gl, dataTextureBuffer.indices_16Bits);\n        dataTextureSet.indices_32Bits = createIndices32BitDataTexture(gl, dataTextureBuffer.indices_32Bits);\n        dataTextureSet.edgeIndices_8Bits = createEdgeIndices8BitDataTexture(gl, dataTextureBuffer.edgeIndices_8Bits);\n        dataTextureSet.edgeIndices_16Bits = createEdgeIndices16BitDataTexture(gl, dataTextureBuffer.edgeIndices_16Bits);\n        dataTextureSet.edgeIndices_32Bits = createEdgeIndices32BitDataTexture(gl, dataTextureBuffer.edgeIndices_32Bits);\n        dataTextureSet.eachMeshAttributes = createEachMeshAttributesDataTexture(gl,\n            dataTextureBuffer.eachMeshColor,\n            dataTextureBuffer.eachMeshPickColor,\n            dataTextureBuffer.eachMeshVertexPortionBase,\n            dataTextureBuffer.eachMeshVertexPortionOffset,\n            dataTextureBuffer.eachMeshEdgeIndicesOffset);\n        dataTextureSet.eachMeshMatrices = createEachMeshMatricesDataTexture(gl, dataTextureBuffer.eachMeshPositionsDecompressMatrix, dataTextureBuffer.eachMeshMatrices);\n        // dataTextureSet.eachPrimitiveMesh8BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_8Bits);\n        // dataTextureSet.eachPrimitiveMesh16BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_16Bits);\n        // dataTextureSet.eachPrimitiveMesh32BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_32Bits);\n        // dataTextureSet.eachEdgeMesh8BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_8Bits);\n        // dataTextureSet.eachEdgeMesh16BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_16Bits);\n        // dataTextureSet.eachEdgeMesh32BitsDataTexture = createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_32Bits);\n        dataTextureSet.eachEdgeOffset = createEachEdgeOffsetDataTexture(gl, dataTextureBuffer.eachEdgeOffset);\n        dataTextureSet.build();\n        // @ts-ignore\n        this.#dataTextureBuffer = null;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n        this.#built = true;\n    }\n\n    isEmpty() {\n        return this.meshCounts.numMeshes == 0;\n    }\n\n    initFlags(meshIndex: number, flags: number, meshTransparent: boolean) {\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            this.meshCounts.numVisible++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        }\n        if (meshTransparent) {\n            this.meshCounts.numTransparent++;\n        }\n        this.#setMeshFlags(meshIndex, flags, meshTransparent);\n        this.#setMeshFlags2(meshIndex, flags);\n    }\n\n    beginDeferredFlags() {\n        this.#deferredSetFlagsActive = true;\n    }\n\n    commitDeferredFlags() {\n        this.#deferredSetFlagsActive = false;\n        if (!this.#deferredSetFlagsDirty) {\n            return;\n        }\n        this.#deferredSetFlagsDirty = false;\n        const gl = this.#gl;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachMeshAttributes.textureWidth, dataTextureSet.eachMeshAttributes.textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, dataTextureSet.eachMeshAttributes.textureData);\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachEdgeOffset.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachEdgeOffset.textureWidth, dataTextureSet.eachEdgeOffset.textureHeight, gl.RGB, gl.FLOAT, dataTextureSet.eachEdgeOffset.textureData);\n    }\n\n    flushInitFlags() {\n        this.commitDeferredFlags();\n    }\n\n    setMeshVisible(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            debugger;\n            this.meshCounts.numVisible++;\n        } else {\n            this.meshCounts.numVisible--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshHighlighted(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        } else {\n            this.meshCounts.numHighlighted--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshXRayed(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        } else {\n            this.meshCounts.numXRayed--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshSelected(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        } else {\n            this.meshCounts.numSelected--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshEdges(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        } else {\n            this.meshCounts.numEdges--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshClippable(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        } else {\n            this.meshCounts.numClippable--;\n        }\n        this.#setMeshFlags2(meshIndex, flags);\n    }\n\n    setMeshCulled(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        } else {\n            this.meshCounts.numCulled--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshCollidable(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n    }\n\n    setMeshPickable(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        } else {\n            this.meshCounts.numPickable--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    setMeshColor(meshIndex: number, color: FloatArrayParam, transparent?: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = color[0];\n        tempUint8Array4 [1] = color[1];\n        tempUint8Array4 [2] = color[2];\n        tempUint8Array4 [3] = color[3];\n        // @ts-ignore\n        dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshTransparent(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (transparent) {\n            this.meshCounts.numTransparent++;\n            this.meshCounts.numTransparent++;\n        } else {\n            this.meshCounts.numTransparent--;\n            this.meshCounts.numTransparent--;\n        }\n        this.#setMeshFlags(meshIndex, flags, transparent);\n    }\n\n    #setMeshFlags(meshIndex: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const visible = !!(flags & SCENE_OBJECT_FLAGS.VISIBLE);\n        const xrayed = !!(flags & SCENE_OBJECT_FLAGS.XRAYED);\n        const highlighted = !!(flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & SCENE_OBJECT_FLAGS.SELECTED);\n        const edges = !!(flags & SCENE_OBJECT_FLAGS.EDGES);\n        const pickable = !!(flags & SCENE_OBJECT_FLAGS.PICKABLE);\n        const culled = !!(flags & SCENE_OBJECT_FLAGS.CULLED);\n        let f0; // Color\n        if (!visible || culled || xrayed) { // Highlight & select are layered on top of color - not mutually exclusive\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n        let f1; // Silhouette\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f2 = 0; // Edges\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (transparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED; // Pick\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = f0;\n        tempUint8Array4 [1] = f1;\n        tempUint8Array4 [2] = f2;\n        tempUint8Array4 [3] = f3;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28 + 8);\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 2, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    #setMeshFlags2(meshIndex: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const clippable = !!(flags & SCENE_OBJECT_FLAGS.CLIPPABLE) ? 255 : 0;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = clippable;\n        tempUint8Array4 [1] = 0;\n        tempUint8Array4 [2] = 1;\n        tempUint8Array4 [3] = 2;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28 + 12); // Flags\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 3, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshOffset(meshIndex: number, offset: FloatArrayParam) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempFloat32Array3 [0] = offset[0];\n        tempFloat32Array3 [1] = offset[1];\n        tempFloat32Array3 [2] = offset[2];\n        // dataTextureSet.eachMeshOffset.textureData.set(tempFloat32Array3, meshIndex * 3);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        //gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshOffset.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGB, gl.FLOAT, tempFloat32Array3);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshMatrix(meshIndex: number, matrix: FloatArrayParam) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n\n    }\n\n    setMeshViewMatrixIndex(meshIndex: number, index: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        // tempUint8Array4 [0] = color[0];\n        // tempUint8Array4 [1] = color[1];\n        // tempUint8Array4 [2] = color[2];\n        // tempUint8Array4 [3] = color[3];\n        // // @ts-ignore\n        // dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshIndex * 28);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // // @ts-ignore\n        // gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        // gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshIndex, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    destroy() {\n        this.renderState.dataTextureSet.destroy();\n    }\n}\n\n","import type {Geometry, RendererGeometry} from \"@xeokit/scene\";\n\n/**\n * @private\n */\nexport class RendererGeometryImpl implements RendererGeometry {\n\n    constructor() {\n    }\n}","import type {RendererTexture, Texture} from \"@xeokit/scene\";\nimport type {GLTexture} from \"@xeokit/webglutils\";\n\n/**\n * @private\n */\nexport class RendererTextureImpl implements RendererTexture {\n\n    texture: Texture | null;\n    texture2D: GLTexture;\n\n    constructor(texture: Texture | null, texture2D: GLTexture) {\n        this.texture = texture\n        this.texture2D = texture2D;\n    }\n\n    destroy() {\n        if (this.texture2D) {\n            this.texture2D.destroy();\n        }\n    }\n\n\n}\n","\nimport {createAABB3} from \"@xeokit/boundaries\";\nimport {createVec3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport type {RendererMeshImpl} from \"./RendererMeshImpl\";\nimport type {RendererViewObject} from \"@xeokit/viewer\";\nimport type {RendererModel, RendererObject, SceneModel, SceneObject} from \"@xeokit/scene\";\n\nconst tempIntRGB = new Uint16Array([0, 0, 0]);\n\n/**\n * @private\n */\nexport class RendererObjectImpl implements RendererObject, RendererViewObject {\n\n    readonly id: string;\n    readonly model: SceneModel;\n    readonly sceneObject: SceneObject;\n    readonly layerId: string | null;\n\n    readonly rendererMeshes: RendererMeshImpl[];\n\n    #flags: number;\n    #aabb: FloatArrayParam;\n    #offsetAABB: FloatArrayParam;\n    #offset: FloatArrayParam;\n    #colorizeUpdated: boolean;\n    #opacityUpdated: boolean;\n\n    constructor(params: {\n        id: string,\n        rendererModel: RendererModel,\n        rendererMeshes: RendererMeshImpl[],\n        aabb: any,\n        layerId?: string\n    }) {\n        this.id = params.id;\n        //this.model = params.rendererModel;\n        this.rendererMeshes = params.rendererMeshes || [];\n        this.#flags = 0;\n        this.#aabb = params.aabb;\n        this.#offsetAABB = createAABB3(params.aabb);\n        this.#offset = createVec3();\n        this.#colorizeUpdated = false;\n        this.#opacityUpdated = false;\n\n        this.layerId = params.layerId || null;\n\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {  // TODO: tidier way? Refactor?\n            this.rendererMeshes[i].setSceneObject(this);\n        }\n    }\n\n    get aabb(): FloatArrayParam {\n        return this.#offsetAABB;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.VISIBLE) === visible) {\n            return;\n        }\n        this.#flags = visible ? this.#flags | SCENE_OBJECT_FLAGS.VISIBLE : this.#flags & ~SCENE_OBJECT_FLAGS.VISIBLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setVisible(this.#flags);\n        }\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) === highlighted) {\n            return;\n        }\n        this.#flags = highlighted ? this.#flags | SCENE_OBJECT_FLAGS.HIGHLIGHTED : this.#flags & ~SCENE_OBJECT_FLAGS.HIGHLIGHTED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setHighlighted(this.#flags);\n        }\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.XRAYED) === xrayed) {\n            return;\n        }\n        this.#flags = xrayed ? this.#flags | SCENE_OBJECT_FLAGS.XRAYED : this.#flags & ~SCENE_OBJECT_FLAGS.XRAYED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setXRayed(this.#flags);\n        }\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.SELECTED) === selected) {\n            return;\n        }\n        this.#flags = selected ? this.#flags | SCENE_OBJECT_FLAGS.SELECTED : this.#flags & ~SCENE_OBJECT_FLAGS.SELECTED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setSelected(this.#flags);\n        }\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.EDGES) === edges) {\n            return;\n        }\n        this.#flags = edges ? this.#flags | SCENE_OBJECT_FLAGS.EDGES : this.#flags & ~SCENE_OBJECT_FLAGS.EDGES;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setEdges(this.#flags);\n        }\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.CULLED) === culled) {\n            return;\n        }\n        this.#flags = culled ? this.#flags | SCENE_OBJECT_FLAGS.CULLED : this.#flags & ~SCENE_OBJECT_FLAGS.CULLED;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setCulled(this.#flags);\n        }\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        if ((!!(this.#flags & SCENE_OBJECT_FLAGS.CLIPPABLE)) === clippable) {\n            return;\n        }\n        this.#flags = clippable ? this.#flags | SCENE_OBJECT_FLAGS.CLIPPABLE : this.#flags & ~SCENE_OBJECT_FLAGS.CLIPPABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setClippable(this.#flags);\n        }\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.COLLIDABLE) === collidable) {\n            return;\n        }\n        this.#flags = collidable ? this.#flags | SCENE_OBJECT_FLAGS.COLLIDABLE : this.#flags & ~SCENE_OBJECT_FLAGS.COLLIDABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setCollidable(this.#flags);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.PICKABLE) === pickable) {\n            return;\n        }\n        this.#flags = pickable ? this.#flags | SCENE_OBJECT_FLAGS.PICKABLE : this.#flags & ~SCENE_OBJECT_FLAGS.PICKABLE;\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setPickable(this.#flags);\n        }\n    }\n\n    setColorize(viewIndex: number, color?: FloatArrayParam): void { // [0..1, 0..1, 0..1]\n        if (color) {\n            tempIntRGB[0] = Math.floor(color[0] * 255.0); // Quantize\n            tempIntRGB[1] = Math.floor(color[1] * 255.0);\n            tempIntRGB[2] = Math.floor(color[2] * 255.0);\n            for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n                this.rendererMeshes[i].setColorize(tempIntRGB);\n            }\n        } else {\n            for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n                this.rendererMeshes[i].setColorize(null);\n            }\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity?: number): void {\n        if (this.rendererMeshes.length === 0) {\n            return;\n        }\n        // @ts-ignore\n        const lastOpacityQuantized = this.rendererMeshes[0].colorize[3];\n        let opacityQuantized = 255;\n        if (opacity !== null && opacity !== undefined) {\n            if (opacity < 0) {\n                opacity = 0;\n            } else if (opacity > 1) {\n                opacity = 1;\n            }\n            opacityQuantized = Math.floor(opacity * 255.0); // Quantize\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        } else {\n            opacityQuantized = 255.0;\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        }\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].setOpacity(opacityQuantized, this.#flags);\n        }\n    }\n\n    setOffset(viewIndex: number, offset: FloatArrayParam): void {\n        // if (offset) {\n        //     this.#offset[0] = offset[0];\n        //     this.#offset[1] = offset[1];\n        //     this.#offset[2] = offset[2];\n        // } else {\n        //     this.#offset[0] = 0;\n        //     this.#offset[1] = 0;\n        //     this.#offset[2] = 0;\n        // }\n        // for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n        //     this.rendererMeshes[i].setOffset(this.#offset);\n        // }\n        // this.#offsetAABB[0] = this.#aabb[0] + this.#offset[0];\n        // this.#offsetAABB[1] = this.#aabb[1] + this.#offset[1];\n        // this.#offsetAABB[2] = this.#aabb[2] + this.#offset[2];\n        // this.#offsetAABB[3] = this.#aabb[3] + this.#offset[0];\n        // this.#offsetAABB[4] = this.#aabb[4] + this.#offset[1];\n        // this.#offsetAABB[5] = this.#aabb[5] + this.#offset[2];\n        // // this.scene.#aabbDirty = true;\n        // // this.scene._objectOffsetUpdated(this, offset);\n        // // this.rendererModel._aabbDirty = true;\n        // // this.rendererModel.glRedraw();\n    }\n\n    build(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].build(this.#flags);\n        }\n    }\n\n    finalize2(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].finalize2();\n        }\n    }\n\n    destroy(): void {\n        for (let i = 0, len = this.rendererMeshes.length; i < len; i++) {\n            this.rendererMeshes[i].destroy();\n        }\n    }\n}\n","import type {RendererGeometry, RendererMesh, RendererObject, RendererTextureSet, SceneObject} from \"@xeokit/scene\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createAABB3} from \"@xeokit/boundaries\";\n\nimport type {RenderContext} from \"./RenderContext\";\nimport type {Layer} from \"./Layer\";\nimport type {Pickable} from \"./Pickable\";\nimport {createMat4, mulMat4, transformPoint3, translationMat4c} from \"@xeokit/matrix\";\nimport type {Tile, TileManager} from \"./TileManager\";\n\nconst tempMat4a = createMat4();\nconst tempMat4b = createMat4();\n\n\n/**\n * @private\n */\nexport class RendererMeshImpl implements RendererMesh, Pickable {\n\n    id: string;\n    color: FloatArrayParam;\n    rendererGeometry: RendererGeometry;\n    rendererTextureSet: RendererTextureSet;\n    matrix: FloatArrayParam;\n    metallic: number;\n    roughness: number;\n    opacity: number;\n    pickId: number;\n    tileManager: TileManager;\n    tile: Tile;\n    sceneObjectRenderer: RendererObject | null;\n    aabb: FloatArrayParam;\n    layer: Layer;\n    meshIndex: number;\n    colorize: FloatArrayParam;\n    colorizing: boolean;\n    transparent: boolean;\n\n\n    constructor(params: {\n        tileManager: TileManager,\n        layer: Layer,\n        id: string,\n        matrix: FloatArrayParam;\n        metallic: number;\n        roughness: number;\n        color: FloatArrayParam,\n        opacity: number,\n        rendererTextureSet: RendererTextureSet\n        rendererGeometry: RendererGeometry,\n        meshIndex: number\n    }) {\n        this.sceneObjectRenderer = null;\n        this.tileManager = params.tileManager;\n        this.id = params.id;\n        this.pickId = 0;\n        this.color = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorize = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorizing = false;\n        this.transparent = (params.opacity < 255);\n        this.layer = params.layer;\n        this.matrix = params.matrix;\n        this.metallic = params.metallic;\n        this.roughness = params.roughness;\n        this.opacity = params.opacity;\n        this.aabb = createAABB3();\n        this.rendererTextureSet = params.rendererTextureSet;\n        this.rendererGeometry = params.rendererGeometry;\n        this.meshIndex = params.meshIndex;\n    }\n\n    delegatePickedEntity(): SceneObject {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    setSceneObject(sceneObjectRenderer: RendererObject) {\n        this.sceneObjectRenderer = sceneObjectRenderer;\n    }\n\n    build(flags: number) {\n        // @ts-ignore\n        this.layer.initFlags(this.meshIndex, flags, this.transparent);\n    }\n\n    finalize2() {\n        // @ts-ignore\n        if (this.layer.flushInitFlags) {\n            this.layer.flushInitFlags();\n        }\n    }\n\n    setVisible(flags: any) {\n        this.layer.setMeshVisible(this.meshIndex, flags, this.transparent);\n    }\n\n    setMatrix(matrix: FloatArrayParam): void {\n        const center = transformPoint3(matrix, [0, 0, 0]);\n        const oldTile = this.tile;\n        this.tile = oldTile ? this.tileManager.updateTileCenter(oldTile, center) : this.tileManager.getTile(center);\n        const tileChanged = !oldTile || oldTile.id !== this.tile.id;\n        const tileCenter = this.tile.center;\n        const needRTC = (tileCenter[0] !== 0 || tileCenter[1] !== 0 || tileCenter[2] !== 0);\n        this.layer.setMeshMatrix(this.meshIndex, needRTC\n            ? mulMat4(matrix, translationMat4c(-tileCenter[0], -tileCenter[1], -tileCenter[2], tempMat4a), tempMat4b)\n            : matrix);\n        if (tileChanged) {\n            this.layer.setMeshViewMatrixIndex(this.meshIndex, this.tile.index);\n        }\n    }\n\n    setMetallic(metallic: number): void {\n    }\n\n    setRoughness(roughness: number): void {\n    }\n\n    setColor(color: FloatArrayParam) {\n        this.color[0] = color[0];\n        this.color[1] = color[1];\n        this.color[2] = color[2];\n        if (!this.colorizing) {\n            this.layer.setMeshColor(this.meshIndex, this.color);\n        }\n    }\n\n    setColorize(colorize: FloatArrayParam | null) {\n        const setOpacity = false;\n        if (colorize) {\n            this.colorize[0] = colorize[0];\n            this.colorize[1] = colorize[1];\n            this.colorize[2] = colorize[2];\n            this.layer.setMeshColor(this.meshIndex, this.colorize, setOpacity);\n            this.colorizing = true;\n        } else {\n            this.layer.setMeshColor(this.meshIndex, this.color, setOpacity);\n            this.colorizing = false;\n        }\n    }\n\n    setOpacity(opacity: number, flags: number) {\n        const newTransparent = (opacity < 255);\n        const lastTransparent = this.transparent;\n        const changingTransparency = (lastTransparent !== newTransparent);\n        this.color[3] = opacity;\n        this.colorize[3] = opacity;\n        this.transparent = newTransparent;\n        if (this.colorizing) {\n            this.layer.setMeshColor(this.meshIndex, this.colorize);\n        } else {\n            this.layer.setMeshColor(this.meshIndex, this.color);\n        }\n        if (changingTransparency) {\n            this.layer.setMeshTransparent(this.meshIndex, flags, newTransparent);\n        }\n    }\n\n    setHighlighted(flags: number) {\n        this.layer.setMeshHighlighted(this.meshIndex, flags, this.transparent);\n    }\n\n    setXRayed(flags: number) {\n        this.layer.setMeshXRayed(this.meshIndex, flags, this.transparent);\n    }\n\n    setSelected(flags: number) {\n        this.layer.setMeshSelected(this.meshIndex, flags, this.transparent);\n    }\n\n    setEdges(flags: number) {\n        this.layer.setMeshEdges(this.meshIndex, flags, this.transparent);\n    }\n\n    setClippable(flags: number) {\n        this.layer.setMeshClippable(this.meshIndex, flags);\n    }\n\n    setCollidable(flags: number) {\n        this.layer.setMeshCollidable(this.meshIndex, flags);\n    }\n\n    setPickable(flags: number) {\n        this.layer.setMeshPickable(this.meshIndex, flags, this.transparent);\n    }\n\n    setCulled(flags: number) {\n        this.layer.setMeshCulled(this.meshIndex, flags, this.transparent);\n    }\n\n    canPickTriangle() {\n        return false;\n    }\n\n    drawPickTriangles(drawFlags: any, renderContext: any) {\n        // NOP\n    }\n\n    pickTriangleSurface(pickResult: any) {\n        // NOP\n    }\n\n    canPickWorldPos() {\n        return true;\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        //this.sceneObjectRenderer.rendererModel.drawPickNormals(renderContext);\n    }\n\n    // delegatePickedEntity(): SceneObjectRendererCommands {\n    //     return <SceneObjectRendererCommands>this.sceneObjectRenderer;\n    // }\n\n    destroy() {\n        if (this.tile && this.tileManager) {\n            this.tileManager.putTile(this.tile);\n        }\n    }\n}\n","import type { RendererTextureSet} from \"@xeokit/scene\";\nimport type {RendererTextureImpl} from \"./RendererTextureImpl\";\n\n\n/**\n * @private\n */\nexport class RendererTextureSetImpl implements RendererTextureSet {\n\n    public readonly id: string;\n    public readonly colorTexture: RendererTextureImpl;\n    public readonly metallicRoughnessTexture: RendererTextureImpl;\n    public readonly emissiveTexture: RendererTextureImpl;\n    public readonly occlusionTexture: RendererTextureImpl;\n\n    constructor(params: {\n        id: string;\n        colorTexture: RendererTextureImpl;\n        metallicRoughnessTexture: RendererTextureImpl;\n        emissiveTexture: RendererTextureImpl;\n        occlusionTexture: RendererTextureImpl;\n    }) {\n        this.id = params.id;\n        this.colorTexture = params.colorTexture;\n        this.metallicRoughnessTexture = params.metallicRoughnessTexture;\n        this.emissiveTexture = params.emissiveTexture;\n        this.occlusionTexture = params.occlusionTexture;\n    }\n}\n","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter, SDKError, TextureTranscoder} from \"@xeokit/core\";\nimport {createUUID, loadArraybuffer} from \"@xeokit/utils\";\nimport {collapseAABB3, expandAABB3} from \"@xeokit/boundaries\";\nimport {composeMat4, createMat4, createVec3, createVec4, eulerToQuat, identityQuat, mulMat4} from \"@xeokit/matrix\";\n\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {Camera, RendererViewObject, View, Viewer} from \"@xeokit/viewer\";\nimport {GLTexture} from \"@xeokit/webglutils\";\nimport type {\n    Geometry,\n    GeometryCompressedParams,\n    Mesh,\n    RendererGeometry,\n    RendererMesh,\n    RendererModel,\n    RendererTexture,\n    RendererTextureSet,\n    SceneModel,\n    SceneObject,\n    Texture,\n    TextureSet\n} from \"@xeokit/scene\";\nimport type {WebGLRenderer} from \"./WebGLRenderer\";\nimport {Layer} from \"./Layer\";\nimport type {RenderContext} from \"./RenderContext\";\nimport {RendererGeometryImpl} from \"./RendererGeometryImpl\";\n\nimport {RendererTextureImpl} from \"./RendererTextureImpl\";\nimport {RendererObjectImpl} from \"./RendererObjectImpl\";\nimport {RendererMeshImpl} from \"./RendererMeshImpl\";\nimport {RendererTextureSetImpl} from \"./RendererTextureSetImpl\";\nimport type {LayerParams} from \"./LayerParams\";\nimport type {TileManager} from \"./TileManager\";\n\n\nconst tempVec3a = createVec3();\nconst tempMat4 = createMat4();\n\nconst defaultScale = createVec3([1, 1, 1]);\nconst defaultPosition = createVec3([0, 0, 0]);\nconst defaultRotation = createVec3([0, 0, 0]);\nconst defaultQuaternion = identityQuat();\n\nconst defaultColorTextureId = \"defaultColorTexture\";\nconst defaultMetalRoughTextureId = \"defaultMetalRoughTexture\";\nconst defaultNormalsTextureId = \"defaultNormalsTexture\";\nconst defaultEmissiveTextureId = \"defaultEmissiveTexture\";\nconst defaultOcclusionTextureId = \"defaultOcclusionTexture\";\nconst defaultTextureSetId = \"defaultTextureSet\";\n\n/**\n * @private\n */\nexport class RendererModelImpl extends Component implements RendererModel {\n\n    readonly qualityRender: boolean;\n    declare readonly id: string;\n    declare readonly destroyed: boolean;\n    declare built: boolean;\n\n    sceneModel: SceneModel | null;\n\n    rendererGeometries: { [key: string]: RendererGeometry };\n    rendererTextures: { [key: string]: RendererTexture };\n    rendererTextureSets: { [key: string]: RendererTextureSet; };\n    rendererMeshes: { [key: string]: RendererMesh };\n    rendererObjects: { [key: string]: RendererObjectImpl };\n    rendererObjectsList: RendererObjectImpl[];\n\n    rendererViewObjects: { [key: string]: RendererViewObject };\n\n    readonly viewer: Viewer;\n\n    layerList: Layer[];\n    readonly onBuilt: EventEmitter<RendererModel, null>;\n    declare readonly onDestroyed: EventEmitter<Component, null>;\n    #view: View;\n    #webglRenderer: WebGLRenderer;\n    #renderContext: RenderContext;\n    #position: FloatArrayParam;\n    #rotation: FloatArrayParam;\n    #quaternion: FloatArrayParam;\n    #scale: FloatArrayParam;\n    #worldMatrix: FloatArrayParam;\n    #viewMatrix: FloatArrayParam;\n    #colorTextureEnabled: boolean;\n    #backfaces: boolean;\n    #layers: { [key: string]: Layer };\n    #numGeometries: number;\n    #numTriangles: number;\n    #numLines: number;\n    #numPoints: number;\n    #numRendererObjects: number;\n    #textureTranscoder: TextureTranscoder;\n    #aabbDirty: boolean;\n    #edgeThreshold: number;\n    #currentLayers: { [key: string]: any };\n    #aabb: FloatArrayParam;\n    #viewMatrixDirty: boolean;\n    #worldMatrixNonIdentity: boolean;\n    #onCameraViewMatrix: () => void;\n    #layerId: string | undefined;\n\n    constructor(params: {\n        id: string;\n        sceneModel: SceneModel;\n        matrix?: FloatArrayParam;\n        scale?: FloatArrayParam;\n        view: View;\n        webglRenderer: WebGLRenderer;\n        renderContext: RenderContext;\n        quaternion?: FloatArrayParam;\n        rotation?: FloatArrayParam;\n        position?: FloatArrayParam;\n        edgeThreshold?: number;\n        textureTranscoder: TextureTranscoder;\n        qualityRender?: boolean;\n        layerId?: string;\n    }) {\n\n        super(params.view);\n\n        this.id = params.id;\n        this.sceneModel = params.sceneModel\n        this.viewer = params.view.viewer;\n\n        this.#view = params.view;\n        this.#webglRenderer = params.webglRenderer;\n        this.#renderContext = params.renderContext;\n        this.#textureTranscoder = params.textureTranscoder;\n\n        this.#aabb = collapseAABB3();\n        this.#aabbDirty = false;\n        this.#layers = {};\n        this.layerList = [];\n        this.#currentLayers = {};\n\n        this.rendererGeometries = {};\n        this.rendererTextures = {};\n        this.rendererTextureSets = {};\n        this.rendererMeshes = {};\n        this.rendererObjects = {};\n        this.rendererObjectsList = [];\n\n        this.rendererViewObjects = {};\n\n        this.#numGeometries = 0;\n        this.#numRendererObjects = 0;\n\n        this.#numTriangles = 0;\n        this.#numLines = 0;\n        this.#numPoints = 0;\n        this.#edgeThreshold = params.edgeThreshold || 10;\n\n        this.built = false;\n\n        // Build static matrix\n\n        this.#position = createVec3(params.position || [0, 0, 0]);\n        this.#rotation = createVec3(params.rotation || [0, 0, 0]);\n        this.#quaternion = createVec4(params.quaternion || [0, 0, 0, 1]);\n        if (params.rotation) {\n            eulerToQuat(this.#rotation, \"XYZ\", this.#quaternion);\n        }\n        this.#scale = createVec3(params.scale || [1, 1, 1]);\n        this.#worldMatrix = createMat4();\n        composeMat4(this.#position, this.#quaternion, this.#scale, this.#worldMatrix);\n\n        if (params.matrix || params.position || params.rotation || params.scale || params.quaternion) {\n            this.#viewMatrix = createMat4();\n            this.#viewMatrixDirty = true;\n            this.#worldMatrixNonIdentity = true;\n        }\n\n        this.qualityRender = (params.qualityRender !== false);\n\n        this.#layerId = params.layerId;\n\n        this.#onCameraViewMatrix = this.#view.camera.onViewMatrix.subscribe((camera: Camera, viewMatrix: FloatArrayParam) => {\n            this.#viewMatrixDirty = true;\n        });\n\n        this.#createDefaultTextureSetRenderer();\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<RendererModel, null>());\n\n        this.#attachSceneModel(params.sceneModel);\n\n        // this.layerList.sort((a, b) => {\n        //     if (a.sortId < b.sortId) {\n        //         return -1;\n        //     }\n        //     if (a.sortId > b.sortId) {\n        //         return 1;\n        //     }\n        //     return 0;\n        // });\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            const layer = this.layerList[i];\n            layer.layerIndex = i;\n        }\n        this.#currentLayers = {};\n        this.built = true;\n        this.#webglRenderer.setImageDirty();\n        //     this.#view.viewer.scene.setAABBDirty();\n        this.onBuilt.dispatch(this, null);\n    }\n\n    #attachSceneModel(sceneModel: SceneModel): void {\n        const textures = sceneModel.textures;\n        const geometries = sceneModel.geometries;\n        const meshes = sceneModel.meshes;\n        const objects = sceneModel.objects;\n        if (textures) {\n            for (let textureId in textures) {\n                this.#attachTexture(textures[textureId]);\n            }\n        }\n        if (geometries) {\n            for (let geometryId in geometries) {\n                this.#attachGeometry(geometries[geometryId]);\n            }\n        }\n        if (meshes) {\n            for (let meshId in meshes) {\n                this.#attachMesh(meshes[meshId]);\n            }\n        }\n        if (objects) {\n            for (let objectId in objects) {\n                this.#attachSceneObject(objects[objectId]);\n            }\n        }\n        for (let layerId in this.#currentLayers) {\n            this.#currentLayers[layerId].build();\n        }\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].build();\n        }\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].finalize2();\n        }\n    }\n\n    #attachTexture(texture: Texture): void {\n        const textureId = texture.id;\n        if (this.rendererTextures[textureId]) {\n            throw new SDKError(\"RendererTexture already created: \" + textureId);\n        }\n        const glTexture = new GLTexture({gl: this.#renderContext.gl});\n        if (texture.preloadColor) {\n            glTexture.setPreloadColor(texture.preloadColor);\n        }\n        if (texture.image) { // Ignore transcoder for Images\n            const image = texture.image;\n            image.crossOrigin = \"Anonymous\";\n            glTexture.setImage(image, {\n                minFilter: texture.minFilter,\n                magFilter: texture.magFilter,\n                wrapS: texture.wrapS,\n                wrapT: texture.wrapT,\n                wrapR: texture.wrapR,\n                flipY: texture.flipY,\n                encoding: texture.encoding\n            });\n        } else if (texture.src) {\n            const ext = texture.src.split('.').pop();\n            switch (ext) { // Don't transcode recognized image file types\n                case \"jpeg\":\n                case \"jpg\":\n                case \"png\":\n                case \"gif\":\n                    const image = new Image();\n                    image.onload = () => {\n                        glTexture.setImage(image, {\n                            minFilter: texture.minFilter,\n                            magFilter: texture.magFilter,\n                            wrapS: texture.wrapS,\n                            wrapT: texture.wrapT,\n                            wrapR: texture.wrapR,\n                            flipY: texture.flipY,\n                            encoding: texture.encoding\n                        });\n                    };\n                    image.src = texture.src; // URL or Base64 string\n                    break;\n                default: // Assume other file types need transcoding\n                    if (!this.#textureTranscoder) {\n                        this.error(`Can't create texture from 'src' - rendererModel needs to be configured with a TextureTranscoder for this file type ('${ext}')`);\n                    } else {\n                        loadArraybuffer(texture.src, (arrayBuffer: ArrayBuffer) => {\n                                if (!arrayBuffer.byteLength) {\n                                    this.error(`Can't create texture from 'src': file data is zero length`);\n                                    return;\n                                }\n                                this.#textureTranscoder.transcode([arrayBuffer]).then((compressedTextureData) => {\n                                    glTexture.setCompressedData(compressedTextureData);\n                                    this.#webglRenderer.setImageDirty();\n                                });\n                            },\n                            (errMsg: string) => {\n                                this.error(`Can't create texture from 'src': ${errMsg}`);\n                            });\n                    }\n                    break;\n            }\n        } else if (texture.buffers) { // Buffers implicitly require transcoding\n            if (!this.#textureTranscoder) {\n                this.error(`Can't create texture from 'buffers' - rendererModel needs to be configured with a TextureTranscoder for this option`);\n            } else {\n                this.#textureTranscoder.transcode(texture.buffers).then((compressedTextureData) => {\n                    glTexture.setCompressedData(compressedTextureData);\n                    this.#webglRenderer.setImageDirty();\n                });\n            }\n        }\n        const rendererTexture = new RendererTextureImpl(texture, glTexture);\n        texture.rendererTexture = rendererTexture;\n        this.rendererTextures[textureId] = rendererTexture;\n    }\n\n    #attachGeometry(geometry: Geometry): void {\n        const geometryId = geometry.id;\n        if (this.rendererGeometries[geometryId]) {\n            throw new SDKError(`RendererGeometry already created: ${geometryId}`);\n        }\n        const rendererGeometry = new RendererGeometryImpl();\n        this.rendererGeometries[geometryId] = rendererGeometry;\n        geometry.rendererGeometry = rendererGeometry;\n        this.#numGeometries++;\n    }\n\n    #attachMesh(mesh: Mesh): void {\n        const rendererGeometry = this.rendererGeometries[mesh.geometry.id];\n        if (!rendererGeometry) {\n            throw new SDKError(\"RendererGeometry not found\");\n        }\n        const rendererTextureSet = this.rendererTextureSets[(<TextureSet>mesh.textureSet).id];\n        if (!rendererTextureSet) {\n            throw new SDKError(\"rendererTextureSet not found\");\n        }\n        const layer = this.#getLayer(mesh.textureSet ? (<TextureSet>mesh.textureSet).id : undefined, mesh.geometry);\n        if (!layer) {\n            return;\n        }\n        if (!layer.hasGeometry(mesh.geometry.id)) {\n            layer.createGeometryCompressed(mesh.geometry)\n        }\n        let meshMatrix;\n        let worldMatrix = this.#worldMatrixNonIdentity ? this.#worldMatrix : null;\n        meshMatrix = mesh.matrix;\n        const color = (mesh.color) ? new Uint8Array([Math.floor(mesh.color[0] * 255), Math.floor(mesh.color[1] * 255), Math.floor(mesh.color[2] * 255)]) : [255, 255, 255];\n        const opacity = (mesh.opacity !== undefined && mesh.opacity !== null) ? Math.floor(mesh.opacity * 255) : 255;\n        const metallic = (mesh.metallic !== undefined && mesh.metallic !== null) ? Math.floor(mesh.metallic * 255) : 0;\n        const roughness = (mesh.roughness !== undefined && mesh.roughness !== null) ? Math.floor(mesh.roughness * 255) : 255;\n        const meshRenderer = new RendererMeshImpl({\n            tileManager: <TileManager>this.#webglRenderer.tileManager,\n            id: mesh.id,\n            layer,\n            color,\n            opacity,\n            matrix: meshMatrix,\n            metallic,\n            roughness,\n            rendererTextureSet,\n            rendererGeometry,\n            meshIndex: 0\n        });\n        meshRenderer.pickId = this.#webglRenderer.attachPickable(meshRenderer);\n        const a = meshRenderer.pickId >> 24 & 0xFF;\n        const b = meshRenderer.pickId >> 16 & 0xFF;\n        const g = meshRenderer.pickId >> 8 & 0xFF;\n        const r = meshRenderer.pickId & 0xFF;\n        const pickColor = new Uint8Array([r, g, b, a]); // Quantized pick color\n        collapseAABB3(meshRenderer.aabb);\n        const meshIndex = layer.createMesh({\n            id: mesh.id,\n            geometryId: mesh.geometry.id,\n            color,\n            opacity,\n            metallic,\n            roughness,\n            matrix: meshMatrix,\n            //     worldMatrix: worldMatrix,\n            //    aabb: mesh.aabb,\n            pickColor\n        });\n        this.#numGeometries++;\n        expandAABB3(this.#aabb, meshRenderer.aabb);\n        meshRenderer.layer = layer;\n        meshRenderer.meshIndex = meshIndex;\n        this.rendererMeshes[mesh.id] = meshRenderer;\n    }\n\n    #getLayer(textureSetId: string | undefined, geometryCompressedParams: GeometryCompressedParams): Layer | undefined {\n        textureSetId = textureSetId || defaultTextureSetId;\n        const layerId = `${textureSetId}_${geometryCompressedParams.primitive}`;\n        let layer = this.#currentLayers[layerId];\n        if (layer) {\n            if (layer.canCreateMesh(geometryCompressedParams)) {\n                return layer;\n            } else {\n                layer.build();\n                delete this.#currentLayers[layerId];\n            }\n        }\n        let textureSet;\n        if (textureSetId) {\n            textureSet = this.rendererTextureSets[textureSetId];\n            if (!textureSet) {\n                this.error(`TextureSet not found: ${textureSetId} - ensure that you create it first with createTextureSet()`);\n                return;\n            }\n        }\n        layer = new Layer(<LayerParams>{\n            gl: this.#renderContext.gl,\n            view: this.#view,\n            rendererModel: this,\n            primitive: geometryCompressedParams.primitive,\n            textureSet,\n            layerIndex: 0\n        });\n        this.#layers[layerId] = layer;\n        this.layerList.push(layer);\n        this.#currentLayers[layerId] = layer;\n        return layer;\n    }\n\n    #attachSceneObject(sceneObject: SceneObject): void {\n        let objectId = sceneObject.id;\n        if (objectId === undefined) {\n            objectId = createUUID();\n        } else if (this.rendererObjects[objectId]) {\n            this.error(\"[createObject] rendererModel already has a ViewerObject with this ID: \" + objectId + \" - will assign random ID\");\n            objectId = createUUID();\n        }\n        const meshes = sceneObject.meshes;\n        if (meshes === undefined) {\n            throw new SDKError(\"[createObject] Param expected: meshes\");\n        }\n        const rendererMeshes: RendererMeshImpl[] = [];\n        for (let i = 0, len = meshes.length; i < len; i++) {\n            const mesh = meshes[i];\n            const rendererMesh = <RendererMeshImpl>this.rendererMeshes[mesh.id];\n            rendererMeshes.push(rendererMesh);\n        }\n        const rendererObject = new RendererObjectImpl({\n            id: objectId,\n            rendererModel: this,\n            rendererMeshes,\n            aabb: sceneObject.aabb,\n            layerId: this.#layerId\n        });\n        this.rendererObjectsList.push(rendererObject);\n        this.rendererObjects[objectId] = rendererObject; // <RendererObject>\n        this.rendererViewObjects[objectId] = rendererObject; // <RendererViewObject>\n        this.#numRendererObjects++;\n    }\n\n    get position(): FloatArrayParam {\n        return this.#position;\n    }\n\n    get rotation(): FloatArrayParam {\n        return this.#rotation;\n    }\n\n    get quaternion(): FloatArrayParam {\n        return this.#quaternion;\n    }\n\n    get scale(): FloatArrayParam {\n        return this.#scale;\n    }\n\n    get worldMatrix(): FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get viewMatrix(): FloatArrayParam {\n        if (!this.#viewMatrix) {\n            return this.#view.camera.viewMatrix;\n        }\n        if (this.#viewMatrixDirty) {\n            mulMat4(this.#view.camera.viewMatrix, this.#worldMatrix, this.#viewMatrix);\n            this.#viewMatrixDirty = false;\n        }\n        return this.#viewMatrix;\n    }\n\n    get colorTextureEnabled() {\n        return this.#colorTextureEnabled;\n    }\n\n    get backfaces(): boolean {\n        return this.#backfaces;\n    }\n\n    set backfaces(backfaces: boolean) {\n        backfaces = !!backfaces;\n        this.#backfaces = backfaces;\n        this.#webglRenderer.setImageDirty();\n    }\n\n    get matrix(): FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get aabb(): FloatArrayParam {\n        if (this.#aabbDirty) {\n            this.#rebuildAABB();\n        }\n        return this.#aabb;\n    }\n\n    get numTriangles(): number {\n        return this.#numTriangles;\n    }\n\n    get numLines(): number {\n        return this.#numLines;\n    }\n\n    get numPoints(): number {\n        return this.#numPoints;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setVisible(viewIndex, visible);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setXRayed(viewIndex, xrayed);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setHighlighted(viewIndex, highlighted);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setSelected(viewIndex, selected);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setEdges(viewIndex, edges);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setCulled(viewIndex, culled);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setClippable(viewIndex, clippable);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setCollidable(viewIndex, collidable);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setPickable(viewIndex, pickable);\n        }\n    }\n\n    setColorize(viewIndex: number, colorize: FloatArrayParam): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setColorize(viewIndex, colorize);\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity: number): void {\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            this.rendererObjectsList[i].setOpacity(viewIndex, opacity);\n        }\n    }\n\n    /*\n    rebuildDrawFlags() {\n        this.drawFlags.reset();\n        this.#updateDrawFlagsVisibleLayers();\n        if (this.drawFlags.numLayers > 0 && this.drawFlags.numVisibleLayers === 0) {\n            this.drawFlags.culled = true;\n            return;\n        }\n        this.#updateDrawFlags();\n    }\n\n    drawColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawDepth(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawDepth(drawFlags, renderContext);\n        }\n    }\n\n    drawNormals(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawNormals(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteSelected(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesHighlighted(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesSelected(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawOcclusion(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawOcclusion(drawFlags, renderContext);\n        }\n    }\n\n    drawShadow(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawShadow(drawFlags, renderContext);\n        }\n    }\n\n    drawPickMesh(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickMesh(drawFlags, renderContext);\n        }\n    }\n\n    drawPickDepths(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickDepths(drawFlags, renderContext);\n        }\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickNormals(drawFlags, renderContext);\n        }\n    }\n*/\n\n    #createDefaultTextureSetRenderer() {\n        const defaultColorTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [r, g, b, a]})\n            }));\n\n        const defaultMetalRoughTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 1, 1, 1] // [unused, roughness, metalness, unused]\n            }));\n        const defaultNormalsTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 0] // [x, y, z, unused] - these must be zeros\n            }));\n\n        const defaultEmissiveTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 1] // [x, y, z, unused]\n            }));\n        const defaultOcclusionTexture = new RendererTextureImpl(\n            null,\n            new GLTexture({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [x, y, z, unused]\n            }));\n        this.rendererTextures[defaultColorTextureId] = defaultColorTexture;\n        this.rendererTextures[defaultMetalRoughTextureId] = defaultMetalRoughTexture;\n        this.rendererTextures[defaultNormalsTextureId] = defaultNormalsTexture;\n        this.rendererTextures[defaultEmissiveTextureId] = defaultEmissiveTexture;\n        this.rendererTextures[defaultOcclusionTextureId] = defaultOcclusionTexture;\n        this.rendererTextureSets[defaultTextureSetId] = new RendererTextureSetImpl({\n            id: defaultTextureSetId,\n            colorTexture: defaultColorTexture,\n            metallicRoughnessTexture: defaultMetalRoughTexture,\n            emissiveTexture: defaultEmissiveTexture,\n            occlusionTexture: defaultOcclusionTexture\n        });\n    }\n\n    #rebuildAABB() {\n        collapseAABB3(this.#aabb);\n        for (let i = 0, len = this.rendererObjectsList.length; i < len; i++) {\n            const rendererObject = this.rendererObjectsList[i];\n            expandAABB3(this.#aabb, rendererObject.aabb);\n        }\n        this.#aabbDirty = false;\n    }\n\n    /*\n        #getActiveSectionPlanesForLayer(layer: any) {\n            const drawFlags = this.drawFlags;\n            const sectionPlanes = this.#view.sectionPlanesList;\n            const numSectionPlanes = sectionPlanes.length;\n            const baseIndex = layer.layerIndex * numSectionPlanes;\n            if (numSectionPlanes > 0) {\n                for (let i = 0; i < numSectionPlanes; i++) {\n                    const sectionPlane = sectionPlanes[i];\n                    if (!sectionPlane.active) {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = false;\n\n                    } else {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = true;\n                        drawFlags.sectioned = true;\n                    }\n                }\n            }\n            return true;\n        }\n\n        #updateDrawFlagsVisibleLayers() {\n            const drawFlags = this.drawFlags;\n            drawFlags.numLayers = this.layerList.length;\n            drawFlags.numVisibleLayers = 0;\n            for (let layerIndex = 0, len = this.layerList.length; layerIndex < len; layerIndex++) {\n                const layer = this.layerList[layerIndex];\n                const layerVisible = this.#getActiveSectionPlanesForLayer(layer);\n                if (layerVisible) {\n                    drawFlags.visibleLayers[drawFlags.numVisibleLayers++] = layerIndex;\n                }\n            }\n        }\n\n        #updateDrawFlags() {\n            if (this.meshCounts.numVisible === 0) {\n                return;\n            }\n            if (this.meshCounts.numCulled === this.meshCounts.numMeshes) {\n                return;\n            }\n            const drawFlags = this.drawFlags;\n            drawFlags.colorOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n            if (this.meshCounts.numTransparent > 0) {\n                drawFlags.colorTransparent = true;\n            }\n            if (this.meshCounts.numXRayed > 0) {\n                const xrayMaterial = this.#view.xrayMaterial.state;\n                if (xrayMaterial.fill) {\n                    if (xrayMaterial.fillAlpha < 1.0) {\n                        drawFlags.xrayedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.xrayedSilhouetteOpaque = true;\n                    }\n                }\n                if (xrayMaterial.edges) {\n                    if (xrayMaterial.edgeAlpha < 1.0) {\n                        drawFlags.xrayedEdgesTransparent = true;\n                    } else {\n                        drawFlags.xrayedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numEdges > 0) {\n                const edgeMaterial = this.#view.edgeMaterial.state;\n                if (edgeMaterial.edges) {\n                    drawFlags.edgesOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n                    if (this.meshCounts.numTransparent > 0) {\n                        drawFlags.edgesTransparent = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numSelected > 0) {\n                const selectedMaterial = this.#view.selectedMaterial.state;\n                if (selectedMaterial.fill) {\n                    if (selectedMaterial.fillAlpha < 1.0) {\n                        drawFlags.selectedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.selectedSilhouetteOpaque = true;\n                    }\n                }\n                if (selectedMaterial.edges) {\n                    if (selectedMaterial.edgeAlpha < 1.0) {\n                        drawFlags.selectedEdgesTransparent = true;\n                    } else {\n                        drawFlags.selectedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numHighlighted > 0) {\n                const highlightMaterial = this.#view.highlightMaterial.state;\n                if (highlightMaterial.fill) {\n                    if (highlightMaterial.fillAlpha < 1.0) {\n                        drawFlags.highlightedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.highlightedSilhouetteOpaque = true;\n                    }\n                }\n                if (highlightMaterial.edges) {\n                    if (highlightMaterial.edgeAlpha < 1.0) {\n                        drawFlags.highlightedEdgesTransparent = true;\n                    } else {\n                        drawFlags.highlightedEdgesOpaque = true;\n                    }\n                }\n            }\n        }\n\n     */\n\n\n    // build() {\n    //     if (this.destroyed) {\n    //         this.log(\"rendererModel already destroyed\");\n    //         return;\n    //     }\n    //     if (this.built) {\n    //         this.log(\"rendererModel already built\");\n    //         return;\n    //     }\n    //     for (let layerId in this.#currentLayers) {\n    //         if (this.#currentLayers.hasOwnProperty(layerId)) {\n    //             this.#currentLayers[layerId].build();\n    //         }\n    //     }\n    //     for (let i = 0, len = this.objectList.length; i < len; i++) {\n    //         const rendererObject = this.objectList[i];\n    //         rendererObject.build();\n    //     }\n    //     for (let i = 0, len = this.objectList.length; i < len; i++) {\n    //         const rendererObject = this.objectList[i];\n    //         rendererObject.finalize2();\n    //     }\n    //     // this.layerList.sort((a, b) => {\n    //     //     if (a.sortId < b.sortId) {\n    //     //         return -1;\n    //     //     }\n    //     //     if (a.sortId > b.sortId) {\n    //     //         return 1;\n    //     //     }\n    //     //     return 0;\n    //     // });\n    //     for (let i = 0, len = this.layerList.length; i < len; i++) {\n    //         const layer = this.layerList[i];\n    //         layer.layerIndex = i;\n    //     }\n    //     this.#currentLayers = {};\n    //     this.built = true;\n    //     this.#webglRenderer.setImageDirty();\n    //     //     this.#view.viewer.scene.setAABBDirty();\n    //     this.onBuilt.dispatch(this, null);\n    // }\n    //\n    // addModel(params: {\n    //     id: string,\n    //     sceneModel: SceneModel\n    // }) {\n    //\n    //     const sceneModel = params.sceneModel;\n    //     const textures = sceneModel.textures;\n    //     const geometries = sceneModel.geometries;\n    //     const meshes = sceneModel.meshes;\n    //     const objects = sceneModel.objects;\n    //\n    //     if (textures) {\n    //         for (let textureId in textures) {\n    //             const texture = textures[textureId];\n    //             this.#attachTexture(texture);\n    //         }\n    //     }\n    //\n    //     if (geometries) {\n    //         for (let geometryId in geometries) {\n    //             const geometry = geometries[geometryId];\n    //             this.#attachGeometry(geometry);\n    //         }\n    //     }\n    //\n    //     if (meshes) {\n    //         for (let meshId in meshes) {\n    //             const mesh = meshes[meshId];\n    //             this.#attachMesh(mesh);\n    //         }\n    //     }\n    //\n    //     if (objects) {\n    //         for (let geometryId in objects) {\n    //             const object = objects[geometryId];\n    //             this.#attachSceneObject(object);\n    //         }\n    //     }\n    // }\n\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.#detachSceneModel();\n        this.#view.camera.onViewMatrix.unsubscribe(this.#onCameraViewMatrix);\n        for (let layerId in this.#currentLayers) {\n            if (this.#currentLayers.hasOwnProperty(layerId)) {\n                this.#currentLayers[layerId].destroy();\n            }\n        }\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            this.layerList[i].destroy();\n        }\n        for (let objectId in this.rendererObjects) {\n            this.rendererObjects[objectId].destroy();\n        }\n        for (let meshId in this.rendererMeshes) {\n            //    this.#webglRenderer.deregisterPickable(this.rendererMeshes[meshId].pickId);\n        }\n        this.#currentLayers = {};\n        this.#layers = {};\n        this.layerList = [];\n        this.rendererGeometries = {};\n        this.rendererTextures = {};\n        this.rendererTextureSets = {};\n        this.rendererMeshes = {};\n        this.rendererViewObjects = {};\n        // this.#view.viewer.setAABBDirty();\n        this.onBuilt.clear();\n        super.destroy();\n    }\n\n    #detachSceneModel(): void {\n        const sceneModel = this.sceneModel;\n        if (!sceneModel) {\n            return;\n        }\n        const textures = sceneModel.textures;\n        const geometries = sceneModel.geometries;\n        const meshes = sceneModel.meshes;\n        const objects = sceneModel.objects;\n        if (textures) {\n            for (let textureId in textures) {\n                const texture = textures[textureId];\n                if (texture.rendererTexture) {\n                    texture.rendererTexture = null;\n                }\n            }\n        }\n        if (geometries) {\n            for (let geometryId in geometries) {\n                const geometry = geometries[geometryId];\n                if (geometry.rendererGeometry) {\n                    geometry.rendererGeometry = null;\n                }\n            }\n        }\n        if (meshes) {\n            for (let meshId in meshes) {\n                const mesh = meshes[meshId];\n                if (mesh.rendererMesh) {\n                    mesh.rendererMesh = null;\n                }\n            }\n        }\n        if (objects) {\n            for (let objectId in objects) {\n                const object = objects[objectId];\n                if (object.rendererObject) {\n                    object.rendererObject = null;\n                }\n            }\n        }\n        this.sceneModel = null;\n    }\n}\n\n\n\n","import {createMatricesDataTexture} from \"./dataTextures\";\nimport type {GLDataTexture} from \"@xeokit/webglutils\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec3} from \"@xeokit/matrix\";\nimport {createRTCViewMat, worldToRTCCenter} from \"@xeokit/rtc\";\nimport type {Camera} from \"@xeokit/viewer\";\n\nconst NUM_TILES = 2000;\n\nexport interface Tile {\n    id: string;\n    index: number;\n    useCount: number;\n    center: FloatArrayParam;\n    rtcViewMatrix: FloatArrayParam;\n}\n\nexport class TileManager {\n\n    #gl: WebGL2RenderingContext;\n    #indexesUsed: boolean[];\n    #tiles: { [key: string]: Tile };\n    #dataTexture: GLDataTexture;\n    #camera: Camera;\n    #lastFreeIndex: number;\n\n    constructor(params: {\n        camera: Camera,\n        gl: WebGL2RenderingContext\n    }) {\n        this.#camera = params.camera;\n        this.#gl = params.gl;\n        this.#indexesUsed = [];\n        this.#lastFreeIndex = 0;\n        this.#tiles = {};\n        this.#dataTexture = createMatricesDataTexture(this.#gl, NUM_TILES);\n    }\n\n    getTile(center: FloatArrayParam): Tile {\n        const rtcCenter = worldToRTCCenter(center, createVec3());\n        const id = `${rtcCenter[0]}-${rtcCenter[1]}-${rtcCenter[2]}`;\n        let tile = this.#tiles[id];\n        if (!tile) {\n            tile = {\n                id,\n                index: this.#findFreeTile(),\n                useCount: 0,\n                center: createVec3(),\n                rtcViewMatrix: createMat4()\n            };\n            this.#tiles[tile.id] = tile;\n        }\n        tile.useCount++;\n        return tile;\n    }\n\n    putTile(tile: Tile) {\n        if (--tile.useCount <= 0) {\n            delete this.#tiles[tile.id];\n            this.#putFreeTile(tile.index);\n        }\n    }\n\n    updateTileCenter(tile: Tile, newCenter: FloatArrayParam): Tile {\n        const newRTCCenter = worldToRTCCenter(newCenter, createVec3());\n        const newId = `${newRTCCenter[0]}-${newRTCCenter[1]}-${newRTCCenter[2]}`;\n        if (newId === tile.id) {\n            return tile;\n        }\n        this.putTile(tile);\n        let newTile = this.#tiles[newId];\n        if (!newTile) {\n            newTile = {\n                id: newId,\n                index: this.#findFreeTile(),\n                useCount: 0,\n                center: createVec3(),\n                rtcViewMatrix: createMat4()\n            };\n            this.#tiles[newTile.id] = newTile;\n        }\n        newTile.useCount++;\n        return newTile;\n    }\n\n    refreshMatrices() {\n        if (!this.#dataTexture.texture) {\n            return;\n        }\n        const gl = this.#gl;\n        const viewMatrix = this.#camera.viewMatrix;\n        const tileIds = Object.keys(this.#tiles);\n        const numTiles = tileIds.length;\n        const data = new Float32Array(16 * numTiles);\n        for (let i = 0, len = tileIds.length; i < len; i++) {\n            const tileId = tileIds[i];\n            const tile = this.#tiles[tileId];\n            createRTCViewMat(viewMatrix, tile.center, tile.rtcViewMatrix);\n            data.set(tile.rtcViewMatrix, tile.index * 16);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this.#dataTexture.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 1, 1, gl.RGBA, gl.FLOAT, data);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    #putFreeTile(index: number) {\n        delete this.#indexesUsed[index];\n        this.#lastFreeIndex = index;\n    }\n\n    #findFreeTile(): number {\n        for (let index = this.#lastFreeIndex; ; index = (index + 1) % NUM_TILES) {\n            if (!this.#indexesUsed[index]) {\n                this.#indexesUsed[index] = true;\n                return index;\n            }\n        }\n    }\n\n\n}","import {Map} from \"@xeokit/utils\";\nimport {createVec3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport {LinesPrimitive, PointsPrimitive, SolidPrimitive, SurfacePrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\n\nimport type {Renderer, RendererViewObject, View, Viewer, ViewObject} from \"@xeokit/viewer\";\n\nimport {KTX2TextureTranscoder} from \"@xeokit/ktx2\";\nimport {RenderContext} from \"./RenderContext\";\nimport {FastColorTrianglesRenderer} from \"./FastColorTrianglesRenderer\";\nimport {getExtension, GLRenderBuffer, WEBGL_INFO} from \"@xeokit/webglutils\";\nimport {RENDER_PASSES} from \"./RENDER_PASSES\";\nimport type {Pickable} from \"./Pickable\";\nimport {RendererModelImpl} from \"./RendererModelImpl\";\nimport type {Layer} from \"./Layer\";\nimport type {Capabilities, Component, TextureTranscoder} from \"@xeokit/core\";\nimport {SDKError} from \"@xeokit/core\";\nimport type {Scene, SceneModel} from \"@xeokit/scene\";\nimport {TileManager} from \"./TileManager\";\n\n\nconst ua = navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|mobile)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\nconst isSafari = (ua && ua[1].toLowerCase() === \"safari\");\n\n/**\n * WebGL-based rendering strategy for a {@link @xeokit/viewer!Viewer | Viewer}.\n *\n * See {@link @xeokit/webglrenderer} for usage.\n */\nexport class WebGLRenderer implements Renderer {\n\n    /**\n     * A RendererViewObject is an interface through which a ViewObject can push updates\n     * to its object representation within the Renderer.\n     */\n    rendererViewObjects: { [key: string]: RendererViewObject };\n\n    tileManager: TileManager | null;\n\n    #sceneModels: { [key: string]: SceneModel };\n    #viewer: Viewer;\n    #view: View;\n    #renderContext: RenderContext;\n    #canvasTransparent: boolean;\n    #transparentEnabled: boolean;\n    #edgesEnabled: boolean;\n    #imageDirty: boolean;\n    #saoEnabled: boolean;\n    #pbrEnabled: boolean;\n    #backgroundColor: FloatArrayParam;\n    #rendererModels: { [key: string]: RendererModelImpl };\n    #layerList: Layer[];\n    #layerListDirty: boolean;\n    #stateSortDirty: boolean;\n    #pickIDs = new Map({});\n    #saoDepthRenderBuffer: GLRenderBuffer;\n    // #renderBufferManager: GLRenderBufferManager;\n    #extensionHandles: any;\n    #logarithmicDepthBufferEnabled: boolean;\n    #alphaDepthMask: boolean;\n    #occlusionTester: any;\n    // #saoOcclusionRenderer: null | SAOOcclusionRenderer;\n    // #saoDepthLimitedBlurRenderer: SAODepthLimitedBlurRenderer;\n    #textureTranscoder: TextureTranscoder;\n\n    // @ts-ignore\n    #layerRenderers: {\n        // colorPoints: ColorPointsLayerRenderer;\n        colorTriangles: FastColorTrianglesRenderer;\n        // qualityColorTriangles: QualityColorTrianglesRenderer;\n        // colorLines: ColorLinesLayerRenderer;\n        // silhouettePoints: SilhouettePointsRenderer;\n        // silhouetteTriangles: SilhouetteTrianglesLayerRenderer;\n        // silhouetteLines: SilhouetteLinesRenderer;\n    };\n    #viewMatrixDirty: boolean;\n\n    /**\n     Creates a WebGLRenderer.\n\n     @param params Configs\n     @param params.textureTranscoder Injects an optional transcoder that will be used internally by {@link rendererModel.createTexture}\n     to convert transcoded texture data. The transcoder is only required when we'll be providing transcoded data\n     to {@link rendererModel.createTexture}. We assume that all transcoded texture data added to a  ````rendererModel````\n     will then be in a format supported by this transcoder.\n     */\n    constructor(params: {\n        textureTranscoder?: TextureTranscoder\n    }) {\n\n        this.rendererViewObjects = {};\n        this.tileManager = null;\n\n        this.#sceneModels = {};\n        this.#textureTranscoder = params.textureTranscoder || new KTX2TextureTranscoder({});\n        this.#canvasTransparent = false;\n        this.#alphaDepthMask = false;\n        this.#extensionHandles = {};\n        this.#pickIDs = new Map({});\n        this.#layerList = [];\n        this.#layerListDirty = true;\n        this.#stateSortDirty = true;\n        this.#imageDirty = true;\n        this.#transparentEnabled = true;\n        this.#edgesEnabled = true;\n        this.#saoEnabled = true;\n        this.#pbrEnabled = true;\n        this.#backgroundColor = createVec3();\n        this.#occlusionTester = null; // Lazy-created in #addMarker()\n\n        // this.#saoDepthRenderBuffer = null;\n        // this.#renderBufferManager = null;\n        this.#logarithmicDepthBufferEnabled = false;\n        this.#rendererModels = {};\n        this.#viewMatrixDirty = true;\n    }\n\n    getCapabilities(capabilities: Capabilities): void {\n        capabilities.maxViews = 1;\n        const canvasElement = document.createElement('canvas');\n        let gl;\n        try {\n            gl = canvasElement.getContext(\"webgl2\");\n        } catch (e) {\n            console.error('Failed to get a WebGL context');\n        }\n        if (gl) {\n            capabilities.astcSupported = !!getExtension(gl, 'WEBGL_compressed_texture_astc');\n            capabilities.etc1Supported = true; // WebGL\n            capabilities.etc2Supported = !!getExtension(gl, 'WEBGL_compressed_texture_etc');\n            capabilities.dxtSupported = !!getExtension(gl, 'WEBGL_compressed_texture_s3tc');\n            capabilities.bptcSupported = !!getExtension(gl, 'EXT_texture_compression_bptc');\n            capabilities.pvrtcSupported = !!(getExtension(gl, 'WEBGL_compressed_texture_pvrtc') || getExtension(gl, 'WEBKIT_WEBGL_compressed_texture_pvrtc'));\n        }\n    }\n\n    attachViewer(viewer: Viewer): void {\n        this.#viewer = viewer;\n        this.#textureTranscoder.init(this.#viewer.capabilities);\n    }\n\n    attachView(view: View): number {\n        if (this.#renderContext) {\n            throw \"Only one View allowed with WebGLRenderer (see WebViewerCapabilities.maxViews)\";\n        }\n        this.#view = view;\n        const WEBGL_CONTEXT_NAMES = [\"webgl2\"];\n        const canvasElement = view.canvasElement;\n        const contextAttr = {};\n        let gl: WebGL2RenderingContext | null = null;\n        for (let i = 0; !gl && i < WEBGL_CONTEXT_NAMES.length; i++) {\n            try {  // @ts-ignore\n                gl = canvasElement.getContext(WEBGL_CONTEXT_NAMES[i], contextAttr);\n            } catch (e) { // Try with next context name\n            }\n        }\n        if (!gl) {\n            console.error('Failed to get a WebGL2 context');\n            //  view.events.fire(\"webglContextFailed\", true, true);\n            return 0;\n        }\n        if (gl) {\n            gl.hint(gl.FRAGMENT_SHADER_DERIVATIVE_HINT, gl.NICEST);\n        }\n        this.#renderContext = new RenderContext(this.#viewer, this.#view, gl);\n        this.tileManager = new TileManager({\n            camera: view.camera,\n            gl\n        });\n        this.#layerRenderers = {\n            //       colorPoints: new ColorPointsLayerRenderer(this.#renderContext),\n            colorTriangles: new FastColorTrianglesRenderer(this.#renderContext),\n            // qualityColorTriangles: new QualityColorTrianglesRenderer(this.#renderContext),\n            // colorLines: new ColorLinesLayerRenderer(this.#renderContext),\n            // silhouettePoints: new SilhouettePointsRenderer(this.#renderContext),\n            // silhouetteTriangles: new SilhouetteTrianglesLayerRenderer(this.#renderContext),\n            // silhouetteLines: new SilhouetteLinesRenderer(this.#renderContext)\n        };\n        view.camera.onViewMatrix.sub(() => {\n            this.#viewMatrixDirty = true;\n        });\n        return 0;\n    }\n\n    detachView(viewIndex: number): void { // Nop\n    }\n\n    attachSceneModel(sceneModel: SceneModel): void {\n        if (!this.#renderContext) {\n            throw new SDKError(\"Must attach a View before you attach a SceneModel\");\n        }\n        const rendererModel = new RendererModelImpl({\n            id: sceneModel.id,\n            sceneModel,\n            view: this.#view,\n            textureTranscoder: this.#textureTranscoder,\n            webglRenderer: this,\n            renderContext: this.#renderContext\n        });\n        this.#rendererModels[rendererModel.id] = rendererModel;\n        this.#attachRendererViewObjects(rendererModel);\n        this.#layerListDirty = true;\n        rendererModel.onDestroyed.one((component: Component) => {\n            const rendererModel = this.#rendererModels[component.id];\n            delete this.#rendererModels[component.id];\n            this.#detachRendererViewObjects(rendererModel);\n            this.#layerListDirty = true;\n        });\n        sceneModel.rendererModel = rendererModel;\n    }\n\n    detachSceneModel(sceneModel:SceneModel): void {\n        if (this.#sceneModels[sceneModel.id]) {\n            const rendererModel = this.#rendererModels[sceneModel.id];\n            delete this.#rendererModels[sceneModel.id];\n            this.#detachRendererViewObjects(rendererModel);\n            this.#layerListDirty = true;\n            sceneModel.rendererModel = null;\n        }\n    }\n\n    #attachRendererViewObjects(rendererModel: RendererModelImpl) {\n        const rendererViewObjects = rendererModel.rendererViewObjects;\n        for (let id in rendererViewObjects) {\n            this.rendererViewObjects[id] = rendererViewObjects[id];\n        }\n    }\n\n    #detachRendererViewObjects(rendererModel: RendererModelImpl) {\n        const rendererViewObjects = rendererModel.rendererViewObjects;\n        for (let id in rendererViewObjects) {\n            delete this.rendererViewObjects[id];\n        }\n    }\n\n    /**\n     * @private\n     */\n    attachPickable(pickable: Pickable): number { // @ts-ignore\n        return this.#pickIDs.addItem(pickable);\n    }\n\n    /**\n     * @private\n     */\n    detachPickable(pickId: number) {\n        this.#pickIDs.removeItem(pickId);\n    }\n\n    setImageDirty(viewIndex?: number) {\n        this.#imageDirty = true;\n    }\n\n    setBackgroundColor(viewIndex: number, color: FloatArrayParam): void { // @ts-ignore\n        this.#backgroundColor.set(color);\n        this.#imageDirty = true;\n    }\n\n    setEdgesEnabled(viewIndex: number, enabled: boolean): void {\n        this.#edgesEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setPBREnabled(viewIndex: number, enabled: boolean): void {\n        this.#pbrEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    getSAOSupported(): boolean {\n        return isSafari && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_standard_derivatives\"];\n    }\n\n    setSAOEnabled(viewIndex: number, enabled: boolean): void {\n        this.#saoEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setTransparentEnabled(viewIndex: number, enabled: boolean): void {\n        this.#transparentEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    clear(viewIndex: number) {\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (this.#canvasTransparent) {\n            gl.clearColor(1, 1, 1, 1);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    needsRebuild(viewIndex?: number): void {\n        for (let rendererId in this.#layerRenderers) {\n            // @ts-ignore\n            this.#layerRenderers[rendererId].needRebuild();\n        }\n    }\n\n    needsRender(viewIndex?: number): boolean {\n        return (this.#imageDirty || this.#layerListDirty || this.#stateSortDirty);\n    }\n\n    render(viewIndex: number, params: {\n        force?: boolean;\n    }) {\n        params = params || {};\n        if (params.force) {\n            this.#imageDirty = true;\n        }\n        if (this.#viewMatrixDirty) {\n            (<TileManager>this.tileManager).refreshMatrices();\n            this.#viewMatrixDirty = false;\n        }\n        this.#updateLayerList();\n        if (this.#imageDirty) {\n            this.#draw({clear: true});\n            this.#imageDirty = false;\n        }\n    }\n\n    pickSceneObject(viewIndex: number, params: {}): ViewObject | null {\n        return null;\n    };\n\n    #updateLayerList() {\n        if (this.#layerListDirty) {\n            this.#buildLayerList();\n            this.#layerListDirty = false;\n            this.#stateSortDirty = true;\n        }\n        if (this.#stateSortDirty) {\n            //     this.#sortLayerList();\n            this.#stateSortDirty = false;\n            this.#imageDirty = true;\n        }\n    }\n\n    #buildLayerList() {\n        let lenDrawableList = 0;\n        for (let id in this.#rendererModels) {\n            const webGLSceneModelRenderer = this.#rendererModels[id];\n            for (let i = 0, len = webGLSceneModelRenderer.layerList.length; i < len; i++) {\n                this.#layerList[lenDrawableList++] = webGLSceneModelRenderer.layerList[i];\n            }\n        }\n        this.#layerList.length = lenDrawableList;\n    }\n\n    #draw(params: {\n        clear: boolean;\n    }) {\n        this.#activateExtensions();\n        if (this.#saoEnabled && this.#view.sao.possible) {\n            this.#drawSAOBuffers(params);\n        }\n        this.#drawColor(params);\n    }\n\n    #activateExtensions() {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]) {\n            this.#extensionHandles.OES_element_index_uint = this.#renderContext.gl.getExtension(\"OES_element_index_uint\");\n        }\n        if (this.#logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            this.#extensionHandles.EXT_frag_depth = this.#renderContext.gl.getExtension('EXT_frag_depth');\n        }\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            this.#extensionHandles.WEBGL_depth_texture = this.#renderContext.gl.getExtension('WEBGL_depth_texture');\n        }\n    }\n\n    #drawSAOBuffers(params: {\n        clear: boolean;\n    }) {\n        // const sao = this.#view.sao;\n        // const saoDepthRenderBuffer = this.#renderBufferManager.getRenderBuffer(\"saoDepth\", {\n        //     depthTexture: WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n        // });\n        // this.#saoDepthRenderBuffer.bind();\n        // this.#saoDepthRenderBuffer.clear();\n        // this.#drawDepth(params);\n        // this.#saoDepthRenderBuffer.unbind();\n        // // Render occlusion buffer\n        // const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\");\n        // occlusionRenderBuffer1.bind();\n        // occlusionRenderBuffer1.clear();\n        // this.#saoOcclusionRenderer.render(saoDepthRenderBuffer);\n        // occlusionRenderBuffer1.unbind();\n        // if (sao.blur) {\n        //     // Horizontally blur occlusion buffer 1 into occlusion buffer 2\n        //     const occlusionRenderBuffer2 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion2\");\n        //     occlusionRenderBuffer2.bind();\n        //     occlusionRenderBuffer2.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer1, 0);\n        //     occlusionRenderBuffer2.unbind();\n        //     // Vertically blur occlusion buffer 2 back into occlusion buffer 1\n        //     occlusionRenderBuffer1.bind();\n        //     occlusionRenderBuffer1.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer2, 1);\n        //     occlusionRenderBuffer1.unbind();\n        // }\n    }\n\n    #drawDepth(params: {\n        clear: boolean\n    }) {\n        this.#renderContext.reset();\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // for (let i = 0, len = this.#layerListPostCull.length; i < len; i++) {\n        //     const layer = this.#layerListPostCull[i];\n        //     // if (layer.culled === true || layer.visible === false || !layer.drawDepth) {\n        //     //     continue;\n        //     // }\n        //     // if (layer.drawFlags.colorOpaque) {\n        //     //     //    layer.drawDepth(this.#renderContext);\n        //     // }\n        // }\n        // const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        // for (let ii = 0; ii < numVertexAttribs; ii++) {\n        //     gl.disableVertexAttribArray(ii);\n        // }\n    }\n\n    #drawColor(params: {\n        clear: boolean;\n    }) {\n\n        const view = this.#view;\n        const renderContext = this.#renderContext;\n        const gl = renderContext.gl;\n\n        const normalDrawSAOBin: Layer[] = [];\n        const edgesColorOpaqueBin: Layer[] = [];\n        const normalFillTransparentBin: Layer[] = [];\n        const edgesColorTransparentBin: Layer[] = [];\n        const xrayedSilhouetteOpaqueBin: Layer[] = [];\n        const xrayEdgesOpaqueBin: Layer[] = [];\n        const xrayedSilhouetteTransparentBin: Layer[] = [];\n        const xrayEdgesTransparentBin: Layer[] = [];\n        const highlightedSilhouetteOpaqueBin: Layer[] = [];\n        const highlightedEdgesOpaqueBin: Layer[] = [];\n        const highlightedSilhouetteTransparentBin: Layer[] = [];\n        const highlightedEdgesTransparentBin: Layer[] = [];\n        const selectedSilhouetteOpaqueBin: Layer[] = [];\n        const selectedEdgesOpaqueBin: Layer[] = [];\n        const selectedSilhouetteTransparentBin: Layer[] = [];\n        const selectedEdgesTransparentBin: Layer[] = [];\n\n        renderContext.reset();\n        renderContext.withSAO = false;\n        renderContext.pbrEnabled = this.#pbrEnabled && !!view.qualityRender;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        if (this.#canvasTransparent) {\n            gl.clearColor(0, 0, 0, 0);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        gl.lineWidth(1);\n\n        renderContext.lineWidth = 1;\n\n        const saoPossible = view.sao.possible;\n\n        if (this.#saoEnabled && saoPossible) {\n            // const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\", {\n            //     depthTexture: false,\n            //     size: [gl.drawingBufferWidth, gl.drawingBufferHeight]\n            // });\n            // renderContext.occlusionTexture = occlusionRenderBuffer1 ? occlusionRenderBuffer1.getTexture() : null;\n        } else {\n            renderContext.occlusionTexture = null;\n\n        }\n\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // Render normal opaque solids, defer others to subsequent bins, to render after\n\n        let normalDrawSAOBinLen = 0;\n        let edgesColorOpaqueBinLen = 0;\n        let normalFillTransparentBinLen = 0;\n        let edgesColorTransparentBinLen = 0;\n        let xrayedSilhouetteOpaqueBinLen = 0;\n        let xrayEdgesOpaqueBinLen = 0;\n        let xrayedSilhouetteTransparentBinLen = 0;\n        let xrayEdgesTransparentBinLen = 0;\n        let highlightedSilhouetteOpaqueBinLen = 0;\n        let highlightedEdgesOpaqueBinLen = 0;\n        let highlightedSilhouetteTransparentBinLen = 0;\n        let highlightedEdgesTransparentBinLen = 0;\n        let selectedSilhouetteOpaqueBinLen = 0;\n        let selectedEdgesOpaqueBinLen = 0;\n        let selectedSilhouetteTransparentBinLen = 0;\n        let selectedEdgesTransparentBinLen = 0;\n\n        for (let i = 0, len = this.#layerList.length; i < len; i++) {\n\n            const layer = this.#layerList[i];\n            const meshCounts = layer.meshCounts;\n\n            if (meshCounts.numCulled === meshCounts.numMeshes || meshCounts.numVisible === 0) {\n                continue;\n            }\n\n            if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                if (this.#saoEnabled && saoPossible && layer.rendererModel.qualityRender) {\n                    normalDrawSAOBin[normalDrawSAOBinLen++] = layer;\n                } else {\n                    this.#drawLayer(layer, RENDER_PASSES.COLOR_OPAQUE, layer.rendererModel.qualityRender);\n                }\n            }\n\n            if (this.#transparentEnabled) {\n                if (meshCounts.numTransparent) {\n                    normalFillTransparentBin[normalFillTransparentBinLen++] = layer;\n                }\n            }\n\n            if (meshCounts.numXRayed > 0) {\n                if (view.xrayMaterial.fill) {\n                    if (view.xrayMaterial.fillAlpha < 1.0) {\n                        xrayedSilhouetteTransparentBin[xrayedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        xrayedSilhouetteOpaqueBin[xrayedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numHighlighted > 0) {\n                if (view.highlightMaterial.fill) {\n                    if (view.highlightMaterial.fillAlpha < 1.0) {\n                        highlightedSilhouetteTransparentBin[highlightedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        highlightedSilhouetteOpaqueBin[highlightedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numSelected > 0) {\n                if (view.selectedMaterial.fill) {\n                    if (view.selectedMaterial.fillAlpha < 1.0) {\n                        selectedSilhouetteTransparentBin[selectedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        selectedSilhouetteOpaqueBin[selectedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (this.#edgesEnabled && this.#view.edgeMaterial.edges) {\n                if (meshCounts.numEdges > 0) {\n                    if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                        edgesColorOpaqueBin[edgesColorOpaqueBinLen++] = layer;\n                    }\n                    if (meshCounts.numTransparent > 0) {\n                        edgesColorTransparentBin[edgesColorTransparentBinLen++] = layer;\n                    }\n                    if (view.selectedMaterial.edgeAlpha < 1.0) {\n                        selectedEdgesTransparentBin[selectedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        selectedEdgesOpaqueBin[selectedEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.xrayMaterial.edgeAlpha < 1.0) {\n                        xrayEdgesTransparentBin[xrayEdgesTransparentBinLen++] = layer;\n                    } else {\n                        xrayEdgesOpaqueBin[xrayEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.highlightMaterial.edgeAlpha < 1.0) {\n                        highlightedEdgesTransparentBin[highlightedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        highlightedEdgesOpaqueBin[highlightedEdgesOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n        }\n\n        // Render deferred bins\n\n        if (normalDrawSAOBinLen > 0) {\n            renderContext.withSAO = true;\n            for (let i = 0; i < normalDrawSAOBinLen; i++) {\n                //    this.#drawLayer(normalDrawSAOBin[i], RENDER_PASSES.COLOR_OPAQUE, layer.rendererModel.qualityRender);\n                //    normalDrawSAOBin[i].drawColorOpaque(renderContext);\n            }\n        }\n\n        for (let i = 0; i < edgesColorOpaqueBinLen; i++) {\n            this.#drawLayer(edgesColorOpaqueBin[i], RENDER_PASSES.EDGES_COLOR_OPAQUE);\n        }\n\n        for (let i = 0; i < xrayedSilhouetteOpaqueBinLen; i++) {\n            this.#drawLayer(xrayedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n\n        for (let i = 0; i < xrayEdgesOpaqueBinLen; i++) {\n            this.#drawLayer(xrayEdgesOpaqueBin[i], RENDER_PASSES.EDGES_XRAYED);\n        }\n\n        if (xrayedSilhouetteTransparentBinLen > 0 || xrayEdgesTransparentBinLen > 0 || normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            renderContext.backfaces = false;\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(false);\n            }\n            for (let i = 0; i < xrayEdgesTransparentBinLen; i++) {\n                this.#drawLayer(xrayEdgesTransparentBin[i], RENDER_PASSES.EDGES_XRAYED);\n            }\n            for (let i = 0; i < xrayedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(xrayedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n            }\n            if (normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < edgesColorTransparentBinLen; i++) {\n                this.#drawLayer(edgesColorTransparentBin[i], RENDER_PASSES.EDGES_COLOR_TRANSPARENT);\n            }\n            for (let i = 0; i < normalFillTransparentBinLen; i++) {\n                this.#drawLayer(normalFillTransparentBin[i], RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n            gl.disable(gl.BLEND);\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(true);\n            }\n        }\n\n        if (highlightedSilhouetteOpaqueBinLen > 0 || highlightedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1; // HACK\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < highlightedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n        }\n\n        if (highlightedSilhouetteTransparentBinLen > 0 || highlightedEdgesTransparentBinLen > 0 || highlightedSilhouetteOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < highlightedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(highlightedEdgesTransparentBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        if (selectedSilhouetteOpaqueBinLen > 0 || selectedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < selectedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(selectedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n        }\n\n        if (selectedSilhouetteTransparentBinLen > 0 || selectedEdgesTransparentBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < selectedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(selectedEdgesTransparentBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        const numTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n        for (let ii = 0; ii < numTextureUnits; ii++) {\n            gl.activeTexture(gl.TEXTURE0 + ii);\n        }\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        for (let ii = 0; ii < numVertexAttribs; ii++) {\n            gl.disableVertexAttribArray(ii);\n        }\n    }\n\n    #drawLayer(layer: Layer, renderPass: number, quality: boolean = true) {\n        switch (layer.renderState.primitive) {\n            case TrianglesPrimitive:\n            case SurfacePrimitive:\n            case SolidPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                        if (layer.meshCounts.numTransparent === layer.meshCounts.numMeshes || layer.meshCounts.numXRayed === layer.meshCounts.numMeshes) {\n                            return;\n                        }\n                        if (quality) {\n                            //    this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        if (layer.meshCounts.numTransparent === 0) {\n                            return;\n                        }\n                        if (quality) {\n                            //     this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                        if (layer.meshCounts.numSelected > 0) {\n                            //  this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                        if (layer.meshCounts.numHighlighted > 0) {\n                            // this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        if (layer.meshCounts.numXRayed > 0) {\n                            //   this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                }\n                break;\n            case LinesPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //this.#layerRenderers.colorLines.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        // this.#layerRenderers.silhouetteLines.draw(layer);\n                        break;\n                }\n                break;\n            case PointsPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //  this.#layerRenderers.colorPoints.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        //  this.#layerRenderers.silhouettePoints.draw(layer);\n                        break;\n                }\n                break;\n        }\n    }\n\n\n}","import {\n    addVec3,\n    createVec3,\n    createVec4,\n    dotVec4,\n    lenVec3,\n    mulVec3Scalar,\n    normalizeVec3,\n    subVec3\n} from \"@xeokit/matrix\";\nimport {OrthoProjectionType, PerspectiveProjectionType} from \"@xeokit/constants\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {View} from \"@xeokit/viewer\";\nimport type {CameraControl} from \"./CameraControl\";\n\nconst screenPos = createVec4();\nconst viewPos = createVec4();\n\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\n\nconst tempVec4a = createVec4();\nconst tempVec4b = createVec4();\nconst tempVec4c = createVec4();\n\n/**\n * @private\n */\nclass PanController {\n\n    private view: View;\n\n    constructor(cameraControl: CameraControl) {\n        this.view = cameraControl.view;\n    }\n\n    /**\n     * Dollys the Camera towards the given target 2D canvas position.\n     *\n     * When the target's corresponding World-space position is also provided, then this function will also test if we've\n     * dollied past the target, and will return ````true```` if that's the case.\n     *\n     * @param [optionalTargetWorldPos] Optional world position of the target\n     * @param targetCanvasPos Canvas position of the target\n     * @param dollyDelta Amount to dolly\n     * @return True if optionalTargetWorldPos was given, and we've dollied past that position.\n     */\n    dollyToCanvasPos(optionalTargetWorldPos: any, targetCanvasPos: any, dollyDelta: number) {\n\n        let dolliedThroughSurface = false;\n\n        const camera = this.view.camera;\n\n        if (optionalTargetWorldPos) {\n            const eyeToWorldPosVec = subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n            const eyeWorldPosDist = lenVec3(eyeToWorldPosVec);\n            dolliedThroughSurface = (eyeWorldPosDist < dollyDelta);\n        }\n\n        if (camera.projectionType === PerspectiveProjectionType) {\n\n            camera.orthoProjection.scale = camera.orthoProjection.scale - dollyDelta;\n\n            const unprojectedWorldPos = this.#unproject(targetCanvasPos, tempVec4a);\n            const offset = subVec3(unprojectedWorldPos, camera.eye, tempVec4c);\n            const moveVec = mulVec3Scalar(normalizeVec3(offset), -dollyDelta, []);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n\n            if (optionalTargetWorldPos) {\n\n                // Subtle UX tweak - if we have a target World position, then set camera eye->look distance to\n                // the same distance as from eye->target. This just gives us a better position for look,\n                // if we subsequently orbit eye about look, so that we don't orbit a position that's\n                // suddenly a lot closer than the point we pivoted about on the surface of the last object\n                // that we click-drag-pivoted on.\n\n                const eyeTargetVec = subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n                const lenEyeTargetVec = lenVec3(eyeTargetVec);\n                const eyeLookVec = mulVec3Scalar(normalizeVec3(subVec3(camera.look, camera.eye, tempVec3b)), lenEyeTargetVec);\n                camera.look = [camera.eye[0] + eyeLookVec[0], camera.eye[1] + eyeLookVec[1], camera.eye[2] + eyeLookVec[2]];\n            }\n\n        } else if (camera.projectionType === OrthoProjectionType) {\n\n            // - set ortho scale, getting the unprojected targetCanvasPos before and after, get that difference in a vector;\n            // - get the vector in which we're dollying;\n            // - add both vectors to camera eye and look.\n\n            const worldPos1 = this.#unproject(targetCanvasPos, tempVec4a);\n\n            camera.orthoProjection.scale = camera.orthoProjection.scale - dollyDelta;\n            camera.orthoProjection.clean(); // HACK\n\n            const worldPos2 = this.#unproject(targetCanvasPos, tempVec4b);\n            const offset = subVec3(worldPos2, worldPos1, tempVec4c);\n            const eyeLookMoveVec = mulVec3Scalar(normalizeVec3(subVec3(camera.look, camera.eye, tempVec3a)), -dollyDelta, tempVec3b);\n            const moveVec = addVec3(offset, eyeLookMoveVec, tempVec3c);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n        }\n\n        return dolliedThroughSurface;\n    }\n\n    destroy() {\n    }\n\n    #unproject(canvasPos: FloatArrayParam, worldPos: FloatArrayParam) {\n\n        const camera = this.view.camera;\n        const transposedProjectMat = camera.project.transposedProjMatrix;\n        // @ts-ignore\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        // @ts-ignore\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = dotVec4(D, Pt3) / dotVec4(D, Pt4);\n\n        camera.project.unproject(canvasPos, screenZ, screenPos, viewPos, worldPos);\n\n        return worldPos;\n    }\n}\n\nexport {PanController};","import {\n    addVec3, cross3Vec3,\n    distVec3, dotVec4,\n    inverseMat4, lenVec3,\n    lookAtMat4v, mulVec3Scalar, normalizeVec3, sqLenVec3, subVec3,\n    transformPoint3,\n    transformPoint4,\n    transformVec3,\n    createVec2,\n    createVec3,\n    createVec4\n} from \"@xeokit/matrix\";\nimport {clamp, FloatArrayParam} from \"@xeokit/math\";\n\n\nimport type {CameraControl} from \"./CameraControl\";\nimport type {View} from \"@xeokit/viewer\";\nimport {getAABB3Center} from \"@xeokit/boundaries\";\n\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\n\nconst tempVec4a = createVec4();\nconst tempVec4b = createVec4();\nconst tempVec4c = createVec4();\n\n/**\n * @private\n */\nclass PivotController {\n\n    #view: View;\n    #configs: any;\n    #pivotWorldPos: FloatArrayParam;\n    #cameraOffset: FloatArrayParam;\n    #azimuth: number;\n    #polar: number;\n    #radius: number;\n    #pivotPosSet: boolean;\n    #pivoting: boolean;\n    #shown: boolean;\n    #pivotViewPos: FloatArrayParam;\n    #pivotProjPos: FloatArrayParam;\n    #pivotCanvasPos: FloatArrayParam;\n    #cameraDirty: boolean;\n    #onViewMatrix: any;\n    #onProjMatrix: any;\n    #onTick: any;\n    #hideTimeout: any;\n    #pivotElement: any;\n\n    /**\n     * @private\n     */\n    constructor(cameraControl: CameraControl, configs: any) {\n\n        this.#view = cameraControl.view;\n        this.#configs = configs;\n        this.#pivotWorldPos = createVec3();\n        this.#cameraOffset = createVec3();\n        this.#azimuth = 0;\n        this.#polar = 0;\n        this.#radius = 0;\n        this.#pivotPosSet = false; // Initially false, true as soon as #pivotWorldPos has been set to some value\n        this.#pivoting = false; // True while pivoting\n        this.#shown = false;\n        this.#pivotViewPos = createVec4();\n        this.#pivotProjPos = createVec4();\n        this.#pivotViewPos = createVec2();\n        this.#cameraDirty = true;\n\n        this.#onViewMatrix = this.#view.camera.onViewMatrix.subscribe(() => {\n            this.#cameraDirty = true;\n        });\n\n        this.#onProjMatrix = this.#view.camera.onProjMatrix.subscribe(() => {\n            this.#cameraDirty = true;\n        });\n\n        this.#onTick = this.#view.viewer.onTick.subscribe(() => {\n            this.updatePivotElement();\n        });\n    }\n\n    updatePivotElement() {\n        const camera = this.#view.camera;\n        const canvasElement = this.#view.canvasElement;\n        if (this.#pivoting && this.#cameraDirty) {\n            transformPoint3(camera.viewMatrix, this.getPivotPos(), this.#pivotViewPos);\n            this.#pivotViewPos[3] = 1;\n            transformPoint4(camera.projMatrix, this.#pivotViewPos, this.#pivotProjPos);\n            const canvasAABB = this.#view.boundary;\n            const canvasWidth = canvasAABB[2];\n            const canvasHeight = canvasAABB[3];\n            this.#pivotViewPos[0] = Math.floor((1 + this.#pivotProjPos[0] / this.#pivotProjPos[3]) * canvasWidth / 2);\n            this.#pivotViewPos[1] = Math.floor((1 - this.#pivotProjPos[1] / this.#pivotProjPos[3]) * canvasHeight / 2);\n            const canvasBoundingRect = canvasElement.getBoundingClientRect();\n            if (this.#pivotElement) {\n                this.#pivotElement.style.left = (Math.floor(canvasBoundingRect.left + this.#pivotViewPos[0]) - (this.#pivotElement.clientWidth / 2) + window.scrollX) + \"px\";\n                this.#pivotElement.style.top = (Math.floor(canvasBoundingRect.top + this.#pivotViewPos[1]) - (this.#pivotElement.clientHeight / 2) + window.scrollY) + \"px\";\n            }\n            this.#cameraDirty = false;\n        }\n    }\n\n    /**\n     * Sets the HTML DOM element that will represent the pivot position.\n     *\n     * @param pivotElement\n     */\n    setPivotElement(pivotElement: HTMLElement) {\n        this.#pivotElement = pivotElement;\n    }\n\n    /**\n     * Begins pivoting.\n     */\n    startPivot() {\n        if (this.#cameraLookingDownwards()) {\n            this.#pivoting = false;\n            return false;\n        }\n        const camera = this.#view.camera;\n        let lookat = lookAtMat4v(camera.eye, camera.look, camera.worldUp);\n        transformPoint3(lookat, this.getPivotPos(), this.#cameraOffset);\n        const pivotPos = this.getPivotPos();\n        this.#cameraOffset[2] += distVec3(camera.eye, pivotPos);\n        lookat = inverseMat4(lookat);\n        const offset = transformVec3(lookat, this.#cameraOffset);\n        const diff = createVec3();\n        subVec3(camera.eye, pivotPos, diff);\n        addVec3(diff, offset);\n        if (camera.zUp) {\n            const t = diff[1];\n            diff[1] = diff[2];\n            diff[2] = t;\n        }\n        this.#radius = lenVec3(diff);\n        this.#polar = Math.acos(diff[1] / this.#radius);\n        this.#azimuth = Math.atan2(diff[0], diff[2]);\n        this.#pivoting = true;\n    }\n\n    /**\n     * Returns true if we are currently pivoting.\n     *\n     * @returns {boolean}\n     */\n    getPivoting(): boolean {\n        return this.#pivoting;\n    }\n\n    /**\n     * Sets a 3D World-space position to pivot about.\n     *\n     * @param worldPos The new World-space pivot position.\n     */\n    setPivotPos(worldPos: FloatArrayParam) {\n        // @ts-ignore\n        this.#pivotWorldPos.set(worldPos);\n        this.#pivotPosSet = true;\n    }\n\n    /**\n     * Sets the pivot position to the 3D projection of the given 2D canvas coordinates on a sphere centered\n     * at the viewpoint. The radius of the sphere is configured via {@link CameraControl#smartPivot}.\n     *\n     * @param canvasPos\n     */\n    setCanvasPivotPos(canvasPos: FloatArrayParam) {\n        const camera = this.#view.camera;\n        const pivotShereRadius = Math.abs(distVec3(getAABB3Center(this.#view.aabb), camera.eye));\n        const transposedProjectMat = camera.project.transposedProjMatrix;\n        // @ts-ignore\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        // @ts-ignore\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = dotVec4(D, Pt3) / dotVec4(D, Pt4);\n        const worldPos = tempVec4a;\n        camera.project.unproject(canvasPos, screenZ, tempVec4b, tempVec4c, worldPos);\n        const eyeWorldPosVec = normalizeVec3(subVec3(worldPos, camera.eye, tempVec3a));\n        const posOnSphere = addVec3(camera.eye, mulVec3Scalar(eyeWorldPosVec, pivotShereRadius, tempVec3b), tempVec3c);\n        this.setPivotPos(posOnSphere);\n    }\n\n    /**\n     * Gets the current position we're pivoting about.\n     * @returns {Number[]} The current World-space pivot position.\n     */\n    getPivotPos() {\n        return (this.#pivotPosSet) ? this.#pivotWorldPos : this.#view.camera.look; // Avoid pivoting about [0,0,0] by default\n    }\n\n    /**\n     * Continues to pivot.\n     *\n     * @param yawInc Yaw rotation increment.\n     * @param pitchInc Pitch rotation increment.\n     */\n    continuePivot(yawInc: number, pitchInc: number) {\n        if (!this.#pivoting) {\n            return;\n        }\n        if (yawInc === 0 && pitchInc === 0) {\n            return;\n        }\n        const camera = this.#view.camera;\n        let dx = -yawInc;\n        const dy = -pitchInc;\n        if (camera.worldUp[2] === 1) {\n            dx = -dx;\n        }\n        this.#azimuth += -dx * .01;\n        this.#polar += dy * .01;\n        this.#polar = clamp(this.#polar, .001, Math.PI - .001);\n        const pos = [\n            this.#radius * Math.sin(this.#polar) * Math.sin(this.#azimuth),\n            this.#radius * Math.cos(this.#polar),\n            this.#radius * Math.sin(this.#polar) * Math.cos(this.#azimuth)\n        ];\n        if (camera.worldUp[2] === 1) {\n            const t = pos[1];\n            pos[1] = pos[2];\n            pos[2] = t;\n        }\n        // Preserve the eye->look distance, since in xeokit \"look\" is the point-of-interest, not the direction vector.\n        const eyeLookLen = lenVec3(subVec3(camera.look, camera.eye, createVec3()));\n        const pivotPos = this.getPivotPos();\n        addVec3(pos, pivotPos);\n        let lookat = lookAtMat4v(pos, pivotPos, camera.worldUp);\n        lookat = inverseMat4(lookat);\n        const offset = transformVec3(lookat, this.#cameraOffset);\n        lookat[12] -= offset[0];\n        lookat[13] -= offset[1];\n        lookat[14] -= offset[2];\n        const zAxis = [lookat[8], lookat[9], lookat[10]];\n        camera.eye = [lookat[12], lookat[13], lookat[14]];\n        subVec3(camera.eye, mulVec3Scalar(zAxis, eyeLookLen), camera.look);\n        camera.up = [lookat[4], lookat[5], lookat[6]];\n        this.showPivot();\n    }\n\n    /**\n     * Shows the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    showPivot() {\n        if (this.#shown) {\n            return;\n        }\n        if (this.#hideTimeout !== null) {\n            window.clearTimeout(this.#hideTimeout);\n            this.#hideTimeout = null;\n        }\n        if (this.#pivotElement) {\n            this.updatePivotElement();\n            this.#pivotElement.style.visibility = \"visible\";\n            this.#shown = true;\n            this.#hideTimeout = window.setTimeout(() => {\n                this.hidePivot();\n            }, 1000);\n        }\n    }\n\n    /**\n     * Hides the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    hidePivot() {\n        if (!this.#shown) {\n            return;\n        }\n        if (this.#hideTimeout !== null) {\n            window.clearTimeout(this.#hideTimeout);\n            this.#hideTimeout = null;\n        }\n        if (this.#pivotElement) {\n            this.#pivotElement.style.visibility = \"hidden\";\n        }\n        this.#shown = false;\n    }\n\n    /**\n     * Finishes pivoting.\n     */\n    endPivot() {\n        this.#pivoting = false;\n    }\n\n    destroy() {\n        this.#view.camera.onViewMatrix.unsubscribe(this.#onViewMatrix);\n        this.#view.camera.onProjMatrix.unsubscribe(this.#onProjMatrix);\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n\n    #cameraLookingDownwards() { // Returns true if angle between camera viewing direction and World-space \"up\" axis is too small\n        const camera = this.#view.camera;\n        const forwardAxis = normalizeVec3(subVec3(camera.look, camera.eye, tempVec3a));\n        const rightAxis = cross3Vec3(forwardAxis, camera.worldUp, tempVec3b);\n        let rightAxisLen = sqLenVec3(rightAxis);\n        return (rightAxisLen <= 0.0001);\n    }\n}\n\nexport {PivotController};","import {createVec2} from \"@xeokit/matrix\";\nimport type {View} from \"@xeokit/viewer\";\nimport type {CameraControl} from \"./CameraControl\";\n\n/**\n * @private\n */\nclass PickController {\n\n    /**\n     * Set true to schedule picking of an Entity.\n     */\n    schedulePickEntity: boolean;\n\n    /**\n     * Set true to schedule picking of a position on teh surface of an Entity.\n     */\n    schedulePickSurface: boolean;\n\n    /**\n     * The canvas position at which to do the next scheduled pick.\n     */\n    pickCursorPos: any;\n\n    /**\n     * Will be true after picking to indicate that something was picked.\n     */\n    picked: boolean;\n\n    /**\n     * Will be true after picking to indicate that a position on the surface of an Entity was picked.\n     */\n    pickedSurface: boolean;\n\n    /**\n     * Will hold the PickResult after after picking.\n     */\n    pickResult: any;\n    #view: View;\n    #cameraControl: CameraControl;\n    #config: any;\n    #lastPickedobjectId: any;\n    #needFireEvents: boolean;\n\n    constructor(cameraControl: CameraControl, configs: any) {\n        this.#view = cameraControl.view;\n        this.#cameraControl = cameraControl;\n        this.#view.canvasElement.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n        this.#config = configs;\n        this.schedulePickEntity = false;\n        this.schedulePickSurface = false;\n        this.pickCursorPos = createVec2();\n        this.picked = false;\n        this.pickedSurface = false;\n        this.pickResult = null;\n        this.#lastPickedobjectId = null;\n        this.#needFireEvents = false;\n    }\n\n    /**\n     * Immediately attempts a pick, if scheduled.\n     */\n    update() {\n\n        if (!this.#config.pointerEnabled) {\n            return;\n        }\n\n        if (!this.schedulePickEntity && !this.schedulePickSurface) {\n            return;\n        }\n\n        this.picked = false;\n        this.pickedSurface = false;\n        this.#needFireEvents = false;\n\n        const hasHoverSurfaceSubs = (this.#cameraControl.onHoverSurface.count > 0);\n\n        if (this.schedulePickSurface) {\n            // @ts-ignore\n            if (this.pickResult && this.pickResult.worldPos) {\n                const pickResultViewPos = this.pickResult.canvasPos;\n                if (pickResultViewPos[0] === this.pickCursorPos[0] && pickResultViewPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = true;\n                    this.#needFireEvents = hasHoverSurfaceSubs;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        if (this.schedulePickEntity) {\n            if (this.pickResult) {\n                const pickResultViewPos = this.pickResult.canvasPos;\n                if (pickResultViewPos[0] === this.pickCursorPos[0] && pickResultViewPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = false;\n                    this.#needFireEvents = false;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        // if (this.schedulePickSurface) {\n        //\n        //     this.pickResult = this.#view.pick({\n        //         pickSurface: true,\n        //         pickSurfaceNormal: false,\n        //         canvasPos: this.pickCursorPos\n        //     });\n        //\n        //     if (this.pickResult) {\n        //         this.picked = true;\n        //         this.pickedSurface = true;\n        //         this.#needFireEvents = true;\n        //     }\n        //\n        // } else { // schedulePickEntity == true\n        //\n        //     this.pickResult = this.#view.pick({\n        //         canvasPos: this.pickCursorPos\n        //     });\n        //\n        //     if (this.pickResult) {\n        //         this.picked = true;\n        //         this.pickedSurface = false;\n        //         this.#needFireEvents = true;\n        //     }\n        // }\n\n        this.schedulePickEntity = false;\n        this.schedulePickSurface = false;\n    }\n\n    fireEvents() {\n\n        if (!this.#needFireEvents) {\n            return;\n        }\n\n        if (this.picked && this.pickResult && this.pickResult.entity) {\n\n            const pickedobjectId = this.pickResult.entity.id;\n\n            if (this.#lastPickedobjectId !== pickedobjectId) {\n\n                if (this.#lastPickedobjectId !== undefined && this.#lastPickedobjectId !== null) {\n                    this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, {\n                        entity: this.#view.objects[this.#lastPickedobjectId]\n                    });\n                }\n\n                this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, this.pickResult);\n                this.#lastPickedobjectId = pickedobjectId;\n            }\n\n            this.#cameraControl.onHover.dispatch(this.#cameraControl, this.pickResult);\n\n            if (this.pickResult.worldPos) {\n                this.pickedSurface = true;\n                this.#cameraControl.onHoverSurface.dispatch(this.#cameraControl, this.pickResult);\n            }\n\n        } else {\n\n            if (this.#lastPickedobjectId !== undefined && this.#lastPickedobjectId !== null) {\n                this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, {\n                    entity: this.#view.objects[this.#lastPickedobjectId]\n                });\n                this.#lastPickedobjectId = undefined;\n            }\n\n            this.#cameraControl.onHoverOff.dispatch(this.#cameraControl, {\n                canvasPos: this.pickCursorPos\n            });\n        }\n\n        this.pickResult = null;\n\n        this.#needFireEvents = false;\n    }\n\n    destroy() {\n    }\n}\n\nexport {PickController};\n","import {createVec2, lenVec3, subVec3} from \"@xeokit/matrix\";\nimport {PerspectiveProjectionType} from \"@xeokit/constants\";\nimport type {View} from \"@xeokit/viewer\";\nimport * as keycodes from \"./keycodes\";\n\nconst canvasPos = createVec2();\n\n/**\n * @private\n */\nexport class MousePanRotateDollyHandler {\n\n    #view: View;\n\n    #documentKeyDownHandler: (e: any) => void;\n    #documentKeyUpHandler: (e: any) => void;\n    #mouseDownHandler: (e: any) => void;\n    #documentMouseMoveHandler: () => void;\n    #canvasMouseMoveHandler: (e: any) => void;\n    #documentMouseUpHandler: (e: any) => void;\n    #mouseUpHandler: (e: any) => void;\n    #mouseEnterHandler: (e: any) => void;\n    #mouseWheelHandler: (e: { deltaY: number; preventDefault: () => void }) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n\n        let lastX = 0;\n        let lastY = 0;\n        let lastXDown = 0;\n        let lastYDown = 0;\n        let xRotateDelta = 0;\n        let yRotateDelta = 0;\n\n        let mouseDownLeft: boolean;\n        let mouseDownMiddle: boolean;\n        let mouseDownRight: boolean;\n\n        let mouseDownPicked = false;\n        const pickedWorldPos = new Float64Array(3);\n\n        let mouseMovedOnViewSinceLastWheel = true;\n\n        const canvasElement = this.#view.canvasElement;\n\n        const keyDown: any[] = [];\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = true;\n        });\n\n        document.addEventListener(\"keyup\", this.#documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = false;\n        });\n\n        function setMousedownState(pick = true) {\n            canvasElement.style.cursor = \"move\";\n            setMousedownPositions();\n            if (pick) {\n                setMousedownPick();\n            }\n        }\n\n        function setMousedownPositions() {\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n            lastX = states.pointerViewPos[0];\n            lastY = states.pointerViewPos[1];\n            lastXDown = states.pointerViewPos[0];\n            lastYDown = states.pointerViewPos[1];\n        }\n\n        function setMousedownPick() {\n            pickController.pickCursorPos = states.pointerViewPos;\n            pickController.schedulePickSurface = true;\n            pickController.update();\n            if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n                mouseDownPicked = true;\n                pickedWorldPos.set(pickController.pickResult.worldPos);\n            } else {\n                mouseDownPicked = false;\n            }\n        }\n\n        canvasElement.addEventListener(\"mousedown\", this.#mouseDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 1: // Left button\n                    if (keyDown[keycodes.KEY_SHIFT] || configs.planView) {\n                        mouseDownLeft = true;\n                        setMousedownState();\n                    } else {\n                        mouseDownLeft = true;\n                        setMousedownState(false);\n                    }\n                    break;\n                case 2: // Middle/both buttons\n                    mouseDownMiddle = true;\n                    setMousedownState();\n                    break;\n                case 3: // Right button\n                    mouseDownRight = true;\n                    if (configs.panRightClick) {\n                        setMousedownState();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        document.addEventListener(\"mousemove\", this.#documentMouseMoveHandler = () => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n                return;\n            }\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = this.#view.boundary;\n            const canvasWidth = canvasBoundary[0];\n            const canvasHeight = canvasBoundary[1];\n            const x = states.pointerViewPos[0];\n            const y = states.pointerViewPos[1];\n\n            const panning = keyDown[keycodes.KEY_SHIFT] || configs.planView || (!configs.panRightClick && mouseDownMiddle) || (configs.panRightClick && mouseDownRight);\n\n            if (panning) {\n\n                const xPanDelta = (x - lastX);\n                const yPanDelta = (y - lastY);\n\n                const camera = this.#view.camera;\n\n                // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                if (camera.projectionType === PerspectiveProjectionType) {\n\n                    const depth = Math.abs(mouseDownPicked ? lenVec3(subVec3(pickedWorldPos, this.#view.camera.eye, [])) : this.#view.camera.eyeLookDist);\n                    const targetDistance = depth * Math.tan((camera.perspectiveProjection.fov / 2) * Math.PI / 180.0);\n\n                    updates.panDeltaX += (1.5 * xPanDelta * targetDistance / canvasHeight);\n                    updates.panDeltaY += (1.5 * yPanDelta * targetDistance / canvasHeight);\n\n                } else {\n\n                    updates.panDeltaX += 0.5 * camera.orthoProjection.scale * (xPanDelta / canvasHeight);\n                    updates.panDeltaY += 0.5 * camera.orthoProjection.scale * (yPanDelta / canvasHeight);\n                }\n\n            } else if (mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n\n                if (!configs.planView) { // No rotating in plan-view mode\n\n                    if (configs.firstPerson) {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * configs.dragRotationRate / 2;\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate / 4);\n\n                    } else {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * (configs.dragRotationRate * 1.5);\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate * 1.5);\n                    }\n                }\n            }\n\n            lastX = x;\n            lastY = y;\n        });\n\n        canvasElement.addEventListener(\"mousemove\", this.#canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            mouseMovedOnViewSinceLastWheel = true;\n        });\n\n        document.addEventListener(\"mouseup\", this.#documentMouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 1: // Left button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 2: // Middle/both buttons\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 3: // Right button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        canvasElement.addEventListener(\"mouseup\", this.#mouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 3: // Right button\n                    getViewPosFromEvent(e, canvasPos);\n                    const x = canvasPos[0];\n                    const y = canvasPos[1];\n                    if (Math.abs(x - lastXDown) < 3 && Math.abs(y - lastYDown) < 3) {\n                        controllers.cameraControl.events.fire(\"rightClick\", { // For context menus\n                            pagePos: [Math.round(e.pageX), Math.round(e.pageY)],\n                            canvasPos: canvasPos,\n                            event: e\n                        }, true);\n                    }\n                    break;\n                default:\n                    break;\n            }\n            canvasElement.style.removeProperty(\"cursor\");\n        });\n\n        canvasElement.addEventListener(\"mouseenter\", this.#mouseEnterHandler = () => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        const maxElapsed = 1 / 20;\n        const minElapsed = 1 / 60;\n\n        let secsNowLast: number | null = null;\n\n        canvasElement.addEventListener(\"wheel\", this.#mouseWheelHandler = (e: { deltaY: number; preventDefault: () => void; }) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            const secsNow = performance.now() / 1000.0;\n            let secsElapsed = (secsNowLast !== null) ? (secsNow - secsNowLast) : 0;\n            secsNowLast = secsNow;\n            if (secsElapsed > maxElapsed) {\n                secsElapsed = maxElapsed;\n            }\n            if (secsElapsed < minElapsed) {\n                secsElapsed = minElapsed;\n            }\n            const delta = Math.max(-1, Math.min(1, -e.deltaY * 40));\n            if (delta === 0) {\n                return;\n            }\n            const normalizedDelta = delta / Math.abs(delta);\n            updates.dollyDelta += -normalizedDelta * secsElapsed * configs.mouseWheelDollyRate;\n\n            if (mouseMovedOnViewSinceLastWheel) {\n                states.followPointerDirty = true;\n                mouseMovedOnViewSinceLastWheel = false;\n            }\n\n            e.preventDefault();\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        const canvasElement = this.#view.canvasElement;\n\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this.#documentKeyUpHandler);\n        canvasElement.removeEventListener(\"mousedown\", this.#mouseDownHandler);\n        document.removeEventListener(\"mousemove\", this.#documentMouseMoveHandler);\n        canvasElement.removeEventListener(\"mousemove\", this.#canvasMouseMoveHandler);\n        document.removeEventListener(\"mouseup\", this.#documentMouseUpHandler);\n        canvasElement.removeEventListener(\"mouseup\", this.#mouseUpHandler);\n        canvasElement.removeEventListener(\"mouseenter\", this.#mouseEnterHandler);\n        canvasElement.removeEventListener(\"wheel\", this.#mouseWheelHandler);\n    }\n}\n\nconst getViewPosFromEvent = function (event: any, canvasPos: any) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n\n","/**\n * Code for the BACKSPACE key.\n */\nexport const KEY_BACKSPACE: number = 8;\n\n/**\n * Code for the TAB key.\n */\nexport const KEY_TAB: number = 9;\n\n/**\n * Code for the ENTER key.\n */\nexport const KEY_ENTER: number = 13;\n\n/**\n * Code for the SHIFT key.\n */\nexport const KEY_SHIFT: number = 16;\n\n/**\n * Code for the CTRL key.\n */\nexport const KEY_CTRL: number = 17;\n\n/**\n * Code for the ALT key.\n */\nexport const KEY_ALT: number = 18;\n\n/**\n * Code for the PAUSE_BREAK key.\n */\nexport const KEY_PAUSE_BREAK: number = 19;\n\n/**\n * Code for the CAPS_LOCK key.\n */\nexport const KEY_CAPS_LOCK: number = 20;\n\n/**\n * Code for the ESCAPE key.\n */\nexport const KEY_ESCAPE: number = 27;\n\n/**\n * Code for the PAGE_UP key.\n */\nexport const KEY_PAGE_UP: number = 33;\n\n/**\n * Code for the PAGE_DOWN key.\n */\nexport const KEY_PAGE_DOWN: number = 34;\n\n/**\n * Code for the END key.\n */\nexport const KEY_END: number = 35;\n\n/**\n * Code for the HOME key.\n */\nexport const KEY_HOME: number = 36;\n\n/**\n * Code for the LEFT_ARROW key.\n */\nexport const KEY_LEFT_ARROW: number = 37;\n\n/**\n * Code for the UP_ARROW key.\n\n */\nexport const KEY_UP_ARROW: number = 38;\n\n/**\n * Code for the RIGHT_ARROW key.\n */\nexport const KEY_RIGHT_ARROW: number = 39;\n\n/**\n * Code for the DOWN_ARROW key.\n */\nexport const KEY_DOWN_ARROW: number = 40;\n\n/**\n * Code for the INSERT key.\n */\nexport const KEY_INSERT: number = 45;\n\n/**\n * Code for the DELETE key.\n */\nexport const KEY_DELETE: number = 46;\n\n/**\n * Code for the 0 key.\n */\nexport const KEY_NUM_0: number = 48;\n\n/**\n * Code for the 1 key.\n */\nexport const KEY_NUM_1: number = 49;\n\n/**\n * Code for the 2 key.\n */\nexport const KEY_NUM_2: number = 50;\n\n/**\n * Code for the 3 key.\n */\nexport const KEY_NUM_3: number = 51;\n\n/**\n * Code for the 4 key.\n */\nexport const KEY_NUM_4: number = 52;\n\n/**\n * Code for the 5 key.\n */\nexport const KEY_NUM_5: number = 53;\n\n/**\n * Code for the 6 key.\n */\nexport const KEY_NUM_6: number = 54;\n\n/**\n * Code for the 7 key.\n */\nexport const KEY_NUM_7: number = 55;\n\n/**\n * Code for the 8 key.\n */\nexport const KEY_NUM_8: number = 56;\n\n/**\n * Code for the 9 key.\n */\nexport const KEY_NUM_9: number = 57;\n\n/**\n * Code for the A key.\n */\nexport const KEY_A: number = 65;\n\n/**\n * Code for the B key.\n */\nexport const KEY_B: number = 66;\n\n/**\n * Code for the C key.\n */\nexport const KEY_C: number = 67;\n\n/**\n * Code for the D key.\n */\nexport const KEY_D: number = 68;\n\n/**\n * Code for the E key.\n */\nexport const KEY_E: number = 69;\n\n/**\n * Code for the F key.\n */\nexport const KEY_F: number = 70;\n\n/**\n * Code for the G key.\n */\nexport const KEY_G: number = 71;\n\n/**\n * Code for the H key.\n */\nexport const KEY_H: number = 72;\n\n/**\n * Code for the I key.\n */\nexport const KEY_I: number = 73;\n\n/**\n * Code for the J key.\n */\nexport const KEY_J: number = 74;\n\n/**\n * Code for the K key.\n */\nexport const KEY_K: number = 75;\n\n/**\n * Code for the L key.\n */\nexport const KEY_L: number = 76;\n\n/**\n * Code for the M key.\n */\nexport const KEY_M: number = 77;\n\n/**\n * Code for the N key.\n */\nexport const KEY_N: number = 78;\n\n/**\n * Code for the O key.\n */\nexport const KEY_O: number = 79;\n\n/**\n * Code for the P key.\n */\nexport const KEY_P: number = 80;\n\n/**\n * Code for the Q key.\n */\nexport const KEY_Q: number = 81;\n\n/**\n * Code for the R key.\n */\nexport const KEY_R: number = 82;\n\n/**\n * Code for the S key.\n */\nexport const KEY_S: number = 83;\n\n/**\n * Code for the T key.\n */\nexport const KEY_T: number = 84;\n\n/**\n * Code for the U key.\n */\nexport const KEY_U: number = 85;\n\n/**\n * Code for the V key.\n */\nexport const KEY_V: number = 86;\n\n/**\n * Code for the W key.\n */\nexport const KEY_W: number = 87;\n\n/**\n * Code for the X key.\n */\nexport const KEY_X: number = 88;\n\n/**\n * Code for the Y key.\n */\nexport const KEY_Y: number = 89;\n\n/**\n * Code for the Z key.\n */\nexport const KEY_Z: number = 90;\n\n/**\n * Code for the LEFT_WINDOW key.\n */\nexport const KEY_LEFT_WINDOW: number = 91;\n\n/**\n * Code for the RIGHT_WINDOW key.\n */\nexport const KEY_RIGHT_WINDOW: number = 92;\n\n/**\n * Code for the SELECT key.\n */\nexport const KEY_SELECT_KEY: number = 93;\n\n/**\n * Code for the number pad 0 key.\n */\nexport const KEY_NUMPAD_0: number = 96;\n\n/**\n * Code for the number pad 1 key.\n */\nexport const KEY_NUMPAD_1: number = 97;\n\n/**\n * Code for the number pad 2 key.\n */\nexport const KEY_NUMPAD_2: number = 98;\n\n/**\n * Code for the number pad 3 key.\n */\nexport const KEY_NUMPAD_3: number = 99;\n\n/**\n * Code for the number pad 4 key.\n */\nexport const KEY_NUMPAD_4: number = 100;\n\n/**\n * Code for the number pad 5 key.\n */\nexport const KEY_NUMPAD_5: number = 101;\n\n/**\n * Code for the number pad 6 key.\n */\nexport const KEY_NUMPAD_6: number = 102;\n\n/**\n * Code for the number pad 7 key.\n */\nexport const KEY_NUMPAD_7: number = 103;\n\n/**\n * Code for the number pad 8 key.\n */\nexport const KEY_NUMPAD_8: number = 104;\n\n/**\n * Code for the number pad 9 key.\n */\nexport const KEY_NUMPAD_9: number = 105;\n\n/**\n * Code for the MULTIPLY key.\n */\nexport const KEY_MULTIPLY: number = 106;\n\n/**\n * Code for the ADD key.\n */\nexport const KEY_ADD: number = 107;\n\n/**\n * Code for the SUBTRACT key.\n */\nexport const KEY_SUBTRACT: number = 109;\n\n/**\n * Code for the DECIMAL POINT key.\n */\nexport const KEY_DECIMAL_POINT: number = 110;\n\n/**\n * Code for the DIVIDE key.\n */\nexport const KEY_DIVIDE: number = 111;\n\n/**\n * Code for the F1 key.\n */\nexport const KEY_F1: number = 112;\n\n/**\n * Code for the F2 key.\n */\nexport const KEY_F2: number = 113;\n\n/**\n * Code for the F3 key.\n */\nexport const KEY_F3: number = 114;\n\n/**\n * Code for the F4 key.\n */\nexport const KEY_F4: number = 115;\n\n/**\n * Code for the F5 key.\n */\nexport const KEY_F5: number = 116;\n\n/**\n * Code for the F6 key.\n */\nexport const KEY_F6: number = 117;\n\n/**\n * Code for the F7 key.\n */\nexport const KEY_F7: number = 118;\n\n/**\n * Code for the F8 key.\n */\nexport const KEY_F8: number = 119;\n\n/**\n * Code for the F9 key.\n */\nexport const KEY_F9: number = 120;\n\n/**\n * Code for the F10 key.\n */\nexport const KEY_F10: number = 121;\n\n/**\n * Code for the F11 key.\n */\nexport const KEY_F11: number = 122;\n\n/**\n * Code for the F12 key.\n */\nexport const KEY_F12: number = 123;\n\n/**\n * Code for the NUM_LOCK key.\n */\nexport const KEY_NUM_LOCK: number = 144;\n\n/**\n * Code for the SCROLL_LOCK key.\n */\nexport const KEY_SCROLL_LOCK: number = 145;\n\n/**\n * Code for the SEMI_COLON key.\n */\nexport const KEY_SEMI_COLON: number = 186;\n\n/**\n * Code for the EQUAL_SIGN key.\n */\nexport const KEY_EQUAL_SIGN: number = 187;\n\n/**\n * Code for the COMMA key.\n */\nexport const KEY_COMMA: number = 188;\n\n/**\n * Code for the DASH key.\n */\nexport const KEY_DASH: number = 189;\n\n/**\n * Code for the PERIOD key.\n */\nexport const KEY_PERIOD: number = 190;\n\n/**\n * Code for the FORWARD_SLASH key.\n */\nexport const KEY_FORWARD_SLASH: number = 191;\n\n/**\n * Code for the GRAVE_ACCENT key.\n */\nexport const KEY_GRAVE_ACCENT: number = 192;\n\n/**\n * Code for the OPEN_BRACKET key.\n */\nexport const KEY_OPEN_BRACKET: number = 219;\n\n/**\n * Code for the BACK_SLASH key.\n */\nexport const KEY_BACK_SLASH: number = 220;\n\n/**\n * Code for the CLOSE_BRACKET key.\n */\nexport const KEY_CLOSE_BRACKET: number = 221;\n\n/**\n * Code for the SINGLE_QUOTE key.\n */\nexport const KEY_SINGLE_QUOTE: number = 222;\n\n/**\n * Code for the SPACE key.\n */\nexport const KEY_SPACE: number = 32;","import {addVec3, mulVec3Scalar, normalizeVec3, createVec3} from \"@xeokit/matrix\";\nimport {getAABB3Center, getAABB3Diag} from \"@xeokit/boundaries\";\nimport {DEGTORAD} from \"@xeokit/math\";\n\n\nconst center = createVec3();\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\nconst tempVec3d = createVec3();\n\nconst tempCameraTarget = {\n    eye: new Float64Array(3),\n    look: new Float64Array(3),\n    up: new Float64Array(3),\n    orthoScale: 1\n};\n\n/**\n * @private\n */\nclass KeyboardAxisViewHandler {\n\n    #documentKeyDownHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        const view = components.view;\n        const camera = components.camera;\n        const cameraControl = controllers.cameraControl;\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const axisViewRight = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_RIGHT);\n            const axisViewBack = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BACK);\n            const axisViewLeft = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_LEFT);\n            const axisViewFront = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_FRONT);\n            const axisViewTop = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_TOP);\n            const axisViewBottom = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BOTTOM);\n\n            if ((!axisViewRight) && (!axisViewBack) && (!axisViewLeft) && (!axisViewFront) && (!axisViewTop) && (!axisViewBottom)) {\n                return;\n            }\n\n            const aabb = view.aabb;\n            const diag = getAABB3Diag(aabb);\n\n            getAABB3Center(aabb, center);\n\n            const perspectiveDist = Math.abs(diag / Math.tan(controllers.cameraFlight.fitFOV * DEGTORAD));\n            const orthoScale = diag * 1.1;\n\n            tempCameraTarget.orthoScale = orthoScale;\n\n            if (axisViewRight) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldRight, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewBack) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldForward, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewLeft) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldRight, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewFront) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldForward, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewTop) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldUp, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(normalizeVec3(mulVec3Scalar(camera.worldForward, 1, tempVec3b), tempVec3c));\n\n            } else if (axisViewBottom) {\n\n                tempCameraTarget.eye.set(addVec3(center, mulVec3Scalar(camera.worldUp, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(normalizeVec3(mulVec3Scalar(camera.worldForward, -1, tempVec3b)));\n            }\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n                controllers.pivotController.setPivotPos(center);\n            }\n\n            if (controllers.cameraFlight.duration > 0) {\n                controllers.cameraFlight.flyTo(tempCameraTarget, () => {\n                    if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                        controllers.pivotController.showPivot();\n                    }\n                });\n\n            } else {\n                controllers.cameraFlight.jumpTo(tempCameraTarget);\n                if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                    controllers.pivotController.showPivot();\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n    }\n}\n\nexport {KeyboardAxisViewHandler};","\n\nimport {subVec3} from \"@xeokit/matrix\";\nimport {getAABB3Center} from \"@xeokit/boundaries\";\nimport type {PickResult, View} from \"@xeokit/viewer\";\n\n/**\n * @private\n */\nclass MousePickHandler {\n\n    #view: View;\n    #clicks: number;\n    #timeout: any;\n    #lastPickedobjectId: any;\n    #canvasMouseMoveHandler: (e: any) => void;\n    #canvasMouseDownHandler: (e: any) => void;\n    #documentMouseUpHandler: (e: any) => void;\n    #canvasMouseUpHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const cameraControl = controllers.cameraControl;\n\n        this.#clicks = 0;\n        this.#timeout = null;\n        this.#lastPickedobjectId = null;\n\n        let leftDown = false;\n        let rightDown = false;\n\n        const canvasElement = this.#view.canvasElement;\n\n        const flyCameraTo = (pickResult?: PickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = pickResult && pickResult.viewObject\n                ? pickResult.viewObject.aabb\n                : this.#view.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = this.#view.camera;\n                const diff = subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    // look: pos,\n                    // eye: xeokit.addVec3(pos, diff, []),\n                    // up: camera.up,\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvasElement.addEventListener(\"mousemove\", this.#canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (leftDown || rightDown) {\n                return;\n            }\n\n            const hoverSubs = cameraControl.events.hasSubs(\"hover\");\n            const hoverOutSubs = cameraControl.events.hasSubs(\"hoverOut\");\n            const hoverOffSubs = cameraControl.events.hasSubs(\"hoverOff\");\n            const hoverSurfaceSubs = cameraControl.events.hasSubs(\"hoverSurface\");\n\n            if (hoverSubs || hoverOutSubs || hoverOffSubs || hoverSurfaceSubs) {\n\n                pickController.pickCursorPos = states.pointerViewPos;\n                pickController.schedulePickEntity = true;\n                pickController.schedulePickSurface = hoverSurfaceSubs;\n\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    const pickedobjectId = pickController.pickResult.entity.id;\n\n                    if (this.#lastPickedobjectId !== pickedobjectId) {\n\n                        if (this.#lastPickedobjectId !== undefined) {\n\n                            cameraControl.events.fire(\"hoverOut\", { // Hovered off an entity\n                                entity: this.#view.objects[this.#lastPickedobjectId]\n                            }, true);\n                        }\n\n                        cameraControl.events.fire(\"hoverEnter\", pickController.pickResult, true); // Hovering over a new entity\n\n                        this.#lastPickedobjectId = pickedobjectId;\n                    }\n\n                    cameraControl.events.fire(\"hover\", pickController.pickResult, true);\n\n                    if (pickController.pickResult.worldPos) { // Hovering the surface of an entity\n                        cameraControl.events.fire(\"hoverSurface\", pickController.pickResult, true);\n                    }\n\n                } else {\n\n                    if (this.#lastPickedobjectId !== undefined) {\n\n                        cameraControl.events.fire(\"hoverOut\", { // Hovered off an entity\n                            entity: this.#view.objects[this.#lastPickedobjectId]\n                        }, true);\n\n                        this.#lastPickedobjectId = undefined;\n                    }\n\n                    cameraControl.events.fire(\"hoverOff\", { // Not hovering on any entity\n                        canvasPos: pickController.pickCursorPos\n                    }, true);\n                }\n            }\n        });\n\n        canvasElement.addEventListener('mousedown', this.#canvasMouseDownHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = true;\n            }\n\n            if (e.which === 3) {\n                rightDown = true;\n            }\n\n            const leftButtonDown = (e.which === 1);\n\n            if (!leftButtonDown) {\n                return;\n            }\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            // Left mouse button down to start pivoting\n\n            states.mouseDownClientX = e.clientX;\n            states.mouseDownClientY = e.clientY;\n            states.mouseDownCursorX = states.pointerViewPos[0];\n            states.mouseDownCursorY = states.pointerViewPos[1];\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n\n                pickController.pickCursorPos = states.pointerViewPos;\n                pickController.schedulePickSurface = true;\n\n                pickController.update();\n\n                if (e.which === 1) {// Left button\n                    const pickResult = pickController.pickResult;\n                    if (pickResult && pickResult.worldPos) {\n                        pivotController.setPivotPos(pickResult.worldPos);\n                        pivotController.startPivot();\n                    } else {\n                        if (configs.smartPivot) {\n                            pivotController.setViewPivotPos(states.pointerViewPos);\n                        } else {\n                            pivotController.setPivotPos(this.#view.camera.look);\n                        }\n                        pivotController.startPivot();\n                    }\n                }\n            }\n        });\n\n        document.addEventListener('mouseup', this.#documentMouseUpHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = false;\n            }\n\n            if (e.which === 3) {\n                rightDown = false;\n            }\n        });\n\n        canvasElement.addEventListener('mouseup', this.#canvasMouseUpHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const leftButtonUp = (e.which === 1);\n\n            if (!leftButtonUp) {\n                return;\n            }\n\n            // Left mouse button up to possibly pick or double-pick\n\n            pivotController.hidePivot();\n\n            if (Math.abs(e.clientX - states.mouseDownClientX) > 3 || Math.abs(e.clientY - states.mouseDownClientY) > 3) {\n                return;\n            }\n\n            const pickedSubs = cameraControl.events.hasSubs(\"picked\");\n            const pickedNothingSubs = cameraControl.events.hasSubs(\"pickedNothing\");\n            const pickedSurfaceSubs = cameraControl.events.hasSubs(\"pickedSurface\");\n            const doublePickedSubs = cameraControl.events.hasSubs(\"doublePicked\");\n            const doublePickedSurfaceSubs = cameraControl.events.hasSubs(\"doublePickedSurface\");\n            const doublePickedNothingSubs = cameraControl.events.hasSubs(\"doublePickedNothing\");\n\n            if ((!configs.doublePickFlyTo) &&\n                (!doublePickedSubs) &&\n                (!doublePickedSurfaceSubs) &&\n                (!doublePickedNothingSubs)) {\n\n                //  Avoid the single/double click differentiation timeout\n\n                if (pickedSubs || pickedNothingSubs || pickedSurfaceSubs) {\n\n                    pickController.pickCursorPos = states.pointerViewPos;\n                    pickController.schedulePickEntity = true;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.events.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n                            cameraControl.events.fire(\"pickedSurface\", pickController.pickResult, true);\n                        }\n                    } else {\n                        cameraControl.events.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerViewPos\n                        }, true);\n                    }\n                }\n\n                this.#clicks = 0;\n\n                return;\n            }\n\n            this.#clicks++;\n\n            if (this.#clicks === 1) { // First click\n\n                this.#timeout = setTimeout(() => {\n\n                    pickController.pickCursorPos = states.pointerViewPos;\n                    pickController.schedulePickEntity = configs.doublePickFlyTo;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.events.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n\n                            cameraControl.events.fire(\"pickedSurface\", pickController.pickResult, true);\n\n                            if ((!configs.firstPerson) && configs.followPointer) {\n                                controllers.pivotController.setPivotPos(pickController.pickResult.worldPos);\n                                if (controllers.pivotController.startPivot()) {\n                                    controllers.pivotController.showPivot();\n                                }\n                            }\n                        }\n                    } else {\n                        cameraControl.events.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerViewPos\n                        }, true);\n                    }\n\n                    this.#clicks = 0;\n\n                }, 250);  // FIXME: Too short for track pads\n\n            } else { // Second click\n\n                if (this.#timeout !== null) {\n                    window.clearTimeout(this.#timeout);\n                    this.#timeout = null;\n                }\n\n                pickController.pickCursorPos = states.pointerViewPos;\n                pickController.schedulePickEntity = configs.doublePickFlyTo || doublePickedSubs || doublePickedSurfaceSubs;\n                pickController.schedulePickSurface = pickController.schedulePickEntity && doublePickedSurfaceSubs;\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    cameraControl.events.fire(\"doublePicked\", pickController.pickResult, true);\n\n                    if (pickController.pickedSurface) {\n                        cameraControl.onDoublePickedSurface.dispatch( pickController.pickResult, true);\n                    }\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo(pickController.pickResult);\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const pickedEntityAABB = pickController.pickResult.entity.aabb;\n                            const pickedEntityCenterPos = getAABB3Center(pickedEntityAABB);\n\n                            controllers.pivotController.setPivotPos(pickedEntityCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n\n                } else {\n\n                    cameraControl.events.fire(\"doublePickedNothing\", {\n                        canvasPos: states.pointerViewPos\n                    }, true);\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo();\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const viewAABB = this.#view.aabb;\n                            const viewCenterPos = getAABB3Center(viewAABB);\n\n                            controllers.pivotController.setPivotPos(viewCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n                this.#clicks = 0;\n            }\n        }, false);\n    }\n\n    reset() {\n        this.#clicks = 0;\n        this.#lastPickedobjectId = null;\n        if (this.#timeout) {\n            window.clearTimeout(this.#timeout);\n            this.#timeout = null;\n        }\n    }\n\n    destroy() {\n        const canvasElement = this.#view.canvasElement;\n        canvasElement.removeEventListener(\"mousemove\", this.#canvasMouseMoveHandler);\n        canvasElement.removeEventListener(\"mousedown\", this.#canvasMouseDownHandler);\n        document.removeEventListener(\"mouseup\", this.#documentMouseUpHandler);\n        canvasElement.removeEventListener(\"mouseup\", this.#canvasMouseUpHandler);\n        if (this.#timeout) {\n            window.clearTimeout(this.#timeout);\n            this.#timeout = null;\n        }\n    }\n}\n\n\nexport {MousePickHandler};","\n\nimport type {View} from \"@xeokit/viewer\";\nimport * as keycodes from \"./keycodes\";\n\n/**\n * @private\n */\nclass KeyboardPanRotateDollyHandler {\n\n    #view: View;\n    #documentMouseMoveHandler: () => void;\n    #documentKeyDownHandler: (e: any) => void;\n    #documentKeyUpHandler: (e: any) => void;\n    #onTick: any;\n\n    ///////////////////\n  // >>> FIX constructor sigs\n    /////////////////////\n    private keycodes: number;\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const keyDownMap: any[] = [];\n        const canvasElement = components.view.canvasElement;\n\n        let mouseMovedSinceLastKeyboardDolly = true;\n\n        document.addEventListener(\"mousemove\", this.#documentMouseMoveHandler = () => {\n            mouseMovedSinceLastKeyboardDolly = true;\n        });\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = true;\n            if (keyCode === keycodes.KEY_SHIFT) {\n                canvasElement.style.cursor = \"move\";\n            }\n        });\n\n        document.addEventListener(\"keyup\", this.#documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = false;\n            if (keyCode === keycodes.KEY_SHIFT) {\n                canvasElement.style.cursor = null;\n            }\n        });\n\n        this.#onTick = components.view.viewer.events.on(\"tick\", (e: { deltaTime: number; }) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const cameraControl = controllers.cameraControl;\n            const elapsedSecs = (e.deltaTime / 1000.0);\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard rotation\n            //-------------------------------------------------------------------------------------------------\n\n            if (!configs.planView) {\n\n                const rotateYPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_POS, keyDownMap);\n                const rotateYNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_NEG, keyDownMap);\n                const rotateXPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_POS, keyDownMap);\n                const rotateXNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_NEG, keyDownMap);\n\n                const orbitDelta = elapsedSecs * configs.keyboardRotationRate;\n\n                if (rotateYPos || rotateYNeg || rotateXPos || rotateXNeg) {\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n\n                    if (rotateYPos) {\n                        updates.rotateDeltaY += orbitDelta;\n\n                    } else if (rotateYNeg) {\n                        updates.rotateDeltaY -= orbitDelta;\n                    }\n\n                    if (rotateXPos) {\n                        updates.rotateDeltaX += orbitDelta;\n\n                    } else if (rotateXNeg) {\n                        updates.rotateDeltaX -= orbitDelta;\n                    }\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                }\n            }\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard panning\n            //-------------------------------------------------------------------------------------------------\n\n            if (!keyDownMap[keycodes.KEY_CTRL] && !keyDownMap[keycodes.KEY_ALT]) {\n\n                const dollyBackwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_BACKWARDS, keyDownMap);\n                const dollyForwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_FORWARDS, keyDownMap);\n\n                if (dollyBackwards || dollyForwards) {\n\n                    const dollyDelta = elapsedSecs * configs.keyboardDollyRate;\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                    if (dollyForwards) {\n                        updates.dollyDelta -= dollyDelta;\n                    } else if (dollyBackwards) {\n                        updates.dollyDelta += dollyDelta;\n                    }\n\n                    if (mouseMovedSinceLastKeyboardDolly) {\n                        states.followPointerDirty = true;\n                        mouseMovedSinceLastKeyboardDolly = false;\n                    }\n                }\n            }\n\n            const panForwards = cameraControl._isKeyDownForAction(cameraControl.PAN_FORWARDS, keyDownMap);\n            const panBackwards = cameraControl._isKeyDownForAction(cameraControl.PAN_BACKWARDS, keyDownMap);\n            const panLeft = cameraControl._isKeyDownForAction(cameraControl.PAN_LEFT, keyDownMap);\n            const panRight = cameraControl._isKeyDownForAction(cameraControl.PAN_RIGHT, keyDownMap);\n            const panUp = cameraControl._isKeyDownForAction(cameraControl.PAN_UP, keyDownMap);\n            const panDown = cameraControl._isKeyDownForAction(cameraControl.PAN_DOWN, keyDownMap);\n\n            const panDelta = (keyDownMap[keycodes.KEY_ALT] ? 0.3 : 1.0) * elapsedSecs * configs.keyboardPanRate; // ALT for slower pan rate\n\n            if (panForwards || panBackwards || panLeft || panRight || panUp || panDown) {\n\n                if ((!configs.firstPerson) && configs.followPointer) {\n                    controllers.pivotController.startPivot();\n                }\n\n                if (panDown) {\n                    updates.panDeltaY += panDelta;\n\n                } else if (panUp) {\n                    updates.panDeltaY += -panDelta;\n                }\n\n                if (panRight) {\n                    updates.panDeltaX += -panDelta;\n\n                } else if (panLeft) {\n                    updates.panDeltaX += panDelta;\n                }\n\n                if (panBackwards) {\n                    updates.panDeltaZ += panDelta;\n\n                } else if (panForwards) {\n                    updates.panDeltaZ += -panDelta;\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n\n        document.removeEventListener(\"mousemove\", this.#documentMouseMoveHandler);\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this.#documentKeyUpHandler);\n    }\n}\n\nexport {KeyboardPanRotateDollyHandler};","\n\nimport {lenVec3, subVec3, createVec3} from \"@xeokit/matrix\";\nimport type {View} from \"@xeokit/viewer\";\n\nconst SCALE_DOLLY_EACH_FRAME = 1; // Recalculate dolly speed for eye->target distance on each Nth frame\nconst EPSILON = 0.001;\nconst tempVec3 = createVec3();\n\n/**\n * Handles camera updates on each \"tick\" that were scheduled by the various controllers.\n *\n * @private\n */\nclass CameraUpdater {\n\n    #onTick: any;\n    #view: View;\n\n    constructor(view: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = view;\n\n        const camera = view.camera;\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const panController = controllers.panController;\n\n        let countDown = SCALE_DOLLY_EACH_FRAME; // Decrements on each tick\n        let dollyDistFactor = 1.0; // Calculated when countDown is zero\n        let followPointerWorldPos: any = null; // Holds the pointer's World position when configs.followPointer is true\n\n        this.#onTick = view.viewer.onTick.subscribe(() => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            let cursorType = \"default\";\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly decay\n            //------------------------------------------------------------------------------------  ----------------------\n\n            if (Math.abs(updates.dollyDelta) < EPSILON) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation decay\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.rotateDeltaX) < EPSILON) {\n                updates.rotateDeltaX = 0;\n            }\n\n            if (Math.abs(updates.rotateDeltaY) < EPSILON) {\n                updates.rotateDeltaY = 0;\n            }\n\n            if (updates.rotateDeltaX !== 0 || updates.rotateDeltaY !== 0) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly speed eye->look scaling\n            //\n            // If pointer is over an object, then dolly speed is proportional to the distance to that object.\n            //\n            // If pointer is not over an object, then dolly speed is proportional to the distance to the last\n            // object the pointer was over. This is so that we can dolly to structures that may have gaps through\n            // which empty background shows, that the pointer may inadvertently be over. In these cases, we don't\n            // want dolly speed wildly varying depending on how accurately the user avoids the gaps with the pointer.\n            //----------------------------------------------------------------------------------------------------------\n\n            if (configs.followPointer) {\n\n                if (--countDown <= 0) {\n\n                    countDown = SCALE_DOLLY_EACH_FRAME;\n\n                    if (updates.dollyDelta !== 0) {\n                        if (updates.rotateDeltaY === 0 && updates.rotateDeltaX === 0) {\n\n                            if (configs.followPointer && states.followPointerDirty) {\n\n                                pickController.pickCursorPos = states.pointerViewPos;\n                                pickController.schedulePickSurface = true;\n                                pickController.update();\n\n                                if (pickController.pickResult && pickController.pickResult.worldPos) {\n                                    followPointerWorldPos = pickController.pickResult.worldPos;\n\n                                } else {\n                                    dollyDistFactor = 1.0;\n                                    followPointerWorldPos = null;\n                                }\n\n                                states.followPointerDirty = false;\n                            }\n                        }\n\n                        if (followPointerWorldPos) {\n                            const dist = Math.abs(lenVec3(subVec3(followPointerWorldPos, view.camera.eye, tempVec3)));\n                            dollyDistFactor = dist / configs.dollyProximityThreshold;\n                        }\n\n                        if (dollyDistFactor < configs.dollyMinSpeed) {\n                            dollyDistFactor = configs.dollyMinSpeed;\n                        }\n                    }\n                }\n            }\n\n            const dollyDeltaForDist = (updates.dollyDelta * dollyDistFactor);\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation\n            //----------------------------------------------------------------------------------------------------------\n\n            if (updates.rotateDeltaY !== 0 || updates.rotateDeltaX !== 0) {\n\n                if ((!configs.firstPerson) && configs.followPointer && pivotController.getPivoting()) {\n                    pivotController.continuePivot(updates.rotateDeltaY, updates.rotateDeltaX);\n                    pivotController.showPivot();\n\n                } else {\n\n                    if (updates.rotateDeltaX !== 0) {\n                        if (configs.firstPerson) {\n                            camera.pitch(-updates.rotateDeltaX);\n                        } else {\n                            camera.orbitPitch(updates.rotateDeltaX);\n                        }\n                    }\n\n                    if (updates.rotateDeltaY !== 0) {\n                        if (configs.firstPerson) {\n                            camera.yaw(updates.rotateDeltaY);\n                        } else {\n                            camera.orbitYaw(updates.rotateDeltaY);\n                        }\n                    }\n                }\n\n                updates.rotateDeltaX *= configs.rotationInertia;\n                updates.rotateDeltaY *= configs.rotationInertia;\n\n                cursorType = \"grabbing\";\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Panning\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.panDeltaX) < EPSILON) {\n                updates.panDeltaX = 0;\n            }\n\n            if (Math.abs(updates.panDeltaY) < EPSILON) {\n                updates.panDeltaY = 0;\n            }\n\n            if (Math.abs(updates.panDeltaZ) < EPSILON) {\n                updates.panDeltaZ = 0;\n            }\n\n            if (updates.panDeltaX !== 0 || updates.panDeltaY !== 0 || updates.panDeltaZ !== 0) {\n\n                const vec = createVec3();\n\n                vec[0] = updates.panDeltaX;\n                vec[1] = updates.panDeltaY;\n                vec[2] = updates.panDeltaZ;\n\n                let verticalEye;\n                let verticalLook;\n\n                if (configs.constrainVertical) {\n\n                    if (camera.xUp) {\n                        verticalEye = camera.eye[0];\n                        verticalLook = camera.look[0];\n                    } else if (camera.yUp) {\n                        verticalEye = camera.eye[1];\n                        verticalLook = camera.look[1];\n                    } else if (camera.zUp) {\n                        verticalEye = camera.eye[2];\n                        verticalLook = camera.look[2];\n                    }\n\n                    camera.pan(vec);\n\n                    const eye = camera.eye;\n                    const look = camera.look;\n\n                    if (camera.xUp) {\n                        eye[0] = verticalEye;\n                        look[0] = verticalLook;\n                    } else if (camera.yUp) {\n                        eye[1] = verticalEye;\n                        look[1] = verticalLook;\n                    } else if (camera.zUp) {\n                        eye[2] = verticalEye;\n                        look[2] = verticalLook;\n                    }\n\n                    camera.eye = eye;\n                    camera.look = look;\n\n                } else {\n                    camera.pan(vec);\n                }\n\n                cursorType = \"grabbing\";\n            }\n\n            updates.panDeltaX *= configs.panInertia;\n            updates.panDeltaY *= configs.panInertia;\n            updates.panDeltaZ *= configs.panInertia;\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dollying\n            //----------------------------------------------------------------------------------------------------------\n\n            if (dollyDeltaForDist !== 0) {\n\n                if (dollyDeltaForDist < 0) {\n                    cursorType = \"zoom-in\";\n                } else {\n                    cursorType = \"zoom-out\";\n                }\n\n                if (configs.firstPerson) {\n\n                    let verticalEye;\n                    let verticalLook;\n\n                    if (configs.constrainVertical) {\n                        if (camera.xUp) {\n                            verticalEye = camera.eye[0];\n                            verticalLook = camera.look[0];\n                        } else if (camera.yUp) {\n                            verticalEye = camera.eye[1];\n                            verticalLook = camera.look[1];\n                        } else if (camera.zUp) {\n                            verticalEye = camera.eye[2];\n                            verticalLook = camera.look[2];\n                        }\n                    }\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToViewPos(followPointerWorldPos, states.pointerViewPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.pan([0, 0, dollyDeltaForDist]);\n                        camera.orthoProjection.scale = camera.orthoProjection.scale - dollyDeltaForDist;\n                    }\n\n                    if (configs.constrainVertical) {\n                        const eye = camera.eye;\n                        const look = camera.look;\n                        if (camera.xUp) {\n                            eye[0] = verticalEye;\n                            look[0] = verticalLook;\n                        } else if (camera.yUp) {\n                            eye[1] = verticalEye;\n                            look[1] = verticalLook;\n                        } else if (camera.zUp) {\n                            eye[2] = verticalEye;\n                            look[2] = verticalLook;\n                        }\n                        camera.eye = eye;\n                        camera.look = look;\n                    }\n\n                } else if (configs.planView) {\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToViewPos(followPointerWorldPos, states.pointerViewPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.orthoProjection.scale = camera.orthoProjection.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n\n                } else { // Orbiting\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToViewPos(followPointerWorldPos, states.pointerViewPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.orthoProjection.scale = camera.orthoProjection.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n                }\n\n                updates.dollyDelta *= configs.dollyInertia;\n            }\n\n            pickController.fireEvents();\n\n            document.body.style.cursor = cursorType;\n        });\n    }\n\n    destroy() {\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n}\n\nexport {CameraUpdater};","import type { View } from \"@xeokit/viewer\";\n\n\n/**\n * @private\n */\nclass MouseMiscHandler {\n    #view: View;\n    #mouseEnterHandler: any;\n    #mouseMoveHandler: any;\n    #mouseLeaveHandler: any;\n    #mouseDownHandler: any;\n    #mouseUpHandler: any;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const canvasElement = this.#view.canvasElement;\n\n        canvasElement.addEventListener(\"mouseenter\", this.#mouseEnterHandler = () => {\n            states.mouseover = true;\n        });\n\n        canvasElement.addEventListener(\"mouseleave\", this.#mouseLeaveHandler = () => {\n            states.mouseover = false;\n            // @ts-ignore\n            canvasElement.style.cursor = null;\n        });\n\n        document.addEventListener(\"mousemove\", this.#mouseMoveHandler = (e: any) => {\n            getViewPosFromEvent(e, canvasElement, states.pointerViewPos);\n        });\n\n        canvasElement.addEventListener(\"mousedown\", this.#mouseDownHandler = (e: Event) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            getViewPosFromEvent(e, canvasElement, states.pointerViewPos);\n            states.mouseover = true;\n        });\n\n        canvasElement.addEventListener(\"mouseup\",\n            this.#mouseUpHandler = (e:Event) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        const canvasElement = this.#view.canvasElement;\n        document.removeEventListener(\"mousemove\", this.#mouseMoveHandler);\n        canvasElement.removeEventListener(\"mouseenter\", this.#mouseEnterHandler);\n        canvasElement.removeEventListener(\"mouseleave\", this.#mouseLeaveHandler);\n        canvasElement.removeEventListener(\"mousedown\", this.#mouseDownHandler);\n        canvasElement.removeEventListener(\"mouseup\", this.#mouseUpHandler);\n    }\n}\n\nfunction getViewPosFromEvent(event: any, canvasElement: any, canvasPos: number[]) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        const {x, y} = canvasElement.getBoundingClientRect();\n        canvasPos[0] = event.clientX - x;\n        canvasPos[1] = event.clientY - y;\n    }\n    return canvasPos;\n}\n\nexport {MouseMiscHandler};\n","\n\nimport {distVec2, geometricMeanVec2, lenVec3, subVec2, subVec3, createVec2} from \"@xeokit/matrix\";\nimport {PerspectiveProjectionType} from \"@xeokit/constants\";\nimport type {View} from \"@xeokit/viewer\";\nimport {getAABB3Center} from \"@xeokit/boundaries\";\n\n\nconst getCanvasPosFromEvent = function (event:any, canvasPos:any) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n/**\n * @private\n */\nclass TouchPanRotateAndDollyHandler {\n    #view: View;\n    #onTick: any;\n    #canvasTouchStartHandler: (event: any) => void;\n    #canvasTouchMoveHandler: (event: any) => void;\n\n    constructor(components:any, controllers:any, configs:any, states:any, updates:any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n\n        const tapStartCanvasPos = createVec2();\n        const tapCanvasPos0 = createVec2();\n        const tapCanvasPos1 = createVec2();\n        const touch0Vec = createVec2();\n\n        const lastCanvasTouchPosList: any[] = [];\n        const canvasElement = this.#view.canvasElement;\n\n        let numTouches = 0;\n        let tapStartTime = -1;\n        let waitForTick = false;\n\n        this.#onTick = this.#view.viewer.onTick.subscribe(() => {\n            waitForTick = false;\n        });\n\n        canvasElement.addEventListener(\"touchstart\", this.#canvasTouchStartHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.preventDefault();\n\n            const touches = event.touches;\n            const changedTouches = event.changedTouches;\n\n            states.touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n\n                tapStartTime = states.touchStartTime;\n\n                getCanvasPosFromEvent(touches[0], tapStartCanvasPos);\n\n                if (configs.followPointer) {\n\n                    pickController.pickCursorPos = tapStartCanvasPos;\n                    pickController.schedulePickSurface = true;\n                    pickController.update();\n\n                    if (!configs.planView) {\n\n                        if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n\n                            pivotController.setPivotPos(pickController.pickResult.worldPos);\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n\n                        } else {\n\n                            if (configs.smartPivot) {\n                                pivotController.setCanvasPivotPos(states.pointerCanvasPos);\n                            } else {\n                                pivotController.setPivotPos(this.#view.camera.look);\n                            }\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (lastCanvasTouchPosList.length < touches.length) {\n                lastCanvasTouchPosList.push(createVec2());\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n\n            numTouches = touches.length;\n        });\n\n        canvasElement.addEventListener(\"touchmove\", this.#canvasTouchMoveHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            if (waitForTick) {\n                // Limit changes detection to one per frame\n                return;\n            }\n\n            waitForTick = true;\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = this.#view.boundary;\n            const canvasWidth = canvasBoundary[0];\n            const canvasHeight = canvasBoundary[1];\n\n            const touches = event.touches;\n\n            if (event.touches.length !== numTouches) {\n                // Two fingers were pressed, then one of them is removed\n                // We don't want to rotate in this case (weird behavior)\n                return;\n            }\n\n            if (numTouches === 1) {\n\n                getCanvasPosFromEvent(touches[0], tapCanvasPos0);\n\n                //-----------------------------------------------------------------------------------------------\n                // Drag rotation\n                //-----------------------------------------------------------------------------------------------\n\n                subVec2(tapCanvasPos0, lastCanvasTouchPosList[0], touch0Vec);\n\n                const xPanDelta = touch0Vec[0];\n                const yPanDelta = touch0Vec[1];\n\n                if (states.longTouchTimeout !== null && (Math.abs(xPanDelta) > configs.longTapRadius || Math.abs(yPanDelta) > configs.longTapRadius)) {\n                    clearTimeout(states.longTouchTimeout);\n                    states.longTouchTimeout = null;\n                }\n\n                if (configs.planView) { // No rotating in plan-view mode\n\n                    const camera = this.#view.camera;\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projectionType === PerspectiveProjectionType) {\n\n                        const touchPicked = false;\n                        const pickedWorldPos = [0, 0, 0];\n\n                        const depth = Math.abs(touchPicked ? lenVec3(subVec3(pickedWorldPos, this.#view.camera.eye, [])) : this.#view.camera.eyeLookDist);\n                        const targetDistance = depth * Math.tan((camera.perspectiveProjection.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX += (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX += 0.5 * camera.orthoProjection.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += 0.5 * camera.orthoProjection.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n\n                } else {\n                    updates.rotateDeltaY -= (xPanDelta / canvasWidth) * (configs.dragRotationRate * 1.0); // Full horizontal rotation\n                    updates.rotateDeltaX += (yPanDelta / canvasHeight) * (configs.dragRotationRate * 1.5); // Half vertical rotation\n                }\n\n            } else if (numTouches === 2) {\n\n                const touch0 = touches[0];\n                const touch1 = touches[1];\n\n                getCanvasPosFromEvent(touch0, tapCanvasPos0);\n                getCanvasPosFromEvent(touch1, tapCanvasPos1);\n\n                const lastMiddleTouch = geometricMeanVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n                const currentMiddleTouch = geometricMeanVec2(tapCanvasPos0, tapCanvasPos1);\n\n                const touchDelta = createVec2();\n\n                subVec2(lastMiddleTouch, currentMiddleTouch, touchDelta);\n\n                const xPanDelta = touchDelta[0];\n                const yPanDelta = touchDelta[1];\n\n                const camera = this.#view.camera;\n\n                // Dollying\n\n                const d1 = distVec2([touch0.pageX, touch0.pageY], [touch1.pageX, touch1.pageY]);\n                const d2 = distVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n\n                const dollyDelta = (d2 - d1) * configs.touchDollyRate;\n\n                updates.dollyDelta = dollyDelta;\n\n                if (Math.abs(dollyDelta) < 1.0) {\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projectionType === PerspectiveProjectionType) {\n                        const pickedWorldPos = pickController.pickResult ? pickController.pickResult.worldPos : getAABB3Center(this.#view.aabb);\n\n                        const depth = Math.abs(lenVec3(subVec3(pickedWorldPos, this.#view.camera.eye, [])));\n                        const targetDistance = depth * Math.tan((camera.perspectiveProjection.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX -= (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX -= 0.5 * camera.orthoProjection.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= 0.5 * camera.orthoProjection.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n                }\n\n\n                states.pointerCanvasPos = currentMiddleTouch;\n            }\n\n            for (let i = 0; i < numTouches; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        const canvasElement = this.#view.canvasElement;\n        canvasElement.removeEventListener(\"touchstart\", this.#canvasTouchStartHandler);\n        canvasElement.removeEventListener(\"touchmove\", this.#canvasTouchMoveHandler);\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n}\n\nexport {TouchPanRotateAndDollyHandler};\n","\n\nimport {distVec2, subVec3} from \"@xeokit/matrix\";\nimport type {PickResult} from \"@xeokit/viewer\";\n\nconst TAP_INTERVAL = 150;\nconst DBL_TAP_INTERVAL = 325;\nconst TAP_DISTANCE_THRESHOLD = 4;\n\n/**\n * @private\n */\nclass TouchPickHandler {\n    #view: any;\n    private _canvasTouchStartHandler: (e: any) => void;\n    private _canvasTouchEndHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const cameraControl = controllers.cameraControl;\n\n        let touchStartTime;\n        const activeTouches: any[] = [];\n        const tapStartPos = new Float32Array(2);\n        let tapStartTime = -1;\n        let lastTapTime = -1;\n\n        const canvas = this.#view.canvas.canvas;\n\n        const flyCameraTo = (pickResult?: PickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = (pickResult && pickResult.viewObject) ? pickResult.viewObject.aabb : this.#view.viewer.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = this.#view.camera;\n                const diff = subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvas.addEventListener(\"touchstart\", this._canvasTouchStartHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (states.longTouchTimeout !== null) {\n                clearTimeout(states.longTouchTimeout);\n                states.longTouchTimeout = null;\n            }\n\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n                tapStartTime = touchStartTime;\n                tapStartPos[0] = touches[0].pageX;\n                tapStartPos[1] = touches[0].pageY;\n\n                const rightClickClientX = touches[0].clientX;\n                const rightClickClientY = touches[0].clientY;\n\n                const rightClickPageX = touches[0].pageX;\n                const rightClickPageY = touches[0].pageY;\n\n                states.longTouchTimeout = setTimeout(() => {\n                    controllers.cameraControl.onRightClick.dispatch(cameraControl, { // For context menus\n                        pagePos: [Math.round(rightClickPageX), Math.round(rightClickPageY)],\n                        canvasPos: [Math.round(rightClickClientX), Math.round(rightClickClientY)],\n                        event: e\n                    });\n\n                    states.longTouchTimeout = null;\n                }, configs.longTapTimeout);\n\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (activeTouches.length < touches.length) {\n                activeTouches.push(new Float32Array(2))\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            activeTouches.length = touches.length;\n\n        }, {passive: true});\n\n\n        canvas.addEventListener(\"touchend\", this._canvasTouchEndHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const currentTime = Date.now();\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            const pickedSurfaceSubs = cameraControl.events.hasSubs(\"pickedSurface\");\n\n            if (states.longTouchTimeout !== null) {\n                clearTimeout(states.longTouchTimeout);\n                states.longTouchTimeout = null;\n            }\n\n            // process tap\n\n            if (touches.length === 0 && changedTouches.length === 1) {\n\n                if (tapStartTime > -1 && currentTime - tapStartTime < TAP_INTERVAL) {\n\n                    if (lastTapTime > -1 && tapStartTime - lastTapTime < DBL_TAP_INTERVAL) {\n\n                        // Double-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.onDoublePickedSurface.dispatch(cameraControl, pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.onPickedSurface.dispatch(cameraControl, pickController.pickResult);\n                            }\n\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo(pickController.pickResult);\n                            }\n                        } else {\n                            cameraControl.onDoublePickedNothing.dispatch(cameraControl, null);\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo();\n                            }\n                        }\n\n                        lastTapTime = -1;\n\n                    } else if (distVec2(activeTouches[0], tapStartPos) < TAP_DISTANCE_THRESHOLD) {\n\n                        // Single-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.onPicked.dispatch(cameraControl, pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.onPickedSurface.dispatch(cameraControl,  pickController.pickResult);\n                            }\n\n                        } else {\n                            cameraControl.onPickedNothing.dispatch(cameraControl) ;\n                        }\n\n                        lastTapTime = currentTime;\n                    }\n\n                    tapStartTime = -1\n                }\n            }\n\n            activeTouches.length = touches.length;\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            e.stopPropagation();\n\n        }, {passive: true});\n\n    }\n\n    reset() {\n        // TODO\n        // tapStartTime = -1;\n        // lastTapTime = -1;\n\n    }\n\n    destroy() {\n        const canvas = this.#view.canvas.canvas;\n        canvas.removeEventListener(\"touchstart\", this._canvasTouchStartHandler);\n        canvas.removeEventListener(\"touchend\", this._canvasTouchEndHandler);\n    }\n}\n\n\nexport {TouchPickHandler};","import {EventDispatcher} from \"strongly-typed-events\";\nimport {Component, EventEmitter} from \"@xeokit/core\";\nimport {createVec2} from \"@xeokit/matrix\";\nimport {isString} from \"@xeokit/utils\";\nimport type {FloatArrayParam} from \"@xeokit/math\"\nimport {Camera, CameraFlightAnimation, PickResult, View} from \"@xeokit/viewer\";\n\nimport {PanController} from \"./PanController\";\nimport {PivotController} from \"./PivotController\";\nimport {PickController} from \"./PickController\";\nimport {MousePanRotateDollyHandler} from \"./MousePanRotateDollyHandler\";\nimport {KeyboardAxisViewHandler} from \"./KeyboardAxisViewHandler\";\nimport {MousePickHandler} from \"./MousePickHandler\";\nimport {KeyboardPanRotateDollyHandler} from \"./KeyboardPanRotateDollyHandler\";\nimport {CameraUpdater} from \"./CameraUpdater\";\nimport {MouseMiscHandler} from \"./MouseMiscHandler\";\nimport {TouchPanRotateAndDollyHandler} from \"./TouchPanRotateAndDollyHandler\";\nimport {TouchPickHandler} from \"./TouchPickHandler\";\nimport * as keycodes from \"./keycodes\";\n\nclass HoverEvent {\n}\n\ninterface CameraControlParams {\n    mouseWheelDollyRate?: number;\n    keyboardDollyRate?: number;\n    panInertia?: number;\n    dollyMinSpeed?: number;\n    dollyProximityThreshold?: number;\n    dollyInertia?: number;\n    touchDollyRate?: number;\n    dragRotationRate?: number;\n    keyboardRotationRate?: number;\n    touchPanRate?: number;\n    keyboardPanRate?: number;\n    rotationInertia?: number;\n    followPointer?: boolean;\n    active?: boolean;\n    panRightClick?: boolean;\n    keyMap?: {};\n    keyboardLayout?: any;\n    constrainVertical?: boolean;\n    planView?: any;\n    navMode?: string;\n    doublePickFlyTo?: boolean;\n    keyboardEnabled?: boolean;\n}\n\n/**\n * Controls a {@link @xeokit/viewer!Camera | Camera}  with user input.\n *\n * See {@link @xeokit/cameracontrol} for usage.\n */\nexport class CameraControl extends Component {\n\n    /**\n     * Identifies the *leftwards panning* action, in which the {@link @xeokit/viewer!Camera}  moves leftwards along its local axis.\n     */\n    public static readonly PAN_LEFT: number = 0;\n\n    /**\n     * Identifies the *rightwards panning* action, in which the {@link @xeokit/viewer!Camera}  moves rightwards along its local axis.\n     */\n    public static readonly PAN_RIGHT: number = 1;\n\n    /**\n     * Identifies the *upwards panning* action, in which the {@link @xeokit/viewer!Camera}  moves upwards along its local vertical axis.\n     */\n    public static readonly PAN_UP: number = 2;\n\n    /**\n     * Identifies the *downwards panning* action, in which the {@link @xeokit/viewer!Camera}  moves downwards along its local vertical axis.\n     */\n    public static readonly PAN_DOWN: number = 3;\n\n    /**\n     * Identifies the *forwards panning* action, in which the {@link @xeokit/viewer!Camera}  advances forwards along its current view direction.\n     */\n    public static readonly PAN_FORWARDS: number = 4;\n\n    /**\n     * Identifies the *backwards panning* action, in which the {@link @xeokit/viewer!Camera}  retreats backwards along its current view direction.\n     */\n    public static readonly PAN_BACKWARDS: number = 5;\n\n    /**\n     * Identifies the *positive-rotation-about-X-axis* action.\n     */\n    public static readonly ROTATE_X_POS: number = 6;\n\n    /**\n     * Identifies the *negative-rotation-about-X-axis* action.\n     */\n    public static readonly ROTATE_X_NEG: number = 7;\n\n    /**\n     * Identifies the *positive-rotation-about-Y-axis* action.\n     */\n    public static readonly ROTATE_Y_POS: number = 8;\n\n    /**\n     * Identifies the *negative-rotation-about-Y-axis* action.\n     */\n    public static readonly ROTATE_Y_NEG: number = 9;\n\n    /**\n     * Identifies the *dolly forwards* action.\n     */\n    public static readonly DOLLY_FORWARDS: number = 10;\n\n    /**\n     * Identifies the *dolly backwards* action.\n     */\n    public static readonly DOLLY_BACKWARDS: number = 11;\n\n    /**\n     * Identifies the *axis-view-right* action.\n     */\n    public static readonly AXIS_VIEW_RIGHT: number = 12;\n\n    /**\n     * Identifies the *axis-view-back* action.\n     */\n    public static readonly AXIS_VIEW_BACK: number = 13;\n\n    /**\n     * Identifies the *axis-view-left* action.\n     */\n    public static readonly AXIS_VIEW_LEFT: number = 14;\n\n    /**\n     * Identifies the *axis-view-front* action.\n     */\n    public static readonly AXIS_VIEW_FRONT: number = 15;\n\n    /**\n     * Identifies the *axis-view-top* action.\n     */\n    public static readonly AXIS_VIEW_TOP: number = 16;\n\n    /**\n     * Identifies the *axis-view-bottom* action.\n     */\n    public static readonly AXIS_VIEW_BOTTOM: number = 17;\n\n    /**\n     * The View that owns this CameraControl.\n     */\n    public readonly view: View;\n\n    /**\n     * The View where this CameraContol listens for input.\n     */\n    public readonly canvasElement: HTMLCanvasElement;\n\n    /**\n     * The Camera this CameraControl controls.\n     */\n    public readonly camera: Camera;\n\n    readonly #components: {\n        view: View;\n        camera: Camera;\n    };\n\n    readonly #configs: {\n        rotationInertia: number;\n        mouseWheelDollyRate: number;\n        keyboardPanRate: number;\n        touchPanRate: number;\n        pointerEnabled: boolean;\n        dollyProximityThreshold: number;\n        keyboardRotationRate: number;\n        planView: boolean;\n        keyboardLayout: string;\n        constrainVertical: boolean;\n        touchDollyRate: number;\n        dragRotationRate: number;\n        firstPerson: boolean;\n        active: boolean;\n        longTapRadius: number;\n        dollyMinSpeed: number;\n        panInertia: number;\n        followPointer: boolean;\n        showPivot: boolean;\n        navMode: string;\n        longTapTimeout: number;\n        keyboardDollyRate: number;\n        dollyInertia: number;\n        panRightClick: boolean;\n        smartPivot: boolean;\n        doublePickFlyTo: boolean;\n        keyboardEnabled: boolean;\n        keyMap: { [key: number]: any };\n    };\n\n    readonly #states: {\n        mouseDownCursorX: number;\n        tapStartTime: number;\n        lastTapTime: number;\n        mouseover: boolean;\n        mouseDownCursorY: number;\n        pointerCanvasPos: any;\n        activeTouches: any[];\n        tapStartPos: any;\n        longTouchTimeout: null;\n        followPointerDirty: boolean;\n        mouseDownClientX: number;\n        mouseDownClientY: number;\n        touchStartTime: null;\n        altDown: boolean;\n        ctrlDown: boolean;\n        keyDown: boolean[];\n        shiftDown: boolean | undefined;\n    };\n\n    readonly #updates: {\n        panDeltaZ: number;\n        panDeltaY: number;\n        panDeltaX: number;\n        rotateDeltaX: number;\n        dollyDelta: number;\n        rotateDeltaY: number\n    };\n\n    readonly #controllers: {\n        pickController: PickController;\n        cameraControl: CameraControl;\n        pivotController: PivotController;\n        cameraFlight: CameraFlightAnimation;\n        panController: PanController\n    };\n\n    readonly #handlers: (\n        MouseMiscHandler |\n        TouchPanRotateAndDollyHandler |\n        MousePanRotateDollyHandler |\n        KeyboardAxisViewHandler |\n        MousePickHandler | TouchPickHandler | KeyboardPanRotateDollyHandler)[];\n\n    readonly #cameraUpdater: CameraUpdater;\n\n\n    /**\n     * Event fired when we right-click.\n     *\n     * @event\n     */\n    readonly onRightClick: EventEmitter<CameraControl, any>;\n\n    /**\n     * Event fired when the pointer moves while over a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHover: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves while over a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverSurface: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves while over empty space.\n     *\n     * @event\n     */\n    readonly onHoverOff: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves onto a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverEnter: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves off a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverOut: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when a {@link ViewObject} is picked.\n     *\n     * @event\n     */\n    readonly onPicked: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is picked.\n     *\n     * @event\n     */\n    readonly onPickedSurface: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is picked.\n     *\n     * @event\n     */\n    readonly onPickedNothing: EventEmitter<CameraControl, null>;\n\n    /**\n     * Event fired when a surface is double-picked.\n     *\n     * @event\n     */\n    readonly onDoublePickedSurface: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is double-picked.\n     *\n     * @event\n     */\n    readonly onDoublePickedNothing: EventEmitter<CameraControl, PickResult>;\n\n\n    /**\n     * TODO\n     */\n    constructor(view: View, cfg: CameraControlParams) {\n\n        super(view, cfg);\n\n        this.view = view;\n        this.camera = view.camera;\n\n        view.canvasElement.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n\n        this.#components = {\n            view,\n            camera: this.camera\n        }\n\n        this.#configs = {\n            longTapTimeout: 600, // Millisecs\n            longTapRadius: 5, // Pixels\n            active: true,\n            keyboardLayout: \"qwerty\",\n            navMode: \"orbit\",\n            planView: false,\n            firstPerson: false,\n            followPointer: true,\n            doublePickFlyTo: true,\n            panRightClick: true,\n            showPivot: false,\n            pointerEnabled: true,\n            constrainVertical: false,\n            smartPivot: false,\n            dragRotationRate: 360.0,\n            keyboardRotationRate: 90.0,\n            rotationInertia: 0.0,\n            keyboardPanRate: 1.0,\n            touchPanRate: 1.0,\n            panInertia: 0.5,\n            keyboardDollyRate: 10,\n            mouseWheelDollyRate: 100,\n            touchDollyRate: 0.2,\n            dollyInertia: 0,\n            dollyProximityThreshold: 30.0,\n            dollyMinSpeed: 0.04,\n            keyboardEnabled: true,\n            keyMap: {}\n        };\n\n        this.#states = {\n            pointerCanvasPos: createVec2(),\n            mouseover: false,\n            followPointerDirty: true,\n            mouseDownClientX: 0,\n            mouseDownClientY: 0,\n            mouseDownCursorX: 0,\n            mouseDownCursorY: 0,\n            touchStartTime: null,\n            activeTouches: [],\n            tapStartPos: createVec2(),\n            tapStartTime: -1,\n            lastTapTime: -1,\n            longTouchTimeout: null,\n            altDown: false,\n            ctrlDown: false,\n            keyDown: [],\n            shiftDown: false,\n        };\n\n        this.#updates = {\n            rotateDeltaX: 0,\n            rotateDeltaY: 0,\n            panDeltaX: 0,\n            panDeltaY: 0,\n            panDeltaZ: 0,\n            dollyDelta: 0\n        };\n\n        this.#controllers = {\n            cameraControl: this,\n            pickController: new PickController(this, this.#configs),\n            pivotController: new PivotController(this, this.#configs),\n            panController: new PanController(this),\n            cameraFlight: new CameraFlightAnimation(this.view, {\n                duration: 0.5\n            })\n        };\n\n        this.#handlers = [\n            new MouseMiscHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new TouchPanRotateAndDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new MousePanRotateDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new KeyboardAxisViewHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new MousePickHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new TouchPickHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new KeyboardPanRotateDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates)\n        ];\n\n        // Applies scheduled updates to the Camera on each Scene \"tick\" event\n\n        this.#cameraUpdater = new CameraUpdater(this, this.#controllers, this.#configs, this.#states, this.#updates);\n\n        this.onHover = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverOff = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverEnter = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverOut = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n\n        // Set initial user configurations\n\n        this.navMode = cfg.navMode;\n        this.constrainVertical = cfg.constrainVertical;\n        this.keyMap = cfg.keyMap;\n        this.doublePickFlyTo = cfg.doublePickFlyTo;\n        this.panRightClick = cfg.panRightClick;\n        this.active = cfg.active;\n        this.followPointer = cfg.followPointer;\n        this.rotationInertia = cfg.rotationInertia;\n        this.keyboardPanRate = cfg.keyboardPanRate;\n        this.touchPanRate = cfg.touchPanRate;\n        this.keyboardRotationRate = cfg.keyboardRotationRate;\n        this.dragRotationRate = cfg.dragRotationRate;\n        this.touchDollyRate = cfg.touchDollyRate;\n        this.dollyInertia = cfg.dollyInertia;\n        this.dollyProximityThreshold = cfg.dollyProximityThreshold;\n        this.dollyMinSpeed = cfg.dollyMinSpeed;\n        this.panInertia = cfg.panInertia;\n        this.pointerEnabled = true;\n        this.keyboardDollyRate = cfg.keyboardDollyRate;\n        this.mouseWheelDollyRate = cfg.mouseWheelDollyRate;\n        this.keyboardEnabled = cfg.keyboardEnabled;\n    }\n\n    /**\n     * Gets custom mappings of keys to {@link CameraControl} actions.\n     *\n     * @returns Current key mappings.\n     */\n    get keyMap(): { [key: number]: number } {\n        return this.#configs.keyMap;\n    }\n\n    /**\n     * Sets custom mappings of keys to ````CameraControl```` actions.\n     *\n     * See class docs for usage.\n     *\n     * @param value Either a set of new key mappings, or a string to select a keyboard layout,\n     * which causes ````CameraControl```` to use the default key mappings for that layout.\n     */\n    set keyMap(value: { [key: number]: number } | string | undefined) {\n        value = value || \"qwerty\";\n        if (isString(value)) {\n            const keyMap: { [key: number]: any } = {};\n\n            switch (value) {\n\n                default:\n                    this.error(\"Unsupported value for 'keyMap': \" + value + \" defaulting to 'qwerty'\");\n                // Intentional fall-through to \"qwerty\"\n                case \"qwerty\":\n                    keyMap[CameraControl.PAN_LEFT] = [keycodes.KEY_A];\n                    keyMap[CameraControl.PAN_RIGHT] = [keycodes.KEY_D];\n                    keyMap[CameraControl.PAN_UP] = [keycodes.KEY_Z];\n                    keyMap[CameraControl.PAN_DOWN] = [keycodes.KEY_X];\n                    keyMap[CameraControl.PAN_BACKWARDS] = [];\n                    keyMap[CameraControl.PAN_FORWARDS] = [];\n                    keyMap[CameraControl.DOLLY_FORWARDS] = [keycodes.KEY_W, keycodes.KEY_ADD];\n                    keyMap[CameraControl.DOLLY_BACKWARDS] = [keycodes.KEY_S, keycodes.KEY_SUBTRACT];\n                    keyMap[CameraControl.ROTATE_X_POS] = [keycodes.KEY_DOWN_ARROW];\n                    keyMap[CameraControl.ROTATE_X_NEG] = [keycodes.KEY_UP_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_POS] = [keycodes.KEY_Q, keycodes.KEY_LEFT_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_NEG] = [keycodes.KEY_E, keycodes.KEY_RIGHT_ARROW];\n                    keyMap[CameraControl.AXIS_VIEW_RIGHT] = [keycodes.KEY_NUM_1];\n                    keyMap[CameraControl.AXIS_VIEW_BACK] = [keycodes.KEY_NUM_2];\n                    keyMap[CameraControl.AXIS_VIEW_LEFT] = [keycodes.KEY_NUM_3];\n                    keyMap[CameraControl.AXIS_VIEW_FRONT] = [keycodes.KEY_NUM_4];\n                    keyMap[CameraControl.AXIS_VIEW_TOP] = [keycodes.KEY_NUM_5];\n                    keyMap[CameraControl.AXIS_VIEW_BOTTOM] = [keycodes.KEY_NUM_6];\n                    break;\n\n                case \"azerty\":\n                    keyMap[CameraControl.PAN_LEFT] = [keycodes.KEY_Q];\n                    keyMap[CameraControl.PAN_RIGHT] = [keycodes.KEY_D];\n                    keyMap[CameraControl.PAN_UP] = [keycodes.KEY_W];\n                    keyMap[CameraControl.PAN_DOWN] = [keycodes.KEY_X];\n                    keyMap[CameraControl.PAN_BACKWARDS] = [];\n                    keyMap[CameraControl.PAN_FORWARDS] = [];\n                    keyMap[CameraControl.DOLLY_FORWARDS] = [keycodes.KEY_Z, keycodes.KEY_ADD];\n                    keyMap[CameraControl.DOLLY_BACKWARDS] = [keycodes.KEY_S, keycodes.KEY_SUBTRACT];\n                    keyMap[CameraControl.ROTATE_X_POS] = [keycodes.KEY_DOWN_ARROW];\n                    keyMap[CameraControl.ROTATE_X_NEG] = [keycodes.KEY_UP_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_POS] = [keycodes.KEY_A, keycodes.KEY_LEFT_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_NEG] = [keycodes.KEY_E, keycodes.KEY_RIGHT_ARROW];\n                    keyMap[CameraControl.AXIS_VIEW_RIGHT] = [keycodes.KEY_NUM_1];\n                    keyMap[CameraControl.AXIS_VIEW_BACK] = [keycodes.KEY_NUM_2];\n                    keyMap[CameraControl.AXIS_VIEW_LEFT] = [keycodes.KEY_NUM_3];\n                    keyMap[CameraControl.AXIS_VIEW_FRONT] = [keycodes.KEY_NUM_4];\n                    keyMap[CameraControl.AXIS_VIEW_TOP] = [keycodes.KEY_NUM_5];\n                    keyMap[CameraControl.AXIS_VIEW_BOTTOM] = [keycodes.KEY_NUM_6];\n                    break;\n            }\n\n            this.#configs.keyMap = keyMap;\n        } else {\n            const keyMap = value;\n            this.#configs.keyMap = keyMap;\n        }\n    }\n\n    /**\n     * Sets the HTMl element to represent the pivot point when {@link CameraControl.followPointer} is true.\n     *\n     * See class comments for an example.\n     *\n     * @param  element HTML element representing the pivot point.\n     */\n    set pivotElement(element: HTMLElement) {\n        this.#controllers.pivotController.setPivotElement(element);\n    }\n\n    /**\n     * Gets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @returns ````true```` if this ````CameraControl```` is active.\n     */\n    get active(): boolean {\n        return this.#configs.active;\n    }\n\n    /**\n     *  Sets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @param value Set ````true```` to activate this ````CameraControl````.\n     */\n    set active(value: boolean | undefined) {\n        this.#configs.active = value !== false;\n    }\n\n    /**\n     * Gets the current navigation mode.\n     *\n     * @returns {String} The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    get navMode(): string {\n        return this.#configs.navMode;\n    }\n\n    /**\n     * Sets the current navigation mode.\n     *\n     * Accepted values are:\n     *\n     * * \"orbit\" - rotation orbits about the current target or pivot point,\n     * * \"firstPerson\" - rotation is about the current eye position,\n     * * \"planView\" - rotation is disabled.\n     *\n     * See class comments for more info.\n     *\n     * @param navMode The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    set navMode(navMode: string | undefined) {\n        navMode = navMode || \"orbit\";\n        if (navMode !== \"firstPerson\" && navMode !== \"orbit\" && navMode !== \"planView\") {\n            this.error(\"Unsupported value for navMode: \" + navMode + \" - supported values are 'orbit', 'firstPerson' and 'planView' - defaulting to 'orbit'\");\n            navMode = \"orbit\";\n        }\n        this.#configs.firstPerson = (navMode === \"firstPerson\");\n        this.#configs.planView = (navMode === \"planView\");\n        if (this.#configs.firstPerson || this.#configs.planView) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n        this.#configs.navMode = navMode;\n    }\n\n    /**\n     * Gets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is desirable when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without interfering with the {@link @xeokit/viewer!Camera} .\n     *\n     * @returns {Boolean} Returns ````true```` if mouse and touch input is enabled.\n     */\n    get pointerEnabled(): boolean {\n        return this.#configs.pointerEnabled;\n    }\n\n    /**\n     * Sets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is useful when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without disturbing the {@link @xeokit/viewer!Camera} .\n     *\n     * @param value Set ````true```` to enable mouse and touch input.\n     */\n    set pointerEnabled(value: boolean) {\n        this.#reset();\n        this.#configs.pointerEnabled = !!value;\n    }\n\n    /**\n     * Sets whether the {@link @xeokit/viewer!Camera}  follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @returns {Boolean} Returns ````true```` if the Camera follows the pointer.\n     */\n    get followPointer(): boolean {\n        return this.#configs.followPointer;\n    }\n\n    /**\n     * Sets whether the {@link @xeokit/viewer!Camera}  follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @param value Set ````true```` to enable the Camera to follow the pointer.\n     */\n    set followPointer(value: boolean | undefined) {\n        this.#configs.followPointer = (value !== false);\n    }\n\n    /**\n     * Gets the current World-space 3D pivot position.\n     *\n     * Only applies when {@link CameraControl.followPointer} is ````true````.\n     *\n     * @return {Number[]} worldPos The current World-space 3D pivot position.\n     */\n    get pivotPos(): FloatArrayParam {\n        return this.#controllers.pivotController.getPivotPos();\n    }\n\n    /**\n     * Sets the current World-space 3D target position.\n     *\n     * Only applies when {@link CameraControl.followPointer} is ````true````.\n     *\n     * @param worldPos The new World-space 3D target position.\n     */\n    set pivotPos(worldPos: FloatArrayParam) {\n        this.#controllers.pivotController.setPivotPos(worldPos);\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get dollyToPointer(): boolean {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        return this.followPointer;\n    }\n\n    /**\n     * @deprecated\n     * @param value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set dollyToPointer(value: boolean) {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        this.followPointer = value;\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get panToPointer(): boolean {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n        return false;\n    }\n\n    /**\n     * @deprecated\n     * @param value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set panToPointer(value: boolean) {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if plan-view mode is enabled.\n     * @deprecated\n     */\n    get planView(): boolean {\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n        return this.#configs.planView;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @param value Set ````true```` to enable plan-view mode.\n     * @deprecated\n     */\n    set planView(value: boolean) {\n        this.#configs.planView = !!value;\n        this.#configs.firstPerson = false;\n        if (this.#configs.planView) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera.eye} rotates about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if first-person mode is enabled.\n     * @deprecated\n     */\n    get firstPerson(): boolean {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        return this.#configs.firstPerson;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera.eye} rotates about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @param value Set ````true```` to enable first-person mode.\n     * @deprecated\n     */\n    set firstPerson(value: boolean) {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        this.#configs.firstPerson = !!value;\n        this.#configs.planView = false;\n        if (this.#configs.firstPerson) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n    }\n\n    /**\n     * Gets whether to vertically constrain the {@link @xeokit/viewer!Camera}  position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera.eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl.navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} ````true```` when Camera is vertically constrained.\n     */\n    get constrainVertical(): boolean {\n        return this.#configs.constrainVertical;\n    }\n\n    /**\n     * Sets whether to vertically constrain the {@link @xeokit/viewer!Camera}  position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera.eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl.navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @param value Set ````true```` to vertically constrain the Camera.\n     */\n    set constrainVertical(value: boolean | undefined) {\n        this.#configs.constrainVertical = !!value;\n    }\n\n    /**\n     * Gets whether double-picking an {@link Entity} causes the {@link @xeokit/viewer!Camera}  to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when double-pick-fly-to mode is enabled.\n     */\n    get doublePickFlyTo(): boolean {\n        return this.#configs.doublePickFlyTo;\n    }\n\n    /**\n     * Sets whether double-picking an {@link Entity} causes the {@link @xeokit/viewer!Camera}  to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @param value Set ````true```` to enable double-pick-fly-to mode.\n     */\n    set doublePickFlyTo(value: boolean | undefined) {\n        this.#configs.doublePickFlyTo = value !== false;\n    }\n\n    /**\n     * Gets whether right-clicking pans the {@link @xeokit/viewer!Camera} .\n     *\n     * Default is ````true````.\n     *\n     * @returns {Boolean} Returns ````false```` when pan on right-click is disabled.\n     */\n    get panRightClick(): boolean {\n        return this.#configs.panRightClick;\n    }\n\n    /**\n     * Sets whether either right-clicking (true) or middle-clicking (false) pans the {@link @xeokit/viewer!Camera} .\n     *\n     * Default is ````true````.\n     *\n     * @param value Set ````false```` to disable pan on right-click.\n     */\n    set panRightClick(value: boolean | undefined) {\n        this.#configs.panRightClick = value !== false;\n    }\n\n    /**\n     * Gets the rotation inertia factor.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl.navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @returns {Number} The inertia factor.\n     */\n    get rotationInertia(): number {\n        return this.#configs.rotationInertia;\n    }\n\n    /**\n     * Sets a factor in range ````[0..1]```` indicating how much the {@link @xeokit/viewer!Camera}  keeps moving after you finish rotating it.\n     *\n     * A value of ````0.0```` causes it to immediately stop, ````0.5```` causes its movement to decay 50% on each tick,\n     * while ````1.0```` causes no decay, allowing it to continue moving, by the current rate of rotation.\n     *\n     * You may choose an inertia of zero when you want to be able to precisely rotate the Camera,\n     * without interference from inertia. Zero inertia can also mean that fewer frames are rendered while\n     * you are rotating the Camera.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl.navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @param rotationInertia New inertial factor.\n     */\n    set rotationInertia(rotationInertia: number | undefined) {\n        this.#configs.rotationInertia = (rotationInertia !== undefined && rotationInertia !== null) ? rotationInertia : 0.0;\n    }\n\n    /**\n     * Gets how fast the {@link @xeokit/viewer!Camera}  pans on touch panning\n     *\n     * Default is ````1.0````.\n     *\n     * @returns {Number} The current touch pan rate.\n     */\n    get touchPanRate(): number {\n        return this.#configs.touchPanRate;\n    }\n\n    /**\n     * Sets how fast the camera pans on touch panning\n     *\n     * @param touchPanRate The new touch pan rate.\n     */\n    set touchPanRate(touchPanRate: number | undefined) {\n        this.#configs.touchPanRate = (touchPanRate !== null && touchPanRate !== undefined) ? touchPanRate : 1.0;\n    }\n\n    /**\n     * Gets how much the {@link @xeokit/viewer!Camera}  pans each second with keyboard input.\n     *\n     * Default is ````5.0````.\n     *\n     * @returns {Number} The current keyboard pan rate.\n     */\n    get keyboardPanRate(): number {\n        return this.#configs.keyboardPanRate;\n    }\n\n    /**\n     * Sets how much the {@link @xeokit/viewer!Camera}  pans each second with keyboard input.\n     *\n     * Default is ````5.0````, to pan the Camera ````5.0```` World-space units every second that\n     * a panning key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * panning.\n     *\n     * Panning direction is aligned to our Camera's orientation. When we pan horizontally, we pan\n     * to our left and right, when we pan vertically, we pan upwards and downwards, and when we pan forwards\n     * and backwards, we pan along the direction the Camera is pointing.\n     *\n     * Unlike dollying when {@link followPointer} is ````true````, panning does not follow the pointer.\n     *\n     * @param keyboardPanRate The new keyboard pan rate.\n     */\n    set keyboardPanRate(keyboardPanRate: number | undefined) {\n        this.#configs.keyboardPanRate = (keyboardPanRate !== null && keyboardPanRate !== undefined) ? keyboardPanRate : 5.0;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link @xeokit/viewer!Camera}  rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````.\n     *\n     * @returns {Number} The current keyboard rotation rate.\n     */\n    get keyboardRotationRate(): number {\n        return this.#configs.keyboardRotationRate;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link @xeokit/viewer!Camera}  rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````, to rotate/orbit the Camera ````90.0```` degrees every second that\n     * a rotation key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * rotation/orbit.\n     *\n     * @param keyboardRotationRate The new keyboard rotation rate.\n     */\n    set keyboardRotationRate(keyboardRotationRate: number | undefined) {\n        this.#configs.keyboardRotationRate = (keyboardRotationRate !== null && keyboardRotationRate !== undefined) ? keyboardRotationRate : 90.0;\n    }\n\n    /**\n     * Gets the current drag rotation rate.\n     *\n     * Default is ````360.0````.\n     *\n     * @returns {Number} The current drag rotation rate.\n     */\n    get dragRotationRate(): number {\n        return this.#configs.dragRotationRate;\n    }\n\n    /**\n     * Sets the current drag rotation rate.\n     *\n     * This configures how many degrees the {@link @xeokit/viewer!Camera}  rotates/orbits for a full sweep of the canvas by mouse or touch dragging.\n     *\n     * For example, a value of ````360.0```` indicates that the ````Camera```` rotates/orbits ````360.0```` degrees horizontally\n     * when we sweep the entire width of the canvas.\n     *\n     * ````CameraControl```` makes vertical rotation half as sensitive as horizontal rotation, so that we don't tend to\n     * flip upside-down. Therefore, a value of ````360.0```` rotates/orbits the ````Camera```` through ````180.0```` degrees\n     * vertically when we sweep the entire height of the canvas.\n     *\n     * Default is ````360.0````.\n     *\n     * @param dragRotationRate The new drag rotation rate.\n     */\n    set dragRotationRate(dragRotationRate: number | undefined) {\n        this.#configs.dragRotationRate = (dragRotationRate !== null && dragRotationRate !== undefined) ? dragRotationRate : 360.0;\n    }\n\n    /**\n     * Gets how much the {@link @xeokit/viewer!Camera}  dollys each second with keyboard input.\n     *\n     * Default is ````15.0````.\n     *\n     * @returns {Number} The current keyboard dolly rate.\n     */\n    get keyboardDollyRate(): number {\n        return this.#configs.keyboardDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link @xeokit/viewer!Camera}  dollys each second with keyboard input.\n     *\n     * Default is ````15.0````, to dolly the {@link @xeokit/viewer!Camera}  ````15.0```` World-space units per second while we hold down\n     * the ````+```` and ````-```` keys.\n     *\n     * @param keyboardDollyRate The new keyboard dolly rate.\n     */\n    set keyboardDollyRate(keyboardDollyRate: number | undefined) {\n        this.#configs.keyboardDollyRate = (keyboardDollyRate !== null && keyboardDollyRate !== undefined) ? keyboardDollyRate : 15.0;\n    }\n\n    /**\n     * Gets how much the {@link @xeokit/viewer!Camera}  dollys each second with touch input.\n     *\n     * Default is ````0.2````.\n     *\n     * @returns {Number} The current touch dolly rate.\n     */\n    get touchDollyRate(): number {\n        return this.#configs.touchDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link @xeokit/viewer!Camera}  dollys with touch input.\n     *\n     * Default is ````0.2````\n     *\n     * @param touchDollyRate The new touch dolly rate.\n     */\n    set touchDollyRate(touchDollyRate: number | undefined) {\n        this.#configs.touchDollyRate = (touchDollyRate !== null && touchDollyRate !== undefined) ? touchDollyRate : 0.2;\n    }\n\n    /**\n     * Gets how much the {@link @xeokit/viewer!Camera}  dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````.\n     *\n     * @returns {Number} The current mouseWheel dolly rate.\n     */\n    get mouseWheelDollyRate(): number {\n        return this.#configs.mouseWheelDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link @xeokit/viewer!Camera}  dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````, to dolly the {@link @xeokit/viewer!Camera}  ````10.0```` World-space units per second as we spin\n     * the mouse wheel.\n     *\n     * @param mouseWheelDollyRate The new mouse wheel dolly rate.\n     */\n    set mouseWheelDollyRate(mouseWheelDollyRate: number | undefined) {\n        this.#configs.mouseWheelDollyRate = (mouseWheelDollyRate !== null && mouseWheelDollyRate !== undefined) ? mouseWheelDollyRate : 100.0;\n    }\n\n    /**\n     * Gets the dolly inertia factor.\n     *\n     * Default is ````0````.\n     *\n     * @returns {Number} The current dolly inertia factor.\n     */\n    get dollyInertia(): number {\n        return this.#configs.dollyInertia;\n    }\n\n    /**\n     * Sets the dolly inertia factor.\n     *\n     * This factor configures how much the {@link @xeokit/viewer!Camera}  keeps moving after you finish dollying it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes dollying to immediately stop,\n     * ````0.5```` causes dollying to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows dollying\n     * to continue until further input stops it.\n     *\n     * You might set ````dollyInertia```` to zero when you want to be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders fewer frames while dollying the Camera,\n     * which can improve rendering performance.\n     *\n     * Default is ````0````.\n     *\n     * @param dollyInertia New dolly inertia factor.\n     */\n    set dollyInertia(dollyInertia: number | undefined) {\n        this.#configs.dollyInertia = (dollyInertia !== undefined && dollyInertia !== null) ? dollyInertia : 0;\n    }\n\n    /**\n     * Gets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @returns {Number} The current dolly proximity threshold.\n     */\n    get dollyProximityThreshold(): number {\n        return this.#configs.dollyProximityThreshold;\n    }\n\n    /**\n     * Sets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @param dollyProximityThreshold New dolly proximity threshold.\n     */\n    set dollyProximityThreshold(dollyProximityThreshold: number | undefined) {\n        this.#configs.dollyProximityThreshold = (dollyProximityThreshold !== undefined && dollyProximityThreshold !== null) ? dollyProximityThreshold : 35.0;\n    }\n\n    /**\n     * Gets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @returns {Number} The current minimum dolly speed.\n     */\n    get dollyMinSpeed(): number {\n        return this.#configs.dollyMinSpeed;\n    }\n\n    /**\n     * Sets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @param dollyMinSpeed New dolly minimum speed.\n     */\n    set dollyMinSpeed(dollyMinSpeed: number | undefined) {\n        this.#configs.dollyMinSpeed = (dollyMinSpeed !== undefined && dollyMinSpeed !== null) ? dollyMinSpeed : 0.04;\n    }\n\n    /**\n     * Gets the pan inertia factor.\n     *\n     * Default is ````0.5````.\n     *\n     * @returns {Number} The current pan inertia factor.\n     */\n    get panInertia(): number {\n        return this.#configs.panInertia;\n    }\n\n    /**\n     * Sets the pan inertia factor.\n     *\n     * This factor configures how much the {@link @xeokit/viewer!Camera}  keeps moving after you finish panning it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes panning to immediately stop,\n     * ````0.5```` causes panning to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows panning\n     * to continue until further input stops it.\n     *\n     * You might set ````panInertia```` to zero when you want to be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders fewer frames while panning the Camera,\n     * wich can improve rendering performance.\n     *\n     * Default is ````0.5````.\n     *\n     * @param panInertia New pan inertia factor.\n     */\n    set panInertia(panInertia: number | undefined) {\n        this.#configs.panInertia = (panInertia !== undefined && panInertia !== null) ? panInertia : 0.5;\n    }\n\n    /**\n     * Gets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @returns {String} The current keyboard layout.\n     */\n    get keyboardLayout(): string {\n        return this.#configs.keyboardLayout;\n    }\n\n    /**\n     * Sets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @param value Selects the keyboard layout.\n     */\n    set keyboardLayout(value: string | undefined) {\n        // this.warn(\"keyboardLayout property is deprecated - use keyMap property instead\");\n        value = value || \"qwerty\";\n        if (value !== \"qwerty\" && value !== \"azerty\") {\n            this.error(\"Unsupported value for keyboardLayout - defaulting to 'qwerty'\");\n            value = \"qwerty\";\n        }\n        this.#configs.keyboardLayout = value;\n        this.keyMap = this.#configs.keyboardLayout;\n    }\n\n    /**\n     * Gets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera.eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when pivoting by default about the selected point on the virtual sphere, or ````false```` when pivoting by default about {@link Camera.look}.\n     */\n    get smartPivot(): boolean {\n        return this.#configs.smartPivot;\n    }\n\n    /**\n     * Sets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera.eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * @param enabled Set ````true```` to pivot by default about the selected point on the virtual sphere, or ````false```` to pivot by default about {@link Camera.look}.\n     */\n    set smartPivot(enabled: boolean | undefined) {\n        this.#configs.smartPivot = (enabled !== false);\n    }\n\n    /**\n     * Gets whether keyboard input is enabled.\n     */\n    get keyboardEnabled(): boolean {\n        return this.#configs.keyboardEnabled;\n    }\n\n    /**\n     * Sets whether keyboard input is enabled.\n     */\n    set keyboardEnabled(enabled: boolean | undefined) {\n        this.#configs.keyboardEnabled = (enabled !== false);\n    }\n\n    /**\n     * Returns true if any keys configured for the given action are down.\n     * @param action\n     * @param keyDownMap\n     * @private\n     */\n    _isKeyDownForAction(action: number, keyDownMap: { [key: number]: boolean }) {\n        const keys = this.#configs.keyMap[action];\n        if (!keys) {\n            return false;\n        }\n        if (!keyDownMap) {\n            keyDownMap = this.#states.keyDown;\n        }\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const key = keys[i];\n            if (keyDownMap[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    #reset() {\n        for (let i = 0, len = this.#handlers.length; i < len; i++) {\n            const handler = this.#handlers[i];\n            if (handler.reset) {\n                handler.reset();\n            }\n        }\n\n        this.#updates.panDeltaX = 0;\n        this.#updates.panDeltaY = 0;\n        this.#updates.rotateDeltaX = 0;\n        this.#updates.rotateDeltaY = 0;\n        this.#updates.dollyDelta = 0;\n    }\n\n    /**\n     * Destroys this ````CameraControl````.\n     * @private\n     */\n    destroy() {\n        this.#destroyHandlers();\n        this.#destroyControllers();\n        this.#cameraUpdater.destroy();\n        this.onHover.clear();\n        this.onHoverOff.clear();\n        this.onHoverEnter.clear();\n        this.onHoverOut.clear();\n        super.destroy();\n    }\n\n    #destroyHandlers() {\n        for (let i = 0, len = this.#handlers.length; i < len; i++) {\n            const handler = this.#handlers[i];\n            if (handler.destroy) {\n                handler.destroy();\n            }\n        }\n    }\n\n    #destroyControllers() {\n        for (let key in this.#controllers) {\n            // @ts-ignore\n            const controller = this.#controllers[key];\n            if (controller.destroy) {\n                controller.destroy();\n            }\n        }\n    }\n}\n\n\n","\nimport type {BCFViewpoint} from \"./BCFViewpoint\";\nimport type {LoadBCFViewpointParams} from \"./LoadBCFViewpointParams\";\n\n/**\n * Loads a {@link BCFViewpoint} into a {@link @xeokit/viewer!View | View} or a {@link @xeokit/viewer!ViewLayer | ViewLayer}.\n *\n * See {@link \"@xeokit/bcf\"} for usage.\n *\n * @param params BCF viewpoint loading paremeters.\n */\nexport function loadBCFViewpoint(params:LoadBCFViewpointParams) {\n\n}","import type {BCFViewpoint} from \"./BCFViewpoint\";\nimport type {SaveBCFViewpointParams} from \"./SaveBCFViewpointParams\";\n\n/**\n * Saves a {@link @xeokit/viewer!View | View} or a {@link @xeokit/viewer!ViewLayer | ViewLayer} to a {@link BCFViewpoint}.\n *\n * See {@link @xeokit/bcf} for usage.\n *\n * @param params BCF saving parameers.\n * @returns The BCF viewpoint.\n */\nexport function saveBCFViewpoint(params: SaveBCFViewpointParams): BCFViewpoint {\n    return {};\n}"],"names":["_ievent","_classPrivateFieldLooseKey","EventEmitter","ievent","Object","defineProperty","this","writable","value","_classPrivateFieldLooseBase","_proto","prototype","subscribe","func","asEvent","dispatch","sender","args","sub","unsubscribe","unsub","one","has","clear","_createClass","key","get","count","exports","DispatcherWrapper","constructor","dispatcher","_subscribe","fn","_unsubscribe","_one","_has","_clear","_count","_onSubscriptionChange","onSubscriptionChange","Subscription","handler","isOnce","isExecuted","execute","executeAsync","scope","setTimeout","apply","EventManagement","propagationStopped","stopPropagation","SubscriptionChangeEventDispatcher","DispatcherBase","_subscriptions","Array","length","push","createSubscription","triggerSubscriptionChange","some","changes","i","splice","_dispatch","ev","EventManagement_1","nargs","slice","call","cleanup","Subscription_1","indexOf","_wrap","DispatcherWrapper_1","arguments","DispatchError","Error","message","super","EventListBase","_events","name","event","createDispatcher","remove","HandlingBase","events","PromiseSubscription","async","result","PromiseDispatcherBase","DispatcherBase_1","DispatchError_1","PromiseSubscription_1","ps","enumerable","EventListBase_1","HandlingBase_1","PromiseDispatcherBase_1","EventDispatcher","ste_core_1","dispatchAsync","EventList","EventDispatcher_1","EventHandlingBase","EventList_1","NonUniformEventList","EventHandlingBase_1","NonUniformEventList_1","SimpleEventDispatcher","SimpleEventList","SimpleEventDispatcher_1","SimpleEventHandlingBase","SimpleEventList_1","NonUniformSimpleEventList","SimpleEventHandlingBase_1","NonUniformSimpleEventList_1","SignalDispatcher","SignalList","SignalDispatcher_1","SignalHandlingBase","SignalList_1","SignalHandlingBase_1","PromiseEventDispatcher","_dispatchAsPromise","PromiseEventList","PromiseEventDispatcher_1","PromiseEventHandlingBase","PromiseEventList_1","NonUniformPromiseEventList","PromiseEventHandlingBase_1","NonUniformPromiseEventList_1","PromiseSignalDispatcher","PromiseSignalList","PromiseSignalDispatcher_1","PromiseSignalHandlingBase","PromiseSignalList_1","PromiseSignalHandlingBase_1","PromiseSimpleEventDispatcher","NonUniformPromiseSimpleEventList","PromiseSimpleEventDispatcher_1","PromiseSimpleEventList","PromiseSimpleEventHandlingBase","PromiseSimpleEventList_1","NonUniformPromiseSimpleEventList_1","PromiseSimpleEventHandlingBase_1","ste_events_1","ste_simple_events_1","ste_signals_1","ste_promise_events_1","ste_promise_signals_1","ste_promise_simple_events_1","createUUID","lut","toString","d0","Math","random","d1","d2","d3","_owner","_ownedComponents","_prefixMessageWithID","_own","Component","owner","cfg","_own2","_prefixMessageWithID2","id","destroyed","dirty","onDestroyed","log","console","warn","error","setDirty","cleanIfDirty","clean","destroy","hasOwnProperty","component","_this","SDKError","_Error","_inheritsLoose","_wrapNativeSuper","RepeatWrapping","NearestFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","RGBAFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LinearEncoding","sRGBEncoding","PointsPrimitive","LinesPrimitive","TrianglesPrimitive","SolidPrimitive","SurfacePrimitive","QualityRender","MetersUnit","PerspectiveProjectionType","OrthoProjectionType","FrustumProjectionType","CustomProjectionType","MIN_DOUBLE","Number","MAX_SAFE_INTEGER","MAX_DOUBLE","DEGTORAD","clamp","min","max","newFloatArray","values","Float64Array","tempVec4a","createVec4","tempVec3","createVec3","tempVec3b","tempVec3c","tempVec3d","tempVec3e","tempVec4b","dotVec3","u","v","createVec2","addVec4","dest","mulVec4Scalar","s","mulVec3Scalar","mulVec2Scalar","addVec3","subVec4","subVec3","subVec2","geometricMeanVec2","vectors","geometricMean","Float32Array","divScalarVec3","dotVec4","cross3Vec3","x","y","z","x2","y2","z2","sqLenVec4","lenVec4","sqrt","dotVec2","sqLenVec3","sqLenVec2","lenVec3","vec","distVec3","w","lenVec2","lerpVec3","t","t1","t2","p1","p2","f","distVec2","normalizeVec4","normalizeVec3","vec3FromMat4Scale","m","trunc","round","createMat3","createMat4","tempMat4a","tempMat4b","perspectiveMat4","fovyrad","aspectratio","znear","zfar","pmin","pmax","tan","frustumMat4v","fmin","fmax","fmin4","fmax4","tempMat4b0","tempMat4b1","tempMat4b2","orthoMat4c","left","right","bottom","top","near","far","rl","tb","frustumMat4","identityMat4","identityMat3","rotationMat4v","anglerad","axis","xy","yz","zx","xs","ys","zs","ax","sin","c","cos","q","lookAtMat4v","pos","target","up","z0","z1","x0","x1","y0","y1","len","posx","posy","posz","upx","upy","upz","targetx","targety","targetz","inverseMat4","mat","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","invDet","transposeMat4","m4","m14","m8","m13","m12","m9","mulMat4v4","v0","v1","v2","v3","mulMat4","a","b","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","mulMat3","transformPoint3","p","transformPoint4","transformPositions3","m0","m1","m2","m3","m5","m6","m7","m10","m11","m15","transformVec3","transformVec4","scaleMat4v","xyz","scalingMat4v","scalingMat3v","scalingMat4c","composeMat4","position","quaternion","scale","quatToRotationMat4","translateMat4v","decomposeMat4","matrix","sx","sy","sz","determinantMat4","set","invSX","invSY","invSZ","mat4ToQuat","translateMat4c","setMat4Translation","translation","translationMat4v","translationMat3v","translationMat4c","mat4ToEuler","order","m21","m22","m23","m31","m32","m33","asin","abs","atan2","lerpMat4","identityQuat","eulerToQuat","euler","c1","c2","c3","s1","s2","s3","trace","xx","xz","yy","zz","wx","wy","wz","normalizeQuat","conjugateQuat","u0","u1","u2","theta","acos","normal","p1x","p1y","p1z","p2x","p2y","p2z","p3x","p3y","p3z","mag","points","points2","p0","pi","r","norm_u_norm_v","real_part","angleAxis","halfAngle","fsin","p3","q0","q1","q2","q3","qx","qy","qz","qw","ix","iy","iz","iw","tx","ty","tz","twx","twy","twz","txx","txy","txz","tyy","tyz","tzz","angle","origin","dir","isect","edge1","edge2","pvec","det","tvec","qvec","rayOrigin","rayDir","rayOriginDest","rayDirDest","Map","items","baseId","_items","_lastUniqueId","addItem","item","findId","removeItem","Queue","_head","_headLength","_tail","_index","_length","shift","undefined","unshift","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","url","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","index","getHandler","file","l","global","lastIndex","test","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","path","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","parse","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","WorkerPool","pool","queue","workers","workersResolve","workerStatus","workerCreator","_initWorker","workerId","worker","addEventListener","_onMessage","bind","_getIdleWorker","msg","_this$queue$shift","transfer","postMessage","setWorkerCreator","setWorkerLimit","forEach","terminate","Cache","enabled","files","add","loading","FileLoader","_Loader","mimeType","responseType","_this2","cached","req","Request","headers","Headers","credentials","fetch","then","response","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","parseInt","lengthComputable","loaded","stream","start","controller","readData","read","_ref","done","close","ProgressEvent","byteLength","il","callback","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","json","exec","label","toLowerCase","decoder","TextDecoder","ab","decode","data","err","setResponseType","setMimeType","guidChars","map","li","st","charCodeAt","en","String","fromCharCode","join","b64","substr","reverse","loadArraybuffer","ok","defaultCallback","_value","dataUriRegexResult","match","isBase64","window","decodeURIComponent","atob","buffer","ArrayBuffer","view","Uint8Array","request","XMLHttpRequest","open","onreadystatechange","readyState","send","isArray","propertyIsEnumerable","isString","isNumeric","isNaN","parseFloat","isFinite","o","o2","inQuotes","ob","JSON","stringify","g","bs","_","n","type","children","dt","xhr","method","onload","e","responseXML","overrideMimeType","obj","translate","decompressPoint3","decompressMatrix","decompressPositions3","positions","compressUVs","array","quantized","Uint16Array","multiplier","floor","octEncodeNormalFromArray","xfunc","yfunc","tempx","tempy","Int8Array","dot","octDecodeVec2","oct","quantizePositions3","aabb","positionsDecompressMatrix","lenPositions","positionsCompressed","xmin","ymin","zmin","xwid","ywid","zwid","maxInt","xMultiplier","yMultiplier","zMultiplier","verify","num","octEncodeVec3","octEncodeNormal","j","MAX_VALUE","best","currentCos","bestCos","encoded","uv","uvs","octs","worldNormalMatrix","normals","lenNormals","compressedNormals","lenCompressedNormals","localNormal","worldNormal","tempVec3a","createAABB3","createAABB3Int16","Int16Array","createOBB3","containsAABB2","aabb1","aabb2","containsAABB3","getAABB3Diag","getAABB3DiagPoint","diagVec","xneg","xpos","yneg","ypos","zneg","zpos","getAABB3Center","collapseAABB3","AABB3ToOBB3","obb","expandAABB3","expandAABB3Point3","expandAABB3Points3","positions3ToAABB3","xmax","ymax","zmax","getPositions3Center","center","xCenter","yCenter","zCenter","numPositions","FrustumPlane3","testVertex","offset","nx","ny","nz","INSIDE","INTERSECT","OUTSIDE","Frustum3","planes","setFrustum3","viewMat","projMat","frustum","intersectFrustum3AABB3","ret","bminmax","plane","intersectAABB3s","indices","tempMat","rtcCenterWorld","rtcCenterView","createRTCViewMat","rtcCenter","rtcViewMat","worldToRTCCenter","worldCenter","cellSize","worldPos","rtcPos","xHigh","from","xLow","yHigh","yLow","zHigh","zLow","worldPositions","rtcPositions","rtcCenterX","rtcCenterY","rtcCenterZ","dist","rtcPlanePos","rtcCenterToPlaneDist","k","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","_messages","_locales","_locale","resolvePath","parts","split","vsprintf","replace","LocaleService","messages","locale","onUpdated","loadMessages","clearMessages","localeMessages","localeMessage","translatePlurals","zero","other","keys","Property","propertySet","propertyCfg","valueType","description","PropertySet","dataModel","propertySetCfg","models","originalSystemId","properties","property","DataObject","model","propertySets","relating","related","Relationship","relatingObject","relatedObject","_destroyed","_removeObjectFromModels","DataModel","_Component","dataModelParams","options","_assertThisInitialized","_removeObjectFromModels2","projectId","revisionId","author","createdAt","creatingApplication","schema","objects","rootObjects","objectsByType","relationships","typeCounts","onBuilt","built","fromJSON","createPropertySet","createObject","createRelationship","dataObjectParams","dataObject","propertySetIds","propertySetId","onObjectCreated","relationshipParams","relatingObjectId","relatedObjectId","relation","build","getJSON","_dataModelParams$prop","propertySetParams","_dataModelParams$obje","object","objectParams","_objectParams$propert","_dataModelParams$rela","relationship","onObjectDestroyed","relations","list","lenj","Data","onModelCreated","onModelDestroyed","createModel","getObjectIdsByType","searchObjects","searchParams","includeObjects","arrayToMap","excludeObjects","includeRelating","excludeRelating","visit","depth","includeObject","includeStart","resultObjectIds","resultObjects","resultCallback","includeRelation","startObjectId","startObject","GeometryBucket","geometryBucketParams","uvsCompressed","colorsCompressed","edgeIndices","Geometry","params","primitive","uvsDecompressMatrix","geometryBuckets","rendererGeometry","_positionsDecompressed","_positionsWorld","GeometryViewImpl","mesh","meshIndex","geometry","geometryBucket","geometryBucketIndex","reset","totalGeometryBuckets","meshes","primitiveType","positionsDecompressed","geometryView","getSceneObjectGeometry","sceneObject","withEachGeometry","_aabb","_aabbDirty","SceneObject","layerId","rendererObject","setAABBDirty","positionsWorld","TextureSet","textureSetParams","textures","colorTexture","metallicRoughnessTexture","occlusionTexture","emissiveTexture","rendererTextureSet","Texture","rendererTexture","src","imageData","buffers","image","height","width","compressed","mediaType","magFilter","minFilter","wrapS","wrapT","wrapR","flipY","encoding","preloadColor","channel","_color","_matrix","_metallic","_roughness","_opacity","Mesh","meshParams","textureSet","rendererMesh","color","metallic","roughness","opacity","setColor","setMatrix","setMetallic","setRoughness","uniquePositions","indicesLookup","indicesReverseLookup","weldedIndices","faces","numFaces","compa","compb","compc","cb","cross","comparePositions","compareVertex","res","seqInit","bucketsForIndices","compareBuckets","aa1","aa2","aa3","bb1","bb2","bb3","aa","bb","minBucketA","minBucketB","maxBucketA","maxBucketB","compressGeometryParams","geometryParams","uniquePositionsCompressed","edgeThreshold","vx","vy","vz","positionsMap","precision","pow","lenUniquePositions","weldVertices","numIndices","ia","ib","ic","face","buildFaces","index1","index2","edge","thresholdDot","edges","largeIndex","faceIndex","face1","face2","Uint32Array","buildEdgeIndices","_uniquifyPositions","maxPositions","setMaxNumberOfPositions","seq","remappings","sort","uniqueIdx","uniqueEdgeIndices","uniqueIndices","uniquifyPositions","bitsPerBucket","checkResult","Int32Array","sortedIndices","preSortIndices","edgeSearch","el0","el1","tmp","compare_fn","cmp","alreadyOutputEdgeIndices","fill","bucketIndicesRemap","buckets","addEmptyBucket","newBucket","maxNumPositions","bucketNumber","currentBucket","additonalPositionsInBucket","ii0","ii1","ii2","edgeIndex","newBytesPerIndex","originalSize","newSize","bucket","meshDict","doCheckResult","rebucketPositions","_texturesList","_numObjects","_meshUsedByObject","_removeUnusedTextures","SceneModel","scene","sceneModelParams","_removeUnusedTextures2","geometries","textureSets","rendererModel","stats","numGeometries","numLines","numMeshes","numObjects","numPoints","numTextureSets","numTextures","numTriangles","numVertices","textureBytes","createGeometry","createTexture","createTextureSet","createMesh","createTransform","transformParams","textureParams","pop","texture","normalsTexture","colorTextureId","metallicRoughnessTextureId","normalsTextureId","emissiveTextureId","occlusionTextureId","geometryId","lastPositionsIdx","idx","createGeometryCompressed","geometryCompressedParams","textureSetId","meshIds","meshIdIdx","meshIdLen","meshId","_onModelBuilts","_onModelDestroys","_center","_registerObjects","_deregisterObjects","Scene","_deregisterObjects2","_registerObjects2","sceneModel","valid","objectId","kdTreeDimLength","_insertItem","KdTree2","_insertItem2","root","maxDepth","insertItem","node","nodeAABB","dim","aabbLeft","aabbRight","KdVertex2","canvasPos","kdTree2D","canvasBoundary","viewMatrix","projMatrix","sceneObjects","insertSceneObject","intersects","insertVertex","viewPos","projPos","_root","_maxDepth","_numNodes","KdTree3","SceneObjectsKdTree3","_KdTree","SceneObjectsPrimsKdTree3","PrimsKdTree3","tempAABBInt16","insertPoint","kdTree","ay","az","insertLine","bx","by","bz","insertTriangle","cx","cy","cz","_typeNames","prim","_loop","foundItems","BasicAggregation","typeNames","BasicEntity","Road","TunnelInstallation","Bridge","BridgePart","BridgeInstallation","BridgeConstructiveElement","BridgeRoom","BridgeFurniture","Building","BuildingPart","BuildingInstallation","BuildingConstructiveElement","BuildingFurniture","BuildingStorey","BuildingRoom","BuildingUnit","CityFurniture","CityObjectGroup","LandUse","OtherConstruction","PlantCover","SolitaryVegetationObject","TINRelief","TransportationSquare","Railway","Tunnel","TunnelPart","TunnelHollowSpace","TunnelFurniture","WaterBody","Waterway","typeCodes","TunnelConstructiveElement","earcut","holeIndices","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","end","clockwise","last","signedArea","insertNode","equals","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","maxTX","maxTY","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","Infinity","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","o1","sign","o3","o4","onSegment","a2","Node","b2","an","bp","sum","deviation","polygonArea","trianglesArea","flatten","vertices","holes","dimensions","holeIndex","d","tempVec2a","transformVertices","rotateX","transformedVertices","parseCityObject","ctx","cityObject","parent","parents","objectMaterial","surfaceMaterials","appearance","fileData","materials","geometryMaterial","material","themeIds","theme","parseGeometrySurfacesWithOwnMaterials","parseGeometrySurfacesWithSharedMaterial","parseRelationship","parseSurfacesWithOwnMaterials","boundaries","shells","solids","surfaces","surface","surfaceMaterial","diffuseColor","transparency","sharedIndices","geometryCfg","newFace","extractLocalIndices","pList","getNormalOfPositions","pv","to2D","tr","nextId","parseSurfacesWithSharedMaterial","primitiveCfg","boundary","newBoundary","includes","vertexIndex","nexti","_p","_n","re","x3","tmp2","y3","cityObjects","CityObjects","parseCityJSON","mesh_id","coordinates","elements","element","guid","baseColor","parseDotBIM","errMsg","_rendererViewObject","_state","ViewObject","layer","rendererViewObject","visible","culled","pickable","clippable","collidable","xrayed","selected","highlighted","colorize","colorized","opacityUpdated","setVisible","viewIndex","objectVisibilityUpdated","_destroy","objectXRayedUpdated","objectSelectedUpdated","objectHighlightedUpdated","objectColorizeUpdated","objectOpacityUpdated","redraw","setXRayed","setEdges","setHighlighted","setSelected","SectionPlane","onPos","onDir","onActive","active","flipDir","unitsInfo","_unitsInfo","abbrev","CentimetersUnit","MillimetersUnit","YardsUnit","FeetUnit","InchesUnit","_units","_scale","_origin","Metrics","units","onUnits","onScale","onOrigin","worldToRealPos","realPos","realToWorldPos","SAO","renderModes","kernelRadius","intensity","bias","minResolution","numSamples","blur","blendCutoff","blendCutff","blendFactor","viewer","renderer","getSAOSupported","supported","projectionType","camera","LinesMaterial","lineWidth","_objectIds","_numVisibleObjects","_visibleObjectIds","_numXRayedObjects","_xrayedObjectIds","_numHighlightedObjects","_highlightedObjectIds","_numSelectedObjects","_selectedObjectIds","_numColorizedObjects","_colorizedObjectIds","_numOpacityObjects","_opacityObjectIds","_qualityRender","_initViewObjects","_createViewObjects","_destroyViewObjects","ViewLayer","_destroyViewObjects2","_createViewObjects2","_initViewObjects2","visibleObjects","xrayedObjects","highlightedObjects","selectedObjects","colorizedObjects","opacityObjects","autoDestroy","onObjectVisibility","gammaOutput","qualityRender","registerViewObject","viewObject","deregisterViewObject","setImageDirty","notify","setObjectsVisible","objectIds","withObjects","changed","setObjectsCollidable","setObjectsCulled","setObjectsSelected","setObjectsHighlighted","setObjectsXRayed","setObjectsColorized","setObjectsOpacity","setObjectsPickable","setObjectsClippable","rendererViewObjects","viewerObjects","EmphasisMaterial","fillColor","fillAlpha","edgeColor","edgeAlpha","edgeWidth","backfaces","EdgeMaterial","PointsMaterial","pointSize","roundPoints","perspectivePoints","minPerspectivePointSize","maxPerspectivePointSize","filterIntensity","minIntensity","maxIntensity","rebuild","state","_inverseMatrixDirty","_transposedProjMatrixDirty","_onViewBoundary","PerspectiveProjection","onProjMatrix","fov","fovAxis","inverseProjMatrix","transposedProjMatrix","onBoundary","aspect","PI","unproject","screenZ","screenPos","canvasElement","halfViewWidth","offsetWidth","halfViewHeight","offsetHeight","inverseViewMatrix","OrthoProjection","halfSize","boundaryWidth","boundaryHeight","canvas","FrustumProjection","_inverseProjMatrixDirty","CustomProjection","tempVec3f","tempMatb","eyeLookVec","eyeLookVecNorm","eyeLookOffset","offsetEye","_frustum","_activeProjection","Camera","perspectiveProjection","orthoProjection","frustumProjection","customProjection","onProjectionType","onViewMatrix","onWorldAxis","onFrustum","eye","look","worldUp","worldRight","worldForward","worldAxis","gimbalLock","constrainPitch","deviceMatrix","hasDeviceMatrix","viewNormalMatrix","orbitYaw","angleInc","lookEyeVec","orbitPitch","eye2","yaw","look2","pitch","pan","zoom","delta","lenLook","newLenLook","tickEvent","viewerId","time","startTime","prevTime","deltaTime","_viewersRenderInfo","_viewerIDMap","_taskQueue","_taskBudget","_lastTime","_elapsedTime","_runTasks","_runTasksUntil","_fireTickEvents","_renderViewers","_runTasks2","getNumTasks","_runTasksUntil2","until","Date","getTime","tasksRun","_fireTickEvents2","scheduler","viewers","onTick","_renderViewers2","renderInfo","render","Scheduler","requestAnimationFrame","frame","now","registerViewer","deregisterViewer","scheduleTask","newLook","newEye","newUp","newLookEyeVec","_duration","_look","_eye","_up","_look2","_eye2","_up2","_orthoScale","_orthoScale2","_fit","_trail","_flying","_flyEyeLookUp","_flyingEye","_flyingLook","_callback","_callbackScope","_time","_time2","_flyingEyeLookUp","_fitFOV","_projection","_projMatrix","_projMatrix2","_jumpTo","_update","_ease","_easeInCubic","_easeOutExpo","CameraFlightAnimation","_update2","_jumpTo2","easing","onStarted","onStopped","onCancelled","flyTo","flyToProjection","projection","orthoScale","poi","aabbCenter","diag","fitFOV","sca","duration","jumpTo","cancel","fit","stopping","tFlight","tProj","_onTick","_backgroundColor","_backgroundColorFromAmbientLight","_resolutionScale","_lightsHash","_sectionPlanesHash","_registerSectionPlane","_deregisterSectionPlane","View","_deregisterSectionPlane2","_registerSectionPlane2","transparent","logarithmicDepthBufferEnabled","sao","cameraFlight","metrics","xrayMaterial","highlightMaterial","selectedMaterial","edgeMaterial","pointsMaterial","linesMaterial","sectionPlanes","sectionPlanesList","lights","lightsList","layers","autoLayers","onObjectXRayed","onLayerCreated","onLayerDestroyed","onSectionPlaneCreated","onSectionPlaneDestroyed","document","getElementById","canvasId","HTMLCanvasElement","backgroundColor","backgroundColorFromAmbientLight","clientWidth","clientHeight","offsetLeft","offsetTop","lastWindowWidth","lastWindowHeight","lastViewWidth","lastViewHeight","lastViewOffsetLeft","lastViewOffsetTop","lastParent","lastResolutionScale","newResolutionScale","newWindowSize","innerWidth","innerHeight","newViewSize","newViewPos","parentElement","newWidth","newHeight","initViewObjects","createSectionPlane","sectionPlaneParams","_this3","sectionPlane","clearSectionPlanes","getSectionPlanesHash","hashParts","registerLight","light","deregisterLight","clearLights","getLightsHash","space","castsShadow","needsRebuild","getAmbientColorAndIntensity","createLayer","viewLayerParams","_this4","viewLayer","resolutionScale","_this5","_registerView","_deregisterView","Viewer","_deregisterView2","_registerView2","capabilities","onViewCreated","onViewDestroyed","views","viewList","numViews","maxViews","astcSupported","etc1Supported","etc2Supported","dxtSupported","bptcSupported","pvrtcSupported","getCapabilities","attachViewer","createView","viewId","attachView","detachView","attachSceneModel","detachSceneModel","force","AmbientLight","DirLight","PointLight","attenuation","constantAttenuation","linearAttenuation","quadraticAttenuation","PickResult","_viewObject","_gotCanvasPos","_gotOrigin","_gotDirection","_gotIndices","_gotLocalPos","_gotWorldPos","_gotViewPos","_gotWorldNormal","_gotUV","_canvasPos","_direction","_indices","_localPos","_worldPos","_viewPos","_worldNormal","_uv","activeTranscoders","BasisFormat","ETC1S","UASTC_4x4","TranscoderFormat","ETC1","ETC2","BC1","BC3","BC4","BC5","BC7_M6_OPAQUE_ONLY","BC7_M5","PVRTC1_4_RGB","PVRTC1_4_RGBA","ASTC_4x4","ATC_RGB","ATC_RGBA_INTERPOLATED_ALPHA","RGBA32","RGB565","BGR565","RGBA4444","EngineFormat","_transcoderPath","_transcoderBinary","_transcoderPending","_workerPool","_workerSourceURL","_workerConfig","_supportedFileTypes","_withCredentials","_initTranscoder","KTX2TextureTranscoder","_initTranscoder2","transcoderPath","workerLimit","init","transcode","config","taskConfig","transcodeResult","mipmaps","format","dfdTransferFn","dfdFlags","props","premultiplyAlpha","URL","revokeObjectURL","jsLoader","jsContent","binaryLoader","binaryContent","all","BasisWorker","substring","lastIndexOf","createObjectURL","Blob","Worker","transcoderBinary","transcoderPending","BasisModule","_EngineFormat","_TranscoderFormat","_BasisFormat","self","wasmBinary","onRuntimeInitialized","BASIS","initializeBasis","KTX2File","_transcode","ktx2File","isValid","basisFormat","isUASTC","getWidth","getHeight","levels","getLevels","hasAlpha","getHasAlpha","getDFDTransferFunc","getDFDFlags","_getTranscoderFormat","ETC1S_OPTIONS","UASTC_OPTIONS","opt","transcoderFormat","needsPowerOfTwo","isPowerOfTwo","engineFormat","getTranscoderFormat","startTranscoding","mip","levelInfo","getImageLevelInfo","mipWidth","origWidth","mipHeight","origHeight","dst","getImageTranscodedSizeInBytes","transcodeImage","FORMAT_OPTIONS","if","priorityETC1S","priorityUASTC","GLAttribute","gl","location","bindArrayBuffer","arrayBuf","enableVertexAttribArray","vertexAttribPointer","itemSize","itemType","normalized","stride","GLDataTexture","textureWidth","textureHeight","textureData","_onDestroyed","bindTexture","glProgram","sampler","unit","activeTexture","TEXTURE_2D","disableFiltering","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","unbind","deleteTexture","GLShader","source","errors","allocated","compiled","handle","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","isContextLost","lines","numberedLines","getShaderInfoLog","concat","GLSampler","uniform1i","ids","GLProgram","vertexShader","fragmentShader","attributes","samplers","uniforms","validated","linked","VERTEX_SHADER","vertex","FRAGMENT_SHADER","fragment","logErrors","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","uName","getUniformLocation","SAMPLER_2D","SAMPLER_CUBE","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","useProgram","getLocation","getAttribute","getSampler","deleteProgram","deleteShader","getExtension","_cachedExtensions","extension","convertConstant","constantVal","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","ALPHA","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8","REPEAT","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","LINEAR","oCanvas","createElement","getContext","saveAsBMP","saveAsPNG","saveAsJPEG","GLTexture","internalFormat","unpackAlignment","setPreloadColor","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texImage2D","setTarget","setImage","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","glFormat","glType","glInternalFormat","getInternalFormat","images","setCompressedData","TEXTURE0","supportsMips","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","filterFallback","texStorage2D","mipmap","compressedTexSubImage2D","texSubImage2D","setProps","_uploadProps","NEAREST_MIPMAP_NEAREST","generateMipmap","internalFormatName","isVideoTexture","R32F","R16F","R8","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","RGBA4","RGB5_A1","WEBGL_INFO","WEBGL","SUPPORTED_EXTENSIONS","antialias","ANTIALIAS","getContextAttributes","FS_MAX_FLOAT_PRECISION","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","DEPTH_BUFFER_BITS","getParameter","DEPTH_BITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VARYING_VECTORS","getSupportedExtensions","ext","depthTexturesSupported","RenderContext","viewMatrixDataTexture","pbrEnabled","withSAO","frontface","textureUnit","renderPass","shadowViewMatrix","shadowProjMatrix","pickViewMatrix","pickProjMatrix","pickZNear","pickZFar","pickInvisible","lastProgramId","RENDER_PASSES","NOT_RENDERED","COLOR_OPAQUE","COLOR_TRANSPARENT","SILHOUETTE_HIGHLIGHTED","SILHOUETTE_SELECTED","SILHOUETTE_XRAYED","EDGES_COLOR_OPAQUE","EDGES_COLOR_TRANSPARENT","EDGES_HIGHLIGHTED","EDGES_SELECTED","EDGES_XRAYED","PICK","tempVec4","_hash","_program","_needRebuild","_uniforms","_samplers","_build","_buildShader","_getValid","_bind","LayerRenderer","renderContext","_bind2","_getValid2","_buildShader2","_build2","needRebuild","draw","renderState","program","uniformMatrix4fv","worldMatrix","uniform4f","uniform4fv","viewMatrices","dataTextureSet","nextTextureUnit","eachMeshMatrices","eachMeshAttributes","eachPrimitiveMesh","numIndices8Bits","eachPrimitiveMesh_8Bits","indices_8Bits","drawArrays","TRIANGLES","numIndices16Bits","eachPrimitiveMesh_16Bits","indices_16Bits","numIndices32Bits","eachPrimitiveMesh_32Bits","indices_32Bits","baseColorMap","materialTextureSet","texture2D","metallicRoughMap","emissiveMap","occlusionMap","fragHeader","fragGammaDefs","fragSectionPlaneDefs","fragLightDefs","fragLogDepthBufDefs","fragSectionPlanesSlice","fragLighting","fragLogDepthBufOutput","logDepthBufFC","gammaFactor","nearPlaneHeight","pointCloudIntensityRange","lightAmbient","eachEdgeOffset","eachEdgeMesh","normalMap","getHash","buildVertexShader","buildFragmentShader","project","fragLightSourceUniforms","uniform3f","uniform1f","possible","viewportHeight","drawingBufferHeight","drawingBufferWidth","LN2","FastColorTrianglesRenderer","_LayerRenderer","vertHeader","fragFlatShading","DataTextureSet","edgeIndices_8Bits","edgeIndices_16Bits","edgeIndices_32Bits","eachEdgeMesh_8Bits","eachEdgeMesh_16Bits","eachEdgeMesh_32Bits","_built","MeshCounts","numVisible","numTransparent","numEdges","numXRayed","numSelected","numHighlighted","numClippable","numPickable","numCulled","SCENE_OBJECT_FLAGS","VISIBLE","CULLED","PICKABLE","CLIPPABLE","COLLIDABLE","CAST_SHADOW","RECEIVE_SHADOW","XRAYED","HIGHLIGHTED","SELECTED","EDGES","BACKFACES","TRANSPARENT","Reflect","construct","getOwnPropertyDescriptor","getPrototypeOf","ownKeys","h","setPrototypeOf","Proxy","Symbol","iterator","species","toStringTag","A","create","B","freeze","E","is","T","O","isPrototypeOf","hasOwn","I","P","S","F","L","toLocaleString","R","C","N","U","M","isView","D","W","SharedArrayBuffer","V","Y","G","K","X","H","entries","J","Q","Z","$","copyWithin","tt","rt","nt","subarray","et","ot","it","ct","ut","ft","ht","lt","at","yt","_regeneratorRuntime","mark","_callee","wrap","_context","pt","vt","TypeError","bt","RangeError","At","Set","mt","Bt","xt","Et","WeakMap","Tt","Ot","jt","It","Pt","St","_t","Ft","Lt","Rt","Ct","Nt","Ut","Mt","kt","_m","Wt","Vt","_m2","configurable","Yt","zt","Gt","Kt","Xt","qt","Ht","Jt","Qt","Zt","$t","rr","nr","er","or","ir","sr","cr","ur","ar","byteOffset","fr","_step","hr","_iterator","_createForOfIteratorHelperLoose","lr","of","_callee2","_iterator2","_step2","_r10","_context2","_callee3","_iterator3","_step3","_step3$value","_r11","_n6","_context3","filter","reduce","reduceRight","find","findIndex","findLast","findLastIndex","every","yr","emptyDataTexture","disableFilteringForBoundTexture","DataTextureBuffer","positionsDecompressMatrices","eachMeshVertexPortionBase","eachMeshVertexPortionOffset","eachMeshEdgeIndicesOffset","eachMeshColor","eachMeshPickColor","eachMeshNormalMatrix","eachMeshPositionsDecompressMatrix","eachMeshFlags1","eachMeshFlags2","eachMeshParts","INDICES_EDGE_INDICES_ALIGNMENT_SIZE","identityMatrix","tempUint8Array4","tempFloat32Array3","_gl","_view","_dataTextureBuffer","_geometryHandles","_meshPartHandles","_numMeshParts","_deferredSetFlagsActive","_deferredSetFlagsDirty","_createGeometryBucket","_createMeshPart","_setMeshFlags","_setMeshFlags3","Layer","layerParams","renderers","_setMeshFlags4","_setMeshFlags2","_createMeshPart2","_createGeometryBucket2","layerIndex","meshCounts","numEdgeIndices8Bits","numEdgeIndices16Bits","numEdgeIndices32Bits","beginDeferredFlags","canCreateMesh","numGeometryBuckets","MAX_DATATEXTURE_HEIGHT","hasGeometry","geometryBucketHandles","geometryHandle","geometryBucketHandle","worldAABB","geometryOBB","dataTextureBuffer","ceil","RGB16UI","RGB_INTEGER","createPositionsDataTexture","RGB8UI","createIndices8BitDataTexture","createIndices16BitDataTexture","RGB32UI","createIndices32BitDataTexture","RG8UI","createEdgeIndices8BitDataTexture","RG16UI","createEdgeIndices16BitDataTexture","RG32UI","createEdgeIndices32BitDataTexture","colors","pickColors","vertexBases","indexBaseOffsets","edgeIndexBaseOffsets","RGBA8UI","createEachMeshAttributesDataTexture","positionDecodeMatrices","matrices","Float16Array","createEachMeshMatricesDataTexture","offsets","RGB32F","RGB","createEachEdgeOffsetDataTexture","isEmpty","initFlags","flags","meshTransparent","commitDeferredFlags","flushInitFlags","setMeshVisible","setMeshHighlighted","setMeshXRayed","setMeshSelected","setMeshEdges","setMeshClippable","setMeshCulled","setMeshCollidable","setMeshPickable","setMeshColor","setMeshTransparent","setMeshOffset","setMeshMatrix","setMeshViewMatrixIndex","numVertsForPrim","alignedIndicesLen","alignedIndices","alignedEdgeIndicesLen","alignedEdgeIndices","indicesBase","vertexBase","edgeIndicesBase","indicesBuffer","edgeIndicesBuffer","currentNumIndices","vertsIndex","pickColor","meshPartId","eachPrimitiveMeshBuffer","edgeIndicesMeshIdBuffer","numEdgeIndices","vertsBase","numVerts","f0","f1","f2","f3","RendererGeometryImpl","RendererTextureImpl","tempIntRGB","_flags","_offsetAABB","_offset","_colorizeUpdated","_opacityUpdated","RendererObjectImpl","rendererMeshes","setSceneObject","setCulled","setClippable","setCollidable","setPickable","setColorize","setOpacity","lastOpacityQuantized","opacityQuantized","setOffset","finalize2","RendererMeshImpl","pickId","tileManager","tile","sceneObjectRenderer","colorizing","delegatePickedEntity","oldTile","updateTileCenter","getTile","tileChanged","tileCenter","newTransparent","changingTransparency","canPickTriangle","drawPickTriangles","drawFlags","pickTriangleSurface","pickResult","canPickWorldPos","drawPickNormals","putTile","RendererTextureSetImpl","defaultTextureSetId","_webglRenderer","_renderContext","_position","_rotation","_quaternion","_worldMatrix","_viewMatrix","_colorTextureEnabled","_backfaces","_layers","_numGeometries","_numTriangles","_numLines","_numPoints","_numRendererObjects","_textureTranscoder","_edgeThreshold","_currentLayers","_viewMatrixDirty","_worldMatrixNonIdentity","_onCameraViewMatrix","_layerId","_attachSceneModel","_attachTexture","_attachGeometry","_attachMesh","_getLayer","_attachSceneObject","_createDefaultTextureSetRenderer","_rebuildAABB","_detachSceneModel","RendererModelImpl","_detachSceneModel2","_rebuildAABB2","_createDefaultTextureSetRenderer2","_attachSceneObject2","_getLayer2","_attachMesh2","_attachGeometry2","_attachTexture2","_attachSceneModel2","rendererGeometries","rendererTextures","rendererTextureSets","rendererObjects","rendererObjectsList","layerList","webglRenderer","textureTranscoder","rotation","textureId","glTexture","Image","compressedTextureData","meshMatrix","meshRenderer","attachPickable","defaultColorTexture","defaultMetalRoughTexture","defaultNormalsTexture","defaultEmissiveTexture","defaultOcclusionTexture","NUM_TILES","_indexesUsed","_tiles","_dataTexture","_camera","_lastFreeIndex","_putFreeTile","_findFreeTile","TileManager","_findFreeTile2","_putFreeTile2","numMatrices","createMatricesDataTexture","useCount","rtcViewMatrix","newCenter","newRTCCenter","newId","newTile","refreshMatrices","tileIds","tileId","ua","navigator","userAgent","isSafari","_sceneModels","_viewer","_canvasTransparent","_transparentEnabled","_edgesEnabled","_imageDirty","_saoEnabled","_pbrEnabled","_rendererModels","_layerList","_layerListDirty","_stateSortDirty","_pickIDs","_saoDepthRenderBuffer","_extensionHandles","_logarithmicDepthBufferEnabled","_alphaDepthMask","_occlusionTester","_layerRenderers","_attachRendererViewObjects","_detachRendererViewObjects","_updateLayerList","_buildLayerList","_draw","_activateExtensions","_drawSAOBuffers","_drawDepth","_drawColor","_drawLayer","WebGLRenderer","_drawLayer2","_drawColor2","_drawDepth2","_drawSAOBuffers2","_activateExtensions2","_draw2","_buildLayerList2","_updateLayerList2","_detachRendererViewObjects2","_attachRendererViewObjects2","WEBGL_CONTEXT_NAMES","contextAttr","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","NICEST","colorTriangles","detachPickable","setBackgroundColor","setEdgesEnabled","setPBREnabled","setSAOEnabled","setTransparentEnabled","viewport","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","rendererId","needsRender","pickSceneObject","lenDrawableList","webGLSceneModelRenderer","OES_element_index_uint","EXT_frag_depth","WEBGL_depth_texture","enable","DEPTH_TEST","frontFace","CCW","CULL_FACE","depthMask","normalDrawSAOBin","edgesColorOpaqueBin","normalFillTransparentBin","edgesColorTransparentBin","xrayedSilhouetteOpaqueBin","xrayEdgesOpaqueBin","xrayedSilhouetteTransparentBin","xrayEdgesTransparentBin","highlightedSilhouetteOpaqueBin","highlightedEdgesOpaqueBin","highlightedSilhouetteTransparentBin","highlightedEdgesTransparentBin","selectedSilhouetteOpaqueBin","selectedEdgesOpaqueBin","selectedSilhouetteTransparentBin","selectedEdgesTransparentBin","saoPossible","normalDrawSAOBinLen","edgesColorOpaqueBinLen","normalFillTransparentBinLen","edgesColorTransparentBinLen","xrayedSilhouetteOpaqueBinLen","xrayEdgesOpaqueBinLen","xrayedSilhouetteTransparentBinLen","xrayEdgesTransparentBinLen","highlightedSilhouetteOpaqueBinLen","highlightedEdgesOpaqueBinLen","highlightedSilhouetteTransparentBinLen","highlightedEdgesTransparentBinLen","selectedSilhouetteOpaqueBinLen","selectedEdgesOpaqueBinLen","selectedSilhouetteTransparentBinLen","selectedEdgesTransparentBinLen","BLEND","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","blendFunc","disable","numTextureUnits","ii","numVertexAttribs","disableVertexAttribArray","quality","tempVec4c","_unproject","PanController","cameraControl","_unproject2","dollyToCanvasPos","optionalTargetWorldPos","targetCanvasPos","dollyDelta","dolliedThroughSurface","moveVec","lenEyeTargetVec","worldPos1","transposedProjectMat","Pt3","Pt4","_configs","_pivotWorldPos","_cameraOffset","_azimuth","_polar","_radius","_pivotPosSet","_pivoting","_shown","_pivotViewPos","_pivotProjPos","_pivotCanvasPos","_cameraDirty","_onViewMatrix","_onProjMatrix","_hideTimeout","_pivotElement","_cameraLookingDownwards","PivotController","configs","_cameraLookingDownwards2","updatePivotElement","getPivotPos","canvasAABB","canvasWidth","canvasHeight","canvasBoundingRect","getBoundingClientRect","style","scrollX","scrollY","setPivotElement","pivotElement","startPivot","lookat","pivotPos","diff","zUp","getPivoting","setPivotPos","setCanvasPivotPos","pivotShereRadius","eyeWorldPosVec","posOnSphere","continuePivot","yawInc","pitchInc","dx","dy","eyeLookLen","zAxis","showPivot","clearTimeout","visibility","hidePivot","endPivot","_cameraControl","_config","_lastPickedobjectId","_needFireEvents","PickController","schedulePickEntity","schedulePickSurface","pickCursorPos","picked","pickedSurface","oncontextmenu","preventDefault","update","pointerEnabled","hasHoverSurfaceSubs","onHoverSurface","pickResultViewPos","fireEvents","entity","pickedobjectId","onHoverOut","onHover","onHoverOff","_documentKeyDownHandler","_documentKeyUpHandler","_mouseDownHandler","_documentMouseMoveHandler","_canvasMouseMoveHandler","_documentMouseUpHandler","_mouseUpHandler","_mouseEnterHandler","_mouseWheelHandler","MousePanRotateDollyHandler","components","controllers","states","updates","mouseDownLeft","mouseDownMiddle","mouseDownRight","pickController","lastX","lastY","lastXDown","lastYDown","mouseDownPicked","pickedWorldPos","mouseMovedOnViewSinceLastWheel","keyDown","setMousedownState","pick","cursor","pointerViewPos","keyboardEnabled","keyCode","which","planView","panRightClick","xPanDelta","yPanDelta","targetDistance","eyeLookDist","panDeltaX","panDeltaY","firstPerson","rotateDeltaY","dragRotationRate","rotateDeltaX","mouseover","getViewPosFromEvent","fire","pagePos","pageX","pageY","removeProperty","minElapsed","secsNowLast","secsNow","performance","secsElapsed","deltaY","normalizedDelta","mouseWheelDollyRate","followPointerDirty","removeEventListener","totalOffsetLeft","totalOffsetTop","offsetParent","tempCameraTarget","KeyboardAxisViewHandler","axisViewRight","_isKeyDownForAction","AXIS_VIEW_RIGHT","axisViewBack","AXIS_VIEW_BACK","axisViewLeft","AXIS_VIEW_LEFT","axisViewFront","AXIS_VIEW_FRONT","axisViewTop","AXIS_VIEW_TOP","axisViewBottom","AXIS_VIEW_BOTTOM","perspectiveDist","followPointer","pivotController","_clicks","_timeout","_canvasMouseDownHandler","_canvasMouseUpHandler","MousePickHandler","leftDown","rightDown","flyCameraTo","hoverSubs","hasSubs","hoverOutSubs","hoverOffSubs","hoverSurfaceSubs","mouseDownClientX","clientX","mouseDownClientY","clientY","mouseDownCursorX","mouseDownCursorY","smartPivot","setViewPivotPos","pickedSubs","pickedNothingSubs","pickedSurfaceSubs","doublePickedSubs","doublePickedSurfaceSubs","doublePickedNothingSubs","doublePickFlyTo","onDoublePickedSurface","pickedEntityCenterPos","viewCenterPos","KeyboardPanRotateDollyHandler","keycodes","keyDownMap","mouseMovedSinceLastKeyboardDolly","on","elapsedSecs","rotateYPos","ROTATE_Y_POS","rotateYNeg","ROTATE_Y_NEG","rotateXPos","ROTATE_X_POS","rotateXNeg","ROTATE_X_NEG","orbitDelta","keyboardRotationRate","dollyBackwards","DOLLY_BACKWARDS","dollyForwards","DOLLY_FORWARDS","keyboardDollyRate","panForwards","PAN_FORWARDS","panBackwards","PAN_BACKWARDS","panLeft","PAN_LEFT","panRight","PAN_RIGHT","panUp","PAN_UP","panDown","PAN_DOWN","panDelta","keyboardPanRate","panDeltaZ","EPSILON","CameraUpdater","panController","countDown","dollyDistFactor","followPointerWorldPos","cursorType","dollyProximityThreshold","dollyMinSpeed","dollyDeltaForDist","rotationInertia","verticalEye","verticalLook","constrainVertical","xUp","yUp","panInertia","dollyToViewPos","dollyInertia","MouseMiscHandler","_mouseMoveHandler","_mouseLeaveHandler","_canvasElement$getBou","getCanvasPosFromEvent","_canvasTouchStartHandler","_canvasTouchMoveHandler","TouchPanRotateAndDollyHandler","tapStartCanvasPos","tapCanvasPos0","tapCanvasPos1","touch0Vec","lastCanvasTouchPosList","numTouches","waitForTick","touches","changedTouches","touchStartTime","pointerCanvasPos","longTouchTimeout","longTapRadius","touchPanRate","touch0","touch1","lastMiddleTouch","currentMiddleTouch","touchDelta","touchDollyRate","TouchPickHandler","_canvasTouchEndHandler","activeTouches","tapStartPos","tapStartTime","lastTapTime","rightClickClientX","rightClickClientY","rightClickPageX","rightClickPageY","onRightClick","longTapTimeout","passive","currentTime","onPickedSurface","onDoublePickedNothing","onPicked","onPickedNothing","_components","_states","_updates","_controllers","_handlers","_cameraUpdater","_reset","_destroyHandlers","_destroyControllers","CameraControl","_destroyControllers2","_destroyHandlers2","_reset2","onHoverEnter","keyboardLayout","navMode","keyMap","altDown","ctrlDown","shiftDown","action"],"mappings":"s0SAQA,IAAAA,eAAAC,EAAA,UAAaC,eAIT,WAAA,SAAAA,EAAYC,GAA8BC,OAAAC,eAAAC,KAAAN,EAAA,CAAAO,UAAA,EAAAC,WAAA,IACtCC,EAAAH,KAAIN,GAAAA,GAAWG,CACnB,CAAC,IAAAO,EAAAR,EAAAS,iBAAAD,EAcDE,UAAA,SAAUC,GACN,OAAOJ,EAAIH,KAAAN,GAAAA,GAASc,UAAUF,UAAUC,EAC5C,EAACH,EAODK,SAAA,SAASC,EAAiBC,GACtBR,EAAIH,KAAAN,GAAAA,GAASe,SAASC,EAAQC,EAClC,EAACP,EAODQ,IAAA,SAAIL,GACA,OAAOJ,EAAAH,KAAIN,GAAAA,GAASc,UAAUI,IAAIL,EACtC,EAACH,EAKDS,YAAA,SAAYN,GACRJ,EAAAH,KAAIN,GAAAA,GAASc,UAAUK,YAAYN,EACvC,EAACH,EAMDU,MAAA,SAAMP,GACFJ,EAAAH,KAAIN,GAAAA,GAASc,UAAUM,MAAMP,EACjC,EAACH,EAODW,IAAA,SAAIR,GACD,OAAOJ,EAAAH,KAAIN,GAAAA,GAASc,UAAUO,IAAIR,EACrC,EAACH,EAMDY,IAAA,SAAIT,GACA,OAAOJ,EAAIH,KAAAN,GAAAA,GAASc,UAAUQ,IAAIT,EACtC,EAACH,EAKDa,MAAA,WACId,EAAIH,KAAAN,GAAAA,GAASc,UAAUS,OAC3B,EAACC,EAAAtB,EAAA,CAAA,CAAAuB,IAAA,QAAAC,IApED,WACI,OAAOjB,EAAIH,KAAAN,GAAAA,GAAS2B,KACxB,KAACzB,CAAA,CATD,0FCXJE,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA4BC,uBAAA,EAqH5BD,EAAAC,kBA3GA,MAOIC,YAAYC,GACRzB,KAAK0B,WAAcC,GAAOF,EAAWnB,UAAUqB,GAC/C3B,KAAK4B,aAAgBD,GAAOF,EAAWZ,YAAYc,GACnD3B,KAAK6B,KAAQF,GAAOF,EAAWV,IAAIY,GACnC3B,KAAK8B,KAAQH,GAAOF,EAAWT,IAAIW,GACnC3B,KAAK+B,OAAS,IAAMN,EAAWR,QAC/BjB,KAAKgC,OAAS,IAAMP,EAAWJ,MAC/BrB,KAAKiC,sBAAwB,IAAMR,EAAWS,oBACjD,CAQGA,2BACA,OAAOlC,KAAKiC,uBACf,CAQGZ,YACA,OAAOrB,KAAKgC,QACf,CASD1B,UAAUqB,GACN,OAAO3B,KAAK0B,WAAWC,EAC1B,CASDf,IAAIe,GACA,OAAO3B,KAAKM,UAAUqB,EACzB,CAQDd,YAAYc,GACR3B,KAAK4B,aAAaD,EACrB,CAQDb,MAAMa,GACF3B,KAAKa,YAAYc,EACpB,CAQDZ,IAAIY,GACA,OAAO3B,KAAK6B,KAAKF,EACpB,CAQDX,IAAIW,GACA,OAAO3B,KAAK8B,KAAKH,EACpB,CAMDV,QACIjB,KAAK+B,QACR,uBCpHLjC,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAuBa,kBAAA,EA2CvBb,EAAAa,aArCA,MAOIX,YAAYY,EAASC,GACjBrC,KAAKoC,QAAUA,EACfpC,KAAKqC,OAASA,EAIdrC,KAAKsC,YAAa,CACrB,CAQDC,QAAQC,EAAcC,EAAO9B,GACzB,IAAKX,KAAKqC,SAAWrC,KAAKsC,WAAY,CAClCtC,KAAKsC,YAAa,EAClB,IAAIX,EAAK3B,KAAKoC,QACVI,EACAE,WAAW,KACPf,EAAGgB,MAAMF,EAAO9B,EAAK,EACtB,GAGHgB,EAAGgB,MAAMF,EAAO9B,EAEvB,CACJ,uBC1CLb,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA0BsB,qBAAA,EA6B1BtB,EAAAsB,gBArBA,MAOIpB,YAAYV,GACRd,KAAKc,MAAQA,EACbd,KAAK6C,oBAAqB,CAC7B,CAODC,kBACI9C,KAAK6C,oBAAqB,CAC7B,uBC5BL/C,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA4CyB,kCAAAzB,EAAA0B,oBAAyB,EAgBrE,MAAMA,EACFxB,cAQIxB,KAAKiD,eAAiB,IAAIC,KAC7B,CAQG7B,YACA,OAAOrB,KAAKiD,eAAeE,MAC9B,CAQGjB,2BAIA,OAHkC,MAA9BlC,KAAKiC,wBACLjC,KAAKiC,sBAAwB,IAAIc,GAE9B/C,KAAKiC,sBAAsBzB,SACrC,CASDF,UAAUqB,GAKN,OAJIA,IACA3B,KAAKiD,eAAeG,KAAKpD,KAAKqD,mBAAmB1B,GAAI,IACrD3B,KAAKsD,6BAEF,KACHtD,KAAKa,YAAYc,EAAG,CAE3B,CASDf,IAAIe,GACA,OAAO3B,KAAKM,UAAUqB,EACzB,CASDZ,IAAIY,GAKA,OAJIA,IACA3B,KAAKiD,eAAeG,KAAKpD,KAAKqD,mBAAmB1B,GAAI,IACrD3B,KAAKsD,6BAEF,KACHtD,KAAKa,YAAYc,EAAG,CAE3B,CAQDX,IAAIW,GACA,QAAKA,GAEE3B,KAAKiD,eAAeM,KAAM3C,GAAQA,EAAIwB,SAAWT,EAC3D,CAQDd,YAAYc,GACR,IAAKA,EACD,OACJ,IAAI6B,GAAU,EACd,IAAK,IAAIC,EAAI,EAAGA,EAAIzD,KAAKiD,eAAeE,OAAQM,IAC5C,GAAIzD,KAAKiD,eAAeQ,GAAGrB,SAAWT,EAAI,CACtC3B,KAAKiD,eAAeS,OAAOD,EAAG,GAC9BD,GAAU,EACV,KACH,CAEDA,GACAxD,KAAKsD,2BAEZ,CAQDxC,MAAMa,GACF3B,KAAKa,YAAYc,EACpB,CAYDgC,UAAUnB,EAAcC,EAAO9B,GAE3B,IAAK,IAAIC,IAAO,IAAIZ,KAAKiD,gBAAiB,CACtC,IAAIW,EAAK,IAAIC,EAAkBjB,gBAAgB,IAAM5C,KAAKc,MAAMF,EAAIwB,UAChE0B,EAAQZ,MAAM7C,UAAU0D,MAAMC,KAAKrD,GAMvC,GALAmD,EAAMV,KAAKQ,GACHhD,EACN2B,QAAQC,EAAcC,EAAOqB,GAE/B9D,KAAKiE,QAAQrD,IACR4B,GAAgBoB,EAAGf,mBACpB,MAAO,CAAEA,oBAAoB,EAEpC,CACD,OAAIL,EACO,KAEJ,CAAEK,oBAAoB,EAChC,CAWDQ,mBAAmBjB,EAASC,GACxB,OAAO,IAAI6B,EAAe/B,aAAaC,EAASC,EACnD,CASD4B,QAAQrD,GACJ,IAAI4C,GAAU,EACd,GAAI5C,EAAIyB,QAAUzB,EAAI0B,WAAY,CAC9B,IAAImB,EAAIzD,KAAKiD,eAAekB,QAAQvD,GAChC6C,GAAK,IACLzD,KAAKiD,eAAeS,OAAOD,EAAG,GAC9BD,GAAU,EAEjB,CACGA,GACAxD,KAAKsD,2BAEZ,CASD9C,UAII,OAHkB,MAAdR,KAAKoE,QACLpE,KAAKoE,MAAQ,IAAIC,EAAoB9C,kBAAkBvB,OAEpDA,KAAKoE,KACf,CAMDnD,QACsC,GAA9BjB,KAAKiD,eAAeE,SACpBnD,KAAKiD,eAAeS,OAAO,EAAG1D,KAAKiD,eAAeE,QAClDnD,KAAKsD,4BAEZ,CAQDA,4BACsC,MAA9BtD,KAAKiC,uBACLjC,KAAKiC,sBAAsBxB,SAAST,KAAKqB,MAEhD,EAELC,EAAA0B,eAAyBA,EAQzB,MAAMD,UAA0CC,EAQ5CvC,SAASY,GACLrB,KAAK2D,WAAU,EAAO3D,KAAMsE,UAC/B,EAELhD,EAAAyB,kCAA4CA,sBCtQ5CjD,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAwBiD,mBAAA,EAQxB,MAAMA,UAAsBC,MAOxBhD,YAAYiD,GACRC,MAAMD,EACT,EAELnD,EAAAiD,cAAwBA,sBCpBxBzE,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAwBqD,mBAAA,EAyCxBrD,EAAAqD,cAhCA,MACInD,cACIxB,KAAK4E,QAAU,EAClB,CASDxD,IAAIyD,GACA,IAAIC,EAAQ9E,KAAK4E,QAAQC,GACzB,OAAIC,IAGJA,EAAQ9E,KAAK+E,mBACb/E,KAAK4E,QAAQC,GAAQC,EACdA,EACV,CAQDE,OAAOH,UACI7E,KAAK4E,QAAQC,EACvB,uBCxCL/E,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAuB2D,kBAAA,EAoFvB3D,EAAA2D,aAvEA,MAOIzD,YAAY0D,GACRlF,KAAKkF,OAASA,CACjB,CAQDnE,IAAI8D,EAAMlD,GACN3B,KAAKkF,OAAO9D,IAAIyD,GAAM9D,IAAIY,EAC7B,CAQDX,IAAI6D,EAAMlD,GACN,OAAO3B,KAAKkF,OAAO9D,IAAIyD,GAAM7D,IAAIW,EACpC,CAQDrB,UAAUuE,EAAMlD,GACZ3B,KAAKkF,OAAO9D,IAAIyD,GAAMvE,UAAUqB,EACnC,CAQDf,IAAIiE,EAAMlD,GACN3B,KAAKM,UAAUuE,EAAMlD,EACxB,CAQDd,YAAYgE,EAAMlD,GACd3B,KAAKkF,OAAO9D,IAAIyD,GAAMhE,YAAYc,EACrC,CAQDb,MAAM+D,EAAMlD,GACR3B,KAAKa,YAAYgE,EAAMlD,EAC1B,uBCnFL7B,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA8B6D,yBAAA,EAoD9B7D,EAAA6D,oBA3CA,MAQI3D,YAAYY,EAASC,GACjBrC,KAAKoC,QAAUA,EACfpC,KAAKqC,OAASA,EAMdrC,KAAKsC,YAAa,CACrB,CAUD8C,cAAc5C,EAAcC,EAAO9B,GAC/B,IAAKX,KAAKqC,SAAWrC,KAAKsC,WAAY,CAClCtC,KAAKsC,YAAa,EAElB,IAAIX,EAAK3B,KAAKoC,QACd,GAAII,EAIA,YAHAE,WAAW,KACPf,EAAGgB,MAAMF,EAAO9B,EAAK,EACtB,GAGP,IAAI0E,EAAS1D,EAAGgB,MAAMF,EAAO9B,SACvB0E,CACT,CACJ,uBCnDLvF,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAgCgE,2BAAA,EA2EhChE,EAAAgE,sBA3DA,cAAoCC,EAAiBvC,eAYjDW,UAAUnB,EAAcC,EAAO9B,GAC3B,MAAM,IAAI6E,EAAgBjB,cAAc,mDAC3C,CAWDlB,mBAAmBjB,EAASC,GACxB,OAAO,IAAIoD,EAAsBN,oBAAoB/C,EAASC,EACjE,CAYD+C,yBAAyB5C,EAAcC,EAAO9B,GAE1C,IAAK,IAAIC,IAAO,IAAIZ,KAAKiD,gBAAiB,CACtC,IAAIW,EAAK,IAAIC,EAAkBjB,gBAAgB,IAAM5C,KAAKc,MAAMF,EAAIwB,UAChE0B,EAAQZ,MAAM7C,UAAU0D,MAAMC,KAAKrD,GACvCmD,EAAMV,KAAKQ,GACX,IAAI8B,EAAK9E,EAIT,SAHM8E,EAAGnD,QAAQC,EAAcC,EAAOqB,GAEtC9D,KAAKiE,QAAQrD,IACR4B,GAAgBoB,EAAGf,mBACpB,MAAO,CAAEA,oBAAoB,EAEpC,CACD,OAAIL,EACO,KAEJ,CAAEK,oBAAoB,EAChC,uBClEL/C,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA4CyB,kCAAAzB,EAAA2D,aAAuB3D,EAAgCgE,sBAAAhE,EAAA6D,oBAA8B7D,EAAwBiD,cAAAjD,EAAAsB,gBAA0BtB,EAAwBqD,cAAArD,EAAAC,kBAA4BD,EAAyB0B,eAAA1B,EAAAa,kBAAuB,EAEvRrC,OAAOC,eAAeuB,EAAS,iBAAkB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOmE,EAAiBvC,cAAe,IAC/HlD,OAAOC,eAAeuB,EAAS,oCAAqC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOmE,EAAiBxC,iCAAkC,IAErKjD,OAAOC,eAAeuB,EAAS,gBAAiB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOoE,EAAgBjB,aAAc,IAE5HzE,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOiD,EAAoB9C,iBAAkB,IAExIzB,OAAOC,eAAeuB,EAAS,gBAAiB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOwE,EAAgBjB,aAAc,IAE5H7E,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOyC,EAAkBjB,eAAgB,IAElI9C,OAAOC,eAAeuB,EAAS,eAAgB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOyE,EAAeZ,YAAa,IAEzHnF,OAAOC,eAAeuB,EAAS,wBAAyB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0E,EAAwBR,qBAAsB,IAEpJxF,OAAOC,eAAeuB,EAAS,sBAAuB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOqE,EAAsBN,mBAAoB,IAE9IrF,OAAOC,eAAeuB,EAAS,eAAgB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO8C,EAAe/B,YAAa,wBC5BzHrC,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA0ByE,qBAAA,EA6D1BzE,EAAAyE,gBAhDA,cAA8BC,EAAWhD,eAMrCxB,cACIkD,OACH,CAUDjE,SAASC,EAAQC,GACb,MAAM0E,EAASrF,KAAK2D,WAAU,EAAO3D,KAAMsE,WAC3C,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CASDY,cAAcvF,EAAQC,GAClBX,KAAK2D,WAAU,EAAM3D,KAAMsE,UAC9B,CASD9D,UACI,OAAOkE,MAAMlE,SAChB,uBC5DLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAoB4E,eAAA,EAqBpB5E,EAAA4E,UAdA,cAAwBF,EAAWrB,cAI/BnD,cACIkD,OACH,CAIDK,mBACI,OAAO,IAAIoB,EAAkBJ,eAChC,uBCpBLjG,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA4B8E,uBAAA,EAW5B9E,EAAA8E,kBALA,cAAgCJ,EAAWf,aACvCzD,cACIkD,MAAM,IAAI2B,EAAYH,UACzB,uBCVLpG,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA8BgF,yBAAA,EAoC9BhF,EAAAgF,oBA/BA,MACI9E,cACIxB,KAAK4E,QAAU,EAClB,CAKDxD,IAAIyD,GACA,GAAI7E,KAAK4E,QAAQC,GAEb,OAAO7E,KAAK4E,QAAQC,GAExB,MAAMC,EAAQ9E,KAAK+E,mBAEnB,OADA/E,KAAK4E,QAAQC,GAAQC,EACdA,CACV,CAKDE,OAAOH,UACI7E,KAAK4E,QAAQC,EACvB,CAIDE,mBACI,OAAO,IAAIoB,EAAkBJ,eAChC,uBC3BLjG,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAAgF,oBAA8BhF,EAAoB4E,UAAA5E,EAAA8E,kBAA4B9E,EAA0ByE,qBAAA,EAExGjG,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+E,EAAkBJ,eAAgB,IAElIjG,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOmF,EAAoBH,iBAAkB,IAExItG,OAAOC,eAAeuB,EAAS,YAAa,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOiF,EAAYH,SAAU,IAEhHpG,OAAOC,eAAeuB,EAAS,sBAAuB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOoF,EAAsBF,mBAAoB,wBCjB9IxG,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAgCmF,2BAAA,EA0DhCnF,EAAAmF,sBA9CA,cAAoCT,EAAWhD,eAM3CxB,cACIkD,OACH,CASDjE,SAASE,GACL,MAAM0E,EAASrF,KAAK2D,WAAU,EAAO3D,KAAMsE,WAC3C,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CAQDY,cAActF,GACVX,KAAK2D,WAAU,EAAM3D,KAAMsE,UAC9B,CASD9D,UACI,OAAOkE,MAAMlE,SAChB,uBCzDLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA0BoF,qBAAA,EAqB1BpF,EAAAoF,gBAdA,cAA8BV,EAAWrB,cAIrCnD,cACIkD,OACH,CAIDK,mBACI,OAAO,IAAI4B,EAAwBF,qBACtC,uBCpBL3G,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAkCsF,6BAAA,EAWlCtF,EAAAsF,wBALA,cAAsCZ,EAAWf,aAC7CzD,cACIkD,MAAM,IAAImC,EAAkBH,gBAC/B,uBCVL5G,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAoCwF,+BAAA,EAoCpCxF,EAAAwF,0BA/BA,MACItF,cACIxB,KAAK4E,QAAU,EAClB,CAKDxD,IAAIyD,GACA,GAAI7E,KAAK4E,QAAQC,GAEb,OAAO7E,KAAK4E,QAAQC,GAExB,MAAMC,EAAQ9E,KAAK+E,mBAEnB,OADA/E,KAAK4E,QAAQC,GAAQC,EACdA,CACV,CAKDE,OAAOH,UACI7E,KAAK4E,QAAQC,EACvB,CAIDE,mBACI,OAAO,IAAI4B,EAAwBF,qBACtC,uBCnCL3G,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAAwF,0BAAoCxF,EAA0BoF,gBAAApF,EAAAsF,wBAAkCtF,EAAgCmF,2BAAA,EAEhI3G,OAAOC,eAAeuB,EAAS,wBAAyB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOuF,EAAwBF,qBAAsB,IAEpJ3G,OAAOC,eAAeuB,EAAS,0BAA2B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2F,EAA0BH,uBAAwB,IAE1J9G,OAAOC,eAAeuB,EAAS,4BAA6B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4F,EAA4BF,yBAA0B,IAEhKhH,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOyF,EAAkBH,eAAgB,wBCTlI5G,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA2B2F,sBAAA,EA8C3B3F,EAAA2F,iBAnCA,cAA+BjB,EAAWhD,eAQtCvC,WACI,MAAM4E,EAASrF,KAAK2D,WAAU,EAAO3D,KAAMsE,WAC3C,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CAMDY,gBACIjG,KAAK2D,WAAU,EAAM3D,KAAMsE,UAC9B,CASD9D,UACI,OAAOkE,MAAMlE,SAChB,uBC7CLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAqB4F,gBAAA,EAgCrB5F,EAAA4F,WArBA,cAAyBlB,EAAWrB,cAMhCnD,cACIkD,OACH,CASDK,mBACI,OAAO,IAAIoC,EAAmBF,gBACjC,uBC/BLnH,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA6B8F,wBAAA,EAsB7B9F,EAAA8F,mBAVA,cAAiCpB,EAAWf,aAMxCzD,cACIkD,MAAM,IAAI2C,EAAaH,WAC1B,uBCbLpH,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAA4F,WAAqB5F,EAA6B8F,mBAAA9F,EAAA2F,sBAA2B,EAE7EnH,OAAOC,eAAeuB,EAAS,mBAAoB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+F,EAAmBF,gBAAiB,IAErInH,OAAOC,eAAeuB,EAAS,qBAAsB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOkG,EAAqBF,kBAAmB,IAE3ItH,OAAOC,eAAeuB,EAAS,aAAc,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOiG,EAAaH,UAAW,wBCfnHpH,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAiCiG,4BAAA,EAuDjCjG,EAAAiG,uBA1CA,cAAqCvB,EAAWV,sBAI5C9D,cACIkD,OACH,CAUDU,eAAe1E,EAAQC,GACnB,MAAM0E,QAAerF,KAAKwH,oBAAmB,EAAOxH,KAAMsE,WAC1D,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CASDY,cAAcvF,EAAQC,GAClBX,KAAKwH,oBAAmB,EAAMxH,KAAMsE,UACvC,CAKD9D,UACI,OAAOkE,MAAMlE,SAChB,uBCtDLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA2BmG,sBAAA,EAqB3BnG,EAAAmG,iBAdA,cAA+BzB,EAAWrB,cAItCnD,cACIkD,OACH,CAIDK,mBACI,OAAO,IAAI2C,EAAyBH,sBACvC,uBCpBLzH,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAmCqG,8BAAA,EAWnCrG,EAAAqG,yBALA,cAAuC3B,EAAWf,aAC9CzD,cACIkD,MAAM,IAAIkD,EAAmBH,iBAChC,uBCVL3H,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAqCuG,gCAAA,EAoCrCvG,EAAAuG,2BA/BA,MACIrG,cACIxB,KAAK4E,QAAU,EAClB,CAKDxD,IAAIyD,GACA,GAAI7E,KAAK4E,QAAQC,GAEb,OAAO7E,KAAK4E,QAAQC,GAExB,MAAMC,EAAQ9E,KAAK+E,mBAEnB,OADA/E,KAAK4E,QAAQC,GAAQC,EACdA,CACV,CAKDE,OAAOH,UACI7E,KAAK4E,QAAQC,EACvB,CAIDE,mBACI,OAAO,IAAI2C,EAAyBH,sBACvC,uBC3BLzH,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAAuG,2BAAqCvG,EAA2BmG,iBAAAnG,EAAAqG,yBAAmCrG,EAAiCiG,4BAAA,EAEpIzH,OAAOC,eAAeuB,EAAS,yBAA0B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOsG,EAAyBH,sBAAuB,IAEvJzH,OAAOC,eAAeuB,EAAS,2BAA4B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0G,EAA2BH,wBAAyB,IAE7J7H,OAAOC,eAAeuB,EAAS,mBAAoB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOwG,EAAmBH,gBAAiB,IAErI3H,OAAOC,eAAeuB,EAAS,6BAA8B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2G,EAA6BF,0BAA2B,wBCjBnK/H,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAkC0G,6BAAA,EAyClC1G,EAAA0G,wBAnCA,cAAsChC,EAAWV,sBAI7C9D,cACIkD,OACH,CAQDU,iBACI,MAAMC,QAAerF,KAAKwH,oBAAmB,EAAOxH,KAAMsE,WAC1D,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CAIDY,gBACIjG,KAAKwH,oBAAmB,EAAMxH,KAAMsE,UACvC,CAKD9D,UACI,OAAOkE,MAAMlE,SAChB,uBCxCLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA4B2G,uBAAA,EAqB5B3G,EAAA2G,kBAdA,cAAgCjC,EAAWrB,cAIvCnD,cACIkD,OACH,CAIDK,mBACI,OAAO,IAAImD,EAA0BF,uBACxC,uBCpBLlI,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAoC6G,+BAAA,EAWpC7G,EAAA6G,0BALA,cAAwCnC,EAAWf,aAC/CzD,cACIkD,MAAM,IAAI0D,EAAoBH,kBACjC,uBCFLnI,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAA2G,kBAA4B3G,EAAoC6G,0BAAA7G,EAAA0G,6BAAkC,EAElGlI,OAAOC,eAAeuB,EAAS,0BAA2B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO8G,EAA0BF,uBAAwB,IAE1JlI,OAAOC,eAAeuB,EAAS,4BAA6B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOiH,EAA4BF,yBAA0B,IAEhKrI,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOgH,EAAoBH,iBAAkB,wBCfxInI,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAuCgH,kCAAA,EAgDvChH,EAAAgH,6BApCA,cAA2CtC,EAAWV,sBAIlD9D,cACIkD,OACH,CAODU,eAAezE,GACX,MAAM0E,QAAerF,KAAKwH,oBAAmB,EAAOxH,KAAMsE,WAC1D,GAAc,MAAVe,EACA,MAAM,IAAIW,EAAWzB,cAAc,kCAEvC,OAAOc,CACV,CAMDY,cAActF,GACVX,KAAKwH,oBAAmB,EAAMxH,KAAMsE,UACvC,CAKD9D,UACI,OAAOkE,MAAMlE,SAChB,uBC/CLV,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAA2CiH,sCAAA,EAoC3CjH,EAAAiH,iCA/BA,MACI/G,cACIxB,KAAK4E,QAAU,EAClB,CAKDxD,IAAIyD,GACA,GAAI7E,KAAK4E,QAAQC,GAEb,OAAO7E,KAAK4E,QAAQC,GAExB,MAAMC,EAAQ9E,KAAK+E,mBAEnB,OADA/E,KAAK4E,QAAQC,GAAQC,EACdA,CACV,CAKDE,OAAOH,UACI7E,KAAK4E,QAAQC,EACvB,CAIDE,mBACI,OAAO,IAAIyD,EAA+BF,4BAC7C,uBCnCLxI,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAiCmH,4BAAA,EAqBjCnH,EAAAmH,uBAdA,cAAqCzC,EAAWrB,cAI5CnD,cACIkD,OACH,CAIDK,mBACI,OAAO,IAAIyD,EAA+BF,4BAC7C,uBCpBLxI,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAyCoH,oCAAA,EAWzCpH,EAAAoH,+BALA,cAA6C1C,EAAWf,aACpDzD,cACIkD,MAAM,IAAIiE,EAAyBF,uBACtC,wBCFL3I,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAAiH,iCAA2CjH,EAAiCmH,uBAAAnH,EAAAoH,+BAAyCpH,EAAuCgH,kCAAA,EAE5JxI,OAAOC,eAAeuB,EAAS,mCAAoC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOwH,EAAmCL,gCAAiC,IAErLzI,OAAOC,eAAeuB,EAAS,+BAAgC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOoH,EAA+BF,4BAA6B,IAEzKxI,OAAOC,eAAeuB,EAAS,iCAAkC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOyH,EAAiCH,8BAA+B,IAE/K5I,OAAOC,eAAeuB,EAAS,yBAA0B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAOuH,EAAyBF,sBAAuB,yBCTvJ3I,OAAOC,eAAcuB,EAAU,aAAc,CAAEpB,OAAO,IACtDoB,EAAAiH,iCAA2CjH,EAAiCmH,uBAAAnH,EAAAoH,+BAAyCpH,EAAuCgH,6BAAAhH,EAAA2G,kBAA4B3G,4BAAoCA,EAAkC0G,wBAAA1G,EAAAuG,2BAAqCvG,EAA2BmG,iBAAAnG,EAAAqG,yBAAmCrG,EAAiCiG,uBAAAjG,EAAA4F,WAAqB5F,EAA6B8F,mBAAA9F,EAAA2F,iBAA2B3F,4BAAoCA,EAA0BoF,gBAAApF,EAAAsF,wBAAkCtF,EAAgCmF,sBAAAnF,EAAAgF,oBAA8BhF,EAAoB4E,UAAA5E,EAAA8E,kBAA4B9E,EAA0ByE,gBAAAzE,EAAA2D,aAAuB3D,wBAAgCA,EAA8B6D,oBAAA7D,EAAAiD,cAAwBjD,EAA0BsB,gBAAAtB,EAAAqD,cAAwBrD,EAA4BC,kBAAAD,EAAA0B,eAAyB1B,EAAuBa,kBAAA,EAEl6BrC,OAAOC,eAAeuB,EAAS,eAAgB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAW7D,YAAa,IACrHrC,OAAOC,eAAeuB,EAAS,iBAAkB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWhD,cAAe,IACzHlD,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWzE,iBAAkB,IAC/HzB,OAAOC,eAAeuB,EAAS,gBAAiB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWrB,aAAc,IACvH7E,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWpD,eAAgB,IAC3H9C,OAAOC,eAAeuB,EAAS,gBAAiB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWzB,aAAc,IACvHzE,OAAOC,eAAeuB,EAAS,sBAAuB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWb,mBAAoB,IACnIrF,OAAOC,eAAeuB,EAAS,wBAAyB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWV,qBAAsB,IACvIxF,OAAOC,eAAeuB,EAAS,eAAgB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4E,EAAWf,YAAa,IAErHnF,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0H,EAAa/C,eAAgB,IAC7HjG,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0H,EAAa1C,iBAAkB,IACjItG,OAAOC,eAAeuB,EAAS,YAAa,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0H,EAAa5C,SAAU,IACjHpG,OAAOC,eAAeuB,EAAS,sBAAuB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO0H,EAAaxC,mBAAoB,IAErIxG,OAAOC,eAAeuB,EAAS,wBAAyB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2H,EAAoBtC,qBAAsB,IAChJ3G,OAAOC,eAAeuB,EAAS,0BAA2B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2H,EAAoBnC,uBAAwB,IACpJ9G,OAAOC,eAAeuB,EAAS,kBAAmB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2H,EAAoBrC,eAAgB,IACpI5G,OAAOC,eAAeuB,EAAS,4BAA6B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO2H,EAAoBjC,yBAA0B,IAExJhH,OAAOC,eAAeuB,EAAS,mBAAoB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4H,EAAc/B,gBAAiB,IAChInH,OAAOC,eAAeuB,EAAS,qBAAsB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4H,EAAc5B,kBAAmB,IACpItH,OAAOC,eAAeuB,EAAS,aAAc,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO4H,EAAc9B,UAAW,IAEpHpH,OAAOC,eAAeuB,EAAS,yBAA0B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO6H,EAAqB1B,sBAAuB,IACnJzH,OAAOC,eAAeuB,EAAS,2BAA4B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO6H,EAAqBtB,wBAAyB,IACvJ7H,OAAOC,eAAeuB,EAAS,mBAAoB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO6H,EAAqBxB,gBAAiB,IACvI3H,OAAOC,eAAeuB,EAAS,6BAA8B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO6H,EAAqBpB,0BAA2B,IAE3J/H,OAAOC,eAAeuB,EAAS,0BAA2B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO8H,EAAsBlB,uBAAwB,IACtJlI,OAAOC,eAAeuB,EAAS,4BAA6B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO8H,EAAsBf,yBAA0B,IAC1JrI,OAAOC,eAAeuB,EAAS,oBAAqB,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO8H,EAAsBjB,iBAAkB,IAE1InI,OAAOC,eAAeuB,EAAS,+BAAgC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+H,GAA4Bb,4BAA6B,IACtKxI,OAAOC,eAAeuB,EAAS,iCAAkC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+H,GAA4BT,8BAA+B,IAC1K5I,OAAOC,eAAeuB,EAAS,yBAA0B,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+H,GAA4BV,sBAAuB,IAC1J3I,OAAOC,eAAeuB,EAAS,mCAAoC,CAAEqE,YAAY,EAAMvE,IAAK,WAAc,OAAO+H,GAA4BZ,gCAAiC,MC7CxKa,GAAe,WAEjB,IADA,IAAMC,EAAa,GACV5F,EAAI,EAAGA,EAAI,IAAKA,IACrB4F,EAAI5F,IAAMA,EAAI,GAAK,IAAM,IAAOA,EAAG6F,SAAS,IAEhD,OAAY,WACR,IAAMC,EAAqB,WAAhBC,KAAKC,SAAwB,EAClCC,EAAqB,WAAhBF,KAAKC,SAAwB,EAClCE,EAAqB,WAAhBH,KAAKC,SAAwB,EAClCG,EAAqB,WAAhBJ,KAAKC,SAAwB,EACxC,OAAUJ,EAAS,IAALE,GAAaF,EAAIE,GAAM,EAAI,KAAQF,EAAIE,GAAM,GAAK,KAAQF,EAAIE,GAAM,GAAK,KAAK,IAAIF,EAAS,IAALK,GAAaL,EAAIK,GAAM,EAAI,SAASL,EAAIK,GAAM,GAAK,GAAO,IAAQL,EAAIK,GAAM,GAAK,KAASL,IAAAA,EAAS,GAALM,EAAY,KAAQN,EAAIM,GAAM,EAAI,SAASN,EAAIM,GAAM,GAAK,KAAQN,EAAIM,GAAM,GAAK,KAAQN,EAAS,IAALO,GAAaP,EAAIO,GAAM,EAAI,KAAQP,EAAIO,GAAM,GAAK,KAAQP,EAAIO,GAAM,GAAK,IAC5W,CACJ,CAZqB,GAYfC,gBAAAlK,EAAAmK,SAAAA,gBAAAnK,EAAA,mBAAAoK,gBAAApK,EAAAqK,uBAAAA,gBAAArK,SAWOsK,gBA8BT,WAAA,SAAAA,EAAYC,EAAyBC,QAAAA,IAAAA,IAAAA,EAA2C,CAAE,GAAArK,OAAAC,eAAAC,KAAAgK,GAAA,CAAA9J,MAAAkK,KAAAtK,OAAAC,eAAAgK,KAAAA,IAAA7J,MAAAmK,KAzB3EC,KAAAA,eAOAC,eAAS,EAAAvK,KAENwK,WAAK1K,EAAAA,OAAAC,eAAA8J,KAAAA,IAAA5J,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA8J,GAAA7J,CAAAA,YAAAC,WAAA,IAAAF,KAWfyK,iBAMItK,EAAAA,OAAI0J,IAAAA,IAAUK,EACdlK,KAAKsK,GAAKH,EAAIG,IAAMlB,KACpBpJ,KAAKuK,WAAY,EACjBpK,EAAIH,KAAA8J,IAAAA,IAAoB,KACxB9J,KAAKwK,OAAQ,EACbxK,KAAKyK,YAAc,IAAI7K,EAAa,IAAImG,GAAAA,iBACpCmE,GACA/J,EAAA+J,EAAKF,IAAAA,IAAMhK,KAEnB,CAAC,IAAAI,EAAA6J,EAAA5J,UA8FA4J,OA9FA7J,EAUDsK,IAAA,SAAIjG,GACAA,EAAO,SAAAtE,EAAYH,KAAI+J,IAAAA,IAAsBtF,GAC7CkG,QAAQD,IAAIjG,EAChB,EAACrE,EAUDwK,KAAA,SAAKnG,GACDA,EAAOtE,UAAAA,EAAaH,KAAI+J,IAAAA,IAAsBtF,GAC9CkG,QAAQC,KAAKnG,EACjB,EAACrE,EAUDyK,MAAA,SAAMpG,GACFA,aAAOtE,EAAcH,KAAI+J,IAAAA,IAAsBtF,GAC/CkG,QAAQE,MAAMpG,EAClB,EAACrE,EAKS0K,SAAA,WACF9K,KAAKwK,QAGTxK,KAAKwK,OAAQ,EACjB,EAACpK,EAKS2K,aAAA,WACF/K,KAAKwK,QACLxK,KAAKwK,OAAQ,EACbxK,KAAKgL,QAEb,EAAC5K,EAKS4K,MAAA,WACT,EAAA5K,EAWD6K,QAAA,WACI,IAAIjL,KAAKuK,UAAT,CAIA,GADAvK,KAAKuK,WAAY,EACjBpK,EAAIH,KAAI8J,IAAAA,IACJ,IAAK,IAAIQ,KAAEnK,EAAIH,KAAI8J,IAAAA,IACX3J,OAAI2J,IAAAA,IAAkBoB,eAAeZ,KACnBnK,EAAIH,KAAA8J,IAAAA,IAAkBQ,GAC9BW,iBACH9K,EAAAH,KAAI8J,IAAAA,IAAkBQ,IAIzCnK,EAAAH,KAAI8J,IAAAA,IAAoB,KACxB9J,KAAKwK,OAAQ,EACbxK,KAAKyK,YAAYhK,SAAST,KAAM,MAChCA,KAAKyK,YAAYxJ,OAdhB,CAeL,EAACgJ,CAAA,CAxGD,GA0HH,SAAAI,GAhBwB5F,GACjB,MAAY,KAAAzE,KAAKwB,YAAYqD,KAAS,KAAA7E,KAAKsK,GAAE,OAAO7F,CACxD,CAAC,SAAA2F,GAEIe,GAAoBC,IAAAA,EACrBpL,KAAIG,EAACH,KAAI8J,IAAAA,MACL3J,OAAI2J,IAAAA,IAAoB,CAAA,GAEvB3J,EAAAH,KAAI8J,IAAAA,IAAkBqB,EAAUb,MACjCnK,OAAI2J,IAAAA,IAAkBqB,EAAUb,IAAMa,GAE1CA,EAAUV,YAAY1J,IAAI,kBAEfZ,EAAAiL,EAAItB,IAAAA,IAAkBqB,EAAUb,GAC3C,EACJ,CC9KS,IAAAe,gBAASC,SAAAA,GAAA,SAAAD,IAAAC,OAAAA,EAAA3I,MAAA2B,KAAAA,wBAAAiH,EAAAF,EAAAC,GAAAD,CAAA,CAAAC,cAAAE,EAAQhH,oECYjBiH,GAAiB,IAejBC,GAAgB,KA4BhBC,GAAe,KAYfC,GAA4B,KAO5BC,GAA2B,KAY3BC,GAAmB,KAiEnBC,GAAa,KAmDbC,GAAuB,MAKvBC,GAAwB,MAKxBC,GAAwB,MAKxBC,GAAwB,MAMxBC,GAA0B,MAM1BC,GAA0B,MAM1BC,GAA2B,MAM3BC,GAA2B,MAM3BC,GAAkB,MAMlBC,GAAkB,MAMlBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAuB,MAMvBC,GAAwB,MAMxBC,GAAwB,MAMxBC,GAAwB,MAMxBC,GAAyB,MAMzBC,GAAyB,MAMzBC,GAAyB,MAMzBC,GAAmB,MAKnBC,GAAiB,IAKjBC,GAAe,KAoBfC,GAAkB,IAKlBC,GAAiB,MAQjBC,GAAqB,MAQrBC,GAAiB,MAQjBC,GAAmB,MAKnBC,GAAgB,IAUhBC,GAAa,IA8BbC,GAA4B,IAK5BC,GAAsB,OAKtBC,GAAwB,OAKxBC,GAAuB,gEAncD,4BAKG,iDAUI,gCAMA,+BAMD,+BAMA,+CAWA,uFAoBD,kCAUhB,eAKC,uBAKQ,aAKV,qBAKQ,eAKN,mBAKI,2BAKQ,2BAKA,wBAKH,iBAKP,eAKF,mCAWM,0BAKK,iBAKT,wBAKO,eAKT,sBAKO,cAKR,qBAKO,uBAKE,grBAuKL,kBAKC,mBAKD,mIA4CF,qCAUK,uBAKA,iBAKN,gBAKD,kBAKE,6GCvZbC,IAAsBC,OAAOC,iBAK7BC,GAAqBF,OAAOC,iBAK5BE,GAAmB,YAchB,SAAAC,GAAM1O,EAAe2O,EAAaC,GAC9C,OAAOtF,KAAKsF,IAAID,EAAKrF,KAAKqF,IAAIC,EAAK5O,GACvC,CAKgB,SAAA6O,GAAcC,GAE1B,OAAW,IAAAC,aAAaD,EAC5B,yEAnBgC,wCC1B1BE,GAA6BC,KAC7BC,GAAWC,KACXC,GAAYD,KACZE,GAAYF,KACZG,GAAYH,KACZI,GAAYJ,KACZK,GAAYP,KAKF,SAAAQ,GAAQC,EAAoBC,GACxC,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,EACjD,CAKM,SAAUC,GAAWd,GAEvB,OAAO,IAAIC,aAAaD,GAAU,EACtC,CAKgB,SAAAK,GAAWL,GAEvB,OAAO,IAAIC,aAAaD,GAAU,EACtC,CAKM,SAAUG,GAAWH,GAEvB,OAAW,IAAAC,aAAaD,GAAU,EACtC,CAgCgB,SAAAe,GAAQH,EAAoBC,EAAoBG,GAQ5D,OAPKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,CAmBgB,SAAAC,GAAcJ,EAAoBK,EAAWF,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,CAKgB,SAAAG,GAAcN,EAAoBK,EAAWF,GAOzD,OANKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,UAKgBI,GAAcP,EAAoBK,EAAWF,GAMzD,OALKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,UAKgBK,GAAQT,EAAoBC,EAAoBG,GAO5D,OANKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,CAiBgB,SAAAM,GAAQV,EAAoBC,EAAoBG,GAQ5D,OAPKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,UAYgBO,GAAQX,EAAoBC,EAAoBG,GAO5D,OANKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,CAKgB,SAAAQ,GAAQZ,EAAoBC,EAAoBG,GAM5D,OALKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,CAKgB,SAAAS,KAEZ,QAFiCC,EAAY3M,GAAAA,MAAAC,KAAAM,WACvCqM,EAAgB,IAAIC,aAAaF,EAAQ,IACtCjN,EAAI,EAAGA,EAAIiN,EAAQvN,OAAQM,IAChCkN,EAAc,IAAMD,EAAQjN,GAAG,GAC/BkN,EAAc,IAAMD,EAAQjN,GAAG,GAInC,OAFAkN,EAAc,IAAMD,EAAQvN,OAC5BwN,EAAc,IAAMD,EAAQvN,OACrBwN,CACX,CAiFgB,SAAAE,GAAcX,EAAWL,EAAoBG,GAOzD,OANKA,IACDA,EAAOH,GAEXG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GACTG,CACX,CA8CgB,SAAAc,GAAQlB,EAAoBC,GACxC,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,EAC/D,CAsBgB,SAAAkB,GAAWnB,EAAoBC,EAAoBG,GAC1DA,IACDA,EAAOJ,GAEX,IAAMoB,EAAIpB,EAAE,GACNqB,EAAIrB,EAAE,GACNsB,EAAItB,EAAE,GACNuB,EAAKtB,EAAE,GACPuB,EAAKvB,EAAE,GACPwB,EAAKxB,EAAE,GAIb,OAHAG,EAAK,GAAKiB,EAAII,EAAKH,EAAIE,EACvBpB,EAAK,GAAKkB,EAAIC,EAAKH,EAAIK,EACvBrB,EAAK,GAAKgB,EAAII,EAAKH,EAAIE,EAChBnB,CACX,CAEM,SAAUsB,GAAUzB,GACtB,OAAOiB,GAAQjB,EAAGA,EACtB,CASM,SAAU0B,GAAQ1B,GACpB,OAAOrG,KAAKgI,KAAKF,GAAUzB,GAC/B,UAMgB4B,GAAQ7B,EAAoBC,GACxC,OAAQD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,EACnC,CAGgB,SAAA6B,GAAU7B,GACtB,OAAOF,GAAQE,EAAGA,EACtB,CAGM,SAAU8B,GAAU9B,GACtB,OAAO4B,GAAQ5B,EAAGA,EACtB,CAKM,SAAU+B,GAAQ/B,GACpB,OAAOrG,KAAKgI,KAAKE,GAAU7B,GAC/B,KAGUgC,GADGC,IACHD,GAAMxC,KACJQ,SAAAA,EAAoBkC,GAAuB,OAAAH,GAAQrB,GAAQV,EAAGkC,EAAGF,IAAK,YAMlEG,GAAQnC,GACpB,OAAOrG,KAAKgI,KAAKG,GAAU9B,GAC/B,CAKgB,SAAAoC,GAASC,EAAWC,EAAYC,EAAYC,EAAqBC,EAAqBtC,GAClG,IAAM3K,EAAS2K,GAAQX,KACjBkD,GAAKL,EAAIC,IAAOC,EAAKD,GAI3B,OAHA9M,EAAO,GAAKgN,EAAG,GAAME,GAAKD,EAAG,GAAKD,EAAG,IACrChN,EAAO,GAAKgN,EAAG,GAAME,GAAKD,EAAG,GAAKD,EAAG,IACrChN,EAAO,GAAKgN,EAAG,GAAME,GAAKD,EAAG,GAAKD,EAAG,IAC9BhN,CACX,CAEa,IAAAmN,GAAa,WACtB,IAAMX,EAAM/B,KACZ,OAAQD,SAAAA,EAAoBkC,UAAuBC,GAAQxB,GAAQX,EAAGkC,EAAGF,GAAK,CAClF,CAH0B,GAqBV,SAAAY,GAAc5C,EAAoBG,GAE9C,OAAOC,GAAcJ,EADX,EAAM0B,GAAQ1B,GACGG,EAC/B,CAOgB,SAAA0C,GAAc7C,EAAoBG,GAE9C,OAAOG,GAAcN,EADX,EAAM+B,GAAQ/B,GACGG,EAC/B,CAsBO,IAAM2C,GAAgC,WAEzC,IAAMvD,EAAWC,KAEjB,OAAiBuD,SAAAA,EAAoB5C,GAoBjC,OAlBAZ,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,GAEhB5C,EAAK,GAAK4B,GAAQxC,GAElBA,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,GAEhB5C,EAAK,GAAK4B,GAAQxC,GAElBA,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,GAChBxD,EAAS,GAAKwD,EAAE,IAEhB5C,EAAK,GAAK4B,GAAQxC,GAEXY,CACX,CACJ,CA1B6C,GAwC7C,SAAS6C,GAAMhD,GACX,OAAOrG,KAAKsJ,MAAU,IAAJjD,GAAc,GACpC,CAqCM,SAAUkD,GAAW/D,GAEvB,WAAWD,GAAcC,GAAU,EACvC,CAKM,SAAUgE,GAAWhE,GAEvB,OAAOD,GAAcC,GAAU,GACnC,CAEA,IAAMiE,GAAYD,KACZE,GAAYF,KA8BF,SAAAG,GAAgBC,EAAiBC,EAAqBC,EAAeC,EAAcX,GAC/F,IAAMY,EAAO,GACPC,EAAO,GAOb,OANAD,EAAK,GAAKF,EACVG,EAAK,GAAKF,EACVE,EAAK,GAAKD,EAAK,GAAKhK,KAAKkK,IAAIN,EAAU,GACvCI,EAAK,IAAMC,EAAK,GAChBA,EAAK,GAAKA,EAAK,GAAKJ,EACpBG,EAAK,IAAMC,EAAK,GACTE,GAAaH,EAAMC,EAAMb,EACpC,UAKgBe,GAAaC,EAAuBC,EAAuBjB,GAClEA,IACDA,EAAII,MAER,IAAMc,EAAQ,CAACF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI,GACpCG,EAAQ,CAACF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI,GAC1C9D,GAAQgE,EAAOD,EAAOb,IACtB3C,GAAQyD,EAAOD,EAAOZ,IACtB,IAAMhB,EAAI,EAAM4B,EAAM,GAChBE,EAAad,GAAU,GACvBe,EAAaf,GAAU,GACvBgB,EAAahB,GAAU,GAiB7B,OAhBAN,EAAE,GAAKV,EAAI8B,EACXpB,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAKV,EAAI+B,EACXrB,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAKK,GAAU,GAAKe,EACtBpB,EAAE,GAAKK,GAAU,GAAKgB,EACtBrB,EAAE,KAAOK,GAAU,GAAKiB,EACxBtB,EAAE,KAAO,EACTA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,KAAOV,EAAI6B,EAAM,GAAKG,EACxBtB,EAAE,IAAM,EACDA,CACX,CAKgB,SAAAuB,GACZC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzE,GACKA,IACDA,EAAOgD,MAEX,IAAM0B,EAAML,EAAQD,EACdO,EAAMJ,EAAMD,EACZ3S,EAAM8S,EAAMD,EAiBlB,OAhBAxE,EAAK,GAAK,EAAM0E,EAChB1E,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EAAM2E,EAChB3E,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,KAAO,EAAMrO,EAClBqO,EAAK,IAAM,EACXA,EAAK,MAAQoE,EAAOC,GAASK,EAC7B1E,EAAK,MAAQuE,EAAMD,GAAUK,EAC7B3E,EAAK,MAAQyE,EAAMD,GAAQ7S,EAC3BqO,EAAK,IAAM,EACJA,CACX,CAKgB,SAAA4E,GACZR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzE,GACKA,IACDA,EAAOgD,MAEX,IAAM0B,EAAML,EAAQD,EACdO,EAAMJ,EAAMD,EACZ3S,EAAM8S,EAAMD,EAiBlB,OAhBAxE,EAAK,GAAa,EAAPwE,EAAYE,EACvB1E,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAa,EAAPwE,EAAYG,EACvB3E,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,IAAMqE,EAAQD,GAAQM,EAC3B1E,EAAK,IAAMuE,EAAMD,GAAUK,EAC3B3E,EAAK,MAAQyE,EAAMD,GAAQ7S,EAC3BqO,EAAK,KAAO,EACZA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,KAAQyE,EAAMD,EAAO,EAAK7S,EAC/BqO,EAAK,IAAM,EACJA,CACX,CAMM,SAAU6E,GAAa7E,GAoBzB,OAnBKA,IACDA,EAAOgD,MAEXhD,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,IAAM,EACJA,CACX,CAKM,SAAU8E,GAAa9E,GAazB,OAZKA,IACDA,EAAOgD,MAEXhD,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACHA,CACX,CAkBgB,SAAA+E,GAAcC,EAAkBC,EAAuBrC,GAC9DA,IACDA,EAAII,MAER,IAOIkC,EACAC,EACAC,EACAC,EACAC,EACAC,EAZEC,EAAK/C,GAAc,CAACwC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI,GAAM,IACrD/E,EAAI1G,KAAKiM,IAAIT,GACbU,EAAIlM,KAAKmM,IAAIX,GACbY,EAAI,EAAMF,EACV1E,EAAIwE,EAAG,GACPvE,EAAIuE,EAAG,GACPtE,EAAIsE,EAAG,GA6Bb,OAtBAN,EAAKlE,EAAIC,EACTkE,EAAKlE,EAAIC,EACTkE,EAAKlE,EAAIF,EACTqE,EAAKrE,EAAId,EACToF,EAAKrE,EAAIf,EACTqF,EAAKrE,EAAIhB,EACT0C,EAAE,GAAMgD,EAAI5E,EAAIA,EAAK0E,EACrB9C,EAAE,GAAMgD,EAAIV,EAAMK,EAClB3C,EAAE,GAAMgD,EAAIR,EAAME,EAClB1C,EAAE,GAAK,EACPA,EAAE,GAAMgD,EAAIV,EAAMK,EAClB3C,EAAE,GAAMgD,EAAI3E,EAAIA,EAAKyE,EACrB9C,EAAE,GAAMgD,EAAIT,EAAME,EAClBzC,EAAE,GAAK,EACPA,EAAE,GAAMgD,EAAIR,EAAME,EAClB1C,EAAE,GAAMgD,EAAIT,EAAME,EAClBzC,EAAE,IAAOgD,EAAI1E,EAAIA,EAAKwE,EACtB9C,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACDA,CACX,UAKgBiD,GAAYC,EAAsBC,EAAyBC,EAAqBhG,GACvFA,IACDA,EAAOgD,MAEX,IAYIiD,EACAC,EACA7E,EACA8E,EACAC,EACAjF,EACAkF,EACAC,EACAlF,EACAmF,EArBEC,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAOZ,EAAI,GACXa,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTa,EAAMb,EAAG,GACTc,EAAUf,EAAO,GACjBgB,EAAUhB,EAAO,GACjBiB,EAAUjB,EAAO,GACvB,OAAIS,IAASM,GAAWL,IAASM,GAAWL,IAASM,EAC1CnC,MAaXoB,EAAKO,EAAOM,EACZZ,EAAKO,EAAOM,EACZ1F,EAAKqF,EAAOM,EAOZb,EAAKS,GAFLvF,GAHAkF,EAAM,EAAI/M,KAAKgI,KAAKyE,EAAKA,EAAKC,EAAKA,EAAK7E,EAAKA,IAK7BwF,GAHhBX,GAAMK,GAINH,EAAKS,GALLZ,GAAMM,GAKUI,EAAMtF,EACtBF,EAAKwF,EAAMT,EAAKU,EAAMX,GACtBM,EAAM/M,KAAKgI,KAAK2E,EAAKA,EAAKC,EAAKA,EAAKjF,EAAKA,KAOrCgF,GADAI,EAAM,EAAIA,EAEVH,GAAMG,EACNpF,GAAMoF,IAPNJ,EAAK,EACLC,EAAK,EACLjF,EAAK,GAQTkF,EAAKH,EAAK/E,EAAKE,EAAK+E,EACpBE,EAAKjF,EAAK8E,EAAKF,EAAK9E,EACpBC,EAAK6E,EAAKG,EAAKF,EAAKC,GACpBI,EAAM/M,KAAKgI,KAAK6E,EAAKA,EAAKC,EAAKA,EAAKlF,EAAKA,KAOrCiF,GADAE,EAAM,EAAIA,EAEVD,GAAMC,EACNnF,GAAMmF,IAPNF,EAAK,EACLC,EAAK,EACLlF,EAAK,GAOTpB,EAAK,GAAKmG,EACVnG,EAAK,GAAKqG,EACVrG,EAAK,GAAKiG,EACVjG,EAAK,GAAK,EACVA,EAAK,GAAKoG,EACVpG,EAAK,GAAKsG,EACVtG,EAAK,GAAKkG,EACVlG,EAAK,GAAK,EACVA,EAAK,GAAKmB,EACVnB,EAAK,GAAKoB,EACVpB,EAAK,IAAMqB,EACXrB,EAAK,IAAM,EACXA,EAAK,MAAQmG,EAAKK,EAAOJ,EAAKK,EAAOtF,EAAKuF,GAC1C1G,EAAK,MAAQqG,EAAKG,EAAOF,EAAKG,EAAOrF,EAAKsF,GAC1C1G,EAAK,MAAQiG,EAAKO,EAAON,EAAKO,EAAOpF,EAAKqF,GAC1C1G,EAAK,IAAM,EACJA,EACX,CAKgB,SAAAiH,GAAYC,EAAsBlH,GACzCA,IACDA,EAAOkH,GAEX,IAAMC,EAAMD,EAAI,GACVE,EAAMF,EAAI,GACVG,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVK,EAAML,EAAI,GACVM,EAAMN,EAAI,GACVO,EAAMP,EAAI,GACVQ,EAAMR,EAAI,GACVS,EAAMT,EAAI,GACVU,EAAMV,EAAI,GACVW,EAAMX,EAAI,IACVY,EAAMZ,EAAI,IACVa,EAAMb,EAAI,IACVc,EAAMd,EAAI,IACVe,EAAMf,EAAI,IACVgB,EAAMhB,EAAI,IACViB,EAAMhB,EAAMK,EAAMJ,EAAMG,EACxBa,EAAMjB,EAAMM,EAAMJ,EAAME,EACxBc,EAAMlB,EAAMO,EAAMJ,EAAMC,EACxBe,EAAMlB,EAAMK,EAAMJ,EAAMG,EACxBe,EAAMnB,EAAMM,EAAMJ,EAAME,EACxBgB,EAAMnB,EAAMK,EAAMJ,EAAMG,EACxBgB,EAAMd,EAAMK,EAAMJ,EAAMG,EACxBW,EAAMf,EAAMM,EAAMJ,EAAME,EACxBY,EAAMhB,EAAMO,EAAMJ,EAAMC,EACxBa,EAAMhB,EAAMK,EAAMJ,EAAMG,EACxBa,EAAMjB,EAAMM,EAAMJ,EAAME,EACxBc,EAAMjB,EAAMK,EAAMJ,EAAMG,EACxBc,EAAS,GAAKZ,EAAMW,EAAMV,EAAMS,EAAMR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAiBtF,OAhBAzI,EAAK,IAAMwH,EAAMsB,EAAMrB,EAAMoB,EAAMnB,EAAMkB,GAAOG,EAChD/I,EAAK,KAAOoH,EAAM0B,EAAMzB,EAAMwB,EAAMvB,EAAMsB,GAAOG,EACjD/I,EAAK,IAAMgI,EAAMQ,EAAMP,EAAMM,EAAML,EAAMI,GAAOS,EAChD/I,EAAK,KAAO4H,EAAMY,EAAMX,EAAMU,EAAMT,EAAMQ,GAAOS,EACjD/I,EAAK,KAAOuH,EAAMuB,EAAMrB,EAAMkB,EAAMjB,EAAMgB,GAAOK,EACjD/I,EAAK,IAAMmH,EAAM2B,EAAMzB,EAAMsB,EAAMrB,EAAMoB,GAAOK,EAChD/I,EAAK,KAAO+H,EAAMS,EAAMP,EAAMI,EAAMH,EAAME,GAAOW,EACjD/I,EAAK,IAAM2H,EAAMa,EAAMX,EAAMQ,EAAMP,EAAMM,GAAOW,EAChD/I,EAAK,IAAMuH,EAAMsB,EAAMrB,EAAMmB,EAAMjB,EAAMe,GAAOM,EAChD/I,EAAK,KAAOmH,EAAM0B,EAAMzB,EAAMuB,EAAMrB,EAAMmB,GAAOM,EACjD/I,EAAK,KAAO+H,EAAMQ,EAAMP,EAAMK,EAAMH,EAAMC,GAAOY,EACjD/I,EAAK,MAAQ2H,EAAMY,EAAMX,EAAMS,EAAMP,EAAMK,GAAOY,EAClD/I,EAAK,MAAQuH,EAAMqB,EAAMpB,EAAMkB,EAAMjB,EAAMgB,GAAOM,EAClD/I,EAAK,KAAOmH,EAAMyB,EAAMxB,EAAMsB,EAAMrB,EAAMoB,GAAOM,EACjD/I,EAAK,MAAQ+H,EAAMO,EAAMN,EAAMI,EAAMH,EAAME,GAAOY,EAClD/I,EAAK,KAAO2H,EAAMW,EAAMV,EAAMQ,EAAMP,EAAMM,GAAOY,EAC1C/I,CACX,CAKgB,SAAAgJ,GAAc9B,EAAsBlH,GAChD,IAAMiJ,EAAK/B,EAAI,GACTgC,EAAMhC,EAAI,IACViC,EAAKjC,EAAI,GACTkC,EAAMlC,EAAI,IACVmC,EAAMnC,EAAI,IACVoC,EAAKpC,EAAI,GACf,IAAKlH,GAAQkH,IAAQlH,EAAM,CACvB,IAAMoH,EAAMF,EAAI,GACVG,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVO,EAAMP,EAAI,GACVQ,EAAMR,EAAI,GACVY,EAAMZ,EAAI,IAahB,OAZAA,EAAI,GAAK+B,EACT/B,EAAI,GAAKiC,EACTjC,EAAI,GAAKmC,EACTnC,EAAI,GAAKE,EACTF,EAAI,GAAKoC,EACTpC,EAAI,GAAKkC,EACTlC,EAAI,GAAKG,EACTH,EAAI,GAAKO,EACTP,EAAI,IAAMgC,EACVhC,EAAI,IAAMI,EACVJ,EAAI,IAAMQ,EACVR,EAAI,IAAMY,EACHZ,CACV,CAiBD,OAhBAlH,EAAK,GAAKkH,EAAI,GACdlH,EAAK,GAAKiJ,EACVjJ,EAAK,GAAKmJ,EACVnJ,EAAK,GAAKqJ,EACVrJ,EAAK,GAAKkH,EAAI,GACdlH,EAAK,GAAKkH,EAAI,GACdlH,EAAK,GAAKsJ,EACVtJ,EAAK,GAAKoJ,EACVpJ,EAAK,GAAKkH,EAAI,GACdlH,EAAK,GAAKkH,EAAI,GACdlH,EAAK,IAAMkH,EAAI,IACflH,EAAK,IAAMkJ,EACXlJ,EAAK,IAAMkH,EAAI,GACflH,EAAK,IAAMkH,EAAI,GACflH,EAAK,IAAMkH,EAAI,IACflH,EAAK,IAAMkH,EAAI,IACRlH,CACX,UAKgBuJ,GAAU3G,EAAoB/C,EAAoBG,GACzDA,IACDA,EAAO4C,GAEX,IAAM4G,EAAK3J,EAAE,GACP4J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GAKb,OAJAG,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,GAAK8G,EAAK9G,EAAE,IAAM+G,EACtD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,GAAK8G,EAAK9G,EAAE,IAAM+G,EACtD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,IAAM8G,EAAK9G,EAAE,IAAM+G,EACvD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,IAAM8G,EAAK9G,EAAE,IAAM+G,EAChD3J,CACX,CAOgB,SAAA4J,GAAQC,EAAoBC,EAAoB9J,GACvDA,IACDA,EAAO6J,GAEX,IAAM1C,EAAM0C,EAAE,GACRzC,EAAMyC,EAAE,GACRxC,EAAMwC,EAAE,GACRvC,EAAMuC,EAAE,GACRtC,EAAMsC,EAAE,GACRrC,EAAMqC,EAAE,GACRpC,EAAMoC,EAAE,GACRnC,EAAMmC,EAAE,GACRlC,EAAMkC,EAAE,GACRjC,EAAMiC,EAAE,GACRhC,EAAMgC,EAAE,IACR/B,EAAM+B,EAAE,IACR9B,EAAM8B,EAAE,IACR7B,EAAM6B,EAAE,IACR5B,EAAM4B,EAAE,IACR3B,EAAM2B,EAAE,IACR1B,EAAM2B,EAAE,GACR1B,EAAM0B,EAAE,GACRzB,EAAMyB,EAAE,GACRxB,EAAMwB,EAAE,GACRjB,EAAMiB,EAAE,GACRhB,EAAMgB,EAAE,GACRC,EAAMD,EAAE,GACRE,EAAMF,EAAE,GACRG,EAAMH,EAAE,GACRI,EAAMJ,EAAE,GACRK,EAAML,EAAE,IACRM,EAAMN,EAAE,IACRO,EAAMP,EAAE,IACRQ,EAAMR,EAAE,IACRS,EAAMT,EAAE,IACRU,EAAMV,EAAE,IAiBd,OAhBA9J,EAAK,GAAKmI,EAAMhB,EAAMiB,EAAMb,EAAMc,EAAMV,EAAMW,EAAMP,EACpD/H,EAAK,GAAKmI,EAAMf,EAAMgB,EAAMZ,EAAMa,EAAMT,EAAMU,EAAMN,EACpDhI,EAAK,GAAKmI,EAAMd,EAAMe,EAAMX,EAAMY,EAAMR,EAAMS,EAAML,EACpDjI,EAAK,GAAKmI,EAAMb,EAAMc,EAAMV,EAAMW,EAAMP,EAAMQ,EAAMJ,EACpDlI,EAAK,GAAK6I,EAAM1B,EAAM2B,EAAMvB,EAAMwC,EAAMpC,EAAMqC,EAAMjC,EACpD/H,EAAK,GAAK6I,EAAMzB,EAAM0B,EAAMtB,EAAMuC,EAAMnC,EAAMoC,EAAMhC,EACpDhI,EAAK,GAAK6I,EAAMxB,EAAMyB,EAAMrB,EAAMsC,EAAMlC,EAAMmC,EAAM/B,EACpDjI,EAAK,GAAK6I,EAAMvB,EAAMwB,EAAMpB,EAAMqC,EAAMjC,EAAMkC,EAAM9B,EACpDlI,EAAK,GAAKiK,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EAAMyC,EAAMrC,EACpD/H,EAAK,GAAKiK,EAAM7C,EAAM8C,EAAM1C,EAAM2C,EAAMvC,EAAMwC,EAAMpC,EACpDhI,EAAK,IAAMiK,EAAM5C,EAAM6C,EAAMzC,EAAM0C,EAAMtC,EAAMuC,EAAMnC,EACrDjI,EAAK,IAAMiK,EAAM3C,EAAM4C,EAAMxC,EAAMyC,EAAMrC,EAAMsC,EAAMlC,EACrDlI,EAAK,IAAMqK,EAAMlD,EAAMmD,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EACrD/H,EAAK,IAAMqK,EAAMjD,EAAMkD,EAAM9C,EAAM+C,EAAM3C,EAAM4C,EAAMxC,EACrDhI,EAAK,IAAMqK,EAAMhD,EAAMiD,EAAM7C,EAAM8C,EAAM1C,EAAM2C,EAAMvC,EACrDjI,EAAK,IAAMqK,EAAM/C,EAAMgD,EAAM5C,EAAM6C,EAAMzC,EAAM0C,EAAMtC,EAC9ClI,CACX,CAKM,SAAUyK,GAAQZ,EAAoBC,EAAoB9J,QAAAA,IAAAA,IAAAA,EAAwBjB,GAAc,IAElG,IAAMyI,EAAMqC,EAAE,GACRpC,EAAMoC,EAAE,GACRnC,EAAMmC,EAAE,GACRjC,EAAMiC,EAAE,GACRhC,EAAMgC,EAAE,GACR/B,EAAM+B,EAAE,GACR7B,EAAM6B,EAAE,GACR5B,EAAM4B,EAAE,GACR3B,EAAM2B,EAAE,GACRf,EAAMgB,EAAE,GACRC,EAAMD,EAAE,GACRE,EAAMF,EAAE,GACRI,EAAMJ,EAAE,GACRK,EAAML,EAAE,GACRM,EAAMN,EAAE,GACRQ,EAAMR,EAAE,GACRS,EAAMT,EAAE,GACRU,EAAMV,EAAE,GAcd,OAZA9J,EAAK,GAAKwH,EAAMsB,EAAMrB,EAAMyC,EAAMxC,EAAM4C,EACxCtK,EAAK,GAAKwH,EAAMuC,EAAMtC,EAAM0C,EAAMzC,EAAM6C,EACxCvK,EAAK,GAAKwH,EAAMwC,EAAMvC,EAAM2C,EAAM1C,EAAM8C,EAExCxK,EAAK,GAAK4H,EAAMkB,EAAMjB,EAAMqC,EAAMpC,EAAMwC,EACxCtK,EAAK,GAAK4H,EAAMmC,EAAMlC,EAAMsC,EAAMrC,EAAMyC,EACxCvK,EAAK,GAAK4H,EAAMoC,EAAMnC,EAAMuC,EAAMtC,EAAM0C,EAExCxK,EAAK,GAAKgI,EAAMc,EAAMb,EAAMiC,EAAMhC,EAAMoC,EACxCtK,EAAK,GAAKgI,EAAM+B,EAAM9B,EAAMkC,EAAMjC,EAAMqC,EACxCvK,EAAK,GAAKgI,EAAMgC,EAAM/B,EAAMmC,EAAMlC,EAAMsC,EAEjCxK,CACX,UAOgB0K,GAAgB9H,EAAoB+H,EAAoB3K,GAC/DA,IACDA,EAAO2K,GAEX,IAAM3J,EAAI2J,EAAE,GACN1J,EAAI0J,EAAE,GACNzJ,EAAIyJ,EAAE,GAIZ,OAHA3K,EAAK,GAAM4C,EAAE,GAAK5B,EAAM4B,EAAE,GAAK3B,EAAM2B,EAAE,GAAK1B,EAAK0B,EAAE,IACnD5C,EAAK,GAAM4C,EAAE,GAAK5B,EAAM4B,EAAE,GAAK3B,EAAM2B,EAAE,GAAK1B,EAAK0B,EAAE,IACnD5C,EAAK,GAAM4C,EAAE,GAAK5B,EAAM4B,EAAE,GAAK3B,EAAM2B,EAAE,IAAM1B,EAAK0B,EAAE,IAC7C5C,CACX,CAOgB,SAAA4K,GAAgBhI,EAAoB/C,EAAoBG,GAKpE,OAJAA,EAAK,GAAK4C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GAC9DG,EAAK,GAAK4C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GAC9DG,EAAK,GAAK4C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GAC/DG,EAAK,GAAK4C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,GAAK/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GAAK+C,EAAE,IAAM/C,EAAE,GACxDG,CACX,CA8DgB,SAAA6K,GAAoBjI,EAAoB+H,EAAoBrI,GAIxE,IAAI7O,EAHC6O,IACDA,EAAKqI,GAGT,IAEI3J,EACAC,EACAC,EAJEqF,EAAMoE,EAAExX,OAMR2X,EAAKlI,EAAE,GACPmI,EAAKnI,EAAE,GACPoI,EAAKpI,EAAE,GACPqI,EAAKrI,EAAE,GACPqG,EAAKrG,EAAE,GACPsI,EAAKtI,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPuG,EAAKvG,EAAE,GACP0G,EAAK1G,EAAE,GACPyI,EAAMzI,EAAE,IACR0I,EAAM1I,EAAE,IACRyG,EAAMzG,EAAE,IACRwG,EAAMxG,EAAE,IACRsG,EAAMtG,EAAE,IACR2I,EAAM3I,EAAE,IAEd,IAAKnP,EAAI,EAAGA,EAAI8S,EAAK9S,GAAK,EAMtB6O,EAAG7O,EAAI,GAAMqX,GAJb9J,EAAI2J,EAAElX,EAAI,IAIcwV,GAHxBhI,EAAI0J,EAAElX,EAAI,IAGyB0V,GAFnCjI,EAAIyJ,EAAElX,EAAI,IAEmC4V,EAC7C/G,EAAG7O,EAAI,GAAMsX,EAAK/J,EAAMkK,EAAKjK,EAAMqI,EAAKpI,EAAKkI,EAC7C9G,EAAG7O,EAAI,GAAMuX,EAAKhK,EAAMmK,EAAKlK,EAAMoK,EAAMnK,EAAKgI,EAC9C5G,EAAG7O,EAAI,GAAMwX,EAAKjK,EAAMoK,EAAKnK,EAAMqK,EAAMpK,EAAKqK,EAGlD,OAAOjJ,CACX,UA6CgBkJ,GAAc5I,EAAoB/C,EAAoBG,GAClE,IAAMwJ,EAAK3J,EAAE,GACP4J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GAKb,OAJAG,EAAOA,GAAQX,MACV,GAAMuD,EAAE,GAAK4G,EAAO5G,EAAE,GAAK6G,EAAO7G,EAAE,GAAK8G,EAC9C1J,EAAK,GAAM4C,EAAE,GAAK4G,EAAO5G,EAAE,GAAK6G,EAAO7G,EAAE,GAAK8G,EAC9C1J,EAAK,GAAM4C,EAAE,GAAK4G,EAAO5G,EAAE,GAAK6G,EAAO7G,EAAE,IAAM8G,EACxC1J,CACX,UAOgByL,GAAc7I,EAAoB/C,EAAoBG,GAClE,IAAMwJ,EAAK3J,EAAE,GACP4J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GAMb,OALAG,EAAOA,GAAQb,MACV,GAAKyD,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,GAAK8G,EAAK9G,EAAE,IAAM+G,EACtD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,GAAK8G,EAAK9G,EAAE,IAAM+G,EACtD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,IAAM8G,EAAK9G,EAAE,IAAM+G,EACvD3J,EAAK,GAAK4C,EAAE,GAAK4G,EAAK5G,EAAE,GAAK6G,EAAK7G,EAAE,IAAM8G,EAAK9G,EAAE,IAAM+G,EAChD3J,CACX,CAMgB,SAAA0L,GAAWC,EAAsB/I,QAAA,IAAAA,IAAAA,EAAqBiC,MAClE,IAAM7D,EAAI2K,EAAI,GACR1K,EAAI0K,EAAI,GACRzK,EAAIyK,EAAI,GAad,OAZA/I,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,IAAM1B,EACR0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,IAAM1B,EACR0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,KAAO1B,EACT0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,KAAO1B,EACF0B,CACX,UAIgBgJ,GAAa/L,EAAoB+C,GAI7C,gBAJ6CA,IAAAA,EAAqBiC,MAClEjC,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,IAAM/C,EAAE,GACH+C,CACX,CAKgB,SAAAiJ,GAAahM,EAAoB+C,GAG7C,gBAH6CA,IAAAA,EAAqBkC,MAClElC,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACF+C,CACX,CAKa,IACH+I,GADGG,IACHH,GAAuB5M,GAAc,GACnCiC,SAAAA,EAAWC,EAAWC,EAAWlB,GAIrC,OAHA2L,GAAI,GAAK3K,EACT2K,GAAI,GAAK1K,EACT0K,GAAI,GAAKzK,EACF0K,GAAaD,GAAK3L,EAC7B,GA6CE,SAAU+L,GACZC,EACAC,EACAC,EACAhF,GAIA,YAJAA,IAAAA,IAAAA,EAAuBlE,MACvBmJ,GAAmBF,EAAY/E,GAC/BwE,GAAWQ,EAAOhF,GAClBkF,GAAeJ,EAAU9E,GAClBA,CACX,KAKamF,GAAiB,WAC1B,IAAMxK,EAAMxC,KACNiN,EAAStJ,KACf,OAAgB,SAAUkE,EAAsB8E,EAA2BC,EAA6BC,GACpGrK,EAAI,GAAKqF,EAAI,GACbrF,EAAI,GAAKqF,EAAI,GACbrF,EAAI,GAAKqF,EAAI,GACb,IAAIqF,EAAK3K,GAAQC,GACjBA,EAAI,GAAKqF,EAAI,GACbrF,EAAI,GAAKqF,EAAI,GACbrF,EAAI,GAAKqF,EAAI,GACb,IAAMsF,EAAK5K,GAAQC,GACnBA,EAAI,GAAKqF,EAAI,GACbrF,EAAI,GAAKqF,EAAI,GACbrF,EAAI,IAAMqF,EAAI,IACd,IAAMuF,EAAK7K,GAAQC,GACP6K,GAAgBxF,GAClB,IACNqF,GAAMA,GAEVP,EAAS,GAAK9E,EAAI,IAClB8E,EAAS,GAAK9E,EAAI,IAClB8E,EAAS,GAAK9E,EAAI,IAGlBoF,EAAOK,IAAIzF,GACX,IAAM0F,EAAQ,EAAIL,EACZM,EAAQ,EAAIL,EACZM,EAAQ,EAAIL,EAClBH,EAAO,IAAMM,EACbN,EAAO,IAAMM,EACbN,EAAO,IAAMM,EACbN,EAAO,IAAMO,EACbP,EAAO,IAAMO,EACbP,EAAO,IAAMO,EACbP,EAAO,IAAMQ,EACbR,EAAO,IAAMQ,EACbR,EAAO,KAAOQ,EACdC,GAAWT,EAAQL,GACnBC,EAAM,GAAKK,EACXL,EAAM,GAAKM,EACXN,EAAM,GAAKO,CAEf,CACJ,CA5C8B,YAiDdL,GAAeT,EAAsB/I,GACjD,YADiDA,IAAAA,IAAAA,EAAqBiC,MAC/DmI,GAAerB,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI/I,EAClD,CAKM,SAAUoK,GAAehM,EAAWC,EAAWC,EAAW0B,QAAAA,IAAAA,IAAAA,EAAqBiC,MACjF,IAAMoG,EAAKrI,EAAE,GACbA,EAAE,IAAMqI,EAAKjK,EACb4B,EAAE,IAAMqI,EAAKhK,EACb2B,EAAE,IAAMqI,EAAK/J,EACb,IAAMkK,EAAKxI,EAAE,GACbA,EAAE,IAAMwI,EAAKpK,EACb4B,EAAE,IAAMwI,EAAKnK,EACb2B,EAAE,IAAMwI,EAAKlK,EACb,IAAMoK,EAAM1I,EAAE,IACdA,EAAE,IAAM0I,EAAMtK,EACd4B,EAAE,IAAM0I,EAAMrK,EACd2B,EAAE,KAAO0I,EAAMpK,EACf,IAAMqK,EAAM3I,EAAE,IAId,OAHAA,EAAE,KAAO2I,EAAMvK,EACf4B,EAAE,KAAO2I,EAAMtK,EACf2B,EAAE,KAAO2I,EAAMrK,EACR0B,CACX,UAMgBqK,GAAmBrK,EAAoBsK,EAA8BlN,GAsBjF,OApBAA,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GAEZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GAEZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,GAAK4C,EAAE,GACZ5C,EAAK,IAAM4C,EAAE,IACb5C,EAAK,IAAM4C,EAAE,IAEb5C,EAAK,IAAMkN,EAAY,GACvBlN,EAAK,IAAMkN,EAAY,GACvBlN,EAAK,IAAMkN,EAAY,GACvBlN,EAAK,IAAM4C,EAAE,IAEN5C,CACX,CAKgB,SAAAmN,GAAiBtN,EAAoBG,GACjD,IAAM4C,EAAI5C,GAAQ6E,KAIlB,OAHAjC,EAAE,IAAM/C,EAAE,GACV+C,EAAE,IAAM/C,EAAE,GACV+C,EAAE,IAAM/C,EAAE,GACH+C,CACX,UAKgBwK,GAAiBvN,EAAoBG,GACjD,IAAM4C,EAAI5C,GAAQ8E,KAGlB,OAFAlC,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACF+C,CACX,KAKayK,GAAqB,WAC9B,IAAM1B,EAAM5M,GAAc,GAC1B,OAAO,SAACiC,EAAWC,EAAWC,EAAWlB,GAIrC,OAHA2L,EAAI,GAAK3K,EACT2K,EAAI,GAAK1K,EACT0K,EAAI,GAAKzK,EACFiM,GAAiBxB,EAAK3L,EACjC,CACJ,CARkC,GAqBlB,SAAA0M,GAAgBxF,GAC5B,IAAMC,EAAMD,EAAI,GACVE,EAAMF,EAAI,GACVG,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVK,EAAML,EAAI,GACVM,EAAMN,EAAI,GACVO,EAAMP,EAAI,GACVQ,EAAMR,EAAI,GACVS,EAAMT,EAAI,GACVU,EAAMV,EAAI,GACVW,EAAMX,EAAI,IACVY,EAAMZ,EAAI,IACVa,EAAMb,EAAI,IACVc,EAAMd,EAAI,IACVe,EAAMf,EAAI,IACVgB,EAAMhB,EAAI,IAChB,OAAOa,EAAMH,EAAMH,EAAMH,EAAMK,EAAMK,EAAMP,EAAMH,EAAMS,EAAMP,EAAMK,EAAMP,EAAMC,EAAMS,EAAMH,EAAMP,EAC7FK,EAAMH,EAAMS,EAAMX,EAAMC,EAAMK,EAAMK,EAAMX,EAAMS,EAAMH,EAAMP,EAAMK,EAAMC,EAAMK,EAAMX,EAAMK,EAC1FK,EAAMX,EAAMS,EAAMH,EAAMP,EAAMa,EAAMH,EAAMH,EAAMC,EAAMP,EAAMa,EAAMP,EAAMP,EAAMS,EAAMK,EAAMP,EAC1FK,EAAMP,EAAMH,EAAMS,EAAMP,EAAMS,EAAMX,EAAMS,EAAMC,EAAMX,EAAMK,EAAMK,EAAMX,EAAMa,EAAMP,EAAMK,EAC1FP,EAAMH,EAAMa,EAAMH,EAAMX,EAAMK,EAAMS,EAAMH,EAAMH,EAAMH,EAAMH,EAAMa,EAAMX,EAAMK,EAAMP,EAAMa,EAC1FP,EAAMP,EAAMK,EAAMS,EAAMf,EAAMS,EAAMH,EAAMS,EAAMX,EAAMH,EAAMS,EAAMK,EAAMf,EAAMK,EAAMK,EAAMK,CAClG,CAUgB,SAAAoF,GAAYpG,EAAsBqG,EAAevN,QAAAA,IAAAA,IAAAA,EAAwBX,MAErF,IAAMiM,EAAMpE,EAAI,GACVmC,EAAMnC,EAAI,GACVkC,EAAMlC,EAAI,GACVsG,EAAMtG,EAAI,GACVuG,EAAMvG,EAAI,GACVwG,EAAMxG,EAAI,GACVyG,EAAMzG,EAAI,GACV0G,EAAM1G,EAAI,GACV2G,EAAM3G,EAAI,IAwDhB,MAvDc,QAAVqG,GACAvN,EAAK,GAAKxG,KAAKsU,KAAKlP,GAAMwK,GAAM,EAAG,IAC/B5P,KAAKuU,IAAI3E,GAAO,QAChBpJ,EAAK,GAAKxG,KAAKwU,OAAON,EAAKG,GAC3B7N,EAAK,GAAKxG,KAAKwU,OAAO3E,EAAKiC,KAE3BtL,EAAK,GAAKxG,KAAKwU,MAAMJ,EAAKH,GAC1BzN,EAAK,GAAK,IAEG,QAAVuN,GACPvN,EAAK,GAAKxG,KAAKsU,MAAMlP,GAAM8O,GAAM,EAAG,IAChClU,KAAKuU,IAAIL,GAAO,QAChB1N,EAAK,GAAKxG,KAAKwU,MAAM5E,EAAKyE,GAC1B7N,EAAK,GAAKxG,KAAKwU,MAAMR,EAAKC,KAE1BzN,EAAK,GAAKxG,KAAKwU,OAAOL,EAAKrC,GAC3BtL,EAAK,GAAK,IAEG,QAAVuN,GACPvN,EAAK,GAAKxG,KAAKsU,KAAKlP,GAAMgP,GAAM,EAAG,IAC/BpU,KAAKuU,IAAIH,GAAO,QAChB5N,EAAK,GAAKxG,KAAKwU,OAAOL,EAAKE,GAC3B7N,EAAK,GAAKxG,KAAKwU,OAAO3E,EAAKoE,KAE3BzN,EAAK,GAAK,EACVA,EAAK,GAAKxG,KAAKwU,MAAMR,EAAKlC,KAEb,QAAViC,GACPvN,EAAK,GAAKxG,KAAKsU,MAAMlP,GAAM+O,GAAM,EAAG,IAChCnU,KAAKuU,IAAIJ,GAAO,QAChB3N,EAAK,GAAKxG,KAAKwU,MAAMJ,EAAKC,GAC1B7N,EAAK,GAAKxG,KAAKwU,MAAMR,EAAKlC,KAE1BtL,EAAK,GAAK,EACVA,EAAK,GAAKxG,KAAKwU,OAAO3E,EAAKoE,KAEd,QAAVF,GACPvN,EAAK,GAAKxG,KAAKsU,KAAKlP,GAAM4O,GAAM,EAAG,IAC/BhU,KAAKuU,IAAIP,GAAO,QAChBxN,EAAK,GAAKxG,KAAKwU,OAAON,EAAKD,GAC3BzN,EAAK,GAAKxG,KAAKwU,OAAOL,EAAKrC,KAE3BtL,EAAK,GAAK,EACVA,EAAK,GAAKxG,KAAKwU,MAAM5E,EAAKyE,KAEb,QAAVN,IACPvN,EAAK,GAAKxG,KAAKsU,MAAMlP,GAAMyK,GAAM,EAAG,IAChC7P,KAAKuU,IAAI1E,GAAO,QAChBrJ,EAAK,GAAKxG,KAAKwU,MAAMJ,EAAKH,GAC1BzN,EAAK,GAAKxG,KAAKwU,MAAM5E,EAAKkC,KAE1BtL,EAAK,GAAKxG,KAAKwU,OAAON,EAAKG,GAC3B7N,EAAK,GAAK,IAGXA,CACX,CAKgB,SAAAiO,GAAS/L,EAAWC,EAAYC,EAAY2I,EAAqBC,EAAqBhL,GAClG,IAAM3K,EAAS2K,GAAQgD,KACjBT,GAAKL,EAAIC,IAAOC,EAAKD,GAiB3B,OAhBA9M,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,GAAK0V,EAAG,GAAMxI,GAAKyI,EAAG,GAAKD,EAAG,IACrC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACxC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACxC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACxC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACxC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACxC1V,EAAO,IAAM0V,EAAG,IAAOxI,GAAKyI,EAAG,IAAMD,EAAG,KACjC1V,CACX,CAQgB,SAAA6Y,GACZlO,GAMA,YANA,IAAAA,IAAAA,EAAwBb,MAExBa,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAK,EACHA,CACX,CAUM,SAAUmO,GACZC,EACAb,EACAvN,QAAwB,IAAxBA,IAAAA,EAAwBb,MAIxB,IAAM0K,EAAKuE,EAAM,GAAKzP,GAAY,EAC5BmL,EAAKsE,EAAM,GAAKzP,GAAY,EAC5B+G,EAAK0I,EAAM,GAAKzP,GAAY,EAE5B0P,EAAK7U,KAAKmM,IAAIkE,GACdyE,EAAK9U,KAAKmM,IAAImE,GACdyE,EAAK/U,KAAKmM,IAAID,GACd8I,EAAKhV,KAAKiM,IAAIoE,GACd4E,EAAKjV,KAAKiM,IAAIqE,GACd4E,EAAKlV,KAAKiM,IAAIC,GAkCpB,MAhCc,QAAV6H,GACAvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClB,QAAVnB,GACPvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClB,QAAVnB,GACPvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClB,QAAVnB,GACPvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClB,QAAVnB,GACPvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClB,QAAVnB,IACPvN,EAAK,GAAKwO,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnC1O,EAAK,GAAKqO,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnC1O,EAAK,GAAKqO,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCvO,EAAK,GAAKqO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAGhC1O,CACX,UAOgB+M,GACZnK,EACA5C,QAAA,IAAAA,IAAAA,EAAwBb,MAMxB,IASIe,EATEoL,EAAM1I,EAAE,GACRyG,EAAMzG,EAAE,GACRwG,EAAMxG,EAAE,GACR4K,EAAM5K,EAAE,GACR6K,EAAM7K,EAAE,GACR8K,EAAM9K,EAAE,GACR+K,EAAM/K,EAAE,GACRgL,EAAMhL,EAAE,GACRiL,EAAMjL,EAAE,IAGR+L,EAAQrD,EAAMmC,EAAMI,EAgC1B,OA9BIc,EAAQ,GACRzO,EAAI,GAAM1G,KAAKgI,KAAKmN,EAAQ,GAE5B3O,EAAK,GAAK,IAAOE,EACjBF,EAAK,IAAM4N,EAAMF,GAAOxN,EACxBF,EAAK,IAAMoJ,EAAMuE,GAAOzN,EACxBF,EAAK,IAAMwN,EAAMnE,GAAOnJ,GACjBoL,EAAMmC,GAAOnC,EAAMuC,GAC1B3N,EAAI,EAAM1G,KAAKgI,KAAK,EAAM8J,EAAMmC,EAAMI,GAEtC7N,EAAK,IAAM4N,EAAMF,GAAOxN,EACxBF,EAAK,GAAK,IAAOE,EACjBF,EAAK,IAAMqJ,EAAMmE,GAAOtN,EACxBF,EAAK,IAAMoJ,EAAMuE,GAAOzN,GACjBuN,EAAMI,GACb3N,EAAI,EAAM1G,KAAKgI,KAAK,EAAMiM,EAAMnC,EAAMuC,GAEtC7N,EAAK,IAAMoJ,EAAMuE,GAAOzN,EACxBF,EAAK,IAAMqJ,EAAMmE,GAAOtN,EACxBF,EAAK,GAAK,IAAOE,EACjBF,EAAK,IAAM0N,EAAME,GAAO1N,IAExBA,EAAI,EAAM1G,KAAKgI,KAAK,EAAMqM,EAAMvC,EAAMmC,GAEtCzN,EAAK,IAAMwN,EAAMnE,GAAOnJ,EACxBF,EAAK,IAAMoJ,EAAMuE,GAAOzN,EACxBF,EAAK,IAAM0N,EAAME,GAAO1N,EACxBF,EAAK,GAAK,IAAOE,GAGdF,CACX,CA+LgB,SAAAmM,GACZvG,EACAhD,GAEA,IAAM5B,EAAI4E,EAAE,GACN3E,EAAI2E,EAAE,GACN1E,EAAI0E,EAAE,GACN7D,EAAI6D,EAAE,GAENzE,EAAKH,EAAIA,EACTI,EAAKH,EAAIA,EACTI,EAAKH,EAAIA,EACT0N,EAAK5N,EAAIG,EACT+D,EAAKlE,EAAII,EACTyN,EAAK7N,EAAIK,EACTyN,EAAK7N,EAAIG,EACT+D,EAAKlE,EAAII,EACT0N,EAAK7N,EAAIG,EACT2N,EAAKjN,EAAIZ,EACT8N,EAAKlN,EAAIX,EACT8N,EAAKnN,EAAIV,EAyBf,OAvBAuB,EAAE,GAAK,GAAKkM,EAAKC,GACjBnM,EAAE,GAAKsC,EAAKgK,EACZtM,EAAE,GAAKiM,EAAKI,EAEZrM,EAAE,GAAKsC,EAAKgK,EACZtM,EAAE,GAAK,GAAKgM,EAAKG,GACjBnM,EAAE,GAAKuC,EAAK6J,EAEZpM,EAAE,GAAKiM,EAAKI,EACZrM,EAAE,GAAKuC,EAAK6J,EACZpM,EAAE,IAAM,GAAKgM,EAAKE,GAGlBlM,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EAGRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EAEDA,CACX,UAQgBuM,GACZvJ,EACA5F,QAAAA,IAAAA,IAAAA,EAAwB4F,GAExB,IAAMW,EAAMhF,GAAQ,CAACqE,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAKzC,OAJA5F,EAAK,GAAK4F,EAAE,GAAKW,EACjBvG,EAAK,GAAK4F,EAAE,GAAKW,EACjBvG,EAAK,GAAK4F,EAAE,GAAKW,EACjBvG,EAAK,GAAK4F,EAAE,GAAKW,EACVvG,CACX,UAQgBoP,GACZxJ,EACA5F,GAMA,gBANAA,IAAAA,EAAwB4F,GAExB5F,EAAK,IAAM4F,EAAE,GACb5F,EAAK,IAAM4F,EAAE,GACb5F,EAAK,IAAM4F,EAAE,GACb5F,EAAK,GAAK4F,EAAE,GACL5F,CACX,wFA1kEgB,SAAWH,EAAoBG,GAO3C,OANKA,IACDA,EAAOH,GAEXG,EAAK,IAAMH,EAAE,GACbG,EAAK,IAAMH,EAAE,GACbG,EAAK,IAAMH,EAAE,GACNG,CACX,aAKgB,SAAWH,EAAoBG,GAQ3C,OAPKA,IACDA,EAAOH,GAEXG,EAAK,IAAMH,EAAE,GACbG,EAAK,IAAMH,EAAE,GACbG,EAAK,IAAMH,EAAE,GACbG,EAAK,IAAMH,EAAE,GACNG,CACX,2BAmBgB,SAAcH,EAAoBK,EAAWF,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,uFAwD8BH,EAAoBK,EAAWF,GAOzD,OANKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,yBAmBgB,SAAYyJ,EAAqBC,GAC7C,OAAQD,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,EAC/D,oEA4C8B7J,EAAoBK,EAAWF,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,gBAWgB,SAAcH,EAAoBK,EAAWF,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GACTG,CACX,mBAKwBJ,EAAoBC,EAAoBG,GAQ5D,OAPKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,mBAMwBJ,EAAoBC,EAAoBG,GAO5D,OANKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,mBAKwBJ,EAAoBC,EAAoBG,GAQ5D,OAPKA,IACDA,EAAOJ,GAEXI,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACnBG,EAAK,GAAKJ,EAAE,GAAKC,EAAE,GACZG,CACX,iCAkBgB,SAAcH,EAAoBK,EAAWF,GAOzD,OANKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,yBAK8BH,EAAoBK,EAAWF,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACjBF,EAAK,GAAKH,EAAE,GAAKK,EACVF,CACX,yBAK8BE,EAAWL,EAAoBG,GAQzD,OAPKA,IACDA,EAAOH,GAEXG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GAChBG,EAAK,GAAKE,EAAIL,EAAE,GACTG,CACX,wBAYgB,SAAWJ,EAAoBC,GAC3C,IAAMwP,EAAKzP,EAAE,GACP0P,EAAK1P,EAAE,GACP2P,EAAK3P,EAAE,GACP4J,EAAK3J,EAAE,GACP4J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACb,MAAO,CACHyP,EAAK5F,EAAK6F,EAAK9F,EACf8F,EAAK/F,EAAK6F,EAAK3F,EACf2F,EAAK5F,EAAK6F,EAAK9F,EACf,EACR,+IAkGgB,SAAQ3J,EAAoBG,GACxC,OAAOa,GAAc,EAAKhB,EAAGG,EACjC,kDAwBgB,SAAcH,EAAoBG,GAE9C,OAAOI,GAAcP,EADX,EAAMmC,GAAQnC,GACGG,EAC/B,YAKgB,SAAUH,EAAoBkC,GAC1C,IAAIyN,EAAQ7P,GAAQE,EAAGkC,GAAMvI,KAAKgI,KAAKE,GAAU7B,GAAK6B,GAAUK,IAEhE,OADAyN,EAAQA,GAAS,GAAK,EAAKA,EAAQ,EAAI,EAAIA,EACpChW,KAAKiW,KAAKD,EACrB,kCAqCM,SAAqB3P,GAEvB,IAAK,IAAIpM,EAAI,EAAG8S,GADhB1G,EAAI3M,MAAM7C,UAAU0D,MAAMC,KAAK6L,IACP1M,OAAQM,EAAI8S,EAAK9S,IACrCoM,EAAEpM,GAAKoP,GAAMhD,EAAEpM,IAEnB,OAAOoM,CACX,0BAU+BgK,EAAoBC,EAAoBpE,EAAoBgK,QAA0B,IAA1BA,IAAAA,EAA0BrQ,MACjH,IAAMsQ,EAAM7F,EAAE,GAAKD,EAAE,GACf+F,EAAM9F,EAAE,GAAKD,EAAE,GACfgG,EAAM/F,EAAE,GAAKD,EAAE,GAEfiG,EAAMpK,EAAE,GAAKmE,EAAE,GACfkG,EAAMrK,EAAE,GAAKmE,EAAE,GACfmG,EAAMtK,EAAE,GAAKmE,EAAE,GAEfoG,EAAML,EAAMI,EAAMH,EAAME,EACxBG,EAAML,EAAMC,EAAMH,EAAMK,EACxBG,EAAMR,EAAMI,EAAMH,EAAME,EAExBM,EAAM5W,KAAKgI,KAAKyO,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,GAWpD,OAVY,IAARC,GACAV,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,IAEZA,EAAO,GAAKO,EAAMG,EAClBV,EAAO,GAAKQ,EAAME,EAClBV,EAAO,GAAKS,EAAMC,GAGfV,CACX,0CA4BgB,SAAY3E,EAAqBC,GAC7C,OAAOD,EAAG,KAAOC,EAAG,IAChBD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,KAAOC,EAAG,IACbD,EAAG,MAAQC,EAAG,KACdD,EAAG,MAAQC,EAAG,KACdD,EAAG,MAAQC,EAAG,KACdD,EAAG,MAAQC,EAAG,KACdD,EAAG,MAAQC,EAAG,KACdD,EAAG,MAAQC,EAAG,GACtB,iHA4KgB,SAAepI,GAC3B,OAAa,IAATA,EAAE,IAAuB,IAATA,EAAE,IAAuB,IAATA,EAAE,IAAuB,IAATA,EAAE,IACzC,IAATA,EAAE,IAAuB,IAATA,EAAE,IAAuB,IAATA,EAAE,IAAuB,IAATA,EAAE,IACzC,IAATA,EAAE,IAAuB,IAATA,EAAE,IAAwB,IAAVA,EAAE,KAAyB,IAAVA,EAAE,KACzC,IAAVA,EAAE,KAAyB,IAAVA,EAAE,KAAyB,IAAVA,EAAE,KAAyB,IAAVA,EAAE,GAI7D,qKAyYiCA,EAAoByN,EAAoBC,GA6BrE,IA5BA,IAEIC,EACAlO,EACAC,EACAkO,EAqBAC,EA1BEpb,EAASib,GAAW,GACpB/J,EAAM8J,EAAOld,OAOb2X,EAAKlI,EAAE,GAEPmI,EAAKnI,EAAE,GACPoI,EAAKpI,EAAE,GACPqI,EAAKrI,EAAE,GACPqG,EAAKrG,EAAE,GACPsI,EAAKtI,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPuG,EAAKvG,EAAE,GACP0G,EAAK1G,EAAE,GACPyI,EAAMzI,EAAE,IACR0I,EAAM1I,EAAE,IACRyG,EAAMzG,EAAE,IACRwG,EAAMxG,EAAE,IACRsG,EAAMtG,EAAE,IACR2I,EAAM3I,EAAE,IAILnP,EAAI,EAAGA,EAAI8S,IAAO9S,EAKvB8c,GAFAC,EAAKH,EAAO5c,IAEJ,GACR4O,EAAKmO,EAAG,GACRlO,EAAKkO,EAAG,IAERC,EAAIpb,EAAO5B,KAAO4B,EAAO5B,GAAK,CAAC,EAAG,EAAG,KAEnC,GAAMqX,EAAKyF,EAAOtH,EAAK5G,EAAO8G,EAAK7G,EAAM+G,EAC3CoH,EAAE,GAAM1F,EAAKwF,EAAOrF,EAAK7I,EAAOiH,EAAKhH,EAAM8G,EAC3CqH,EAAE,GAAMzF,EAAKuF,EAAOpF,EAAK9I,EAAOgJ,EAAM/I,EAAM4G,EAC5CuH,EAAE,GAAMxF,EAAKsF,EAAOnF,EAAK/I,EAAOiJ,EAAMhJ,EAAMiJ,EAKhD,OAFAlW,EAAOlC,OAASoT,EAETlR,CACX,sDAmDoCuN,EAAoB+H,EAAoBrI,GAIxE,IAAI7O,EAHC6O,IACDA,EAAKqI,GAGT,IACI3J,EACAC,EACAC,EAHEqF,EAAMoE,EAAExX,OAIR2X,EAAKlI,EAAE,GACPmI,EAAKnI,EAAE,GACPoI,EAAKpI,EAAE,GACPqI,EAAKrI,EAAE,GACPqG,EAAKrG,EAAE,GACPsI,EAAKtI,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPuG,EAAKvG,EAAE,GACP0G,EAAK1G,EAAE,GACPyI,EAAMzI,EAAE,IACR0I,EAAM1I,EAAE,IACRyG,EAAMzG,EAAE,IACRwG,EAAMxG,EAAE,IACRsG,EAAMtG,EAAE,IACR2I,EAAM3I,EAAE,IACd,IAAKnP,EAAI,EAAGA,EAAI8S,EAAK9S,GAAK,EAItB6O,EAAG7O,EAAI,GAAMqX,GAHb9J,EAAI2J,EAAElX,EAAI,IAGcwV,GAFxBhI,EAAI0J,EAAElX,EAAI,IAEyB0V,GADnCjI,EAAIyJ,EAAElX,EAAI,IACmC4V,EAC7C/G,EAAG7O,EAAI,GAAMsX,EAAK/J,EAAMkK,EAAKjK,EAAMqI,EAAKpI,EAAKkI,EAC7C9G,EAAG7O,EAAI,GAAMuX,EAAKhK,EAAMmK,EAAKlK,EAAMoK,EAAMnK,EAAKgI,EAC9C5G,EAAG7O,EAAI,GAAMwX,EAAKjK,EAAMoK,EAAKnK,EAAMqK,EAAMpK,EAAKqK,EAElD,OAAOjJ,CACX,6GAgGgB,SAAWtB,EAAWC,EAAWC,EAAW0B,GAiBxD,OAfAA,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,IAAM1B,EAER0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,IAAM1B,EAER0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,KAAO1B,EAET0B,EAAE,IAAM5B,EACR4B,EAAE,IAAM3B,EACR2B,EAAE,KAAO1B,EACF0B,CACX,eAKgB,SAAa1C,GACzB,OAAO4L,GAAa5L,EAAGA,EAAGA,EAC9B,yKAqKgB,SAAiBA,EAAWF,GACxC,OAAOqN,GAAiBnN,EAAGA,EAAGA,EAAGF,EACrC,4GAmRM,SACFJ,EACAC,EACAG,QAAwB,IAAxBA,IAAAA,EAAwBb,MAExB,IAAMuR,EAAgBlX,KAAKgI,KAAK7B,GAAQC,EAAGA,GAAKD,GAAQE,EAAGA,IACvD8Q,EAAYD,EAAgB/Q,GAAQC,EAAGC,GAyB3C,OAvBI8Q,EAAY,KAAaD,GAKzBC,EAAY,EAERnX,KAAKuU,IAAInO,EAAE,IAAMpG,KAAKuU,IAAInO,EAAE,KAC5BI,EAAK,IAAMJ,EAAE,GACbI,EAAK,GAAKJ,EAAE,GACZI,EAAK,GAAK,IAEVA,EAAK,GAAK,EACVA,EAAK,IAAMJ,EAAE,GACbI,EAAK,GAAKJ,EAAE,KAIhBmB,GAAWnB,EAAGC,EAAGG,GAGrBA,EAAK,GAAK2Q,EAEHxB,GAAcnP,EACzB,iCAQI4Q,EACA5Q,QAAA,IAAAA,IAAAA,EAAwBb,MAExB,IAAM0R,EAAYD,EAAU,GAAK,EAC3BE,EAAOtX,KAAKiM,IAAIoL,GAKtB,OAJA7Q,EAAK,GAAK8Q,EAAOF,EAAU,GAC3B5Q,EAAK,GAAK8Q,EAAOF,EAAU,GAC3B5Q,EAAK,GAAK8Q,EAAOF,EAAU,GAC3B5Q,EAAK,GAAKxG,KAAKmM,IAAIkL,GACZ7Q,CACX,cAQM,SACF4F,EACA2H,EACAvN,GAIA,YAJwB,IAAxBA,IAAAA,EAAwBX,MAExB8M,GAAmBvG,EAAG3C,IACtBqK,GAAYrK,GAAWsK,EAAOvN,GACvBA,CACX,oBASI2K,EACA/E,EACA5F,QAAwB,IAAxBA,IAAAA,EAAwBb,MAExB,IAAMoR,EAAK5F,EAAE,GACPtI,EAAKsI,EAAE,GACPrI,EAAKqI,EAAE,GACPoG,EAAKpG,EAAE,GACPqG,EAAKpL,EAAE,GACPqL,EAAKrL,EAAE,GACPsL,EAAKtL,EAAE,GACPuL,EAAKvL,EAAE,GAKb,OAJA5F,EAAK,GAAK+Q,EAAKC,EAAKT,EAAKY,EAAK9O,EAAK6O,EAAK5O,EAAK2O,EAC7CjR,EAAK,GAAK+Q,EAAKE,EAAK5O,EAAK8O,EAAK7O,EAAK0O,EAAKT,EAAKW,EAC7ClR,EAAK,GAAK+Q,EAAKG,EAAK5O,EAAK6O,EAAKZ,EAAKU,EAAK5O,EAAK2O,EAC7ChR,EAAK,GAAK+Q,EAAKI,EAAKZ,EAAKS,EAAK3O,EAAK4O,EAAK3O,EAAK4O,EACtClR,CACX,gBAQM,SACF4F,EACA/D,EACA7B,QAAAA,IAAAA,IAAAA,EAAwBX,MAExB,IAAM2B,EAAIa,EAAI,GACRZ,EAAIY,EAAI,GACRX,EAAIW,EAAI,GAERuP,EAAKxL,EAAE,GACPyL,EAAKzL,EAAE,GACP0L,EAAK1L,EAAE,GACP2L,EAAK3L,EAAE,GAIP4L,EAAKD,EAAKvQ,EAAIqQ,EAAKnQ,EAAIoQ,EAAKrQ,EAC5BwQ,EAAKF,EAAKtQ,EAAIqQ,EAAKtQ,EAAIoQ,EAAKlQ,EAC5BwQ,EAAKH,EAAKrQ,EAAIkQ,EAAKnQ,EAAIoQ,EAAKrQ,EAC5B2Q,GAAMP,EAAKpQ,EAAIqQ,EAAKpQ,EAAIqQ,EAAKpQ,EAQnC,OAJAlB,EAAK,GAAKwR,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAChDrR,EAAK,GAAKyR,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAChDtR,EAAK,GAAK0R,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EAEzCpR,CACX,aAOgB,SACZ4F,EACA5F,GAEAA,EAAO6E,GAAa7E,GAEpB,IAAMgR,EAAKpL,EAAE,GACPqL,EAAKrL,EAAE,GACPsL,EAAKtL,EAAE,GACPuL,EAAKvL,EAAE,GAEPgM,EAAK,EAAMZ,EACXa,EAAK,EAAMZ,EACXa,EAAK,EAAMZ,EAEXa,EAAMH,EAAKT,EACXa,EAAMH,EAAKV,EACXc,EAAMH,EAAKX,EAEXe,EAAMN,EAAKZ,EACXmB,EAAMN,EAAKb,EACXoB,EAAMN,EAAKd,EAEXqB,EAAMR,EAAKZ,EACXqB,EAAMR,EAAKb,EACXsB,EAAMT,EAAKZ,EAejB,OAbAlR,EAAK,GAAK,GAAOqS,EAAME,GACvBvS,EAAK,GAAKmS,EAAMF,EAChBjS,EAAK,GAAKoS,EAAMJ,EAEhBhS,EAAK,GAAKmS,EAAMF,EAChBjS,EAAK,GAAK,GAAOkS,EAAMK,GACvBvS,EAAK,GAAKsS,EAAMP,EAEhB/R,EAAK,GAAKoS,EAAMJ,EAChBhS,EAAK,GAAKsS,EAAMP,EAEhB/R,EAAK,IAAM,GAAOkS,EAAMG,GAEjBrS,CACX,sEAgGgB,SAAY4F,EAAoB5F,GAC5C,OAAOmP,GAAcC,GAAcxJ,EAAG5F,GAC1C,2BASI4F,EACAgL,QAAAA,IAAAA,IAAAA,EAA6BzR,MAG7B,IAAMgS,GADNvL,EAAIuJ,GAAcvJ,EAAG1G,KACR,GACPsT,EAAQ,EAAIhZ,KAAKiW,KAAK0B,GACtBjR,EAAI1G,KAAKgI,KAAK,EAAI2P,EAAKA,GAY7B,OAXIjR,EAAI,MAEJ0Q,EAAU,GAAKhL,EAAE,GACjBgL,EAAU,GAAKhL,EAAE,GACjBgL,EAAU,GAAKhL,EAAE,KAEjBgL,EAAU,GAAKhL,EAAE,GAAK1F,EACtB0Q,EAAU,GAAKhL,EAAE,GAAK1F,EACtB0Q,EAAU,GAAKhL,EAAE,GAAK1F,GAE1B0Q,EAAU,GAAK4B,EACR5B,CACX,uBAMgB,SAAqB6B,EAAyBC,EAAsB7I,EAAoBC,EAAoBpE,EAAoBiN,GAC5IA,EAAQA,GAAStT,KACjB,IACMuT,EAAQrS,GAAQuJ,EAAGD,EAAGzK,IACtByT,EAAQtS,GAAQmF,EAAGmE,EAAGvK,IACtBwT,EAAO/R,GAAW2R,EAAKG,EAAOtT,IAC9BwT,EAAMpT,GAAQiT,EAAOE,GAC3B,GAAIC,EALY,KAMZ,OAAO,KAEX,IAAMC,EAAOzS,GAAQkS,EAAQ5I,EAAGrK,IAC1BI,EAAID,GAAQqT,EAAMF,GACxB,GAAIlT,EAAI,GAAKA,EAAImT,EACb,YAEJ,IAAME,EAAOlS,GAAWiS,EAAMJ,EAAOnT,IAC/BI,EAAIF,GAAQ+S,EAAKO,GACvB,GAAIpT,EAAI,GAAKD,EAAIC,EAAIkT,EACjB,OAAO,KAEX,IAAM7Q,EAAIvC,GAAQkT,EAAOI,GAAQF,EAIjC,OAHAJ,EAAM,GAAKF,EAAO,GAAKvQ,EAAIwQ,EAAI,GAC/BC,EAAM,GAAKF,EAAO,GAAKvQ,EAAIwQ,EAAI,GAC/BC,EAAM,GAAKF,EAAO,GAAKvQ,EAAIwQ,EAAI,GACxBC,CACX,eAUM,SAAuBrG,EAAyB4G,EAA4BC,EAAyBC,EAAgCC,GACvInU,GAAU,GAAKgU,EAAU,GACzBhU,GAAU,GAAKgU,EAAU,GACzBhU,GAAU,GAAKgU,EAAU,GACzBhU,GAAU,GAAK,EACfuM,GAAca,EAAQpN,GAAWQ,IACjC0T,EAAc,GAAK1T,GAAU,GAC7B0T,EAAc,GAAK1T,GAAU,GAC7B0T,EAAc,GAAK1T,GAAU,GAC7BR,GAAU,GAAKiU,EAAO,GACtBjU,GAAU,GAAKiU,EAAO,GACtBjU,GAAU,GAAKiU,EAAO,GACtB3H,GAAcc,EAAQpN,GAAWQ,IACjCgD,GAAchD,IACd2T,EAAW,GAAK3T,GAAU,GAC1B2T,EAAW,GAAK3T,GAAU,GAC1B2T,EAAW,GAAK3T,GAAU,EAC9B,gECpvEM4T,gBAIF,WAAA,SAAAA,EAAYC,EAAWC,GAAW1jB,OAAAC,eAAAC,KAAAyjB,GAAAxjB,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAA2jB,KAAAA,GAAAzjB,CAAAA,UAAAC,EAAAA,eAC9BC,EAAAH,KAAIyjB,IAAAA,IAAUF,GAAS,GACvBpjB,EAAIH,KAAA0jB,IAAAA,KAAkBF,GAAU,GAAK,CACzC,CAAC,IAAApjB,EAAAkjB,EAAAjjB,UAmCAijB,OAnCAljB,EAQDujB,QAAA,WACI,IAAIC,EACJ,GAAyB,IAArBtf,UAAUnB,OAAc,CACxB,IAAMmH,EAAKhG,UAAU,GAErB,GADAsf,EAAOtf,UAAU,GACbnE,EAAIH,KAAAyjB,IAAAA,IAAQnZ,GACZ,KAAM,cAAgBA,EAAK,IAG/B,OADAnK,EAAAH,KAAIyjB,IAAAA,IAAQnZ,GAAMsZ,EACXtZ,CAEV,CAEG,IADAsZ,EAAOtf,UAAU,IAAM,CAAA,IACV,CACT,IAAMuf,EAAS1jB,EAAIH,KAAA0jB,IAAAA,MACnB,IAAKvjB,OAAIsjB,IAAAA,IAAQI,GAEb,OADA1jB,EAAIH,KAAAyjB,IAAAA,IAAQI,GAAUD,EACfC,CAEd,CAET,EAACzjB,EAED0jB,WAAA,SAAWxZ,GACP,IAAMsZ,EAAOzjB,EAAAH,KAAIyjB,IAAAA,IAAQnZ,GAEzB,cADOnK,EAAIH,KAAAyjB,IAAAA,IAAQnZ,GACZsZ,CACX,EAACN,CAAA,CAtCD,GCLSS,gBAOT,WAAA,SAAAA,IAAA/jB,KANQgkB,WAAK,EAAAhkB,KACLikB,iBAAW,EAAAjkB,KACXkkB,WAAK,EAAAlkB,KACLmkB,YACAC,EAAAA,KAAAA,aAIJ,EAAApkB,KAAKgkB,MAAQ,GACbhkB,KAAKikB,YAAc,EACnBjkB,KAAKkkB,MAAQ,GACblkB,KAAKmkB,OAAS,EACdnkB,KAAKokB,QAAU,CACnB,CAAC,IAAAhkB,EAAA2jB,EAAA1jB,iBAAAD,EAMDikB,MAAA,WACI,GAAIrkB,KAAKmkB,QAAUnkB,KAAKikB,YAAa,CACjC,IAAM/R,EAAIlS,KAAKgkB,MAMf,GALA9R,EAAE/O,OAAS,EACXnD,KAAKgkB,MAAQhkB,KAAKkkB,MAClBlkB,KAAKkkB,MAAQhS,EACblS,KAAKmkB,OAAS,EACdnkB,KAAKikB,YAAcjkB,KAAKgkB,MAAM7gB,QACzBnD,KAAKikB,YACN,MAEP,CACD,IAAM/jB,EAAQF,KAAKgkB,MAAMhkB,KAAKmkB,QAQ9B,OAPInkB,KAAKmkB,OAAS,SACHnkB,KAACgkB,MAAMhkB,KAAKmkB,UAGvBnkB,KAAKgkB,MAAMhkB,KAAKmkB,eAAYG,EAEhCtkB,KAAKokB,UACElkB,CACX,EAACE,EAEDgD,KAAA,SAAKwgB,GAGD,OAFA5jB,KAAKokB,UACLpkB,KAAKkkB,MAAM9gB,KAAKwgB,GAEpB5jB,IAAA,EAACI,EAEDmkB,QAAA,SAAQX,GAGJ,OAFA5jB,KAAKgkB,QAAQhkB,KAAKmkB,QAAUP,EAC5B5jB,KAAKokB,UAETpkB,IAAA,EAACI,EAEDa,MAAA,WACIjB,KAAKgkB,MAAQ,GACbhkB,KAAKikB,YAAc,EACnBjkB,KAAKkkB,MAAQ,GACblkB,KAAKmkB,OAAS,EACdnkB,KAAKokB,QAAU,CACnB,EAACljB,EAAA6iB,EAAA5iB,CAAAA,CAAAA,IAAAC,SAAAA,IA7CD,WACI,OAAWpB,KAACokB,OAChB,KAACL,CAAA,CAXD,GCPES,gBAWF,WAAA,SAAAA,EAAYC,EAAkBC,EAAsBC,GAV5CC,KAAAA,sBACAC,iBAAW,EAAA7kB,KACX8kB,gBAAU,EAAA9kB,KACV+kB,iBAAW,EAAA/kB,KACXglB,cACAC,EAAAA,KAAAA,aACAR,EAAAA,KAAAA,YACAC,EAAAA,KAAAA,uBACAC,aAAO,EAIX3kB,KAAK4kB,WAAY,EACjB5kB,KAAK6kB,YAAc,EACnB7kB,KAAK8kB,WAAa,EAClB9kB,KAAK+kB,iBAAcT,EACnBtkB,KAAKglB,SAAW,GAEhBhlB,KAAKilB,aAAUX,EACftkB,KAAKykB,OAASA,EACdzkB,KAAK0kB,WAAaA,EAClB1kB,KAAK2kB,QAAUA,CACnB,CAAC,IAAAvkB,EAAAokB,EAAAnkB,UAmEA,OAnEAD,EAED8kB,UAAA,SAAUC,GACNnlB,KAAK8kB,aACA9kB,KAAK4kB,gBACeN,IAAjBtkB,KAAKilB,SACLjlB,KAAKilB,QAAQE,EAAKnlB,KAAK6kB,YAAa7kB,KAAK8kB,YAGjD9kB,KAAK4kB,WAAY,CACrB,EAACxkB,EAEDglB,QAAA,SAAQD,GACJnlB,KAAK6kB,mBACmBP,IAApBtkB,KAAK0kB,YACL1kB,KAAK0kB,WAAWS,EAAKnlB,KAAK6kB,YAAa7kB,KAAK8kB,YAE5C9kB,KAAK6kB,cAAgB7kB,KAAK8kB,aAC1B9kB,KAAK4kB,WAAY,OACGN,IAAhBtkB,KAAKykB,QACLzkB,KAAKykB,SAGjB,EAACrkB,EAEDilB,UAAA,SAAUF,QACeb,IAAjBtkB,KAAK2kB,SACL3kB,KAAK2kB,QAAQQ,EAErB,EAAC/kB,EAEDklB,WAAA,SAAWH,GACP,OAAInlB,KAAK+kB,YAEE/kB,KAAK+kB,YAAYI,GAErBA,CACX,EAAC/kB,EAEDmlB,eAAA,SAAeC,GAEX,OADAxlB,KAAK+kB,YAAcS,EAEvBxlB,IAAA,EAACI,EAEDqlB,WAAA,SAAWC,EAAYC,GAEnB,OADA3lB,KAAKglB,SAAS5hB,KAAKsiB,EAAOC,GAE9B3lB,IAAA,EAACI,EAEDwlB,cAAA,SAAcF,GACV,IAAMG,EAAQ7lB,KAAKglB,SAAS7gB,QAAQuhB,GAIpC,OAHe,IAAXG,GACA7lB,KAAKglB,SAASthB,OAAOmiB,EAAO,GAEzB7lB,IACX,EAACI,EAED0lB,WAAA,SAAWC,GACP,IAAK,IAAItiB,EAAI,EAAGuiB,EAAIhmB,KAAKglB,SAAS7hB,OAAQM,EAAIuiB,EAAGviB,GAAK,EAAG,CACrD,IAAMiiB,EAAQ1lB,KAAKglB,SAASvhB,GACtBkiB,EAAS3lB,KAAKglB,SAASvhB,EAAI,GAEjC,GADIiiB,EAAMO,SAAQP,EAAMQ,UAAY,GAChCR,EAAMS,KAAKJ,GACX,OAAOJ,CAEd,CACD,OAAO,IACX,EAACnB,CAAA,CA/ED,GAmFE4B,GAAwB,IAAI5B,GC5F5B6B,gBAQF,WAAA,SAAAA,EAAYC,GAAmCtmB,KAP9CsmB,aAAO,EAAAtmB,KACPumB,iBAAW,EAAAvmB,KACXwmB,qBAAe,EAAAxmB,KACfymB,UAAI,EAAAzmB,KACJ0mB,kBAAY,EAAA1mB,KACZ2mB,mBAAa,EAIV3mB,KAAKsmB,aAAuBhC,IAAZgC,EAAyBA,EAAUF,GAEnDpmB,KAAKumB,YAAc,YACnBvmB,KAAKwmB,iBAAkB,EACvBxmB,KAAKymB,KAAO,GACZzmB,KAAK0mB,aAAe,GACpB1mB,KAAK2mB,cAAgB,CACzB,CAAA,CAAC,IAAAvmB,EAAAimB,EAAAhmB,UAuCAgmB,OAvCAjmB,EAEDwmB,KAAA,SAAKzB,EAAaV,EAAkBC,EAAsBC,GACzD,EAAAvkB,EAEDymB,UAAA,SAAU1B,EAAaT,GACnB,IAAMjiB,EAAQzC,KACd,OAAW,IAAA8mB,QAAQ,SAAUC,EAASC,GAElCvkB,EAAMmkB,KAAKzB,EAAK4B,EAASrC,EAAYsC,EACzC,EACJ,EAAC5mB,EAED6mB,MAAA,WACC,EAAA7mB,EAED8mB,eAAA,SAAeX,GAEX,OADAvmB,KAAKumB,YAAcA,EAEvBvmB,IAAA,EAACI,EAED+mB,mBAAA,SAAmBjnB,GAEf,OADAF,KAAKwmB,gBAAkBtmB,EAChBF,IACX,EAACI,EAEDgnB,QAAA,SAAQX,GAEJ,OADAzmB,KAAKymB,KAAOA,EACLzmB,IACX,EAACI,EAEDinB,gBAAA,SAAgBX,GAEZ,OADA1mB,KAAK0mB,aAAeA,EACb1mB,IACX,EAACI,EAEDknB,iBAAA,SAAiBX,GAEb,OADA3mB,KAAK2mB,cAAgBA,EAEzB3mB,IAAA,EAACqmB,CAAA,CAhDD,GCPSkB,gBAAU,WAQnB,SAAAA,EAAYC,QAAI,IAAJA,IAAAA,EAAO,GAPXA,KAAAA,UACAC,EAAAA,KAAAA,WACAC,EAAAA,KAAAA,oBACAC,oBAAc,EAAA3nB,KACd4nB,kBAAY,EAAA5nB,KACZ6nB,mBAAa,EAGjB7nB,KAAKwnB,KAAOA,EACZxnB,KAAKynB,MAAQ,GACbznB,KAAK0nB,QAAU,GACf1nB,KAAK2nB,eAAiB,GACtB3nB,KAAK4nB,aAAe,CACxB,CAAC,IAAAxnB,EAAAmnB,EAAAlnB,UA0DA,OA1DAD,EAED0nB,YAAA,SAAYC,GACR,IAAK/nB,KAAK0nB,QAAQK,GAAW,CACzB,IAAMC,EAAShoB,KAAK6nB,gBACpBG,EAAOC,iBAAiB,UAAWjoB,KAAKkoB,WAAWC,KAAKnoB,KAAM+nB,IAC9D/nB,KAAK0nB,QAAQK,GAAYC,CAC5B,CACL,EAAC5nB,EAEDgoB,eAAA,WACI,IAAK,IAAI3kB,EAAI,EAAGA,EAAIzD,KAAKwnB,KAAM/jB,IAC3B,KAAMzD,KAAK4nB,aAAgB,GAAKnkB,GAAK,OAAOA,EAChD,OAAQ,CACZ,EAACrD,EAED8nB,WAAA,SAAWH,EAAkBM,GACzB,IAAMtB,EAAU/mB,KAAK2nB,eAAeI,GAEpC,GADAhB,GAAWA,EAAQsB,GACfroB,KAAKynB,MAAMtkB,OAAQ,CACnB,IAAAmlB,EAAiCtoB,KAAKynB,MAAMpD,QAA5BgE,EAAGC,EAAHD,IAAKE,EAAQD,EAARC,SACrBvoB,KAAK2nB,eAAeI,GADNO,EAAPvB,QAEP/mB,KAAK0nB,QAAQK,GAAUS,YAAYH,EAAKE,EAC3C,MACGvoB,KAAK4nB,cAAgB,GAAKG,CAElC,EAAC3nB,EAEDqoB,iBAAA,SAAiBZ,GACb7nB,KAAK6nB,cAAgBA,CACzB,EAACznB,EAEDsoB,eAAA,SAAelB,GACXxnB,KAAKwnB,KAAOA,CAChB,EAACpnB,EAEDooB,YAAA,SAAYH,EAAUE,GAAand,IAAAA,EAC/BpL,KAAA,OAAW,IAAA8mB,QAAQ,SAACC,GAChB,IAAMgB,EAAW3c,EAAKgd,kBACJ,IAAdL,GACA3c,EAAK0c,YAAYC,GACjB3c,EAAKwc,cAAgB,GAAKG,EAC1B3c,EAAKuc,eAAeI,GAAYhB,EAChC3b,EAAKsc,QAAQK,GAAUS,YAAYH,EAAKE,IAExCnd,EAAKqc,MAAMrkB,KAAK,CAAC2jB,QAAAA,EAASsB,IAAAA,EAAKE,SAAAA,GAEvC,EACJ,EAACnoB,EAED6K,QAAA,WAEIjL,KAAK0nB,QAAQiB,QAAQ,SAACX,GAAW,OAAAA,EAAOY,WAAW,GACnD5oB,KAAK2nB,eAAexkB,OAAS,EAC7BnD,KAAK0nB,QAAQvkB,OAAS,EACtBnD,KAAKynB,MAAMtkB,OAAS,EACpBnD,KAAK4nB,aAAe,CAExB,EAACL,CAAA,CAxEkB,GCAjBsB,GAAQ,CAEVC,SAAS,EACTC,MAAO,CAAA,EAEPC,IAAK,SAAU7nB,EAAsB4kB,GAKrC,EAEA3kB,IAAK,SAAUD,GAKf,EAEA6D,OAAQ,SAAU7D,GAElB,EAEAF,MAAO,WACHjB,KAAK+oB,MAAQ,CAAA,CACjB,GCxBEE,GAA+B,CAAA,EAE/BC,gBAAWC,SAAAA,GAKb,SAAAD,EAAY5C,GAAwBlb,IAAAA,EAFxB,OAGRA,EAAA+d,EAAAnlB,KAAMsiB,KAAAA,IAAQtmB,MAJlBopB,cAAQ,EAAAhe,EACRie,kBAAY,EAAAje,CAIZ,CAPaG,EAAA2d,EAAAC,GAOZ,IAAA/oB,EAAA8oB,EAAA7oB,UAsJA6oB,OAtJA9oB,EAEDwmB,KAAA,SAAKzB,EAAYV,EAAiBC,EAAqBC,GAAgB2E,IAAAA,EACnEtpB,UAAYskB,IAARa,IACAA,EAAM,SAEQb,IAAdtkB,KAAKymB,OACLtB,EAAMnlB,KAAKymB,KAAOtB,GAEtBA,EAAMnlB,KAAKsmB,QAAQhB,WAAWH,GAC9B,IAAMoE,EAASV,GAAMznB,IAAI+jB,GACzB,QAAeb,IAAXiF,EAQA,OAPAvpB,KAAKsmB,QAAQpB,UAAUC,GACvBziB,WAAW,WACH+hB,GACAA,EAAO8E,GAEXD,EAAKhD,QAAQlB,QAAQD,EACzB,EAAG,GACIoE,EAEX,QAAqBjF,IAAjB2E,GAAQ9D,GAAZ,CAIA8D,GAAQ9D,GAAO,GACf8D,GAAQ9D,GAAK/hB,KAAK,CAACqhB,OAAAA,EAAQC,WAAAA,EAAYC,QAAAA,IACvC,IAAM6E,EAAM,IAAIC,QAAQtE,EAAK,CACzBuE,QAAS,IAAIC,QAAQ3pB,KAAK2mB,eAC1BiD,YAAa5pB,KAAKwmB,gBAAkB,UAAY,gBAE9C4C,EAAWppB,KAAKopB,SAChBC,EAAerpB,KAAKqpB,aAC1BQ,MAAML,GAAKM,KAAK,SAAAC,GACZ,GAAwB,MAApBA,EAASC,QAAsC,IAApBD,EAASC,OAAc,CAOlD,GAJwB,IAApBD,EAASC,QACTrf,QAAQC,KAAK,uCAGa,oBAAnBqf,qBAA8D3F,IAA5ByF,EAASG,KAAKC,UACvD,OAAOJ,EAEX,IAAMK,EAAYnB,GAAQ9D,GAEpBkF,EAASN,EAASG,KAAKC,YACvBG,EAAgBP,EAASL,QAAQtoB,IAAI,kBACrCmpB,EAAQD,EAAgBE,SAASF,GAAiB,EAClDG,EAA6B,IAAVF,EACrBG,EAAS,EACPC,EAAS,IAAIV,eAAe,CAC9BW,MAAK,SAACC,IAGF,SAASC,IACLT,EAAOU,OAAOjB,KAAK,SAAAkB,GAAE,IAAM9qB,EAAK8qB,EAAL9qB,MACvB,GADqB8qB,EAAJC,KAEbJ,EAAWK,YACR,CAIH,IADA,IAAMpmB,EAAQ,IAAIqmB,cAAc,WAAY,CAACV,iBAAAA,EAAkBC,OAD/DA,GAAUxqB,EAAMkrB,WACuDb,MAAAA,IAC9D9mB,EAAI,EAAG4nB,EAAKjB,EAAUjnB,OAAQM,EAAI4nB,EAAI5nB,IAAK,CAChD,IAAM6nB,EAAWlB,EAAU3mB,GACvB6nB,EAAS5G,YACT4G,EAAS5G,WAAW5f,EAE3B,CACD+lB,EAAWU,QAAQrrB,GACnB4qB,GACH,CACL,EACJ,CApBAA,EAqBJ,IAEJ,OAAW,IAAAU,SAASb,EACvB,CACG,MAAM,IAAInmB,MAAoBulB,cAAAA,EAAS5E,IAAuB4E,oBAAAA,EAASC,OAAWD,KAAAA,EAAS0B,WAEnG,GAAG3B,KAAK,SAAAC,GACJ,OAAQV,GACJ,IAAK,cACD,OAAOU,EAAS2B,cACpB,IAAK,OACD,OAAO3B,EAAS4B,OACpB,IAAK,WACD,OAAO5B,EAAS6B,OACX9B,KAAK,SAAA8B,GAGF,OAFe,IAAIC,WAELC,gBAAgBF,EAAMxC,EACxC,GACR,IAAK,OACD,OAAOW,EAASgC,OACpB,QACI,QAAiBzH,IAAb8E,EACA,OAAOW,EAAS6B,OAGhB,IACMI,EADK,0BACKA,KAAK5C,GACf6C,EAAQD,GAAQA,EAAK,GAAKA,EAAK,GAAGE,mBAAgB5H,EAClD6H,EAAU,IAAIC,YAAYH,GAChC,OAAOlC,EAAS2B,cAAc5B,KAAK,SAAAuC,GAAE,OAAIF,EAAQG,OAAOD,EAAG,GAG3E,GAAGvC,KAAK,SAAAyC,GAGJ1D,GAAMG,IAAI7D,EAAKoH,GACf,IAAMnC,EAAYnB,GAAQ9D,UACnB8D,GAAQ9D,GACf,IAAK,IAAI1hB,EAAI,EAAG4nB,EAAKjB,EAAUjnB,OAAQM,EAAI4nB,EAAI5nB,IAAK,CAChD,IAAM6nB,EAAWlB,EAAU3mB,GACvB6nB,EAAS7G,QACT6G,EAAS7G,OAAO8H,EAEvB,CACL,GAAE,MAAO,SAAAC,GAEL,IAAMpC,EAAYnB,GAAQ9D,GAC1B,QAAkBb,IAAd8F,EAGA,MADAd,EAAKhD,QAAQjB,UAAUF,GACjBqH,SAGHvD,GAAQ9D,GACf,IAAK,IAAI1hB,EAAI,EAAG4nB,EAAKjB,EAAUjnB,OAAQM,EAAI4nB,EAAI5nB,IAAK,CAChD,IAAM6nB,EAAWlB,EAAU3mB,GACvB6nB,EAAS3G,SACT2G,EAAS3G,QAAQ6H,EAExB,CACDlD,EAAKhD,QAAQjB,UAAUF,EAC3B,GAAE,QAAS,WACPmE,EAAKhD,QAAQlB,QAAQD,EACzB,GACAnlB,KAAKsmB,QAAQpB,UAAUC,EAnHtB,MAFG8D,GAAQ9D,GAAK/hB,KAAK,CAACqhB,OAAAA,EAAQC,WAAAA,EAAYC,QAAAA,GAsH/C,EAACvkB,EAEDqsB,gBAAA,SAAgBvsB,GAEZ,OADAF,KAAKqpB,aAAenpB,EACbF,IACX,EAACI,EAEDssB,YAAA,SAAYxsB,GAER,OADAF,KAAKopB,SAAWlpB,EAEpBF,IAAA,EAACkpB,CAAA,CA7JYC,CAAQ9C,ICsBnBsG,GAAY,CAAC,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,GAAI,CAAC,IAAK,IAAIC,IAAI,SAAU/S,GAKlF,IAJA,IAAMgT,EAAW,GAEXC,EAAKjT,EAAE,GAAGkT,WAAW,GACrBC,EAAKF,EAAKjT,EAAE,GACTpW,EAAIqpB,EAAIrpB,EAAIupB,IAAMvpB,EACvBopB,EAAGzpB,KAAKK,GAEZ,OAAOwpB,OAAOC,aAAavqB,MAAM,KAAMkqB,EAC3C,GAAGM,KAAK,IAOQ,SAAAC,GAAIvd,EAAW0G,GAE3B,OADYA,GAAe,IAARA,EAA8B,CAAC,EAAG,GAArB,CAAC,EAAG,EAAG,GAAI,KAClCqW,IAAI,SAAUnpB,GACf,OAAOkpB,GAAUU,OAAO7C,SAASyC,OAAOpd,GAAK,GAAKpM,KAAO,GAAI,EACjE,GACF6pB,UAAUH,KAAK,GACrB,UAuIgBI,GAAgBpI,EAAaqI,EAAwDhB,GAGjG,IAAMiB,EAAkB,SAACC,GAAoB,EAC7CF,EAAKA,GAAMC,EACXjB,EAAMA,GAAOiB,EACb,IACME,EAAqBxI,EAAIyI,MADV,+BAErB,GAAID,EAAoB,CACpB,IAAME,IAAaF,EAAmB,GAClCpB,EAAOoB,EAAmB,GAC9BpB,EAAOuB,OAAOC,mBAAmBxB,GAC7BsB,IACAtB,EAAOuB,OAAOE,KAAKzB,IAEvB,IAGI,IAFA,IAAM0B,EAAS,IAAIC,YAAY3B,EAAKppB,QAC9BgrB,EAAO,IAAIC,WAAWH,GACnBxqB,EAAI,EAAGA,EAAI8oB,EAAKppB,OAAQM,IAC7B0qB,EAAK1qB,GAAK8oB,EAAKQ,WAAWtpB,GAE9BqqB,OAAOprB,WAAW,WACd8qB,EAAGS,EACP,EAAG,EACN,CAAC,MAAOpjB,GACLijB,OAAOprB,WAAW,WACd8pB,EAAI3hB,EACR,EAAG,EACN,CACJ,KAAM,CACH,IAAMwjB,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAOpJ,GAAK,GACzBkJ,EAAQhF,aAAe,cACvBgF,EAAQG,mBAAqB,WACE,IAAvBH,EAAQI,aACe,MAAnBJ,EAAQrE,OACRwD,EAAGa,EAAQtE,UAEXyC,EAAI,2BAA6B6B,EAAQtE,UAGrD,EACAsE,EAAQK,KAAK,KAChB,CACL,UAKgBC,GAAQzuB,GACpB,OAAOA,IAAWA,EAAM0uB,qBAAqB,WAA+B,iBAAV1uB,GAA8C,iBAAjBA,EAAMiD,MACzG,CAKM,SAAU0rB,GAAS3uB,GACrB,MAAyB,iBAAVA,GAAsBA,aAAiB+sB,MAC1D,UAKgB6B,GAAU5uB,GACtB,OAAQ6uB,MAAMC,WAAW9uB,KAAW+uB,SAAS/uB,EACjD,CAgCgB,SAAAyC,GAAMusB,EAAQC,GAC1B,IAAK,IAAMtqB,KAAQqqB,EACXA,EAAEhkB,eAAerG,KACjBsqB,EAAGtqB,GAAQqqB,EAAErqB,IAGrB,OAAOsqB,CACX,UA8CgBC,GAAS9kB,GACrB,OAAOwkB,GAAUxkB,GAAG,GAAOA,EAAaA,IAAAA,EAC5C,GAAA,CAea,IAAAlB,GAAe,WAExB,IADA,IAAMC,EAAa,GACV5F,EAAI,EAAGA,EAAI,IAAKA,IACrB4F,EAAI5F,IAAMA,EAAI,GAAK,IAAM,IAAOA,EAAG6F,SAAS,IAEhD,OAAY,WACR,IAAMC,EAAqB,WAAhBC,KAAKC,SAAwB,EAClCC,EAAqB,WAAhBF,KAAKC,SAAwB,EAClCE,EAAqB,WAAhBH,KAAKC,SAAwB,EAClCG,EAAqB,WAAhBJ,KAAKC,SAAwB,EACxC,OAAUJ,EAAS,IAALE,GAAaF,EAAIE,GAAM,EAAI,KAAQF,EAAIE,GAAM,GAAK,KAAQF,EAAIE,GAAM,GAAK,KAAK,IAAIF,EAAS,IAALK,GAAaL,EAAIK,GAAM,EAAI,KAAK,IAAIL,EAAIK,GAAM,GAAK,GAAO,IAAQL,EAAIK,GAAM,GAAK,KAAK,IAAIL,EAAS,GAALM,EAAY,KAAQN,EAAIM,GAAM,EAAI,KAAK,IAAIN,EAAIM,GAAM,GAAK,KAAQN,EAAIM,GAAM,GAAK,KAAQN,EAAS,IAALO,GAAaP,EAAIO,GAAM,EAAI,KAAQP,EAAIO,GAAM,GAAK,KAAQP,EAAIO,GAAM,GAAK,IAC5W,CACJ,CAZ4B,4BAxUZ,SAAMylB,GAClB,OAAOC,KAAKrI,MAAMqI,KAAKC,UAAUF,GACrC,sBA8BgB,SAAaG,GACzB,IAAMC,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI7C,IAAI,SAAUnpB,GACjF,OAAO+mB,SAASgF,EAAEnC,OAAO5pB,EAAG,GAAI,GACpC,GACA,OAAO2pB,GAAIqC,EAAG,GAAI,GAAK,CAAC,EAAG,EAAG,EAAG,GAAI,IAAI7C,IAAI,SAAUnpB,GACnD,OAAO2pB,IAAKqC,EAAGhsB,IAAM,KAAOgsB,EAAGhsB,EAAI,IAAM,GAAKgsB,EAAGhsB,EAAI,GAAI,EAC7D,GAAG0pB,KAAK,GACZ,iBAOgB,SAAeva,EAAQV,GACnC,IAAM2a,EAAY,GAQlB,OAPU,SAAJ6C,EAAcC,GACZA,EAAEC,OAAS1d,GAAG2a,EAAGzpB,KAAKusB,IACzBA,EAAEE,UAAY,IAAIlH,QAAQ,SAAUjT,GACjCga,EAAEha,EACN,EACJ,CACAga,CAAE9c,GACKia,CACX,UAIM,SAAkBiD,GACpB,WAAWhJ,QAAQ,SAAUC,EAASC,GAClCtkB,WAAWqkB,EAAS+I,EACxB,EACJ,uBAE4BnvB,GACxB,OAAW,IAAAmmB,QAAQ,SAAUC,EAASC,GAClC,IAAM+I,EAAM,IAAIzB,eAChByB,EAAIxB,KAAK5tB,EAAKqvB,QAAU,MAAOrvB,EAAKwkB,KAAK,GACzC4K,EAAIE,OAAS,SAAUC,GACnBvlB,QAAQD,IAAI/J,EAAKwkB,IAAK4K,EAAItB,WAAYsB,EAAI/F,QACnB,IAAnB+F,EAAItB,aACe,MAAfsB,EAAI/F,OACJjD,EAAQgJ,EAAII,aAEZnJ,EAAO+I,EAAItE,YAGvB,EACAsE,EAAIrB,KAAK,KACb,EACJ,WA8BgB,SAASvJ,EACAqI,EAIAhB,GAMrB,IAAMiB,EAAkB,SAACC,GAAoB,EAC7CF,EAAKA,GAAMC,EACXjB,EAAMA,GAAOiB,EAEb,IAAMY,EAAU,IAAIC,eACpBD,EAAQ+B,iBAAiB,oBACzB/B,EAAQE,KAAK,MAAOpJ,GAAK,GACzBkJ,EAAQpG,iBAAiB,OAAQ,SAAUnjB,GAEvC,IAAMilB,EAAWjlB,EAAMiR,OAAOgU,SAC9B,GAAoB,MAAhB/pB,KAAKgqB,OAAgB,CACrB,IAAI+B,EACJ,IACIA,EAAOuD,KAAKrI,MAAM8C,EACrB,CAAC,MAAOmG,GACL1D,uDAAyD0D,EAC5D,CACD1C,EAAGzB,EACN,MAAM,GAAoB,IAAhB/rB,KAAKgqB,OAAc,CAG1Brf,QAAQC,KAAK,qCACb,IACI4iB,EAAG8B,KAAKrI,MAAM8C,GACjB,CAAC,MAAOmG,GACL1D,EAAG,qDAAsD0D,EAC5D,CACJ,MACG1D,EAAI1nB,EAEZ,GAAG,GAEHupB,EAAQpG,iBAAiB,QAAS,SAAUnjB,GACxC0nB,EAAI1nB,EACR,GAAG,GACHupB,EAAQK,KAAK,KACjB,8DAwEM,SAAexuB,GACjB,OAAO2uB,GAAS3uB,IAAU4uB,GAAU5uB,EACxC,aAKM,SAAqBA,GACvB,MAAyB,mBAAVA,CACnB,WAKgB,SAASA,GAErB,QAAUA,GAASA,EAAMsB,cADC,CAAA,EAAGA,WAEjC,OAIM,SAAe0tB,GACjB,OAAOvsB,GAAMusB,EAAG,CAAA,EACpB,kBAgBgB,SAAOA,EAAQC,GAC3B,IAAK,IAAMtqB,KAAQqqB,EACXA,EAAEhkB,eAAerG,IACbqqB,QAAErqB,KACFsqB,EAAGtqB,GAAQqqB,EAAErqB,IAIzB,OAAOsqB,CACX,UAKgB,SAAQD,EAAQC,GAC5B,IAAK,IAAMtqB,KAAQqqB,EACXA,EAAEhkB,eAAerG,IACbsqB,QAAGtqB,KACHsqB,EAAGtqB,GAAQqqB,EAAErqB,IAIzB,OAAOsqB,CACX,yBAK8BkB,GAC1B,IAAK,IAAMxrB,KAAQwrB,EACf,GAAIA,EAAInlB,eAAerG,GACnB,OAAO,EAGf,QACJ,qBAagB,SAAOgV,EAAQC,GAC3B,IAAMpE,EAAI,IAAImE,EAAErY,YAAYqY,EAAE1W,OAAS2W,EAAE3W,QAGzC,OAFAuS,EAAEiH,IAAI9C,GACNnE,EAAEiH,IAAI7C,EAAGD,EAAE1W,QACJuS,CACX,2HChKM4a,GAAYtd,KACZkJ,GAAQlJ,KAwGR,SAAUud,GAAiBvU,EAA2BwU,EAAmCxgB,GAI3F,gBAJ2FA,IAAAA,EAAwBgM,GACnHhM,EAAK,GAAKgM,EAAS,GAAKwU,EAAiB,GAAKA,EAAiB,IAC/DxgB,EAAK,GAAKgM,EAAS,GAAKwU,EAAiB,GAAKA,EAAiB,IAC/DxgB,EAAK,GAAKgM,EAAS,GAAKwU,EAAiB,IAAMA,EAAiB,IACzDxgB,CACX,CAwBgB,SAAAygB,GAAqBC,EAA4BF,EAAmCxgB,QAAqB,IAArBA,IAAAA,EAAqB,IAAIY,aAAa8f,EAAUvtB,SAChJ,IAAK,IAAIM,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAClDuM,EAAKvM,EAAI,GAAKitB,EAAUjtB,EAAI,GAAK+sB,EAAiB,GAAKA,EAAiB,IACxExgB,EAAKvM,EAAI,GAAKitB,EAAUjtB,EAAI,GAAK+sB,EAAiB,GAAKA,EAAiB,IACxExgB,EAAKvM,EAAI,GAAKitB,EAAUjtB,EAAI,GAAK+sB,EAAiB,IAAMA,EAAiB,IAE7E,OAAOxgB,CACX,CA6BO,IAAI2gB,GAAe,WACtB,IAAML,EAAYvd,KACZmJ,EAAQnJ,KACd,OAAiB6d,SAAAA,EAAwB/hB,EAAsBC,GAI3D,IAKIrL,EALEotB,EAAY,IAAIC,YAAYF,EAAMztB,QAClC4tB,EAAa,IAAIngB,aAAa,CAChC,OAAS9B,EAAI,GAAKD,EAAI,IACtB,OAASC,EAAI,GAAKD,EAAI,MAG1B,IAAKpL,EAAI,EAAGA,EAAImtB,EAAMztB,OAAQM,GAAK,EAC/BotB,EAAUptB,EAAI,GAAK+F,KAAKwnB,OAAOJ,EAAMntB,EAAI,GAAKoL,EAAI,IAAMkiB,EAAW,IACnEF,EAAUptB,EAAI,GAAK+F,KAAKwnB,OAAOJ,EAAMntB,EAAI,GAAKoL,EAAI,IAAMkiB,EAAW,IAUvE,OARAjc,GAAawb,GACblT,GAAiBvO,EAAKyhB,GACtBxb,GAAaoH,GACbL,GAAa,EACR/M,EAAI,GAAKD,EAAI,IAAM,OACnBC,EAAI,GAAKD,EAAI,IAAM,OACrBqN,GAEI,CACH2U,UAAWA,EACXL,iBAHqB/V,GAAQ6V,EAAWpU,EAAOpH,MAKvD,CACJ,CA9B0B,GA8E1B,SAASmc,GAAyBL,EAAwBntB,EAAWytB,EAAYC,GAC7E,IAAIngB,EAAI4f,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,KACjFwN,EAAI2f,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,KACzF,GAAImtB,EAAMntB,EAAI,GAAK,EAAG,CAClB,IAAI2tB,GAAS,EAAI5nB,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GAC3CqgB,GAAS,EAAI7nB,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,GAC/CD,EAAIogB,EACJngB,EAAIogB,CACP,CAED,OAAO,IAAIC,UAAU,CAAC9nB,KAAK0nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,IAAKxH,KAAK2nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,KAC3G,CAMA,SAASsgB,GAAIX,EAAwBntB,EAAW4L,GAC5C,OAAOuhB,EAAMntB,GAAK4L,EAAW,GAAKuhB,EAAMntB,EAAI,GAAK4L,EAAW,GAAKuhB,EAAMntB,EAAI,GAAK4L,EAAW,EAC/F,CAoEA,SAASmiB,GAAcC,EAAgBpsB,QAAAA,IAAAA,IAAAA,EAA0BgK,MAC7D,IAAI2B,EAAIygB,EAAI,GACRxgB,EAAIwgB,EAAI,GACZzgB,GAAK,EAAIA,EAAI,GAAK,IAClBC,GAAK,EAAIA,EAAI,GAAK,IAClB,IAAMC,EAAI,EAAI1H,KAAKuU,IAAI/M,GAAKxH,KAAKuU,IAAI9M,GACjCC,EAAI,IACJF,GAAK,EAAIxH,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GACvCC,GAAK,EAAIzH,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,IAE3C,IAAM9N,EAASqG,KAAKgI,KAAKR,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAI7C,OAHA7L,EAAO,GAAK2L,EAAI7N,EAChBkC,EAAO,GAAK4L,EAAI9N,EAChBkC,EAAO,GAAK6L,EAAI/N,EACTkC,CACX,CA4BgB,SAAAqsB,GAAmBhB,EAA4BiB,EAAuBC,GAclF,IAbA,IAAMC,EAAenB,EAAUvtB,OACzB2uB,EAAsB,IAAIhB,YAAYe,GACtCE,EAAOJ,EAAK,GACZK,EAAOL,EAAK,GACZM,EAAON,EAAK,GACZO,EAAOP,EAAK,GAAKI,EACjBI,EAAOR,EAAK,GAAKK,EACjBI,EAAOT,EAAK,GAAKM,EACjBI,EAAS,MACTC,EAAcD,EAASH,EACvBK,EAAcF,EAASF,EACvBK,EAAcH,EAASD,EACvBK,EAAS,SAACC,GAAW,OAAKA,GAAO,EAAIA,EAAM,CAAC,EACzCjvB,EAAI,EAAGA,EAAIouB,EAAcpuB,GAAK,EACnCquB,EAAoBruB,EAAI,GAAK+F,KAAKwnB,MAAMyB,EAAO/B,EAAUjtB,EAAI,GAAKsuB,GAAQO,GAC1ER,EAAoBruB,EAAI,GAAK+F,KAAKwnB,MAAMyB,EAAO/B,EAAUjtB,EAAI,GAAKuuB,GAAQO,GAC1ET,EAAoBruB,EAAI,GAAK+F,KAAKwnB,MAAMyB,EAAO/B,EAAUjtB,EAAI,GAAKwuB,GAAQO,GAO9E,OALA3d,GAAayb,IACbnT,GAAiBwU,EAAMrB,IACvBzb,GAAaqH,IACbN,GAAa,CAACsW,EAAOG,EAAQF,EAAOE,EAAQD,EAAOC,GAASnW,IAC5DtC,GAAQ0W,GAAWpU,GAAO0V,GACnBE,CACX,UAoGgBa,GAAchY,EAAoBuW,EAAeC,GAC7D,IAGQC,EACAC,EAJJrgB,EAAI2J,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,KACzD1J,EAAI0J,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,IAAMnR,KAAKuU,IAAIpD,EAAE,KAU7D,OATIA,EAAE,GAAK,IAGPyW,GAAS,EAAI5nB,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GAC3CqgB,GAAS,EAAI7nB,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,GAC3CD,EAAIogB,EACJngB,EAAIogB,GAGG,IAAAC,UAAU,CAAC9nB,KAAK0nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,IAAKxH,KAAK2nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,KAC3G,CAKgB,SAAA2hB,GAAgBhC,EAAwBntB,EAAWytB,EAAeC,GAC9E,IAAIngB,EAAI4f,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,KACjFwN,EAAI2f,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,IAAM+F,KAAKuU,IAAI6S,EAAMntB,EAAI,KACzF,GAAImtB,EAAMntB,EAAI,GAAK,EAAG,CAClB,IAAI2tB,GAAS,EAAI5nB,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GAC3CqgB,GAAS,EAAI7nB,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,GAC/CD,EAAIogB,EACJngB,EAAIogB,CACP,CAED,OAAO,IAAIC,UAAU,CAAC9nB,KAAK0nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,IAAKxH,KAAK2nB,GAAW,MAAJlgB,GAAaA,EAAI,GAAK,EAAI,KAC3G,qDA1gBoC2f,EAAwB/hB,EAAuBC,GAC/E,IAAIrL,EAAGovB,EAGP,IAFAhkB,EAAMA,GAAO,IAAII,aAAa,GAC9BH,EAAMA,GAAO,IAAIG,aAAa,GACzBxL,EAAI,EAAGA,EAAI,EAAGA,IACfoL,EAAIpL,GAAK+K,OAAOskB,UAChBhkB,EAAIrL,IAAM+K,OAAOskB,UAErB,IAAKrvB,EAAI,EAAGA,EAAImtB,EAAMztB,OAAQM,GAAK,EAC/B,IAAKovB,EAAI,EAAGA,EAAI,EAAGA,IACfhkB,EAAIgkB,GAAKrpB,KAAKqF,IAAIA,EAAIgkB,GAAIjC,EAAMntB,EAAIovB,IACpC/jB,EAAI+jB,GAAKrpB,KAAKsF,IAAIA,EAAI+jB,GAAIjC,EAAMntB,EAAIovB,IAG5C,MAAO,CACHhkB,IAAAA,EACAC,IAAAA,EAER,iCAKgB,SAA+B6iB,EAAuBC,GAClEA,EAA4BA,GAA6B5e,KACzD,IAGMkf,EAAOP,EAAK,GAHLA,EAAK,GAIZQ,EAAOR,EAAK,GAHLA,EAAK,GAIZS,EAAOT,EAAK,GAHLA,EAAK,GAIZU,EAAS,MAMf,OALAxd,GAAayb,IACbnT,GAAiBwU,EAAMrB,IACvBzb,GAAaqH,IACbN,GAAa,CAACsW,EAAOG,EAAQF,EAAOE,EAAQD,EAAOC,GAASnW,IAC5DtC,GAAQ0W,GAAWpU,GAAO0V,GACnBA,CACX,8BAKmChB,EAAwB/hB,EAAsBC,GAC7E,IAMIrL,EANEotB,EAAY,IAAIC,YAAYF,EAAMztB,QACpC4tB,EAAa,IAAIngB,aAAa,CAC9B9B,EAAI,KAAOD,EAAI,GAAK,OAASC,EAAI,GAAKD,EAAI,IAAM,EAChDC,EAAI,KAAOD,EAAI,GAAK,OAASC,EAAI,GAAKD,EAAI,IAAM,EAChDC,EAAI,KAAOD,EAAI,GAAK,OAASC,EAAI,GAAKD,EAAI,IAAM,IAGpD,IAAKpL,EAAI,EAAGA,EAAImtB,EAAMztB,OAAQM,GAAK,EAC/BotB,EAAUptB,EAAI,GAAK+F,KAAKwnB,OAAOJ,EAAMntB,EAAI,GAAKoL,EAAI,IAAMkiB,EAAW,IACnEF,EAAUptB,EAAI,GAAK+F,KAAKwnB,OAAOJ,EAAMntB,EAAI,GAAKoL,EAAI,IAAMkiB,EAAW,IACnEF,EAAUptB,EAAI,GAAK+F,KAAKwnB,OAAOJ,EAAMntB,EAAI,GAAKoL,EAAI,IAAMkiB,EAAW,IAWvE,OATAlc,GAAayb,IACbnT,GAAiBtO,EAAKyhB,IACtBzb,GAAaqH,IACbN,GAAa,EACR9M,EAAI,GAAKD,EAAI,IAAM,OACnBC,EAAI,GAAKD,EAAI,IAAM,OACnBC,EAAI,GAAKD,EAAI,IAAM,OACrBqN,IAEI,CACH2U,UAAWA,EACXL,iBAHqB5W,GAAQ0W,GAAWpU,GAAOrH,MAKvD,iBAQM,SAAyB8F,EAAoBgX,EAAuB3hB,QAAAA,IAAAA,IAAAA,EAAwB2K,GAC9F,IAAMoW,EAAa,IAAIngB,aAAa,CAChC+gB,EAAK,KAAOA,EAAK,GAAK,OAASA,EAAK,GAAKA,EAAK,IAAM,EACpDA,EAAK,KAAOA,EAAK,GAAK,OAASA,EAAK,GAAKA,EAAK,IAAM,EACpDA,EAAK,KAAOA,EAAK,GAAK,OAASA,EAAK,GAAKA,EAAK,IAAM,IAKxD,OAHA3hB,EAAK,GAAKxG,KAAKsF,IAAI,EAAGtF,KAAKqF,IAAI,MAAOrF,KAAKwnB,OAAOrW,EAAE,GAAKgX,EAAK,IAAMZ,EAAW,MAC/E/gB,EAAK,GAAKxG,KAAKsF,IAAI,EAAGtF,KAAKqF,IAAI,MAAOrF,KAAKwnB,OAAOrW,EAAE,GAAKgX,EAAK,IAAMZ,EAAW,MAC/E/gB,EAAK,GAAKxG,KAAKsF,IAAI,EAAGtF,KAAKqF,IAAI,MAAOrF,KAAKwnB,OAAOrW,EAAE,GAAKgX,EAAK,IAAMZ,EAAW,MACxE/gB,CACX,sCAqBgB,SAAgB2hB,EAAuBnB,EAAmCxgB,GAOtF,gBAPsFA,IAAAA,EAAwB2hB,GAC9G3hB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,GAAKA,EAAiB,IAC3DxgB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,GAAKA,EAAiB,IAC3DxgB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,IAAMA,EAAiB,IAC5DxgB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,GAAKA,EAAiB,IAC3DxgB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,GAAKA,EAAiB,IAC3DxgB,EAAK,GAAK2hB,EAAK,GAAKnB,EAAiB,IAAMA,EAAiB,IACrDxgB,CACX,+CAqB4B4gB,GACxB,IAEIntB,EAAGovB,EAFDhkB,EAAM,IAAI+B,aAAa,GACvB9B,EAAM,IAAI8B,aAAa,GAE7B,IAAKnN,EAAI,EAAGA,EAAI,EAAGA,IACfoL,EAAIpL,GAAK+K,OAAOskB,UAChBhkB,EAAIrL,IAAM+K,OAAOskB,UAErB,IAAKrvB,EAAI,EAAGA,EAAImtB,EAAMztB,OAAQM,GAAK,EAC/B,IAAKovB,EAAI,EAAGA,EAAI,EAAGA,IACfhkB,EAAIgkB,GAAKrpB,KAAKqF,IAAIA,EAAIgkB,GAAIjC,EAAMntB,EAAIovB,IACpC/jB,EAAI+jB,GAAKrpB,KAAKsF,IAAIA,EAAI+jB,GAAIjC,EAAMntB,EAAIovB,IAG5C,MAAO,CACHhkB,IAAKA,EACLC,IAAKA,EAEb,iCAyCgB,SAAgB8hB,GAO5B,IAFA,IACIa,EAAUsB,EAAMC,EAAYC,EAD1BC,EAAU,IAAI5B,UAAUV,EAAMztB,QAE3BM,EAAI,EAAGA,EAAImtB,EAAMztB,OAAQM,GAAK,EAGnCsvB,EAAOtB,EAAMR,GAAyBL,EAAOntB,EAAG,QAAS,SAEzDuvB,EAAaC,EAAU1B,GAAIX,EAAOntB,EAD5B+tB,GAAcC,KAIpBuB,EAAazB,GAAIX,EAAOntB,EADlB+tB,GADNC,EAAMR,GAAyBL,EAAOntB,EAAG,OAAQ,YAGhCwvB,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,GAAIX,EAAOntB,EADlB+tB,GADNC,EAAMR,GAAyBL,EAAOntB,EAAG,QAAS,WAGjCwvB,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,GAAIX,EAAOntB,EADlB+tB,GADNC,EAAMR,GAAyBL,EAAOntB,EAAG,OAAQ,WAGhCwvB,IACbF,EAAOtB,EACPwB,EAAUD,GAEdE,EAAQzvB,GAAKsvB,EAAK,GAClBG,EAAQzvB,EAAI,GAAKsvB,EAAK,GAE1B,OAAOG,CACX,eA2BgB,SAAaC,EAAqB3C,EAAmCxgB,YAAAA,IAAAA,EAAO,IAAIY,aAAa,IACzGZ,EAAK,GAAKmjB,EAAG,GAAK3C,EAAiB,GAAKA,EAAiB,GACzDxgB,EAAK,GAAKmjB,EAAG,GAAK3C,EAAiB,GAAKA,EAAiB,EAC7D,yBAK8B4C,EAAsB5C,EAAmCxgB,QAAAA,IAAAA,IAAAA,EAAO,IAAIY,aAAawiB,EAAIjwB,SAC/G,IAAK,IAAIM,EAAI,EAAG8S,EAAM6c,EAAIjwB,OAAQM,EAAI8S,EAAK9S,GAAK,EAC5CuM,EAAKvM,EAAI,GAAK2vB,EAAI3vB,EAAI,GAAK+sB,EAAiB,GAAKA,EAAiB,GAClExgB,EAAKvM,EAAI,GAAK2vB,EAAI3vB,EAAI,GAAK+sB,EAAiB,GAAKA,EAAiB,GAEtE,OAAOxgB,CACX,mBAKgB,SAAiByhB,EAAsBpsB,GACnD,IAAI2L,EAAIygB,EAAI,GACRxgB,EAAIwgB,EAAI,GACZzgB,GAAK,EAAIA,EAAI,GAAK,IAClBC,GAAK,EAAIA,EAAI,GAAK,IAClB,IAAMC,EAAI,EAAI1H,KAAKuU,IAAI/M,GAAKxH,KAAKuU,IAAI9M,GACjCC,EAAI,IACJF,GAAK,EAAIxH,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GACvCC,GAAK,EAAIzH,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,IAE3C,IAAM9N,EAASqG,KAAKgI,KAAKR,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAI7C,OAHA7L,EAAO,GAAK2L,EAAI7N,EAChBkC,EAAO,GAAK4L,EAAI9N,EAChBkC,EAAO,GAAK6L,EAAI/N,EACTkC,CACX,oBAKgB,SAAkBguB,EAAsBhuB,GACpD,IAAK,IAAI5B,EAAI,EAAGovB,EAAI,EAAGtc,EAAM8c,EAAKlwB,OAAQM,EAAI8S,EAAK9S,GAAK,EAAG,CACvD,IAAIuN,EAAIqiB,EAAK5vB,EAAI,GACbwN,EAAIoiB,EAAK5vB,EAAI,GACjBuN,GAAK,EAAIA,EAAI,GAAK,IAClBC,GAAK,EAAIA,EAAI,GAAK,IAClB,IAAMC,EAAI,EAAI1H,KAAKuU,IAAI/M,GAAKxH,KAAKuU,IAAI9M,GACjCC,EAAI,IACJF,GAAK,EAAIxH,KAAKuU,IAAI9M,KAAOD,GAAK,EAAI,GAAK,GACvCC,GAAK,EAAIzH,KAAKuU,IAAI/M,KAAOC,GAAK,EAAI,GAAK,IAE3C,IAAM9N,EAASqG,KAAKgI,KAAKR,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAC7C7L,EAAOwtB,EAAI,GAAK7hB,EAAI7N,EACpBkC,EAAOwtB,EAAI,GAAK5hB,EAAI9N,EACpBkC,EAAOwtB,EAAI,GAAK3hB,EAAI/N,EACpB0vB,GAAK,CACR,CACD,OAAOxtB,CACX,qDAgFgB,SAA6BiuB,EAAoCC,EAA0BC,EAAoBC,EAAoCC,GAE/J,SAASnC,EAAI5W,EAAoBtL,GAC7B,OAAOsL,EAAE,GAAKtL,EAAW,GAAKsL,EAAE,GAAKtL,EAAW,GAAKsL,EAAE,GAAKtL,EAAW,EAC3E,CAGA,IAAIoiB,EAAUsB,EAAMC,EAAYC,EAC5BxvB,EACAkwB,EAAc,IAAI/iB,aAAa,CAAC,EAAG,EAAG,EAAG,IACzCgjB,EAAc,IAAIhjB,aAAa,CAAC,EAAG,EAAG,EAAG,IAC7C,IAAKnN,EAAI,EAAGA,EAAI+vB,EAAY/vB,GAAK,EAC7BkwB,EAAY,GAAKJ,EAAQ9vB,GACzBkwB,EAAY,GAAKJ,EAAQ9vB,EAAI,GAC7BkwB,EAAY,GAAKJ,EAAQ9vB,EAAI,GAE7B+X,GAAc8X,EAAmBK,EAAaC,GAC9ClhB,GAAckhB,EAAaA,GAG3Bb,EAAOtB,EAAMkB,GAAciB,EAAa,QAAS,SAEjDZ,EAAaC,EAAU1B,EAAIqC,EADrBpC,GAAcC,KAIpBuB,EAAazB,EAAIqC,EADXpC,GADNC,EAAMkB,GAAciB,EAAa,OAAQ,YAGxBX,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,EAAIqC,EADXpC,GADNC,EAAMkB,GAAciB,EAAa,QAAS,WAGzBX,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,EAAIqC,EADXpC,GADNC,EAAMkB,GAAciB,EAAa,OAAQ,WAGxBX,IACbF,EAAOtB,EACPwB,EAAUD,GAEdS,EAAkBC,EAAuBjwB,EAAI,GAAKsvB,EAAK,GACvDU,EAAkBC,EAAuBjwB,EAAI,GAAKsvB,EAAK,GACvDU,EAAkBC,EAAuBjwB,EAAI,GAAK,EAGtD,OADAiwB,EAAwBF,CAE5B,4BAKiCD,GAI7B,IAHA,IAEI9B,EAAUsB,EAAMC,EAAYC,EAF1BO,EAAaD,EAAQpwB,OACrBswB,EAAoB,IAAInC,UAAUkC,GAE/B/vB,EAAI,EAAGA,EAAI+vB,EAAY/vB,GAAK,EAEjCsvB,EAAOtB,EAAMmB,GAAgBW,EAAS9vB,EAAG,QAAS,SAElDuvB,EAAaC,EAAU1B,GAAIgC,EAAS9vB,EAD9B+tB,GAAcC,KAIpBuB,EAAazB,GAAIgC,EAAS9vB,EADpB+tB,GADNC,EAAMmB,GAAgBW,EAAS9vB,EAAG,OAAQ,YAGzBwvB,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,GAAIgC,EAAS9vB,EADpB+tB,GADNC,EAAMmB,GAAgBW,EAAS9vB,EAAG,QAAS,WAG1BwvB,IACbF,EAAOtB,EACPwB,EAAUD,IAIdA,EAAazB,GAAIgC,EAAS9vB,EADpB+tB,GADNC,EAAMmB,GAAgBW,EAAS9vB,EAAG,OAAQ,WAGzBwvB,IACbF,EAAOtB,EACPwB,EAAUD,GAEdS,EAAkBhwB,EAAI,GAAKsvB,EAAK,GAChCU,EAAkBhwB,EAAI,GAAKsvB,EAAK,GAChCU,EAAkBhwB,EAAI,GAAK,EAE/B,OAAOgwB,CACX,uCCnoBMI,GAAYxkB,KACZC,GAAYD,KACZ4D,GAAYD,cAMF8gB,GAAY9kB,GAExB,OAAO,IAAIC,aAAaD,GAAU,EACtC,CAKM,SAAU+kB,GAAiB/kB,GAE7B,OAAW,IAAAglB,WAAWhlB,GAAU,EACpC,CAaM,SAAUilB,GAAWjlB,GAEvB,OAAOD,GAAcC,GAAU,GACnC,CAqEgB,SAAAklB,GACZC,EACAC,GAEA,OAAOD,EAAM,IAAMC,EAAM,IACrBA,EAAM,IAAMD,EAAM,IAClBA,EAAM,IAAMC,EAAM,IAClBD,EAAM,IAAMC,EAAM,EAC1B,CAIgB,SAAAC,GACZF,EACAC,GASA,OANID,EAAM,IAAMC,EAAM,IAClBA,EAAM,IAAMD,EAAM,IAClBA,EAAM,IAAMC,EAAM,IAClBA,EAAM,IAAMD,EAAM,IAClBA,EAAM,IAAMC,EAAM,IAClBA,EAAM,IAAMD,EAAM,EAE1B,CAKO,IAAMG,GAA0B,WACnC,IAAMzlB,EAAME,GAAc,GACpBD,EAAMC,GAAc,GACpBK,EAAWL,GAAc,GAC/B,OAAO,SAAC4iB,GAQJ,OAPA9iB,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACdphB,GAAQzB,EAAKD,EAAKO,GACX5F,KAAKuU,IAAInM,GAAQxC,GAC5B,CACJ,CAduC,GAmB1BmlB,GAAqB,WAC9B,IAAM1lB,EAAME,GAAc,GACpBD,EAAMC,GAAc,GACpBK,EAAWL,GAAc,GAE/B,OAAQ4iB,SAAAA,EAAuBhX,GAC3B9L,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GAEd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GAEd,IAAM6C,EAAUjkB,GAAQzB,EAAKD,EAAKO,GAE5BqlB,EAAO9Z,EAAE,GAAKgX,EAAK,GACnB+C,EAAO/C,EAAK,GAAKhX,EAAE,GACnBga,EAAOha,EAAE,GAAKgX,EAAK,GACnBiD,EAAOjD,EAAK,GAAKhX,EAAE,GACnBka,EAAOla,EAAE,GAAKgX,EAAK,GACnBmD,EAAOnD,EAAK,GAAKhX,EAAE,GAMzB,OAJA6Z,EAAQ,IAAMC,EAAOC,EAAOD,EAAOC,EACnCF,EAAQ,IAAMG,EAAOC,EAAOD,EAAOC,EACnCJ,EAAQ,IAAMK,EAAOC,EAAOD,EAAOC,EAE5BtrB,KAAKuU,IAAInM,GAAQ4iB,GAC5B,CACJ,CA7BkC,YA4ClBO,GACZpD,EACA3hB,GAKA,YALAA,IAAAA,IAAAA,EAAwBX,MAExBW,EAAK,IAAM2hB,EAAK,GAAKA,EAAK,IAAM,EAChC3hB,EAAK,IAAM2hB,EAAK,GAAKA,EAAK,IAAM,EAChC3hB,EAAK,IAAM2hB,EAAK,GAAKA,EAAK,IAAM,EACzB3hB,CACX,CAkBgB,SAAAglB,GAAcrD,GAO1B,YAP0B,IAAAA,IAAAA,EAAwBmC,MAClDnC,EAAK,GAAKjjB,GACVijB,EAAK,GAAKjjB,GACVijB,EAAK,GAAKjjB,GACVijB,EAAK,GAAKpjB,GACVojB,EAAK,GAAKpjB,GACVojB,EAAK,GAAKpjB,GACHojB,CACX,CAsBgB,SAAAsD,GAAYtD,EAAuCuD,GAyC/D,YAzCgD,IAAxBvD,IAAAA,EAAwBmC,WAAeoB,IAAAA,IAAAA,EAAMjB,MACrEiB,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAK,EAETA,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAK,EAETA,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEHA,CACX,CAKgB,SAAAC,GAAYhB,EAAwBC,GAmBhD,OAlBID,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEdD,CACX,CAwBgB,SAAAiB,GAAkBzD,EAAuBhX,GA0BrD,OAxBIgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGTgX,CACX,CA6BgB,SAAA0D,GAAmB1D,EAAuBjB,GAItD,IAHA,IAAI1f,EACAC,EACAC,EACKzN,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAElDwN,EAAIyf,EAAUjtB,EAAI,GAClByN,EAAIwf,EAAUjtB,EAAI,GACdkuB,EAAK,IAHT3gB,EAAI0f,EAAUjtB,MAIVkuB,EAAK,GAAK3gB,GAEV2gB,EAAK,GAAK1gB,IACV0gB,EAAK,GAAK1gB,GAEV0gB,EAAK,GAAKzgB,IACVygB,EAAK,GAAKzgB,GAEVygB,EAAK,GAAK3gB,IACV2gB,EAAK,GAAK3gB,GAEV2gB,EAAK,GAAK1gB,IACV0gB,EAAK,GAAK1gB,GAEV0gB,EAAK,GAAKzgB,IACVygB,EAAK,GAAKzgB,GAGlB,OAAOygB,CACX,CAwDa,IAAA2D,GAAqB,WAC9B,IAAM3a,EAAI5L,GAAc,GAExB,OACI2hB,SAAAA,EACAiB,EACAC,GAEAD,EAAOA,GAAQmC,KAaf,IAXA,IAOI9iB,EACAC,EACAC,EATA6gB,EAAOrjB,GACPsjB,EAAOtjB,GACPujB,EAAOvjB,GACP6mB,EAAOhnB,GACPinB,EAAOjnB,GACPknB,EAAOlnB,GAMF9K,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAC9CmuB,GACAjX,EAAE,GAAK+V,EAAUjtB,EAAI,GACrBkX,EAAE,GAAK+V,EAAUjtB,EAAI,GACrBkX,EAAE,GAAK+V,EAAUjtB,EAAI,GAErB8sB,GAAiB5V,EAAGiX,EAA2BjX,GAE/C3J,EAAI2J,EAAE,GACN1J,EAAI0J,EAAE,GACNzJ,EAAIyJ,EAAE,KAEN3J,EAAI0f,EAAUjtB,EAAI,GAClBwN,EAAIyf,EAAUjtB,EAAI,GAClByN,EAAIwf,EAAUjtB,EAAI,IAGlBuN,EAAI+gB,IACJA,EAAO/gB,GAGPC,EAAI+gB,IACJA,EAAO/gB,GAGPC,EAAI+gB,IACJA,EAAO/gB,GAGPF,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAWf,OAPAygB,EAAK,GAAKI,EACVJ,EAAK,GAAKK,EACVL,EAAK,GAAKM,EACVN,EAAK,GAAK4D,EACV5D,EAAK,GAAK6D,EACV7D,EAAK,GAAK8D,EAEH9D,CACX,CACJ,CAxEkC,YAiMlB+D,GACZhF,EACAiF,QAAAA,IAAAA,IAAAA,EAA0BtmB,MAK1B,IAHA,IAAIumB,EAAU,EACVC,EAAU,EACVC,EAAU,EACLryB,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAClDmyB,GAAWlF,EAAUjtB,EAAI,GACzBoyB,GAAWnF,EAAUjtB,EAAI,GACzBqyB,GAAWpF,EAAUjtB,EAAI,GAE7B,IAAMsyB,EAAerF,EAAUvtB,OAAS,EAIxC,OAHAwyB,EAAO,GAAKC,EAAUG,EACtBJ,EAAO,GAAKE,EAAUE,EACtBJ,EAAO,GAAKG,EAAUC,EACfJ,CACX,KAMaK,gBAST,WAAA,SAAAA,IAAAh2B,KAPOi2B,gBAAU,EAAAj2B,KACVk2B,YACAxW,EAAAA,KAAAA,YAMH,EAAA1f,KAAK0f,OAASrQ,KACdrP,KAAKk2B,OAAS,EACdl2B,KAAKi2B,WAAa5mB,IACtB,CAkBC2mB,OAlBAA,EAAA31B,UASDsc,IAAA,SAAIwZ,EAAYC,EAAYC,EAAYH,GACpC,IAAMhmB,EAAI,EAAM1G,KAAKgI,KAAK2kB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GACnDr2B,KAAK0f,OAAO,GAAKyW,EAAKjmB,EACtBlQ,KAAK0f,OAAO,GAAK0W,EAAKlmB,EACtBlQ,KAAK0f,OAAO,GAAK2W,EAAKnmB,EACtBlQ,KAAKk2B,OAASA,EAAShmB,EACvBlQ,KAAKi2B,WAAW,GAAMj2B,KAAK0f,OAAO,IAAM,EAAO,EAAI,EACnD1f,KAAKi2B,WAAW,GAAMj2B,KAAK0f,OAAO,IAAM,EAAO,EAAI,EACnD1f,KAAKi2B,WAAW,GAAMj2B,KAAK0f,OAAO,IAAM,EAAO,EAAI,CACvD,EAACsW,CAAA,CAtBD,GA4BSM,GAAiB,EAKjBC,GAAoB,EAKpBC,GAAkB,EAKlBC,GAUT,WALOC,KAAAA,YAMH,EAAA12B,KAAK02B,OAAS,CACV,IAAIV,GAAiB,IAAIA,GAAiB,IAAIA,GAC9C,IAAIA,GAAiB,IAAIA,GAAiB,IAAIA,GAEtD,EAOY,SAAAW,GAAYC,EAA0BC,EAA0BC,GAC5E,IAAMlkB,EAAIgH,GAAQid,EAASD,EAAS3jB,IAC9B6H,EAAKlI,EAAE,GACPmI,EAAKnI,EAAE,GACPoI,EAAKpI,EAAE,GACPqI,EAAKrI,EAAE,GACPqG,EAAKrG,EAAE,GACPsI,EAAKtI,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPuG,EAAKvG,EAAE,GACP0G,EAAK1G,EAAE,GACPyI,EAAMzI,EAAE,IACR0I,EAAM1I,EAAE,IACRyG,EAAMzG,EAAE,IACRwG,EAAMxG,EAAE,IACRsG,EAAMtG,EAAE,IACR2I,EAAM3I,EAAE,IAQd,OAPAkkB,EAAUA,GAAW,IAAIL,IACjBC,OAAO,GAAG/Z,IAAI1B,EAAKH,EAAIM,EAAKnC,EAAIqC,EAAMnC,EAAIoC,EAAMlC,GACxDyd,EAAQJ,OAAO,GAAG/Z,IAAI1B,EAAKH,EAAIM,EAAKnC,EAAIqC,EAAMnC,EAAIoC,EAAMlC,GACxDyd,EAAQJ,OAAO,GAAG/Z,IAAI1B,EAAKF,EAAIK,EAAKF,EAAII,EAAMhC,EAAIiC,EAAMnC,GACxD0d,EAAQJ,OAAO,GAAG/Z,IAAI1B,EAAKF,EAAIK,EAAKF,EAAII,EAAMhC,EAAIiC,EAAMnC,GACxD0d,EAAQJ,OAAO,GAAG/Z,IAAI1B,EAAKD,EAAII,EAAKD,EAAIG,EAAMD,EAAKE,EAAMrC,GACzD4d,EAAQJ,OAAO,GAAG/Z,IAAI1B,EAAKD,EAAII,EAAKD,EAAIG,EAAMD,EAAKE,EAAMrC,GAClD4d,CACX,CAOgB,SAAAC,GAAuBD,EAAmBnF,GACtD,IAAIqF,EAAMV,GACJznB,EAAMglB,GACN/kB,EAAMQ,GACZT,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GACd9iB,EAAI,GAAK8iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GACd7iB,EAAI,GAAK6iB,EAAK,GAEd,IADA,IAAMsF,EAAU,CAACpoB,EAAKC,GACbrL,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMyzB,EAAQJ,EAAQJ,OAAOjzB,GAC7B,GAAMyzB,EAAMxX,OAAO,GAAKuX,EAAQC,EAAMjB,WAAW,IAAI,GAChDiB,EAAMxX,OAAO,GAAKuX,EAAQC,EAAMjB,WAAW,IAAI,GAC/CiB,EAAMxX,OAAO,GAAKuX,EAAQC,EAAMjB,WAAW,IAAI,GAC/CiB,EAAMhB,OAAW,EAClB,OAAOM,GAELU,EAAMxX,OAAO,GAAKuX,EAAQ,EAAIC,EAAMjB,WAAW,IAAI,GACpDiB,EAAMxX,OAAO,GAAKuX,EAAQ,EAAIC,EAAMjB,WAAW,IAAI,GACnDiB,EAAMxX,OAAO,GAAKuX,EAAQ,EAAIC,EAAMjB,WAAW,IAAI,GACnDiB,EAAMhB,OAAW,IAClBc,EAAMT,GAEb,CACD,OAAOS,CACX,UAOgBG,GAAgBhD,EAAwBC,GAEpD,OAAOmC,EA2BX,uEA70BM,SAAsBvnB,GAExB,OAAOD,GAAcC,GAAU,EACnC,oCAa2BA,GAEvB,OAAOD,GAAcC,GAAU,GACnC,gBAGgB,SACZgC,EACAC,EACAC,EACAuP,GAEA,OAAO1R,GAAc,CAACiC,EAAGC,EAAGC,EAAGuP,GACnC,gBAKM,SACF7N,EACA+H,EACArI,GAEA,IAAI7O,WAFJ6O,IAAAA,EAAsBqI,GAGtB,IAEI3J,EACAC,EACAC,EAJEqF,EAAMoE,EAAExX,OAMR2X,EAAKlI,EAAE,GACPmI,EAAKnI,EAAE,GACPoI,EAAKpI,EAAE,GACPqI,EAAKrI,EAAE,GACPqG,EAAKrG,EAAE,GACPsI,EAAKtI,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPuG,EAAKvG,EAAE,GACP0G,EAAK1G,EAAE,GACPyI,EAAMzI,EAAE,IACR0I,EAAM1I,EAAE,IACRyG,EAAMzG,EAAE,IACRwG,EAAMxG,EAAE,IACRsG,EAAMtG,EAAE,IACR2I,EAAM3I,EAAE,IAEd,IAAKnP,EAAI,EAAGA,EAAI8S,EAAK9S,GAAK,EAKtB6O,EAAG7O,EAAI,GAAKqX,GAJZ9J,EAAI2J,EAAElX,EAAI,IAIWwV,GAHrBhI,EAAI0J,EAAElX,EAAI,IAGoB0V,GAF9BjI,EAAIyJ,EAAElX,EAAI,IAE6B4V,EACvC/G,EAAG7O,EAAI,GAAKsX,EAAK/J,EAAIkK,EAAKjK,EAAIqI,EAAKpI,EAAIkI,EACvC9G,EAAG7O,EAAI,GAAKuX,EAAKhK,EAAImK,EAAKlK,EAAIoK,EAAMnK,EAAIgI,EACxC5G,EAAG7O,EAAI,GAAKwX,EAAKjK,EAAIoK,EAAKnK,EAAIqK,EAAMpK,EAAIqK,EAG5C,OAAOjJ,CACX,sFAuFgB,SAAaqf,GAIzB,OAHcA,EAAK,GAAKA,EAAK,KACdA,EAAK,GAAKA,EAAK,KAChBA,EAAK,GAAKA,EAAK,GAEjC,mCAkBgB,SACZA,EACA3hB,GAIA,YAJA,IAAAA,IAAAA,EAAwBF,MAExBE,EAAK,IAAM2hB,EAAK,GAAKA,EAAK,IAAM,EAChC3hB,EAAK,IAAM2hB,EAAK,GAAKA,EAAK,IAAM,EACzB3hB,CACX,sCAoBgB,SAAmB2hB,GAO/B,YAP+BA,IAAAA,IAAAA,EAAsBoC,MACrDpC,EAAK,GAAK,MACVA,EAAK,GAAK,MACVA,EAAK,GAAK,MACVA,EAAK,IAAM,MACXA,EAAK,IAAM,MACXA,EAAK,IAAM,MACJA,CACX,4CAgFgB,SAAYwC,EAAwBC,GAahD,OAZID,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEjBD,EAAM,GAAKC,EAAM,KACjBD,EAAM,GAAKC,EAAM,IAEdD,CACX,yCAqCgB,SAAkBxC,EAAuBhX,GAkBrD,OAhBIgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGZgX,EAAK,GAAKhX,EAAE,KACZgX,EAAK,GAAKhX,EAAE,IAGTgX,CACX,mCAuCgB,SACZA,EACAuD,GA0CA,YA1CAA,IAAAA,IAAAA,EAAuBjB,MAEvBiB,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAK,EAETA,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAK,EAETA,EAAI,GAAKvD,EAAK,GACduD,EAAI,GAAKvD,EAAK,GACduD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEVA,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAMvD,EAAK,GACfuD,EAAI,IAAM,EAEHA,CACX,4CAmFIA,EACAvD,QAAAA,IAAAA,IAAAA,EAAwBmC,MAaxB,IAXA,IAOI9iB,EACAC,EACAC,EATA6gB,EAAOrjB,GACPsjB,EAAOtjB,GACPujB,EAAOvjB,GACP6mB,EAAOhnB,GACPinB,EAAOjnB,GACPknB,EAAOlnB,GAMF9K,EAAI,EAAG8S,EAAM2e,EAAI/xB,OAAQM,EAAI8S,EAAK9S,GAAK,GAC5CuN,EAAIkkB,EAAIzxB,EAAI,IAIJsuB,IACJA,EAAO/gB,IAJXC,EAAIikB,EAAIzxB,EAAI,IAOJuuB,IACJA,EAAO/gB,IAPXC,EAAIgkB,EAAIzxB,EAAI,IAUJwuB,IACJA,EAAO/gB,GAGPF,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAWf,OAPAygB,EAAK,GAAKI,EACVJ,EAAK,GAAKK,EACVL,EAAK,GAAKM,EACVN,EAAK,GAAK4D,EACV5D,EAAK,GAAK6D,EACV7D,EAAK,GAAK8D,EAEH9D,CACX,0BAMItR,EACAsR,QAAAA,IAAAA,IAAAA,EAAwBmC,MAaxB,IAXA,IAOI9iB,EACAC,EACAC,EATA6gB,EAAOrjB,GACPsjB,EAAOtjB,GACPujB,EAAOvjB,GACP6mB,EAAOhnB,GACPinB,EAAOjnB,GACPknB,EAAOlnB,GAMF9K,EAAI,EAAG8S,EAAM8J,EAAOld,OAAQM,EAAI8S,EAAK9S,KAC1CuN,EAAIqP,EAAO5c,GAAG,IAINsuB,IACJA,EAAO/gB,IAJXC,EAAIoP,EAAO5c,GAAG,IAONuuB,IACJA,EAAO/gB,IAPXC,EAAImP,EAAO5c,GAAG,IAUNwuB,IACJA,EAAO/gB,GAGPF,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAGPC,EAAIukB,IACJA,EAAOvkB,GAWf,OAPAygB,EAAK,GAAKI,EACVJ,EAAK,GAAKK,EACVL,EAAK,GAAKM,EACVN,EAAK,GAAK4D,EACV5D,EAAK,GAAK6D,EACV7D,EAAK,GAAK8D,EAEH9D,CACX,yLAkN4CmF,EAAmBpG,EAA4B0G,GACvF,OACJ,CAAA,6BAYM,SAAqCN,EAAmBjd,EAAoBC,EAAoBpE,GAClG,OACJ,CAAA,mCAWwCohB,EAAmBpG,EAA4B0G,GACnF,OACJ,CAAA,8BAUgB,SAA4BN,EAAmBpG,GAC3D,OAAO,CACX,mCAUwCoG,EAAmB9a,GACvD,OACJ,CAAA,oCAWyC2V,EAAuBjB,EAA4B0G,GAMxF,OACJ,CAAA,gCAYqCzF,EAAuBjB,EAA4B0G,GACpF,OAAO,CACX,2BAUgB,SAAyBzF,EAAuBjB,GAO5D,IANA,IAAMqB,EAAOJ,EAAK,GACZK,EAAOL,EAAK,GACZM,EAAON,EAAK,GACZ4D,EAAO5D,EAAK,GACZ6D,EAAO7D,EAAK,GACZ8D,EAAO9D,EAAK,GACTluB,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAAG,CACrD,IAAMuN,EAAI0f,EAAUjtB,GACpB,GAAIsuB,GAAQ/gB,GAAKA,GAAKukB,EAAM,CACxB,IAAMtkB,EAAIyf,EAAUjtB,EAAI,GACxB,GAAIuuB,GAAQ/gB,GAAKA,GAAKukB,EAAM,CACxB,IAAMtkB,EAAIwf,EAAUjtB,EAAI,GACxB,GAAIwuB,GAAQ/gB,GAAKA,GAAKukB,EAClB,OACH,CACJ,CACJ,CACJ,CACD,QACJ,sBAOgB,SAAoB9D,EAAuBhX,GACvD,OACIgX,EAAK,IAAMhX,EAAE,IAAMA,EAAE,IAAMgX,EAAK,IAChCA,EAAK,IAAMhX,EAAE,IAAMA,EAAE,IAAMgX,EAAK,IAChCA,EAAK,IAAMhX,EAAE,IAAMA,EAAE,IAAMgX,EAAK,EACxC,+BAOoCA,EAAuBhX,GACvD,OACIgX,EAAK,IAAMhX,EAAE,IAAMA,EAAE,IAAMgX,EAAK,IAChCA,EAAK,IAAMhX,EAAE,IAAMA,EAAE,IAAMgX,EAAK,EACxC,GCz/BMkC,GAAYxkB,KAGZgoB,GAAU,IAAIzmB,aAAa,IAC3B0mB,GAAiB,IAAIroB,aAAa,GAClCsoB,GAAgB,IAAItoB,aAAa,GAMjC,SAAUuoB,GAAiBZ,EAA0Ba,EAA4BC,GAOnF,gBAPmFA,IAAAA,EAA8BL,IACjHC,GAAe,GAAKG,EAAU,GAC9BH,GAAe,GAAKG,EAAU,GAC9BH,GAAe,GAAKG,EAAU,GAC9BH,GAAe,GAAK,EACpB7b,GAAcmb,EAASU,GAAgBC,IACvCta,GAAmB2Z,EAASW,GAAeG,GACpCA,CACX,CAyCgB,SAAAC,GAAiBC,EAA8BH,EAA4BI,GAIvF,YAJ+F,IAARA,IAAAA,EAAW,KAClGJ,EAAU,GAAKjuB,KAAKsJ,MAAM8kB,EAAY,GAAKC,GAAYA,EACvDJ,EAAU,GAAKjuB,KAAKsJ,MAAM8kB,EAAY,GAAKC,GAAYA,EACvDJ,EAAU,GAAKjuB,KAAKsJ,MAAM8kB,EAAY,GAAKC,GAAYA,EAChDJ,CACX,0DAlCgB,SAAcK,EAA2BL,EAA4BM,GAEjF,IAAMC,EAAQpnB,aAAaqnB,KAAK,CAACH,EAAS,KAAK,GACzCI,EAAOJ,EAAS,GAAKE,EAErBG,EAAQvnB,aAAaqnB,KAAK,CAACH,EAAS,KAAK,GACzCM,EAAON,EAAS,GAAKK,EAErBE,EAAQznB,aAAaqnB,KAAK,CAACH,EAAS,KAAK,GACzCQ,EAAOR,EAAS,GAAKO,EAE3BZ,EAAU,GAAKO,EACfP,EAAU,GAAKU,EACfV,EAAU,GAAKY,EAEfN,EAAO,GAAKG,EACZH,EAAO,GAAKK,EACZL,EAAO,GAAKO,CAChB,mDAkCoCC,EAAiCC,EAA+Bf,EAA4BI,QAAAA,IAAAA,IAAAA,EAAW,KAQvI,IANA,IAAMlC,EAASD,GAAoB6C,EAAgB1E,IAE7C4E,EAAajvB,KAAKsJ,MAAM6iB,EAAO,GAAKkC,GAAYA,EAChDa,EAAalvB,KAAKsJ,MAAM6iB,EAAO,GAAKkC,GAAYA,EAChDc,EAAanvB,KAAKsJ,MAAM6iB,EAAO,GAAKkC,GAAYA,EAE7Cp0B,EAAI,EAAG8S,EAAMgiB,EAAep1B,OAAQM,EAAI8S,EAAK9S,GAAK,EACvD+0B,EAAa/0B,EAAI,GAAK80B,EAAe90B,EAAI,GAAKg1B,EAC9CD,EAAa/0B,EAAI,GAAK80B,EAAe90B,EAAI,GAAKi1B,EAC9CF,EAAa/0B,EAAI,GAAK80B,EAAe90B,EAAI,GAAKk1B,EASlD,OANAlB,EAAU,GAAKgB,EACfhB,EAAU,GAAKiB,EACfjB,EAAU,GAAKkB,EAEqB,IAAjBlB,EAAU,IAA6B,IAAjBA,EAAU,IAA6B,IAAjBA,EAAU,EAG7E,gBASgB,SAAcA,EAA4BM,EAAyBD,GAI/E,OAHAA,EAAS,GAAKL,EAAU,GAAKM,EAAO,GACpCD,EAAS,GAAKL,EAAU,GAAKM,EAAO,GACpCD,EAAS,GAAKL,EAAU,GAAKM,EAAO,GAC7BD,CACX,iBAYgB,SAAec,EAAclW,EAAsB+U,EAA4BoB,GAC3F,IAAMC,EAAuBnpB,GAAQ+S,EAAK+U,GAAamB,EAGvD,OADAzoB,GADsBuC,GAAcgQ,EAAKmR,KACXiF,EAAsBD,GAC7CA,CACX,+CChJgB,SAAuB3mB,EAAWqO,EAAYlO,EAAYC,GACtE,OAAO,GAAK,EAAIJ,IAAMG,EAAKkO,GAAM,EAAIrO,GAAKI,EAAKD,EACnD,4BAUgB,SAAwBH,EAAWqO,EAAYlO,EAAYC,EAAYyO,GACnF,OAAQ,EAAIR,GAAM,EAAIrO,IAAM,EAAIA,GAC5B,EAAIG,GAAM,EAAIH,IAAM,EAAIA,GAAK,EAAIA,EAAIG,GAAM,EAAIH,GAC/C,EAAIA,EAAII,GAAM,EAAIJ,GAAK,EAAIA,EAAIA,EAAII,EACnC,EAAIJ,EAAIA,EAAI6O,CACpB,gBAMM,SAAwB7O,GAK1B,OAJY,EAAIA,EAAIA,EAAI,EAAIA,GAChB,EAAIA,EAAIA,EAAI,EAAIA,EAAI,KACnB,EAAIA,EAAIA,EAAI,EAAIA,IACjB,EAAIA,EAAIA,EAAI,EAAIA,EAEhC,wBAUM,SAAgCqO,EAAYlO,EAAYC,EAAYyO,EAAY7O,GAClF,IAAMsH,EAAiB,IAAXlH,EAAKiO,GACX9G,EAAiB,IAAXsH,EAAK1O,GACXD,EAAKF,EAAIA,EAEf,OAAQ,EAAIG,EAAK,EAAIC,EAAKkH,EAAKC,IADpBvH,EAAIE,KAC6B,EAAIC,EAAK,EAAIC,EAAK,EAAIkH,EAAKC,GAAMrH,EAAKoH,EAAKtH,EAAIG,CAC/F,gBAYqBH,EAAWyI,GAC5B,IAAMoe,EAAI,EAAI7mB,EACd,OAAO6mB,EAAIA,EAAIpe,CAEnB,OAOgB,SAAKzI,EAAWyI,GAC5B,OAAQ,GAAI,EAAIzI,GAAKA,EAAIyI,CAC7B,OAOgB,SAAKzI,EAAWyI,GAC5B,OAAOzI,EAAIA,EAAIyI,CACnB,KASgB,SAAczI,EAAWqO,EAAYlO,EAAYC,GAC7D,OAAWtS,KAACg5B,KAAK9mB,EAAGqO,GAAMvgB,KAAKi5B,KAAK/mB,EAAGG,GAAMrS,KAAKk5B,KAAKhnB,EAAGI,EAC9D,OASgB,SAAKJ,EAAWyI,GAC5B,IAAMoe,EAAI,EAAI7mB,EACd,OAAO6mB,EAAIA,EAAIA,EAAIpe,CACvB,OAOgB,SAAKzI,EAAWyI,GAC5B,IAAMoe,EAAI,EAAI7mB,EACd,OAAQ,EAAG6mB,EAAIA,EAAI7mB,EAAIyI,CAC3B,OAOgB,SAAKzI,EAAWyI,GAE5B,OAAO,GADG,EAAIzI,GACCA,EAAIA,EAAIyI,CAC3B,OAOgB,SAAKzI,EAAWyI,GAC5B,OAAOzI,EAAIA,EAAIA,EAAIyI,CACvB,KAUM,SAAwBzI,EAAWqO,EAAYlO,EAAYC,EAAYyO,GACzE,OAAO/gB,KAAKm5B,KAAKjnB,EAAGqO,GAAMvgB,KAAKo5B,KAAKlnB,EAAGG,GAAMrS,KAAKq5B,KAAKnnB,EAAGI,GAAMtS,KAAKs5B,KAAKpnB,EAAG6O,EACjF,GCjL0CwY,gBAAA55B,cAAA65B,gBAAA75B,EAAA85B,WAAAA,gBAAA95B,YAiO1C,SAAS+5B,GAAYv4B,EAAa4qB,GAC9B,GAAIA,EAAK5qB,GACL,OAAO4qB,EAAK5qB,GAIhB,IAFA,IAAMw4B,EAAQx4B,EAAIy4B,MAAM,KACpBvJ,EAAMtE,EACDtoB,EAAI,EAAG8S,EAAMojB,EAAMx2B,OAAQktB,GAAQ5sB,EAAI8S,EAAM9S,IAElD4sB,EAAMA,EADOsJ,EAAMl2B,IAGvB,OAAO4sB,CACX,CAEA,SAASwJ,GAASxR,EAAa1nB,GAC3B,YAD2BA,IAAAA,IAAAA,EAAY,IAChC0nB,EAAIyR,QAAQ,uBAAwB,SAAUlnB,EAAG+c,GACpD,MAAU,OAAN/c,EACO,IAED,OAANA,EACO,IAEJjS,EAAKgvB,EAChB,EACJ,8DA9NI,SAAAoK,EAAY5vB,QAGR,IAHQA,IAAAA,EAGR,CACA6vB,SAAU,GACVC,OAAQ,KAjBHC,KAAAA,eAASp6B,EAAAA,OAAAC,eAAAC,KAAAu5B,GAAA,CAAAt5B,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAy5B,KAAAA,GAAAv5B,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAA05B,GAAA,CAAAx5B,UAAA,EAAAC,MAGA,OAgBdF,KAAKk6B,UAAY,IAAIt6B,EAAa,IAAImG,oBACtC/F,KAAKg6B,SAAW7vB,EAAI6vB,SACpBh6B,KAAKi6B,OAAS9vB,EAAI8vB,MACtB,CAAC,IAAA75B,EAAA25B,EAAA15B,UAoFA,OApFAD,EAgHD+5B,aAAA,SAAaH,GACT,IAAK,IAAIC,cADAD,IAAAA,EAAmC,CAAE,GAC3BA,EACf75B,OAAIo5B,IAAAA,IAAWU,GAAUD,EAASC,GAEtCj6B,KAAKg6B,SAAQ75B,EAAGH,KAAIu5B,IAAAA,GACxB,EAACn5B,EAWDg6B,cAAA,WACIp6B,KAAKg6B,SAAW,CACpB,CAAA,EAAC55B,EAWDkwB,UAAA,SAAUjI,EAAa1nB,GACnB,IAAM05B,EAAiBl6B,EAAIH,KAAAu5B,IAAAA,IAAAp5B,EAAWH,KAAIy5B,IAAAA,KAC1C,IAAKY,EACD,OACH,KACD,IAAMC,EAAgBZ,GAAYrR,EAAKgS,GACvC,OAAIC,EACI35B,EACOk5B,GAASS,EAAe35B,GAE5B25B,MAGf,EAACl6B,EAYDm6B,iBAAA,SAAiBlS,EAAahnB,EAAeV,GACzC,IAAM05B,EAAiBl6B,OAAIo5B,IAAAA,IAAAp5B,EAAWH,KAAIy5B,IAAAA,KAC1C,IAAKY,EACD,OAAO,KAEX,IAAIC,EAAgBZ,GAAYrR,EAAKgS,GAOrC,OAJIC,EADU,KADdj5B,EAAQmpB,SAAS,GAAKnpB,EAAO,KAETi5B,EAAcE,KAEbn5B,EAAQ,EAAKi5B,EAAcG,MAAQH,EAAcv5B,MAKtEu5B,EAAgBT,GAASS,EAAe,CAACj5B,IACrCV,IACA25B,EAAgBT,GAASS,EAAe35B,IAErC25B,GALN,IAML,EAACp5B,EAAA64B,IAAA54B,IAAA,WAAAwb,IAlJD,SAAaqd,GACT75B,OAAIo5B,IAAAA,IAAaS,GAAY,CAAA,EAC7B75B,EAAIH,KAAAw5B,IAAAA,IAAY15B,OAAO46B,KAAIv6B,EAACH,KAAIu5B,IAAAA,KAChCv5B,KAAKk6B,UAAUz5B,SAAST,KAAIG,EAAEH,KAAIy5B,IAAAA,IACtC,IAACt4B,IAAA,UAAAC,IASD,WACI,OAAAjB,EAAOH,KAAIw5B,IAAAA,GACf,GAAC,CAAAr4B,IAAA,SAAAC,IAOD,WACI,OAAAjB,EAAOH,KAAIy5B,IAAAA,GACf,EAAC9c,IAaD,SAAWsd,GACPA,EAASA,GAAU,KACf95B,OAAIs5B,IAAAA,MAAaQ,IAGrB95B,EAAIH,KAAAy5B,IAAAA,IAAWQ,EACfj6B,KAAKk6B,UAAUz5B,SAAST,KAAIG,EAAEH,KAAIy5B,IAAAA,KACtC,KAACM,CAAA,KCjHQY,GAoCT,SACIC,EACAC,GAA2B76B,KAjCf46B,iBAAW,EAAA56B,KAKX6E,UAKA3E,EAAAA,KAAAA,WAKA0vB,EAAAA,KAAAA,UAKAkL,EAAAA,KAAAA,eAKAC,EAAAA,KAAAA,mBASZ/6B,KAAK46B,YAAcA,EACnB56B,KAAK6E,KAAOg2B,EAAYh2B,KACxB7E,KAAK4vB,KAAOiL,EAAYjL,KACxB5vB,KAAKE,MAAQ26B,EAAY36B,MACzBF,KAAK86B,UAAYD,EAAYC,UAC7B96B,KAAK+6B,YAAcF,EAAYE,WACnC,ECzCSC,GAsCT,SACIC,EACAC,GAMA,GANiCl7B,KAnCrBm7B,YAAM,EAAAn7B,KAQNsK,QAAE,EAAAtK,KAKFo7B,sBAAgB,EAAAp7B,KAKhB6E,UAAI,EAAA7E,KAKJ4vB,UAAI,EAAA5vB,KAKJq7B,gBAAU,EAQtBr7B,KAAKm7B,OAAS,CAACF,GACfj7B,KAAKsK,GAAK4wB,EAAe5wB,GACzBtK,KAAK6E,KAAOq2B,EAAer2B,KAC3B7E,KAAK4vB,KAAOsL,EAAetL,KAC3B5vB,KAAKq7B,WAAa,GACdH,EAAeG,WACf,IAAK,IAAI53B,EAAI,EAAG8S,EAAM2kB,EAAeG,WAAWl4B,OAAQM,EAAI8S,EAAK9S,IAAK,CAClE,IAAM63B,EAAW,IAAIX,GAAS36B,KAAMk7B,EAAeG,WAAW53B,IAC9DzD,KAAKq7B,WAAWj4B,KAAKk4B,EACxB,CAET,ECnDSC,GAuDT,SACIhP,EACAiP,EACAlxB,EACAzF,EACA+qB,EACA6L,QAxDGlP,UAAI,EAAAvsB,KAKJm7B,YAAM,EAAAn7B,KAOGsK,QAKAzF,EAAAA,KAAAA,iBAKA+qB,UAAI,EAAA5vB,KAKJy7B,kBAOAC,EAAAA,KAAAA,qBASAC,aAAO,EAenB37B,KAAKusB,KAAOA,EACZvsB,KAAKm7B,OAAS,CAACK,GACfx7B,KAAKsK,GAAKA,EACVtK,KAAK6E,KAAOA,EACZ7E,KAAK4vB,KAAOA,EACZ5vB,KAAKy7B,aAAeA,GAAgB,GACpCz7B,KAAK27B,QAAU,CAAE,EACjB37B,KAAK07B,SAAW,EACpB,EC7ESE,GA6BT,SAAYhM,EAAciM,EAA4BC,GAAyB97B,KAtBtE4vB,UAAI,EAAA5vB,KAQJ67B,oBAQAC,EAAAA,KAAAA,mBAOL,EAAA97B,KAAK4vB,KAAOA,EACZ5vB,KAAK67B,eAAiBA,EACtB77B,KAAK87B,cAAgBA,CACzB,EC/BkDC,gBAAAp8B,EAAA,aAAAq8B,gBAAAr8B,EAAA,0BAQzCs8B,gBAAU,SAAAC,GA6GnB,SAAAD,EACI1P,EACAjiB,EACA6xB,EACAC,GAIChxB,IAAAA,EAwB8B,OAtB/BA,EAAA8wB,EAAAl4B,KAAMuoB,KAAAA,IAAKvsB,KAACF,OAAAC,eAAAs8B,EAAAjxB,GAAA4wB,GAAA,CAAA97B,MAAAo8B,KAAAlxB,EAlHAmhB,UAAI,EAAAnhB,EAYJmxB,eAAS,EAAAnxB,EAKToxB,gBAAU,EAAApxB,EAKVqxB,YAAM,EAAArxB,EAKNsxB,eAAS,EAAAtxB,EAKTuxB,yBAAmB,EAAAvxB,EAKnBwxB,YAAM,EAAAxxB,EAONqwB,kBAAY,EAAArwB,EAOrByxB,aAAO,EAAAzxB,EASP0xB,iBAAW,EAAA1xB,EAMX2xB,mBAAa,EAAA3xB,EAOb4xB,mBAAa,EAAA5xB,EAKJ6xB,gBAAU,EAAA7xB,EAWV8xB,aAAO,EAAA9xB,EAQvB+xB,WAAK,EAAAr9B,OAAAC,eAAAs8B,EAAAjxB,GAAA2wB,GAAA,CAAA97B,UAAA,EAAAC,WAAA,IAmBDkL,EAAK8xB,QAAU,IAAIt9B,EAAa,IAAImG,GAAeA,iBAEnDqF,EAAKmhB,KAAOA,EAEZnhB,EAAKd,GAAKA,EACVc,EAAKmxB,UAAYJ,EAAgBI,WAAa,GAC9CnxB,EAAKoxB,WAAaL,EAAgBK,YAAc,GAChDpxB,EAAKqxB,OAASN,EAAgBM,QAAU,GACxCrxB,EAAKsxB,UAAYP,EAAgBO,WAAa,GAC9CtxB,EAAKuxB,oBAAsBR,EAAgBQ,qBAAuB,GAClEvxB,EAAKwxB,OAAST,EAAgBS,QAAU,GACxCxxB,EAAKqwB,aAAe,CAAA,EACpBrwB,EAAKyxB,QAAU,CAAA,EACfzxB,EAAK2xB,cAAgB,CAAA,EACrB3xB,EAAK4xB,cAAgB,GACrB5xB,EAAK6xB,WAAa,CAAA,EAClB7xB,EAAK0xB,YAAc,CAAA,EACnB1xB,EAAK+xB,OAAQ,EACbh9B,EAAAk8B,EAAAjxB,GAAA2wB,IAAAA,KAAkB,EAElB3wB,EAAKgyB,SAASjB,GAAiB/wB,CACnC,CA9ImBG,EAAA0wB,EAAAC,GA8IlB,IAAA97B,EAAA67B,EAAA57B,UAydA,OAzdAD,EAiBDg9B,SAAA,SAASjB,GACL,GAAIn8B,KAAKuK,UACL,OAAW,IAAAc,GAAS,uEAExB,GAAIrL,KAAKm9B,MACL,MAAU,IAAA9xB,GAAS,mEAEvB,GAAI8wB,EAAgBV,aAChB,IAAK,IAAIh4B,EAAI,EAAG8S,EAAM4lB,EAAgBV,aAAat4B,OAAQM,EAAI8S,EAAK9S,IAChEzD,KAAKq9B,kBAAkBlB,EAAgBV,aAAah4B,IAG5D,GAAI04B,EAAgBU,QAChB,IAAK,IAAIp5B,EAAI,EAAG8S,EAAM4lB,EAAgBU,QAAQ15B,OAAQM,EAAI8S,EAAK9S,IAC3DzD,KAAKs9B,aAAanB,EAAgBU,QAAQp5B,IAGlD,GAAI04B,EAAgBa,cAChB,IAAK,IAAIv5B,EAAI,EAAG8S,EAAM4lB,EAAgBa,cAAc75B,OAAQM,EAAI8S,EAAK9S,IACjEzD,KAAKu9B,mBAAmBpB,EAAgBa,cAAcv5B,GAGlE,EAACrD,EAmDDi9B,kBAAA,SAAkBnC,GACd,GAAIl7B,KAAKuK,UACL,OAAO,IAAIc,GAAS,8DAExB,GAAIrL,KAAKm9B,MACL,OAAO,IAAI9xB,GAAS,2BAExB,GAAIrL,KAAKy7B,aAAaP,EAAe5wB,IACjC,OAAW,IAAAe,GAAS,mMAExB,IAAIuvB,EAAc56B,KAAKusB,KAAKkP,aAAaP,EAAe5wB,IACxD,OAAIswB,GACA56B,KAAKy7B,aAAaP,EAAe5wB,IAAMswB,EACvCA,EAAYO,OAAO/3B,KAAKpD,MACjB46B,IAEXA,EAAc,IAAII,GAAYh7B,KAAMk7B,GACpCl7B,KAAKy7B,aAAaP,EAAe5wB,IAAMswB,EACvC56B,KAAKusB,KAAKkP,aAAaP,EAAe5wB,IAAMswB,EACrCA,EACX,EAACx6B,EAqDDk9B,aAAA,SAAaE,GACT,GAAIx9B,KAAKuK,UACL,OAAW,IAAAc,GAAS,6DAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,yDAExB,IAAMf,EAAKkzB,EAAiBlzB,GAC5B,GAAItK,KAAK68B,QAAQvyB,GACb,OAAO,IAAIe,GAAS,iMAExB,IAAMukB,EAAO4N,EAAiB5N,KAC1B6N,EAAaz9B,KAAKusB,KAAKsQ,QAAQvyB,GACnC,GAAKmzB,EA4CDz9B,KAAK68B,QAAQvyB,GAAMmzB,EACnBz9B,KAAKusB,KAAKsQ,QAAQvyB,GAAMmzB,EACnBz9B,KAAK+8B,cAAcnN,KACpB5vB,KAAK+8B,cAAcnN,GAAQ,CAC9B,GACD5vB,KAAK+8B,cAAcnN,GAAMtlB,GAAMmzB,EAC/Bz9B,KAAKi9B,WAAWrN,QAAmCtL,IAA1BtkB,KAAKi9B,WAAWrN,GAAuB,EAAI5vB,KAAKi9B,WAAWrN,GAAQ,EAC5F6N,EAAWtC,OAAO/3B,KAAKpD,UAnDV,CACb,IAAMy7B,EAAe,GACrB,GAAI+B,EAAiBE,eACjB,IAAK,IAAIj6B,EAAI,EAAG8S,EAAMinB,EAAiBE,eAAev6B,OAAQM,EAAI8S,EAAK9S,IAAK,CACxE,IAAMk6B,EAAgBH,EAAiBE,eAAej6B,GAChDm3B,EAAc56B,KAAKy7B,aAAakC,GACtC,IAAK/C,EACD,OAAO,IAAIvvB,GAAkEsyB,yDAAAA,EAChF,KACGlC,EAAar4B,KAAKw3B,EAEzB,CAEL6C,EAAa,IAAIlC,GAAWv7B,KAAKusB,KAAMvsB,KAAMsK,EAAIkzB,EAAiB34B,KAAM24B,EAAiB5N,KAAM6L,GAC/Fz7B,KAAK68B,QAAQvyB,GAAMmzB,EACnBz9B,KAAKusB,KAAKsQ,QAAQvyB,GAAMmzB,EACnBz9B,KAAKusB,KAAKwQ,cAAcnN,KACzB5vB,KAAKusB,KAAKwQ,cAAcnN,GAAQ,CACnC,GACD5vB,KAAKusB,KAAKwQ,cAAcnN,GAAMtlB,GAAMmzB,EACpCz9B,KAAKusB,KAAK0Q,WAAWrN,QAAwCtL,IAA/BtkB,KAAKusB,KAAK0Q,WAAWrN,GAAuB,EAAI5vB,KAAKusB,KAAK0Q,WAAWrN,GAAQ,EAC3G6N,EAAWtC,OAAO/3B,KAAKpD,MAqBvBA,KAAKusB,KAAKqR,gBAAgBn9B,SAAST,KAAKusB,KAAMkR,EACjD,CAUD,OAAOA,CACX,EAACr9B,EA6CDm9B,mBAAA,SAAmBM,GACf,GAAI79B,KAAKuK,UACL,OAAW,IAAAc,GAAS,+DAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,2DAExB,IAAMwwB,EAAiB77B,KAAKusB,KAAKsQ,QAAQgB,EAAmBC,kBAC5D,IAAKjC,EACD,OAAW,IAAAxwB,GAAQ,kEAAmEwyB,EAAmBC,kBAE7G,IAAMhC,EAAgB97B,KAAKusB,KAAKsQ,QAAQgB,EAAmBE,iBAC3D,IAAKjC,EACD,OAAW,IAAAzwB,GAAQ,iEAAkEwyB,EAAmBE,iBAE5G,IAAMC,EAAW,IAAIpC,GAAaiC,EAAmBjO,KAAMiM,EAAgBC,GAU3E,OATKA,EAAcJ,SAASmC,EAAmBjO,QAC3CkM,EAAcJ,SAASmC,EAAmBjO,MAAQ,IAEtDkM,EAAcJ,SAASmC,EAAmBjO,MAAMxsB,KAAK46B,GAChDnC,EAAeF,QAAQkC,EAAmBjO,QAC3CiM,EAAeF,QAAQkC,EAAmBjO,MAAQ,IAEtDiM,EAAeF,QAAQkC,EAAmBjO,MAAMxsB,KAAK46B,GACrDh+B,KAAKg9B,cAAc55B,KAAK46B,GACjBA,CACX,EAAC59B,EAkCD69B,MAAA,WAAK,IAAA3U,EAAAtpB,KACD,OAAO,IAAI8mB,QAAmB,SAACC,GAC3B,GAAIuC,EAAK/e,UACL,MAAU,IAAAc,GAAS,2DAEvB,GAAIie,EAAK6T,MACL,MAAU,IAAA9xB,GAAS,uDAEvBie,EAAK6T,OAAQ,EACb7T,EAAK4T,QAAQz8B,SAAS6oB,EAAM,MAC5BvC,EAAQuC,EACZ,EACJ,EAAClpB,EAKD89B,QAAA,WACI,GAAIl+B,KAAKuK,UACL,OAAO,IAAIc,GAAS,+BAExB,IAAM8wB,EAAmC,CACrC7xB,GAAItK,KAAKsK,GACTmxB,aAAc,GACdoB,QAAS,GACTG,cAAe,IAEnB,IAAK,IAAI1yB,KAAMtK,KAAKy7B,aAAc,CAS9B,IAT8B,IAAA0C,EACxBvD,EAAc56B,KAAKy7B,aAAanxB,GAChC8zB,EAAuC,CACzC9zB,GAAAA,EACAzF,KAAM+1B,EAAY/1B,KAClBw2B,WAAY,GACZzL,KAAMgL,EAAYhL,KAClBwL,iBAAkBR,EAAYQ,kBAEzB33B,EAAI,EAAG8S,EAAMqkB,EAAYS,WAAWl4B,OAAQM,EAAI8S,EAAK9S,IAAK,CAC/D,IAAM63B,EAAWV,EAAYS,WAAW53B,GAQxC26B,EAAkB/C,WAAWj4B,KAPU,CACnCyB,KAAMy2B,EAASz2B,KACf3E,MAAOo7B,EAASp7B,MAChB0vB,KAAM0L,EAAS1L,KACfkL,UAAWQ,EAASR,UACpBC,YAAaO,EAASP,aAG7B,CACDoD,OAAAA,EAAAhC,EAAgBV,eAAhB0C,EAA8B/6B,KAAKg7B,EACtC,CACD,IAAK,IAAI9zB,KAAMtK,KAAK68B,QAAS,CAAA,IAAAwB,EACnBC,EAASt+B,KAAK68B,QAAQvyB,GACtBi0B,EAAiC,CACnCj0B,GAAAA,EACAslB,KAAM0O,EAAO1O,KACb/qB,KAAMy5B,EAAOz5B,KACb64B,eAAgB,IAEpB,GAAIY,EAAO7C,aACP,IAAK,IAAIh4B,EAAI,EAAG8S,EAAM+nB,EAAO7C,aAAat4B,OAAQM,EAAI8S,EAAK9S,IAAK,CAAA,IAAA+6B,EAEjC,OAA3BA,EAAAD,EAAab,iBAAbc,EAA6Bp7B,KADTk7B,EAAO7C,aAAah4B,GACM6G,GACjD,CAEL+zB,OAAAA,EAAAlC,EAAgBU,UAAhBwB,EAAyBj7B,KAAKm7B,EACjC,CACD,IAAK,IAAI96B,EAAI,EAAG8S,EAAMvW,KAAKg9B,cAAc75B,OAAQM,EAAI8S,EAAK9S,IAAK,CAAAg7B,IAAAA,EACrDC,EAAe1+B,KAAKg9B,cAAcv5B,GAMxCg7B,OAAAA,EAAAtC,EAAgBa,gBAAhByB,EAA+Br7B,KALY,CACvCwsB,KAAM8O,EAAa9O,KACnBkO,iBAAkBY,EAAa7C,eAAevxB,GAC9CyzB,gBAAiBW,EAAa5C,cAAcxxB,IAGnD,CACD,OAAO6xB,CACX,EAAC/7B,EAiBD6K,QAAA,WACI,GAAIjL,KAAKuK,UACL,OAAW,IAAAc,GAAS,6DAExB,IAAK,IAAIf,KAAUtK,KAAC68B,QAAS,CACzB,IAAMY,EAAaz9B,KAAK68B,QAAQvyB,GAChC,GAAImzB,EAAWtC,OAAOh4B,OAAS,EAC3BhD,EAAAH,KAAIg8B,IAAAA,IAAyByB,OAC1B,QACIz9B,KAAKusB,KAAKsQ,QAAQvyB,GACzB,IAAMslB,EAAO6N,EAAW7N,KACxB,GAAuC,KAAhC5vB,KAAKusB,KAAK0Q,WAAWrN,GAIxB,IAAK,IAAIA,YAHF5vB,KAAKusB,KAAK0Q,WAAWrN,UACrB5vB,KAAKusB,KAAKwQ,cAAcnN,GAC/B5vB,KAAKusB,KAAKoS,kBAAkBl+B,SAAST,KAAKusB,KAAMkR,GAC/BA,EAAW/B,SAExB,IADA,IAAMkD,EAAYnB,EAAW/B,SAAS9L,GAC7BnsB,EAAI,EAAG8S,EAAMqoB,EAAUz7B,OAAQM,EAAI8S,EAAK9S,IAI7C,IAHA,IAEMo7B,EAFWD,EAAUn7B,GACFq4B,cACJJ,SAAS9L,GACrBiD,EAAI,EAAUiM,EAAOD,EAAK17B,OAAQ0vB,EAAIiM,EAAMjM,IAC7CgM,EADY,GACJhD,iBAAmB4B,IAE3BoB,EAAKhM,GAAKgM,EAAKhM,GAMtC,CAYJ,CACD1yB,EAAAH,KAAI+7B,IAAAA,KAAc,EAClB/7B,KAAKk9B,QAAQj8B,QACbi7B,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KACjB,EAACi8B,CAAA,CAvmBkB,CAAQhyB,IA0nB9B,SAAAqyB,GAR2BmB,GACpB,IAAK,IAAIh6B,EAAI,EAAG8S,EAAMknB,EAAWtC,OAAOh4B,OAAQM,EAAI8S,EAAK9S,IACrD,GAAIg6B,EAAWtC,OAAO13B,KAAOzD,KAAM,CAC/By9B,EAAWtC,OAASsC,EAAWtC,OAAOz3B,OAAOD,EAAG,GAChD,KACH,CAET,CC5nBJ,IAAas7B,gBAAK7C,SAAAA,GAuEd,SAAA6C,IAAA3zB,IAAAA,EAcuF,OAZnFA,EAAA8wB,EAAAl4B,KAAMhE,KAAA,KAAM,CAAE,IAAEoL,MAnEJ+vB,YAAM/vB,EAAAA,EAKNqwB,kBAAYrwB,EAAAA,EAKZyxB,aAAOzxB,EAAAA,EASP0xB,iBAAW,EAAA1xB,EAMX2xB,mBAAa,EAAA3xB,EAKb6xB,gBAAU,EAAA7xB,EAOV4zB,oBAAc,EAAA5zB,EAOd6zB,sBAAgB,EAAA7zB,EAOhBwyB,qBAAe,EAAAxyB,EAOfuzB,uBAAiB,EAW7BvzB,EAAK+vB,OAAS,CAAA,EACd/vB,EAAKqwB,aAAe,CAAA,EACpBrwB,EAAKyxB,QAAU,CAAA,EACfzxB,EAAK0xB,YAAc,CAAE,EACrB1xB,EAAK2xB,cAAgB,CAAE,EACvB3xB,EAAK6xB,WAAa,CAAE,EAEpB7xB,EAAK4zB,eAAiB,IAAIp/B,EAAa,IAAImG,GAAeA,iBAC1DqF,EAAK6zB,iBAAmB,IAAIr/B,EAAa,IAAImG,GAAAA,iBAC7CqF,EAAKwyB,gBAAkB,IAAIh+B,EAAa,IAAImG,GAAAA,iBAC5CqF,EAAKuzB,kBAAoB,IAAI/+B,EAAa,IAAImG,GAAeA,iBAAsBqF,CACvF,CAtFcG,EAAAwzB,EAAA7C,GAsFb,IAAA97B,EAAA2+B,EAAA1+B,UAgNA0+B,OAhNA3+B,EA4BD8+B,YAAA,SACI/C,EACAC,GAGC9S,IAAAA,EAEDtpB,KAAA,GAAIA,KAAKuK,UACL,OAAW,IAAAc,GAAS,0BAExB,IAAIf,EAAK6xB,EAAgB7xB,GACzB,GAAItK,KAAKm7B,OAAO7wB,GACZ,OAAO,IAAIe,GAAoDf,2CAAAA,GAGnE,IAAM2wB,EAAY,IAAIgB,GAAUj8B,KAAMsK,EAAI6xB,EAAiBC,GAS3D,OARAp8B,KAAKm7B,OAAOF,EAAU3wB,IAAM2wB,EAC5BA,EAAUxwB,YAAY1J,IAAI,kBACfuoB,EAAK6R,OAAOF,EAAU3wB,IAC7Bgf,EAAK2V,iBAAiBx+B,SAAS6oB,EAAM2R,EACzC,GACAA,EAAUiC,QAAQn8B,IAAI,WAClBuoB,EAAK0V,eAAev+B,SAAS6oB,EAAM2R,EACvC,GACOA,CACX,EAAC76B,EAaD++B,mBAAA,SAAmBvP,GACf,GAAI5vB,KAAKuK,UACL,OAAW,IAAAc,GAAS,0BAExB,IAAMwxB,EAAU78B,KAAK+8B,cAAcnN,GACnC,OAAOiN,EAAU/8B,OAAO46B,KAAKmC,GAAW,EAC5C,EAACz8B,EAkBDg/B,cAAA,SAAcC,GACV,GAAIr/B,KAAKuK,UACL,OAAO,IAAIc,GAAS,0BAExB,IAAMi0B,EAAkBD,EAAaC,gBAAkBD,EAAaC,eAAen8B,OAAS,EAAKo8B,GAAWF,EAAaC,gBAAkB,KACrIE,EAAkBH,EAAaG,gBAAkBH,EAAaG,eAAer8B,OAAS,EAAKo8B,GAAWF,EAAaG,gBAAkB,KACrIC,EAAmBJ,EAAaI,iBAAmBJ,EAAaI,gBAAgBt8B,OAAS,EAAKo8B,GAAWF,EAAaI,iBAAmB,KACzIC,EAAmBL,EAAaK,iBAAmBL,EAAaK,gBAAgBv8B,OAAS,EAAKo8B,GAAWF,EAAaK,iBAAmB,KAE/I,SAASC,EAAMlC,EAAwBmC,GACnC,GAAKnC,EAAL,CAGA,IAAIoC,GAAgB,GAChBL,GAAkBA,EAAe/B,EAAW7N,OAGxC0P,IAAoBA,EAAe7B,EAAW7N,SAFlDiQ,GAAgB,GAMN,IAAVD,IAA6C,IAA9BP,EAAaS,eAC5BD,GAAgB,GAEhBA,IACIR,EAAaU,gBACbV,EAAaU,gBAAgB38B,KAAKq6B,EAAWnzB,IACtC+0B,EAAaW,cACpBX,EAAaW,cAAc58B,KAAKq6B,GACzB4B,EAAaY,gBAChBZ,EAAaY,eAAexC,IAIxC,IAAM9B,EAAU8B,EAAW9B,QAC3B,IAAK,IAAI/L,KAAQ+L,EAAS,CACtB,IAAMiD,EAAYjD,EAAQ/L,GAC1B,GAAIgP,EACA,IAAK,IAAIn7B,EAAI,EAAG8S,EAAMqoB,EAAUz7B,OAAQM,EAAI8S,EAAK9S,IAAK,CAClD,IAAIy8B,GAAkB,GAClBR,GAAmBA,EAAgBjC,EAAW7N,OAG1C6P,IAAqBA,EAAgBhC,EAAW7N,SAFpDsQ,GAAkB,GAMlBA,GACAP,EAAMf,EAAUn7B,GAAGq4B,cAAe8D,EAAQ,EAEjD,CAER,CAxCA,CAyCL,CAGA,GAAIP,EAAac,cAAe,CAC5B,IAAMC,EAAcpgC,KAAK68B,QAAQwC,EAAac,eAC9C,IAAKC,EACD,OAAO,IAAI/0B,GAAmFg0B,0EAAAA,EAAac,cAC9G,KACDR,EAAMS,EANI,EAOb,MAAUf,GAAAA,EAAae,YAAa,CACjC,GAAIf,EAAae,YAAY7T,MAAQvsB,KACjC,OAAO,IAAIqL,GAAkFg0B,yEAAAA,EAAac,mBAE9GR,EAAMN,EAAae,YAAaR,EACnC,MACG,IAAK,IAAIt1B,KAAMtK,KAAK88B,YAChB6C,EAAM3/B,KAAK88B,YAAYxyB,GAAKs1B,EAGxC,EAACx/B,EAeDa,MAAA,WACI,GAAIjB,KAAKuK,UACL,OAAW,IAAAc,GAAS,0BAExB,IAAK,IAAIf,KAAMtK,KAAKm7B,OAChBn7B,KAAKm7B,OAAO7wB,GAAIW,SAExB,EAAC7K,EAgBD6K,QAAA,WACI,GAAIjL,KAAKuK,UACL,OAAO,IAAIc,GAAS,0BAExBrL,KAAKiB,QACLjB,KAAKg/B,eAAe/9B,QACpBjB,KAAKi/B,iBAAiBh+B,QACtBi7B,EAAA77B,UAAM4K,QAAOjH,KACjBhE,KAAA,EAAC++B,CAAA,CAtSa7C,CAAQjyB,IAyS1B,SAASs1B,GAAW3O,GAEhB,IADA,IAAMhE,EAA8B,CAAA,EAC3BnpB,EAAI,EAAG8S,EAAMqa,EAAMztB,OAAQM,EAAI8S,EAAK9S,IACzCmpB,EAAIgE,EAAMntB,KAAM,EAEpB,OAAOmpB,CACX,uGClTayT,GAqCT,SAAYC,GA5BZxO,KAAAA,yBAOAyO,EAAAA,KAAAA,mBAKAC,EAAAA,KAAAA,6BAOApJ,aAAO,EAAAp3B,KAOPygC,iBAAW,EAGPzgC,KAAK8xB,oBAAsBwO,EAAqBxO,oBAChD9xB,KAAKugC,cAAgBD,EAAqBC,cAC1CvgC,KAAKwgC,iBAAmBF,EAAqBE,iBAC7CxgC,KAAKo3B,QAAUkJ,EAAqBlJ,QACpCp3B,KAAKygC,YAAcH,EAAqBG,WAC5C,ECvCSC,GAmDT,SAAYC,GAAgC3gC,KA9C5CsK,QAQAs2B,EAAAA,KAAAA,sBAKAhP,+BAAyB,EAAA5xB,KAKzB2xB,UAAI,EAAA3xB,KAKJ6gC,yBAAmB,EAAA7gC,KAcnB8gC,qBAOAC,EAAAA,KAAAA,wBAGI/gC,KAAK8gC,gBAAkB,GACvB,IAAK,IAAIr9B,EAAI,EAAG8S,EAAMoqB,EAAOG,gBAAgB39B,OAAQM,EAAI8S,EAAK9S,IAC1DzD,KAAK8gC,gBAAgBr9B,GAAK,IAAI48B,GAAeM,EAAOG,gBAAgBr9B,IAExEzD,KAAKsK,GAAKq2B,EAAOr2B,GACjBtK,KAAK4xB,0BAA4B+O,EAAO/O,0BACxC5xB,KAAK4gC,UAAYD,EAAOC,SAC5B,ECnEiEI,gBAAArhC,EAAAshC,yBAAAA,gBAAAthC,EAAA,kBAmE/DuhC,gBAWF,WAAA,SAAAA,SATA5C,YAAM,EAAAt+B,KACNmhC,UAAI,EAAAnhC,KACJohC,eAAS,EAAAphC,KACTqhC,cAAQ,EAAArhC,KACRshC,oBACAC,EAAAA,KAAAA,yBAAmBzhC,EAAAA,OAAAC,eAAAihC,KAAAA,IAAA/gC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAihC,GAAAhhC,CAAAA,UAAAC,EAAAA,WAKf,IAAAF,KAAKs+B,OAAS,KACdt+B,KAAKmhC,KAAO,KACZnhC,KAAKohC,UAAY,EACjBphC,KAAKqhC,SAAW,KAChBrhC,KAAKshC,eAAiB,KACtBthC,KAAKuhC,oBAAsB,EAC3BphC,EAAIH,KAAAghC,IAAAA,IAA0B,KAC9B7gC,EAAIH,KAAAihC,IAAAA,IAAmB,IAC3B,CAqCCC,OArCAA,EAAA7gC,UAuCDmhC,MAAA,WACIrhC,EAAAH,KAAIghC,IAAAA,IAA0B,KAC9B7gC,EAAIH,KAAAihC,IAAAA,IAAmB,IAC3B,EAAC//B,EAAAggC,EAAA,CAAA,CAAA//B,IAAA,uBAAAC,IAxCD,WACI,IAAIqgC,EAAuB,EAC3B,GAAIzhC,KAAKs+B,OACL,IAAK,IAAI76B,EAAI,EAAG8S,EAAMvW,KAAKs+B,OAAOoD,OAAOv+B,OAAQM,EAAI8S,EAAK9S,IACtDg+B,GAAwBzhC,KAAKs+B,OAAOoD,OAAOj+B,GAAG49B,SAASP,gBAAgB39B,OAG/E,OAAOs+B,CACX,GAAC,CAAAtgC,IAAA,gBAAAC,IAED,WACI,IAAMugC,EAA2B3hC,KAAKqhC,SAAUT,UAEhD,OAA0C5gC,KAAKshC,eAAgBlK,QAASj0B,QADtCw+B,IAAkB7zB,GAAqB,EAAK6zB,IAAkB9zB,GAAiB,EAAI,EAEzH,GAAC1M,CAAAA,IAAAC,wBAAAA,IAED,WAKI,OAJIjB,EAACH,KAAIghC,IAAAA,MACL7gC,EAAAH,KAAIghC,IAAAA,IAA0B,IAAIpwB,aAA8B5Q,KAAKshC,eAAgBxP,oBAAoB3uB,QACzGstB,GAAsCzwB,KAAKshC,eAAgBxP,oBAAgC9xB,KAAKqhC,SAAUzP,0BAAyBzxB,EAAEH,KAAIghC,IAAAA,MAE7I7gC,EAAOH,KAAIghC,IAAAA,GACf,GAAC,CAAA7/B,IAAA,iBAAAC,IAED,WACI,IAAIjB,EAACH,KAAIihC,IAAAA,IAAkB,CACvB,IAAMW,EAAwB5hC,KAAK4hC,sBACnCzhC,OAAI8gC,IAAAA,IAAmB,IAAIhyB,aAAa2yB,EAAsBz+B,QAC9D0X,GAAoB+mB,EAA8B5hC,KAAKmhC,KAAM7kB,OAAMnc,EAAEH,KAAIihC,IAAAA,IAC5E,CACD,OAAA9gC,EAAOH,KAAIihC,IAAAA,GACf,GAAC,CAAA9/B,IAAAC,kBAAAA,IAED,WACI,OAAO,IACX,KAAC8/B,CAAA,CA9CD,GAsDEW,GAAe,IAAIX,GAWT,SAAAY,GAAuBC,EAA0BC,GAC7DH,GAAaL,QACbK,GAAavD,OAASyD,EACtB,IAAK,IAAIt+B,EAAI,EAAG8S,EAAMwrB,EAAYL,OAAOv+B,OAAQM,EAAI8S,EAAK9S,IAAK,CAC3D,IAAM09B,EAAOY,EAAYL,OAAOj+B,GAChCo+B,GAAaV,KAAOA,EACpBU,GAAaT,UAAY39B,EACzB,IAAM49B,EAAWF,EAAKE,SACtBQ,GAAaR,SAAWA,EACxB,IAAK,IAAIxO,EAAI,EAAGiM,EAAOuC,EAASP,gBAAgB39B,OAAQ0vB,EAAIiM,EAAMjM,IAG9D,GAFAgP,GAAaP,eAAiBD,EAASP,gBAAgBjO,GACvDgP,GAAaN,oBAAsB1O,EAC/BmP,EAA+BH,IAC/B,OACH,CAER,CACD,OACJ,CAAA,CClKgE,IAAAI,gBAAAtiC,EAAA,QAAAuiC,gBAAAviC,EAUhE,aAAawiC,2BAuCT,SAAAA,EAAYh4B,GAlCIqxB,KAAAA,kBAOAlxB,QAAE,EAAAtK,KAKF0hC,YAAM,EAAA1hC,KAKNoiC,aAAO,EAAApiC,KASvBqiC,oBAAcviC,EAAAA,OAAAC,eAAAkiC,KAAAA,IAAAhiC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAmiC,KAAAA,GAAAjiC,CAAAA,UAAAC,EAAAA,eAcVF,KAAKsK,GAAKH,EAAIG,GACdtK,KAAKoiC,QAAUj4B,EAAIi4B,QACnBpiC,KAAK0hC,OAASv3B,EAAIu3B,OAClBvhC,EAAIH,KAAAiiC,IAAAA,IAASnO,KACb3zB,EAAIH,KAAAkiC,IAAAA,KAAc,EAClBliC,KAAKqiC,eAAiB,IAC1B,CAeC,OAfAF,EAAA9hC,UAoBDiiC,aAAA,WACIniC,EAAAH,KAAIkiC,IAAAA,KAAc,CACtB,EAAChhC,EAAAihC,EAAA,CAAA,CAAAhhC,IAAA,OAAAC,IAjBD,WAAQgK,IAAAA,EACJpL,KAQA,OARAG,EAAIH,KAAIkiC,IAAAA,MACJlN,GAAa70B,EAACH,KAAIiiC,IAAAA,KAClBH,GAAuB9hC,KAAM,SAAC6hC,GAE1B,OADAxM,GAAkBl1B,EAACiL,EAAI62B,IAAAA,IAAQJ,EAAaU,iBACrC,CACX,GACApiC,OAAI+hC,IAAAA,KAAc,GAEtB/hC,EAAOH,KAAIiiC,IAAAA,GACf,KAACE,CAAA,ICrEQK,GAuCT,SAAYC,EACAC,GAKC1iC,KAxCbsK,QAAE,EAAAtK,KAKF2iC,kBAKAC,EAAAA,KAAAA,8BAKAC,EAAAA,KAAAA,sBAKAC,EAAAA,KAAAA,qBASAC,EAAAA,KAAAA,0BAaI/iC,KAAKsK,GAAKm4B,EAAiBn4B,GAC3BtK,KAAK2iC,aAAeD,EAASC,aAC7B3iC,KAAK4iC,yBAA2BF,EAASE,yBACzC5iC,KAAK6iC,iBAAmBH,EAASG,iBACjC7iC,KAAK8iC,gBAAkBJ,EAASI,gBAChC9iC,KAAK+iC,mBAAqB,IAC9B,ECjCSC,GAiIT,SAAYrC,QAxHZsC,qBAAe,EAAAjjC,KAKfsK,QAKA44B,EAAAA,KAAAA,gBAKAC,eAAS,EAAAnjC,KAKTojC,aAKAC,EAAAA,KAAAA,kBAKAC,YAAM,EAAAtjC,KAKNujC,WAKAC,EAAAA,KAAAA,uBASAC,eAAS,EAAAzjC,KAOT0jC,eAUAC,EAAAA,KAAAA,eASAC,EAAAA,KAAAA,kBASAC,WAAK,EAAA7jC,KASL8jC,WAKAC,EAAAA,KAAAA,kBAOAC,cAAQ,EAAAhkC,KAKRikC,kBAKAC,EAAAA,KAAAA,eAMIlkC,KAAKsK,GAAKq2B,EAAOr2B,GACjBtK,KAAKmjC,UAAYxC,EAAOwC,UACxBnjC,KAAKkjC,IAAMvC,EAAOuC,IAClBljC,KAAKyjC,UAAY9C,EAAO8C,UACxBzjC,KAAK2jC,UAAYhD,EAAOgD,WAAa/3B,GACrC5L,KAAK0jC,UAAY/C,EAAO+C,WAAa93B,GACrC5L,KAAK4jC,MAAQjD,EAAOiD,OAASn4B,GAC7BzL,KAAK6jC,MAAQlD,EAAOkD,OAASp4B,GAC7BzL,KAAK8jC,MAAQnD,EAAOmD,OAASr4B,GAC7BzL,KAAKgkC,SAAWrD,EAAOqD,UAAYt2B,GACnC1N,KAAKikC,aAAe90B,GAAWwxB,EAAOsD,cAAgB,CAAC,EAAG,EAAG,EAAG,IAChEjkC,KAAKkkC,QAAU,EACflkC,KAAKijC,gBAAkB,IAC3B,EC/KgEkB,gBAAAxkC,EAAAykC,SAAAA,gBAAAzkC,EAAA,UAAA0kC,gBAAA1kC,EAAA2kC,YAAAA,gBAAA3kC,EAAA,aAAA4kC,gBAAA5kC,aAevD6kC,gBA0CT,WAAA,SAAAA,EAAYC,QAnCZn6B,QAAE,EAAAtK,KAKFqhC,cAKAqD,EAAAA,KAAAA,gBASAC,EAAAA,KAAAA,yBAKArG,YAAM,EAAAx+B,OAAAC,oBAAAokC,GAAA,CAAAlkC,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAokC,GAAAnkC,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAskC,KAAAA,IAAApkC,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAskC,GAAArkC,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAwkC,KAAAA,IAAAtkC,UAAA,EAAAC,WAqBF,IAAAF,KAAKsK,GAAKm6B,EAAWn6B,GACrBnK,OAAIikC,IAAAA,IAAWK,EAAWnoB,OAAStJ,GAAWyxB,EAAWnoB,QAAUzH,KACnE7U,KAAKqhC,SAAWoD,EAAWpD,SAC3BrhC,KAAK0kC,WAAaD,EAAWC,WAC7B1kC,KAAK2kC,aAAe,KAEpB3kC,KAAK4kC,MAAQH,EAAWG,OAASv1B,GAAW,CAAC,EAAG,EAAG,IACnDrP,KAAK6kC,SAAYJ,QAAWI,SAA0DJ,EAAWI,SAAW,EAC5G7kC,KAAK8kC,UAAaL,QAAWK,UAA4DL,EAAWK,UAAY,EAChH9kC,KAAK+kC,QAAWN,QAAWM,QAAwDN,EAAWM,QAAU,CAC5G,QAAC7jC,EAAAsjC,EAAArjC,CAAAA,CAAAA,YAAAC,IAOD,WACI,OAAAjB,EAAOH,KAAImkC,IAAAA,GACf,EAACxnB,IAOD,SAAUzc,GACN,IAAI0kC,EAAKzkC,EAAGH,KAAImkC,IAAAA,IACXS,KACDA,EAAQzkC,EAAIH,KAAAmkC,IAAAA,IAAU,IAAIvzB,aAAa,IACjC,GAAK,GAEX1Q,GACA0kC,EAAM,GAAK1kC,EAAM,GACjB0kC,EAAM,GAAK1kC,EAAM,GACjB0kC,EAAM,GAAK1kC,EAAM,KAEjB0kC,EAAM,GAAK,EACXA,EAAM,GAAK,EACXA,EAAM,GAAK,GAEX5kC,KAAK2kC,cACL3kC,KAAK2kC,aAAaK,SAAQ7kC,EAACH,KAAImkC,IAAAA,IAEvC,GAAC,CAAAhjC,IAAAC,SAAAA,IASD,WACI,OAAAjB,EAAOH,KAAIokC,IAAAA,GACf,EAACznB,IASD,SAAWL,GACHA,EAEAnc,OAAIikC,IAAAA,IAASznB,IAAIL,GAEjBzH,GAAY1U,EAACH,KAAIokC,IAAAA,KAEjBpkC,KAAK2kC,cACL3kC,KAAK2kC,aAAaM,UAAS9kC,EAACH,KAAIokC,IAAAA,KAEhCpkC,KAAKs+B,QACLt+B,KAAKs+B,OAAOgE,cAEpB,IAACnhC,IAAA,WAAAC,IAWD,WACI,OAAAjB,EAAOH,KAAIqkC,IAAAA,GACf,EAAC1nB,IAWD,SAAazc,GACTA,EAASA,QAAyCA,EAAQ,EACtDC,EAAIH,KAAAqkC,IAAAA,MAAenkC,IAGvBC,EAAIH,KAAAqkC,IAAAA,IAAankC,EACbF,KAAK2kC,cACL3kC,KAAK2kC,aAAaO,YAAW/kC,EAACH,KAAIqkC,IAAAA,KAE1C,GAACljC,CAAAA,gBAAAC,IASD,WACI,OAAAjB,EAAOH,KAAIskC,IAAAA,GACf,EAAC3nB,IASD,SAAczc,GACVA,EAASA,QAAyCA,EAAQ,EACtDC,EAAIH,KAAAskC,IAAAA,MAAgBpkC,IAGxBC,EAAAH,KAAIskC,IAAAA,IAAcpkC,EACdF,KAAK2kC,cACL3kC,KAAK2kC,aAAaQ,aAAYhlC,EAACH,KAAIskC,IAAAA,KAE3C,GAACnjC,CAAAA,cAAAC,IAOD,WACI,OAAAjB,EAAOH,KAAIukC,IAAAA,GACf,EAAC5nB,IAOD,SAAYooB,GACRA,EAAWA,QAA6CA,EAAU,EAC9D5kC,EAAIH,KAAAukC,IAAAA,MAAcQ,IAGtB5kC,EAAAH,KAAIukC,IAAAA,IAAYQ,EAIpB,KAACP,CAAA,CA9KD,GCtDEY,GAA4B,GAC5BC,GAA0B,GAC1BC,GAAiC,GACjCC,GAA0B,GAI1BC,GAAiC,GACnCC,GAAW,EACTC,GAAQ,IAAI5U,YAAY,GACxB6U,GAAQ,IAAI7U,YAAY,GACxB8U,GAAQ,IAAI9U,YAAY,GACxBjX,GAAIxK,KACJyK,GAAIzK,KACJqG,GAAIrG,KACJw2B,GAAKx2B,KACLgd,GAAKhd,KACLy2B,GAAQz2B,KACRqQ,GAASrQ,KCTX02B,GAAwB,KA0G5B,SAASC,GAAcnsB,EAAQC,GAG3B,IAFA,IAAImsB,EAEKxiC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAI,IAAMwiC,EAAMF,GAAqB,EAAJlsB,EAAQpW,GAAKsiC,GAAqB,EAAJjsB,EAAQrW,IACnE,OAAOwiC,EAIf,OAAO,CACX,CAEA,IAAIC,GAAe,KC1HfC,GAAyB,KA2N7B,SAASC,GAAevsB,EAAQC,GAC5B,IAEIusB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAFzBC,EAAS,EAAJ9sB,EACL+sB,EAAS,EAAJ9sB,EAEH+sB,EAAar9B,KAAKqF,IACpBw3B,EAAMF,GAAkBQ,GACxBL,EAAMH,GAAkBQ,EAAK,GAC7BJ,EAAMJ,GAAkBQ,EAAK,IAE3BG,EAAat9B,KAAKqF,IACpB23B,EAAML,GAAkBS,GACxBH,EAAMN,GAAkBS,EAAK,GAC7BF,EAAMP,GAAkBS,EAAK,IAEjC,GAAIC,GAAcC,EACd,OAAOD,EAAaC,EAExB,IAAMC,EAAav9B,KAAKsF,IACpBu3B,EACAC,EACAC,GAEES,EAAax9B,KAAKsF,IACpB03B,EACAC,EACAC,GAEJ,OAAIK,GAAcC,EACPD,EAAaC,EAEjB,CACX,CC/OgB,SAAAC,GAAuBC,GACnC,IAAMtV,EAA4B5e,KAC5B2e,EAAOqD,KACbK,GAAmB1D,EAAMuV,EAAexW,WACxC,IAIIyW,EAJErV,EAAsBJ,GAAmBwV,EAAexW,UAAWiB,EAAMC,GACzE6O,EAAeyG,EAAetG,YAAc7yB,IAAkBm5B,EAAetG,YAAc5yB,IAAoBk5B,EAAetG,YAAc9yB,KAAuBo5B,EAAe9P,QAElL,KH+EM,SACZ1G,EACA0G,EACAxF,EACAwV,IAtFJ,SAAsB1W,EAA4B0G,GAC9C,IACIiQ,EACAC,EACAC,EACApmC,EAGAsC,EACA8S,EAREixB,EAAe,CAAE,EAMjBC,EAAYj+B,KAAKk+B,IAAI,GADH,GAIpBC,EAAqB,EACzB,IAAKlkC,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAQM,EAAI8S,EAAK9S,GAAK,EAC9C4jC,EAAK3W,EAAUjtB,GACf6jC,EAAK5W,EAAUjtB,EAAI,GACnB8jC,EAAK7W,EAAUjtB,EAAI,QAGO6gB,IAAtBkjB,EAFJrmC,EAAMqI,KAAKsJ,MAAMu0B,EAAKI,GAAa,IAAMj+B,KAAKsJ,MAAMw0B,EAAKG,GAAa,IAAMj+B,KAAKsJ,MAAMy0B,EAAKE,MAIxFD,EAAarmC,GAAOwmC,EAAqB,EACzCvC,GAAgBuC,KAAwBN,EACxCjC,GAAgBuC,KAAwBL,EACxClC,GAAgBuC,KAAwBJ,GAG5ClC,GAAc5hC,EAAI,GAAK+jC,EAAarmC,GAExC,IAAKsC,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,IACvC8hC,GAAc9hC,GAAK4hC,GAAcjO,EAAQ3zB,IACzC6hC,GAAqBC,GAAc9hC,IAAM2zB,EAAQ3zB,EAEzD,CAyDImkC,CAAalX,EAAW0G,GAvD5B,SAAoByQ,EAAoBjW,GACpC6T,GAAW,EACX,IAAK,IAAIhiC,EAAI,EAAG8S,EAAMsxB,EAAYpkC,EAAI8S,EAAK9S,GAAK,EAAG,CAC/C,IAAMqkC,EAA2B,EAApBvC,GAAc9hC,GACrBskC,EAA+B,EAAxBxC,GAAc9hC,EAAI,GACzBukC,EAA+B,EAAxBzC,GAAc9hC,EAAI,GAC3BmuB,GACA8T,GAAM,GAAKN,GAAgB0C,GAC3BpC,GAAM,GAAKN,GAAgB0C,EAAK,GAChCpC,GAAM,GAAKN,GAAgB0C,EAAK,GAChCnC,GAAM,GAAKP,GAAgB2C,GAC3BpC,GAAM,GAAKP,GAAgB2C,EAAK,GAChCpC,GAAM,GAAKP,GAAgB2C,EAAK,GAChCnC,GAAM,GAAKR,GAAgB4C,GAC3BpC,GAAM,GAAKR,GAAgB4C,EAAK,GAChCpC,GAAM,GAAKR,GAAgB4C,EAAK,GAEhCzX,GAAiBmV,GAAO9T,EAA2B/X,IACnD0W,GAAiBoV,GAAO/T,EAA2B9X,IACnDyW,GAAiBqV,GAAOhU,EAA2Blc,MAEnDmE,GAAE,GAAKurB,GAAgB0C,GACvBjuB,GAAE,GAAKurB,GAAgB0C,EAAK,GAC5BjuB,GAAE,GAAKurB,GAAgB0C,EAAK,GAC5BhuB,GAAE,GAAKsrB,GAAgB2C,GACvBjuB,GAAE,GAAKsrB,GAAgB2C,EAAK,GAC5BjuB,GAAE,GAAKsrB,GAAgB2C,EAAK,GAC5BryB,GAAE,GAAK0vB,GAAgB4C,GACvBtyB,GAAE,GAAK0vB,GAAgB4C,EAAK,GAC5BtyB,GAAE,GAAK0vB,GAAgB4C,EAAK,IAEhCz3B,GAAQmF,GAAGoE,GAAG+rB,IACdt1B,GAAQsJ,GAAGC,GAAGuS,IACdtb,GAAW80B,GAAIxZ,GAAIyZ,IACnBpzB,GAAcozB,GAAOpmB,IAErB,IAAMuoB,EAAOzC,GAAMC,MAAcD,GAAMC,IAAY,CAAC/lB,OAAQrQ,OAC5D44B,EAAKvoB,OAAO,GAAKA,GAAO,GACxBuoB,EAAKvoB,OAAO,GAAKA,GAAO,GACxBuoB,EAAKvoB,OAAO,GAAKA,GAAO,GACxB+lB,IACH,CACL,CAcIyC,CAAW9Q,EAAQj0B,OAAQyuB,GAmB3B,IAjBA,IAIIhP,EACAC,EACAslB,EACAC,EACAjnC,EAEAknC,EAIAP,EACAC,EAfEtH,EAAc,GACd6H,EAAe9+B,KAAKmM,IG1FqE,GH0FjEhH,IACxB45B,EAAQ,CAAE,EAOZC,GAAa,EAQR/kC,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAEhD,IADA,IAAMglC,EAAYhlC,EAAI,EACbovB,EAAI,EAAGA,EAAI,EAAGA,IACnBjQ,EAAQ2iB,GAAc9hC,EAAIovB,GAC1BhQ,EAAQ0iB,GAAc9hC,GAAMovB,EAAI,GAAK,QAKlBvO,IAAfikB,EAFJpnC,GAFAgnC,EAAS3+B,KAAKqF,IAAI+T,EAAOC,IAEV,KADfulB,EAAS5+B,KAAKsF,IAAI8T,EAAOC,KAKrB0lB,EAAMpnC,GAAO,CACTgnC,OAAQA,EACRC,OAAQA,EACRM,MAAOD,EACPE,WAAOrkB,GAIXikB,EAAMpnC,GAAKwnC,MAAQF,EAK/B,IAAKtnC,KAAOonC,OAIWjkB,KAFnB+jB,EAAOE,EAAMpnC,IAEJwnC,OAGCh5B,GAFI61B,GAAM6C,EAAKK,OAAOhpB,OAClB8lB,GAAM6C,EAAKM,OAAOjpB,QAElB4oB,IAIdR,EAAKxC,GAAqB+C,EAAKF,QAC/BJ,EAAKzC,GAAqB+C,EAAKD,UAC1BI,GAAcV,EAAK,OAASC,EAAK,SAClCS,GAAa,GAEjB/H,EAAYr9B,KAAK0kC,GACjBrH,EAAYr9B,KAAK2kC,IAGrB,OAAQS,EAAc,IAAII,YAAYnI,GAAe,IAAI3P,YAAY2P,EACzE,CGxJUoI,CAAiB/W,EAAqBoV,EAAe9P,QAASxF,GAIrBkX,EFgB7C,SAA4B3H,GAE9B,IAAIrP,EAAsBqP,EAAKrP,oBAC3BsF,EAAU+J,EAAK/J,QACfqJ,EAAcU,EAAKV,aAmF3B,SAAiCsI,GAC7B,KAAgB,OAAZ7C,IAAoBA,GAAQ/iC,QAAU4lC,GAA1C,CAIA7C,GAAU,IAAI0C,YAAYG,GAE1B,IAAK,IAAItlC,EAAI,EAAGA,EAAIslC,EAActlC,IAC9ByiC,GAAQziC,GAAKA,CALhB,CAOL,CA3FIulC,CAAwBlX,EAAoB3uB,OAAS,GAErD,IAAI8lC,EAAM/C,GAAQniC,MAAM,EAAG+tB,EAAoB3uB,OAAS,GACpD+lC,EAAahD,GAAQniC,MAAM,EAAG+tB,EAAoB3uB,OAAS,GAE/D4iC,GAAmBjU,EAEnBmX,EAAIE,KAAKnD,IAET,IAAIoD,EAAY,EAEhBF,EAAWD,EAAI,IAAM,EAErB,IAAK,IAAIxlC,EAAI,EAAG8S,EAAM0yB,EAAI9lC,OAAQM,EAAI8S,EAAK9S,IACnC,GAAKuiC,GAAciD,EAAIxlC,GAAIwlC,EAAIxlC,EAAI,KACnC2lC,IAGJF,EAAWD,EAAIxlC,IAAM2lC,EAGzB,IAEMjC,EAA4B,IAAIrW,YAAiC,GAF5CsY,EAAY,IAMvCjC,EAAuC,GAFvCiC,EAAY,GAE+B,GAAKtX,EAA8B,EAATmX,EAAI,GAAS,GAClF9B,EAAuC,EAAZiC,EAAgB,GAAKtX,EAA8B,EAATmX,EAAI,GAAS,GAClF9B,EAAuC,EAAZiC,EAAgB,GAAKtX,EAA8B,EAATmX,EAAI,GAAS,GAElF,IAAK,IAAIxlC,EAAI,EAAG8S,EAAM0yB,EAAI9lC,OAAQM,EAAI8S,EAAK9S,IACnC,IAAMuiC,GAAciD,EAAIxlC,GAAIwlC,EAAIxlC,EAAI,MAGpC0jC,EAAuC,IAFvCiC,EAE2C,GAAKtX,EAA8B,EAATmX,EAAIxlC,GAAS,GAClF0jC,EAAuC,EAAZiC,EAAgB,GAAKtX,EAA8B,EAATmX,EAAIxlC,GAAS,GAClF0jC,EAAuC,EAAZiC,EAAgB,GAAKtX,EAA8B,EAATmX,EAAIxlC,GAAS,IAGtFylC,EAAWD,EAAIxlC,IAAM2lC,EAGzBrD,GAAmB,KAInB,IAFA,IAMIsD,EANAC,EAAgB,IAAIV,YAAYxR,EAAQj0B,QAEnCM,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,IAC3C6lC,EAAc7lC,GAAKylC,EAAY9R,EAAQ3zB,IAK3C,GAAIg9B,EAAa,CACb4I,EAAoB,IAAIT,YAAYnI,EAAYt9B,QAChD,IAAK,IAAIM,EAAI,EAAG8S,EAAMkqB,EAAYt9B,OAAQM,EAAI8S,EAAK9S,IAC/C4lC,EAAkB5lC,GAAKylC,EAAYzI,EAAYh9B,GAEtD,CACD,MAAO,CACH0jC,EACAmC,EACAD,EAER,CEjFQE,CAAkB,CAClBzX,oBAAAA,EACAsB,IAAK8T,EAAe9T,IACpBgE,QAAS8P,EAAe9P,QACxBqJ,YAAaA,IAGXK,ED/BJ,SACFK,EAKAqI,EACAC,QAAW,IAAXA,IAAAA,GAAc,GAMd,IAAM3X,EAAuBqP,EAAKrP,qBAAuB,GACnDsF,EA4OV,SAAwBA,EAAcoS,GAElC,IADA,IAAIP,EAAM,IAAIS,WAAWtS,EAAQj0B,OAAS,GACjCM,EAAI,EAAG8S,EAAM0yB,EAAI9lC,OAAQM,EAAI8S,EAAK9S,IACvCwlC,EAAIxlC,GAAKA,EAEb0iC,GAAoB,IAAIuD,WAAWtS,EAAQj0B,QAC3C,IAAK,IAAIM,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,IAC3C0iC,GAAkB1iC,GAAK2zB,EAAQ3zB,IAAM+lC,EAEzCP,EAAIE,KAAK/C,IAET,IADA,IAAMuD,EAAgB,IAAID,WAAWtS,EAAQj0B,QACpCM,EAAI,EAAG8S,EAAM0yB,EAAI9lC,OAAQM,EAAI8S,EAAK9S,IACvCkmC,EAAkB,EAAJlmC,EAAQ,GAAK2zB,EAAiB,EAAT6R,EAAIxlC,GAAS,GAChDkmC,EAAkB,EAAJlmC,EAAQ,GAAK2zB,EAAiB,EAAT6R,EAAIxlC,GAAS,GAChDkmC,EAAkB,EAAJlmC,EAAQ,GAAK2zB,EAAiB,EAAT6R,EAAIxlC,GAAS,GAEpD,OAAOkmC,CACX,CA7PoBC,CAAezI,EAAK/J,SAAW,GAAIoS,GAC7C/I,EAAmB,GAKzB,SAASoJ,EAAWC,EAAUC,GAC1B,GAAID,EAAMC,EAAK,CACX,IAAIC,EAAMF,EACVA,EAAMC,EACNA,EAAMC,CACT,CAED,SAASC,EAAWpwB,EAAQC,GACxB,OAAID,GAAKiwB,EACEA,EAAMjwB,EAGbC,GAAKiwB,EACEA,EAAMjwB,EAGV,CACX,CAIA,IAFA,IAAIlH,EAAI,EACJ+c,GAAK8Q,EAAYt9B,QAAU,GAAK,EAC7ByP,GAAK+c,GAAG,CACX,IAAIoJ,EAAKpJ,EAAI/c,GAAM,EACfs3B,EAAMD,EAAWxJ,EAAgB,EAAJ1H,GAAQ0H,EAAgB,EAAJ1H,EAAQ,IAC7D,GAAImR,EAAM,EACNt3B,EAAImmB,EAAI,YACDmR,EAAM,GAGb,OAAOnR,EAFPpJ,EAAIoJ,EAAI,CAUX,CACJ,CACD,OAAQnmB,EAAI,CAChB,CASA,IAAMu3B,EAA2B,IAAIT,WAAWjJ,EAAYt9B,OAAS,GACrEgnC,EAAyBC,KAAK,GAE9B,IAAMrU,EAAejE,EAAoB3uB,OAAS,EAElD,GAAI4yB,EA9EsB,GA8EL,GAAKyT,GACtB,MAAO,CAACrI,GAGZ,IAAMkJ,EAAqB,IAAIX,WAAW3T,GAC1CsU,EAAmBD,MAAM,GAEzB,IAAME,EAAe,GAErB,SAASC,IACLF,EAAmBD,MAAM,GAEzB,IAAII,EAAiB,CACjB1Y,oBAAqB,GACrBsF,QAAS,GACTqJ,YAAa,GACbgK,iBAAkB,GAAKjB,GAAiBA,EACxCzT,aAAc,EACd2U,aAAcJ,EAAQnnC,QAK1B,OAFAmnC,EAAQlnC,KAAKonC,GAENA,CACX,CAQA,IANA,IAAIG,EAAgBJ,IAMX9mC,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAAG,CACnD,IAAImnC,EAA6B,EAE3BC,EAAMzT,EAAQ3zB,GACdqnC,EAAM1T,EAAQ3zB,EAAI,GAClBsnC,EAAM3T,EAAQ3zB,EAAI,GAkBxB,IAhBgC,GAA5B4mC,EAAmBQ,IACnBD,KAG4B,GAA5BP,EAAmBS,IACnBF,KAG4B,GAA5BP,EAAmBU,IACnBH,IAGCA,EAA6BD,EAAc5U,aAAgB4U,EAAcF,kBAC1EE,EAAgBJ,KAGhBI,EAAcD,aArII,EAsIlB,MAAO,CAACvJ,IAGoB,GAA5BkJ,EAAmBQ,KACnBR,EAAmBQ,GAAOF,EAAc5U,eACxC4U,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAAN+Y,IAC3DF,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAAN+Y,EAAU,IACrEF,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAAN+Y,EAAU,MAGzC,GAA5BR,EAAmBS,KACnBT,EAAmBS,GAAOH,EAAc5U,eACxC4U,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANgZ,IAC3DH,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANgZ,EAAU,IACrEH,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANgZ,EAAU,MAGzC,GAA5BT,EAAmBU,KACnBV,EAAmBU,GAAOJ,EAAc5U,eACxC4U,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANiZ,IAC3DJ,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANiZ,EAAU,IACrEJ,EAAc7Y,oBAAoB1uB,KAAK0uB,EAA0B,EAANiZ,EAAU,KAGzEJ,EAAcvT,QAAQh0B,KAAKinC,EAAmBQ,IAC9CF,EAAcvT,QAAQh0B,KAAKinC,EAAmBS,IAC9CH,EAAcvT,QAAQh0B,KAAKinC,EAAmBU,IAG9C,IAAIC,OAAS,GAERA,EAAYnB,EAAWgB,EAAKC,KAAS,GACK,GAAvCX,EAAyBa,KACzBb,EAAyBa,GAAa,EAEtCL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,KAC9DL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,EAAgB,OAIjFA,EAAYnB,EAAWgB,EAAKE,KAAS,GACK,GAAvCZ,EAAyBa,KACzBb,EAAyBa,GAAa,EAEtCL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,KAC9DL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,EAAgB,OAIjFA,EAAYnB,EAAWiB,EAAKC,KAAS,GACK,GAAvCZ,EAAyBa,KACzBb,EAAyBa,GAAa,EAEtCL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,KAC9DL,EAAclK,YAAYr9B,KAAKinC,EAAmB5J,EAAwB,EAAZuK,EAAgB,KAGzF,CAED,IACMC,EAAmBzB,EAAgB,EAEnC0B,EAA4C,EAA7BpZ,EAAoB3uB,QAAci0B,EAAQj0B,OAASs9B,EAAYt9B,SAH1DqmC,EAAgB,EAAI,GAK1C2B,EAAU,EAQd,OALAb,EAAQ3hB,QAAQ,SAACyiB,GACbD,GAA+C,EAApCC,EAAOtZ,oBAAoB3uB,QAAcioC,EAAOhU,QAAQj0B,OAASioC,EAAO3K,YAAYt9B,QAAU8nC,CAE7G,GAEIE,EAAUD,EACH,CAAC/J,IAKRsI,GA+HR,SAAuBa,EAAcnJ,GACjC,IAAMkK,EAAgB,CAAA,EAKtBf,EAAQ3hB,QAAQ,SAACyiB,GAKb,IAJA,IAAIhU,EAAUgU,EAAOhU,QACjBqJ,EAAc2K,EAAO3K,YACrB3O,EAAsBsZ,EAAOtZ,oBAExBruB,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAKhD4nC,EAJUvZ,EAAiC,EAAbsF,EAAQ3zB,IAAU,IAAMquB,EAAiC,EAAbsF,EAAQ3zB,GAAS,GAAK,IAAMquB,EAAiC,EAAbsF,EAAQ3zB,GAAS,GAAK,IAC5IquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,IAAU,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAClJquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,IAAU,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,KAEjI,EAKpB,IAASA,EAAI,EAAG8S,EAAMkqB,EAAYt9B,OAAQM,EAAI8S,EAAK9S,GAAK,GAM5D,GAOI,IAJA,IAAI2zB,EAAU+J,EAAK/J,QAEftF,EAAsBqP,EAAKrP,oBAEtBruB,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAAG,CACnD,IAAItC,EAAM2wB,EAAiC,EAAbsF,EAAQ3zB,IAAU,IAAMquB,EAAiC,EAAbsF,EAAQ3zB,GAAS,GAAK,IAAMquB,EAAiC,EAAbsF,EAAQ3zB,GAAS,GAAK,IAC5IquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,IAAU,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAClJquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,IAAU,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAAK,IAAMquB,EAAqC,EAAjBsF,EAAQ3zB,EAAI,GAAS,GAEjJ,KAAMtC,KAAOkqC,GAET,MADA1gC,QAAQD,IAAI,aAAevJ,GACrB,QAEb,CAgBT,CAzLQmqC,CAAchB,EAASnJ,GAKpBmJ,EACX,CCpLQiB,CAAkB,CAClBzZ,oBAfAqV,EAAyB2B,EACzBQ,GAeAlS,QAfa0R,EACbO,GAeA5I,YAfiBqI,MAOM3B,EAA0BhkC,OAAS,EASpC,MAAY,GAAK,GAC3C,MAAO,CACHmH,GAAI48B,EAAe58B,GACnBs2B,UAAYsG,EAAetG,YAAc7yB,IAAkB+yB,EAAgB39B,OAAS,EAAK2K,GAAqBo5B,EAAetG,UAC7HjP,KAAAA,EACAC,0BAAAA,EACAiP,yBAAqBvc,EACrBwc,gBAAAA,EAER,CC/BA,IA6CE0K,gBAAA7rC,EAAA,gBAAA8rC,gBAAA9rC,EAAA+rC,cAAAA,gBAAA/rC,sBAAAgsC,gBAAAhsC,EAAA,wBAgBWisC,gBAAW1P,SAAAA,GA0HpB,SAAA0P,EAAYC,EAAcC,GAAkC1gC,IAAAA,EAuCxB,OAtChCA,EAAA8wB,EAAAl4B,KAAM6nC,KAAAA,EAAO,CACTvhC,GAAIwhC,EAAiBxhC,MACvBtK,KAACF,OAAAC,eAAAs8B,EAAAjxB,GAAAugC,GAAA,CAAAzrC,MAAA6rC,KAAA3gC,EAxHSygC,aAAKzgC,EAaLg3B,aAAO,EAAAh3B,EAShB+xB,WAAK/xB,EAAAA,EAaIg8B,mBAAa,EAAAh8B,EAOb4gC,gBAAU5gC,EAAAA,EAQVs3B,gBAAQt3B,EAOR6gC,iBAAW,EAAA7gC,EAOXs2B,cAAMt2B,EAObyxB,aAAOzxB,EAAAA,EAOAumB,YAAIvmB,EASJ8xB,aAAO,EAAA9xB,EAgBhB8gC,mBAAa9gC,EAAAA,EAKJ+gC,WAAK,EAAArsC,OAAAC,eAAAs8B,EAAAjxB,GAAAogC,GAAA,CAAAvrC,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAqgC,GAAAxrC,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAsgC,IAAAzrC,UAAA,EAAAC,WAAA,IAcjBkL,EAAKygC,MAAQA,EAEbzgC,EAAK8xB,QAAU,IAAIt9B,EAAa,IAAImG,GAAAA,iBACpCqF,EAAKX,YAAc,IAAI7K,EAAa,IAAImG,GAAAA,iBAExC5F,EAAAk8B,EAAAjxB,GAAAqgC,IAAAA,IAAmB,EACnBtrC,EAAAk8B,EAAAjxB,GAAAsgC,IAAAA,IAAyB,CAAE,EAE3BtgC,EAAKd,GAAKwhC,EAAiBxhC,IAAM,UACjCc,EAAKg3B,QAAU0J,EAAiB1J,QAChCh3B,EAAKg8B,cAAgB,GACrBh8B,EAAK4gC,WAAa,CAAA,EAClB5gC,EAAKs3B,SAAW,GAChBviC,EAAAk8B,EAAAjxB,GAAAogC,IAAAA,IAAqB,GACrBpgC,EAAK6gC,YAAc,CAAA,EACnB7gC,EAAKs2B,OAAS,CAAE,EAChBt2B,EAAKyxB,QAAU,GACfzxB,EAAKumB,KAAOmC,KACZ1oB,EAAK+xB,OAAQ,EACb/xB,EAAK8gC,cAAgB,KAErB9gC,EAAK+gC,MAAQ,CACTC,cAAe,EACfC,SAAU,EACVC,UAAW,EACXC,WAAY,EACZC,UAAW,EACXC,eAAgB,EAChBC,YAAa,EACbC,aAAc,EACdC,YAAa,EACbC,aAAc,GAGlBzhC,EAAKgyB,SAAS0O,GAAkB1gC,CACpC,CAlKoBG,EAAAqgC,EAAA1P,GAkKnB,IAAA97B,EAAAwrC,EAAAvrC,UAkpBA,OAlpBAD,EAeDg9B,SAAA,SAAS0O,GACL,GAAI9rC,KAAKuK,UACL,OAAO,IAAIc,GAAS,yEAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,qEAExB,GAAIygC,EAAiBE,WACjB,IAAK,IAAIvoC,EAAI,EAAG8S,EAAMu1B,EAAiBE,WAAW7oC,OAAQM,EAAI8S,EAAK9S,IAC/DzD,KAAK8sC,eAAehB,EAAiBE,WAAWvoC,IAGxD,GAAIqoC,EAAiBpJ,SACjB,IAAK,IAAIj/B,EAAI,EAAG8S,EAAMu1B,EAAiBpJ,SAASv/B,OAAQM,EAAI8S,EAAK9S,IAC7DzD,KAAK+sC,cAAcjB,EAAiBpJ,SAASj/B,IAGrD,GAAIqoC,EAAiBG,YACjB,IAAK,IAAIxoC,EAAI,EAAG8S,EAAMu1B,EAAiBG,YAAY9oC,OAAQM,EAAI8S,EAAK9S,IAChEzD,KAAKgtC,iBAAiBlB,EAAiBG,YAAYxoC,IAG3D,GAAIqoC,EAAiBpK,OACjB,IAAK,IAAIj+B,EAAI,EAAG8S,EAAMu1B,EAAiBpK,OAAOv+B,OAAQM,EAAI8S,EAAK9S,IAC3DzD,KAAKitC,WAAWnB,EAAiBpK,OAAOj+B,IAGhD,GAAIqoC,EAAiBjP,QACjB,IAAK,IAAIp5B,EAAI,EAAG8S,EAAMu1B,EAAiBjP,QAAQ15B,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAKs9B,aAAawO,EAAiBjP,QAAQp5B,GAGvD,EAACrD,EA0BD8sC,gBAAA,SAAgBC,GACZ,OAAIntC,KAAKuK,cACMc,GAAS,2EAEpBrL,KAAKm9B,MACE,IAAI9xB,GAAS,4EADxB,CAIJ,EAACjL,EAuCD2sC,cAAA,SAAcK,GACV,GAAIptC,KAAKuK,UACL,OAAO,IAAIc,GAAS,yEAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,qEAExB,IAAK+hC,EAAcjK,YAAciK,EAAclK,MAAQkK,EAAchK,QACjE,OAAW,IAAA/3B,GAAS,oIAExB,GAAIrL,KAAK0iC,SAAS0K,EAAc9iC,IAC5B,OAAO,IAAIe,oFAA0F+hC,EAAc9iC,IAEnH8iC,EAAclK,KACEkK,EAAclK,IAAItJ,MAAM,KAAKyT,MAM7CD,EAAcjK,YACdnjC,KAAKmsC,MAAMU,cAAiBO,EAAcjK,UAAUI,MAAQ6J,EAAcjK,UAAUG,OAAS,GAEjG,IAAMgK,EAAU,IAAItK,GAAQoK,GAI5B,OAHAptC,KAAK0iC,SAAS0K,EAAc9iC,IAAMgjC,EAClCntC,EAAIH,KAAAwrC,IAAAA,IAAepoC,KAAKkqC,GACxBttC,KAAKmsC,MAAMO,cACJY,CACX,EAACltC,EA8BD4sC,iBAAA,SAAiBvK,GACb,GAAIziC,KAAKuK,UACL,WAAWc,GAAS,4EAExB,GAAIrL,KAAKm9B,MACL,OAAO,IAAI9xB,GAAS,wEAExB,GAAIrL,KAAKisC,YAAYxJ,EAAiBn4B,IAClC,OAAW,IAAAe,GAAgGo3B,uFAAAA,EAAiBn4B,IAEhI,IAAIq4B,EAQAC,EAQA2K,EAQAzK,EAQAD,EA/BJ,GAAIJ,QAAiB+K,eAA0E,CAE3F,KADA7K,EAAe3iC,KAAK0iC,SAASD,EAAiB+K,iBAE1C,OAAW,IAAAniC,GAAQ,kEAAmEo3B,EAAiB+K,eAC1G,2DACD7K,EAAauB,QAjaH,CAkab,CAED,GAAIzB,QAAiBgL,2BAAkG,CAEnH,KADA7K,EAA2B5iC,KAAK0iC,SAASD,EAAiBgL,6BAEtD,OAAW,IAAApiC,GAAQ,kEAAmEo3B,EAAiBgL,2BAC1G,2DACD7K,EAAyBsB,QAxaF,CAya1B,CAED,GAAIzB,QAAiBiL,iBAA8E,CAE/F,KADAH,EAAiBvtC,KAAK0iC,SAASD,EAAiBiL,mBAE5C,OAAW,IAAAriC,GAAQ,kEAAmEo3B,EAAiBiL,iBAC1G,2DACDH,EAAerJ,QA/aH,CAgbf,CAED,GAAIzB,QAAiBkL,kBAAgF,CAEjG,KADA7K,EAAkB9iC,KAAK0iC,SAASD,EAAiBkL,oBAE7C,WAAWtiC,GAA2Eo3B,kEAAAA,EAAiBkL,kBAAiB,2DAE5H7K,EAAgBoB,QAtbH,CAubhB,CAED,GAAIzB,QAAiBmL,mBAAkF,CAEnG,KADA/K,EAAmB7iC,KAAK0iC,SAASD,EAAiBmL,qBAE9C,WAAWviC,GAA2Eo3B,kEAAAA,EAAiBmL,mBAAkB,2DAE7H/K,EAAiBqB,QA7bH,CA8bjB,CACD,IAAMQ,EAAa,IAAIlC,GAAWC,EAAkB,CAChDK,gBAAAA,EACAD,iBAAAA,EACAD,yBAAAA,EACAD,aAAAA,IAIJ,OAFA3iC,KAAKisC,YAAYxJ,EAAiBn4B,IAAMo6B,EACxC1kC,KAAKmsC,MAAMM,iBACJ/H,CACX,EAACtkC,EAmDD0sC,eAAA,SAAe5F,GACX,GAAIlnC,KAAKuK,UACL,OAAW,IAAAc,GAAS,0EAExB,GAAIrL,KAAKm9B,MACL,OAAO,IAAI9xB,GAAS,sEAExB,IAAK67B,EACD,WAAW77B,GAAS,iFAExB,GAAI67B,QAAe58B,GACf,OAAO,IAAIe,GAAS,mFAExB,IAAMwiC,EAAa3G,EAAe58B,GAClC,GAAItK,KAAKgsC,WAAW6B,GAChB,OAAO,IAAIxiC,uFAA6FwiC,GAE5G,IAAMjN,EAAYsG,EAAetG,UACjC,GAAIA,IAAchzB,IAAmBgzB,IAAc/yB,IAAkB+yB,IAAc9yB,IAAsB8yB,IAAc7yB,IAAkB6yB,IAAc5yB,GACnJ,WAAW3C,GAAuGu1B,8FAAAA,uHAEtH,IAAKsG,EAAexW,UAChB,WAAWrlB,GAAS,sFAExB,IAAK67B,EAAe9P,SAAWwJ,IAAchzB,GACzC,OAAO,IAAIvC,GAAQ,kHAEvB,GAAI67B,EAAe9T,KACX8T,EAAe9T,IAAIjwB,OAAS,GAAM+jC,EAAexW,UAAUvtB,OAAS,EACpE,OAAW,IAAAkI,GAAS,2GAG5B,GAAI67B,EAAe9P,QAEf,IADA,IAAM0W,EAAmB5G,EAAexW,UAAUvtB,OAAS,EAClDM,EAAI,EAAG8S,EAAM2wB,EAAe9P,QAAQj0B,OAAQM,EAAI8S,EAAK9S,IAAK,CAC/D,IAAMsqC,EAAM7G,EAAe9P,QAAQ3zB,GACnC,GAAIsqC,EAAM,GAAKA,GAAOD,EAClB,OAAO,IAAIziC,GAAS,sFAExB,GAAI67B,EAAe9T,MAEX2a,EAAM,GAAKA,GADI7G,EAAe9T,IAAIjwB,OAAS,GAE3C,WAAWkI,GAAS,+EAG/B,CAEL,IAAMg2B,EAAW,IAAIX,GAAmCuG,GAAuBC,IAa/E,OAZAlnC,KAAKgsC,WAAW6B,GAAcxM,EAC9BrhC,KAAKmsC,MAAMC,gBACPlF,EAAe9P,QACXiK,EAAST,YAAc9yB,GACvB9N,KAAKmsC,MAAMQ,cAAgBzF,EAAe9P,QAAQj0B,OAAS,EACpDk+B,EAAST,YAAc/yB,KAC9B7N,KAAKmsC,MAAME,UAAYnF,EAAe9P,QAAQj0B,OAAS,GAEpDk+B,EAAST,YAAchzB,KAC9B5N,KAAKmsC,MAAMK,WAAatF,EAAexW,UAAUvtB,OAAS,GAE9DnD,KAAKmsC,MAAMS,aAAe1F,EAAexW,UAAUvtB,OAAS,EACrDk+B,CACX,EAACjhC,EA4DD4tC,yBAAA,SAAyBC,GACrB,GAAIjuC,KAAKuK,UACL,OAAO,IAAIc,GAAS,kFAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,8EAExB,IAAK4iC,EACD,OAAW,IAAA5iC,GAAS,mGAExB,IAAMwiC,EAAaI,EAAyB3jC,GAC5C,GAAItK,KAAKgsC,WAAW6B,GAChB,OAAW,IAAAxiC,GAAQ,4FAA6FwiC,GAEpH,IAAMjN,EAAYqN,EAAyBrN,UAC3C,GAAIA,IAAchzB,IAAmBgzB,IAAc/yB,IAAkB+yB,IAAc9yB,IAAsB8yB,IAAc7yB,IAAkB6yB,IAAc5yB,GACnJ,OAAW,IAAA3C,GAAyHu1B,gHAAAA,EACvI,qHACD,IAAMS,EAAW,IAAIX,GAASuN,GAG9B,OAFAjuC,KAAKgsC,WAAW6B,GAAcxM,EAC9BrhC,KAAKmsC,MAAMC,gBACJ/K,CACX,EAACjhC,EAyCD6sC,WAAA,SAAWxI,GACP,GAAIzkC,KAAKuK,UACL,OAAW,IAAAc,GAAS,sEAExB,GAAIrL,KAAKm9B,MACL,OAAO,IAAI9xB,GAAS,kEAExB,GAAIrL,KAAK0hC,OAAO+C,EAAWn6B,IACvB,OAAW,IAAAe,GAAQ,2EAA4Eo5B,EAAWn6B,IAE9G,IAAM+2B,EAAWrhC,KAAKgsC,WAAWvH,EAAWoJ,YAC5C,IAAKxM,EACD,OAAO,IAAIh2B,GAAQ,6DAA8Do5B,EAAWoJ,YAEhG,IAAMnJ,EAAaD,EAAWyJ,aAAeluC,KAAKisC,YAAYxH,EAAWyJ,mBAAgB5pB,EACzF,GAAImgB,EAAWyJ,eAAiBxJ,EAC5B,OAAW,IAAAr5B,GAAQ,+DAAgEo5B,EAAWyJ,cAmBlG,IAAM/M,EAAO,IAAIqD,GAAK,CAClBl6B,GAAIm6B,EAAWn6B,GACf+2B,SAAAA,EACAqD,WAAAA,EACApoB,OAAQmoB,EAAWnoB,OACnBsoB,MAAOH,EAAWG,MAClBG,QAASN,EAAWM,QACpBD,UAAWL,EAAWK,UACtBD,SAAUJ,EAAWI,WAIzB,OAFA7kC,KAAK0hC,OAAO+C,EAAWn6B,IAAM62B,EAC7BnhC,KAAKmsC,MAAMG,YACJnL,CACX,EAAC/gC,EAwCDk9B,aAAA,SAAaiB,GACT,GAAIv+B,KAAKuK,UACL,OAAO,IAAIc,GAAS,+DAExB,GAAIrL,KAAKm9B,MACL,OAAW,IAAA9xB,GAAS,yDAExB,GAAoC,IAAhCkzB,EAAa4P,QAAQhrC,OACrB,OAAW,IAAAkI,GAAS,sDAExB,GAAIrL,KAAK6rC,MAAMhP,QAAQ0B,EAAaj0B,IAChC,OAAW,IAAAe,GAAQ,uEAAwEkzB,EAAaj0B,IAI5G,IAFA,IAAM6jC,EAAU5P,EAAa4P,QACvBzM,EAAS,GACN0M,EAAY,EAAGC,EAAYF,EAAQhrC,OAAQirC,EAAYC,EAAWD,IAAa,CACpF,IAAME,EAASH,EAAQC,GACjBjN,EAAOnhC,KAAK0hC,OAAO4M,GACzB,IAAKnN,EACD,OAAW,IAAA91B,GAAQ,kDAAmDijC,GAE1E,GAAInuC,OAAIurC,IAAAA,IAAmB4C,GACvB,OAAW,IAAAjjC,GAAQ,uCAAwCijC,EAC9D,2CACD5M,EAAOt+B,KAAK+9B,GACZhhC,EAAIH,KAAA0rC,IAAAA,IAAmBvK,EAAK72B,KAAM,CACrC,CAOD,IANA,IAAMy3B,EAAc,IAAII,GAAY,CAChC73B,GAAIi0B,EAAaj0B,GACjB83B,QAAS7D,EAAa6D,SAAWpiC,KAAKoiC,QACtC5G,MAAOx7B,KACP0hC,OAAAA,IAEKj+B,EAAI,EAAG8S,EAAMmrB,EAAOv+B,OAAQM,EAAI8S,EAAK9S,IAC7Bi+B,EAAOj+B,GACf66B,OAASyD,EAKlB,OAHA5hC,OAAIsrC,IAAAA,MACJzrC,KAAK68B,QAAQ0B,EAAaj0B,IAAMy3B,EAChC/hC,KAAKmsC,MAAMI,aACJxK,CACX,EAAC3hC,EAwCD69B,MAAA,WAAK,IAAA3U,EAAAtpB,KACD,OAAW,IAAA8mB,QAAoB,SAACC,GAC5B,GAAIuC,EAAK/e,UACL,MAAU,IAAAc,GAAS,6DAEvB,GAAIie,EAAK6T,MACL,UAAU9xB,GAAS,yDAEvBlL,EAAAmpB,EAAIqiB,IAAAA,MAEAriB,EAAK6T,OAAQ,EACb7T,EAAK4T,QAAQz8B,SAAS6oB,EAAM,MAC5BvC,EAAQuC,EAIhB,EACJ,EAACsiB,CAAA,CApzBmB1P,CAAQjyB,IA84B/B,SAAA8hC,KAxFwB,CCz4BsB,IAAAwC,gBAAA5uC,EAAA6uC,iBAAAA,gBAAA7uC,EAAA8uC,mBAAAA,gBAAA9uC,EAAAuiC,UAAAA,gBAAAviC,eAAAsiC,gBAAAtiC,EAAA,QAAA+uC,gBAAA/uC,EAAA,mBAAAgvC,gBAAAhvC,EAO/C,qBAAaivC,gBAAM1S,SAAAA,GAsCf,SAAA0S,IAAA,IAAAxjC,EAauF,OAXnFA,EAAA8wB,EAAAl4B,KAAMhE,KAAA,KAAM,KAAIF,KAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAujC,GAAA,CAAAzuC,MAAA2uC,KAAA/uC,OAAAC,eAAAs8B,EAAAjxB,GAAAsjC,GAAAxuC,CAAAA,MAAA4uC,KAAA1jC,EAlCJ+vB,YAAM,EAAA/vB,EAKNyxB,aAAO,EAAAzxB,EAOP4zB,oBAAc5zB,EAAAA,EAOd6zB,sBAAgBn/B,EAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAmjC,GAAA,CAAAtuC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAojC,GAAAvuC,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAqjC,GAAA,CAAAxuC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA82B,GAAA,CAAAjiC,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA62B,GAAA,CAAAhiC,UAAA,EAAAC,WAAA,IAiB5BC,EAAAk8B,EAAAjxB,GAAA62B,IAAAA,IAAanO,KACb3zB,EAAAk8B,EAAAjxB,GAAA82B,IAAAA,KAAkB,EAElB92B,EAAK+vB,OAAS,CAAA,EACd/vB,EAAKyxB,QAAU,CAAA,EAEf18B,EAAAk8B,EAAAjxB,GAAAmjC,IAAAA,IAAsB,CAAA,EACtBpuC,EAAAk8B,EAAAjxB,GAAAojC,IAAAA,IAAwB,GACxBpjC,EAAK4zB,eAAiB,IAAIp/B,EAAa,IAAImG,GAAeA,iBAC1DqF,EAAK6zB,iBAAmB,IAAIr/B,EAAa,IAAImG,GAAeA,iBAAuBqF,CACvF,CApDeG,EAAAqjC,EAAA1S,GAoDd,IAAA97B,EAAAwuC,EAAAvuC,UA4EA,OA5EAD,EA8FD8+B,YAAA,SAAY4M,GAAkCxiB,IAAAA,EAC1CtpB,KAAA,GAAIA,KAAKuK,UACL,WAAWc,GAAS,2BAExB,IAAMf,EAAKwhC,EAAiBxhC,GAC5B,GAAItK,KAAKm7B,OAAO7wB,GACZ,OAAW,IAAAe,GAAQ,6CAA8Cf,GAErE,IAAMykC,EAAa,IAAInD,GAAW5rC,KAAM8rC,GAWxC,OAVA9rC,KAAKm7B,OAAO7wB,GAAMykC,EAClBA,EAAWtkC,YAAY1J,IAAI,kBAChBuoB,EAAK6R,OAAO4T,EAAWzkC,IAC9BnK,EAAAmpB,EAAIqlB,IAAAA,IAAoBI,GACxBzlB,EAAK2V,iBAAiBx+B,SAAS6oB,EAAMylB,EACzC,GACAA,EAAW7R,QAAQn8B,IAAI,WACnBZ,EAAAmpB,EAAIolB,IAAAA,IAAkBK,GACtBzlB,EAAK0V,eAAev+B,SAAS6oB,EAAMylB,EACvC,GACOA,CACX,EAAC3uC,EAKDkiC,aAAA,WACQniC,EAACH,KAAIkiC,IAAAA,MACL/hC,EAAAH,KAAIkiC,IAAAA,KAAc,EAG1B,EAAC9hC,EAcDa,MAAA,WACI,GAAIjB,KAAKuK,UACL,OAAW,IAAAc,GAAS,2BAExB,IAAK,IAAIf,KAAMtK,KAAKm7B,OAChBn7B,KAAKm7B,OAAO7wB,GAAIW,SAExB,EAAC7K,EAgBD6K,QAAA,WACIjL,KAAKiB,QACLjB,KAAKg/B,eAAe/9B,QACpBjB,KAAKi/B,iBAAiBh+B,QACtBi7B,EAAA77B,UAAM4K,QAAOjH,KACjBhE,KAAA,EAACkB,EAAA0tC,EAAA,CAAA,CAAAztC,IAAA,SAAAC,IAjKD,WACI,GAAAjB,EAAIH,KAAIkiC,IAAAA,IAAa,CACjB,IAAMvQ,EAAO3xB,KAAK2xB,KAClBxxB,EAAIH,KAAAyuC,IAAAA,IAAS,IAAM9c,EAAK,GAAKA,EAAK,IAAM,EACxCxxB,EAAIH,KAAAyuC,IAAAA,IAAS,IAAM9c,EAAK,GAAKA,EAAK,IAAM,EACxCxxB,EAAIH,KAAAyuC,IAAAA,IAAS,IAAM9c,EAAK,GAAKA,EAAK,IAAM,CAC3C,CACD,OAAAxxB,EAAOH,KAAIyuC,IAAAA,GACf,GAAC,CAAAttC,IAAA,OAAAC,IAOD,WACI,GAAAjB,EAAIH,KAAIkiC,IAAAA,IAAa,CACjB,IAMIvQ,EANAI,EAAOrjB,GACPsjB,EAAOtjB,GACPujB,EAAOvjB,GACP6mB,EAAOhnB,GACPinB,EAAOjnB,GACPknB,EAAOlnB,GAELsuB,EAAU78B,KAAK68B,QACjBmS,GAAQ,EACZ,IAAK,IAAMC,KAAYpS,EACfA,EAAQ3xB,eAAe+jC,MAKvBtd,EAJekL,EAAQoS,GAITtd,MACL,GAAKI,IACVA,EAAOJ,EAAK,IAEZA,EAAK,GAAKK,IACVA,EAAOL,EAAK,IAEZA,EAAK,GAAKM,IACVA,EAAON,EAAK,IAEZA,EAAK,GAAK4D,IACVA,EAAO5D,EAAK,IAEZA,EAAK,GAAK6D,IACVA,EAAO7D,EAAK,IAEZA,EAAK,GAAK8D,IACVA,EAAO9D,EAAK,IAEhBqd,GAAQ,GAGXA,IACDjd,GAAQ,IACRC,GAAQ,IACRC,GAAQ,IACRsD,EAAO,IACPC,EAAO,IACPC,EAAO,KAEXt1B,OAAI8hC,IAAAA,IAAO,GAAKlQ,EAChB5xB,EAAIH,KAAAiiC,IAAAA,IAAO,GAAKjQ,EAChB7xB,EAAAH,KAAIiiC,IAAAA,IAAO,GAAKhQ,EAChB9xB,EAAIH,KAAAiiC,IAAAA,IAAO,GAAK1M,EAChBp1B,EAAAH,KAAIiiC,IAAAA,IAAO,GAAKzM,EAChBr1B,EAAIH,KAAAiiC,IAAAA,IAAO,GAAKxM,EAChBt1B,EAAAH,KAAIkiC,IAAAA,KAAc,CACrB,CACD,OAAA/hC,EAAOH,KAAIiiC,IAAAA,GACf,KAAC2M,CAAA,CAhIc1S,CAAQjyB,IA6O1B,SAAA6kC,GAjBoBtT,GACb,IAAMqB,EAAUrB,EAAMqB,QACtB,IAAK,IAAIvyB,KAAMuyB,EAAS,CACpB,IAAMyB,EAASzB,EAAQvyB,GACvBtK,KAAK68B,QAAQyB,EAAOh0B,IAAmBg0B,CAC1C,CACDn+B,EAAIH,KAAAkiC,IAAAA,KAAc,CACtB,CAAC,SAAA2M,GAEkBrT,GACf,IAAMqB,EAAUrB,EAAMqB,QACtB,IAAK,IAAIvyB,KAAMuyB,SAEA78B,KAAC68B,QADGA,EAAQvyB,GACIA,IAE/BnK,EAAAH,KAAIkiC,IAAAA,KAAc,CACtB,kLCrPEgN,GAAkB,IAAIt+B,aAAa,GAAGu+B,gBAAAxvC,EAkE5C,cAAayvC,gBAAO,WAiBhB,SAAAA,EAAYzO,GAAuB7gC,OAAAC,eAAAovC,KAAAA,GAAAjvC,CAAAA,MAAAmvC,KAAArvC,KAZ1BsvC,UAAI,EAAAtvC,KAKJuvC,cAAQ,EAQbvvC,KAAKuvC,UAAW5O,MAAAA,OAAAA,EAAAA,EAAQ4O,WArFN,GAuFlBvvC,KAAKsvC,KAAO,CAER3d,KAAMgP,EAAOhP,KAAK5tB,QAE1B,QAACqrC,EAAA/uC,UAQDmvC,WAAA,SAAW5rB,EAAW+N,GAClBxxB,EAAIH,KAAAmvC,IAAAA,IAAanvC,KAAKsvC,KAAgB,CAAC1rB,KAAAA,GAAO+N,EAAM,EACxD,EAACyd,CAAA,CAlCe,GAsFnB,SAAAC,GAlDeI,EAAgB7rB,EAAgB+N,EAAqBiO,GAC7D,GAAIA,GAAS5/B,KAAKuvC,SAGd,OAFAE,EAAKlsB,MAAQksB,EAAKlsB,OAAS,QAC3BksB,EAAKlsB,MAAMngB,KAAKwgB,GAGpB,GAAI6rB,EAAKr7B,MACD8f,GAAcub,EAAKr7B,KAAKud,KAAMA,GAC9BxxB,EAAIH,KAAAmvC,IAAAA,IAAaM,EAAKr7B,KAAMwP,EAAM+N,EAAMiO,EAAQ,QAIxD,GAAI6P,EAAKp7B,OACD6f,GAAcub,EAAKp7B,MAAMsd,KAAMA,GAC/BxxB,EAAAH,KAAImvC,IAAAA,IAAaM,EAAKp7B,MAAOuP,EAAM+N,EAAMiO,EAAQ,OAFzD,CAMA,IAAM8P,EAAWD,EAAK9d,KACtBud,GAAgB,GAAKQ,EAAS,GAAKA,EAAS,GAC5CR,GAAgB,GAAKQ,EAAS,GAAKA,EAAS,GAC5C,IAAIC,EAAM,EAIV,GAHIT,GAAgB,GAAKA,GAAgBS,KACrCA,EAAM,IAELF,EAAKr7B,KAAM,CACZ,IAAMw7B,EAAWF,EAAS3rC,QAK1B,GAJA6rC,EAASD,EAAM,IAAOD,EAASC,GAAOD,EAASC,EAAM,IAAM,EAC3DF,EAAKr7B,KAAO,CACRud,KAAMie,GAEN1b,GAAc0b,EAAUje,GAExB,YADAxxB,EAAIH,KAAAmvC,IAAAA,IAAaM,EAAKr7B,KAAMwP,EAAM+N,EAAMiO,EAAQ,EAGvD,CACD,IAAK6P,EAAKp7B,MAAO,CACb,IAAMw7B,EAAYH,EAAS3rC,QAK3B,GAJA8rC,EAAUF,IAASD,EAASC,GAAOD,EAASC,EAAM,IAAM,EACxDF,EAAKp7B,MAAQ,CACTsd,KAAMke,GAEN3b,GAAc2b,EAAWle,GAEzB,YADAxxB,EAAIH,KAAAmvC,IAAAA,IAAaM,EAAKp7B,MAAOuP,EAAM+N,EAAMiO,EAAQ,EAGxD,CACD6P,EAAKlsB,MAAQksB,EAAKlsB,OAAS,GAC3BksB,EAAKlsB,MAAMngB,KAAKwgB,EA/Bf,CAgCL,CCrJS,iCAASksB,gBAClB/N,iBAAW,EAAA/hC,KACX83B,cAAQ,EAAA93B,KACR+vC,eAAS,CAAA,+CCWG,SAAkCpP,GAO9C,IAAMqP,EAAW,IAAIZ,GAAQ,CACzBzd,KAAMgP,EAAOsP,iBAGXC,EAAal9B,GAAW2tB,EAAOuP,YAC/BC,EAAan9B,GAAW2tB,EAAOwP,YAC/BrZ,EAAUH,GAAYuZ,EAAYC,GAClCF,EAAiBtP,EAAOsP,eACxBG,EAAezP,EAAOyP,aAE5B,GAAIA,EACA,IAAK,IAAI3sC,EAAI,EAAG8S,EAAM65B,EAAajtC,OAAQM,EAAI8S,EAAK9S,IAChD4sC,EAAkBD,EAAa3sC,IAIvC,SAAS4sC,EAAkBtO,EAA0BuO,QAAAA,IAAAA,IAAAA,EAAqB/Z,IAClE+Z,IAAeha,KACfga,EAAavZ,GAAuBD,EAASiL,EAAYpQ,OAEzD2e,IAAe9Z,IAInBsL,GAAuBC,EAAa,SAACF,GAE7B,IADA,IAAMU,EAAiBV,EAAaU,eAC3B9+B,EAAI,EAAG8S,EAAMgsB,EAAep/B,OAAQM,EAAI8S,EAAK9S,GAAK,EAAG,CAC1D,IAAMq0B,EAAW3oB,KACjB2oB,EAAS,GAAKyK,EAAe9+B,GAC7Bq0B,EAAS,GAAKyK,EAAe9+B,EAAI,GACjCq0B,EAAS,GAAKyK,EAAe9+B,EAAI,GACjCq0B,EAAS,GAAK,EAEVyY,EAAaxO,EAAajK,EAEjC,CACD,OAAO,CACX,EACR,CAEA,SAASyY,EAAaxO,EAA0BjK,GAC5C,IAAM0Y,EAAUrhC,KACVshC,EAAUthC,KACV4gC,EAAY,IAAIjf,YAAY,GAClClW,GAAgBs1B,EAAYpY,EAAU0Y,GACtC51B,GAAgBu1B,EAAYK,EAASC,GACrCV,EAAU,GAAKvmC,KAAKwnB,OAAO,EAAIyf,EAAQ,GAAKA,EAAQ,IAAMR,EAAe,GAAK,GAC9EF,EAAU,GAAKvmC,KAAKwnB,OAAO,EAAIyf,EAAQ,GAAKA,EAAQ,IAAMR,EAAe,GAAK,GAC9ED,EAASR,WAAsB,CAACzN,YAAAA,EAAajK,SAAAA,EAAUiY,UAAAA,GAAY,CAACA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAC5H,CAEA,OAAOC,CACX,kCCxEgB,SAAgCrP,GAY5C,MALqB,EAMzB,GCZMuO,GAAkB,IAAIt+B,aAAa,GAAG8/B,gBAAA/wC,EAAA,QAAAgxC,gBAAAhxC,EAAAixC,YAAAA,gBAAAjxC,EAAA,YAAA8rC,gBAAA9rC,EAAAwvC,cAAAA,gBAAAxvC,EAAA,cAQ/BkxC,gBAYT,WAAA,SAAAA,EAAYlQ,GAAqB7gC,OAAAC,oBAAAovC,GAAA,CAAAjvC,MAAAmvC,KAAAvvC,OAAAC,oBAAA2wC,GAAA,CAAAzwC,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA2wC,GAAA1wC,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA4wC,GAAA3wC,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAyrC,GAAAxrC,CAAAA,UAAAC,EAAAA,eAC7BC,EAAAH,KAAI2wC,IAAAA,WAAahQ,SAAAA,EAAQ4O,WAtBP,GAuBlBpvC,EAAAH,KAAI0wC,IAAAA,IAAS,CACT7qB,MAAO,EACP8L,KAAMgP,EAAOhP,KAAK5tB,SAEtB5D,EAAIH,KAAA4wC,IAAAA,IAAa,CACrB,QAACC,EAAAxwC,UAMDmvC,WAAA,SAAW5rB,EAAW+N,GAClBxxB,EAAAH,KAAImvC,IAAAA,IAAAhvC,EAAaH,KAAI0wC,IAAAA,IAAkB,CAAC7qB,MAAO1lB,EAAAH,KAAIyrC,IAAAA,MAAgB7nB,KAAAA,GAAO+N,EAAM,EACpF,EAACzwB,EAAA2vC,EAAA,CAAA,CAAA1vC,IAAA,OAAAC,IAND,WACI,OAAAjB,EAAOH,KAAI0wC,IAAAA,GACf,KAACG,CAAA,CAXD,GA2EH,SAAAxB,GA1DeI,EAAe7rB,EAAgB+N,EAAuBiO,GAC9D,GAAIA,GAAKz/B,EAAIH,KAAI2wC,IAAAA,IAIb,OAHAlB,EAAKlsB,MAAQksB,EAAKlsB,OAAS,GAC3BksB,EAAKlsB,MAAMngB,KAAKwgB,QAChBuR,GAAYsa,EAAK9d,KAAMA,GAG3B,GAAI8d,EAAKr7B,MACDigB,GAAcob,EAAKr7B,KAAKud,KAAMA,GAC9BxxB,EAAAH,KAAImvC,IAAAA,IAAaM,EAAKr7B,KAAMwP,EAAM+N,EAAMiO,EAAQ,QAIxD,GAAI6P,EAAKp7B,OACDggB,GAAcob,EAAKp7B,MAAMsd,KAAMA,GAC/BxxB,EAAAH,KAAImvC,IAAAA,IAAaM,EAAKp7B,MAAOuP,EAAM+N,EAAMiO,EAAQ,OAFzD,CAMA,IAAM8P,EAAWD,EAAK9d,KACtBud,GAAgB,GAAKQ,EAAS,GAAKA,EAAS,GAC5CR,GAAgB,GAAKQ,EAAS,GAAKA,EAAS,GAC5CR,GAAgB,GAAKQ,EAAS,GAAKA,EAAS,GAC5C,IAAIC,EAAM,EAOV,GANIT,GAAgB,GAAKA,GAAgBS,KACrCA,EAAM,GAENT,GAAgB,GAAKA,GAAgBS,KACrCA,EAAM,IAELF,EAAKr7B,KAAM,CACZ,IAAMw7B,EAAWF,EAAS3rC,QAM1B,GALA6rC,EAASD,EAAM,IAAOD,EAASC,GAAOD,EAASC,EAAM,IAAM,EAC3DF,EAAKr7B,KAAO,CACRyR,MAAO1lB,EAAIH,KAAA4wC,IAAAA,MACXjf,KAAMie,GAENvb,GAAcub,EAAUje,GAExB,YADAxxB,EAAIH,KAAAmvC,IAAAA,IAAaM,EAAKr7B,KAAMwP,EAAM+N,EAAMiO,EAAQ,EAGvD,CACD,IAAK6P,EAAKp7B,MAAO,CACb,IAAMw7B,EAAYH,EAAS3rC,QAM3B,GALA8rC,EAAUF,IAASD,EAASC,GAAOD,EAASC,EAAM,IAAM,EACxDF,EAAKp7B,MAAQ,CACTwR,MAAO1lB,OAAIywC,IAAAA,MACXjf,KAAMke,GAENxb,GAAcwb,EAAWle,GAEzB,YADAxxB,EAAAH,KAAImvC,IAAAA,IAAaM,EAAKp7B,MAAOuP,EAAM+N,EAAMiO,EAAQ,EAGxD,CACD6P,EAAKlsB,MAAQksB,EAAKlsB,OAAS,GAC3BksB,EAAKlsB,MAAMngB,KAAKwgB,GAChBuR,GAAYsa,EAAK9d,KAAMA,EAtCtB,CAuCL,CC/FJ,IAAamf,gBAAoBC,SAAAA,GAAA,SAAAD,IAAA,OAAAC,EAAApuC,MAAA3C,KAAAsE,YAAAtE,IAAA,CAAA,OAAAuL,EAAAulC,EAAAC,GAAAD,CAAA,CAAAC,CAAQF,ICG5BG,yBAAyBD,GAAA,SAAAC,IAAA,OAAAD,EAAApuC,MAAA3C,KAAAsE,YAAAtE,IAAA,CAAA,OAAAuL,EAAAylC,EAAAD,GAAAC,CAAA,EAAQH,ICHjCI,gBAAaF,SAAAA,GAAA,SAAAE,IAAA,OAAAF,EAAApuC,MAAA3C,KAAAsE,YAAAtE,IAAA,CAAA,OAAAuL,EAAA0lC,EAAAF,GAAAE,CAAA,CAAAF,CAAQF,ICE5BK,GAAgB,IAAIld,WAAW,GAwCrC,SAASmd,GAAYzgB,EAA4B7W,EAAWu3B,GACxD,IACMC,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB8X,EAAOuf,GACbvf,EAAK,GAAKA,EAAK,GAJJjB,EAAe,EAAJ7W,GAKtB8X,EAAK,GAAKA,EAAK,GAAK0f,EACpB1f,EAAK,GAAKA,EAAK,GAAK2f,EACpBF,EAAO5B,WAAwB,CAAC31B,EAAAA,GAAI8X,EACxC,CAEA,SAAS4f,GAAW7gB,EAA4B7W,EAAWC,EAAWs3B,GAClE,IAAM57B,EAAKkb,EAAe,EAAJ7W,GAChBw3B,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB23B,EAAK9gB,EAAe,EAAJ5W,GAChB23B,EAAK/gB,EAAe,EAAJ5W,EAAS,GACzB43B,EAAKhhB,EAAe,EAAJ5W,EAAS,GACzB6X,EAAOuf,GACbvf,EAAK,GAAKnoB,KAAKqF,IAAI2G,EAAIg8B,GACvB7f,EAAK,GAAKnoB,KAAKqF,IAAIwiC,EAAII,GACvB9f,EAAK,GAAKnoB,KAAKqF,IAAIyiC,EAAII,GACvB/f,EAAK,GAAKnoB,KAAKsF,IAAI0G,EAAIg8B,GACvB7f,EAAK,GAAKnoB,KAAKsF,IAAIuiC,EAAII,GACvB9f,EAAK,GAAKnoB,KAAKsF,IAAIwiC,EAAII,GACvBN,EAAO5B,WAAuB,CAAC31B,EAAAA,EAAGC,EAAAA,GAAI6X,EAC1C,CAEA,SAASggB,GAAejhB,EAA4B7W,EAAWC,EAAWpE,EAAW07B,GACjF,IAAM57B,EAAKkb,EAAe,EAAJ7W,GAChBw3B,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB23B,EAAK9gB,EAAe,EAAJ5W,GAChB23B,EAAK/gB,EAAe,EAAJ5W,EAAS,GACzB43B,EAAKhhB,EAAe,EAAJ5W,EAAS,GACzB83B,EAAKlhB,EAAe,EAAJhb,GAChBm8B,EAAKnhB,EAAe,EAAJhb,EAAS,GACzBo8B,EAAKphB,EAAe,EAAJhb,EAAS,GACzBic,EAAOuf,GACbvf,EAAK,GAAKnoB,KAAKqF,IAAI2G,EAAIg8B,EAAII,GAC3BjgB,EAAK,GAAKnoB,KAAKqF,IAAIwiC,EAAII,EAAII,GAC3BlgB,EAAK,GAAKnoB,KAAKqF,IAAIyiC,EAAII,EAAII,GAC3BngB,EAAK,GAAKnoB,KAAKsF,IAAI0G,EAAIg8B,EAAII,GAC3BjgB,EAAK,GAAKnoB,KAAKsF,IAAIuiC,EAAII,EAAII,GAC3BlgB,EAAK,GAAKnoB,KAAKsF,IAAIwiC,EAAII,EAAII,GAC3BV,EAAO5B,WAA2B,CAAC31B,EAAAA,EAAGC,EAAAA,EAAGpE,EAAAA,GAAIic,EACjD,QCrEAogB,kGCjBM,SAAoC3B,GAEtC,IADA,IAAMze,EAAOqD,KACJvxB,EAAI,EAAG8S,EAAM65B,EAAajtC,OAAQM,EAAI8S,EAAK9S,IAChD0xB,GAAYxD,EAAMye,EAAa3sC,GAAGkuB,MAGtC,IADA,IAAMyf,EAAS,IAAIN,GAAoB,CAACnf,KAAAA,IAC/BluB,EAAI,EAAG8S,EAAM65B,EAAajtC,OAAQM,EAAI8S,EAAK9S,IAAK,CACrD,IAAMs+B,EAAcqO,EAAa3sC,GACjC2tC,EAAO5B,WAAWzN,EAAaA,EAAYpQ,KAC9C,CACD,OAAOyf,CACX,4DJDM,SAAwChB,GAE1C,IAAMc,EAAgB,IAAIld,WAAW,GAErC,SAASmd,EAAYpP,EAA0BT,EAAgC5Q,EAA4B7W,EAAWu3B,GAClH,IACMC,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB8X,EAAOuf,EACbvf,EAAK,GAAKA,EAAK,GAJJjB,EAAe,EAAJ7W,GAKtB8X,EAAK,GAAKA,EAAK,GAAK0f,EACpB1f,EAAK,GAAKA,EAAK,GAAK2f,EACpBF,EAAO5B,WAA8B,CAACzN,YAAAA,EAAaT,eAAAA,EAAgB0Q,KAAM,CAACn4B,EAAAA,IAAK8X,EACnF,CAEA,SAAS4f,EAAWxP,EAA0BT,EAAgC5Q,EAA4B7W,EAAWC,EAAWs3B,GAC5H,IAAM57B,EAAKkb,EAAe,EAAJ7W,GAChBw3B,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB23B,EAAK9gB,EAAe,EAAJ5W,GAChB23B,EAAK/gB,EAAe,EAAJ5W,EAAS,GACzB43B,EAAKhhB,EAAe,EAAJ5W,EAAS,GACzB6X,EAAOuf,EACbvf,EAAK,GAAKnoB,KAAKqF,IAAI2G,EAAIg8B,GACvB7f,EAAK,GAAKnoB,KAAKqF,IAAIwiC,EAAII,GACvB9f,EAAK,GAAKnoB,KAAKqF,IAAIyiC,EAAII,GACvB/f,EAAK,GAAKnoB,KAAKsF,IAAI0G,EAAIg8B,GACvB7f,EAAK,GAAKnoB,KAAKsF,IAAIuiC,EAAII,GACvB9f,EAAK,GAAKnoB,KAAKsF,IAAIwiC,EAAII,GACvBN,EAAO5B,WAA8B,CAACzN,YAAAA,EAAaT,eAAAA,EAAgB0Q,KAAM,CAACn4B,EAAAA,EAAGC,EAAAA,IAAK6X,EACtF,CAEA,SAASggB,EAAe5P,EAA0BT,EAAgC5Q,EAA4B7W,EAAWC,EAAWpE,EAAW07B,GAC3I,IAAM57B,EAAKkb,EAAe,EAAJ7W,GAChBw3B,EAAK3gB,EAAe,EAAJ7W,EAAS,GACzBy3B,EAAK5gB,EAAe,EAAJ7W,EAAS,GACzB23B,EAAK9gB,EAAe,EAAJ5W,GAChB23B,EAAK/gB,EAAe,EAAJ5W,EAAS,GACzB43B,EAAKhhB,EAAe,EAAJ5W,EAAS,GACzB83B,EAAKlhB,EAAe,EAAJhb,GAChBm8B,EAAKnhB,EAAe,EAAJhb,EAAS,GACzBo8B,EAAKphB,EAAe,EAAJhb,EAAS,GACzBic,EAAOuf,EACbvf,EAAK,GAAKnoB,KAAKqF,IAAI2G,EAAIg8B,EAAII,GAC3BjgB,EAAK,GAAKnoB,KAAKqF,IAAIwiC,EAAII,EAAII,GAC3BlgB,EAAK,GAAKnoB,KAAKqF,IAAIyiC,EAAII,EAAII,GAC3BngB,EAAK,GAAKnoB,KAAKsF,IAAI0G,EAAIg8B,EAAII,GAC3BjgB,EAAK,GAAKnoB,KAAKsF,IAAIuiC,EAAII,EAAII,GAC3BlgB,EAAK,GAAKnoB,KAAKsF,IAAIwiC,EAAII,EAAII,GAC3BV,EAAO5B,WAA8B,CAACzN,YAAAA,EAAaT,eAAAA,EAAgB0Q,KAAM,CAACn4B,EAAAA,EAAGC,EAAAA,EAAGpE,EAAAA,IAAKic,EACzF,CAGA,IADA,IAAMA,EAAOqD,KACJvxB,EAAI,EAAG8S,EAAM65B,EAAajtC,OAAQM,EAAI8S,EAAK9S,IAEhD0xB,GAAYxD,EADOye,EAAa3sC,GACHkuB,MAKjC,IAHA,IAAMyf,EAAS,IAAIJ,GAAyB,CACxCrf,KAAAA,IACDsgB,EAAA,WAEC,IAAMlQ,EAAcqO,EAAa3sC,GACjCq+B,GAAuBC,EAAa,SAACF,GACjC,IACMP,EAAiBO,EAAaP,eAC9BiB,EAAiBV,EAAaU,eAC9BnL,EAAUkK,EAAelK,QAC/B,OAJiByK,EAAaR,SAIbT,WACb,KAAKhzB,GACD,IAAK,IAAIilB,EAAI,EAAGiM,EAAOyD,EAAep/B,OAAS,EAAG0vB,EAAIiM,EAAMjM,IACxDse,EAAYpP,EAAaT,EAAgBiB,EAAgB1P,EAAGue,GAEhE,MACJ,KAAKtjC,GACD,GAAIspB,EACA,IAAK,IAAIvE,EAAI,EAAGiM,EAAO1H,EAAQj0B,OAAQ0vB,EAAIiM,EAAMjM,GAAK,EAClD8e,EAAe5P,EAAaT,EAAgBiB,EAAgBnL,EAAQvE,GAAIuE,EAAQvE,EAAI,GAAIuE,EAAQvE,EAAI,GAAIue,GAGhH,MACJ,KAAKvjC,GACD,GAAIupB,EACA,IAAK,IAAIvE,EAAI,EAAGiM,EAAO1H,EAAQj0B,OAAQ0vB,EAAIiM,EAAMjM,GAAK,EAClD0e,EAAWxP,EAAaT,EAAgBiB,EAAgBnL,EAAQvE,GAAIuE,EAAQvE,EAAI,GAAIue,GAKpG,QAEJ,EACH,EA/BQ3tC,EAAI,EAAG8S,EAAM65B,EAAajtC,OAAQM,EAAI8S,EAAK9S,IAAGwuC,IAgCvD,OAAOb,CACX,8BE5FmCzP,EAAuBjR,EAA4B0G,GAClF,IAAMga,EAAS,IAAIH,GAAa,CAC5Btf,KAAqB0D,GAAmBtB,KAAoBrD,KAGhE,OAAQiR,GACJ,KAAK/zB,GACD,IAAK,IAAInK,EAAI,EAAG8S,EAAMma,EAAUvtB,OAAS,EAAGM,EAAI8S,EAAK9S,IACjD0tC,GAAYzgB,EAAWjtB,EAAG2tC,GAE9B,MACJ,KAAKtjC,GACD,GAAIspB,EACA,IAAK,IAAI3zB,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAChDkuC,GAAejhB,EAAW0G,EAAQ3zB,GAAI2zB,EAAQ3zB,EAAI,GAAI2zB,EAAQ3zB,EAAI,GAAI2tC,GAG9E,MACJ,KAAKvjC,GACD,GAAIupB,EACA,IAAK,IAAI3zB,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,GAAK,EAChD8tC,GAAW7gB,EAAW0G,EAAQ3zB,GAAI2zB,EAAQ3zB,EAAI,GAAI2tC,GAKlE,OAAOA,CACX,wBGlCM,SAAgCzQ,GAKlC,IAEMuR,EAAyB,GAyB/B,OAvBA,SAASvS,EAAM8P,EAAe9sB,GAC1B,GAAIA,IAAU6T,KAGd7T,EAAQwU,QACMX,GAAd,CAGA,IAAMjT,EAAQksB,EAAKlsB,MACnB,GAAIA,GAASA,EAAMpgB,OAAS,EACxB,IAAK,IAAIM,EAAI,EAAG8S,EAAMgN,EAAMpgB,OAAQM,EAAI8S,EAAK9S,IACzCyuC,EAAW9uC,KAAKmgB,EAAM9f,GAAGmgB,MAG7B6rB,EAAKr7B,MACLurB,EAAM8P,EAAKr7B,KAAMuO,GAEjB8sB,EAAKp7B,OACLsrB,EAAM8P,EAAKp7B,MAAOsO,EAXrB,CAaL,CAEAgd,CA1BegB,EAAOyQ,OA0BT9B,KAAM/Y,IACZ2b,CACX,2BCnCM,SAAmCvR,GAIrC,IACM7J,EAAU6J,EAAO7J,QACjBob,EAAyB,GAyB/B,OAvBA,SAASvS,EAAM8P,EAAe9sB,GAC1B,GAAIA,IAAU6T,KAGd7T,EAAQoU,GAAuBD,EAAS2Y,EAAK9d,SAC/B6E,GAAd,CAGA,IAAMjT,EAAQksB,EAAKlsB,MACnB,GAAIA,GAASA,EAAMpgB,OAAS,EACxB,IAAK,IAAIM,EAAI,EAAG8S,EAAMgN,EAAMpgB,OAAQM,EAAI8S,EAAK9S,IACzCyuC,EAAW9uC,KAAKmgB,EAAM9f,GAAGmgB,MAG7B6rB,EAAKr7B,MACLurB,EAAM8P,EAAKr7B,KAAMuO,GAEjB8sB,EAAKp7B,OACLsrB,EAAM8P,EAAKp7B,MAAOsO,EAXrB,CAaL,CAEAgd,CA1BegB,EAAOyQ,OA0BT9B,KAAM/Y,IACZ2b,CACX,gCC9BqCvR,GAMjC,IAGMuR,EAAyB,GA6B/B,OAvBA,SAASvS,EAAM8P,EAAe9sB,GAC1B,GAAIA,IAAU6T,KAGd7T,EANJ,KAOkB6T,GAAd,CAGA,IAAMjT,EAAQksB,EAAKlsB,MACnB,GAAIA,GAASA,EAAMpgB,OAAS,EACxB,IAAK,IAAIM,EAAI,EAAG8S,EAAMgN,EAAMpgB,OAAQM,EAAI8S,EAAK9S,IACzCyuC,EAAW9uC,KAAKmgB,EAAM9f,GAAGmgB,MAG7B6rB,EAAKr7B,MACLurB,EAAM8P,EAAKr7B,KAAMuO,GAEjB8sB,EAAKp7B,OACLsrB,EAAM8P,EAAKp7B,MAAOsO,EAXrB,CAaL,CAEAgd,CA/BegB,EAAOyQ,OA+BT9B,KAAM/Y,IACZ2b,CACX,GCrBaC,GAAmB,KAMnBC,KAASL,GAAA,CAAA,GACjBM,KAAc,cAAaN,GAC3BI,MAAmB,mBAAkBJ,mCAbf,+CAmByB,CAChDM,YApBuB,IAqBvBF,iBAAoBA,KLiHXG,GAAO,KAmBPC,GAAqB,KAgCrBH,KAASL,GAAA,CAAA,GACjBS,KAAS,SAAQT,GACjBU,MAAa,aAAYV,GACzBW,MAAqB,qBAAoBX,GACzCY,MAA4B,4BAA2BZ,GACvDa,MAAa,aAAYb,GACzBc,MAAkB,kBAAiBd,GACnCe,MAAW,WAAUf,GACrBgB,MAAe,eAAchB,GAC7BiB,MAAuB,uBAAsBjB,GAC7CkB,MAA8B,8BAA6BlB,GAC3DmB,MAAoB,oBAAmBnB,GACvCoB,MAAiB,iBAAgBpB,GACjCqB,MAAe,eAAcrB,GAC7BsB,MAAe,eAActB,GAC7BuB,MAAgB,gBAAevB,GAC/BwB,MAAkB,kBAAiBxB,GACnCyB,MAAU,UAASzB,GACnB0B,MAAoB,oBAAmB1B,GACvC2B,MAAa,aAAY3B,GACzB4B,MAA2B,2BAA0B5B,GACrD6B,MAAY,YAAW7B,GACvB8B,MAAuB,uBAAsB9B,GAC7C+B,MAAU,UAAS/B,GACnBO,IAAO,OAAMP,GACbgC,MAAS,SAAQhC,GACjBiC,MAAa,aAAYjC,GACzBQ,MAAqB,qBAAoBR,GAtDL,MAuDR,qBAAoBA,GAChDkC,MAAoB,oBAAmBlC,GACvCmC,MAAkB,kBAAiBnC,GACnCoC,MAAY,YAAWpC,GACvBqC,MAAW,WAAUrC,IAMbsC,GAAuC,CAChD7B,OA3NkB,IA4NlBC,WAvNsB,KAwNtBC,mBAjN8B,KAkN9BC,0BA5MqC,KA6MrCC,WAtMsB,KAuMtBC,gBAlM2B,KAmM3BC,SA7LoB,KA8LpBC,aAxLwB,KAyLxBC,qBAnLgC,KAoLhCC,4BA9KuC,KA+KvCC,kBA1K6B,KA2K7BC,eArK0B,KAsK1BC,aAhKwB,KAiKxBC,aA3JwB,KA4JxBC,cAtJyB,KAuJzBC,gBAjJ2B,KAkJ3BC,QA5ImB,KA6InBC,kBAxI6B,KAyI7BC,WAnIsB,KAoItBC,yBA/HoC,KAgIpCC,UA3HqB,KA4HrBC,qBAzHgC,KA0HhCC,QArHmB,KAsHnBxB,KAAQA,GACRyB,OA5GkB,KA6GlBC,WAvGsB,KAwGtBzB,mBAAsBA,GACtB+B,0BAA6B/B,GAC7B0B,kBAzF6B,KA0F7BC,gBArF2B,KAsF3BC,UAhFqB,KAiFrBC,SA3EoB,0CApLQ,YAKV,eAKI,wBAOQ,+BAMO,gBAOf,qBAKK,cAMP,kBAMI,0BAMQ,iCAMO,uBAKV,oBAMH,kBAMF,kBAMA,mBAMC,qBAME,aAMR,uBAKU,gBAMP,8BAKc,eAKf,0BAGW,aAKb,oBAWD,gBAMI,qDAYe,uBAKR,qBAKF,eAMN,cAMD,oEMnLQ,aAKR,kBAKW,iBAKR,qBAKI,gBAKL,qBAKK,8BAKS,qBAKT,oBAKD,uBAKG,2BAKI,wBAKH,6BAKK,iCAKI,cAKnB,kBAKI,mBAKC,2BAKQ,oBAKP,qBAKC,iBAKJ,6BAKY,kCAKK,gCAKF,qCAKK,cAKvB,mCAKqB,6BAKN,iCAKI,uBAKV,yBAKE,yBAKA,aAKZ,yBAKY,iBAKR,oBAKG,cAKN,eAKC,mBAKI,8BAKW,sBAKR,0BAKI,sBAKJ,8BAKQ,8BAKA,8BAKA,qCAKO,qBAKhB,uBAKE,oBAKH,uBAKG,qBAKF,8BAKS,uBAKP,gCAKS,iBAKf,4BAKW,gCAKI,6BAKH,iCAKI,uBAKV,uBAKA,eAKR,mBAKI,4BAKS,gCAKI,4BAKJ,gCAKI,qBAKX,yBAKI,qBAKJ,yBAKI,uBAKF,2BAKI,6BAKE,6BAKA,wCAKW,0CAKE,oDAKU,0CAKV,oDAKU,6BAKvB,gBAKb,oBAKI,gBAKJ,oBAKI,eAKL,+BAKgB,yBAKN,qBAKJ,yBAKI,uBAKF,gCAKS,oBAKZ,aAKP,iBAKI,kBAKC,sBAKI,4BAKM,eAKb,2BAKY,mBAKR,gCAKa,oCAKI,wBAKZ,gCAKQ,uBAKT,gCAKS,8BAKF,4BAKF,mBAKT,uBAKI,kBAKL,sBAKI,cAKR,yBAKW,gCAKO,2BAKL,oCAKS,gCAKJ,kCAKE,iCAKD,mBAKd,sCAKmB,0CAKI,qCAKL,yCAKI,oCAKL,wCAKI,6BAKX,iCAKI,gBAKjB,6BAKa,gBAKb,mBAKG,uBAKI,4BAKK,sCAKU,mBAKnB,uBAKI,qBAKF,yBAKI,4BAKG,kCAKM,iBAKjB,qBAKI,kBAKH,iBAKD,qBAKI,qBAKA,yBAKI,uBAKF,iBAKN,yBAKQ,6BAKI,oBAKT,wBAKI,cAKV,0BAKY,4BAKE,mBAKT,uBAKI,iCAKU,8BAKH,2BAKH,eAKZ,mBAKI,0BAKO,oBAKN,2BAKO,6BAKE,kBAKX,0BAKQ,8BAKI,mCAKK,uCAKI,4BAKX,mCAKO,uCAKI,4BAKX,gCAKI,gCAKA,oCAKI,yBAKX,2BAKE,4BAKC,wCAKY,0BAKd,aAKb,6BAKgB,4BAKD,yBAKH,kBAKP,iBAKD,mCAKkB,sCAKG,oBAKlB,wBAKI,oBAKJ,wBAKI,qBAKH,yBAKI,aAKZ,kBAKK,iBAKD,0BAKS,8BAKI,kCAKI,sCAKI,kCAKJ,sCAKI,0BAKZ,8BAKI,sBAKR,0BAKI,4BAKE,gCAKI,gBAKhB,0BAKU,wBAKF,4BAKI,yBAKH,6BAKI,wBAKL,oBAKJ,gBAKJ,0BAKU,+BAKK,mCAKI,eAKpB,mBAKI,0BAKO,8BAKI,mBAKX,uBAKI,cAKT,kBAKI,kBAKA,2BAKS,4BAKC,oCAKQ,sCAKE,kCAKJ,0BAKR,sCAKY,+BAKP,wCAKS,0BAKd,iCAKO,aAKpB,8BAKiB,kBAKZ,uBAKK,oBAKH,oBAKA,6BAKS,mCAKM,YAKvB,gBAKI,iBAKC,qBAKI,uBAKE,+BAKQ,kCAKG,sBAKZ,8BAKQ,2BAKH,eAKZ,mBAKI,gCAKa,oCAKI,qCAKC,uBAKd,2BAKI,oBAKP,wBAKI,uBAKD,2BAKI,kBAKT,sBAKI,yBAKG,6BAKI,oBAKT,wBAKI,0BAKE,8BAKI,qBAKT,yBAKI,4BAKG,gCAKI,gBAKhB,oBAKI,0BAKM,8BAKI,kBAKZ,sBAKI,0BAKI,8BAKI,0BAKJ,uCAKa,oCAKH,0CAKM,qBAKrB,aAKR,iBAKI,sBAKK,cAKR,uBAKS,sBAKD,0BAKI,mBAKP,uBAKI,qBAKF,yBAKI,yBAKA,6BAKI,sCAKS,0BAKZ,kCAKQ,oBAKd,wBAKI,0BAKE,kBAKR,4BAKU,iCAKK,yBAKR,oBAKL,wBAKI,sBAKF,0BAKI,gBAKV,aAKH,iBAKI,2BAKU,yBAKF,8BAKK,qBAKT,yBAKI,mCAKU,oBAKf,2BAKO,+BAKI,+BAKA,8BAKD,wBAKN,aAKX,uBAKU,aAKV,yBAKY,0BAKC,sBAKJ,mBAKH,iBAKF,2CAK0B,4BAKf,+BAKG,2BAKJ,yCAKc,sBAKnB,yBAKG,8BAKK,iCAKG,qBAKZ,wBAKG,2BAKG,gCAKK,wCAKQ,mCAKL,2BAKR,6BAKE,gCAKG,wBAKR,2BAKG,+BAKI,sBAKT,0BAKI,eAKX,2BAKY,mBAKR,eAKJ,2BAKY,qBAKN,wBAKG,4BAKI,kBAKV,eAKH,yBAKU,kBAKP,wBAKM,iBAKP,sBAKK,sBAKA,uBAKC,4BAKK,kBAKV,qBAKG,iCAKY,qBAKZ,2BAKM,eAKZ,mBAKI,qBAKE,gCAKW,aAKnB,eAKE,2BAKY,oCAKS,eAKrB,eAKA,8BAKe,gCAKE,yBAKP,+BAKM,aAKlB,iBAKI,oBAKG,wBAKI,oBAKJ,wBAKI,qBAKH,kBAKH,kBAKA,qBAKG,cAKP,cAKA,0BAKY,kBAKR,cAKJ,qBAKO,uBAKE,kCAKW,yBAKT,iBAKR,iBAKA,aAKJ,sBAKS,yBAKG,4BAKG,uBAKL,6BAKM,8BAKC,2BAKH,yBAKF,oCAKW,mCAKD,0BAKT,oCAKU,kBAKlB,sBAKI,gBAKN,gBAKA,+BAKe,8BAKD,mBAKX,0BAKO,gBAKV,qBAKK,0BAKK,uBAKH,qBAKF,iBAKJ,4BAKW,6BAKC,2BAKF,uCAKY,gCAKP,4BAKJ,0BAKF,+BAKK,oBAKX,8BAKU,4BAKF,4BAKA,2BAKD,yBAKF,mCAKU,yBAKV,qCAKY,yCAKI,6BAKZ,cAKf,aAKD,iBAKI,qBAKI,sBAKC,uBAKC,oBAKH,qBAKC,uBAKE,uBAKA,gBAKP,oBAKI,aAKP,mBAKM,uBAKI,iBAKN,sCAKqB,wCAKE,kCAKN,4BAKN,2BAKD,kCAKO,0BAKR,kBAKR,0BAKQ,mCAKS,0CAKO,uBAKnB,2BAKI,2BAKA,+BAKI,wBAKP,4BAKI,sBAKN,mBAKH,0BAKO,4BAKE,0BAKF,kCAKQ,4BAKN,4BAKA,6BAKC,sBAKP,8BAKQ,oCAKM,gCAKJ,8BAKF,6BAKD,8BAKC,qBAKT,oBAKD,4BAKQ,gCAKI,yBAKP,iCAKQ,sCAKK,oCAKF,oCAKA,yCAKK,uCAKF,8BAKT,wBAKN,oBAKJ,sBAKE,mBAKH,2BAKQ,+BAKI,6BAKF,yBAKJ,wBAKD,+BAKO,8BAKD,iBAKb,2BAKU,wCAKa,oBAKpB,6BAKS,yBAKJ,iCAKQ,iCAKA,wBAKT,4CAKoB,uBAKrB,8BAKO,2BAKH,0BAKD,iBAKT,qCAKoB,uCAKE,kCAKL,qBAKb,0BAKK,iCAKO,0BAKP,8BAKI,aAKjB,iBAKI,aAKJ,mCAKsB,yBAKV,6BAKI,uBAKN,kBAKL,uBAKK,0BAKG,uCAKa,eAKxB,mBAKI,sBAKG,0BAKI,oBAKN,mBAKD,4BAKS,+BAKG,uBAKR,+BAKQ,aAKlB,eAKE,aAKF,0BAKa,yBAKD,iBAKR,oCAKmB,oBAKhB,wBAKI,mBAKL,cAKL,oBAKM,wBAKI,kBAKN,uBAKK,2BAKI,gCAKK,oCAKI,oBAKhB,wBAKI,eAKT,yBAKU,sBAKH,0BAKI,cAKZ,oBAKM,wBAKI,kBAKN,yBAKO,2BAKE,gCAKK,6BAKH,sCAKS,8BAKR,kCAKI,8BAKJ,qCAKO,gCAKL,uBAKT,+BAKQ,uBAKR,2BAKI,oCAKS,4BAKR,kCAKM,+BAKH,kCAKG,yCAKO,mDAKU,kCAKjB,yCAKO,6BAKZ,kCAKK,yBAKT,+BAKM,8BAKD,kCAKI,gCAKF,2BAKL,8BAKG,gCAKE,oCAKI,gCAKJ,uCAKO,kCAKL,mBAKf,6BAKU,mBAKV,4BAKS,gCAKI,gBAKhB,gBAKA,qBAKK,mCAKc,uBAKZ,iCAKU,4BAKL,iCAKK,qBAKZ,6BAKQ,+BAKE,8BAKD,4BAKF,iCAKK,uBAKV,uBAKA,uBAKA,gCAKS,qBAKX,wBAKG,4BAKI,eAKb,+BAKgB,mCAKI,cAKrB,oBAKM,iBAKH,aAKJ,iBAKI,aAKJ,iBAKI,0BAKS,iBAKT,uBAKM,eAKR,qBAKM,yBAKI,mBAKN,2BAKQ,wBAKH,oBAKJ,8BAKU,kBAKZ,2BAKS,gCAKK,2BAKL,0BAKD,mCAKS,mBAKhB,sBAKG,0BAKI,mBAKP,mBAKA,wBAKK,sCAKc,+BAKP,wBAKP,oBAKJ,wBAKI,yBAKC,6BAKI,4BAKD,4BAKA,qBAKP,yBAKI,mBAKN,uBAKI,mBAKJ,oBAKC,oBAKA,qBAKC,8BAKS,kCAKI,yBAKT,6BAKI,uBAKN,yBAKE,cAKX,kBAKI,eAKH,eAKA,mBAKI,oBAKC,0BAKM,8BAKI,uBAKP,gCAKS,uBAKT,aAKV,0BAKa,yBAKD,iBAKR,sBAKK,0BAKI,eAKX,+BAKgB,8BAKD,2BAKH,oBAKP,mBAKD,qBAKE,oBAKD,iBAKH,qBAKI,iBAKJ,aAKJ,yBAKY,eAKiB,CAAA,YAOA,CAEnD,GCj0HD,SAASG,GAAOhoB,EAAMioB,EAAa7E,GAE/BA,EAAMA,GAAO,EAEb,IAOI8E,EAAMC,EAAMC,EAAMC,EAAM5jC,EAAGC,EAAG4jC,EAP9BC,EAAWN,GAAeA,EAAYrxC,OACtC4xC,EAAWD,EAAWN,EAAY,GAAK7E,EAAMpjB,EAAKppB,OAClD6xC,EAAYC,GAAW1oB,EAAM,EAAGwoB,EAAUpF,GAAK,GAC/CuF,EAAY,GAEhB,IAAKF,GAAaA,EAAUG,OAASH,EAAUI,KAAM,OAAOF,EAO5D,GAHIJ,IAAUE,EAqPlB,SAAwBzoB,EAAMioB,EAAaQ,EAAWrF,GAClD,IACIlsC,EAAG8S,EAAiBsoB,EADpBpX,EAAQ,GAGZ,IAAKhkB,EAAI,EAAG8S,EAAMi+B,EAAYrxC,OAAQM,EAAI8S,EAAK9S,KAG3Co7B,EAAOoW,GAAW1oB,EAFVioB,EAAY/wC,GAAKksC,EACnBlsC,EAAI8S,EAAM,EAAIi+B,EAAY/wC,EAAI,GAAKksC,EAAMpjB,EAAKppB,OAChBwsC,GAAK,MAC5B9Q,EAAKsW,OAAMtW,EAAKwW,SAAU,GACvC5tB,EAAMrkB,KAAKkyC,GAAYzW,IAM3B,IAHApX,EAAM0hB,KAAKoM,IAGN9xC,EAAI,EAAGA,EAAIgkB,EAAMtkB,OAAQM,IAC1B+xC,GAAc/tB,EAAMhkB,GAAIuxC,GACxBA,EAAYS,GAAaT,EAAWA,EAAUG,MAGlD,OAAOH,CACX,CA1Q8BU,CAAenpB,EAAMioB,EAAaQ,EAAWrF,IAGnEpjB,EAAKppB,OAAS,GAAKwsC,EAAK,CACxB8E,EAAOE,EAAOpoB,EAAK,GACnBmoB,EAAOE,EAAOroB,EAAK,GAEnB,IAAK,IAAI9oB,EAAIksC,EAAKlsC,EAAIsxC,EAAUtxC,GAAKksC,GACjC3+B,EAAIub,EAAK9oB,IAEDgxC,IAAMA,EAAOzjC,IADrBC,EAAIsb,EAAK9oB,EAAI,IAELixC,IAAMA,EAAOzjC,GACjBD,EAAI2jC,IAAMA,EAAO3jC,GACjBC,EAAI2jC,IAAMA,EAAO3jC,GAKzB4jC,EAAsB,KADtBA,EAAUrrC,KAAKsF,IAAI6lC,EAAOF,EAAMG,EAAOF,IACb,EAAIG,EAAU,CAC5C,CAIA,OAFAc,GAAaX,EAAWE,EAAWvF,EAAK8E,EAAMC,EAAMG,GAE7CK,CACX,CAGA,SAASD,GAAW1oB,EAAM3B,EAAOgrB,EAAKjG,EAAKkG,GACvC,IAAIpyC,EAAGqyC,EAEP,GAAID,IAAeE,GAAWxpB,EAAM3B,EAAOgrB,EAAKjG,GAAO,EACnD,IAAKlsC,EAAImnB,EAAOnnB,EAAImyC,EAAKnyC,GAAKksC,EAAKmG,EAAOE,GAAWvyC,EAAG8oB,EAAK9oB,GAAI8oB,EAAK9oB,EAAI,GAAIqyC,QAE9E,IAAKryC,EAAImyC,EAAMjG,EAAKlsC,GAAKmnB,EAAOnnB,GAAKksC,EAAKmG,EAAOE,GAAWvyC,EAAG8oB,EAAK9oB,GAAI8oB,EAAK9oB,EAAI,GAAIqyC,GAQzF,OALIA,GAAQG,GAAOH,EAAMA,EAAKX,QAC1Be,GAAWJ,GACXA,EAAOA,EAAKX,MAGTW,CACX,CAGA,SAASL,GAAa7qB,EAAOgrB,GACzB,IAAKhrB,EAAO,OAAOA,EACdgrB,IAAKA,EAAMhrB,GAEhB,IACIurB,EADAx7B,EAAIiQ,EAER,GAGI,GAFAurB,GAAQ,EAEHx7B,EAAE06B,UAAYY,GAAOt7B,EAAGA,EAAEw6B,OAAqC,IAA5BiB,GAAKz7B,EAAEy6B,KAAMz6B,EAAGA,EAAEw6B,MAOtDx6B,EAAIA,EAAEw6B,SAP8D,CAGpE,GAFAe,GAAWv7B,IACXA,EAAIi7B,EAAMj7B,EAAEy6B,QACFz6B,EAAEw6B,KAAM,MAClBgB,GAAQ,CAEZ,QAGKA,GAASx7B,IAAMi7B,GAExB,OAAOA,CACX,CAGA,SAASD,GAAaU,EAAKnB,EAAWvF,EAAK8E,EAAMC,EAAMG,EAASyB,GAC5D,GAAKD,EAAL,EAGKC,GAAQzB,GAqRjB,SAAoBjqB,EAAO6pB,EAAMC,EAAMG,GACnC,IAAIl6B,EAAIiQ,EACR,GACgB,OAARjQ,EAAEzJ,IAAYyJ,EAAEzJ,EAAIqlC,GAAO57B,EAAE3J,EAAG2J,EAAE1J,EAAGwjC,EAAMC,EAAMG,IACrDl6B,EAAE67B,MAAQ77B,EAAEy6B,KACZz6B,EAAE87B,MAAQ97B,EAAEw6B,KACZx6B,EAAIA,EAAEw6B,WACDx6B,IAAMiQ,GAEfjQ,EAAE67B,MAAMC,MAAQ,KAChB97B,EAAE67B,MAAQ,KAOd,SAAoB3X,GAChB,IAAIp7B,EAAGkX,EAAG/E,EAAGsa,EAAGwmB,EAAMC,EAAWC,EAAOC,EACpCC,EAAS,EAEb,EAAG,CAMC,IALAn8B,EAAIkkB,EACJA,EAAO,KACP6X,EAAO,KACPC,EAAY,EAELh8B,GAAG,CAIN,IAHAg8B,IACA/gC,EAAI+E,EACJi8B,EAAQ,EACHnzC,EAAI,EAAGA,EAAIqzC,IACZF,IACAhhC,EAAIA,EAAE6gC,OAFchzC,KAOxB,IAFAozC,EAAQC,EAEDF,EAAQ,GAAMC,EAAQ,GAAKjhC,GAEhB,IAAVghC,IAA0B,IAAVC,IAAgBjhC,GAAK+E,EAAEzJ,GAAK0E,EAAE1E,IAC9Cgf,EAAIvV,EACJA,EAAIA,EAAE87B,MACNG,MAEA1mB,EAAIta,EACJA,EAAIA,EAAE6gC,MACNI,KAGAH,EAAMA,EAAKD,MAAQvmB,EAClB2O,EAAO3O,EAEZA,EAAEsmB,MAAQE,EACVA,EAAOxmB,EAGXvV,EAAI/E,CACR,CAEA8gC,EAAKD,MAAQ,KACbK,GAAU,CAEd,OAASH,EAAY,EAGzB,CAtDII,CAAWp8B,EACf,CAlS0Bq8B,CAAWX,EAAK5B,EAAMC,EAAMG,GAMlD,IAJA,IACIO,EAAMD,EADN8B,EAAOZ,EAIJA,EAAIjB,OAASiB,EAAIlB,MAIpB,GAHAC,EAAOiB,EAAIjB,KACXD,EAAOkB,EAAIlB,KAEPN,EAAUqC,GAAYb,EAAK5B,EAAMC,EAAMG,GAAWsC,GAAMd,GAExDnB,EAAU9xC,KAAKgyC,EAAK3xC,EAAIksC,GACxBuF,EAAU9xC,KAAKizC,EAAI5yC,EAAIksC,GACvBuF,EAAU9xC,KAAK+xC,EAAK1xC,EAAIksC,GAExBuG,GAAWG,GAGXA,EAAMlB,EAAKA,KACX8B,EAAO9B,EAAKA,UAQhB,IAHAkB,EAAMlB,KAGM8B,EAAM,CAETX,EAIe,IAATA,EAEPX,GADAU,EAAMe,GAAuB3B,GAAaY,GAAMnB,EAAWvF,GACzCuF,EAAWvF,EAAK8E,EAAMC,EAAMG,EAAS,GAGvC,IAATyB,GACPe,GAAYhB,EAAKnB,EAAWvF,EAAK8E,EAAMC,EAAMG,GAT7Cc,GAAaF,GAAaY,GAAMnB,EAAWvF,EAAK8E,EAAMC,EAAMG,EAAS,GAYzE,KACJ,CA5CJ,CA8CJ,CAGA,SAASsC,GAAMd,GACX,IAAIx8B,EAAIw8B,EAAIjB,KACRt7B,EAAIu8B,EACJ3gC,EAAI2gC,EAAIlB,KAEZ,GAAIiB,GAAKv8B,EAAGC,EAAGpE,IAAM,EAAG,OAAO,EAK/B,IAFA,IAAIiF,EAAI07B,EAAIlB,KAAKA,KAEVx6B,IAAM07B,EAAIjB,MAAM,CACnB,GAAIkC,GAAgBz9B,EAAE7I,EAAG6I,EAAE5I,EAAG6I,EAAE9I,EAAG8I,EAAE7I,EAAGyE,EAAE1E,EAAG0E,EAAEzE,EAAG0J,EAAE3J,EAAG2J,EAAE1J,IACrDmlC,GAAKz7B,EAAEy6B,KAAMz6B,EAAGA,EAAEw6B,OAAS,EAAG,OAAY,EAC9Cx6B,EAAIA,EAAEw6B,IACV,CAEA,OACJ,CAAA,CAEA,SAAS+B,GAAYb,EAAK5B,EAAMC,EAAMG,GAClC,IAAIh7B,EAAIw8B,EAAIjB,KACRt7B,EAAIu8B,EACJ3gC,EAAI2gC,EAAIlB,KAEZ,GAAIiB,GAAKv8B,EAAGC,EAAGpE,IAAM,EAAG,OAAO,EAgB/B,IAbA,IAEI6hC,EAAQ19B,EAAE7I,EAAI8I,EAAE9I,EAAK6I,EAAE7I,EAAI0E,EAAE1E,EAAI6I,EAAE7I,EAAI0E,EAAE1E,EAAM8I,EAAE9I,EAAI0E,EAAE1E,EAAI8I,EAAE9I,EAAI0E,EAAE1E,EACnEwmC,EAAQ39B,EAAE5I,EAAI6I,EAAE7I,EAAK4I,EAAE5I,EAAIyE,EAAEzE,EAAI4I,EAAE5I,EAAIyE,EAAEzE,EAAM6I,EAAE7I,EAAIyE,EAAEzE,EAAI6I,EAAE7I,EAAIyE,EAAEzE,EAGnEwmC,EAAOlB,GANC18B,EAAE7I,EAAI8I,EAAE9I,EAAK6I,EAAE7I,EAAI0E,EAAE1E,EAAI6I,EAAE7I,EAAI0E,EAAE1E,EAAM8I,EAAE9I,EAAI0E,EAAE1E,EAAI8I,EAAE9I,EAAI0E,EAAE1E,EAC3D6I,EAAE5I,EAAI6I,EAAE7I,EAAK4I,EAAE5I,EAAIyE,EAAEzE,EAAI4I,EAAE5I,EAAIyE,EAAEzE,EAAM6I,EAAE7I,EAAIyE,EAAEzE,EAAI6I,EAAE7I,EAAIyE,EAAEzE,EAKvCwjC,EAAMC,EAAMG,GACxC6C,EAAOnB,GAAOgB,EAAOC,EAAO/C,EAAMC,EAAMG,GAExCl6B,EAAI07B,EAAIG,MACR7mB,EAAI0mB,EAAII,MAGL97B,GAAKA,EAAEzJ,GAAKumC,GAAQ9nB,GAAKA,EAAEze,GAAKwmC,GAAM,CACzC,GAAI/8B,IAAM07B,EAAIjB,MAAQz6B,IAAM07B,EAAIlB,MAC5BmC,GAAgBz9B,EAAE7I,EAAG6I,EAAE5I,EAAG6I,EAAE9I,EAAG8I,EAAE7I,EAAGyE,EAAE1E,EAAG0E,EAAEzE,EAAG0J,EAAE3J,EAAG2J,EAAE1J,IACrDmlC,GAAKz7B,EAAEy6B,KAAMz6B,EAAGA,EAAEw6B,OAAS,EAAG,OAAO,EAGzC,GAFAx6B,EAAIA,EAAE67B,MAEF7mB,IAAM0mB,EAAIjB,MAAQzlB,IAAM0mB,EAAIlB,MAC5BmC,GAAgBz9B,EAAE7I,EAAG6I,EAAE5I,EAAG6I,EAAE9I,EAAG8I,EAAE7I,EAAGyE,EAAE1E,EAAG0E,EAAEzE,EAAG0e,EAAE3e,EAAG2e,EAAE1e,IACrDmlC,GAAKzmB,EAAEylB,KAAMzlB,EAAGA,EAAEwlB,OAAS,EAAG,OAAY,EAC9CxlB,EAAIA,EAAE8mB,KACV,CAGA,KAAO97B,GAAKA,EAAEzJ,GAAKumC,GAAM,CACrB,GAAI98B,IAAM07B,EAAIjB,MAAQz6B,IAAM07B,EAAIlB,MAC5BmC,GAAgBz9B,EAAE7I,EAAG6I,EAAE5I,EAAG6I,EAAE9I,EAAG8I,EAAE7I,EAAGyE,EAAE1E,EAAG0E,EAAEzE,EAAG0J,EAAE3J,EAAG2J,EAAE1J,IACrDmlC,GAAKz7B,EAAEy6B,KAAMz6B,EAAGA,EAAEw6B,OAAS,EAAG,SAClCx6B,EAAIA,EAAE67B,KACV,CAGA,KAAO7mB,GAAKA,EAAEze,GAAKwmC,GAAM,CACrB,GAAI/nB,IAAM0mB,EAAIjB,MAAQzlB,IAAM0mB,EAAIlB,MAC5BmC,GAAgBz9B,EAAE7I,EAAG6I,EAAE5I,EAAG6I,EAAE9I,EAAG8I,EAAE7I,EAAGyE,EAAE1E,EAAG0E,EAAEzE,EAAG0e,EAAE3e,EAAG2e,EAAE1e,IACrDmlC,GAAKzmB,EAAEylB,KAAMzlB,EAAGA,EAAEwlB,OAAS,EAAG,OAAO,EACzCxlB,EAAIA,EAAE8mB,KACV,CAEA,OAAO,CACX,CAGA,SAASW,GAAuBxsB,EAAOsqB,EAAWvF,GAC9C,IAAIh1B,EAAIiQ,EACR,EAAG,CACC,IAAI/Q,EAAIc,EAAEy6B,KACNt7B,EAAIa,EAAEw6B,KAAKA,MAEVc,GAAOp8B,EAAGC,IAAMw2B,GAAWz2B,EAAGc,EAAGA,EAAEw6B,KAAMr7B,IAAM69B,GAAc99B,EAAGC,IAAM69B,GAAc79B,EAAGD,KAExFq7B,EAAU9xC,KAAKyW,EAAEpW,EAAIksC,GACrBuF,EAAU9xC,KAAKuX,EAAElX,EAAIksC,GACrBuF,EAAU9xC,KAAK0W,EAAErW,EAAIksC,GAGrBuG,GAAWv7B,GACXu7B,GAAWv7B,EAAEw6B,MAEbx6B,EAAIiQ,EAAQ9Q,GAEhBa,EAAIA,EAAEw6B,IACV,OAASx6B,IAAMiQ,GAEf,OAAO6qB,GAAa96B,EACxB,CAGA,SAAS08B,GAAYzsB,EAAOsqB,EAAWvF,EAAK8E,EAAMC,EAAMG,GAEpD,IAAIh7B,EAAI+Q,EACR,EAAG,CAEC,IADA,IAAI9Q,EAAID,EAAEs7B,KAAKA,KACRr7B,IAAMD,EAAEu7B,MAAM,CACjB,GAAIv7B,EAAEpW,IAAMqW,EAAErW,GAAKm0C,GAAgB/9B,EAAGC,GAAI,CAEtC,IAAIpE,EAAImiC,GAAah+B,EAAGC,GASxB,OANAD,EAAI47B,GAAa57B,EAAGA,EAAEs7B,MACtBz/B,EAAI+/B,GAAa//B,EAAGA,EAAEy/B,MAGtBQ,GAAa97B,EAAGq7B,EAAWvF,EAAK8E,EAAMC,EAAMG,QAC5Cc,GAAajgC,EAAGw/B,EAAWvF,EAAK8E,EAAMC,EAAMG,EAEhD,CACA/6B,EAAIA,EAAEq7B,IACV,CACAt7B,EAAIA,EAAEs7B,IACV,OAASt7B,IAAM+Q,EACnB,CA0BA,SAAS2qB,GAAS17B,EAAGC,GACjB,OAAOD,EAAE7I,EAAI8I,EAAE9I,CACnB,CAGA,SAASwkC,GAAcsC,EAAM9C,GAEzB,GADAA,EAWJ,SAAwB8C,EAAM9C,GAC1B,IAIIpiC,EAJA+H,EAAIq6B,EACJ+C,EAAKD,EAAK9mC,EACVgnC,EAAKF,EAAK7mC,EACVmQ,GAAM62B,SAKV,EAAG,CACC,GAAID,GAAMr9B,EAAE1J,GAAK+mC,GAAMr9B,EAAEw6B,KAAKlkC,GAAK0J,EAAEw6B,KAAKlkC,IAAM0J,EAAE1J,EAAG,CACjD,IAAID,EAAI2J,EAAE3J,GAAKgnC,EAAKr9B,EAAE1J,IAAM0J,EAAEw6B,KAAKnkC,EAAI2J,EAAE3J,IAAM2J,EAAEw6B,KAAKlkC,EAAI0J,EAAE1J,GAC5D,GAAID,GAAK+mC,GAAM/mC,EAAIoQ,EAAI,CAEnB,GADAA,EAAKpQ,EACDA,IAAM+mC,EAAI,CACV,GAAIC,IAAOr9B,EAAE1J,EAAG,OAAO0J,EACvB,GAAIq9B,IAAOr9B,EAAEw6B,KAAKlkC,EAAG,OAAO0J,EAAEw6B,IAClC,CACAviC,EAAI+H,EAAE3J,EAAI2J,EAAEw6B,KAAKnkC,EAAI2J,EAAIA,EAAEw6B,IAC/B,CACJ,CACAx6B,EAAIA,EAAEw6B,IACV,OAASx6B,IAAMq6B,GAEf,IAAKpiC,EAAG,OAAO,KAEf,GAAImlC,IAAO32B,EAAI,OAAOxO,EAMtB,IAIIc,EAJAujC,EAAOrkC,EACPslC,EAAKtlC,EAAE5B,EACPmnC,EAAKvlC,EAAE3B,EACPmnC,EAASH,SAGbt9B,EAAI/H,EAEJ,GACQmlC,GAAMp9B,EAAE3J,GAAK2J,EAAE3J,GAAKknC,GAAMH,IAAOp9B,EAAE3J,GACnCsmC,GAAgBU,EAAKG,EAAKJ,EAAK32B,EAAI42B,EAAIE,EAAIC,EAAIH,EAAKG,EAAK/2B,EAAK22B,EAAIC,EAAIr9B,EAAE3J,EAAG2J,EAAE1J,KAE7EyC,EAAMlK,KAAKuU,IAAIi6B,EAAKr9B,EAAE1J,IAAM8mC,EAAKp9B,EAAE3J,GAE/B2mC,GAAch9B,EAAGm9B,KAChBpkC,EAAM0kC,GAAW1kC,IAAQ0kC,IAAWz9B,EAAE3J,EAAI4B,EAAE5B,GAAM2J,EAAE3J,IAAM4B,EAAE5B,GAAKqnC,GAAqBzlC,EAAG+H,OAC1F/H,EAAI+H,EACJy9B,EAAS1kC,IAIjBiH,EAAIA,EAAEw6B,WACDx6B,IAAMs8B,GAEf,OAAOrkC,CACX,CApEgB0lC,CAAeR,EAAM9C,GAC7BA,EAAW,CACX,IAAIl7B,EAAI+9B,GAAa7C,EAAW8C,GAGhCrC,GAAaT,EAAWA,EAAUG,MAClCM,GAAa37B,EAAGA,EAAEq7B,KACtB,CACJ,CA+DA,SAASkD,GAAqBzlC,EAAG+H,GAC7B,OAAOy7B,GAAKxjC,EAAEwiC,KAAMxiC,EAAG+H,EAAEy6B,MAAQ,GAAKgB,GAAKz7B,EAAEw6B,KAAMviC,EAAGA,EAAEuiC,MAAQ,CACpE,CAwEA,SAASoB,GAAOvlC,EAAGC,EAAGwjC,EAAMC,EAAMG,GAe9B,OAPA7jC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAHrBA,EAAI,OAASA,EAAIyjC,GAAQI,GAGf7jC,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKfC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAPrBA,EAAI,OAASA,EAAIyjC,GAAQG,GAOf5jC,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEE,CACrB,CAGA,SAASqkC,GAAY1qB,GACjB,IAAIjQ,EAAIiQ,EACJ2tB,EAAW3tB,EACf,IACQjQ,EAAE3J,EAAIunC,EAASvnC,GAAM2J,EAAE3J,IAAMunC,EAASvnC,GAAK2J,EAAE1J,EAAIsnC,EAAStnC,KAAIsnC,EAAW59B,GAC7EA,EAAIA,EAAEw6B,WACDx6B,IAAMiQ,GAEf,OAAO2tB,CACX,CAGA,SAASjB,GAAgB9hC,EAAI67B,EAAIG,EAAIC,EAAIG,EAAIC,EAAI2G,EAAIC,GACjD,OAAQ7G,EAAK4G,IAAOnH,EAAKoH,IAAOjjC,EAAKgjC,IAAO3G,EAAK4G,IAAO,IACnDjjC,EAAKgjC,IAAO/G,EAAKgH,IAAOjH,EAAKgH,IAAOnH,EAAKoH,IAAO,IAChDjH,EAAKgH,IAAO3G,EAAK4G,IAAO7G,EAAK4G,IAAO/G,EAAKgH,IAAO,CACzD,CAGA,SAASb,GAAgB/9B,EAAGC,GACxB,OAAOD,EAAEs7B,KAAK1xC,IAAMqW,EAAErW,GAAKoW,EAAEu7B,KAAK3xC,IAAMqW,EAAErW,IA2C9C,SAA2BoW,EAAGC,GAC1B,IAAIa,EAAId,EACR,EAAG,CACC,GAAIc,EAAElX,IAAMoW,EAAEpW,GAAKkX,EAAEw6B,KAAK1xC,IAAMoW,EAAEpW,GAAKkX,EAAElX,IAAMqW,EAAErW,GAAKkX,EAAEw6B,KAAK1xC,IAAMqW,EAAErW,GACjE6sC,GAAW31B,EAAGA,EAAEw6B,KAAMt7B,EAAGC,GAAI,OAAO,EACxCa,EAAIA,EAAEw6B,IACV,OAASx6B,IAAMd,GAEf,OACJ,CAAA,CApDoD6+B,CAAkB7+B,EAAGC,KAChE69B,GAAc99B,EAAGC,IAAM69B,GAAc79B,EAAGD,IA6DjD,SAAsBA,EAAGC,GACrB,IAAIa,EAAId,EACJ8+B,GAAS,EACTH,GAAM3+B,EAAE7I,EAAI8I,EAAE9I,GAAK,EACnBynC,GAAM5+B,EAAE5I,EAAI6I,EAAE7I,GAAK,EACvB,GACU0J,EAAE1J,EAAIwnC,GAAS99B,EAAEw6B,KAAKlkC,EAAIwnC,GAAQ99B,EAAEw6B,KAAKlkC,IAAM0J,EAAE1J,GAClDunC,GAAM79B,EAAEw6B,KAAKnkC,EAAI2J,EAAE3J,IAAMynC,EAAK99B,EAAE1J,IAAM0J,EAAEw6B,KAAKlkC,EAAI0J,EAAE1J,GAAK0J,EAAE3J,IAC3D2nC,GAAUA,GACdh+B,EAAIA,EAAEw6B,WACDx6B,IAAMd,GAEf,OAAO8+B,CACX,CA1EuDC,CAAa/+B,EAAGC,KAC1Ds8B,GAAKv8B,EAAEu7B,KAAMv7B,EAAGC,EAAEs7B,OAASgB,GAAKv8B,EAAGC,EAAEs7B,KAAMt7B,KAC5Cm8B,GAAOp8B,EAAGC,IAAMs8B,GAAKv8B,EAAEu7B,KAAMv7B,EAAGA,EAAEs7B,MAAQ,GAAKiB,GAAKt8B,EAAEs7B,KAAMt7B,EAAGA,EAAEq7B,MAAQ,EACrF,CAGA,SAASiB,GAAKz7B,EAAG/E,EAAG6K,GAChB,OAAQ7K,EAAE3E,EAAI0J,EAAE1J,IAAMwP,EAAEzP,EAAI4E,EAAE5E,IAAM4E,EAAE5E,EAAI2J,EAAE3J,IAAMyP,EAAExP,EAAI2E,EAAE3E,EAC9D,CAGA,SAASglC,GAAO5jC,EAAIC,GAChB,OAAOD,EAAGrB,IAAMsB,EAAGtB,GAAKqB,EAAGpB,IAAMqB,EAAGrB,CACxC,CAGA,SAASq/B,GAAWj+B,EAAI4O,EAAI3O,EAAI4O,GAC5B,IAAI23B,EAAKC,GAAK1C,GAAK/jC,EAAI4O,EAAI3O,IACvB6c,EAAK2pB,GAAK1C,GAAK/jC,EAAI4O,EAAIC,IACvB63B,EAAKD,GAAK1C,GAAK9jC,EAAI4O,EAAI7O,IACvB2mC,EAAKF,GAAK1C,GAAK9jC,EAAI4O,EAAID,IAE3B,OAAI43B,IAAO1pB,GAAM4pB,IAAOC,KAEb,IAAPH,IAAYI,GAAU5mC,EAAIC,EAAI2O,OACvB,IAAPkO,IAAY8pB,GAAU5mC,EAAI6O,EAAID,OACvB,IAAP83B,IAAYE,GAAU3mC,EAAID,EAAI6O,OACvB,IAAP83B,IAAYC,GAAU3mC,EAAI2O,EAAIC,GAGtC,CAGA,SAAS+3B,GAAUt+B,EAAG/E,EAAG6K,GACrB,OAAO7K,EAAE5E,GAAKxH,KAAKsF,IAAI6L,EAAE3J,EAAGyP,EAAEzP,IAAM4E,EAAE5E,GAAKxH,KAAKqF,IAAI8L,EAAE3J,EAAGyP,EAAEzP,IAAM4E,EAAE3E,GAAKzH,KAAKsF,IAAI6L,EAAE1J,EAAGwP,EAAExP,IAAM2E,EAAE3E,GAAKzH,KAAKqF,IAAI8L,EAAE1J,EAAGwP,EAAExP,EACzH,CAEA,SAAS6nC,GAAKpmB,GACV,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAK,EAAI,CACxC,CAeA,SAASilB,GAAc99B,EAAGC,GACtB,OAAOs8B,GAAKv8B,EAAEu7B,KAAMv7B,EAAGA,EAAEs7B,MAAQ,EAC7BiB,GAAKv8B,EAAGC,EAAGD,EAAEs7B,OAAS,GAAKiB,GAAKv8B,EAAGA,EAAEu7B,KAAMt7B,IAAM,EACjDs8B,GAAKv8B,EAAGC,EAAGD,EAAEu7B,MAAQ,GAAKgB,GAAKv8B,EAAGA,EAAEs7B,KAAMr7B,GAAK,CACvD,CAoBA,SAAS+9B,GAAah+B,EAAGC,GACrB,IAAIo/B,EAAK,IAAIC,GAAKt/B,EAAEpW,EAAGoW,EAAE7I,EAAG6I,EAAE5I,GAC1BmoC,EAAK,IAAID,GAAKr/B,EAAErW,EAAGqW,EAAE9I,EAAG8I,EAAE7I,GAC1BooC,EAAKx/B,EAAEs7B,KACPmE,EAAKx/B,EAAEs7B,KAcX,OAZAv7B,EAAEs7B,KAAOr7B,EACTA,EAAEs7B,KAAOv7B,EAETq/B,EAAG/D,KAAOkE,EACVA,EAAGjE,KAAO8D,EAEVE,EAAGjE,KAAO+D,EACVA,EAAG9D,KAAOgE,EAEVE,EAAGnE,KAAOiE,EACVA,EAAGhE,KAAOkE,EAEHF,CACX,CAGA,SAASpD,GAAWvyC,EAAGuN,EAAGC,EAAG6kC,GACzB,IAAIn7B,EAAI,IAAIw+B,GAAK11C,EAAGuN,EAAGC,GAYvB,OAVK6kC,GAKDn7B,EAAEw6B,KAAOW,EAAKX,KACdx6B,EAAEy6B,KAAOU,EACTA,EAAKX,KAAKC,KAAOz6B,EACjBm7B,EAAKX,KAAOx6B,IAPZA,EAAEy6B,KAAOz6B,EACTA,EAAEw6B,KAAOx6B,GAQNA,CACX,CAEA,SAASu7B,GAAWv7B,GAChBA,EAAEw6B,KAAKC,KAAOz6B,EAAEy6B,KAChBz6B,EAAEy6B,KAAKD,KAAOx6B,EAAEw6B,KAEZx6B,EAAE67B,QAAO77B,EAAE67B,MAAMC,MAAQ97B,EAAE87B,OAC3B97B,EAAE87B,QAAO97B,EAAE87B,MAAMD,MAAQ77B,EAAE67B,MACnC,CAEA,SAAS2C,GAAK11C,EAAGuN,EAAGC,GAEhBjR,KAAKyD,EAAIA,EAGTzD,KAAKgR,EAAIA,EACThR,KAAKiR,EAAIA,EAGTjR,KAAKo1C,KAAO,KACZp1C,KAAKm1C,KAAO,KAGZn1C,KAAKkR,EAAI,KAGTlR,KAAKw2C,MAAQ,KACbx2C,KAAKy2C,MAAQ,KAGbz2C,KAAKq1C,SAAU,CACnB,CA+BA,SAASU,GAAWxpB,EAAM3B,EAAOgrB,EAAKjG,GAElC,IADA,IAAI4J,EAAM,EACD91C,EAAImnB,EAAOiI,EAAI+iB,EAAMjG,EAAKlsC,EAAImyC,EAAKnyC,GAAKksC,EAC7C4J,IAAQhtB,EAAKsG,GAAKtG,EAAK9oB,KAAO8oB,EAAK9oB,EAAI,GAAK8oB,EAAKsG,EAAI,IACrDA,EAAIpvB,EAER,OAAO81C,CACX,CAlCAhF,GAAOiF,UAAY,SAAUjtB,EAAMioB,EAAa7E,EAAKuF,GACjD,IAAIJ,EAAWN,GAAeA,EAAYrxC,OAGtCs2C,EAAcjwC,KAAKuU,IAAIg4B,GAAWxpB,EAAM,EAF7BuoB,EAAWN,EAAY,GAAK7E,EAAMpjB,EAAKppB,OAEGwsC,IACzD,GAAImF,EACA,IAAK,IAAIrxC,EAAI,EAAG8S,EAAMi+B,EAAYrxC,OAAQM,EAAI8S,EAAK9S,IAG/Cg2C,GAAejwC,KAAKuU,IAAIg4B,GAAWxpB,EAFvBioB,EAAY/wC,GAAKksC,EACnBlsC,EAAI8S,EAAM,EAAIi+B,EAAY/wC,EAAI,GAAKksC,EAAMpjB,EAAKppB,OACHwsC,IAI7D,IAAI+J,EAAgB,EACpB,IAAKj2C,EAAI,EAAGA,EAAIyxC,EAAU/xC,OAAQM,GAAK,EAAG,CACtC,IAAIoW,EAAIq7B,EAAUzxC,GAAKksC,EACnB71B,EAAIo7B,EAAUzxC,EAAI,GAAKksC,EACvBj6B,EAAIw/B,EAAUzxC,EAAI,GAAKksC,EAC3B+J,GAAiBlwC,KAAKuU,KACjBwO,EAAK1S,GAAK0S,EAAK7W,KAAO6W,EAAKzS,EAAI,GAAKyS,EAAK1S,EAAI,KAC7C0S,EAAK1S,GAAK0S,EAAKzS,KAAOyS,EAAK7W,EAAI,GAAK6W,EAAK1S,EAAI,IACtD,CAEA,OAAuB,IAAhB4/B,GAAuC,IAAlBC,EAAsB,EAC9ClwC,KAAKuU,KAAK27B,EAAgBD,GAAeA,EACjD,EAYAlF,GAAOoF,QAAU,SAAUptB,GAKvB,IAJA,IAAIojB,EAAMpjB,EAAK,GAAG,GAAGppB,OACjBkC,EAAS,CAACu0C,SAAU,GAAIC,MAAO,GAAIC,WAAYnK,GAC/CoK,EAAY,EAEPt2C,EAAI,EAAGA,EAAI8oB,EAAKppB,OAAQM,IAAK,CAClC,IAAK,IAAIovB,EAAI,EAAGA,EAAItG,EAAK9oB,GAAGN,OAAQ0vB,IAChC,IAAK,IAAImnB,EAAI,EAAGA,EAAIrK,EAAKqK,IAAK30C,EAAOu0C,SAASx2C,KAAKmpB,EAAK9oB,GAAGovB,GAAGmnB,IAE9Dv2C,EAAI,GAEJ4B,EAAOw0C,MAAMz2C,KADb22C,GAAaxtB,EAAK9oB,EAAI,GAAGN,OAGjC,CACA,OAAOkC,CACX,EC/oBA,IAAM40C,GAAYnqC,KACZ+jB,GAAYxkB,KACZC,GAAYD,KACZE,GAAYF,KA+DlB,SAAS6qC,GAAkBN,EAAep0B,EAAgB20B,GAItD,IAHA,IAAMC,EAAsB,GACtBl+B,EAAQsJ,EAAUtJ,OAAS7M,GAAW,CAAC,EAAG,EAAG,IAC7CihB,EAAY9K,EAAU8K,WAAajhB,GAAW,CAAC,EAAG,EAAG,IAClD5L,EAAI,EAAGovB,EAAI,EAAGpvB,EAAIm2C,EAASz2C,OAAQM,IAAKovB,GAAK,EAAG,CACrD,IAAM7hB,EAAK4oC,EAASn2C,GAAG,GAAKyY,EAAM,GAAMoU,EAAU,GAC5Crf,EAAK2oC,EAASn2C,GAAG,GAAKyY,EAAM,GAAMoU,EAAU,GAC5Cpf,EAAK0oC,EAASn2C,GAAG,GAAKyY,EAAM,GAAMoU,EAAU,GAE9C8pB,EAAoBh3C,KADpB+2C,EACyB,CAACnpC,EAAGE,EAAGD,GAEP,CAACD,EAAGC,EAAGC,GAEvC,CACD,OAAOkpC,CACX,CAeA,SAASC,GAAgBC,EAAUC,EAAiBtL,GAShD,GARIqL,EAAIrf,WACJqf,EAAIrf,UAAUqC,aAAa,CACvBhzB,GAAI2kC,EACJpqC,KAAM01C,EAAW3qB,KAAO,MAAQqf,EAChCrf,KAAmC,EAA7BykB,GAAUkG,EAAW3qB,MAC3B4qB,OAAQD,EAAWE,QAAUF,EAAWE,QAAQ,GAAK,OAGzDH,EAAIvL,WAAY,CAChB,KAAMwL,EAAWlZ,UAAYkZ,EAAWlZ,SAASl+B,OAAS,GACtD,OAGJ,IADA,IAAMgrC,EAA0B,GACvB1qC,EAAI,EAAG8S,EAAMgkC,EAAWlZ,SAASl+B,OAAQM,EAAI8S,EAAK9S,IAAK,CAC5D,IAAM49B,EAAWkZ,EAAWlZ,SAAS59B,GACjCi3C,OACJ,EAAIC,OAAgB,EACdC,EAAaN,EAAIO,SAASD,WAChC,GAAIA,EAAY,CACZ,IAAME,EAAYF,EAAWE,UAC7B,GAAIA,EAAW,CACX,IAAMC,EAAmB1Z,EAAS2Z,SAClC,GAAID,EAAkB,CAClB,IAAME,EAAWn7C,OAAO46B,KAAKqgB,GAC7B,GAAIE,EAAS93C,OAAS,EAAG,CACrB,IACM+3C,EAAQH,EADEE,EAAS,IAEzB,QAAoB32B,IAAhB42B,EAAMh7C,MACNw6C,EAAiBI,EAAUI,EAAMh7C,WAC9B,CACH,IAAM8O,EAASksC,EAAMlsC,OACrB,GAAIA,EAAQ,CACR2rC,EAAmB,GACnB,IAAK,IAAI9nB,EAAI,EAAGiM,EAAO9vB,EAAO7L,OAAQ0vB,EAAIiM,EAAMjM,IAG5C8nB,EAAiBv3C,KADO03C,EADV9rC,EAAOvL,IAI5B,CACJ,CACJ,CACJ,CACJ,CACJ,CACGk3C,EACAQ,GAAsCb,EAAKjZ,EAAUsZ,EAAkBxM,GAEvEiN,GAAwCd,EAAKjZ,EAAUqZ,EAAgBvM,EAE9E,CACGA,EAAQhrC,OAAS,GACjBm3C,EAAIvL,WAAWzR,aAAa,CACxBhzB,GAAI2kC,EACJd,QAASA,GAGpB,CACL,CAEA,SAASkN,GAAkBf,EAAUC,EAAiBtL,GAC9CsL,EAAWE,SACXH,EAAIrf,UAAUsC,mBAAmB,CAC7BO,iBAAkByc,EAAWE,QAAQ,GACrC1c,gBAAiBkR,EACjBrf,KAAMuiB,IAGlB,CAEA,SAASgJ,GAAsCb,EAAUjZ,EAAesZ,EAAuBxM,GAE3F,OADiB9M,EAASzR,MAEtB,IAAK,aAEL,IAAK,kBACD,MACJ,IAAK,eACL,IAAK,mBAED0rB,GAA8BhB,EAAKK,EADlBtZ,EAASka,WACqCpN,GAC/D,MACJ,IAAK,QAED,IADA,IAAMqN,EAASna,EAASka,WACf1oB,EAAI,EAAGA,EAAI2oB,EAAOr4C,OAAQ0vB,IAE/ByoB,GAA8BhB,EAAKK,EADlBa,EAAO3oB,GACuCsb,GAEnE,MACJ,IAAK,aACL,IAAK,iBAED,IADA,IAAMsN,EAASpa,EAASka,WACf1oB,EAAI,EAAGA,EAAI4oB,EAAOt4C,OAAQ0vB,IAC/B,IAAK,IAAIkG,EAAI,EAAGA,EAAI0iB,EAAO5oB,GAAG1vB,OAAQ41B,IAElCuiB,GAA8BhB,EAAKK,EADlBc,EAAO5oB,GAAGkG,GACoCoV,GAOnF,CAEA,SAASmN,GAA8BhB,EAAUK,EAAuBe,EAAevN,GAGnF,IAFA,IAAMyL,EAAWU,EAAIV,SACf7K,EAAauL,EAAIvL,WACdtrC,EAAI,EAAGA,EAAIi4C,EAASv4C,OAAQM,IAAK,CAUtC,IATA,IAAMk4C,EAAUD,EAASj4C,GACnBm4C,EAAkBjB,EAAiBl3C,IAAM,CAACo4C,aAAc,CAAC,GAAK,GAAK,IAAMC,aAAc,GACvF7T,EAAO,GACP4R,EAAQ,GACRkC,EAAuB,GACvBC,EAAmB,CACrBtrB,UAAW,GACX0G,QAAS,IAEJvE,EAAI,EAAGA,EAAI8oB,EAAQx4C,OAAQ0vB,IAAK,CACjCoV,EAAK9kC,OAAS,GACd02C,EAAMz2C,KAAK6kC,EAAK9kC,QAEpB,IAAM84C,EAAUC,GAAoB5B,EAAKqB,EAAQ9oB,GAAIkpB,EAAeC,GACpE/T,EAAK7kC,KAAIT,MAATslC,EAAagU,EAChB,CACD,GAAoB,IAAhBhU,EAAK9kC,OACL64C,EAAY5kB,QAAQh0B,KAAK6kC,EAAK,IAC9B+T,EAAY5kB,QAAQh0B,KAAK6kC,EAAK,IAC9B+T,EAAY5kB,QAAQh0B,KAAK6kC,EAAK,YACvBA,EAAK9kC,OAAS,EAAG,CAGxB,IADA,IAAMg5C,EAAQ,GACLpjB,EAAI,EAAGA,EAAIkP,EAAK9kC,OAAQ41B,IAC7BojB,EAAM/4C,KAAK,CACP4N,EAAG4oC,EAASmC,EAAc9T,EAAKlP,KAAK,GACpC9nB,EAAG2oC,EAASmC,EAAc9T,EAAKlP,KAAK,GACpC7nB,EAAG0oC,EAASmC,EAAc9T,EAAKlP,KAAK,KAM5C,IAHA,IAAMrZ,EAAS08B,GAAqBD,EAAO9sC,MAEvCgtC,EAAK,GACAtjB,EAAI,EAAGA,EAAIojB,EAAMh5C,OAAQ41B,IAC9BujB,GAAKH,EAAMpjB,GAAIrZ,EAAQu6B,IACvBoC,EAAG93B,QAAQ01B,GAAU,IACrBoC,EAAG93B,QAAQ01B,GAAU,IAKzB,IAFA,IAAMsC,EAAKhI,GAAO8H,EAAIxC,EAAO,GAEpB9gB,EAAI,EAAGA,EAAIwjB,EAAGp5C,OAAQ41B,GAAK,EAChCijB,EAAY5kB,QAAQ7S,QAAQ0jB,EAAKsU,EAAGxjB,KACpCijB,EAAY5kB,QAAQ7S,QAAQ0jB,EAAKsU,EAAGxjB,EAAI,KACxCijB,EAAY5kB,QAAQ7S,QAAQ0jB,EAAKsU,EAAGxjB,EAAI,IAE/C,CACD,IAAM8U,EAAa,GAAKyM,EAAIkC,SAC5BzN,EAAWjC,eAAe,CACtBxiC,GAAIujC,EACJjN,UAAW9yB,GACX4iB,UAAWsrB,EAAYtrB,UACvB0G,QAAS4kB,EAAY5kB,UAEzB,IAAMkX,EAAS,GAAKgM,EAAIkC,SACxBzN,EAAW9B,WAAW,CAClB3iC,GAAIgkC,EACJT,WAAAA,EACAjJ,MAAQgX,GAAmBA,EAAgBC,aAAgBD,EAAgBC,aAAe,CAAC,GAAK,GAAK,IACrG9W,QAAU6W,QAAoDt3B,IAAjCs3B,EAAgBE,aAA+B,EAAMF,EAAgBE,aAAgB,IAEtH3N,EAAQ/qC,KAAKkrC,EAChB,CACL,CAEA,SAAS8M,GAAwCd,EAAUjZ,EAAeqZ,EAAqBvM,GAC3F,IAAMY,EAAauL,EAAIvL,WACjBgN,EAAqB,GACrBC,EAAmB,CACrBtrB,UAAW,GACX0G,QAAS,IAGb,OADiBiK,EAASzR,MAEtB,IAAK,aAEL,IAAK,kBACD,MACJ,IAAK,eACL,IAAK,mBAED6sB,GAAgCnC,EADfjZ,EAASka,WACqBQ,EAAeC,GAC9D,MACJ,IAAK,QAED,IADA,IAAMR,EAASna,EAASka,WACf1oB,EAAI,EAAGA,EAAI2oB,EAAOr4C,OAAQ0vB,IAE/B4pB,GAAgCnC,EADfkB,EAAO3oB,GACuBkpB,EAAeC,GAElE,MACJ,IAAK,aACL,IAAK,iBAED,IADA,IAAMP,EAASpa,EAASka,WACf1oB,EAAI,EAAGA,EAAI4oB,EAAOt4C,OAAQ0vB,IAC/B,IAAK,IAAIkG,EAAI,EAAGA,EAAI0iB,EAAO5oB,GAAG1vB,OAAQ41B,IAElC0jB,GAAgCnC,EADfmB,EAAO5oB,GAAGkG,GACoBgjB,EAAeC,GAO9E,GAAIA,EAAYtrB,UAAUvtB,OAAS,GAAK64C,EAAY5kB,QAAQj0B,OAAS,EAAG,CACpE,IAAM0qC,EAAa,GAAKyM,EAAIkC,SAC5BzN,EAAWjC,eAAe,CACtBxiC,GAAIujC,EACJjN,UAAW9yB,GACX4iB,UAAWsrB,EAAYtrB,UACvB0G,QAAS4kB,EAAY5kB,UAEzB,IAAMkX,EAAS,GAAKgM,EAAIkC,SACxBzN,EAAW9B,WAAW,CAClB3iC,GAAIgkC,EACJT,WAAAA,EACAjJ,MAAQ8V,GAAkBA,EAAemB,aAAgBnB,EAAemB,aAAe,CAAC,GAAK,GAAK,IAClG9W,QAAS,IAEboJ,EAAQ/qC,KAAKkrC,EAChB,CACL,CAEA,SAASmO,GAAgCnC,EAAUoB,EAAeK,EAAoBW,GAElF,IADA,IAAM9C,EAAWU,EAAIV,SACZn2C,EAAI,EAAGA,EAAIi4C,EAASv4C,OAAQM,IAAK,CAGtC,IAFA,IAAIk5C,EAAW,GACX9C,EAAQ,GACHhnB,EAAI,EAAGA,EAAI6oB,EAASj4C,GAAGN,OAAQ0vB,IAAK,CACrC8pB,EAASx5C,OAAS,GAClB02C,EAAMz2C,KAAKu5C,EAASx5C,QAExB,IAAMy5C,EAAcV,GAAoB5B,EAAKoB,EAASj4C,GAAGovB,GAAIkpB,EAAeW,GAC5EC,EAASv5C,KAAIT,MAAbg6C,EAAiBC,EACpB,CACD,GAAwB,IAApBD,EAASx5C,OACTu5C,EAAatlB,QAAQh0B,KAAKu5C,EAAS,IACnCD,EAAatlB,QAAQh0B,KAAKu5C,EAAS,IACnCD,EAAatlB,QAAQh0B,KAAKu5C,EAAS,SAChC,GAAIA,EAASx5C,OAAS,EAAG,CAE5B,IADA,IAAIg5C,EAAQ,GACHpjB,EAAI,EAAGA,EAAI4jB,EAASx5C,OAAQ41B,IACjCojB,EAAM/4C,KAAK,CACP4N,EAAG4oC,EAASmC,EAAcY,EAAS5jB,KAAK,GACxC9nB,EAAG2oC,EAASmC,EAAcY,EAAS5jB,KAAK,GACxC7nB,EAAG0oC,EAASmC,EAAcY,EAAS5jB,KAAK,KAKhD,IAFA,IAAMrZ,EAAS08B,GAAqBD,EAAO9sC,MACvCgtC,EAAK,GACAtjB,EAAI,EAAGA,EAAIojB,EAAMh5C,OAAQ41B,IAC9BujB,GAAKH,EAAMpjB,GAAIrZ,EAAQu6B,IACvBoC,EAAG93B,QAAQ01B,GAAU,IACrBoC,EAAG93B,QAAQ01B,GAAU,IAGzB,IADA,IAAMsC,EAAKhI,GAAO8H,EAAIxC,EAAO,GACpB9gB,EAAI,EAAGA,EAAIwjB,EAAGp5C,OAAQ41B,GAAK,EAChC2jB,EAAatlB,QAAQ7S,QAAQo4B,EAASJ,EAAGxjB,KACzC2jB,EAAatlB,QAAQ7S,QAAQo4B,EAASJ,EAAGxjB,EAAI,KAC7C2jB,EAAatlB,QAAQ7S,QAAQo4B,EAASJ,EAAGxjB,EAAI,IAEpD,CACJ,CACL,CAEA,SAASmjB,GAAoB5B,EAAUqC,EAAeZ,EAAoBC,GAGtE,IAFA,IAAMpC,EAAWU,EAAIV,SACfgD,EAAc,GACXn5C,EAAI,EAAG8S,EAAMomC,EAASx5C,OAAQM,EAAI8S,EAAK9S,IAAK,CACjD,IAAMoiB,EAAQ82B,EAASl5C,GACvB,GAAIs4C,EAAcc,SAASh3B,GAAQ,CAC/B,IAAMi3B,EAAcf,EAAc53C,QAAQ0hB,GAC1C+2B,EAAYx5C,KAAK05C,EACpB,MACGd,EAAYtrB,UAAUttB,KAAKw2C,EAAS/zB,GAAO,IAC3Cm2B,EAAYtrB,UAAUttB,KAAKw2C,EAAS/zB,GAAO,IAC3Cm2B,EAAYtrB,UAAUttB,KAAKw2C,EAAS/zB,GAAO,IAC3C+2B,EAAYx5C,KAAK24C,EAAc54C,QAC/B44C,EAAc34C,KAAKyiB,EAE1B,CACD,OAAO+2B,CACX,CAEA,SAASR,GAAqB1rB,EAAgBhR,GAC1C,IAAK,IAAIjc,EAAI,EAAGA,EAAIitB,EAAUvtB,OAAQM,IAAK,CACvC,IAAIs5C,EAAQt5C,EAAI,EACZs5C,IAAUrsB,EAAUvtB,SACpB45C,EAAQ,GAEZr9B,EAAO,KAAQgR,EAAUjtB,GAAGwN,EAAIyf,EAAUqsB,GAAO9rC,IAAMyf,EAAUjtB,GAAGyN,EAAIwf,EAAUqsB,GAAO7rC,GACzFwO,EAAO,KAAQgR,EAAUjtB,GAAGyN,EAAIwf,EAAUqsB,GAAO7rC,IAAMwf,EAAUjtB,GAAGuN,EAAI0f,EAAUqsB,GAAO/rC,GACzF0O,EAAO,KAAQgR,EAAUjtB,GAAGuN,EAAI0f,EAAUqsB,GAAO/rC,IAAM0f,EAAUjtB,GAAGwN,EAAIyf,EAAUqsB,GAAO9rC,EAC5F,CACD,OAAOyB,GAAcgN,EACzB,CAEA,SAAS48B,GAAKU,EAASC,EAASC,GAC5B,IAAMviC,EAAIkZ,GACJlE,EAAIrgB,GACJ6tC,EAAK5tC,GACXoL,EAAE,GAAKqiC,EAAGhsC,EACV2J,EAAE,GAAKqiC,EAAG/rC,EACV0J,EAAE,GAAKqiC,EAAG9rC,EACVye,EAAE,GAAKstB,EAAGjsC,EACV2e,EAAE,GAAKstB,EAAGhsC,EACV0e,EAAE,GAAKstB,EAAG/rC,EACVisC,EAAG,GAAK,IACRA,EAAG,GAAK,IACRA,EAAG,GAAK,IACKvrC,GAAQrB,GAAQ4sC,EAAIxtB,IACtB,MACPwtB,EAAG,IAAM,EACTA,EAAG,IAAM,EACTA,EAAG,IAAM,GAEb,IACMC,EAAOjtC,GAAcwf,EADfhgB,GAAQwtC,EAAIxtB,GACWtgB,MACnC8tC,EAAG,IAAMC,EAAK,GACdD,EAAG,IAAMC,EAAK,GACdD,EAAG,IAAMC,EAAK,GACd1qC,GAAcyqC,GACd,IAAME,EAAKtsC,GAAW4e,EAAGwtB,EAAI9tC,MACvB2B,EAAIrB,GAAQgL,EAAGwiC,GACflsC,EAAItB,GAAQgL,EAAG0iC,GACrBH,EAAG,GAAKlsC,EACRksC,EAAG,GAAKjsC,CACZ,iDApZ6B0vB,EAKAvE,GAKzB,QALyBA,IAAAA,IAAAA,EAEI,CACA+d,SAAS,IAElCxZ,EAAOoO,WAAY,CACnB,GAAIpO,EAAOoO,WAAWxkC,UAClB,OAAOuc,QAAQE,OAAO,IAAI3b,GAAS,iCAEvC,GAAIs1B,EAAOoO,WAAW5R,MAClB,OAAOrW,QAAQE,OAAO,IAAI3b,GAAS,4BAE1C,CACD,GAAIs1B,EAAO1F,UAAW,CAClB,GAAI0F,EAAO1F,UAAU1wB,UACjB,OAAOuc,QAAQE,OAAO,IAAI3b,GAAS,gCAEvC,GAAIs1B,EAAO1F,UAAUkC,MACjB,OAAOrW,QAAQE,OAAO,IAAI3b,GAAS,2BAE1C,CACD,IAAMwvC,EAAWla,EAAOka,SAWxB,OAoBJ,SAAuBP,GACnB,IACMgD,EADWhD,EAAIO,SACQ0C,YAC7B,IAAK,IAAMtO,KAAYqO,EACnBjD,GAAgBC,EAAKgD,EAAYrO,GAAWA,GAEhD,GAAIqL,EAAIrf,UACJ,IAAK,IAAMgU,KAAYqO,EACnBjC,GAAkBf,EAAKgD,EAAYrO,GAAWA,EAG1D,CAhCIuO,CATY,CACR3C,SAAAA,EACAjB,SAAWiB,EAASr1B,WAAamb,EAAOoO,WAClCmL,GAAkBW,EAASjB,SAAUiB,EAASr1B,UAAW4W,EAAQ+d,SACjEU,EAASjB,SACf7K,WAAYpO,EAAOoO,WACnB9T,UAAW0F,EAAO1F,UAClBuhB,OAAQ,IAGL11B,QAAQC,SACnB,0CCxD2B4Z,EAKAvE,GAGvB,YAHuBA,IAAAA,IAAAA,EAEI,CAAA,GACpB,IAAItV,QAAc,SAAUC,EAASC,GACxC,GAAI2Z,EAAOoO,WAAWxkC,UAClB,MAAM,IAAIc,GAAS,gCAEvB,GAAIs1B,EAAOoO,WAAW5R,MAClB,MAAU,IAAA9xB,GAAS,4BAEvB,GAAIs1B,EAAO1F,UAAW,CAClB,GAAI0F,EAAO1F,UAAU1wB,UACjB,MAAM,IAAIc,GAAS,+BAEvB,GAAIs1B,EAAO1F,UAAUkC,MACjB,MAAU,IAAA9xB,GAAS,0BAE1B,EAeT,SAAqBivC,GAGjB,IAFA,IAAMO,EAAWP,EAAIO,SACfnZ,EAASmZ,EAASnZ,OACfj+B,EAAI,EAAG8S,EAAMmrB,EAAOv+B,OAAQM,EAAI8S,EAAK9S,IAAK,CAC/C,IAAM09B,EAAOO,EAAOj+B,GACd49B,EAAWiZ,EAAIvL,WAAWjC,eAAe,CAC3CxiC,GAAI62B,EAAKsc,QACT7c,UAAW9yB,GACX4iB,UAAWyQ,EAAKuc,YAChBtmB,QAAS+J,EAAK/J,UAEdiK,aAAoBh2B,IACpBivC,EAAIzvC,MAAK,gCAAiCw2B,EAAS58B,QAE1D,CAED,IADA,IAAMk5C,EAAW9C,EAAS8C,SACjBl6C,EAAI,EAAG8S,EAAMonC,EAASx6C,OAAQM,EAAI8S,EAAK9S,IAAK,CACjD,IAAMm6C,EAAUD,EAASl6C,GACnBwrC,EAAW,GAAK2O,EAAQC,KAC9B,GAAIvD,EAAIvL,WAAY,CAChB,IACMT,EAAYW,EAAiBxrC,SAAAA,EAC7B09B,EAAOmZ,EAAIvL,WAAW9B,WAAW,CACnC3iC,GAAIgkC,EACJT,WAJe+P,EAAQH,QAKvBK,UAAWF,EAAQhZ,QAEvB,GAAIzD,aAAgB91B,GAAU,CAC1BivC,EAAIzvC,MAAK,4BAA6Bs2B,EAAK18B,SAC3C,QACH,CACD,IAAMs9B,EAAcuY,EAAIvL,WAAWzR,aAAa,CAC5ChzB,GAAI2kC,EACJd,QAAS,CAACG,KAEd,GAAIvM,aAAuB12B,GAAU,CACjCivC,EAAIzvC,MAAoCk3B,8BAAAA,EAAYt9B,SACpD,QACH,CACJ,CACD,GAAI61C,EAAIrf,YACCqf,EAAIrf,UAAU4B,QAAQ+gB,EAAQC,MAAO,CACtC,IAAMpgB,EAAa6c,EAAIrf,UAAUqC,aAAa,CAC1ChzB,GAAI2kC,EACJrf,KAAMguB,EAAQhuB,OAEd6N,aAAsBpyB,IACtBivC,EAAIzvC,MAAoC4yB,8BAAAA,EAAWh5B,QAE1D,CAER,CACL,CAzDQs5C,CARY,CACRlD,SAFala,EAAOka,SAGpB9L,WAAYpO,EAAOoO,WACnB9T,UAAW0F,EAAO1F,UAClBuhB,OAAQ,EACR3xC,MAAOuxB,EAAQvxB,OAAS,SAAUmzC,OAItCj3B,GACJ,EACJ,GCpCAk3B,gBAAAt+C,EAAA,sBAAAu+C,gBAAAv+C,EAAA,SAAaw+C,gBAyCT,WAAA,SAAAA,EAAYC,EAAkBrc,EAA0Bsc,GAAsCr+C,KApC9EsK,QAAE,EAAAtK,KAKFo+C,WAKArc,EAAAA,KAAAA,iBAAWjiC,EAAAA,OAAAC,eAAAC,KAAAi+C,GAAA,CAAAh+C,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAk+C,GAAA,CAAAj+C,UAAAC,EAAAA,WA4BvB,IAAAF,KAAKsK,GAAKy3B,EAAYz3B,GACtBtK,KAAKo+C,MAAQA,EACbp+C,KAAK+hC,YAAcA,EACnB5hC,OAAI89C,IAAAA,IAAuBI,EAE3Bl+C,EAAAH,KAAIk+C,IAAAA,IAAU,CACVI,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbtW,OAAO,EACPuW,SAAU,IAAIluC,aAAa,GAC3BmuC,WAAW,EACXC,gBAAgB,GAGpB7+C,EAAIH,KAAAi+C,IAAAA,IAAqBgB,WAAWj/C,KAAKo+C,MAAMjwB,KAAK+wB,UAAW/+C,EAAIH,KAAAk+C,IAAAA,IAAQI,SAC3Et+C,KAAKo+C,MAAMe,wBAAwBn/C,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQI,SAAS,EAClE,QAACH,EAAA99C,UA8SD++C,SAAA,WAEQj/C,EAAAH,KAAIk+C,IAAAA,IAAQI,SACZt+C,KAAKo+C,MAAMe,wBAAwBn/C,MAAM,GAAO,GAEhDG,EAAIH,KAAAk+C,IAAAA,IAAQS,QACZ3+C,KAAKo+C,MAAMiB,oBAAoBr/C,MAAM,GAErCG,OAAI+9C,IAAAA,IAAQU,UACZ5+C,KAAKo+C,MAAMkB,sBAAsBt/C,MAAM,GAEvCG,EAAAH,KAAIk+C,IAAAA,IAAQW,aACZ7+C,KAAKo+C,MAAMmB,yBAAyBv/C,MAAM,GAE1CG,EAAAH,KAAIk+C,IAAAA,IAAQa,WACZ/+C,KAAKo+C,MAAMoB,sBAAsBx/C,MAAM,GAEvCG,EAAIH,KAAAk+C,IAAAA,IAAQc,gBACZh/C,KAAKo+C,MAAMqB,qBAAqBz/C,MAAM,GAE1CA,KAAKo+C,MAAMsB,QACf,EAACx+C,EAAAi9C,EAAA,CAAA,CAAAh9C,IAAA,OAAAC,IA9TD,WACI,OAAOpB,KAAK+hC,YAAYpQ,IAC5B,GAACxwB,CAAAA,cAAAC,IASD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQI,OACvB,EAAC3hC,IAUD,SAAY2hC,GACJA,IAAYn+C,OAAI+9C,IAAAA,IAAQI,UAG5Bn+C,EAAAH,KAAIk+C,IAAAA,IAAQI,QAAUA,EACtBn+C,EAAIH,KAAAi+C,IAAAA,IAAqBgB,WAAWj/C,KAAKo+C,MAAMjwB,KAAK+wB,UAAWZ,GAC/Dt+C,KAAKo+C,MAAMe,wBAAwBn/C,KAAMs+C,GAAS,GAClDt+C,KAAKo+C,MAAMsB,SACf,GAAC,CAAAv+C,IAAA,SAAAC,IAQD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQS,MACvB,EAAChiC,IAQD,SAAWgiC,GACHx+C,EAAAH,KAAIk+C,IAAAA,IAAQS,SAAWA,IAG3Bx+C,EAAIH,KAAAk+C,IAAAA,IAAQS,OAASA,EACrBx+C,EAAAH,KAAIi+C,IAAAA,IAAqB0B,UAAU3/C,KAAKo+C,MAAMjwB,KAAK+wB,UAAWP,GAC9D3+C,KAAKo+C,MAAMiB,oBAAoBr/C,KAAM2+C,GACrC3+C,KAAKo+C,MAAMsB,SACf,GAAC,CAAAv+C,IAAAC,QAAAA,IAKD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ3V,KACvB,EAAC5rB,IAKD,SAAU4rB,GACFpoC,EAAAH,KAAIk+C,IAAAA,IAAQ3V,QAAUA,IAG1BpoC,EAAIH,KAAAk+C,IAAAA,IAAQ3V,MAAQA,EACpBpoC,EAAAH,KAAIi+C,IAAAA,IAAqB2B,SAAS5/C,KAAKo+C,MAAMjwB,KAAK+wB,UAAW3W,GAC7DvoC,KAAKo+C,MAAMsB,SACf,IAACv+C,IAAA,cAAAC,IAQD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQW,WACvB,EAACliC,IAQD,SAAgBkiC,GACRA,IAAgB1+C,EAAIH,KAAAk+C,IAAAA,IAAQW,cAGhC1+C,OAAI+9C,IAAAA,IAAQW,YAAcA,EAC1B1+C,EAAIH,KAAAi+C,IAAAA,IAAqB4B,eACrB7/C,KAAKo+C,MAAMjwB,KAAK+wB,UAChBL,GAEJ7+C,KAAKo+C,MAAMmB,yBAAyBv/C,KAAM6+C,GAC1C7+C,KAAKo+C,MAAMsB,SACf,GAACv+C,CAAAA,eAAAC,IAQD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQU,QACvB,EAACjiC,IAQD,SAAaiiC,GACLA,IAAaz+C,OAAI+9C,IAAAA,IAAQU,WAG7Bz+C,EAAAH,KAAIk+C,IAAAA,IAAQU,SAAWA,EACvBz+C,EAAIH,KAAAi+C,IAAAA,IAAqB6B,YAAY9/C,KAAKo+C,MAAMjwB,KAAK+wB,UAAWN,GAChE5+C,KAAKo+C,MAAMkB,sBAAsBt/C,KAAM4+C,GACvC5+C,KAAKo+C,MAAMsB,SACf,IAACv+C,IAAA,SAAAC,IAQD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQK,MACvB,EAAC5hC,IAQD,SAAW4hC,GACHA,IAAWp+C,EAAAH,KAAIk+C,IAAAA,IAAQK,SAG3Bp+C,EAAAH,KAAIk+C,IAAAA,IAAQK,OAASA,EACrBv+C,KAAKo+C,MAAMsB,SACf,GAACv+C,CAAAA,IAAAC,YAAAA,IAQD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQO,SACvB,EAAC9hC,IAQD,SAAczc,GACNA,IAAUC,EAAIH,KAAAk+C,IAAAA,IAAQO,YAG1Bt+C,OAAI+9C,IAAAA,IAAQO,UAAYv+C,EACxBF,KAAKo+C,MAAMsB,SACf,GAAC,CAAAv+C,IAAA,aAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQQ,UACvB,EAAC/hC,IASD,SAAezc,GACPA,IAAUC,EAAAH,KAAIk+C,IAAAA,IAAQQ,aAG1Bv+C,EAAIH,KAAAk+C,IAAAA,IAAQQ,WAAax+C,EAG7B,GAACiB,CAAAA,IAAAC,WAAAA,IAQD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQM,QACvB,EAAC7hC,IAQD,SAAa6hC,GACLr+C,EAAIH,KAAAk+C,IAAAA,IAAQM,WAAaA,IAG7Br+C,OAAI+9C,IAAAA,IAAQM,SAAWA,EAG3B,IAACr9C,IAAA,WAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQY,QACvB,EAACniC,IAUD,SAAazc,GACT,IAAI4+C,EAAW3+C,EAAIH,KAAAk+C,IAAAA,IAAQY,SACvB5+C,GACA4+C,EAAS,GAAK5+C,EAAM,GACpB4+C,EAAS,GAAK5+C,EAAM,GACpB4+C,EAAS,GAAK5+C,EAAM,KAEpB4+C,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,GAElB3+C,EAAAH,KAAIk+C,IAAAA,IAAQa,YAAc7+C,EAC1BF,KAAKo+C,MAAMoB,sBAAsBx/C,KAAMG,OAAI+9C,IAAAA,IAAQa,WACnD/+C,KAAKo+C,MAAMsB,QACf,GAACv+C,CAAAA,IAAAC,UAAAA,IAQD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQY,SAAS,EAChC,EAACniC,IASD,SAAYooB,GACR,IAAI+Z,EAAW3+C,EAAAH,KAAIk+C,IAAAA,IAAQY,SAC3B3+C,EAAIH,KAAAk+C,IAAAA,IAAQc,eAAiBja,QAE7B+Z,EAAS,GAAK3+C,EAAIH,KAAAk+C,IAAAA,IAAQc,eAAiBja,EAAU,EACrD/kC,KAAKo+C,MAAMqB,qBAAqBz/C,KAAMG,EAAAH,KAAIk+C,IAAAA,IAAQc,gBAClDh/C,KAAKo+C,MAAMsB,QACf,KAACvB,CAAA,CAjUD,GChEqCD,gBAAAv+C,EAAA,SAuDnCogD,yBAAa7jB,GAgDf,SAAA6jB,EAAY5xB,EAAYhkB,GAIlB,IAAAiB,EAe6E,YAnB3DjB,IAAAA,IAAAA,EAIpB,KAEAiB,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMhkB,IAAInK,MAxCJmuB,UAAI/iB,EAAAA,EAOX40C,WAAK,EAAA50C,EAOL60C,WAAK70C,EAAAA,EAOL80C,cAAQ,EAAApgD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAA,CAAAj+C,UAAAC,EAAAA,WAqBbkL,IAAAA,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACViC,QAAuB,IAAfh2C,EAAIg2C,OACZrqC,IAAK,IAAI7G,aAAa9E,EAAI2L,KAAO,CAAC,EAAG,EAAG,IACxC4M,IAAK,IAAI9R,aAAazG,EAAI2L,KAAO,CAAC,EAAG,GAAI,IACzC8iB,KAAM,GAGVxtB,EAAK40C,MAAQ,IAAIpgD,EAAa,IAAImG,GAAeA,iBACjDqF,EAAK60C,MAAQ,IAAIrgD,EAAa,IAAImG,GAAeA,iBACjDqF,EAAK80C,SAAW,IAAItgD,EAAa,IAAImG,GAAAA,iBAA0CqF,CACnF,CApEeG,EAAAw0C,EAAA7jB,GAoEd,IAAA97B,EAAA2/C,EAAA1/C,UAwFA0/C,OAxFA3/C,EA6FDggD,QAAA,WACI,IAAM19B,EAAMviB,OAAI+9C,IAAAA,IAAQx7B,IACxBA,EAAI,KAAO,EACXA,EAAI,KAAO,EACXA,EAAI,KAAO,EACXviB,EAAAH,KAAIk+C,IAAAA,IAAQtlB,MAAStc,GAAenc,EAAIH,KAAAk+C,IAAAA,IAAQpoC,IAAK3V,EAAAH,KAAIk+C,IAAAA,IAAQx7B,KACjE1iB,KAAKigD,MAAMx/C,SAAST,KAAMG,EAAAH,KAAIk+C,IAAAA,IAAQx7B,KACtC1iB,KAAKmuB,KAAKuxB,QACd,EAACt/C,EAKD6K,QAAA,WACIjL,KAAKggD,MAAM/+C,QAEXjB,KAAKigD,MAAMh/C,QACXi7B,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KACjB,EAACkB,EAAA6+C,EAAA5+C,CAAAA,CAAAA,aAAAC,IAtGD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQiC,MACvB,EAACxjC,IASD,SAAWzc,GACHC,EAAAH,KAAIk+C,IAAAA,IAAQiC,SAAWjgD,IAG3BC,EAAIH,KAAAk+C,IAAAA,IAAQiC,OAASjgD,EACrBF,KAAKmuB,KAAKuxB,SACV1/C,KAAKkgD,SAASz/C,SAAST,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQiC,QAC7C,IAACh/C,IAAA,MAAAC,IASD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQpoC,GACvB,EAAC6G,IASD,SAAQzc,GACJC,OAAI+9C,IAAAA,IAAQpoC,IAAI6G,IAAIzc,GACpBC,EAAIH,KAAAk+C,IAAAA,IAAQtlB,MAAStc,GAAenc,EAAAH,KAAIk+C,IAAAA,IAAQpoC,IAAK3V,EAAIH,KAAAk+C,IAAAA,IAAQx7B,KACjE1iB,KAAKggD,MAAMv/C,SAAST,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQpoC,IAC1C,GAAC,CAAA3U,IAAAC,MAAAA,IASD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQx7B,GACvB,EAAC/F,IASD,SAAQzc,GACJC,EAAIH,KAAAk+C,IAAAA,IAAQx7B,IAAI/F,IAAIzc,GACpBC,EAAIH,KAAAk+C,IAAAA,IAAQtlB,MAAStc,GAAenc,OAAI+9C,IAAAA,IAAQpoC,IAAK3V,EAAAH,KAAIk+C,IAAAA,IAAQx7B,KACjE1iB,KAAKmuB,KAAKuxB,SACV1/C,KAAKigD,MAAMx/C,SAAST,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQx7B,IAC1C,GAAC,CAAAvhB,IAAAC,OAAAA,IAUD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQtlB,IACvB,KAACmnB,CAAA,EA5JsB91C,IClDrBo2C,KAASC,GAAAA,CAAAA,GACVpyC,KAAa,CACVqyC,OAAQ,KACXD,GACAE,QAAkB,CACfD,OAAQ,MACXD,GACAG,QAAkB,CACfF,OAAQ,MACXD,GACAI,QAAY,CACTH,OAAQ,MACXD,GACAK,QAAW,CACRJ,OAAQ,MACXD,GACAM,QAAa,CACVL,OAAQ,MACXD,IACHO,gBAAAlhD,EAAA,SAAAmhD,gBAAAnhD,EAAA,SAAAohD,gBAAAphD,EAAA,UAgCIqhD,gBAAQ,SAAA9kB,GA+BV,SAAA8kB,EAAY7yB,EAAYhkB,GAQvBiB,IAAAA,EAc4B,gBAtBLjB,IAAAA,EAIpB,CACA82C,MAAO/yC,GACPgO,MAAO,EACPuG,OAAQ,CAAC,EAAG,EAAG,KAGfrX,EAAA8wB,EAAAl4B,KAAMmqB,KAAAA,EAAMhkB,IAAInK,KAACF,OAAAC,eAAAs8B,EAAAjxB,GAAAy1C,IAAA5gD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA01C,GAAA7gD,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA21C,GAAA,CAAA9gD,UAAAC,EAAAA,WAAAkL,IAAAA,EA9BZ81C,eAAO91C,EAOP+1C,aAAO,EAAA/1C,EAOPg2C,cAAQ,EAkBbh2C,EAAK81C,QAAU,IAAIthD,EAAa,IAAImG,GAAAA,iBACpCqF,EAAK+1C,QAAU,IAAIvhD,EAAa,IAAImG,GAAAA,iBACpCqF,EAAKg2C,SAAW,IAAIxhD,EAAa,IAAImG,GAAeA,iBAEpD5F,EAAAk8B,EAAAjxB,GAAAy1C,IAAAA,IAAc3yC,GACd/N,EAAAk8B,EAAAjxB,GAAA01C,IAAAA,IAAc,EACd3gD,EAAAk8B,EAAAjxB,GAAA21C,IAAAA,IAAe1xC,GAAW,CAAC,EAAG,EAAG,IAEjCjE,EAAK61C,MAAQ92C,EAAI82C,MACjB71C,EAAK8Q,MAAQ/R,EAAI+R,MACjB9Q,EAAKqX,OAAStY,EAAIsY,OAAOrX,CAC7B,CAtDUG,EAAAy1C,EAAA9kB,GAsDT,IAAA97B,EAAA4gD,EAAA3gD,UAyGA2gD,OAzGA5gD,EAoHDihD,eAAA,SAAevpB,EAA2BwpB,GAItC,YAJsCA,IAAAA,IAAAA,EAA2BjyC,MACjEiyC,EAAQ,GAAKnhD,EAAIH,KAAA+gD,IAAAA,IAAS,GAAM5gD,EAAAH,KAAI8gD,IAAAA,IAAUhpB,EAAS,GACvDwpB,EAAQ,GAAKnhD,EAAIH,KAAA+gD,IAAAA,IAAS,GAAM5gD,EAAAH,KAAI8gD,IAAAA,IAAUhpB,EAAS,GACvDwpB,EAAQ,GAAKnhD,EAAIH,KAAA+gD,IAAAA,IAAS,GAAM5gD,EAAAH,KAAI8gD,IAAAA,IAAUhpB,EAAS,GAChDwpB,CACX,EAAClhD,EAWDmhD,eAAA,SAAeD,EAA0BxpB,GAIrC,YAJqCA,IAAAA,IAAAA,EAA4BzoB,MACjEyoB,EAAS,IAAMwpB,EAAQ,GAAKnhD,EAAIH,KAAA+gD,IAAAA,IAAS,IAAE5gD,EAAIH,KAAI8gD,IAAAA,IACnDhpB,EAAS,IAAMwpB,EAAQ,GAAKnhD,EAAIH,KAAA+gD,IAAAA,IAAS,IAAE5gD,EAAIH,KAAI8gD,IAAAA,IACnDhpB,EAAS,IAAMwpB,EAAQ,GAAKnhD,EAAAH,KAAI+gD,IAAAA,IAAS,IAAE5gD,EAAIH,KAAI8gD,IAAAA,IAC5ChpB,CACX,EAAC13B,EAKD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KAAAhE,MACbA,KAAKkhD,QAAQjgD,QACbjB,KAAKmhD,QAAQlgD,QACbjB,KAAKohD,SAASngD,OAClB,EAACC,EAAA8/C,IAAA7/C,IAAA,YAAAC,IAnHD,WACI,OAAOi/C,EACX,GAAC,CAAAl/C,IAAAC,QAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAI6gD,IAAAA,GACf,EAAClkC,IAOD,SAAUzc,GACDA,IACDA,EAAQgO,IAGCmyC,GAAUngD,KAEnBF,KAAK6K,MAAM,kCAAoC3K,EAAQ,6BACvDA,EAAQgO,IAEZ/N,EAAIH,KAAA6gD,IAAAA,IAAU3gD,EACdF,KAAKkhD,QAAQzgD,SAAST,KAAIG,EAAEH,KAAI6gD,IAAAA,IACpC,GAAC1/C,CAAAA,IAAAC,QAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAI8gD,IAAAA,GACf,EAACnkC,IAOD,SAAUzc,IACNA,EAAQA,GAAS,IACJ,EACTF,KAAK6K,MAAM,2CAGf1K,EAAAH,KAAI8gD,IAAAA,IAAU5gD,EACdF,KAAKmhD,QAAQ1gD,SAAST,KAAIG,EAAEH,KAAI8gD,IAAAA,KACpC,GAAC3/C,CAAAA,aAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAI+gD,IAAAA,GACf,EAACpkC,IAKD,SAAWzc,GACP,IAAKA,EAID,OAHAC,EAAAH,KAAI+gD,IAAAA,IAAS,GAAK,EAClB5gD,EAAIH,KAAA+gD,IAAAA,IAAS,GAAK,OAClB5gD,EAAAH,KAAI+gD,IAAAA,IAAS,GAAK,GAGtB5gD,EAAAH,KAAI+gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBC,EAAAH,KAAI+gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBC,EAAIH,KAAA+gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBF,KAAKohD,SAAS3gD,SAAST,KAAIG,EAAEH,KAAI+gD,IAAAA,IACrC,KAACC,CAAA,CA/JS,CAAQ/2C,ICzDuEi0C,gBAAAv+C,EAK7F,SAAa6hD,yBAAItlB,GAsBb,SAAAslB,EAAYrzB,EAAYwS,GAAW,IAAAv1B,EAkB7B,OAhBFA,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMwS,IAAO3gC,MAnBPmuB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,YAAAC,WAAA,IAqBhBkL,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVuD,YAAa,CAACxzC,IACd6a,SAA4B,IAAnB6X,EAAO7X,QAChB44B,aAAc/gB,EAAO+gB,cAAgB,IACrCC,eAAiCr9B,IAArBqc,EAAOghB,UAA2BhhB,EAAOghB,UAAY,IACjEC,UAAuBt9B,IAAhBqc,EAAOihB,KAAsBjhB,EAAOihB,KAAO,GAClD1lC,WAAyBoI,IAAjBqc,EAAOzkB,MAAuBykB,EAAOzkB,MAAQ,EACrD2lC,mBAAyCv9B,IAAzBqc,EAAOkhB,cAA+BlhB,EAAOkhB,cAAgB,EAC7EC,gBAAmCx9B,IAAtBqc,EAAOmhB,WAA4BnhB,EAAOmhB,WAAa,GACpEC,OAASphB,EAAOohB,KAChBC,iBAAoC19B,IAAtBqc,EAAOshB,WAA4BthB,EAAOqhB,YAAc,GACtEE,iBAAqC59B,IAAvBqc,EAAOuhB,YAA6BvhB,EAAOuhB,YAAc,GACzE92C,CACN,CA0TCo2C,OAnWYj2C,EAAAi2C,EAAAtlB,GAyCZslB,EAAAnhD,UA+TD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KACjB,EAACkB,EAAAsgD,EAAArgD,CAAAA,CAAAA,IAAAC,cAAAA,IAxTD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQuD,WACvB,EAAC9kC,IASD,SAAgBzc,GACZC,EAAAH,KAAIk+C,IAAAA,IAAQuD,YAAcvhD,EAC1BF,KAAKmuB,KAAKuxB,QACd,GAAC,CAAAv+C,IAAAC,YAAAA,IAOD,WACI,YAAY+sB,KAAKg0B,OAAOC,SAASC,iBACrC,GAAC,CAAAlhD,IAAA,UAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQp1B,OACvB,EAACnM,IASD,SAAYzc,GACRA,IAAUA,EACNC,EAAIH,KAAAk+C,IAAAA,IAAQp1B,UAAY5oB,IAG5BC,OAAI+9C,IAAAA,IAAQp1B,QAAU5oB,EACtBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAAC,WAAAA,IAOD,WACI,IAAKpB,KAAKsiD,UACN,OAAO,EAEX,IAAKniD,EAAAH,KAAIk+C,IAAAA,IAAQp1B,QACb,OACH,EACD,IAAMy5B,EAAiBviD,KAAKmuB,KAAKq0B,OAAOD,eACxC,OAAIA,IAAmBj0C,IAGnBi0C,IAAmBl0C,EAI3B,GAAClN,CAAAA,IAAAC,eAAAA,IAOD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQwD,YACvB,EAAC/kC,IAOD,SAAiBzc,GACTA,UACAA,EAAQ,KAERC,EAAIH,KAAAk+C,IAAAA,IAAQwD,eAAiBxhD,IAGjCC,EAAAH,KAAIk+C,IAAAA,IAAQwD,aAAexhD,EAC3BF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,IAAAC,YAAAA,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQyD,SACvB,EAAChlC,IAOD,SAAczc,GACNA,UACAA,EAAQ,KAERC,EAAAH,KAAIk+C,IAAAA,IAAQyD,YAAczhD,IAG9BC,EAAIH,KAAAk+C,IAAAA,IAAQyD,UAAYzhD,EACxBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,OAAAC,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ0D,IACvB,EAACjlC,IAOD,SAASzc,GACDA,UACAA,EAAQ,IAERC,EAAIH,KAAAk+C,IAAAA,IAAQ0D,OAAS1hD,IAGzBC,EAAIH,KAAAk+C,IAAAA,IAAQ0D,KAAO1hD,EACnBF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,IAAAC,QAAAA,IAOD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQhiC,KACvB,EAACS,IAOD,SAAUzc,GACFA,UACAA,EAAQ,GAERC,EAAIH,KAAAk+C,IAAAA,IAAQhiC,QAAUhc,IAG1BC,EAAAH,KAAIk+C,IAAAA,IAAQhiC,MAAQhc,EACpBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAAC,gBAAAA,IAOD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ2D,aACvB,EAACllC,IAOD,SAAkBzc,GACVA,UACAA,EAAQ,GAERC,EAAAH,KAAIk+C,IAAAA,IAAQ2D,gBAAkB3hD,IAGlCC,EAAAH,KAAIk+C,IAAAA,IAAQ2D,cAAgB3hD,EAC5BF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,aAAAC,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ4D,UACvB,EAACnlC,IASD,SAAezc,GACPA,UACAA,EAAQ,IAERC,EAAAH,KAAIk+C,IAAAA,IAAQ4D,aAAe5hD,IAG/BC,EAAIH,KAAAk+C,IAAAA,IAAQ4D,WAAa5hD,EACzBF,KAAKmuB,KAAKuxB,SACd,IAACv+C,IAAA,OAAAC,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ6D,IACvB,EAACplC,IAOD,SAASzc,GACLA,GAAmB,IAAVA,EACLC,EAAIH,KAAAk+C,IAAAA,IAAQ6D,OAAS7hD,IAGzBC,EAAAH,KAAIk+C,IAAAA,IAAQ6D,KAAO7hD,EACnBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,cAAAC,IASD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQ8D,WACvB,EAACrlC,IASD,SAAgBzc,GACRA,UACAA,EAAQ,IAERC,EAAAH,KAAIk+C,IAAAA,IAAQ8D,cAAgB9hD,IAGhCC,EAAIH,KAAAk+C,IAAAA,IAAQ8D,YAAc9hD,EAC1BF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,cAAAC,IASD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQgE,WACvB,EAACvlC,IASD,SAAgBzc,GACRA,UACAA,EAAQ,GAERC,EAAAH,KAAIk+C,IAAAA,IAAQgE,cAAgBhiD,IAGhCC,EAAAH,KAAIk+C,IAAAA,IAAQgE,YAAchiD,EAC1BF,KAAKmuB,KAAKuxB,SACd,KAAC8B,CAAA,EAnWoBv3C,ICPci0C,gBAAAv+C,EASjC,SAAA8iD,gBAAcvmB,SAAAA,GAchB,SAAAumB,EAAYt0B,EAAYiO,OAA+ChxB,EAQjE,YARkB,IAAAgxB,IAAAA,EAAiC,CAACsmB,UAAW,KAEjEt3C,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMiO,IAAQp8B,MAXRmuB,UAAIruB,EAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,IAAAj+C,UAAA,EAAAC,WAahBkL,IAAAA,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVwE,UAAYtmB,QAAQsmB,UAAyDtmB,EAAQsmB,UAAY,GACnGt3C,CACN,CAUCq3C,OAjCel3C,EAAAk3C,EAAAvmB,GAuBfh7B,EAAAuhD,EAAAthD,CAAAA,CAAAA,IAAAC,YAAAA,IAiBD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQwE,SACvB,EAAC/lC,IAZD,SAAczc,GACVC,EAAIH,KAAAk+C,IAAAA,IAAQwE,UAAYxiD,GAAS,EACjCF,KAAKmuB,KAAKuxB,QACd,KAAC+C,CAAA,CAjCevmB,CAAQjyB,ICNYwhC,gBAAA9rC,gBAAAgjD,gBAAAhjD,EAAA,aAAAijD,gBAAAjjD,EAAAkjD,qBAAAA,gBAAAljD,EAAA,oBAAAmjD,gBAAAnjD,EAAAojD,oBAAAA,gBAAApjD,qBAAAqjD,gBAAArjD,EAAA,yBAAAsjD,gBAAAtjD,EAAAujD,wBAAAA,gBAAAvjD,EAAA,sBAAAwjD,gBAAAxjD,EAAAyjD,qBAAAA,gBAAAzjD,yBAAA0jD,gBAAA1jD,EAAA,sBAAA2jD,gBAAA3jD,EAAA4jD,qBAAAA,gBAAA5jD,EAAA,oBAAA6jD,gBAAA7jD,mBAAA8jD,gBAAA9jD,EAAA,mBAAA+jD,gBAAA/jD,EAAAgkD,qBAAAA,gBAAAhkD,EAAA,sBAsPlCikD,yBAAU1nB,GAoHZ,SAAA0nB,EAAYxnB,GAMXhxB,IAAAA,EA8B2B,OA5BxBA,EAAA8wB,EAAAl4B,KAAMo4B,KAAAA,EAAQjO,KAAMiO,IAAQp8B,KAACF,OAAAC,eAAAs8B,EAAAjxB,GAAAu4C,GAAA,CAAAzjD,MAAA2jD,KAAA/jD,OAAAC,eAAAs8B,EAAAjxB,GAAAs4C,GAAAxjD,CAAAA,MAAA4jD,KAAAhkD,OAAAC,eAAAs8B,EAAAjxB,GAAAq4C,GAAA,CAAAvjD,MAAA6jD,KAAA34C,EA/FxByxB,aAAO,EAAAzxB,EASP44C,oBAAc54C,EAAAA,EASd64C,qBAAa74C,EASb84C,wBAAkB,EAAA94C,EASlB+4C,qBAAe/4C,EAAAA,EAOfg5C,sBAAgB,EAAAh5C,EAOhBi5C,oBAAcj5C,EAAAA,EAOvBk5C,mBAAWl5C,EASFm5C,wBAAkBzkD,EAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAqgC,GAAAxrC,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAu3C,GAAA,CAAA1iD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAw3C,GAAA3iD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAy3C,GAAA,CAAA5iD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA03C,GAAA7iD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA23C,GAAA,CAAA9iD,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA43C,IAAA/iD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA63C,GAAA,CAAAhjD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA83C,IAAAjjD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA+3C,GAAAljD,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAg4C,IAAAnjD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAi4C,GAAApjD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAk4C,GAAA,CAAArjD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAm4C,GAAAtjD,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAo4C,GAAA,CAAAvjD,UAAAC,EAAAA,WAAAkL,IAAAA,EAmB3Bo5C,iBAAW,EAYPp5C,EAAKd,GAAK8xB,EAAQ9xB,GAClBc,EAAK+2C,OAAS/lB,EAAQ+lB,OACtB/2C,EAAK+iB,KAAOiO,EAAQjO,KAEpB/iB,EAAKyxB,QAAU,CAAE,EACjBzxB,EAAK44C,eAAiB,CAAE,EACxB54C,EAAK64C,cAAgB,CAAE,EACvB74C,EAAK84C,mBAAqB,CAAE,EAC5B94C,EAAK+4C,gBAAkB,CAAE,EACzB/4C,EAAKg5C,iBAAmB,CAAE,EAC1Bh5C,EAAKi5C,eAAiB,CAAE,EAExBj5C,EAAKk5C,aAAuC,IAAxBloB,EAAQkoB,YAE5BnkD,EAAAk8B,EAAAjxB,GAAAqgC,IAAAA,IAAmB,EACnBtrC,EAAAk8B,EAAAjxB,GAAAw3C,IAAAA,IAA0B,EAC1BziD,EAAAk8B,EAAAjxB,GAAA03C,IAAAA,IAAyB,EACzB3iD,EAAAk8B,EAAAjxB,GAAA43C,IAAAA,IAA8B,EAC9B7iD,EAAAk8B,EAAAjxB,GAAA83C,IAAAA,IAA2B,EAC3B/iD,EAAAk8B,EAAAjxB,GAAAg4C,IAAAA,IAA4B,EAC5BjjD,EAAAk8B,EAAAjxB,GAAAk4C,IAAAA,IAA0B,EAE1BnjD,EAAAk8B,EAAAjxB,GAAAo4C,IAAAA,MAAwBpnB,EAAQqoB,cAEhCr5C,EAAKm5C,mBAAqB,IAAI3kD,EAAa,IAAImG,oBAE/C5F,EAAAk8B,EAAAjxB,GAAAq4C,IAAAA,MAAwBr4C,CAC5B,CAzJYG,EAAAq4C,EAAA1nB,GAyJX,IAAA97B,EAAAwjD,EAAAvjD,UAoJAujD,OApJAxjD,EAyJDskD,mBAAA,SAAmBC,GACf3kD,KAAK68B,QAAQ8nB,EAAWr6C,IAAMq6C,EAC9BxkD,OAAIsrC,IAAAA,MACJtrC,EAAIH,KAAA2iD,IAAAA,IAAc,IACtB,EAACviD,EAKDwkD,qBAAA,SAAqBD,UACV3kD,KAAK68B,QAAQ8nB,EAAWr6C,WACxBtK,KAAKgkD,eAAeW,EAAWr6C,WAC3BtK,KAACikD,cAAcU,EAAWr6C,WAC1BtK,KAACkkD,mBAAmBS,EAAWr6C,WAC/BtK,KAACmkD,gBAAgBQ,EAAWr6C,WAC5BtK,KAACokD,iBAAiBO,EAAWr6C,gBAC5B+5C,eAAeM,EAAWr6C,IACtCnK,OAAIsrC,IAAAA,MACJtrC,EAAIH,KAAA2iD,IAAAA,IAAc,IACtB,EAACviD,EAKDs/C,OAAA,WACI1/C,KAAKmiD,OAAOC,SAASyC,cAAc7kD,KAAKmuB,KAAK+wB,UACjD,EAAC9+C,EAKD++C,wBAAA,SAAwBwF,EAAwBrG,EAAkBwG,YAAAA,IAAAA,GAAkB,GAC5ExG,GACAt+C,KAAKgkD,eAAeW,EAAWr6C,IAAMq6C,EACrCxkD,EAAAH,KAAI4iD,IAAAA,eAEG5iD,KAAKgkD,eAAeW,EAAWr6C,IACtCnK,EAAAH,KAAI4iD,IAAAA,OAERziD,EAAAH,KAAI6iD,IAAAA,IAAqB,KACrBiC,GACA9kD,KAAKukD,mBAAmB9jD,SAAST,KAAM2kD,GAE3C3kD,KAAKmuB,KAAKgxB,wBAAwBwF,EAAYrG,EAASwG,EAC3D,EAAC1kD,EAKDi/C,oBAAA,SAAoBsF,EAAwBhG,GACpCA,GACA3+C,KAAKikD,cAAcU,EAAWr6C,IAAMq6C,EACpCxkD,EAAAH,KAAI8iD,IAAAA,eAEG9iD,KAAKikD,cAAcU,EAAWr6C,IACrCnK,EAAIH,KAAA8iD,IAAAA,OAER3iD,EAAIH,KAAA+iD,IAAAA,IAAoB,KACxB/iD,KAAKmuB,KAAKkxB,oBAAoBsF,EAAYhG,EAC9C,EAACv+C,EAKDm/C,yBAAA,SAAyBoF,EAAwB9F,GACzCA,GACA7+C,KAAKkkD,mBAAmBS,EAAWr6C,IAAMq6C,EACzCxkD,EAAAH,KAAIgjD,IAAAA,eAEGhjD,KAAKkkD,mBAAmBS,EAAWr6C,IAC1CnK,EAAAH,KAAIgjD,IAAAA,OAER7iD,EAAAH,KAAIijD,IAAAA,IAAyB,KAC7BjjD,KAAKmuB,KAAKoxB,yBAAyBoF,EAAY9F,EACnD,EAACz+C,EAKDk/C,sBAAA,SAAsBqF,EAAwB/F,GACtCA,GACA5+C,KAAKmkD,gBAAgBQ,EAAWr6C,IAAMq6C,EACtCxkD,OAAI+iD,IAAAA,oBAEQiB,gBAAgBQ,EAAWr6C,IACvCnK,OAAI+iD,IAAAA,OAER/iD,EAAIH,KAAAmjD,IAAAA,IAAsB,KAC1BnjD,KAAKmuB,KAAKmxB,sBAAsBqF,EAAY/F,EAChD,EAACx+C,EAKDo/C,sBAAA,SAAsBmF,EAAwB5F,GACtCA,GACA/+C,KAAKokD,iBAAiBO,EAAWr6C,IAAMq6C,EACvCxkD,EAAIH,KAAAojD,IAAAA,eAEOpjD,KAACokD,iBAAiBO,EAAWr6C,IACxCnK,EAAIH,KAAAojD,IAAAA,OAERjjD,EAAIH,KAAAqjD,IAAAA,IAAuB,KAC3BrjD,KAAKmuB,KAAKqxB,sBAAsBmF,EAAY5F,EAChD,EAAC3+C,EAKDq/C,qBAAA,SAAqBkF,EAAwB3F,GACrCA,GACAh/C,KAAKqkD,eAAeM,EAAWr6C,IAAMq6C,EACrCxkD,EAAAH,KAAIsjD,IAAAA,eAEOtjD,KAACqkD,eAAeM,EAAWr6C,IACtCnK,EAAIH,KAAAsjD,IAAAA,OAERnjD,EAAAH,KAAIujD,IAAAA,IAAqB,KACzBvjD,KAAKmuB,KAAKsxB,qBAAqBkF,EAAY3F,EAC/C,EAAC5+C,EAYD2kD,kBAAA,SAAkBC,EAAqB1G,GACnC,YAAY2G,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWrG,UAAYA,EAExC,OADAqG,EAAWrG,QAAUA,EACd4G,CACX,EACJ,EAAC9kD,EAWD+kD,qBAAA,SAAqBH,EAAqBtG,GACtC,OAAO1+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWjG,aAAeA,EAE3C,OADAiG,EAAWjG,WAAaA,EACjBwG,CACX,EACJ,EAAC9kD,EAWDglD,iBAAA,SAAiBJ,EAAqBzG,GAClC,OAAOv+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWpG,SAAWA,EAEvC,OADAoG,EAAWpG,OAASA,EACb2G,CACX,EACJ,EAAC9kD,EAYDilD,mBAAA,SAAmBL,EAAqBpG,GACpC,OAAW5+C,KAACilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAW/F,WAAaA,EAEzC,OADA+F,EAAW/F,SAAWA,EACfsG,CACX,EACJ,EAAC9kD,EAYDklD,sBAAA,SAAsBN,EAAqBnG,GACvC,OAAO7+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAW9F,cAAgBA,EAE5C,OADA8F,EAAW9F,YAAcA,EAClBqG,CACX,EACJ,EAAC9kD,EAYDmlD,iBAAA,SAAiBP,EAAqBrG,GAClC,OAAW3+C,KAACilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWhG,SAAWA,EAIvC,OAHIuG,IACAP,EAAWhG,OAASA,GAEjBuG,CACX,EACJ,EAAC9kD,EAYDolD,oBAAA,SAAoBR,EAAqBlG,GACrC,OAAW9+C,KAACilD,YAAYD,EAAW,SAACL,GAChCA,EAAW7F,SAAWA,CAC1B,EACJ,EAAC1+C,EAYDqlD,kBAAA,SAAkBT,EAAqBjgB,GACnC,OAAO/kC,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAW5f,UAAYA,EAIxC,OAHImgB,IACAP,EAAW5f,QAAUA,GAElBmgB,CACX,EACJ,EAAC9kD,EAYDslD,mBAAA,SAAmBV,EAAqBxG,GACpC,OAAOx+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWnG,WAAaA,EAIzC,OAHI0G,IACAP,EAAWnG,SAAWA,GAEnB0G,CACX,EACJ,EAAC9kD,EAYDulD,oBAAA,SAAoBX,EAAqBvG,GACrC,OAAOz+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAWP,EAAWlG,YAAcA,EAI1C,OAHIyG,IACAP,EAAWlG,UAAYA,GAEpByG,CACX,EACJ,EAAC9kD,EASD6kD,YAAA,SAAYD,EAAqB15B,GAE7B,IADA,IAAI45B,GAAU,EACLzhD,EAAI,EAAG8S,EAAMyuC,EAAU7hD,OAAQM,EAAI8S,EAAK9S,IAAK,CAClD,IACIkhD,EAAa3kD,KAAK68B,QADXmoB,EAAUvhD,IAEjBkhD,IACAO,EAAU55B,EAASq5B,IAAeO,EAEzC,CACD,OAAOA,CACX,EAAC9kD,EA8CD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,UACjB,EAAC9C,EAAA0iD,EAAAziD,CAAAA,CAAAA,IAAAC,cAAAA,IAtgBD,WACI,OACJ,CAAA,GAACD,CAAAA,oBAAAC,IAoBD,WACI,OAAAjB,EAAOH,KAAIwjD,IAAAA,GACf,EAAC7mC,IAfD,SAAkBzc,GACVC,EAAIH,KAAAwjD,IAAAA,MAAoBtjD,IAG5BC,EAAIH,KAAAwjD,IAAAA,IAAkBtjD,EACtBF,KAAK0/C,SACT,IAACv+C,IAAA,aAAAC,IAcD,WACI,OAAAjB,EAAOH,KAAIyrC,IAAAA,GACf,GAAC,CAAAtqC,IAAAC,YAAAA,IAKD,WAII,OAHIjB,EAACH,KAAI2iD,IAAAA,MACLxiD,OAAIwiD,IAAAA,IAAc7iD,OAAO46B,KAAK16B,KAAK68B,UAEvC18B,EAAOH,KAAI2iD,IAAAA,GACf,IAACxhD,IAAA,oBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAI4iD,IAAAA,GACf,GAACzhD,CAAAA,uBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAI6iD,IAAAA,MACL1iD,OAAI0iD,IAAAA,IAAqB/iD,OAAO46B,KAAK16B,KAAKgkD,iBAE9C7jD,EAAOH,KAAI6iD,IAAAA,GACf,GAAC,CAAA1hD,IAAAC,mBAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAI8iD,IAAAA,GACf,GAAC3hD,CAAAA,sBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAI+iD,IAAAA,MACL5iD,EAAAH,KAAI+iD,IAAAA,IAAoBjjD,OAAO46B,KAAK16B,KAAKikD,gBAE7C9jD,EAAOH,KAAI+iD,IAAAA,GACf,GAAC,CAAA5hD,IAAAC,wBAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAIgjD,IAAAA,GACf,GAAC,CAAA7hD,IAAA,uBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAIijD,IAAAA,MACL9iD,EAAAH,KAAIijD,IAAAA,IAAyBnjD,OAAO46B,KAAK16B,KAAKkkD,qBAElD/jD,EAAOH,KAAIijD,IAAAA,GACf,GAAC9hD,CAAAA,yBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIkjD,IAAAA,GACf,GAAC,CAAA/hD,IAAAC,oBAAAA,IAKD,WAII,OAHIjB,EAACH,KAAImjD,IAAAA,MACLhjD,EAAIH,KAAAmjD,IAAAA,IAAsBrjD,OAAO46B,KAAK16B,KAAKmkD,kBAE/ChkD,EAAOH,KAAImjD,IAAAA,GACf,GAAC,CAAAhiD,IAAA,sBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIojD,IAAAA,GACf,GAACjiD,CAAAA,IAAAC,qBAAAA,IAKD,WAII,OAHIjB,EAACH,KAAIqjD,IAAAA,MACLljD,EAAAH,KAAIqjD,IAAAA,IAAuBvjD,OAAO46B,KAAK16B,KAAKokD,mBAEhDjkD,EAAOH,KAAIqjD,IAAAA,GACf,GAAC,CAAAliD,IAAA,mBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAIujD,IAAAA,MACLpjD,EAAIH,KAAAujD,IAAAA,IAAqBzjD,OAAO46B,KAAK16B,KAAKqkD,iBAE9ClkD,EAAOH,KAAIujD,IAAAA,GACf,GAACpiD,CAAAA,wBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIsjD,IAAAA,GACf,KAACM,CAAA,EA7SmB35C,aAAS85C,KAsnBbz6B,IAAAA,OACN6R,EAASn7B,KAAKmiD,OAAOtW,MAAM1Q,OACjC,IAAK,IAAM7wB,KAAM6wB,EAAQ,CACrB,IAAMK,EAAQL,EAAO7wB,GACrBnK,EAAIH,KAAA0jD,IAAAA,IAAoBloB,EAC3B,CACDx7B,KAAKmiD,OAAOtW,MAAM7M,eAAe1+B,UAAU,SAACurC,EAAcrQ,GACtDr7B,EAAAmpB,EAAIo6B,IAAAA,IAAoBloB,EAC5B,GACAx7B,KAAKmiD,OAAOtW,MAAM5M,iBAAiB3+B,UAAU,SAACurC,EAAarQ,GACvDr7B,EAAAmpB,EAAIq6B,IAAAA,IAAqBnoB,EAC7B,EACJ,CAAC,SAAAsoB,GAEkBtoB,GACf,IAAM4U,EAAe5U,EAAMqB,QAC3B,IAAK,IAAIvyB,KAAM8lC,EAAc,CACzB,IACMiO,EAAqBr+C,KAAKmiD,OAAOC,SAASwD,oBAAoBt7C,GACpE,GAAI+zC,EAAmBjc,SAAWpiC,KAAKsK,GAAI,CACvC,IAAMq6C,EAAa,IAAIxG,GAAWn+C,KAHlBowC,EAAa9lC,GAGwB+zC,GACrDr+C,KAAK68B,QAAQ8nB,EAAWr6C,IAAMq6C,EAC9BxkD,OAAIsrC,IAAAA,MACJtrC,OAAIwiD,IAAAA,IAAc,IACrB,CACJ,CACL,CAAC,SAAAkB,GAEmBroB,GAChB,IAAMqqB,EAAgBrqB,EAAMqB,QAC5B,IAAK,IAAIvyB,KAAMu7C,EAEQ7lD,KAAK68B,QADHgpB,EAAcv7C,GACUA,IAClC80C,WACXj/C,EAAAH,KAAIyrC,IAAAA,MACJtrC,EAAAH,KAAI2iD,IAAAA,IAAc,IAE1B,CCp5BmC,IAAAzE,gBAAAv+C,EAejC,SAAAmmD,gBAAiB5pB,SAAAA,GAqBnB,SAAA4pB,EAAY33B,EAAYiO,OASlBhxB,EAeA,YAxBkBgxB,IAAAA,IAAAA,EASpB,KAEAhxB,EAAA8wB,EAAAl4B,UAAMmqB,EAAMiO,IAAShxB,MA3BT+iB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,IAAAj+C,UAAA,EAAAC,WA6BhBkL,IAAAA,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV9T,OAAQhO,EAAQgO,KAChB2b,UAAW,IAAIn1C,aAAawrB,EAAQ2pB,WAAa,CAAC,GAAK,GAAK,KAC5DC,UAAY5pB,QAAQ4pB,UAAyD5pB,EAAQ4pB,UAAY,GACjGzd,OAAyB,IAAlBnM,EAAQmM,MACf0d,UAAW,IAAIr1C,aAAawrB,EAAQ6pB,WAAa,CAAC,GAAK,GAAK,KAC5DC,UAAY9pB,QAAQ8pB,UAAyD9pB,EAAQ8pB,UAAY,GACjGC,UAAY/pB,QAAQ+pB,UAAyD/pB,EAAQ+pB,UAAY,EACjGC,YAAahqB,EAAQgqB,WACvBh7C,CACN,CAoMC,OAlPkBG,EAAAu6C,EAAA5pB,GA8ClB4pB,EAAAzlD,UAyMD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KACjBhE,KAAA,EAACkB,EAAA4kD,EAAA,CAAA,CAAA3kD,IAAA,OAAAC,IAvLD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ9T,IACvB,EAACztB,IAfD,SAASzc,GACDC,EAAAH,KAAIk+C,IAAAA,IAAQ9T,OAASlqC,IAGzBC,OAAI+9C,IAAAA,IAAQ9T,KAAOlqC,EACnBF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,IAAAC,YAAAA,IAgCD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQ6H,SACvB,EAACppC,IAlBD,SAAczc,GACV,IAAM6lD,EAAY5lD,EAAAH,KAAIk+C,IAAAA,IAAQ6H,UAC1BA,EAAU,KAAO7lD,EAAM,IAAM6lD,EAAU,KAAO7lD,EAAM,IAAM6lD,EAAU,KAAO7lD,EAAM,KAGrF6lD,EAAU,GAAK,GACfA,EAAU,GAAK,GACfA,EAAU,GAAK,GACf/lD,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,YAAAC,IAiCD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ8H,SACvB,EAACrpC,IAjBD,SAAczc,GACNC,OAAI+9C,IAAAA,IAAQ8H,YAAc9lD,IAG9BC,EAAIH,KAAAk+C,IAAAA,IAAQ8H,UAAY9lD,EACxBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAAC,QAAAA,IA+BD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ3V,KACvB,EAAC5rB,IAfD,SAAUzc,GACFC,EAAAH,KAAIk+C,IAAAA,IAAQ3V,QAAUroC,IAG1BC,EAAIH,KAAAk+C,IAAAA,IAAQ3V,MAAQroC,EACpBF,KAAKmuB,KAAKuxB,SACd,IAACv+C,IAAA,YAAAC,IAgCD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ+H,SACvB,EAACtpC,IAlBD,SAAczc,GACV,IAAI+lD,EAAY9lD,EAAAH,KAAIk+C,IAAAA,IAAQ+H,UACxBA,EAAU,KAAO/lD,EAAM,IAAM+lD,EAAU,KAAO/lD,EAAM,IAAM+lD,EAAU,KAAO/lD,EAAM,KAGrF+lD,EAAU,GAAK,GACfA,EAAU,GAAK,GACfA,EAAU,GAAK,GACfjmD,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,gBAAAC,IAiCD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQgI,SACvB,EAACvpC,IAjBD,SAAczc,GACNC,EAAAH,KAAIk+C,IAAAA,IAAQgI,YAAchmD,IAG9BC,OAAI+9C,IAAAA,IAAQgI,UAAYhmD,EACxBF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,gBAAAC,IA8BD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQiI,SACvB,EAACxpC,IAdD,SAAczc,GACVC,EAAIH,KAAAk+C,IAAAA,IAAQiI,UAAYjmD,EACxBF,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,IAAAC,YAAAA,IA+BD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQkI,SACvB,EAACzpC,IAfD,SAAczc,GACNC,OAAI+9C,IAAAA,IAAQkI,YAAclmD,IAG9BC,EAAAH,KAAIk+C,IAAAA,IAAQkI,UAAYlmD,EACxBF,KAAKmuB,KAAKuxB,SACd,IAACv+C,IAAA,OAAAC,IAcD,WACI,MAAO,EACX,KAAC0kD,CAAA,CAlPkB5pB,CAAQjyB,ICTiBi0C,gBAAAv+C,EAAA,SAW1C0mD,gBAAanqB,SAAAA,GAqBf,SAAAmqB,EAAYl4B,EAAYiO,GAMlBhxB,IAAAA,EAYA,YAlBkBgxB,IAAAA,IAAAA,EAMpB,CAAA,IAEAhxB,EAAA8wB,EAAAl4B,KAAMmqB,KAAAA,EAAMiO,IAAQp8B,MAxBRmuB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,WA0BhBkL,IAAAA,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVuD,YAAarlB,EAAQqlB,aAAe,CAACxzC,IACrCs6B,OAAyB,IAAlBnM,EAAQmM,MACf0d,UAAW,IAAIr1C,aAAawrB,EAAQ6pB,WAAa,CAAC,GAAK,GAAK,KAC5DC,UAAY9pB,QAAQ8pB,UAAyD9pB,EAAQ8pB,UAAY,GACjGC,UAAY/pB,QAAQ+pB,UAAyD/pB,EAAQ+pB,UAAY,GACnG/6C,CACN,CA6GC,OArJcG,EAAA86C,EAAAnqB,GAwCdmqB,EAAAhmD,UA6HD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KACjB,EAACkB,EAAAmlD,EAAA,CAAA,CAAAllD,IAAAC,cAAAA,IA1GD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQuD,WACvB,EAAC9kC,IAdD,SAAgBzc,GACZC,EAAIH,KAAAk+C,IAAAA,IAAQuD,YAAcvhD,EAC1BF,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,IAAAC,QAAAA,IA+BD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ3V,KACvB,EAAC5rB,IAfD,SAAUzc,GACFC,EAAIH,KAAAk+C,IAAAA,IAAQ3V,QAAUroC,IAG1BC,EAAIH,KAAAk+C,IAAAA,IAAQ3V,MAAQroC,EACpBF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,IAAAC,YAAAA,IAgCD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQ+H,SACvB,EAACtpC,IAlBD,SAAczc,GACV,IAAI+lD,EAAY9lD,EAAAH,KAAIk+C,IAAAA,IAAQ+H,UACxB/lD,GAAS+lD,EAAU,KAAO/lD,EAAM,IAAM+lD,EAAU,KAAO/lD,EAAM,IAAM+lD,EAAU,KAAO/lD,EAAM,KAG9F+lD,EAAU,GAAK,GACfA,EAAU,GAAK,GACfA,EAAU,GAAK,GACfjmD,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,YAAAC,IAiCD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQgI,SACvB,EAACvpC,IAjBD,SAAczc,GACNC,EAAIH,KAAAk+C,IAAAA,IAAQgI,YAAchmD,IAG9BC,EAAAH,KAAIk+C,IAAAA,IAAQgI,UAAYhmD,EACxBF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAA,YAAAC,IAiCD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQiI,SACvB,EAACxpC,IAjBD,SAAczc,GACNC,EAAIH,KAAAk+C,IAAAA,IAAQiI,YAAcjmD,IAG9BC,EAAAH,KAAIk+C,IAAAA,IAAQiI,UAAYjmD,EACxBF,KAAKmuB,KAAKuxB,SACd,KAAC2G,CAAA,CArJcnqB,CAAQjyB,ICjBYi0C,gBAAAv+C,EAYjC,SAAA2mD,gBAAepqB,SAAAA,GAqBjB,SAAAoqB,EAAYn4B,EAAYiO,GASlBhxB,IAAAA,EAeA,YAxBkB,IAAAgxB,IAAAA,EASpB,CAAE,IAEFhxB,EAAA8wB,EAAAl4B,KAAMmqB,KAAAA,EAAMiO,UA3BAjO,UAAIruB,EAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAA,CAAAj+C,UAAAC,EAAAA,eA6BhBkL,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVqI,UAAYnqB,QAAQmqB,UAAyDnqB,EAAQmqB,UAAY,EACjGC,aAAqC,IAAxBpqB,EAAQoqB,YACrBC,mBAAiD,IAA9BrqB,EAAQqqB,kBAC3BC,wBAA0BtqB,QAAQsqB,wBAAqFtqB,EAAQsqB,wBAA0B,EACzJC,wBAA0BvqB,QAAQuqB,wBAAqFvqB,EAAQuqB,wBAA0B,EACzJC,kBAAmBxqB,EAAQwqB,gBAC3BC,aAAezqB,QAAQyqB,aAA+DzqB,EAAQyqB,aAAe,EAC7GC,aAAe1qB,QAAQ0qB,aAA+D1qB,EAAQ0qB,aAAe,GAC/G17C,CACN,CA6LC,OA3OgBG,EAAA+6C,EAAApqB,GA8ChBoqB,EAAAjmD,UAkMD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,UACjB,EAAC9C,EAAAolD,IAAAnlD,IAAA,YAAAC,IAnLD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQqI,SACvB,EAAC5pC,IAZD,SAAczc,GACVC,EAAAH,KAAIk+C,IAAAA,IAAQqI,UAAYrmD,EACxBF,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,kBAAAC,IA8BD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQsI,WACvB,EAAC7pC,IAfD,SAAgBzc,GACRC,EAAIH,KAAAk+C,IAAAA,IAAQsI,cAAgBtmD,IAGhCC,OAAI+9C,IAAAA,IAAQsI,YAActmD,EAC1BF,KAAKmuB,KAAK44B,UACd,GAAC,CAAA5lD,IAAAC,oBAAAA,IA6BD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQuI,iBACvB,EAAC9pC,IAfD,SAAsBzc,GACdC,EAAAH,KAAIk+C,IAAAA,IAAQuI,oBAAsBvmD,IAGtCC,EAAIH,KAAAk+C,IAAAA,IAAQuI,kBAAoBvmD,EAChCF,KAAKmuB,KAAK44B,UACd,IAAC5lD,IAAA,0BAAAC,IA+BD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQwI,uBACvB,EAAC/pC,IAjBD,SAA4Bzc,GACpBC,OAAI+9C,IAAAA,IAAQwI,0BAA4BxmD,IAG5CC,EAAAH,KAAIk+C,IAAAA,IAAQwI,wBAA0BxmD,EACtCF,KAAKmuB,KAAK44B,UACd,GAAC5lD,CAAAA,8BAAAC,IA+BD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQyI,uBACvB,EAAChqC,IAfD,SAA4Bzc,GACpBC,EAAIH,KAAAk+C,IAAAA,IAAQyI,0BAA4BzmD,IAG5CC,OAAI+9C,IAAAA,IAAQyI,wBAA0BzmD,EACtCF,KAAKmuB,KAAK44B,UACd,GAAC,CAAA5lD,IAAAC,kBAAAA,IA6BD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ0I,eACvB,EAACjqC,IAfD,SAAoBzc,GACZC,EAAAH,KAAIk+C,IAAAA,IAAQ0I,kBAAoB1mD,IAGpCC,EAAIH,KAAAk+C,IAAAA,IAAQ0I,gBAAkB1mD,EAC9BF,KAAKmuB,KAAK44B,UACd,IAAC5lD,IAAA,eAAAC,IA6BD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQ2I,YACvB,EAAClqC,IAfD,SAAiBzc,GACTC,OAAI+9C,IAAAA,IAAQ2I,eAAiB3mD,IAGjCC,EAAAH,KAAIk+C,IAAAA,IAAQ2I,aAAe3mD,EAC3BF,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,mBAAAC,IA6BD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ4I,YACvB,EAACnqC,IAfD,SAAiBzc,GACTC,EAAIH,KAAAk+C,IAAAA,IAAQ4I,eAAiB5mD,IAGjCC,OAAI+9C,IAAAA,IAAQ4I,aAAe5mD,EAC3BF,KAAKmuB,KAAKuxB,SACd,GAAC,CAAAv+C,IAAAC,OAAAA,IAcD,WACI,IAAM4lD,EAAK7mD,EAAGH,KAAIk+C,IAAAA,IAClB,OAAU8I,EAAMT,UAAS,cACvBS,EAAMR,0BACNQ,EAAMP,kBACNO,cAAAA,EAAMN,wBAAuB,cAC7BM,EAAML,sCACNK,EAAMJ,eACZ,KAACN,CAAA,CA3OgBpqB,CAAQjyB,ICLoFi0C,gBAAAv+C,EAAAsnD,SAAAA,gBAAAtnD,wBAAAunD,gBAAAvnD,EAAA,6BAAAwnD,gBAAAxnD,EAAA,kBAYpGynD,gBAAsBlrB,SAAAA,GAqC/B,SAAAkrB,EAAY5E,EAAgBr4C,OAKtBiB,EAuBkG,YA5B5E,IAAAjB,IAAAA,EAKxB,KAEAiB,EAAA8wB,EAAAl4B,KAAMw+C,KAAAA,EAAQr4C,IAAKiB,MAvCPo3C,YAAMp3C,EAAAA,EAObi8C,kBAAY,EAAAvnD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA67C,GAAA,CAAAhnD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA87C,GAAA,CAAAjnD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA+7C,GAAAlnD,CAAAA,UAAAC,EAAAA,WAkCjBkL,IAAAA,EAAKo3C,OAASA,EAEdriD,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV1pC,KAAMrK,EAAIqK,MAAQ,GAClBC,IAAKtK,EAAIsK,KAAO,IAChB6yC,IAAKn9C,EAAIm9C,KAAO,GAChBC,QAASp9C,EAAIo9C,SAAW,MACxBpX,WAAYn9B,KACZw0C,kBAAmBx0C,KACnBy0C,qBAAsBz0C,MAG1B7S,EAAAk8B,EAAAjxB,GAAA67C,IAAAA,KAA2B,EAC3B9mD,EAAAk8B,EAAAjxB,GAAA87C,IAAAA,KAAkC,EAElC/mD,EAAAk8B,EAAAjxB,GAAA+7C,IAAAA,IAAuB/7C,EAAKo3C,OAAOr0B,KAAKu5B,WAAWpnD,UAAW,WAC1D8K,EAAKN,UACT,GAEAM,EAAKi8C,aAAe,IAAIznD,EAAa,IAAImG,GAAAA,iBAA2DqF,CACxG,CAlE+BG,EAAA67C,EAAAlrB,GAkE9B,IAAA97B,EAAAgnD,EAAA/mD,UA2JA+mD,OA3JAhnD,EAgKD4K,MAAA,WACI,IAEM2xC,EAAW38C,KAAKwiD,OAAOr0B,KAAKwuB,SAC5BgL,EAAShL,EAHK,GAGmBA,EAFlB,GAGf4K,EAAUpnD,EAAAH,KAAIk+C,IAAAA,IAAQqJ,QACxBD,EAAMnnD,EAAAH,KAAIk+C,IAAAA,IAAQoJ,KACN,MAAZC,GAAgC,QAAZA,GAAqBI,EAAS,GAAmB,QAAZJ,GAAqBI,EAAS,KACvFL,GAAYK,GAGhBx0C,IADAm0C,EAAM99C,KAAKqF,IAAIy4C,EAAK,OACG99C,KAAKo+C,GAAK,KAAQD,EAAQxnD,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,KAAMrU,EAAAH,KAAIk+C,IAAAA,IAAQzpC,IAAKtU,EAAIH,KAAAk+C,IAAAA,IAAQ/N,YAChGhwC,EAAAH,KAAIinD,IAAAA,KAAuB,EAC3B9mD,EAAAH,KAAIknD,IAAAA,KAA8B,EAClClnD,KAAKwiD,OAAOr0B,KAAKuxB,SACjB1/C,KAAKqnD,aAAa5mD,SAAST,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQ/N,WACjD,EAAC/vC,EAWDynD,UAAA,SAAU9X,EAA4B+X,EAAiBC,EAA4BvX,EAA0B1Y,GAEzG,IAAMkwB,EAAgBhoD,KAAKwiD,OAAOr0B,KAAK65B,cACjCC,EAAgBD,EAAcE,YAAc,EAC5CC,EAAiBH,EAAcI,aAAe,EAepD,OAbAL,EAAU,IAAMhY,EAAU,GAAKkY,GAAiBA,EAChDF,EAAU,IAAMhY,EAAU,GAAKoY,GAAkBA,EACjDJ,EAAU,GAAKD,EACfC,EAAU,GAAK,EAEfxuC,GAAUvZ,KAAKwnD,kBAAmBO,EAAWvX,GAC7CrgC,GAAcqgC,EAAS,EAAMA,EAAQ,IAErCA,EAAQ,GAAK,EACbA,EAAQ,KAAO,EAEfj3B,GAAUvZ,KAAKwiD,OAAO6F,kBAAmB7X,EAAS1Y,GAE3CA,CACX,EAAC13B,EAKD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,WACbhE,KAAKwiD,OAAOr0B,KAAKu5B,WAAW7mD,YAAWV,EAACH,KAAImnD,IAAAA,KAC5CnnD,KAAKqnD,aAAapmD,OACtB,EAACC,EAAAkmD,EAAA,CAAA,CAAAjmD,IAAA,MAAAC,IA/MD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQoJ,GACvB,EAAC3qC,IASD,SAAQzc,GACAA,IAAUC,EAAIH,KAAAk+C,IAAAA,IAAQoJ,MAG1BnnD,EAAAH,KAAIk+C,IAAAA,IAAQoJ,IAAMpnD,EAClBF,KAAK8K,WACR,GAAC3J,CAAAA,IAAAC,UAAAA,IAWF,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQqJ,OACvB,EAAC5qC,IAWD,SAAYzc,GACRA,EAAQA,GAAS,MACbC,EAAIH,KAAAk+C,IAAAA,IAAQqJ,UAAYrnD,IAGd,MAAVA,GAA2B,MAAVA,GAA2B,QAAVA,IAClCF,KAAK6K,MAAM,oCAAsC3K,EAAQ,0BACzDA,EAAQ,OAEZC,EAAAH,KAAIk+C,IAAAA,IAAQqJ,QAAUrnD,EACtBF,KAAK8K,WACT,GAAC3J,CAAAA,IAAAC,OAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,IACvB,EAACmI,IASD,SAASzc,GACDC,OAAI+9C,IAAAA,IAAQ1pC,OAAStU,IAGzBC,EAAIH,KAAAk+C,IAAAA,IAAQ1pC,KAAOtU,EACnBF,KAAK8K,WACT,GAAC,CAAA3J,IAAA,MAAAC,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQzpC,GACvB,EAACkI,IAOD,SAAQzc,GACAC,EAAIH,KAAAk+C,IAAAA,IAAQzpC,MAAQvU,IAGxBC,EAAIH,KAAAk+C,IAAAA,IAAQzpC,IAAMvU,EAClBF,KAAK8K,WACT,GAAC3J,CAAAA,iBAAAC,IASD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAEF5K,EAAIH,KAAAk+C,IAAAA,IAAQ/N,UACvB,GAAC,CAAAhvC,IAAA,oBAAAC,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIinD,IAAAA,MACJhwC,GAAY9W,OAAI+9C,IAAAA,IAAQ/N,WAAYhwC,OAAI+9C,IAAAA,IAAQsJ,mBAChDrnD,EAAIH,KAAAinD,IAAAA,KAAuB,GAExB9mD,EAAIH,KAAAk+C,IAAAA,IAAQsJ,iBACvB,GAAC,CAAArmD,IAAA,uBAAAC,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIknD,IAAAA,MACJluC,GAAc7Y,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAYhwC,EAAAH,KAAIk+C,IAAAA,IAAQuJ,sBAClDtnD,OAAI+mD,IAAAA,KAA8B,GAE/B/mD,EAAAH,KAAIk+C,IAAAA,IAAQuJ,oBACvB,KAACL,CAAA,CA7N8BlrB,CAAQjyB,IAA9Bm9C,GAiBOx3B,KAAezhB,GC9ByE,IAAA+vC,gBAAAv+C,EAAAsnD,SAAAA,gBAAAtnD,EAAAunD,sBAAAA,gBAAAvnD,EAAAwnD,6BAAAA,gBAAAxnD,EAAA,kBAY/F2oD,gBAAgB,SAAApsB,GAmCzB,SAAAosB,EAAY9F,EAAgBr4C,GAItB,IAAAiB,EAsBC,YA1BqB,IAAAjB,IAAAA,EAIxB,KAEAiB,EAAA8wB,EAAAl4B,KAAMw+C,KAAAA,EAAQr4C,IAAInK,MApCNwiD,YAAM,EAAAp3C,EAObi8C,kBAAY,EAAAvnD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA67C,GAAA,CAAAhnD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA87C,GAAAjnD,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA+7C,GAAAlnD,CAAAA,UAAAC,EAAAA,WA+BjBkL,IAAAA,EAAKo3C,OAASA,EAEdriD,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV1pC,KAAMrK,EAAIqK,MAAQ,GAClBC,IAAKtK,EAAIsK,KAAO,IAChByH,MAAO/R,EAAI+R,OAAS,EACpBi0B,WAAYn9B,KACZw0C,kBAAmBx0C,KACnBy0C,qBAAsBz0C,MAG1B5H,EAAKi8C,aAAe,IAAIznD,EAAa,IAAImG,GAAeA,iBAExD5F,EAAAk8B,EAAAjxB,GAAA67C,IAAAA,KAA2B,EAC3B9mD,EAAAk8B,EAAAjxB,GAAA87C,IAAAA,KAAkC,EAElC/mD,EAAAk8B,EAAAjxB,GAAA+7C,IAAAA,IAAuB/7C,EAAKo3C,OAAOr0B,KAAKu5B,WAAWpnD,UAAU,WACzD8K,EAAKN,UACT,GAAGM,CACP,CA9DyBG,EAAA+8C,EAAApsB,GA8DxB,IAAA97B,EAAAkoD,EAAAjoD,UA+HAioD,OA/HAloD,EAoID4K,MAAA,WAEI,IAYIoJ,EACAC,EACAE,EACAD,EAZE6Z,EAAOnuB,KAAKwiD,OAAOr0B,KAEnBo6B,EAAW,GADHpoD,EAAIH,KAAAk+C,IAAAA,IAAQhiC,MAGpBygC,EAAWxuB,EAAKwuB,SAChB6L,EAAgB7L,EARF,GASd8L,EAAiB9L,EARF,GASfgL,EAASa,EAAgBC,EAO3BD,EAAgBC,GAChBr0C,GAAQm0C,EACRl0C,EAAQk0C,EACRh0C,EAAMg0C,EAAWZ,EACjBrzC,GAAUi0C,EAAWZ,IAGrBvzC,GAAQm0C,EAAWZ,EACnBtzC,EAAQk0C,EAAWZ,EACnBpzC,EAAMg0C,EACNj0C,GAAUi0C,GAGdp0C,GAAWC,EAAMC,EAAOC,EAAQC,EAAKpU,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,KAAMrU,EAAIH,KAAAk+C,IAAAA,IAAQzpC,IAAKtU,EAAIH,KAAAk+C,IAAAA,IAAQ/N,YAEpFhwC,EAAIH,KAAAinD,IAAAA,KAAuB,EAC3B9mD,EAAIH,KAAAknD,IAAAA,KAA8B,EAElClnD,KAAKwiD,OAAOr0B,KAAKuxB,SAEjB1/C,KAAKqnD,aAAa5mD,SAAST,KAAMG,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WACjD,EAAC/vC,EAWDynD,UAAA,SACI9X,EACA+X,EACAC,EACAvX,EACA1Y,GAEA,IAAM4wB,EAAS1oD,KAAKwiD,OAAOr0B,KAAK65B,cAE1BC,EAAgBS,EAAOR,YAAc,EACrCC,EAAiBO,EAAON,aAAe,EAe7C,OAbAL,EAAU,IAAMhY,EAAU,GAAKkY,GAAiBA,EAChDF,EAAU,IAAMhY,EAAU,GAAKoY,GAAkBA,EACjDJ,EAAU,GAAKD,EACfC,EAAU,GAAK,EAEfxuC,GAAUvZ,KAAKwnD,kBAAmBO,EAAWvX,GAC7CrgC,GAAcqgC,EAAS,EAAMA,EAAQ,IAErCA,EAAQ,GAAK,EACbA,EAAQ,KAAO,EAEfj3B,GAAUvZ,KAAKwiD,OAAO6F,kBAAmB7X,EAAS1Y,GAE3CA,CACX,EAAC13B,EAKD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KAAAhE,MACbA,KAAKwiD,OAAOr0B,KAAKu5B,WAAW7mD,YAAWV,EAACH,KAAImnD,IAAAA,KAC5CnnD,KAAKqnD,aAAapmD,OACtB,EAACC,EAAAonD,EAAAnnD,CAAAA,CAAAA,IAAAC,QAAAA,IA/MD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQhiC,KACvB,EAACS,IAUD,SAAUzc,GACFA,GAAS,IACTA,EAAQ,KAEZC,EAAAH,KAAIk+C,IAAAA,IAAQhiC,MAAQhc,EACpBF,KAAK8K,UACT,GAAC,CAAA3J,IAAA,OAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,IACvB,EAACmI,IASD,SAASzc,GACDC,OAAI+9C,IAAAA,IAAQ1pC,OAAStU,IAGzBC,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,KAAOtU,EACnBF,KAAK8K,WACT,GAAC3J,CAAAA,IAAAC,MAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQzpC,GACvB,EAACkI,IASD,SAAQzc,GACAC,EAAIH,KAAAk+C,IAAAA,IAAQzpC,MAAQvU,IAGxBC,EAAAH,KAAIk+C,IAAAA,IAAQzpC,IAAMvU,EAClBF,KAAK8K,WACT,GAAC3J,CAAAA,IAAAC,aAAAA,IASD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAEF5K,EAAIH,KAAAk+C,IAAAA,IAAQ/N,UACvB,GAAC,CAAAhvC,IAAA,oBAAAC,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIinD,IAAAA,MACJhwC,GAAY9W,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAYhwC,EAAIH,KAAAk+C,IAAAA,IAAQsJ,mBAChDrnD,EAAAH,KAAIinD,IAAAA,KAAuB,GAExB9mD,EAAIH,KAAAk+C,IAAAA,IAAQsJ,iBACvB,GAAC,CAAArmD,IAAA,uBAAAC,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIknD,IAAAA,MACJluC,GAAc7Y,EAAIH,KAAAk+C,IAAAA,IAAQ/N,WAAYhwC,EAAAH,KAAIk+C,IAAAA,IAAQuJ,sBAClDtnD,EAAIH,KAAAknD,IAAAA,KAA8B,GAE/B/mD,EAAIH,KAAAk+C,IAAAA,IAAQuJ,oBACvB,KAACa,CAAA,CA7LwB,CAAQr+C,IAAxBq+C,GAiBO14B,KAAexhB,GC7B0E,IAAA8vC,gBAAAv+C,EAAA,SAAAsnD,gBAAAtnD,EAAA,sBAAAunD,gBAAAvnD,EAAA,6BAUhGgpD,gBAAkB,SAAAzsB,GAkC3B,SAAAysB,EAAYnG,EAAgBr4C,GAOtB,IAAAiB,EAqBqC,YA5Bf,IAAAjB,IAAAA,EAOxB,CAAE,IAEFiB,EAAA8wB,EAAAl4B,KAAMw+C,KAAAA,EAAQr4C,IAAInK,MAlCNwiD,YAAM,EAAAp3C,EAMbi8C,kBAAY,EAAAvnD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA67C,GAAAhnD,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA87C,GAAA,CAAAjnD,UAAA,EAAAC,WAAA,IA8BjBkL,EAAKo3C,OAASA,EAEdriD,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV/N,WAAYn9B,KACZw0C,kBAAmBx0C,KACnBy0C,qBAAsBz0C,KACtBwB,KAAM,GACNC,IAAK,IACLL,KAAOjK,QAAIiK,KAA2CjK,EAAIiK,MAAQ,EAClEC,MAAQlK,QAAIkK,MAA6ClK,EAAIkK,MAAQ,EACrEC,OAASnK,QAAImK,OAA+CnK,EAAImK,QAAU,EAC1EC,IAAMpK,QAAIoK,IAAyCpK,EAAIoK,IAAM,GAGjEnJ,EAAKi8C,aAAe,IAAIznD,EAAa,IAAImG,GAAAA,iBAEzC5F,EAAAk8B,EAAAjxB,GAAA67C,IAAAA,KAA2B,EAC3B9mD,EAAAk8B,EAAAjxB,GAAA87C,IAAAA,KAAkC,EAAK97C,CAC3C,CA/D2BG,EAAAo9C,EAAAzsB,GA+D1B,IAAA97B,EAAAuoD,EAAAtoD,UAwKAsoD,OAxKAvoD,EA6KD4K,MAAA,WACI4J,GAAYzU,EAAAH,KAAIk+C,IAAAA,IAAQ9pC,KAAMjU,EAAAH,KAAIk+C,IAAAA,IAAQ7pC,MAAOlU,EAAIH,KAAAk+C,IAAAA,IAAQ5pC,OAAQnU,EAAAH,KAAIk+C,IAAAA,IAAQ3pC,IAAKpU,EAAIH,KAAAk+C,IAAAA,IAAQ1pC,KAAMrU,EAAIH,KAAAk+C,IAAAA,IAAQzpC,IAAKtU,EAAAH,KAAIk+C,IAAAA,IAAQ/N,YACrIhwC,EAAAH,KAAIinD,IAAAA,KAAuB,EAC3B9mD,OAAI+mD,IAAAA,KAA8B,EAClClnD,KAAKwiD,OAAOr0B,KAAKuxB,SACjB1/C,KAAKqnD,aAAa5mD,SAAST,KAAMG,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WACjD,EAAC/vC,EAWDynD,UAAA,SACI9X,EACA+X,EACAC,EACAvX,EACA1Y,GAEA,IAAMkwB,EAAgBhoD,KAAKwiD,OAAOr0B,KAAK65B,cAEjCC,EAAgBD,EAAcE,YAAc,EAC5CC,EAAiBH,EAAcI,aAAe,EAepD,OAbAL,EAAU,IAAMhY,EAAU,GAAKkY,GAAiBA,EAChDF,EAAU,IAAMhY,EAAU,GAAKoY,GAAkBA,EACjDJ,EAAU,GAAKD,EACfC,EAAU,GAAK,EAEfxuC,GAAUvZ,KAAKwnD,kBAAmBO,EAAWvX,GAC7CrgC,GAAcqgC,EAAS,EAAMA,EAAQ,IAErCA,EAAQ,GAAK,EACbA,EAAQ,KAAO,EAEfj3B,GAAUvZ,KAAKwiD,OAAO6F,kBAAmB7X,EAAS1Y,GAE3CA,CACX,EAAC13B,EAKD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAKqnD,aAAapmD,OACtB,EAACC,EAAAynD,EAAAxnD,CAAAA,CAAAA,IAAAC,OAAAA,IAzND,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ9pC,IACvB,EAACuI,IAOD,SAASzc,GACLC,EAAIH,KAAAk+C,IAAAA,IAAQ9pC,KAAOlU,EACnBF,KAAK8K,UACT,GAAC,CAAA3J,IAAA,QAAAC,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ7pC,KACvB,EAACsI,IAOD,SAAUzc,GACNC,EAAAH,KAAIk+C,IAAAA,IAAQ7pC,MAAQnU,EACpBF,KAAK8K,UACT,GAAC3J,CAAAA,IAAAC,MAAAA,IAOD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ3pC,GACvB,EAACoI,IAOD,SAAQzc,GACJC,EAAIH,KAAAk+C,IAAAA,IAAQ3pC,IAAMrU,EAClBF,KAAK8K,UACT,GAAC,CAAA3J,IAAA,SAAAC,IAOD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ5pC,MACvB,EAACqI,IAOD,SAAWzc,GACPC,EAAAH,KAAIk+C,IAAAA,IAAQ5pC,OAASpU,EACrBF,KAAK8K,UACT,GAAC3J,CAAAA,IAAAC,OAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ1pC,IACvB,EAACmI,IASD,SAASzc,GACLC,EAAIH,KAAAk+C,IAAAA,IAAQ1pC,KAAOtU,EACnBF,KAAK8K,UACT,GAAC,CAAA3J,IAAA,MAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQzpC,GACvB,EAACkI,IASD,SAAQzc,GACJC,EAAAH,KAAIk+C,IAAAA,IAAQzpC,IAAMvU,EAClBF,KAAK8K,UACT,GAAC3J,CAAAA,IAAAC,aAAAA,IASD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAEF5K,EAAIH,KAAAk+C,IAAAA,IAAQ/N,UACvB,GAAChvC,CAAAA,IAAAC,oBAAAA,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIinD,IAAAA,MACJhwC,GAAY9W,EAAIH,KAAAk+C,IAAAA,IAAQ/N,WAAYhwC,EAAAH,KAAIk+C,IAAAA,IAAQsJ,mBAChDrnD,EAAIH,KAAAinD,IAAAA,KAAuB,GAExB9mD,EAAAH,KAAIk+C,IAAAA,IAAQsJ,iBACvB,GAAC,CAAArmD,IAAA,uBAAAC,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIknD,IAAAA,MACJluC,GAAc7Y,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAYhwC,EAAIH,KAAAk+C,IAAAA,IAAQuJ,sBAClDtnD,EAAAH,KAAIknD,IAAAA,KAA8B,GAE/B/mD,EAAIH,KAAAk+C,IAAAA,IAAQuJ,oBACvB,KAACkB,CAAA,CAvO0B,CAAQ1+C,IAA1B0+C,GAKO/4B,KAAevhB,GCd2E,IAAA6vC,gBAAAv+C,WAAAipD,gBAAAjpD,EAAA,0BAAAunD,gBAAAvnD,EAQxG,6BAAAkpD,gBAAiB3sB,SAAAA,GA+BnB,SAAA2sB,EAAYrG,EAAgBr4C,GAEtBiB,IAAAA,EAesC,gBAjBhBjB,IAAAA,EAExB,KAEAiB,EAAA8wB,EAAAl4B,KAAMw+C,KAAAA,EAAQr4C,IAAKiB,MA9BPo3C,cAAMp3C,EAObi8C,kBAAY,EAAAvnD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAA,CAAAj+C,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAw9C,GAAA3oD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA87C,GAAA,CAAAjnD,UAAA,EAAAC,WAyBjBkL,IAAAA,EAAKo3C,OAASA,EAEdriD,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV/N,WAAYn9B,GAAW7I,EAAIgmC,YAAct7B,MACzC2yC,kBAAmBx0C,KACnBy0C,qBAAsBz0C,MAG1B5H,EAAKi8C,aAAe,IAAIznD,EAAa,IAAImG,GAAAA,iBAEzC5F,EAAAk8B,EAAAjxB,GAAAw9C,IAAAA,KAA+B,EAC/BzoD,EAAAk8B,EAAAjxB,GAAA87C,IAAAA,KAAkC,EAAM97C,CAC5C,CAjDmBG,EAAAs9C,EAAA3sB,GAiDlB,IAAA97B,EAAAyoD,EAAAxoD,iBAAAD,EAuEDynD,UAAA,SACI9X,EACA+X,EACAC,EACAvX,EACA1Y,GACA,IAAMkwB,EAAgBhoD,KAAKwiD,OAAOr0B,KAAK65B,cACjCC,EAAgBD,EAAcE,YAAc,EAC5CC,EAAiBH,EAAcI,aAAe,EAUpD,OATAL,EAAU,IAAMhY,EAAU,GAAKkY,GAAiBA,EAChDF,EAAU,IAAMhY,EAAU,GAAKoY,GAAkBA,EACjDJ,EAAU,GAAKD,EACfC,EAAU,GAAK,EACfxuC,GAAUvZ,KAAKwnD,kBAAmBO,EAAWvX,GAC7CrgC,GAAcqgC,EAAS,EAAMA,EAAQ,IACrCA,EAAQ,GAAK,EACbA,EAAQ,KAAO,EACfj3B,GAAUvZ,KAAKwiD,OAAO6F,kBAAmB7X,EAAS1Y,GAC3CA,CACX,EAAC13B,EAKD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAKqnD,aAAapmD,OACtB,EAACC,EAAA2nD,EAAA1nD,CAAAA,CAAAA,iBAAAC,IAzFD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQ/N,UACvB,EAACxzB,IASD,SAAewzB,GAEXhwC,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAWxzB,IAAIwzB,GAC3BhwC,EAAIH,KAAA4oD,IAAAA,KAA2B,EAC/BzoD,OAAI+mD,IAAAA,KAA8B,EAClClnD,KAAK8K,WACL9K,KAAKwiD,OAAOr0B,KAAKuxB,SACjB1/C,KAAKqnD,aAAa5mD,SAAST,KAAMG,OAAI+9C,IAAAA,IAAQ/N,WACjD,GAAC,CAAAhvC,IAAAC,oBAAAA,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAI4oD,IAAAA,MACJ3xC,GAAY9W,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAYhwC,EAAIH,KAAAk+C,IAAAA,IAAQsJ,mBAChDrnD,EAAIH,KAAA4oD,IAAAA,KAA2B,GAE5BzoD,EAAAH,KAAIk+C,IAAAA,IAAQsJ,iBACvB,GAAC,CAAArmD,IAAAC,uBAAAA,IAOD,WAQI,OAPIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAIH,KAAIknD,IAAAA,MACJluC,GAAc7Y,EAAAH,KAAIk+C,IAAAA,IAAQ/N,WAAYhwC,EAAIH,KAAAk+C,IAAAA,IAAQuJ,sBAClDtnD,EAAIH,KAAAknD,IAAAA,KAA8B,GAE/B/mD,EAAAH,KAAIk+C,IAAAA,IAAQuJ,oBACvB,KAACoB,CAAA,CA7GkB3sB,CAAQjyB,IAAzB4+C,GAiBcj5B,KAAethB,GCInC,IAAMc,GAAWC,KACXC,GAAYD,KACZE,GAAYF,KACZG,GAAYH,KACZI,GAAYJ,KACZy5C,GAAYz5C,KACZgoB,GAAUrkB,KACV+1C,GAAW/1C,KACXg2C,GAAa35C,KACb45C,GAAiB55C,KACjB65C,GAAgB75C,KAChB85C,GAAY95C,KAAa6uC,gBAAAv+C,EAAAypD,SAAAA,gBAAAzpD,EAAA,WAAA0pD,gBAAA1pD,sBAwLzB2pD,gBAAOptB,SAAAA,GAyHT,SAAAotB,EAAYn7B,EAAYhkB,GASlBiB,IAAAA,EA6DC,YAtEiB,IAAAjB,IAAAA,EASpB,CAAA,IAEAiB,EAAA8wB,EAAAl4B,UAAMmqB,EAAMhkB,IAAInK,MA3HJmuB,UAAI/iB,EAAAA,EAOJm+C,6BAAqBn+C,EAOrBo+C,qBAAep+C,EAAAA,EAOfq+C,uBAAiB,EAAAr+C,EAOjBs+C,sBAAgB,EAAAt+C,EAWvBu+C,wBAAgBv+C,EAWhBw+C,kBAAYx+C,EAAAA,EAWZi8C,kBAAYj8C,EAAAA,EAWZy+C,iBAAW,EAAAz+C,EAWX0+C,iBAAShqD,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,IAAAj+C,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAg+C,GAAAnpD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAi+C,GAAA,CAAAppD,UAAAC,EAAAA,WA0CdkL,IAAAA,EAAKu+C,iBAAmB,IAAI/pD,EAAa,IAAImG,GAAeA,iBAC5DqF,EAAKw+C,aAAe,IAAIhqD,EAAa,IAAImG,GAAAA,iBACzCqF,EAAKi8C,aAAe,IAAIznD,EAAa,IAAImG,GAAeA,iBACxDqF,EAAKy+C,YAAc,IAAIjqD,EAAa,IAAImG,GAAeA,iBACvDqF,EAAK0+C,UAAY,IAAIlqD,EAAa,IAAImG,GAAeA,iBAErDqF,EAAK+iB,KAAOA,EAEZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACV6L,IAAK16C,GAAWlF,EAAI4/C,KAAO,CAAC,EAAG,EAAG,KAClCC,KAAM36C,GAAWlF,EAAI6/C,MAAQ,CAAC,EAAG,EAAG,IACpCh0C,GAAI3G,GAAWlF,EAAI6L,IAAM,CAAC,EAAG,EAAG,IAChCi0C,QAAS56C,GAAW,CAAC,EAAG,EAAG,IAC3B66C,WAAY76C,GAAW,CAAC,EAAG,EAAG,IAC9B86C,aAAc96C,GAAW,CAAC,EAAG,GAAI,IACjC+6C,UAAW,IAAIx5C,aAAazG,EAAIigD,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtEC,YAA+B,IAAnBlgD,EAAIkgD,WAChBC,gBAAuC,IAAvBngD,EAAImgD,eACpB/H,eAAgBp4C,EAAIo4C,gBAAkBp0C,GACtCo8C,aAAcpgD,EAAIogD,aAAev3C,GAAW7I,EAAIogD,cAAgB11C,KAChE21C,kBAAmBrgD,EAAIogD,aACvBra,WAAYl9B,KACZy3C,iBAAkBz3C,KAClBq1C,kBAAmBr1C,MAGvB7S,EAAAk8B,EAAAjxB,GAAAg+C,IAAAA,IAAgB,IAAI3yB,GAEpBrrB,EAAKm+C,sBAAwB,IAAInC,GAAqB/qB,EAAAjxB,IACtDA,EAAKo+C,gBAAkB,IAAIlB,GAAejsB,EAAAjxB,IAC1CA,EAAKq+C,kBAAoB,IAAId,GAAiBtsB,EAAAjxB,IAC9CA,EAAKs+C,iBAAmB,IAAIb,GAAgBxsB,EAAAjxB,IAE5CjL,EAAAk8B,EAAAjxB,GAAAi+C,IAAAA,IAAyBj+C,EAAKm+C,sBAE9Bn+C,EAAKm+C,sBAAsBlC,aAAa/mD,UAAU,WAC1CH,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAYqE,iBAAmBp0C,IAC/B/C,EAAKi8C,aAAa5mD,SAAQ47B,EAAAjxB,GAAOA,EAAKm+C,sBAAsBpZ,WAEpE,GAEA/kC,EAAKo+C,gBAAgBnC,aAAa/mD,UAAU,WACpCH,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAYqE,iBAAmBn0C,IAC/BhD,EAAKi8C,aAAa5mD,SAAQ47B,EAAAjxB,GAAOA,EAAKo+C,gBAAgBrZ,WAE9D,GAEA/kC,EAAKq+C,kBAAkBpC,aAAa/mD,UAAU,WACtCH,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAYqE,iBAAmBl0C,IAC/BjD,EAAKi8C,aAAa5mD,SAAQ47B,EAAAjxB,GAAOA,EAAKq+C,kBAAkBtZ,WAEhE,GAEA/kC,EAAKs+C,iBAAiBrC,aAAa/mD,UAAU,WACrCH,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAYqE,iBAAmBj0C,IAC/BlD,EAAKi8C,aAAa5mD,SAAQ47B,EAAAjxB,GAAOA,EAAKs+C,iBAAiBvZ,WAE/D,GAAG/kC,CACP,CAhMSG,EAAA+9C,EAAAptB,GAgMR,IAAA97B,EAAAkpD,EAAAjpD,UAgWA,OAhWAD,EAkWD4K,MAAA,WACI,IAKI++C,EALE/C,EAAK7mD,EAAGH,KAAIk+C,IAAAA,IAMdl+C,KAAKuiD,iBAAmBn0C,IACxBmC,GAAQpQ,EAAAH,KAAIk+C,IAAAA,IAAQ6L,IAAK5pD,OAAI+9C,IAAAA,IAAQ8L,KAAMhB,IAC3Ct2C,GAAcs2C,GAAYC,IAC1B94C,GAAc84C,GAAgB,IAAQC,IACtC74C,GAAQlQ,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAMd,GAAeC,IACzCY,EAAMZ,IAENY,EAAM5pD,OAAI+9C,IAAAA,IAAQ6L,IAElB/C,EAAMwD,iBACN30C,GAAYk0C,EAAK5pD,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAM7pD,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAI+yC,IACnDnvC,GAAQotC,EAAMuD,aAAcxB,GAAU/B,EAAM9W,aAE5Cr6B,GAAYk0C,EAAK5pD,OAAI+9C,IAAAA,IAAQ8L,KAAM7pD,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAIgxC,EAAM9W,YAE7Dj5B,GAAY9W,EAAAH,KAAIk+C,IAAAA,IAAQhO,WAAY/vC,EAAAH,KAAIk+C,IAAAA,IAAQmK,mBAChDrvC,GAAc7Y,EAAIH,KAAAk+C,IAAAA,IAAQmK,kBAAmBloD,OAAI+9C,IAAAA,IAAQuM,kBACzDzqD,KAAKmuB,KAAKuxB,SACV/oB,GAAYx2B,EAAIH,KAAAk+C,IAAAA,IAAQhO,WAAY/vC,EAAAH,KAAIqpD,IAAAA,IAAmBlZ,WAAUhwC,EAAEH,KAAIopD,IAAAA,KAC3EppD,KAAK4pD,aAAanpD,SAAST,KAAMG,EAAAH,KAAIk+C,IAAAA,IAAQhO,YAC7ClwC,KAAK8pD,UAAUrpD,SAAST,KAAIG,EAAEH,KAAIopD,IAAAA,IACtC,EAAChpD,EAODsqD,SAAA,SAASC,GACL,IAAIC,EAAar6C,GAAQpQ,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAK5pD,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAM56C,IAC5D2F,GAAyB,YAAX41C,EAAyBxqD,EAAAH,KAAIk+C,IAAAA,IAAQmM,WAAalqD,OAAI+9C,IAAAA,IAAQ+L,QAAU9pD,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAIqhB,IACtGuzB,EAAalwC,GAAgB2c,GAASuzB,EAAYt7C,IAClDtP,KAAK+pD,IAAM15C,GAAQlQ,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAMY,EAAYr7C,IACjDvP,KAAKgW,GAAK0E,GAAgB2c,GAASl3B,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAIxG,GACvD,EAACpP,EAODyqD,WAAA,SAAWF,GACP,KAAIxqD,EAAIH,KAAAk+C,IAAAA,IAAQoM,iBACZK,EAAWh7C,GAAQxP,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAI7V,EAAAH,KAAIk+C,IAAAA,IAAQ+L,SAAWt7C,IAC3C,GAFnB,CAMA,IAAIm8C,EAAOv6C,GAAQpQ,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAK5pD,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAM56C,IAEtD2F,GAAyB,YAAX41C,EADD55C,GAAW2B,GAAco4C,EAAMx7C,IAAYoD,GAAcvS,OAAI+9C,IAAAA,IAAQloC,GAAIzG,KACzC8nB,IAC7CyzB,EAAOpwC,GAAgB2c,GAASyzB,EAAMt7C,IACtCxP,KAAKgW,GAAK0E,GAAgB2c,GAASl3B,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAIvG,IACnDzP,KAAK+pD,IAAM15C,GAAQy6C,EAAM3qD,EAAIH,KAAAk+C,IAAAA,IAAQ8L,KAAMlB,GAN1C,CAOL,EAAC1oD,EAOD2qD,IAAA,SAAIJ,GACA,IAAIK,EAAQz6C,GAAQpQ,OAAI+9C,IAAAA,IAAQ8L,KAAM7pD,EAAAH,KAAIk+C,IAAAA,IAAQ6L,IAAK36C,IACvD2F,GAAyB,YAAX41C,EAAyBxqD,EAAIH,KAAAk+C,IAAAA,IAAQmM,WAAalqD,OAAI+9C,IAAAA,IAAQ+L,QAAU9pD,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAIqhB,IACtG2zB,EAAQtwC,GAAgB2c,GAAS2zB,EAAO17C,IACxCtP,KAAKgqD,KAAO35C,GAAQ26C,EAAO7qD,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAKx6C,IACxCpP,EAAIH,KAAAk+C,IAAAA,IAAQmM,aACZrqD,KAAKgW,GAAK0E,GAAgB2c,GAASl3B,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAIxG,IAE3D,EAACpP,EAOD6qD,MAAA,SAAMN,GACF,KAAIxqD,EAAIH,KAAAk+C,IAAAA,IAAQoM,iBACZK,EAAWh7C,GAAQxP,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAI7V,EAAIH,KAAAk+C,IAAAA,IAAQ+L,SAAWt7C,IAC3C,GAFnB,CAMA,IAAIq8C,EAAQz6C,GAAQpQ,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAM7pD,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAK36C,IAEvD2F,GAAyB,YAAX41C,EADD55C,GAAW2B,GAAcs4C,EAAO17C,IAAYoD,GAAcvS,OAAI+9C,IAAAA,IAAQloC,GAAIzG,KAC1C8nB,IAC7Cr3B,KAAKgW,GAAK0E,GAAgB2c,GAASl3B,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAI8yC,IACnDkC,EAAQtwC,GAAgB2c,GAAS2zB,EAAOx7C,IACxCxP,KAAKgqD,KAAO35C,GAAQ26C,EAAO7qD,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAKt6C,GAN3C,CAOL,EAACrP,EAOD8qD,IAAA,SAAIA,GACA,IAEIr7C,EAFEi7C,EAAOv6C,GAAQpQ,OAAI+9C,IAAAA,IAAQ6L,IAAK5pD,EAAAH,KAAIk+C,IAAAA,IAAQ8L,KAAM56C,IAClDyC,EAAM,CAAC,EAAG,EAAG,GAEJ,IAAXq5C,EAAI,KAEJr7C,EAAIM,GADSY,GAAW2B,GAAco4C,EAAM,IAAKp4C,GAAcvS,EAAAH,KAAIk+C,IAAAA,IAAQloC,GAAI1G,KACvD47C,EAAI,IAC5Br5C,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,IAED,IAAXq7C,EAAI,KACJr7C,EAAIM,GAAcuC,GAAcvS,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAIzG,IAAY27C,EAAI,IAChEr5C,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,IAED,IAAXq7C,EAAI,KACJr7C,EAAIM,GAAcuC,GAAco4C,EAAMt7C,IAAY07C,EAAI,IACtDr5C,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,GACZgC,EAAI,IAAMhC,EAAE,IAEhB7P,KAAK+pD,IAAM15C,GAAQlQ,EAAAH,KAAIk+C,IAAAA,IAAQ6L,IAAKl4C,EAAKpC,IACzCzP,KAAKgqD,KAAO35C,GAAQlQ,EAAIH,KAAAk+C,IAAAA,IAAQ8L,KAAMn4C,EAAKi3C,GAC/C,EAAC1oD,EAOD+qD,KAAA,SAAKC,GACD,IAAMv5C,EAAMtB,GAAQpQ,EAAAH,KAAIk+C,IAAAA,IAAQ6L,IAAK5pD,EAAIH,KAAAk+C,IAAAA,IAAQ8L,KAAM56C,IACjDi8C,EAAU7hD,KAAKuU,IAAInM,GAAQC,IAC3By5C,EAAa9hD,KAAKuU,IAAIstC,EAAUD,GACtC,KAAIE,EAAa,IAAjB,CAGA,IAAM5oC,EAAMhQ,GAAcb,EAAKtC,IAC/BvP,KAAK+pD,IAAM15C,GAAQlQ,OAAI+9C,IAAAA,IAAQ8L,KAAM75C,GAAcuS,EAAK4oC,GAAa97C,GAFpE,CAGL,EAACpP,EAMD6K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAK2pD,iBAAiB1oD,QACtBjB,KAAK4pD,aAAa3oD,QAClBjB,KAAKqnD,aAAapmD,QAClBjB,KAAK6pD,YAAY5oD,OACrB,EAACC,EAAAooD,EAAA,CAAA,CAAAnoD,IAAAC,UAAAA,IArfD,WACI,OAAAjB,EAAOH,KAAIqpD,IAAAA,GACf,GAACloD,CAAAA,UAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ6L,GACvB,EAACptC,IAUD,SAAQotC,GAEJ5pD,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAIptC,IAAIotC,GACpB/pD,KAAK8K,UACT,IAAC3J,IAAA,OAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ8L,IACvB,EAACrtC,IASD,SAASqtC,GAEL7pD,EAAIH,KAAAk+C,IAAAA,IAAQ8L,KAAKrtC,IAAIqtC,GACrBhqD,KAAK8K,UACT,GAAC3J,CAAAA,SAAAC,IAOD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQloC,EACvB,EAAC2G,IAOD,SAAO3G,GAEH7V,EAAIH,KAAAk+C,IAAAA,IAAQloC,GAAG2G,IAAI3G,GACnBhW,KAAK8K,UACT,GAAC3J,CAAAA,IAAAC,UAAAA,IAWD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ+L,OACvB,IAAC9oD,IAAA,aAAAC,IAWD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQgM,UACvB,GAAC,CAAA/oD,IAAA,eAAAC,IAWD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQiM,YACvB,GAAChpD,CAAAA,qBAAAC,IAWD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQoM,cACvB,EAAC3tC,IAWD,SAAmBzc,GACfC,EAAIH,KAAAk+C,IAAAA,IAAQoM,eAAiBpqD,CACjC,GAACiB,CAAAA,iBAAAC,IAOD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQmM,UACvB,EAAC1tC,IAOD,SAAezc,GACXC,EAAIH,KAAAk+C,IAAAA,IAAQmM,WAAanqD,CAC7B,GAACiB,CAAAA,gBAAAC,IAWD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQkM,SACvB,EAACztC,IAWD,SAAc1H,GACV,IAAM+xC,EAAK7mD,EAAGH,KAAIk+C,IAAAA,IAElB8I,EAAMoD,UAAUztC,IAAI1H,GACpB+xC,EAAMkD,WAAW,GAAKlD,EAAMoD,UAAU,GACtCpD,EAAMkD,WAAW,GAAKlD,EAAMoD,UAAU,GACtCpD,EAAMkD,WAAW,GAAKlD,EAAMoD,UAAU,GACtCpD,EAAMiD,QAAQ,GAAKjD,EAAMoD,UAAU,GACnCpD,EAAMiD,QAAQ,GAAKjD,EAAMoD,UAAU,GACnCpD,EAAMiD,QAAQ,GAAKjD,EAAMoD,UAAU,GACnCpD,EAAMmD,aAAa,GAAKnD,EAAMoD,UAAU,GACxCpD,EAAMmD,aAAa,GAAKnD,EAAMoD,UAAU,GACxCpD,EAAMmD,aAAa,GAAKnD,EAAMoD,UAAU,GACxCpqD,KAAK6pD,YAAYppD,SAAST,KAAMgnD,EAAMoD,UAC1C,GAAC,CAAAjpD,IAAAC,eAAAA,IAOD,WAEI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQqM,YACvB,EAAC5tC,IASD,SAAiBL,GAEbnc,EAAAH,KAAIk+C,IAAAA,IAAQqM,aAAa5tC,IAAIL,GAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrFnc,EAAIH,KAAAk+C,IAAAA,IAAQsM,kBAAoBluC,EAChCtc,KAAK8K,UACT,GAAC,CAAA3J,IAAAC,MAAAA,IAMD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,OAAI+9C,IAAAA,IAAQ+L,QAAQ,IAAM9pD,EAAAH,KAAIk+C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,EAAIH,KAAAk+C,IAAAA,IAAQ+L,QAAQ,EAC3G,GAAC9oD,CAAAA,IAAAC,MAAAA,IAMD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,EAAIH,KAAAk+C,IAAAA,IAAQ+L,QAAQ,IAAM9pD,OAAI+9C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,EAAAH,KAAIk+C,IAAAA,IAAQ+L,QAAQ,EAC3G,IAAC9oD,IAAA,MAAAC,IAMD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,EAAIH,KAAAk+C,IAAAA,IAAQ+L,QAAQ,IAAM9pD,OAAI+9C,IAAAA,IAAQ+L,QAAQ,GAAK9pD,EAAAH,KAAIk+C,IAAAA,IAAQ+L,QAAQ,EAC3G,GAAC,CAAA9oD,IAAA,cAAAC,IAOD,WACI,OAAOwQ,GAAQrB,GAAQpQ,OAAI+9C,IAAAA,IAAQ8L,KAAM7pD,EAAIH,KAAAk+C,IAAAA,IAAQ6L,IAAK36C,IAC9D,GAAC,CAAAjO,IAAA,aAAAC,IAOD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAEF5K,EAAAH,KAAIk+C,IAAAA,IAAQhO,UACvB,IAAC/uC,IAAA,oBAAAC,IAOD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAEF5K,EAAAH,KAAIk+C,IAAAA,IAAQmK,iBACvB,GAAC,CAAAlnD,IAAAC,aAAAA,IAOD,WAEI,OAAOjB,EAAIH,KAAAqpD,IAAAA,IAAmBlZ,UAClC,GAAC,CAAAhvC,IAAAC,UAAAA,IAOD,WAII,OAHIpB,KAAKwK,OACLxK,KAAK+K,eAET5K,EAAOH,KAAIopD,IAAAA,GACf,IAACjoD,IAAA,iBAAAC,IAWD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQqE,cACvB,EAAC5lC,IAWD,SAAmBzc,GACfA,EAAQA,GAASiO,GACbhO,OAAI+9C,IAAAA,IAAQqE,iBAAmBriD,IAG/BA,IAAUiO,GACVhO,EAAIH,KAAAqpD,IAAAA,IAAqBrpD,KAAKupD,sBACvBrpD,IAAUkO,GACjBjO,EAAAH,KAAIqpD,IAAAA,IAAqBrpD,KAAKwpD,gBACvBtpD,IAAUmO,GACjBlO,EAAIH,KAAAqpD,IAAAA,IAAqBrpD,KAAKypD,kBACvBvpD,IAAUoO,GACjBnO,EAAIH,KAAAqpD,IAAAA,IAAqBrpD,KAAK0pD,kBAE9B1pD,KAAK6K,MAAM,uCAAyC3K,EAAQ,4CAC5DC,EAAIH,KAAAqpD,IAAAA,IAAqBrpD,KAAKupD,sBAC9BrpD,EAAQiO,IAGZhO,EAAIH,KAAAqpD,IAAAA,IAAmBr+C,QACvB7K,OAAI+9C,IAAAA,IAAQqE,eAAiBriD,EAC7BF,KAAKgL,QACLhL,KAAK2pD,iBAAiBlpD,SAAST,KAAMG,EAAIH,KAAAk+C,IAAAA,IAAQqE,gBACjDviD,KAAKqnD,aAAa5mD,SAAST,KAAMG,EAAIH,KAAAqpD,IAAAA,IAAmBlZ,YAC5D,KAACmZ,CAAA,CAhiBQptB,CAAQjyB,ICzNfshD,GAAuB,CACzBC,SAAU,GACVC,KAAM,EACNC,UAAW,EACXC,SAAU,EACVC,UAAW,GACbC,gBAAAlsD,EAAAmsD,qBAAAA,gBAAAnsD,EAAAosD,eAAAA,gBAAApsD,EAAAqsD,aAAAA,gBAAArsD,gBAAAssD,gBAAAtsD,EAAA,YAAAusD,gBAAAvsD,EAAAwsD,eAAAA,gBAAAxsD,EAAAysD,YAAAA,gBAAAzsD,EAAA,iBAAA0sD,gBAAA1sD,EAAA,kBAAA2sD,gBAAA3sD,EAEI,iBAmJD,SAAA4sD,GA/GSd,GACQtrD,EAAGH,KAAIosD,IAAAA,IAAgBX,EAAItrD,EAAGH,KAAIgsD,IAAAA,KACzBhsD,KAAKwsD,cAGLrsD,EAAGH,KAAIgsD,GAClC,CAAC,SAAAS,GAEcC,QAAgB,IAAhBA,IAAAA,GAAiB,GAG5B,IAFA,IAAIjB,GAAQ,IAAIkB,MAAQC,UACpBC,EAAW,EACR1sD,EAAIH,KAAA+rD,IAAAA,IAAY5oD,OAAS,IAAMupD,EAAQ,GAAKjB,EAAOiB,IAAQ,CAC9D,IAAMphC,EAAWnrB,OAAI4rD,IAAAA,IAAY1nC,QAC3B5hB,EAAQtC,EAAAH,KAAI+rD,IAAAA,IAAY1nC,QAC1B5hB,EACA6oB,EAAStnB,KAAKvB,GAEd6oB,IAEJmgC,GAAQ,IAAIkB,MAAQC,UACpBC,GACH,CACD,OAAOA,CACX,CAAC,SAAAC,GAEerB,GAEZ,IAAK,IAAInhD,KADTihD,GAAUE,KAAOA,EACFsB,GAAUC,QACrB,GAAIhtD,KAAKgtD,QAAQ9hD,eAAeZ,GAAK,CACjC,IAAM63C,EAASniD,KAAKgtD,QAAQ1iD,GAC5BihD,GAAUC,SAAWlhD,EACrBihD,GAAUG,UAAYvJ,EAAOuJ,UAC7BH,GAAUK,UAAkC,MAAtBL,GAAUI,SAAmBJ,GAAUE,KAAOF,GAAUI,SAAW,EACzFxJ,EAAO8K,OAAOxsD,SAAS0hD,EAAQoJ,GAClC,CAELA,GAAUI,SAAWF,CACzB,CAAC,SAAAyB,KAGG,IAAK,IAAI5iD,KAAMtK,KAAKgtD,QAChB,GAAIhtD,KAAKgtD,QAAQ9hD,eAAeZ,GAAK,CACjC,IAAM63C,EAASniD,KAAKgtD,QAAQ1iD,GACxB6iD,EAAahtD,OAAI0rD,IAAAA,IAAoBvhD,GACpC6iD,IACDA,EAAahtD,EAAIH,KAAA6rD,IAAAA,IAAoBvhD,GAAM,CAAA,GAoB3C63C,EAAOiL,OAAO,CAAA,EAGrB,CAET,CA4CJ,IAAML,GAAY,iBAtJH,WAgBX,SAAAM,IAAAjiD,IAAAA,EAAAtL,KAAAA,OAAAC,eAAAC,KAAAssD,GAAA,CAAApsD,MAAAgtD,KAAAptD,OAAAC,eAAAssD,KAAAA,GAAAnsD,CAAAA,MAAA4sD,KAAAhtD,OAAAC,oBAAAqsD,GAAA,CAAAlsD,MAAAusD,KAAA3sD,OAAAC,eAAAosD,KAAAA,GAAAjsD,CAAAA,MAAAqsD,KAAAvsD,KAdgBgtD,aAAO,EAAAltD,OAAAC,eAAA8rD,KAAAA,GAAA5rD,CAAAA,UAAAC,EAAAA,MAEsB,CAAA,IAAEJ,OAAAC,oBAAA+rD,GAAA,CAAA7rD,UAAA,EAAAC,MAG3B,IAAIojB,KAAKxjB,OAAAC,eAAAgsD,KAAAA,GAAA9rD,CAAAA,UAAAC,EAAAA,MACT,IAAI6jB,KAAOjkB,OAAAC,eAAAC,KAAAgsD,GAAA/rD,CAAAA,UAAAC,EAAAA,MACT,KAAEJ,OAAAC,eAAAC,KAAAisD,GAAA,CAAAhsD,UAAAC,EAAAA,MACJ,IAACJ,OAAAC,eAAAC,KAAAksD,GAAA,CAAAjsD,UAAA,EAAAC,MACE,IAOnBF,KAAKgtD,QAAU,CAAA,EAefM,sBAbc,SAARC,IACF,IAAM9B,EAAOkB,KAAKa,MACdrtD,EAAAiL,EAAI6gD,IAAAA,IAAa,IACjB9rD,EAAAiL,EAAI8gD,IAAAA,IAAgBT,EAAItrD,EAAGiL,EAAI6gD,IAAAA,KAEnC9rD,EAAAiL,EAAI+gD,IAAAA,IAAWV,GACftrD,EAAAiL,EAAIihD,IAAAA,IAAiBZ,GACrBtrD,EAAAiL,EAAIkhD,IAAAA,MACJnsD,EAAAiL,EAAI6gD,IAAAA,IAAaR,EAEjB6B,sBAAsBC,EAC1B,EAGJ,CAAC,IAAAntD,EAAAitD,EAAAhtD,iBAAAD,EA0EDqtD,eAAA,SAAetL,GACX,GAAIA,EAAO73C,IACP,GAAItK,KAAKgtD,QAAQ7K,EAAO73C,IAEpB,YADAK,QAAQE,MAAwBukB,kBAAAA,GAAS+yB,EAAO73C,IAAqB,wBAMzE63C,EAAO73C,GAAKnK,EAAIH,KAAA8rD,IAAAA,IAAcnoC,QAAQ,CAAE,GAE5C3jB,KAAKgtD,QAAQ7K,EAAO73C,IAAM63C,EAG1BhiD,EAAIH,KAAA6rD,IAAAA,IAAoB1J,EAAO73C,IAAM,CAIpC,CAEL,EAAClK,EAEDstD,iBAAA,SAAiBvL,GACRniD,KAAKgtD,QAAQ7K,EAAO73C,MAGzBnK,OAAI2rD,IAAAA,IAAchoC,WAAWq+B,EAAO73C,WAC7BtK,KAAKgtD,QAAQ7K,EAAO73C,WACpBnK,EAAAH,KAAI6rD,IAAAA,IAAoB1J,EAAO73C,IAE1C,EAAClK,EAEDutD,aAAA,SAAariC,EAAoB7oB,GAC7BtC,OAAI4rD,IAAAA,IAAY3oD,KAAKkoB,GACrBnrB,EAAAH,KAAI+rD,IAAAA,IAAY3oD,KAAKX,EACzB,EAACrC,EAEDosD,YAAA,WACI,OAAOrsD,EAAAH,KAAI+rD,IAAAA,IAAY5oD,MAC3B,EAACkqD,CAAA,CAnJU,ICVTj+C,GAAWC,KACXu+C,GAAUv+C,KACVw+C,GAASx+C,KACTy+C,GAAQz+C,KACR0+C,GAAgB1+C,KAAa2+C,gBAAAruD,EAAA,YAAAsuD,gBAAAtuD,EAAA,SAAAuuD,gBAAAvuD,EAAAwuD,QAAAA,gBAAAxuD,SAAAyuD,gBAAAzuD,EAAA,SAAA0uD,gBAAA1uD,EAAA2uD,QAAAA,gBAAA3uD,EAAA4uD,OAAAA,gBAAA5uD,EAAA,eAAA6uD,gBAAA7uD,EAAA,eAAA8uD,gBAAA9uD,EAAA+uD,OAAAA,gBAAA/uD,WAAAgvD,gBAAAhvD,EAAA,UAAAivD,gBAAAjvD,EAAAkvD,gBAAAA,gBAAAlvD,EAAAmvD,aAAAA,gBAAAnvD,EAAA,cAAAovD,gBAAApvD,EAAA,YAAAqvD,gBAAArvD,EAAAsvD,iBAAAA,gBAAAtvD,WAAAuvD,gBAAAvvD,EAAA,SAAAwvD,gBAAAxvD,EAAAyvD,mBAAAA,gBAAAzvD,EAAA0vD,UAAAA,gBAAA1vD,EAAA,eAAA2vD,gBAAA3vD,EAAA,eAAA4vD,gBAAA5vD,EAAA6vD,eAAAA,gBAAA7vD,YAAA8vD,gBAAA9vD,EAAA,UAAA+vD,gBAAA/vD,EAAAgwD,QAAAA,gBAAAhwD,EAAAiwD,eAAAA,gBAAAjwD,EAAA,eAc7BkwD,gBAAsB3zB,SAAAA,GA+DxB,SAAA2zB,EAAY1hC,EAAYhkB,GAEvB,IAAAiB,EA8B2F,OA5BxFA,EAAA8wB,EAAAl4B,UAAMmqB,EAAMhkB,IAAKrK,KAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAqkD,GAAAvvD,CAAAA,MAAA4vD,KAAAhwD,OAAAC,eAAAs8B,EAAAjxB,GAAAokD,GAAAtvD,CAAAA,MAAA6vD,KAAA3kD,EA9DL+iB,UAAI,EAAA/iB,EAKJo3C,YAAM,EAAA1iD,OAAAC,eAAAs8B,EAAAjxB,GAAA4iD,GAAA,CAAA/tD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA6iD,GAAA,CAAAhuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA8iD,GAAA,CAAAjuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA+iD,GAAA,CAAAluD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAgjD,GAAA,CAAAnuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAijD,GAAA,CAAApuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAkjD,GAAA,CAAAruD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAmjD,GAAA,CAAAtuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAojD,GAAA,CAAAvuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAqjD,GAAA,CAAAxuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAsjD,GAAA,CAAAzuD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAujD,GAAA,CAAA1uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAwjD,GAAA,CAAA3uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAyjD,GAAA,CAAA5uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA0jD,GAAA,CAAA7uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA2jD,GAAA,CAAA9uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA4jD,GAAA,CAAA/uD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA6jD,GAAA,CAAAhvD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA8jD,GAAA,CAAAjvD,UAAA,EAAAC,WAAA,IAAAkL,EAqBtB4kD,YAAMlwD,EAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA+jD,GAAA,CAAAlvD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAgkD,GAAA,CAAAnvD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAikD,GAAA,CAAApvD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAkkD,GAAA,CAAArvD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAmkD,GAAA,CAAAtvD,UAAAC,EAAAA,WAAAkL,IAAAA,EAaG6kD,iBAAS7kD,EAOT8kD,eAAS,EAAA9kD,EAOT+kD,iBAWL/kD,EAAAA,EAAK+iB,KAAOA,EACZ/iB,EAAKo3C,OAASr0B,EAAKq0B,OAEnBriD,EAAAk8B,EAAAjxB,GAAA6iD,IAAAA,IAAc5+C,KACdlP,EAAAk8B,EAAAjxB,GAAA8iD,IAAAA,IAAa7+C,KACblP,EAAAk8B,EAAAjxB,GAAA+iD,IAAAA,IAAY9+C,KACZlP,EAAAk8B,EAAAjxB,GAAAgjD,IAAAA,IAAc/+C,KACdlP,EAAAk8B,EAAAjxB,GAAAijD,IAAAA,IAAah/C,KACblP,EAAAk8B,EAAAjxB,GAAAkjD,IAAAA,IAAYj/C,KACZlP,EAAAk8B,EAAAjxB,GAAAmjD,IAAAA,IAAoB,EACpBpuD,EAAAk8B,EAAAjxB,GAAAojD,IAAAA,IAAoB,EACpBruD,EAAAk8B,EAAAjxB,GAAAujD,IAAAA,KAAe,EACfxuD,EAAAk8B,EAAAjxB,GAAAwjD,IAAAA,KAAqB,EACrBzuD,EAAAk8B,EAAAjxB,GAAAyjD,IAAAA,KAAkB,EAClB1uD,EAAAk8B,EAAAjxB,GAAA0jD,IAAAA,KAAmB,EACnB3uD,EAAAk8B,EAAAjxB,GAAA2jD,IAAAA,IAAiB,KACjB5uD,EAAAk8B,EAAAjxB,GAAA4jD,IAAAA,IAAsB,KACtB7uD,EAAAk8B,EAAAjxB,GAAA6jD,IAAAA,IAAc,KACd9uD,EAAAk8B,EAAAjxB,GAAA8jD,IAAAA,IAAc,KACd9jD,EAAK4kD,QAAS,EACd7vD,EAAAk8B,EAAAjxB,GAAAsjD,IAAAA,KAAc,EACdvuD,EAAAk8B,EAAAjxB,GAAAqjD,IAAAA,KAAY,EACZtuD,EAAAk8B,EAAAjxB,GAAA4iD,IAAAA,IAAiB,IAEjB5iD,EAAK6kD,UAAY,IAAIrwD,EAAa,IAAImG,GAAAA,iBACtCqF,EAAK8kD,UAAY,IAAItwD,EAAa,IAAImG,GAAeA,iBACrDqF,EAAK+kD,YAAc,IAAIvwD,EAAa,IAAImG,GAAeA,iBAAiCqF,CAC5F,CAhGwBG,EAAAskD,EAAA3zB,GAgGvB,IAAA97B,EAAAyvD,EAAAxvD,UAgdAwvD,OAhdAzvD,EA0BDgwD,MAAA,SAAMzvB,EAYArV,QAZAqV,IAAAA,IAAAA,EAWI,CAAA,GAKNxgC,EAAIH,KAAI2uD,IAAAA,KACJ3uD,KAAKi3C,OAGT92C,EAAAH,KAAI2uD,IAAAA,KAAW,EACfxuD,EAAIH,KAAA6uD,IAAAA,KAAc,EAClB1uD,EAAIH,KAAA8uD,IAAAA,KAAe,EACnB3uD,EAAIH,KAAAmvD,IAAAA,KAAoB,EAExBhvD,OAAI4uD,IAAAA,IAAazjC,EAEjB,IAkBIqG,EACAo4B,EACAC,EACAh0C,EArBEwsC,EAASxiD,KAAKwiD,OACd6N,IAAqB1vB,EAAO2vB,YAAgB3vB,EAAO2vB,aAAe9N,EAAOD,eAE/EpiD,OAAI+tD,IAAAA,IAAO,GAAK1L,EAAOuH,IAAI,GAC3B5pD,EAAIH,KAAAkuD,IAAAA,IAAO,GAAK1L,EAAOuH,IAAI,GAC3B5pD,EAAAH,KAAIkuD,IAAAA,IAAO,GAAK1L,EAAOuH,IAAI,GAE3B5pD,EAAAH,KAAIiuD,IAAAA,IAAQ,GAAKzL,EAAOwH,KAAK,GAC7B7pD,EAAIH,KAAAiuD,IAAAA,IAAQ,GAAKzL,EAAOwH,KAAK,GAC7B7pD,EAAIH,KAAAiuD,IAAAA,IAAQ,GAAKzL,EAAOwH,KAAK,GAE7B7pD,EAAAH,KAAImuD,IAAAA,IAAM,GAAK3L,EAAOxsC,GAAG,GACzB7V,OAAIguD,IAAAA,IAAM,GAAK3L,EAAOxsC,GAAG,GACzB7V,EAAIH,KAAAmuD,IAAAA,IAAM,GAAK3L,EAAOxsC,GAAG,GAEzB7V,EAAAH,KAAIuuD,IAAAA,IAAgB/L,EAAOgH,gBAAgBttC,MAC3C/b,EAAIH,KAAAwuD,IAAAA,IAAgB7tB,EAAO4vB,YAAUpwD,EAAIH,KAAIuuD,IAAAA,IAOzC5tB,EAAOhP,KACPA,EAAOgP,EAAOhP,KAENgP,EAAOopB,KAAOppB,EAAOqpB,MAASrpB,EAAO3qB,IAE7C+zC,EAAMppB,EAAOopB,IAEbC,EAAOrpB,EAAOqpB,KAEdh0C,EAAK2qB,EAAO3qB,IAEL2qB,EAAOopB,IACdA,EAAMppB,EAAOopB,IAENppB,EAAOqpB,KACdA,EAAOrpB,EAAOqpB,KAGTqG,IACD1+B,EAAO3xB,KAAKmuB,KAAKwD,MAIzB,IAAM6+B,EAAM7vB,EAAO6vB,IAEnB,GAAI7+B,EAAM,CAEN,GAAIA,EAAK,GAAKA,EAAK,IAAMA,EAAK,GAAKA,EAAK,IAAMA,EAAK,GAAKA,EAAK,GACzD,OAGJ,GAAIA,EAAK,KAAOA,EAAK,IAAMA,EAAK,KAAOA,EAAK,IAAMA,EAAK,KAAOA,EAAK,GAC/D,OAIJ,IAAM8+B,EAAa17B,GADnBpD,EAAOA,EAAK5tB,SAGZ5D,OAAIiuD,IAAAA,IAAUoC,GAAOC,EAErB,IACMxH,EAAiBv2C,GADJnC,GAAOpQ,EAACH,KAAIkuD,IAAAA,IAAA/tD,EAAQH,KAAIiuD,IAAAA,IAAS7+C,KAE9CshD,EAAOF,EAAMj8B,GAAkB5C,EAAM6+B,GAAOl8B,GAAa3C,GACzDg/B,EAAShwB,EAAOgwB,QAAMxwD,EAAIH,KAAIovD,IAAAA,IAC9BwB,EAAMpnD,KAAKuU,IAAI2yC,EAAOlnD,KAAKkK,IAAIi9C,EAAShiD,KAE9CxO,EAAAH,KAAIwuD,IAAAA,IAAuB,IAAPkC,EAEpBvwD,EAAAH,KAAIquD,IAAAA,IAAO,GAAKluD,EAAAH,KAAIouD,IAAAA,IAAQ,GAAMnF,EAAe,GAAK2H,EACtDzwD,EAAIH,KAAAquD,IAAAA,IAAO,GAAKluD,EAAIH,KAAAouD,IAAAA,IAAQ,GAAMnF,EAAe,GAAK2H,EACtDzwD,EAAAH,KAAIquD,IAAAA,IAAO,GAAKluD,OAAIiuD,IAAAA,IAAQ,GAAMnF,EAAe,GAAK2H,EAEtDzwD,EAAIH,KAAAsuD,IAAAA,IAAM,GAAKnuD,EAAAH,KAAImuD,IAAAA,IAAM,GACzBhuD,EAAAH,KAAIsuD,IAAAA,IAAM,GAAKnuD,EAAIH,KAAAmuD,IAAAA,IAAM,GACzBhuD,EAAIH,KAAAsuD,IAAAA,IAAM,GAAKnuD,EAAAH,KAAImuD,IAAAA,IAAM,GAEzBhuD,OAAIgvD,IAAAA,KAAoB,CAG3B,MAAUpF,GAAOC,GAAQh0C,KAEtB7V,EAAAH,KAAImvD,IAAAA,MAAsBpF,KAASC,KAAUh0C,EAE7C7V,EAAAH,KAAI6uD,IAAAA,MAAgB9E,IAAQC,EAE5B7pD,EAAAH,KAAI8uD,IAAAA,MAAiB9E,IAASD,EAE1BA,IACA5pD,EAAAH,KAAIquD,IAAAA,IAAO,GAAKtE,EAAI,GACpB5pD,OAAIkuD,IAAAA,IAAO,GAAKtE,EAAI,GACpB5pD,EAAIH,KAAAquD,IAAAA,IAAO,GAAKtE,EAAI,IAGpBC,IACA7pD,EAAAH,KAAIouD,IAAAA,IAAQ,GAAKpE,EAAK,GACtB7pD,OAAIiuD,IAAAA,IAAQ,GAAKpE,EAAK,GACtB7pD,EAAIH,KAAAouD,IAAAA,IAAQ,GAAKpE,EAAK,IAGtBh0C,IACA7V,EAAAH,KAAIsuD,IAAAA,IAAM,GAAKt4C,EAAG,GAClB7V,OAAImuD,IAAAA,IAAM,GAAKt4C,EAAG,GAClB7V,EAAIH,KAAAsuD,IAAAA,IAAM,GAAKt4C,EAAG,KAItBq6C,GAEI1vB,EAAO2vB,aAAeliD,IAAuBo0C,EAAOD,iBAAmBn0C,KACvEjO,OAAIkvD,IAAAA,IAAgBjhD,GACpBjO,EAAAH,KAAIsvD,IAAAA,IAAgB9M,EAAOrS,WAAWpsC,QACtC5D,EAAAH,KAAIuvD,IAAAA,IAAgB/M,EAAOgH,gBAAgBrZ,WAAWpsC,QACtDy+C,EAAOD,eAAiBj0C,IAGxBqyB,EAAO2vB,aAAeniD,IAA6Bq0C,EAAOD,iBAAmBp0C,KAC7EhO,EAAIH,KAAAqvD,IAAAA,IAAgBlhD,GACpBhO,EAAIH,KAAAsvD,IAAAA,IAAgB9M,EAAOrS,WAAWpsC,QACtC5D,EAAIH,KAAAuvD,IAAAA,IAAgB/M,EAAO+G,sBAAsBpZ,WAAWpsC,QAC5Dy+C,EAAOD,eAAiBj0C,KAI5BnO,EAAAH,KAAIqvD,IAAAA,IAAgB,KAGxBrvD,KAAKiwD,UAAUxvD,SAAST,KAAM,MAE9BG,EAAIH,KAAAivD,IAAAA,IAAUtC,KAAKa,MACnBrtD,EAAAH,KAAIkvD,IAAAA,IAAU/uD,EAAAH,KAAIivD,IAAAA,KAAWtuB,EAAOkwB,SAA6B,IAAlBlwB,EAAOkwB,SAAe1wD,EAAGH,KAAIguD,IAAAA,KAE5E7tD,EAAIH,KAAA2uD,IAAAA,KAAW,EAEf5B,GAAUY,aAAYxtD,EAACH,KAAIyvD,IAAAA,IAAUzvD,KACzC,EAACI,EAmBD0wD,OAAA,SAAOnwB,GACHxgC,EAAAH,KAAIwvD,IAAAA,IAAS7uB,EACjB,EAACvgC,EAkJD62C,KAAA,WACI,GAAI92C,EAACH,KAAI2uD,IAAAA,IAAT,CAGAxuD,EAAAH,KAAI2uD,IAAAA,KAAW,EACfxuD,EAAAH,KAAIivD,IAAAA,IAAU,KACd9uD,EAAAH,KAAIkvD,IAAAA,IAAU,KACd/uD,EAAIH,KAAIqvD,IAAAA,MACJrvD,KAAKwiD,OAAOD,eAAcpiD,EAAGH,KAAIqvD,IAAAA,KAErC,IAAM/jC,EAAQnrB,EAAGH,KAAI+uD,IAAAA,IACjBzjC,IACAnrB,EAAIH,KAAA+uD,IAAAA,IAAa,KACjBzjC,KAEJtrB,KAAKkwD,UAAUzvD,SAAST,KAAM,KAZ7B,CAaL,EAACI,EAKD2wD,OAAA,WACQ5wD,EAACH,KAAI2uD,IAAAA,MAGTxuD,EAAIH,KAAA2uD,IAAAA,KAAW,EACfxuD,OAAI8uD,IAAAA,IAAU,KACd9uD,EAAAH,KAAIkvD,IAAAA,IAAU,KACd/uD,EAAIH,KAAI+uD,IAAAA,MACJ5uD,OAAI4uD,IAAAA,IAAa,MAErB/uD,KAAKmwD,YAAY1vD,SAAST,KAAM,MACpC,EAACI,EA0FD6K,QAAA,WACIjL,KAAKi3C,OACL/a,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAKiwD,UAAUhvD,QACfjB,KAAKkwD,UAAUjvD,QACfjB,KAAKmwD,YAAYlvD,OACrB,EAACC,EAAA2uD,EAAA1uD,CAAAA,CAAAA,IAAAC,WAAAA,IA7ED,WACI,OAAOjB,EAAIH,KAAAguD,IAAAA,IAAa,GAC5B,EAACrxC,IAZD,SAAazc,GACTC,EAAAH,KAAIguD,IAAAA,IAAa9tD,EAAiB,IAARA,EAAkB,IAC5CF,KAAKi3C,MACT,GAAC,CAAA91C,IAAA,MAAAC,IA+BD,WACI,OAAAjB,EAAOH,KAAIyuD,IAAAA,GACf,EAAC9xC,IAdD,SAAQzc,GACJC,EAAAH,KAAIyuD,IAAAA,IAAQvuD,CAChB,GAACiB,CAAAA,IAAAC,SAAAA,IA8BD,WACI,OAAAjB,EAAOH,KAAIovD,IAAAA,GACf,EAACzyC,IAZD,SAAWzc,GACPC,EAAIH,KAAAovD,IAAAA,IAAWlvD,CACnB,GAAC,CAAAiB,IAAA,QAAAC,IA4BD,WACI,OAAAjB,EAAOH,KAAI0uD,IAAAA,GACf,EAAC/xC,IAZD,SAAUzc,GACNC,EAAAH,KAAI0uD,IAAAA,IAAUxuD,CAClB,KAAC2vD,CAAA,CAhjBuB3zB,CAAQjyB,IAAS,SAAA8lD,GAqTjCpvB,GAEJxgC,EAAIH,KAAI2uD,IAAAA,KACJ3uD,KAAKi3C,OAGT,IAEItlB,EACAk8B,EACAD,EACAE,EALEtL,EAASxiD,KAAKwiD,OAOhB7hB,EAAOhP,KACPA,EAAOgP,EAAOhP,KACPgP,EAAOopB,KAAOppB,EAAOqpB,MAAQrpB,EAAO3qB,IAC3C63C,EAASltB,EAAOopB,IAChB6D,EAAUjtB,EAAOqpB,KACjB8D,EAAQntB,EAAO3qB,IAEf2b,EAAO3xB,KAAKmuB,KAAKwD,KAGrB,IAAM6+B,EAAM7vB,EAAO6vB,IAEnB,GAAI7+B,EAAM,CAEN,GAAIA,EAAK,IAAMA,EAAK,IAAMA,EAAK,IAAMA,EAAK,IAAMA,EAAK,IAAMA,EAAK,GAC5D,OAGJ,IAWIiH,EAXE83B,EAAOF,EAAMj8B,GAAkB5C,EAAM6+B,GAAOl8B,GAAa3C,GAE/Di8B,EAAU4C,GAAOz7B,GAAepD,EAAMi8B,GAEtCztD,EAAIH,KAAI0uD,IAAAA,IACJn+C,GAAQiyC,EAAOwH,KAAM4D,EAASG,IAE9Bx9C,GAAQiyC,EAAOuH,IAAKvH,EAAOwH,KAAM+D,IAGrCr7C,GAAcq7C,IAKVn1B,QAHwBtU,IAAfqc,EAAOqwB,IAAqBrwB,EAAOqwB,IAAG7wD,EAAGH,KAAIyuD,IAAAA,KAG/CjlD,KAAKuU,IAAK2yC,EAAQlnD,KAAKkK,KAAKitB,EAAOgwB,QAAMxwD,EAAIH,KAAIovD,IAAAA,KAAYzgD,KAG7DiD,GAAQrB,GAAQiyC,EAAOuH,IAAKvH,EAAOwH,KAAM56C,KAGpDe,GAAc49C,GAAen1B,GAE7B4pB,EAAOuH,IAAM15C,GAAQu9C,EAASG,GAAe3+C,IAC7CozC,EAAOwH,KAAO4D,EAEd5tD,KAAKwiD,OAAOgH,gBAAgBttC,MAAe,IAAPw0C,CAEvC,MAAU7C,GAAUD,GAAWE,KAExBD,IACArL,EAAOuH,IAAM8D,GAEbD,IACApL,EAAOwH,KAAO4D,GAEdE,IACAtL,EAAOxsC,GAAK83C,IAIhBntB,EAAO2vB,aACP9N,EAAOD,eAAiB5hB,EAAO2vB,WAEvC,CAAC,SAAAR,KAGG,GAAI3vD,EAACH,KAAI2uD,IAAAA,IAAT,CAGA,IAEIz8C,GAFSy6C,KAAKa,MAELrtD,EAAGH,KAAIivD,IAAAA,MAAY9uD,EAAIH,KAAAkvD,IAAAA,IAAA/uD,EAAUH,KAAIivD,IAAAA,KAC5CgC,EAAY/+C,GAAK,EAEnBA,EAAI,IACJA,EAAI,GAGR,IAAMg/C,EAAUlxD,KAAKgwD,OAAM7vD,EAAG0vD,GAAqBH,IAAAA,IAAOx9C,EAAG,EAAG,EAAG,GAAKA,EAClEswC,EAASxiD,KAAKwiD,OAoBpB,GAlBIriD,EAAIH,KAAA6uD,IAAAA,KAAA1uD,EAAeH,KAAI8uD,IAAAA,IAEvB3uD,EAAIH,KAAI6uD,IAAAA,KACJt+C,GAAQiyC,EAAOuH,IAAKvH,EAAOwH,KAAM+D,IACjCvL,EAAOuH,IAAM93C,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAIkuD,IAAAA,IAAA/tD,EAAQH,KAAIquD,IAAAA,IAAQR,IAC7DrL,EAAOwH,KAAOz5C,GAAQs9C,GAAQE,GAAeH,KAC1CztD,EAAIH,KAAI8uD,IAAAA,MACXtM,EAAOwH,KAAO/3C,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAIiuD,IAAAA,IAAA9tD,EAASH,KAAIouD,IAAAA,IAASR,IAChEpL,EAAOxsC,GAAK/D,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAImuD,IAAAA,IAAAhuD,EAAOH,KAAIsuD,IAAAA,IAAOR,KAG3D3tD,EAAIH,KAAImvD,IAAAA,MAEX3M,EAAOuH,IAAM93C,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAIkuD,IAAAA,IAAA/tD,EAAQH,KAAIquD,IAAAA,IAAQR,IAC7DrL,EAAOwH,KAAO/3C,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAIiuD,IAAAA,IAAA9tD,EAASH,KAAIouD,IAAAA,IAASR,IAChEpL,EAAOxsC,GAAK/D,GAASi/C,EAAS,EAAG,EAAC/wD,EAAEH,KAAImuD,IAAAA,IAAAhuD,EAAOH,KAAIsuD,IAAAA,IAAOR,KAG9D3tD,EAAIH,KAAIqvD,IAAAA,IAAe,CACnB,IAAM8B,EAAShxD,EAAAH,KAAIqvD,IAAAA,MAAkBjhD,GAAmBjO,EAAI0vD,GAAqBD,IAAAA,IAAc19C,EAAG,EAAG,EAAG,GAAC/R,EAAI0vD,GAAqBF,IAAAA,IAAcz9C,EAAG,EAAG,EAAG,GACzJswC,EAAOkH,iBAAiBvZ,WAAalyB,GAASkzC,EAAO,EAAG,EAAChxD,EAAEH,KAAIsvD,IAAAA,IAAAnvD,EAAeH,KAAIuvD,IAAAA,IAErF,MACG/M,EAAOgH,gBAAgBttC,MAAQ/b,EAAIH,KAAAuuD,IAAAA,IAAiBr8C,GAAK/R,EAAIH,KAAAwuD,IAAAA,IAAAruD,EAAgBH,KAAIuuD,IAAAA,KAGrF,GAAI0C,EAGA,OAFAzO,EAAOgH,gBAAgBttC,MAAK/b,EAAGH,KAAIwuD,IAAAA,SACnCxuD,KAAKi3C,OAGT8V,GAAUY,aAAYxtD,EAACH,KAAIyvD,IAAAA,IAAUzvD,KA5CpC,CA6CL,CAcCF,OAAAC,eAhcC8vD,GAAsBD,GAAA1vD,CAAAA,MA4bvB,SAEmBgS,EAAW4H,EAAWpE,EAAWskC,GACjD,OAAOtkC,GAAiC,EAA3BlM,KAAKk+B,IAAI,GAAI,GAAKx1B,EAAI8nC,IAAUlgC,CACjD,IAhcwBha,OAAAC,eAAtB8vD,GAAsBF,GAAAzvD,CAAAA,MAubvB,SAEmBgS,EAAW4H,EAAWpE,EAAWskC,GAEjD,OAAOtkC,GADPxD,GAAK8nC,GACU9nC,EAAIA,EAAI4H,CAC3B,IA5bwBha,OAAAC,eAAtB8vD,GAAsBH,GAAA,CAAAxvD,MAkbvB,SAEYgS,EAAW4H,EAAWpE,EAAWskC,GAE1C,OAAQtkC,GADRxD,GAAK8nC,IACY9nC,EAAI,GAAK4H,CAC9B,IC/b0D,IAAAs3C,gBAAAzxD,YAAA0xD,gBAAA1xD,EAAA,mBAAA2xD,gBAAA3xD,EAAA4xD,mCAAAA,gBAAA5xD,EAAA,mBAAA8rC,gBAAA9rC,gBAAAgjD,gBAAAhjD,EAAA,aAAAijD,gBAAAjjD,EAAAkjD,qBAAAA,gBAAAljD,EAAA,oBAAAmjD,gBAAAnjD,EAAAojD,oBAAAA,gBAAApjD,EAAA,mBAAAqjD,gBAAArjD,EAAAsjD,yBAAAA,gBAAAtjD,EAAA,wBAAAujD,gBAAAvjD,EAAAwjD,sBAAAA,gBAAAxjD,uBAAAyjD,gBAAAzjD,EAAA0jD,uBAAAA,gBAAA1jD,EAAA,sBAAA2jD,gBAAA3jD,EAAA4jD,qBAAAA,gBAAA5jD,EAAA,oBAAA6jD,gBAAA7jD,EAAA6xD,iBAAAA,gBAAA7xD,EAAA,cAAA8xD,gBAAA9xD,uBAAA+jD,gBAAA/jD,EAAA,qBAAA+xD,gBAAA/xD,EAAAgyD,wBAAAA,gBAAAhyD,EAAA,0BAAAgkD,gBAAAhkD,EAkExD,sBAAAiyD,gBAAK11B,SAAAA,GA4QP,SAAA01B,EAAYx1B,GAcXhxB,IAAAA,EACGA,EAAA8wB,EAAAl4B,KAAMhE,KAAA,KAAMo8B,IAASt8B,KAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAu4C,GAAAzjD,CAAAA,MAAA2jD,KAAA/jD,OAAAC,eAAAs8B,EAAAjxB,GAAAumD,GAAAzxD,CAAAA,MAAA2xD,KAAA/xD,OAAAC,eAAAs8B,EAAAjxB,GAAAsmD,GAAAxxD,CAAAA,MAAA4xD,KAAAhyD,OAAAC,eAAAs8B,EAAAjxB,GAAAs4C,GAAA,CAAAxjD,MAAA4jD,KAAA14C,EA5QzB8zC,eAAS,EAAA9zC,EAKAo3C,YAAMp3C,EAAAA,EAKR48C,mBAAa,EAAA58C,EAKJ2mD,mBAAW3mD,EAMXuxC,cAAQ,EAAAvxC,EAIf4mD,qCAA6B5mD,EAI7B6mD,SAAG7mD,EAAAA,EAIH8mD,oBAAY9mD,EAIZ+mD,aAAO,EAAA/mD,EAIPgnD,kBAAYhnD,EAAAA,EAIZinD,uBAAiB,EAAAjnD,EAIjBknD,wBAAgBlnD,EAIhBmnD,kBAAY,EAAAnnD,EAIZonD,sBAAcpnD,EAIdqnD,mBAAarnD,EAAAA,EAUbyxB,eAAOzxB,EASP44C,oBAAc54C,EAAAA,EASd64C,mBAAa,EAAA74C,EASb84C,wBAAkB94C,EAAAA,EASlB+4C,uBAAe/4C,EAOfg5C,sBAAgB,EAAAh5C,EAOhBi5C,sBAAcj5C,EAOdsnD,mBAAatnD,EAAAA,EAKbunD,kBAAoC,GAAEvnD,EAKtCwnD,YAAMxnD,EAAAA,EAKNynD,WAAuD,GAAEznD,EAClEo5C,mBAAWp5C,EAOF0nD,YAAM,EAAA1nD,EAiBN2nD,gBAAU3nD,EAAAA,EAOVs8C,gBAAU,EAAAt8C,EASVm5C,wBAAkBn5C,EAAAA,EASlB4nD,oBAAc,EAAA5nD,EASd6nD,oBAAc7nD,EAAAA,EASd8nD,sBAAgB,EAAA9nD,EAOhB+nD,6BAAqB/nD,EAOrBgoD,6BAAuB,EAAAtzD,OAAAC,eAAAs8B,EAAAjxB,GAAAgmD,GAAAnxD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAimD,GAAA,CAAApxD,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAkmD,IAAArxD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAmmD,GAAAtxD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAqgC,GAAA,CAAAxrC,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAu3C,GAAA,CAAA1iD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAw3C,GAAA,CAAA3iD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAy3C,GAAA5iD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA03C,GAAA,CAAA7iD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA23C,GAAA,CAAA9iD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA43C,GAAA/iD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA63C,GAAAhjD,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA83C,GAAAjjD,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA+3C,IAAAljD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAg4C,IAAAnjD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAi4C,IAAApjD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAk4C,GAAA,CAAArjD,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAm4C,GAAA,CAAAtjD,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAo4C,GAAA,CAAAvjD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAomD,GAAAvxD,CAAAA,YAAAC,MAsBH,OAAIJ,OAAAC,eAAAs8B,EAAAjxB,GAAAqmD,GAAAxxD,CAAAA,YAAAC,MACG,OAsBhCkL,EAAK+2C,OAAS/lB,EAAQ+lB,OAEtB,IAAMuG,EACFtsB,EAAQ4rB,eACRqL,SAASC,eAAuBl3B,EAAQm3B,UAC5C,KAAM7K,aAAkB8K,mBACpB,KAAM,kEAEVpoD,EAAK48C,cAAgBU,EACrBt9C,EAAK8zC,UAAY,EACjB9zC,EAAKyxB,QAAU,GACfzxB,EAAK44C,eAAiB,GACtB54C,EAAK64C,cAAgB,GACrB74C,EAAK84C,mBAAqB,GAC1B94C,EAAK+4C,gBAAkB,GACvB/4C,EAAKg5C,iBAAmB,GACxBh5C,EAAKi5C,eAAiB,GACtBj5C,EAAKsnD,cAAgB,GACrBtnD,EAAKunD,kBAAoB,GACzBvnD,EAAKwnD,OAAS,CAAE,EAChBxnD,EAAKynD,WAAa,GAClBznD,EAAK0nD,OAAS,CAAE,EAEhB3yD,EAAAk8B,EAAAjxB,GAAAqgC,IAAAA,IAAmB,EACnBtrC,EAAAk8B,EAAAjxB,GAAAu3C,IAAAA,IAAkB,KAClBxiD,EAAAk8B,EAAAjxB,GAAAw3C,IAAAA,IAA0B,EAC1BziD,EAAAk8B,EAAAjxB,GAAAy3C,IAAAA,IAAyB,KACzB1iD,EAAAk8B,EAAAjxB,GAAA03C,IAAAA,IAAyB,EACzB3iD,EAAAk8B,EAAAjxB,GAAA23C,IAAAA,IAAwB,KACxB5iD,EAAAk8B,EAAAjxB,GAAA43C,IAAAA,IAA8B,EAC9B7iD,EAAAk8B,EAAAjxB,GAAA63C,IAAAA,IAA6B,KAC7B9iD,EAAAk8B,EAAAjxB,GAAA83C,IAAAA,IAA2B,EAC3B/iD,EAAAk8B,EAAAjxB,GAAA+3C,IAAAA,IAA0B,KAC1BhjD,EAAAk8B,EAAAjxB,GAAAg4C,IAAAA,IAA4B,EAC5BjjD,EAAAk8B,EAAAjxB,GAAAi4C,IAAAA,IAA2B,KAC3BljD,EAAAk8B,EAAAjxB,GAAAk4C,IAAAA,IAA0B,EAC1BnjD,EAAAk8B,EAAAjxB,GAAAm4C,IAAAA,IAAyB,KACzBpjD,EAAAk8B,EAAAjxB,GAAAo4C,IAAAA,MAAwBpnB,EAAQqoB,cAChCr5C,EAAKo5C,aAAc,EAEnBrkD,EAAAk8B,EAAAjxB,GAAAqmD,IAAAA,IAA0B,KAC1BtxD,EAAAk8B,EAAAjxB,GAAAomD,IAAAA,IAAmB,KAcnBpmD,EAAKs8C,WAAa,IAAI9nD,EAClB,IAAImG,GAAAA,iBAGR5F,EAAAk8B,EAAAjxB,GAAAmmD,IAAAA,IAAwB,EACxBpxD,EAAAk8B,EAAAjxB,GAAAimD,IAAAA,IAAwBhiD,GAAW,CAC/B+sB,EAAQq3B,gBAAkBr3B,EAAQq3B,gBAAgB,GAAK,EACvDr3B,EAAQq3B,gBAAkBr3B,EAAQq3B,gBAAgB,GAAK,EACvDr3B,EAAQq3B,gBAAkBr3B,EAAQq3B,gBAAgB,GAAK,IAE3DtzD,EAAAk8B,EAAAjxB,GAAAkmD,IAAAA,MACMl1B,EAAQs3B,gCACdtoD,EAAK2mD,cAAgB31B,EAAQ21B,YAC7B3mD,EAAK48C,cAAczkB,MAAQn4B,EAAK48C,cAAc2L,YAC9CvoD,EAAK48C,cAAc1kB,OAASl4B,EAAK48C,cAAc4L,aAC/CxoD,EAAKuxC,SAAW,CACZvxC,EAAK48C,cAAc6L,WACnBzoD,EAAK48C,cAAc8L,UACnB1oD,EAAK48C,cAAc2L,YACnBvoD,EAAK48C,cAAc4L,cAKvB,IAAIG,EAAkB,EAClBC,EAAmB,EACnBC,EAAgB,EAChBC,EAAiB,EACjBC,EAAqB,EACrBC,EAAoB,EACpBC,EAAiC,KAEjCC,EAAqC,KA4JvC,OA1JFn0D,EAAAk8B,EAAAjxB,GAAAgmD,IAAAA,IAAehmD,EAAK+2C,OAAO8K,OAAO3sD,UAAU,WACxC,IAAM0nD,EAAgB58C,EAAK48C,cACrBuM,EAAqBp0D,EAAAk8B,EAAAjxB,GAAAmmD,IAAAA,MAA0B+C,EAC/CE,EACF1mC,OAAO2mC,aAAeV,GACtBjmC,OAAO4mC,cAAgBV,EACrBW,EACF3M,EAAc2L,cAAgBM,GAC9BjM,EAAc4L,eAAiBM,EAC7BU,EACF5M,EAAc6L,aAAeM,GAC7BnM,EAAc8L,YAAcM,EAC1B5Z,EAASwN,EAAc6M,cAG7B,GACIN,GACAC,GACAG,GACAC,GANcpa,IAAW6Z,EAQ3B,CAEE,GAAIE,GAAsBI,GAAeC,EAAY,CACjD,IAAME,EAAW9M,EAAc2L,YACzBoB,EAAY/M,EAAc4L,cAC5BW,GAAsBI,KACtB3M,EAAczkB,MAAQ/5B,KAAKsJ,MACvBk1C,EAAc2L,YAAWxzD,EAAAk8B,EAAAjxB,GAAAmmD,IAAAA,KAE7BvJ,EAAc1kB,OAAS95B,KAAKsJ,MACxBk1C,EAAc4L,aAAYzzD,EAAAk8B,EAAAjxB,GAAAmmD,IAAAA,MAGlC,IAAM5U,EAAWvxC,EAAKuxC,SACtBA,EAAS,GAAKqL,EAAc6L,WAC5BlX,EAAS,GAAKqL,EAAc8L,UAC5BnX,EAAS,GAAKmY,EACdnY,EAAS,GAAKoY,EACTR,IAAsBI,GACvBvpD,EAAKs8C,WAAWjnD,SAAQ47B,EAAAjxB,GAAOuxC,GAEnCsX,EAAgBa,EAChBZ,EAAiBa,CACpB,CAEGR,IACAD,EAAmBn0D,EAAAk8B,EAAAjxB,GAAAmmD,IAAAA,KAEnBiD,IACAT,EAAkBjmC,OAAO2mC,WACzBT,EAAmBlmC,OAAO4mC,aAE1BE,IACAT,EAAqBnM,EAAc6L,WACnCO,EAAoBpM,EAAc8L,WAEtCO,EAAa7Z,CAChB,CACL,GAEApvC,EAAKo3C,OAAS,IAAI8G,GAAMjtB,EAAAjxB,IAExBA,EAAK6mD,IAAM,IAAIzQ,GAAGnlB,EAAAjxB,GAAO,CAAE,GAE3BA,EAAK8mD,aAAe,IAAIrC,GAAqBxzB,EAAAjxB,GAAO,CAChDylD,SAAU,KAGdzlD,EAAK+mD,QAAU,IAAInR,GAAO3kB,EAAAjxB,GAAO,CAC7B61C,MAAO7kB,EAAQ6kB,MACf/kC,MAAOkgB,EAAQlgB,MACfuG,OAAQ2Z,EAAQ3Z,SAGpBrX,EAAKgnD,aAAe,IAAItM,GAAgBzpB,EAAAjxB,GAAO,CAC3Cg/B,MAAM,EACN2b,UAAW,CAAC,GAAK,GAAK,IACtBC,UAAW,GACXzd,OAAO,EACP0d,UAAW,CAAC,GAAK,GAAK,IACtBC,UAAW,EACXC,UAAW,IAGf/6C,EAAKinD,kBAAoB,IAAIvM,GAAgBzpB,EAAAjxB,GAAO,CAChDg/B,MAAM,EACN2b,UAAW,CAAC,EAAK,EAAK,GACtBC,UAAW,GACXzd,OAAO,EACP0d,UAAW,CAAC,GAAK,GAAK,IACtBC,UAAW,EACXC,UAAW,IAGf/6C,EAAKknD,iBAAmB,IAAIxM,GAAgBzpB,EAAAjxB,GAAO,CAC/Cg/B,MAAM,EACN2b,UAAW,CAAC,EAAK,EAAK,GACtBC,UAAW,GACXzd,OAAO,EACP0d,UAAW,CAAC,GAAK,GAAK,IACtBC,UAAW,EACXC,UAAW,IAGf/6C,EAAKmnD,aAAe,IAAIlM,GAAYhqB,EAAAjxB,GAAO,CACvC66C,UAAW,CAAC,EAAK,EAAK,GACtBC,UAAW,EACXC,UAAW,EACX5d,OAAO,EACPkZ,YAAa,CAACxzC,MAGlB7C,EAAKonD,eAAiB,IAAIlM,GAAcjqB,EAAAjxB,GAAO,CAC3Cm7C,UAAW,EACXC,aAAa,EACbC,mBAAmB,EACnBC,wBAAyB,EACzBC,wBAAyB,EACzBC,iBAAiB,EACjBC,aAAc,EACdC,aAAc,IAGlB17C,EAAKqnD,cAAgB,IAAIhQ,GAAapmB,EAAAjxB,GAAO,CACzCs3C,UAAW,IAGft3C,EAAKwnD,OAAS,CAAE,EAEhBzyD,EAAAk8B,EAAAjxB,GAAAo4C,IAAAA,MAAwBpnB,EAAQqoB,cAEhCr5C,EAAK2nD,YAAoC,IAAvB32B,EAAQ22B,WAE1B3nD,EAAK4mD,gCACC51B,EAAQ41B,8BAEd5mD,EAAKm5C,mBAAqB,IAAI3kD,EAC1B,IAAImG,GAAAA,iBAERqF,EAAK4nD,eAAiB,IAAIpzD,EACtB,IAAImG,GAAAA,iBAERqF,EAAK6nD,eAAiB,IAAIrzD,EACtB,IAAImG,oBAERqF,EAAK8nD,iBAAmB,IAAItzD,EACxB,IAAImG,oBAERqF,EAAK+nD,sBAAwB,IAAIvzD,EAC7B,IAAImG,oBAERqF,EAAKgoD,wBAA0B,IAAIxzD,EAC/B,IAAImG,oBACNqF,CACN,CAjhBOG,EAAAqmD,EAAA11B,GAihBN,IAAA97B,EAAAwxD,EAAAvxD,UA+SAuxD,OA/SAxxD,EAKD40D,gBAAA,WAAe,IAAA1rC,EAAAtpB,KACX,IAAK,IAAMsK,UAAW63C,OAAOtW,MAAM1Q,OAC/Bh7B,EAAAH,KAAI0jD,IAAAA,IAAoB1jD,KAAKmiD,OAAOtW,MAAM1Q,OAAO7wB,IAErDtK,KAAKmiD,OAAOtW,MAAM7M,eAAe1+B,UAAU,SAACurC,EAAckD,GAClD5uC,EAAAmpB,EAAIo6B,IAAAA,IAAoB3U,EAC5B,GAEJ/uC,KAAKmiD,OAAOtW,MAAM5M,iBAAiB3+B,UAAU,SAACurC,EAAckD,GACpD5uC,EAAAmpB,EAAIq6B,IAAAA,IAAqB5U,EAC7B,EAER,EAAC3uC,EAmSDskD,mBAAA,SAAmBC,GACf3kD,KAAK68B,QAAQ8nB,EAAWr6C,IAAMq6C,EAC9BxkD,EAAIH,KAAAyrC,IAAAA,MACJtrC,EAAIH,KAAA2iD,IAAAA,IAAc,IACtB,EAACviD,EAKDwkD,qBAAA,SAAqBD,UACV3kD,KAAK68B,QAAQ8nB,EAAWr6C,WACpBtK,KAACgkD,eAAeW,EAAWr6C,WAC3BtK,KAACikD,cAAcU,EAAWr6C,gBACzB45C,mBAAmBS,EAAWr6C,gBAC9B65C,gBAAgBQ,EAAWr6C,WAChCtK,KAAKokD,iBAAiBO,EAAWr6C,WAC7BtK,KAACqkD,eAAeM,EAAWr6C,IACtCnK,EAAAH,KAAIyrC,IAAAA,MACJtrC,OAAIwiD,IAAAA,IAAc,IACtB,EAACviD,EAKD++C,wBAAA,SACIwF,EACArG,EACAwG,QAAAA,IAAAA,IAAAA,GAAkB,GAEdxG,GACAt+C,KAAKgkD,eAAeW,EAAWr6C,IAAMq6C,EACrCxkD,EAAIH,KAAA4iD,IAAAA,oBAEQoB,eAAeW,EAAWr6C,IACtCnK,EAAAH,KAAI4iD,IAAAA,OAERziD,EAAAH,KAAI6iD,IAAAA,IAAqB,KACrBiC,GACA9kD,KAAKukD,mBAAmB9jD,SAAST,KAAM2kD,EAE/C,EAACvkD,EAKDi/C,oBAAA,SACIsF,EACAhG,EACAmG,YAAAA,IAAAA,GAAkB,GAEdnG,GACA3+C,KAAKikD,cAAcU,EAAWr6C,IAAMq6C,EACpCxkD,EAAAH,KAAI8iD,IAAAA,eAEO9iD,KAACikD,cAAcU,EAAWr6C,IACrCnK,EAAAH,KAAI8iD,IAAAA,OAER3iD,EAAAH,KAAI+iD,IAAAA,IAAoB,KACpB+B,GACA9kD,KAAKgzD,eAAevyD,SAAST,KAAM2kD,EAE3C,EAACvkD,EAKDm/C,yBAAA,SAAyBoF,EAAwB9F,GACzCA,GACA7+C,KAAKkkD,mBAAmBS,EAAWr6C,IAAMq6C,EACzCxkD,EAAIH,KAAAgjD,IAAAA,oBAEQkB,mBAAmBS,EAAWr6C,IAC1CnK,EAAAH,KAAIgjD,IAAAA,OAER7iD,EAAAH,KAAIijD,IAAAA,IAAyB,IACjC,EAAC7iD,EAKDk/C,sBAAA,SAAsBqF,EAAwB/F,GACtCA,GACA5+C,KAAKmkD,gBAAgBQ,EAAWr6C,IAAMq6C,EACtCxkD,EAAIH,KAAAkjD,IAAAA,oBAEQiB,gBAAgBQ,EAAWr6C,IACvCnK,EAAAH,KAAIkjD,IAAAA,OAER/iD,OAAIgjD,IAAAA,IAAsB,IAC9B,EAAC/iD,EAKDo/C,sBAAA,SAAsBmF,EAAwB5F,GACtCA,GACA/+C,KAAKokD,iBAAiBO,EAAWr6C,IAAMq6C,EACvCxkD,EAAIH,KAAAojD,IAAAA,oBAEQgB,iBAAiBO,EAAWr6C,IACxCnK,EAAAH,KAAIojD,IAAAA,OAERjjD,EAAAH,KAAIqjD,IAAAA,IAAuB,IAC/B,EAACjjD,EAKDq/C,qBAAA,SAAqBkF,EAAwB3F,GACrCA,GACAh/C,KAAKqkD,eAAeM,EAAWr6C,IAAMq6C,EACrCxkD,OAAImjD,IAAAA,eAEGtjD,KAAKqkD,eAAeM,EAAWr6C,IACtCnK,EAAIH,KAAAsjD,IAAAA,OAERnjD,EAAAH,KAAIujD,IAAAA,IAAqB,IAC7B,EAACnjD,EAOD60D,mBAAA,SAAmBC,OAAsCC,EAAAn1D,KACjDsK,EAAK4qD,EAAmB5qD,IAAMlB,KAC9BpJ,KAAK0yD,cAAcpoD,KACnBtK,KAAK6K,+BACwBP,EAAE,gDAE/BA,EAAKlB,MAET,IAAMgsD,EAAe,IAAIrV,GAAa//C,KAAMk1D,GAK5C,OAJA/0D,EAAIH,KAAA0xD,IAAAA,IAAuB0D,GAC3BA,EAAa3qD,YAAY1J,IAAI,WACzBZ,EAAAg1D,EAAIxD,IAAAA,IAAyByD,EACjC,GACOA,CACX,EAACh1D,EAKDi1D,mBAAA,WAEI,IADA,IAAMrQ,EAAYllD,OAAO46B,KAAK16B,KAAK0yD,eAC1BjvD,EAAI,EAAG8S,EAAMyuC,EAAU7hD,OAAQM,EAAI8S,EAAK9S,IAC7CzD,KAAK0yD,cAAc1N,EAAUvhD,IAAIwH,UAErCjL,KAAK2yD,kBAAkBxvD,OAAS,EAChChD,EAAIH,KAAAyxD,IAAAA,IAAsB,IAC9B,EAACrxD,EAKDk1D,qBAAA,WACI,GAAAn1D,EAAIH,KAAIyxD,IAAAA,IACJ,OAAAtxD,EAAOH,KAAIyxD,IAAAA,IAEf,GAAsC,IAAlCzxD,KAAK2yD,kBAAkBxvD,OACvB,OAAQhD,EAAIH,KAAAyxD,IAAAA,IAAsB,IAItC,IADA,IAAM8D,EAAY,GACT9xD,EAAI,EAAG8S,EAAMvW,KAAK2yD,kBAAkBxvD,OAAQM,EAAI8S,EAAK9S,IAE1D8xD,EAAUnyD,KAAK,MAInB,OAFAmyD,EAAUnyD,KAAK,KACfjD,EAAIH,KAAAyxD,IAAAA,IAAsB8D,EAAUpoC,KAAK,IACzChtB,EAAOH,KAAIyxD,IAAAA,GACf,EAACrxD,EAKDo1D,cAAA,SAAcC,GACVz1D,KAAK6yD,WAAWzvD,KAAKqyD,GACrBz1D,KAAK4yD,OAAO6C,EAAMnrD,IAAMmrD,EACxBt1D,EAAIH,KAAAwxD,IAAAA,IAAe,KACnBxxD,KAAK+mD,SACT,EAAC3mD,EAKDs1D,gBAAA,SAAgBD,GACZ,IAAK,IAAIhyD,EAAI,EAAG8S,EAAMvW,KAAK6yD,WAAW1vD,OAAQM,EAAI8S,EAAK9S,IACnD,GAAIzD,KAAK6yD,WAAWpvD,GAAG6G,KAAOmrD,EAAMnrD,GAKhC,OAJAtK,KAAK6yD,WAAWnvD,OAAOD,EAAG,GAC1BtD,OAAIqxD,IAAAA,IAAe,YACRxxD,KAAC4yD,OAAO6C,EAAMnrD,SACzBtK,KAAK+mD,SAIjB,EAAC3mD,EAKDu1D,YAAA,WAEI,IADA,IAAM3Q,EAAYllD,OAAO46B,KAAK16B,KAAK4yD,QAC1BnvD,EAAI,EAAG8S,EAAMyuC,EAAU7hD,OAAQM,EAAI8S,EAAK9S,IAC7CzD,KAAK4yD,OAAO5N,EAAUvhD,IAAIwH,SAElC,EAAC7K,EAKDw1D,cAAA,WACI,GAAAz1D,EAAIH,KAAIwxD,IAAAA,IACJ,OAAArxD,EAAOH,KAAIwxD,IAAAA,IAEf,GAA+B,IAA3BxxD,KAAK6yD,WAAW1vD,OAChB,OAAQhD,EAAIH,KAAAwxD,IAAAA,IAAe,IAI/B,IAFA,IAAM+D,EAAY,GACZ3C,EAAS5yD,KAAK6yD,WACXpvD,EAAI,EAAG8S,EAAMq8C,EAAOzvD,OAAQM,EAAI8S,EAAK9S,IAAK,CAC/C,IAAMgyD,EAAa7C,EAAOnvD,GAC1B8xD,EAAUnyD,KAAK,KACfmyD,EAAUnyD,KAAKqyD,EAAM7lC,MACrB2lC,EAAUnyD,KAAqB,UAAhBqyD,EAAMI,MAAoB,IAAM,KAC3CJ,EAAMK,aACNP,EAAUnyD,KAAK,KAEtB,CASD,OAFAmyD,EAAUnyD,KAAK,KACfjD,EAAIH,KAAAwxD,IAAAA,IAAe+D,EAAUpoC,KAAK,IAClChtB,EAAOH,KAAIwxD,IAAAA,GACf,EAACpxD,EASD2mD,QAAA,WACI/mD,KAAKmiD,OAAOC,SAAS2T,aAAa/1D,KAAKk/C,UAC3C,EAAC9+C,EAKDs/C,OAAA,WACI1/C,KAAKmiD,OAAOC,SAASyC,cAAc7kD,KAAKk/C,UAC5C,EAAC9+C,EAMD41D,4BAAA,WACI,MAAO,CAAC,EAAG,EAAG,EAAG,EACrB,EAAC51D,EAYD2kD,kBAAA,SAAkBC,EAAqB1G,GACnC,YAAY2G,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWrG,UAAYA,EAEvC,OADAqG,EAAWrG,QAAUA,EACd4G,CACX,EACJ,EAAC9kD,EAWD+kD,qBAAA,SAAqBH,EAAqBtG,GACtC,OAAO1+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWjG,aAAeA,EAE1C,OADAiG,EAAWjG,WAAaA,EACjBwG,CACX,EACJ,EAAC9kD,EAWDglD,iBAAA,SAAiBJ,EAAqBzG,GAClC,OAAOv+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWpG,SAAWA,EAEtC,OADAoG,EAAWpG,OAASA,EACb2G,CACX,EACJ,EAAC9kD,EAYDilD,mBAAA,SAAmBL,EAAqBpG,GACpC,OAAO5+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAW/F,WAAaA,EAExC,OADA+F,EAAW/F,SAAWA,EACfsG,CACX,EACJ,EAAC9kD,EAYDklD,sBAAA,SAAsBN,EAAqBnG,GACvC,OAAO7+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAW9F,cAAgBA,EAE3C,OADA8F,EAAW9F,YAAcA,EAClBqG,CACX,EACJ,EAAC9kD,EAYDmlD,iBAAA,SAAiBP,EAAqBrG,GAClC,OAAW3+C,KAACilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWhG,SAAWA,EAItC,OAHIuG,IACAP,EAAWhG,OAASA,GAEjBuG,CACX,EACJ,EAAC9kD,EAYDolD,oBAAA,SAAoBR,EAAqBlG,GACrC,OAAW9+C,KAACilD,YAAYD,EAAW,SAACL,GAChCA,EAAW7F,SAAWA,CAC1B,EACJ,EAAC1+C,EAYDqlD,kBAAA,SAAkBT,EAAqBjgB,GACnC,OAAW/kC,KAACilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAW5f,UAAYA,EAIvC,OAHImgB,IACAP,EAAW5f,QAAUA,GAElBmgB,CACX,EACJ,EAAC9kD,EAYDslD,mBAAA,SAAmBV,EAAqBxG,GACpC,OAAOx+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWnG,WAAaA,EAIxC,OAHI0G,IACAP,EAAWnG,SAAWA,GAEnB0G,CACX,EACJ,EAAC9kD,EAYDulD,oBAAA,SAAoBX,EAAqBvG,GACrC,OAAOz+C,KAAKilD,YAAYD,EAAW,SAACL,GAChC,IAAMO,EAAUP,EAAWlG,YAAcA,EAIzC,OAHIyG,IACAP,EAAWlG,UAAYA,GAEpByG,CACX,EACJ,EAAC9kD,EASD6kD,YAAA,SAAYD,EAAqB15B,GAE7B,IADA,IAAI45B,GAAU,EACLzhD,EAAI,EAAG8S,EAAMyuC,EAAU7hD,OAAQM,EAAI8S,EAAK9S,IAAK,CAClD,IACIkhD,EAAa3kD,KAAK68B,QADXmoB,EAAUvhD,IAEjBkhD,IACAO,EAAU55B,EAASq5B,IAAeO,EAEzC,CACD,OAAOA,CACX,EAAC9kD,EAcD61D,YAAA,SAAYC,GAAgC,IAAAC,EACxCn2D,KAAIo2D,EAAYp2D,KAAK8yD,OAAOoD,EAAgB5rD,IAgB5C,OAfK8rD,IACDA,EAAY,IAAIxS,GAAU,CAEtBt5C,GAAI4rD,EAAgB5rD,GACpB6jB,KAAMnuB,KACNmiD,OAAQniD,KAAKmiD,SAEjBniD,KAAK8yD,OAAOoD,EAAgB5rD,IAAM8rD,EAClCp2D,KAAKizD,eAAexyD,SAAST,KAAMo2D,GACnCA,EAAU3rD,YAAY1J,IAAI,kBACfo1D,EAAKrD,OAAOsD,EAAU9rD,IAC7B6rD,EAAKjD,iBAAiBzyD,SAAS01D,EAAMC,EACzC,IAEJA,EAAU9R,aAAc,EACjB8R,CACX,EAACh2D,EA4BD6K,QAAA,WACIjL,KAAKmiD,OAAO8K,OAAOpsD,YAAWV,EAACH,KAAIoxD,IAAAA,KACnCl1B,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAKukD,mBAAmBtjD,QACxBjB,KAAKgzD,eAAe/xD,QACpBjB,KAAKizD,eAAehyD,QACpBjB,KAAKkzD,iBAAiBjyD,QACtBjB,KAAKmzD,sBAAsBlyD,QAC3BjB,KAAKozD,wBAAwBnyD,OACjC,EAACC,EAAA0wD,IAAAzwD,IAAA,OAAAC,IApxBD,WACI,OAAOpB,KAAKmiD,OAAOtW,MAAMla,IAC7B,GAAC,CAAAxwB,IAAA,kBAAAC,IAOD,WACI,OAAAjB,EAAOH,KAAIqxD,IAAAA,GACf,EAAC10C,IAOD,SAAoBzc,GACZA,GACAC,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAKnxD,EAAM,GACjCC,EAAIH,KAAAqxD,IAAAA,IAAkB,GAAKnxD,EAAM,GACjCC,OAAIkxD,IAAAA,IAAkB,GAAKnxD,EAAM,KAEjCC,EAAIH,KAAAqxD,IAAAA,IAAkB,GAAK,EAC3BlxD,OAAIkxD,IAAAA,IAAkB,GAAK,EAC3BlxD,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAK,GAE/BrxD,KAAK0/C,QACT,GAAC,CAAAv+C,IAAAC,kCAAAA,IAcD,WACI,OAAAjB,EAAOH,KAAIsxD,IAAAA,GACf,EAAC30C,IAUD,SACI+2C,GAEAvzD,OAAImxD,IAAAA,KACoC,IAApCoC,CACR,GAAC,CAAAvyD,IAAAC,kBAAAA,IAWD,WACI,OAAAjB,EAAOH,KAAIuxD,IAAAA,GACf,EAAC50C,IAWD,SAAoB05C,GAEhB,IADAA,EAAkBA,GAAmB,KAClBl2D,EAAKH,KAAIuxD,IAAAA,IAA5B,CAGApxD,OAAIoxD,IAAAA,IAAoB8E,EACxB,IAAMrO,EAAgBhoD,KAAKgoD,cAC3BA,EAAczkB,MAAQ/5B,KAAKsJ,MACvBk1C,EAAc2L,YAAWxzD,EAAGH,KAAIuxD,IAAAA,KAEpCvJ,EAAc1kB,OAAS95B,KAAKsJ,MACxBk1C,EAAc4L,aAAYzzD,EAAGH,KAAIuxD,IAAAA,KAErCvxD,KAAK0/C,QATJ,CAUL,GAACv+C,CAAAA,IAAAC,cAAAA,IAKD,WAEI,OACJ,CAAA,IAACD,IAAA,gBAAAC,IAOD,WACI,OAAAjB,EAAOH,KAAIwjD,IAAAA,GACf,EAAC7mC,IAOD,SAAkBzc,GACVC,EAAAH,KAAIwjD,IAAAA,MAAoBtjD,IAG5BC,EAAIH,KAAAwjD,IAAAA,IAAkBtjD,EACtBF,KAAK0/C,SACT,IAACv+C,IAAA,aAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIyrC,IAAAA,GACf,IAACtqC,IAAA,YAAAC,IAKD,WAII,OAHIjB,EAACH,KAAI2iD,IAAAA,MACLxiD,EAAIH,KAAA2iD,IAAAA,IAAc7iD,OAAO46B,KAAK16B,KAAK68B,UAEvC18B,EAAOH,KAAI2iD,IAAAA,GACf,GAAC,CAAAxhD,IAAAC,oBAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAI4iD,IAAAA,GACf,GAAC,CAAAzhD,IAAA,mBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAI6iD,IAAAA,MACL1iD,EAAIH,KAAA6iD,IAAAA,IAAqB/iD,OAAO46B,KAAK16B,KAAKgkD,iBAE9C7jD,EAAOH,KAAI6iD,IAAAA,GACf,GAAC1hD,CAAAA,IAAAC,mBAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAI8iD,IAAAA,GACf,GAAC,CAAA3hD,IAAAC,kBAAAA,IAKD,WAII,OAHIjB,EAACH,KAAI+iD,IAAAA,MACL5iD,EAAAH,KAAI+iD,IAAAA,IAAoBjjD,OAAO46B,KAAK16B,KAAKikD,gBAE7C9jD,EAAOH,KAAI+iD,IAAAA,GACf,GAAC5hD,CAAAA,4BAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIgjD,IAAAA,GACf,IAAC7hD,IAAA,uBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAIijD,IAAAA,MACL9iD,EAAIH,KAAAijD,IAAAA,IAAyBnjD,OAAO46B,KAAK16B,KAAKkkD,qBAElD/jD,EAAOH,KAAIijD,IAAAA,GACf,IAAC9hD,IAAA,qBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIkjD,IAAAA,GACf,GAAC/hD,CAAAA,wBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAImjD,IAAAA,MACLhjD,EAAIH,KAAAmjD,IAAAA,IAAsBrjD,OAAO46B,KAAK16B,KAAKmkD,kBAE/ChkD,EAAOH,KAAImjD,IAAAA,GACf,GAAC,CAAAhiD,IAAAC,sBAAAA,IAKD,WACI,OAAAjB,EAAOH,KAAIojD,IAAAA,GACf,IAACjiD,IAAA,qBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAIqjD,IAAAA,MACLljD,EAAIH,KAAAqjD,IAAAA,IAAuBvjD,OAAO46B,KAAK16B,KAAKokD,mBAEhDjkD,EAAOH,KAAIqjD,IAAAA,GACf,GAACliD,CAAAA,uBAAAC,IAKD,WAII,OAHIjB,EAACH,KAAIujD,IAAAA,MACLpjD,EAAAH,KAAIujD,IAAAA,IAAqBzjD,OAAO46B,KAAK16B,KAAKqkD,iBAE9ClkD,EAAOH,KAAIujD,IAAAA,GACf,GAACpiD,CAAAA,wBAAAC,IAKD,WACI,OAAAjB,EAAOH,KAAIsjD,IAAAA,GACf,KAACsO,CAAA,CAh0BM11B,CAAQjyB,aAAS65C,GAoiBL/U,GAAsBunB,IAAAA,OAI/BlmB,EAAerB,EAAWlS,QAC1B+oB,EAAsB5lD,KAAKmiD,OAAOC,SAASwD,oBAAoB3T,EAAA,WAEjE,IAAMlQ,EAAcqO,EAAa9lC,GAC3B+zC,EAAqBuH,EAAoBt7C,GAEzC83B,EAAU,UACZg0B,EAAYE,EAAKxD,OAAO1wB,GAC5B,IAAKg0B,EAAW,CACZ,IAAKE,EAAKvD,WAET,MAAA,WACDqD,EAAY,IAAIxS,GAAU,CACtBt5C,GAAI83B,EACJjU,KAAMmoC,EACNnU,OAAQmU,EAAKnU,SAEjBmU,EAAKxD,OAAO1wB,GAAWg0B,EACvBA,EAAU3rD,YAAY1J,IAAI,kBACfu1D,EAAKxD,OAAOsD,EAAU9rD,IAC7BgsD,EAAKpD,iBAAiBzyD,SAAS61D,EAAMF,EACzC,GACAE,EAAKrD,eAAexyD,SAAS61D,EAAMF,EACtC,CACD,IAAMzR,EAAa,IAAIxG,GAAWiY,EAAWr0B,EAAasc,GAC1D+X,EAAU1R,mBAAmBC,GAC7B2R,EAAK5R,mBAAmBC,EAC3B,EAzBD,IAAK,IAAIr6C,KAAM8lC,EAAY6B,GA0B/B,CAAC,SAAA6f,GAsvBqBsD,GAClBp1D,KAAK2yD,kBAAkBvvD,KAAKgyD,GAC5Bp1D,KAAK0yD,cAAc0C,EAAa9qD,IAAM8qD,EACtCj1D,EAAIH,KAAAyxD,IAAAA,IAAsB,KAC1BzxD,KAAK+mD,UACL/mD,KAAKmzD,sBAAsB1yD,SAAST,KAAMo1D,EAC9C,CAAC,SAAAvD,GAEuBuD,GACpB,IAAK,IAAI3xD,EAAI,EAAG8S,EAAMvW,KAAK2yD,kBAAkBxvD,OAAQM,EAAI8S,EAAK9S,IAC1D,GAAIzD,KAAK2yD,kBAAkBlvD,GAAG6G,KAAO8qD,EAAa9qD,GAM9C,OALAtK,KAAK2yD,kBAAkBjvD,OAAOD,EAAG,GACjCtD,EAAIH,KAAAyxD,IAAAA,IAAsB,YACfzxD,KAAC0yD,cAAc0C,EAAa9qD,IACvCtK,KAAK+mD,eACL/mD,KAAKozD,wBAAwB3yD,SAAST,KAAMo1D,EAIxD,CAAC,SAAAvR,GAkBmB9U,GAChB,IAAMlS,EAAUkS,EAAWlS,QAC3B,IAAK,IAAIvyB,KAAMuyB,EAAS,CACpB,IAGIu5B,EAAYp2D,KAAK8yD,OAAc,QAC7BnO,EAAa3kD,KAAK68B,QAJTA,EAAQvyB,GAIgBA,IACvCtK,KAAK4kD,qBAAqBD,GACtByR,IACAA,EAAUxR,qBAAqBD,GAC3ByR,EAAU9R,aAAwC,IAAzB8R,EAAU7pB,YACnC6pB,EAAUnrD,UAGrB,CACL,CC37CYlB,IAAAA,gBAAApK,EAAA42D,uBAAAA,gBAAA52D,EAAA62D,gBAAAA,gBAAA72D,EAQhB,kBAAa82D,gBAAOv6B,SAAAA,GAuFhB,SAAAu6B,EAAY91B,GAOX,IAAAv1B,EAgCkC,OA/B/BA,EAAA8wB,EAAAl4B,KAAAhE,KAAM,KAAM,CAAA,IAAGA,KAACF,OAAAC,eAAAs8B,EAAAjxB,GAAAorD,GAAA,CAAAt2D,MAAAw2D,KAAA52D,OAAAC,eAAAs8B,EAAAjxB,GAAAmrD,GAAA,CAAAr2D,MAAAy2D,KAAA72D,OAAAC,eAAAs8B,EAAAjxB,GAAArB,GAAA,CAAA7J,MAAAmK,KAAAe,EA9EXwrD,kBAAY,EAAAxrD,EAOZ6hD,YAAM,EAAA7hD,EAONyrD,mBAAa,EAAAzrD,EAOb0rD,qBAAe,EAAA1rD,EAKfygC,WAAK,EAAAzgC,EAOL2rD,WAAK,EAAA3rD,EAOL4rD,cAAQ,EAAA5rD,EAKjB6rD,cAAQ,EAAA7rD,EAKCsgD,WAAqB,IAAIiB,MAAQC,UAASxhD,EAK1Cg3C,cAAQ,EAyBbh3C,EAAK6hD,OAAS,IAAIrtD,EAAa,IAAImG,GAAeA,iBAClDqF,EAAKyrD,cAAgB,IAAIj3D,EAAa,IAAImG,GAAeA,iBACzDqF,EAAK0rD,gBAAkB,IAAIl3D,EAAa,IAAImG,GAAeA,iBAE3DqF,EAAKd,GAAKq2B,EAAOr2B,IAAMlB,KAEvBgC,EAAK4rD,SAAW,GAChB5rD,EAAK6rD,SAAW,EAChB7rD,EAAK2rD,MAAQ,CAAA,EACb3rD,EAAKb,WAAY,EAEjBa,EAAKwrD,aAAe,CAChBM,SAAU,EACVC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,eAAe,EACfC,gBAAgB,GAGpBpsD,EAAKygC,MAAQlL,EAAOkL,OAAS,IAAI+C,GAEjCxjC,EAAKg3C,SAAWzhB,EAAOyhB,SAEvBh3C,EAAKg3C,SAASqV,gBAAgBrsD,EAAKwrD,cAEnCxrD,EAAKg3C,SAASsV,aAAYr7B,EAAAjxB,IAE1B2hD,GAAUU,eAAcpxB,EAAAjxB,IAAOA,CACnC,CA/HgBG,EAAAkrD,EAAAv6B,GA+Hf,IAAA97B,EAAAq2D,EAAAp2D,UAwJA,OAxJAD,EAoCDu3D,WAAA,SAAWh3B,GAAkB,IAAArX,EAAAtpB,KACzB,GAAIA,KAAKg3D,SAAS7zD,QAAUnD,KAAK42D,aAAaM,SAC1C,OAAO,IAAI7rD,GAAmF,0EAAArL,KAAK42D,aAAaM,SACnH,eACD,IAAIU,EAASj3B,EAAOr2B,IAAMlB,KAC1B,GAAIpJ,KAAK+2D,MAAMa,GACX,OAAO,IAAIvsD,GAA0BusD,iBAAAA,EACxC,oBAGD,MADsBj3B,EAAOqnB,eAAiBqL,SAASC,eAAe3yB,EAAO4yB,qBAC9CC,mBAC3B,OAAO,IAAInoD,GAAS,mEAExB,IAAM8iB,EAAO,IAAIyjC,GAAKjvD,GAAM,CAACi1D,OAAAA,EAAQzV,OAAQniD,MAAO2gC,IAmBpD,IAAK,IAAIr2B,KAlBTnK,EAAAH,KAAIu2D,IAAAA,IAAepoC,GAGnBA,EAAK+wB,UAAYl/C,KAAKoiD,SAASyV,WAAW1pC,GAC1CA,EAAK1jB,YAAY1J,IAAI,WACjBZ,EAAAmpB,EAAIktC,IAAAA,IAAiBroC,GACrB7E,EAAK84B,SAAS0V,WAAW3pC,EAAK+wB,WAC9B51B,EAAKwtC,gBAAgBr2D,SAAS6oB,EAAM6E,EACxC,GAIAnuB,KAAK6rC,MAAM7M,eAAe1+B,UAAU,SAACurC,EAAckD,GAC/CzlB,EAAK84B,SAAS2V,iBAAiBhpB,EACnC,GACA/uC,KAAK6rC,MAAM5M,iBAAiB3+B,UAAU,SAACurC,EAAckD,GACjDzlB,EAAK84B,SAAS4V,iBAAiBjpB,EACnC,GACe/uC,KAAK6rC,MAAM1Q,OACtBn7B,KAAKoiD,SAAS2V,iBAAiB/3D,KAAK6rC,MAAM1Q,OAAO7wB,IAKrD,OAHA6jB,EAAK6mC,kBACLh1D,KAAK62D,cAAcp2D,SAAST,KAAMmuB,GAClCnuB,KAAK0K,IAAG,iBAAkByjB,EAAKypC,QACxBzpC,CACX,EAAC/tB,EAODs/C,OAAA,WACI,IAAK,IAAIkY,KAAU53D,KAAK+2D,MACpB/2D,KAAK+2D,MAAMa,GAAQlY,QAE3B,EAACt/C,EAUDsK,IAAA,SAAIjG,GACAA,EAAOtE,SAAAA,EAAYH,KAAI+J,IAAAA,IAAsBtF,GAC7CqpB,OAAOnjB,QAAQD,IAAIjG,EACvB,EAACrE,EAUDwK,KAAA,SAAKnG,GACDA,EAAOtE,UAAAA,EAAaH,KAAI+J,IAAAA,IAAsBtF,GAC9CqpB,OAAOnjB,QAAQC,KAAKnG,EACxB,EAACrE,EAUDyK,MAAA,SAAMpG,GACFA,EAAOtE,WAAAA,EAAcH,KAAI+J,IAAAA,IAAsBtF,GAC/CqpB,OAAOnjB,QAAQE,MAAMpG,EACzB,EAACrE,EAKD6K,QAAA,WACI,IAAIjL,KAAKuK,UAAT,CAIA,IAAK,IAAID,KADTyiD,GAAUW,iBAAiB1tD,MACRA,KAAC+2D,MAChB/2D,KAAK+2D,MAAMzsD,GAAIW,UAEnBjL,KAAKitD,OAAOhsD,QACZjB,KAAK62D,cAAc51D,QACnBjB,KAAK82D,gBAAgB71D,OAPpB,CASL,EAACb,EAMDgtD,OAAA,SAAOzsB,GACH,IAAK,IAAIue,EAAY,EAAGA,EAAYl/C,KAAKg3D,SAAS7zD,OAAQ+7C,IACtDl/C,KAAKoiD,SAASgL,OAAOlO,EAAW,CAAC+Y,OAAO,GAEhD,EAACxB,CAAA,CAvRev6B,CAAQjyB,IAoT3B,SAAAI,GA3BwB5F,GACjB,MAAA,KAAYzE,KAAKwB,YAAYqD,KAAI,KAAKuqB,GAASpvB,KAAKsK,IAAU7F,OAAAA,CAClE,CAAC,SAAAkyD,GAEaxoC,GACV,IAAInuB,KAAK+2D,MAAM5oC,EAAK7jB,IAApB,CAGAtK,KAAK+2D,MAAM5oC,EAAK7jB,IAAM6jB,EACtB,IAAK,IAAI+wB,EAAY,GAAKA,IACtB,IAAKl/C,KAAKg3D,SAAS9X,GAIf,OAHAl/C,KAAKg3D,SAAS9X,GAAa/wB,EAC3BnuB,KAAKi3D,gBACL9oC,EAAK+wB,UAAYA,EANxB,CAUL,CAAC,SAAAwX,GAEevoC,GACPnuB,KAAK+2D,MAAM5oC,EAAK7jB,aAGdtK,KAAK+2D,MAAM5oC,EAAK7jB,WAChBtK,KAAKg3D,SAAS7oC,EAAK+wB,WAC1Bl/C,KAAKi3D,WACT,CCvUmC,IAAA/Y,gBAAAv+C,EAajC,SAAAu4D,gBAAa,SAAAh8B,GAsBf,SAAAg8B,EAAY/pC,EAAYhkB,GAOlBiB,IAAAA,EAQ4B,gBAfVjB,IAAAA,EAOpB,CAAA,IACAiB,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMhkB,IAAKiB,MApBL+iB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,WAqBhBkL,IAAAA,EAAK+iB,KAAOA,EACZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVtuB,KAAM,UACNgV,MAAO,IAAIh0B,aAAazG,EAAIy6B,OAAS,CAAC,GAAK,GAAK,KAChD+c,UAAYx3C,QAAIw3C,UAAqDx3C,EAAIw3C,UAAY,GAEzFv2C,EAAK+iB,KAAKqnC,cAAan5B,EAAAjxB,IAAOA,CAClC,CAiCC,OAvEcG,EAAA2sD,EAAAh8B,GAsCdg8B,EAAA73D,UAiDD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KAAAhE,MACbA,KAAKmuB,KAAKunC,gBAAgB11D,KAC9B,EAACkB,EAAAg3D,EAAA,CAAA,CAAA/2D,IAAA,QAAAC,IAjCD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQtZ,KACvB,EAACjoB,IAZD,SAAUioB,GACNzkC,EAAAH,KAAIk+C,IAAAA,IAAQtZ,MAAMjoB,IAAIioB,GACtB5kC,KAAKmuB,KAAKuxB,QACd,GAAC,CAAAv+C,IAAA,YAAAC,IA8BD,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQyD,SACvB,EAAChlC,IAdD,SAAcglC,GACVxhD,EAAAH,KAAIk+C,IAAAA,IAAQyD,eAA0Br9B,IAAdq9B,EAA0BA,EAAY,EAC9D3hD,KAAKmuB,KAAKuxB,QACd,KAACwY,CAAA,CAvEc,CAAQjuD,ICbYi0C,gBAAAv+C,EAAA,SAkBjCw4D,yBAASj8B,GA6BX,SAAAi8B,EAAYhqC,EAAYiO,GAGlBhxB,IAAAA,EAU4B,YAbV,IAAAgxB,IAAAA,EAGpB,CAAA,IACAhxB,EAAA8wB,EAAAl4B,KAAMmqB,KAAAA,EAAMiO,IAAShxB,MAvBT+iB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,IAAAj+C,UAAA,EAAAC,WAwBhBkL,IAAAA,EAAK+iB,KAAOA,EACZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVtuB,KAAM,MACNlN,IAAK,IAAI9R,aAAawrB,EAAQ1Z,KAAO,CAAC,EAAK,EAAK,IAChDkiB,MAAO,IAAIh0B,aAAawrB,EAAQwI,OAAS,CAAC,GAAK,GAAK,KACpD+c,UAAYvlB,QAAQulB,UAAyDvlB,EAAQulB,UAAY,EACjGkU,MAAOz5B,EAAQy5B,OAAS,QAE5BzqD,EAAK+iB,KAAKqnC,cAAan5B,EAAAjxB,IAAOA,CAClC,CAqEC+sD,OAhHU5sD,EAAA4sD,EAAAj8B,GA2CVi8B,EAAA93D,UA0ED4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,KACbhE,MAAAA,KAAKmuB,KAAKunC,gBAAgB11D,MAC1BA,KAAKmuB,KAAKuxB,QACd,EAACx+C,EAAAi3D,IAAAh3D,IAAA,MAAAC,IArED,WACI,OAAOjB,OAAI+9C,IAAAA,IAAQx7B,GACvB,EAAC/F,IASD,SAAQzc,GACJC,OAAI+9C,IAAAA,IAAQx7B,IAAI/F,IAAIzc,GACpBF,KAAKmuB,KAAKuxB,QACd,IAACv+C,IAAA,QAAAC,IASD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQtZ,KACvB,EAACjoB,IASD,SAAUioB,GACNzkC,EAAIH,KAAAk+C,IAAAA,IAAQtZ,MAAMjoB,IAAIioB,GACtB5kC,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,gBAAAC,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQyD,SACvB,EAAChlC,IASD,SAAcglC,GACVxhD,EAAIH,KAAAk+C,IAAAA,IAAQyD,UAAYA,EACxB3hD,KAAKmuB,KAAKuxB,QACd,KAACyY,CAAA,EAhHkBluD,IClBgBi0C,gBAAAv+C,EAqBjC,SAAAy4D,gBAAW,SAAAl8B,GAkCb,SAAAk8B,EAAYjqC,EAAYhkB,GAiBlB,IAAAiB,EAiB4B,YAlCVjB,IAAAA,IAAAA,EAiBpB,CAAE,IAEFiB,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMhkB,UA3CAgkB,UAAI,EAAAruB,OAAAC,eAAAs8B,EAAAjxB,GAAA8yC,GAAAj+C,CAAAA,UAAAC,EAAAA,eA6ChBkL,EAAK+iB,KAAOA,EAGZhuB,EAAAk8B,EAAAjxB,GAAA8yC,IAAAA,IAAc,CACVtuB,KAAM,QACN9Z,IAAK,IAAI7G,aAAa9E,EAAI2L,KAAO,CAAC,EAAK,EAAK,IAC5C8uB,MAAO,IAAIh0B,aAAazG,EAAIy6B,OAAS,CAAC,GAAK,GAAK,KAChD+c,UAAW,EAEX0W,YAAa,IAAIznD,aAAa,CAACzG,EAAImuD,oBAAqBnuD,EAAIouD,kBAAmBpuD,EAAIquD,uBACnF3C,MAAO1rD,EAAI0rD,OAAS,QAGxBzqD,EAAK+iB,KAAKqnC,cAAan5B,EAAAjxB,IAAOA,CAClC,CAiJC,OAtNYG,EAAA6sD,EAAAl8B,GAqEZk8B,EAAA/3D,UAsJD4K,QAAA,WACIixB,EAAA77B,UAAM4K,QAAOjH,WACbhE,KAAKmuB,KAAKunC,gBAAgB11D,MAC1BA,KAAKmuB,KAAKuxB,QACd,EAACx+C,EAAAk3D,EAAA,CAAA,CAAAj3D,IAAA,MAAAC,IA/ID,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQpoC,GACvB,EAAC6G,IAWD,SAAQ7G,GACJ3V,EAAAH,KAAIk+C,IAAAA,IAAQpoC,IAAI6G,IAAI7G,GAAO,CAAC,EAAK,EAAK,IACtC9V,KAAKmuB,KAAKuxB,QACd,GAAC,CAAAv+C,IAAAC,QAAAA,IASD,WACI,OAAOjB,EAAIH,KAAAk+C,IAAAA,IAAQtZ,KACvB,EAACjoB,IASD,SAAUioB,GACNzkC,EAAIH,KAAAk+C,IAAAA,IAAQtZ,MAAMjoB,IAAIioB,GAAS,CAAC,GAAK,GAAK,KAC1C5kC,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,IAAAC,YAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQyD,SACvB,EAAChlC,IASD,SAAcglC,GACNA,IAAcxhD,EAAAH,KAAIk+C,IAAAA,IAAQyD,YAG9BxhD,EAAIH,KAAAk+C,IAAAA,IAAQyD,UAAYA,EACxB3hD,KAAKmuB,KAAKuxB,SACd,GAACv+C,CAAAA,IAAAC,sBAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,EACnC,EAAC17C,IASD,SAAwBzc,GACpBC,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,GAAKn4D,EAC7BF,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,IAAAC,oBAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,EACnC,EAAC17C,IASD,SAAsBzc,GAClBC,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,GAAKn4D,EAC7BF,KAAKmuB,KAAKuxB,QACd,GAACv+C,CAAAA,IAAAC,uBAAAA,IASD,WACI,OAAOjB,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,EACnC,EAAC17C,IASD,SAAyBzc,GACrBC,EAAAH,KAAIk+C,IAAAA,IAAQma,YAAY,GAAKn4D,EAC7BF,KAAKmuB,KAAKuxB,QACd,KAAC0Y,CAAA,CAtNY,CAAQnuD,86BCSrB,SAAAwuD,IAAA34D,OAAAC,eAAAC,KAAA04D,GAAAz4D,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAA44D,GAAA,CAAA14D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAA64D,KAAAA,IAAA34D,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA64D,GAAA54D,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA84D,GAAA74D,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAAg5D,GAAA,CAAA94D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAg5D,GAAA,CAAA/4D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAk5D,KAAAA,IAAAh5D,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAk5D,GAAAj5D,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAm5D,GAAAl5D,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAAq5D,GAAA,CAAAn5D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA+gD,GAAA,CAAA9gD,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs5D,KAAAA,IAAAp5D,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAs5D,GAAAr5D,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAu5D,GAAAt5D,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAAy5D,GAAA,CAAAv5D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAy5D,GAAA,CAAAx5D,UAAAC,EAAAA,eAAAJ,OAAAC,eAAA25D,KAAAA,IAAAz5D,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA25D,GAAA15D,CAAAA,UAAAC,EAAAA,WAEIC,IAAAA,OAAIu4D,IAAAA,IAAe,KACnBv4D,OAAIi5D,IAAAA,IAAc,IAAIplC,WAAW,CAAC,EAAG,IACrC7zB,OAAI4gD,IAAAA,IAAW,IAAI9xC,aAAa,CAAC,EAAG,EAAG,IACvC9O,EAAIH,KAAAq5D,IAAAA,IAAc,IAAIpqD,aAAa,CAAC,EAAG,EAAG,IAC1C9O,OAAIm5D,IAAAA,IAAY,IAAI5vB,WAAW,GAC/BvpC,EAAIH,KAAAu5D,IAAAA,IAAa,IAAItqD,aAAa,CAAC,EAAG,EAAG,IACzC9O,EAAAH,KAAIw5D,IAAAA,IAAa,IAAIvqD,aAAa,CAAC,EAAG,EAAG,IACzC9O,EAAAH,KAAIy5D,IAAAA,IAAY,IAAIxqD,aAAa,CAAC,EAAG,EAAG,IACxC9O,EAAAH,KAAI05D,IAAAA,IAAgB,IAAIzqD,aAAa,CAAC,EAAG,EAAG,IAC5C9O,OAAIw5D,IAAAA,IAAO,IAAI1qD,aAAa,CAAC,EAAG,IAChC9O,EAAAH,KAAI44D,IAAAA,KAAc,EAClBz4D,EAAAH,KAAI64D,IAAAA,KAAiB,EACrB14D,EAAIH,KAAA84D,IAAAA,KAAe,EACnB34D,EAAIH,KAAA24D,IAAAA,KAAiB,EACrBx4D,EAAIH,KAAA+4D,IAAAA,KAAgB,EACpB54D,EAAIH,KAAAg5D,IAAAA,KAAgB,EACpB74D,EAAIH,KAAAi5D,IAAAA,KAAe,EACnB94D,EAAIH,KAAAk5D,IAAAA,KAAmB,EACvB/4D,OAAIg5D,IAAAA,KAAU,EAEdn5D,KAAKwhC,OACT,CA+MCi3B,OA/MAA,EAAAp4D,UAoNDmhC,MAAA,WACIrhC,EAAIH,KAAA04D,IAAAA,IAAe,KACnBv4D,EAAIH,KAAA24D,IAAAA,KAAiB,EACrBx4D,OAAIy4D,IAAAA,KAAc,EAClBz4D,OAAI04D,IAAAA,KAAiB,EACrB14D,OAAI24D,IAAAA,KAAe,EACnB34D,EAAAH,KAAI+4D,IAAAA,KAAgB,EACpB54D,EAAAH,KAAIg5D,IAAAA,KAAgB,EACpB74D,EAAAH,KAAIi5D,IAAAA,KAAe,EACnB94D,EAAIH,KAAAk5D,IAAAA,KAAmB,EACvB/4D,EAAIH,KAAAm5D,IAAAA,KAAU,CAClB,EAACj4D,EAAAu3D,IAAAt3D,IAAA,aAAAC,IA1ND,WACI,OAAAjB,EAAOH,KAAI04D,IAAAA,GACf,EAAC/7C,IAKD,SAAezc,GACXC,OAAIu4D,IAAAA,IAAex4D,CACvB,GAAC,CAAAiB,IAAAC,YAAAA,IAKD,WACI,OAAOjB,EAAAH,KAAI24D,IAAAA,IAAAx4D,EAAiBH,KAAIo5D,IAAAA,SAAc90C,CAClD,EAAC3H,IAKD,SAAczc,GACNA,GACAC,OAAIi5D,IAAAA,IAAY,GAAKl5D,EAAM,GAC3BC,OAAIi5D,IAAAA,IAAY,GAAKl5D,EAAM,GAC3BC,EAAAH,KAAI24D,IAAAA,KAAiB,GAErBx4D,EAAIH,KAAA24D,IAAAA,KAAiB,CAE7B,IAACx3D,IAAA,SAAAC,IAKD,WACI,OAAOjB,OAAIy4D,IAAAA,IAAAz4D,EAAcH,KAAI+gD,IAAAA,IAAW,IAC5C,EAACpkC,IAKD,SAAWzc,GACHA,GACAC,EAAIH,KAAA+gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBC,OAAI4gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBC,EAAAH,KAAI+gD,IAAAA,IAAS,GAAK7gD,EAAM,GACxBC,EAAAH,KAAI44D,IAAAA,KAAc,GAElBz4D,OAAIy4D,IAAAA,KAAc,CAE1B,IAACz3D,IAAA,YAAAC,IAKD,WACI,OAAOjB,OAAI04D,IAAAA,IAAA14D,EAAiBH,KAAIq5D,IAAAA,IAAc,IAClD,EAAC18C,IAKD,SAAczc,GACNA,GACAC,EAAIH,KAAAq5D,IAAAA,IAAY,GAAKn5D,EAAM,GAC3BC,EAAIH,KAAAq5D,IAAAA,IAAY,GAAKn5D,EAAM,GAC3BC,OAAIk5D,IAAAA,IAAY,GAAKn5D,EAAM,GAC3BC,EAAIH,KAAA64D,IAAAA,KAAiB,GAErB14D,EAAIH,KAAA64D,IAAAA,KAAiB,CAE7B,GAAC13D,CAAAA,cAAAC,IAMD,WACI,OAAOjB,OAAIu4D,IAAAA,KAAAv4D,EAAgBH,KAAI84D,IAAAA,IAAY34D,EAAGH,KAAIs5D,IAAAA,IAAY,IAClE,EAAC38C,IAKD,SAAYzc,GACJA,GACAC,EAAIH,KAAAs5D,IAAAA,IAAU,GAAKp5D,EAAM,GACzBC,OAAIm5D,IAAAA,IAAU,GAAKp5D,EAAM,GACzBC,EAAIH,KAAAs5D,IAAAA,IAAU,GAAKp5D,EAAM,GACzBC,EAAAH,KAAI84D,IAAAA,KAAe,GAEnB34D,EAAIH,KAAA84D,IAAAA,KAAe,CAE3B,GAAC33D,CAAAA,eAAAC,IAMD,WACI,OAAOjB,EAAIH,KAAA04D,IAAAA,KAAAv4D,EAAgBH,KAAI+4D,IAAAA,IAAa54D,EAAGH,KAAIu5D,IAAAA,IAAa,IACpE,EAAC58C,IAKD,SAAazc,GACLA,GACAC,EAAIH,KAAAu5D,IAAAA,IAAW,GAAKr5D,EAAM,GAC1BC,EAAAH,KAAIu5D,IAAAA,IAAW,GAAKr5D,EAAM,GAC1BC,OAAIo5D,IAAAA,IAAW,GAAKr5D,EAAM,GAC1BC,EAAAH,KAAI+4D,IAAAA,KAAgB,GAEpB54D,EAAIH,KAAA+4D,IAAAA,KAAgB,CAE5B,GAAC,CAAA53D,IAAA,WAAAC,IAMD,WACI,OAAOjB,OAAIu4D,IAAAA,KAAAv4D,EAAgBH,KAAIg5D,IAAAA,IAAa74D,EAAGH,KAAIw5D,IAAAA,IAAa,IACpE,EAAC78C,IAKD,SAAazc,GACLA,GACAC,EAAAH,KAAIw5D,IAAAA,IAAW,GAAKt5D,EAAM,GAC1BC,OAAIq5D,IAAAA,IAAW,GAAKt5D,EAAM,GAC1BC,OAAIq5D,IAAAA,IAAW,GAAKt5D,EAAM,GAC1BC,OAAI64D,IAAAA,KAAgB,GAEpB74D,EAAIH,KAAAg5D,IAAAA,KAAgB,CAE5B,GAAC73D,CAAAA,cAAAC,IAMD,WACI,OAAOjB,OAAIu4D,IAAAA,KAAAv4D,EAAgBH,KAAIi5D,IAAAA,IAAY94D,EAAGH,KAAIy5D,IAAAA,IAAY,IAClE,EAAC98C,IAKD,SAAYzc,GACJA,GACAC,EAAIH,KAAAy5D,IAAAA,IAAU,GAAKv5D,EAAM,GACzBC,OAAIs5D,IAAAA,IAAU,GAAKv5D,EAAM,GACzBC,OAAIs5D,IAAAA,IAAU,GAAKv5D,EAAM,GACzBC,EAAAH,KAAIi5D,IAAAA,KAAe,GAEnB94D,EAAIH,KAAAi5D,IAAAA,KAAe,CAE3B,IAAC93D,IAAA,cAAAC,IAMD,WACI,OAAOjB,OAAIu4D,IAAAA,KAAAv4D,EAAgBH,KAAIk5D,IAAAA,IAAgB/4D,EAAGH,KAAI05D,IAAAA,IAAgB,IAC1E,EAAC/8C,IAKD,SAAgBzc,GACRA,GACAC,EAAIH,KAAA05D,IAAAA,IAAc,GAAKx5D,EAAM,GAC7BC,EAAIH,KAAA05D,IAAAA,IAAc,GAAKx5D,EAAM,GAC7BC,OAAIu5D,IAAAA,IAAc,GAAKx5D,EAAM,GAC7BC,EAAAH,KAAIk5D,IAAAA,KAAmB,GAEvB/4D,EAAIH,KAAAk5D,IAAAA,KAAmB,CAE/B,GAAC/3D,CAAAA,IAAAC,KAAAA,IAMD,WACI,OAAOjB,OAAIu4D,IAAAA,KAAAv4D,EAAgBH,KAAIm5D,IAAAA,IAAOh5D,EAAGH,KAAI25D,IAAAA,IAAO,IACxD,EAACh9C,IAKD,SAAOzc,GACCA,GACAC,EAAIH,KAAA25D,IAAAA,IAAK,GAAKz5D,EAAM,GACpBC,OAAIw5D,IAAAA,IAAK,GAAKz5D,EAAM,GACpBC,EAAAH,KAAIm5D,IAAAA,KAAU,GAEdh5D,EAAIH,KAAAm5D,IAAAA,KAAU,CAEtB,KAACV,CAAA,KC9ODmB,GAAoB,EAElBC,GAAc,CAChBC,MAAO,EACPC,UAAW,GAGTC,GAAmB,CACrBC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,mBAAoB,EACpBC,OAAQ,EACRC,aAAc,EACdC,cAAe,EACfC,SAAU,GACVC,QAAS,GACTC,4BAA6B,GAC7BC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,SAAU,IAGRC,GAAe,CACjBnvD,WAAYA,GACZY,qBAAsBA,GACtBc,iBAAkBA,GAClBf,qBAAsBA,GACtBJ,yBAA0BA,GAC1BH,sBAAuBA,GACvBK,gBAAiBA,GACjBC,gBAAiBA,GACjBL,wBAAyBA,GACzBJ,qBAAsBA,IACxBmvD,gBAAAx7D,EAAAy7D,kBAAAA,gBAAAz7D,EAAA,oBAAA07D,gBAAA17D,EAAA27D,qBAAAA,gBAAA37D,EAAA47D,cAAAA,gBAAA57D,qBAAA67D,gBAAA77D,EAAA,gBAAA87D,gBAAA97D,EAAA+7D,sBAAAA,gBAAA/7D,EAAA,mBAAAg8D,gBAAAh8D,EAAA,kBAOWi8D,gBAoBT,WAAA,SAAAA,EAAYj7B,GAAyD7gC,OAAAC,eAAA47D,KAAAA,GAAAz7D,CAAAA,MAAA27D,KAAA/7D,OAAAC,eAAAC,KAAAm7D,GAAA,CAAAl7D,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAo7D,GAAA,CAAAn7D,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs7D,KAAAA,IAAAp7D,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAu7D,KAAAA,GAAAr7D,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAu7D,GAAAt7D,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAw7D,GAAA,CAAAv7D,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAA07D,KAAAA,GAAAx7D,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA07D,GAAA,CAAAz7D,UAAAC,EAAAA,WAEjEC,IAAAA,OAAIg7D,IAAAA,IAAmBx6B,EAAOm7B,gBAAkB,uDAChD37D,EAAAH,KAAIo7D,IAAAA,IAAqB,KACzBj7D,EAAAH,KAAIq7D,IAAAA,IAAsB,KAC1Bl7D,EAAAH,KAAIs7D,IAAAA,IAAe,IAAI/zC,GACvBpnB,OAAIo7D,IAAAA,IAAoB,GAEpB56B,EAAOo7B,aACP57D,EAAAH,KAAIs7D,IAAAA,IAAa5yC,eAAeiY,EAAOo7B,aAG3C57D,EAAAH,KAAIw7D,IAAAA,IAAiB,KACrBr7D,EAAIH,KAAA07D,IAAAA,KAAoB,EACxBv7D,EAAIH,KAAAy7D,IAAAA,IAAuB,CAAC,OAChC,CAAC,IAAAr7D,EAAAw7D,EAAAv7D,UA8DAu7D,OA9DAx7D,EAOD47D,KAAA,SAAKpF,GACDz2D,EAAAH,KAAIw7D,IAAAA,IAAiB,CACjBrE,cAAeP,EAAaO,cAC5BC,cAAeR,EAAaQ,cAC5BC,cAAeT,EAAaS,cAC5BC,aAAcV,EAAaU,aAC3BC,cAAeX,EAAaW,cAC5BC,eAAgBZ,EAAaY,eAErC,EAACp3D,EASD67D,UAAA,SAAU74B,EAAwB84B,GAAW9wD,IAAAA,OACzC,YADoC,IAAN8wD,IAAAA,EAAS,CAAA,OAC5Bp1C,QAAiC,SAACC,EAASC,GAClD,IAAMm1C,EAAaD,EACnB/7D,EAAAiL,EAAIuwD,IAAAA,MAAmB7xC,KAAK,WACxB,OAAO3pB,EAAAiL,EAAIkwD,IAAAA,IAAa9yC,YAAY,CAChCoH,KAAM,YACNwT,QAAAA,EACA+4B,WAAYA,GACb/4B,EACP,GAAGtZ,KAAK,SAACoG,GAEL,IAAMksC,EAAkBlsC,EAAE3D,KACnB8vC,EAAwED,EAAxEC,QAAwBC,EAAgDF,EAAhDE,OAAqBC,EAA2BH,EAA3BG,cAAeC,EAAYJ,EAAZI,SACnE,GAAa,UADkEJ,EAAxCxsC,KAEnC,OAAO5I,EAFoEo1C,EAAlCvxD,OAI7Ckc,EAAiC,CAC7Bs1C,QAAAA,EACAI,MAAO,CACHH,OAAAA,EACA34B,UAA8B,IAAnB04B,EAAQl5D,OAAewI,GAAeE,GACjD63B,UAA8B,IAAnB24B,EAAQl5D,OAAewI,GAAeE,GACjDm4B,SAlIC,IAkISu4B,EAAqC5uD,GAAeD,GAC9DgvD,oBAlIS,EAkIYF,KAGjC,EACJ,EACJ,EAACp8D,EAKD6K,QAAA,WACI0xD,IAAIC,gBAAez8D,EAACH,KAAIu7D,IAAAA,KACxBp7D,EAAAH,KAAIs7D,IAAAA,IAAarwD,UACjB2uD,IACJ,EAACgC,CAAA,CA7ED,GA6HH,SAAAC,KA9CkBvyC,IAAAA,OACX,IAAInpB,EAACH,KAAIq7D,IAAAA,IAAqB,CAC1B,IAAMwB,EAAW,IAAI3zC,GACrB2zC,EAASz1C,QAAOjnB,EAACH,KAAIm7D,IAAAA,KACrB0B,EAAS11C,mBAAkBhnB,EAACH,KAAI07D,IAAAA,KAEhC,IAAMoB,EAAYD,EAASh2C,UAAU,uBAC/Bk2C,EAAe,IAAI7zC,GACzB6zC,EAAa31C,QAAOjnB,EAACH,KAAIm7D,IAAAA,KACzB4B,EAAatwC,gBAAgB,eAC7BswC,EAAa51C,mBAAkBhnB,EAACH,KAAI07D,IAAAA,KAEpC,IAAMsB,EAAgBD,EAAal2C,UAAU,yBAC7C1mB,EAAAH,KAAIq7D,IAAAA,IAAsBv0C,QAAQm2C,IAAI,CAACH,EAAWE,IAC7ClzC,KAAK,SAAAkB,GAA+B,IAA7B8xC,EAAS9xC,EAAA,GAAEgyC,EAAahyC,EAC5B,GAAMrpB,EAAKu7D,GAAY5zD,WACjB4gB,EAAO,CACT,kBACA,uBAAyBoF,KAAKC,UAAU2rC,IACxC,2BAA6B5rC,KAAKC,UAAUyqC,IAC5C,sBAAwB1qC,KAAKC,UAAUsqC,IACvC,4BACAiD,EACA,eACAn7D,EAAGw7D,UAAUx7D,EAAGwC,QAAQ,KAAO,EAAGxC,EAAGy7D,YAAY,OACnDjwC,KAAK,MACPhtB,EAAAmpB,EAAIiyC,IAAAA,IAAoBoB,IAAIU,gBAAgB,IAAIC,KAAK,CAACpzC,KACtD/pB,EAAAmpB,EAAI8xC,IAAAA,IAAqB4B,EACzB78D,EAAAmpB,EAAIgyC,IAAAA,IAAa7yC,iBAAiB,WAC9B,IAAMT,EAAS,IAAIu1C,OAAMp9D,EAACmpB,EAAIiyC,IAAAA,KACxBiC,EAAmBr9D,EAAAmpB,EAAI8xC,IAAAA,IAAmBr3D,MAAM,GAMtD,OALAikB,EAAOQ,YAAY,CACfoH,KAAM,OACNssC,OAAM/7D,EAAEmpB,EAAIkyC,IAAAA,IACZgC,iBAAAA,GACD,CAACA,IACGx1C,CACX,EACJ,GACA4xC,GAAoB,GACpBjvD,QAAQC,KAAK,gLAEjBgvD,IACH,CACD,OAAAz5D,EAAOH,KAAIq7D,IAAAA,GACf,CAIJ,IAAM6B,GAAc,WAEhB,IAAIhB,EACAuB,EACAC,EAGExC,EAAeyC,cAEf3D,EAAmB4D,kBAEnB/D,EAAcgE,aAEpBC,KAAK71C,iBAAiB,UAAW,SAAUiI,GACvC,IA4CU6tC,EA5CJt5D,EAAUyrB,EAAE3D,KAClB,OAAQ9nB,EAAQmrB,MACZ,IAAK,OACDssC,EAASz3D,EAAQy3D,OAyCf6B,EAxCGt5D,EAAQ+4D,iBAyCrBC,EAAoB,IAAI32C,QAAQ,SAAAC,GAC5B22C,EAAc,CACVK,WAAAA,EACAC,qBAAsBj3C,GAG1Bk3C,MAAMP,EACV,GAAG5zC,KAAK,WACJ4zC,EAAYQ,uBACiB55C,IAAzBo5C,EAAYS,UACZxzD,QAAQC,KAAK,mEAErB,GApDQ,MACJ,IAAK,YACD6yD,EAAkB3zC,KAAK,WACnB,IAWI,IAVA,IAAAs0C,EAmDpB,SAAmBnwC,GACf,IAAMowC,EAAW,IAAIX,EAAYS,SAAS,IAAI/vC,WAAWH,IAEzD,SAAShqB,IACLo6D,EAASnzC,QACTmzC,EAAe,QACnB,CAEA,IAAKA,EAASC,UAEV,MADAr6D,IACM,IAAIO,MAAM,4DAEpB,IAAM+5D,EAAcF,EAASG,UAAY3E,EAAYE,UAAYF,EAAYC,MACvEv2B,EAAQ86B,EAASI,WACjBn7B,EAAS+6B,EAASK,YAClBC,EAASN,EAASO,YAClBC,EAAWR,EAASS,cACpBvC,EAAgB8B,EAASU,qBACzBvC,EAAW6B,EAASW,cAC1BC,EA0FJ,SAA6BV,EAAqBh7B,EAAeD,EAAgBu7B,GAI7E,IAHA,IAEMziC,EAAUmiC,IAAgB1E,EAAYC,MAAQoF,EAAgBC,EAC3D17D,EAAI,EAAGA,EAAI24B,EAAQj5B,OAAQM,IAAK,CACrC,IAAM27D,EAAMhjC,EAAQ34B,GACpB,GAAKy4D,EAAOkD,OACPA,EAAIb,YAAY1hB,SAAS0hB,MAC1BM,GAAYO,EAAIC,iBAAiBl8D,OAAS,MAC1Ci8D,EAAIE,iBAAqBC,EAAah8B,IAAUg8B,EAAaj8B,IAGjE,MAAO,CACH+7B,iBAHeD,EAAIC,iBAAiBR,EAAW,EAAI,GAInDW,aAHWJ,EAAII,aAAaX,EAAW,EAAI,GAKlD,CAID,OAHAl0D,QAAQC,KAAK,2FAGN,CACHy0D,iBAHerF,EAAiBc,OAIhC0E,aAHWtE,EAAanvD,WAKhC,CAlH6C0zD,CAAoBlB,EAAah7B,EAAOD,EAAQu7B,GAAlFQ,EAAgBJ,EAAhBI,iBAAkBG,EAAYP,EAAZO,aACzB,IAAKj8B,IAAUD,IAAWq7B,EAEtB,MADA16D,QACUO,MAAM,0CAEpB,IAAK65D,EAASqB,mBAEV,MADAz7D,QACUO,MAAM,mDAGpB,IADA,IAAM63D,EAAU,GACPsD,EAAM,EAAGA,EAAMhB,EAAQgB,IAAO,CACnC,IAAMC,EAAYvB,EAASwB,kBAAkBF,EAAK,EAAG,GAC/CG,EAAWF,EAAUG,UACrBC,EAAYJ,EAAUK,WACtBC,EAAM,IAAI9xC,WAAWiwC,EAAS8B,8BAA8BR,EAAK,EAAG,EAAGN,IAE7E,IADehB,EAAS+B,eAAeF,EAAKP,EAAK,EAAG,EAAGN,EAAkB,GAAI,GAAI,GAG7E,MADAp7D,IACU,IAAAO,MAAM,kDAEpB63D,EAAQj5D,KAAK,CAACmpB,KAAM2zC,EAAK38B,MAAOu8B,EAAUx8B,OAAQ08B,GACrD,CAED,OADA/7D,IACO,CAACs/B,MAAAA,EAAOD,OAAAA,EAAQu7B,SAAAA,EAAUxC,QAAAA,EAASC,OAAQkD,EAAcjD,cAAAA,EAAeC,SAAAA,EACnF,CAtFwBP,CAAUx3D,EAAQ2+B,QAAQ,IAP1BG,EAAK66B,EAAL76B,MACAD,EAAM86B,EAAN96B,OACAu7B,EAAQT,EAARS,SACAxC,EAAO+B,EAAP/B,QACAC,EAAM8B,EAAN9B,OACAC,EAAa6B,EAAb7B,cACAC,EAAQ4B,EAAR5B,SAEEp5B,EAAU,GACP3/B,EAAI,EAAGA,EAAI44D,EAAQl5D,SAAUM,EAClC2/B,EAAQhgC,KAAKi5D,EAAQ54D,GAAG8oB,KAAK0B,QAEjC6vC,KAAKt1C,YAAY,CACboH,KAAM,YACNtlB,GAAI7F,EAAQ6F,GACZi5B,MAAAA,EACAD,OAAAA,EACAu7B,SAAAA,EACAxC,QAAAA,EACAC,OAAAA,EACAC,cAAAA,EACAC,SAAAA,GAEDp5B,EACN,CAAC,MAAOv4B,GACLF,QAAQE,MAAK,kBAAmBA,GAEhCizD,KAAKt1C,YAAY,CAACoH,KAAM,QAAStlB,GAAI7F,EAAQ6F,GAAIO,MAAOA,EAAMpG,SACjE,CACL,GAGZ,GAuEA,IAAM47D,EAAiB,CAAC,CACpBC,GAAI,gBACJ/B,YAAa,CAAC1E,EAAYE,WAC1BsF,iBAAkB,CAACrF,EAAiBW,SAAUX,EAAiBW,UAC/D6E,aAAc,CAACtE,EAAavuD,qBAAsBuuD,EAAavuD,sBAC/D4zD,cAAetoB,SACfuoB,cAAe,EACflB,iBAAiB,GAClB,CACCgB,GAAI,gBACJ/B,YAAa,CAAC1E,EAAYC,MAAOD,EAAYE,WAC7CsF,iBAAkB,CAACrF,EAAiBQ,OAAQR,EAAiBQ,QAC7DgF,aAAc,CAACtE,EAAaztD,iBAAkBytD,EAAaztD,kBAC3D8yD,cAAe,EACfC,cAAe,EACflB,iBAAiB,GAClB,CACCgB,GAAI,eACJ/B,YAAa,CAAC1E,EAAYC,MAAOD,EAAYE,WAC7CsF,iBAAkB,CAACrF,EAAiBG,IAAKH,EAAiBI,KAC1DoF,aAAc,CAACtE,EAAalvD,qBAAsBkvD,EAAa/uD,uBAC/Do0D,cAAe,EACfC,cAAe,EACflB,iBAAiB,GAClB,CACCgB,GAAI,gBACJ/B,YAAa,CAAC1E,EAAYC,MAAOD,EAAYE,WAC7CsF,iBAAkB,CAACrF,EAAiBC,KAAMD,EAAiBE,MAC3DsF,aAAc,CAACtE,EAAazuD,gBAAiByuD,EAAaxuD,sBAC1D6zD,cAAe,EACfC,cAAe,EACflB,iBAAiB,GAClB,CACCgB,GAAI,gBACJ/B,YAAa,CAAC1E,EAAYC,MAAOD,EAAYE,WAC7CsF,iBAAkB,CAACrF,EAAiBC,MACpCuF,aAAc,CAACtE,EAAa1uD,iBAC5B+zD,cAAe,EACfC,cAAe,EACflB,iBAAiB,GAClB,CACCgB,GAAI,iBACJ/B,YAAa,CAAC1E,EAAYC,MAAOD,EAAYE,WAC7CsF,iBAAkB,CAACrF,EAAiBS,aAAcT,EAAiBU,eACnE8E,aAAc,CAACtE,EAAa9uD,wBAAyB8uD,EAAa5uD,0BAClEi0D,cAAe,EACfC,cAAe,EACflB,iBAAiB,IAEfJ,EAAgBmB,EAAel3B,KAAK,SAAUtvB,EAAGC,GACnD,OAAOD,EAAE0mD,cAAgBzmD,EAAEymD,aAC/B,GACMpB,EAAgBkB,EAAel3B,KAAK,SAAUtvB,EAAGC,GACnD,OAAOD,EAAE2mD,cAAgB1mD,EAAE0mD,aAC/B,GA4BA,SAASjB,EAAar/D,GAClB,OAAIA,GAAS,GACkB,IAAvBA,EAAQA,EAAQ,IAAsB,IAAVA,CACxC,CACJ,+CCvaaugE,gBAST,WAAA,SAAAA,EAAYC,EAA4BC,GAAgB3gE,KARxD0gE,QACAC,EAAAA,KAAAA,gBAQI3gE,KAAK0gE,GAAKA,EACV1gE,KAAK2gE,SAAWA,CACpB,CAaC,OAbAF,EAAApgE,UAMDugE,gBAAA,SAAgBC,GACPA,IAGLA,EAAS14C,OACTnoB,KAAK0gE,GAAGI,wBAAwB9gE,KAAK2gE,UACrC3gE,KAAK0gE,GAAGK,oBAAoB/gE,KAAK2gE,SAAUE,EAASG,SAAUH,EAASI,SAAUJ,EAASK,WAAYL,EAASM,OAAQN,EAAS3qC,QACpI,EAACuqC,CAAA,CAhBD,oCCPSW,gBAaT,WAAA,SAAAA,EAAYzgC,YAAAA,IAAAA,EAOV,CAAE,GAlBJ+/B,KAAAA,eACApzB,aAAO,EAAAttC,KACPqhE,kBACAC,EAAAA,KAAAA,0BACAC,iBAAW,EAAAzhE,OAAAC,oBAAAyhE,GAAA,CAAAvhE,UAAAC,EAAAA,eAePF,KAAK0gE,GAAK//B,EAAO+/B,GACjB1gE,KAAKstC,QAAU3M,EAAO2M,QACtBttC,KAAKqhE,aAAe1gC,EAAO0gC,aAC3BrhE,KAAKshE,cAAgB3gC,EAAO2gC,cAC5BthE,KAAKuhE,YAAc5gC,EAAO4gC,YAC1BphE,OAAIqhE,IAAAA,IAAgB7gC,EAAOl2B,WAC/B,CAAC,IAAArK,EAAAghE,EAAA/gE,UA0DA,OA1DAD,EAQDqhE,YAAA,SAAYC,EAAsBC,EAAoBC,GAC7C5hE,KAAK0gE,IAGViB,EAAQF,YAAYzhE,KAAM4hE,EAC9B,EAACxhE,EAMD+nB,KAAA,SAAKy5C,GACD,SAAK5hE,KAAK0gE,KAAO1gE,KAAKstC,UAItBttC,KAAK0gE,GAAGmB,cAAc7hE,KAAK0gE,GAAG,UAAYkB,IAC1C5hE,KAAK0gE,GAAGe,YAAYzhE,KAAK0gE,GAAGoB,WAAY9hE,KAAKstC,SACtC,GACX,EAACltC,EAED2hE,iBAAA,WACS/hE,KAAK0gE,KAGV1gE,KAAK0gE,GAAGsB,cAAchiE,KAAK0gE,GAAGoB,WAAY9hE,KAAK0gE,GAAGuB,mBAAoBjiE,KAAK0gE,GAAGwB,SAC9EliE,KAAK0gE,GAAGsB,cAAchiE,KAAK0gE,GAAGoB,WAAY9hE,KAAK0gE,GAAGyB,mBAAoBniE,KAAK0gE,GAAGwB,SAC9EliE,KAAK0gE,GAAGsB,cAAchiE,KAAK0gE,GAAGoB,WAAY9hE,KAAK0gE,GAAG0B,eAAgBpiE,KAAK0gE,GAAG2B,eAC1EriE,KAAK0gE,GAAGsB,cAAchiE,KAAK0gE,GAAGoB,WAAY9hE,KAAK0gE,GAAG4B,eAAgBtiE,KAAK0gE,GAAG2B,eAC9E,EAACjiE,EAEDmiE,OAAA,SAAOX,GAQP,EAACxhE,EAED6K,QAAA,WACSjL,KAAK0gE,IAAO1gE,KAAKstC,UAGtBttC,KAAK0gE,GAAG8B,cAAcxiE,KAAKstC,SAC3BttC,KAAKstC,QAAU,KACfntC,EAAIH,KAAIwhE,IAAAA,KACJrhE,EAAAH,KAAIwhE,IAAAA,MAEZ,EAACJ,CAAA,CAxED,GCjBSqB,gBAAQ,WA4BjB,SAAAA,EAAY/B,EAA4B9wC,EAAc8yC,GAKlD,GA5BJC,KAAAA,mBAKAC,eAAS,EAAA5iE,KAKT6iE,cAAQ,EAAA7iE,KAKR8iE,YAAM,EASF9iE,KAAK4iE,WAAY,EACjB5iE,KAAK6iE,UAAW,EAEhB7iE,KAAK8iE,OAASpC,EAAGqC,aAAanzC,GACzB5vB,KAAK8iE,QAUV,GAJA9iE,KAAK4iE,WAAY,EACjBlC,EAAGsC,aAAahjE,KAAK8iE,OAAQJ,GAC7BhC,EAAGuC,cAAcjjE,KAAK8iE,QACtB9iE,KAAK6iE,SAAWnC,EAAGwC,mBAAmBljE,KAAK8iE,OAAQpC,EAAGyC,iBACjDnjE,KAAK6iE,WACDnC,EAAG0C,gBAAiB,CAGrB,IAFA,IAAMC,EAAQX,EAAO9oC,MAAM,MACrB0pC,EAAgB,GACb7/D,EAAI,EAAGA,EAAI4/D,EAAMlgE,OAAQM,IAC9B6/D,EAAclgE,KAAMK,EAAI,EAAK,KAAO4/D,EAAM5/D,GAAK,MAEnDzD,KAAK2iE,OAAS,GACd3iE,KAAK2iE,OAAOv/D,KAAK,IACjBpD,KAAK2iE,OAAOv/D,KAAKs9D,EAAG6C,iBAAiBvjE,KAAK8iE,SAAW,IACrD9iE,KAAK2iE,OAAS3iE,KAAK2iE,OAAOa,OAAOF,EAAcn2C,KAAK,IACvD,OApBDntB,KAAK2iE,OAAS,CACV,qBAqBZ,CAOC,OAPAF,EAAApiE,UAKD4K,QAAA,WAEC,EAAAw3D,CAAA,CA/DgB,GCERgB,gBAUT,WAAA,SAAAA,EAAY/C,EAA4BC,QARvBA,cAAQ,EAAA3gE,KACR0gE,QAAE,EAQf1gE,KAAK0gE,GAAKA,EACV1gE,KAAK2gE,SAAWA,CACpB,QAAC8C,EAAApjE,UAODohE,YAAA,SAAYn0B,EAA4Bs0B,GACpC,QAAIt0B,EAAQnlB,KAAKy5C,KACb5hE,KAAK0gE,GAAGgD,UAAU1jE,KAAK2gE,SAAUiB,MAIzC,EAAC6B,CAAA,CAhBD,GCREE,GAAM,IAAIrgD,GAAI,CAAA,EAAI,IAKXsgD,gBAAS,WA6ElB,SAAAA,EAAYlD,EAA4BsC,GAkBpC,GAlBqDhjE,KAxEzDsK,QAAE,EAAAtK,KAKF6jE,kBAAY,EAAA7jE,KAKZ8jE,oBAKAC,EAAAA,KAAAA,gBAKAC,EAAAA,KAAAA,cAKAC,EAAAA,KAAAA,cAKAtB,EAAAA,KAAAA,mBAKAuB,eAAS,EAAAlkE,KAKTmkE,YAAM,EAAAnkE,KAKN6iE,cAAQ,EAAA7iE,KAKR4iE,eAAS,EAAA5iE,KAKT0gE,QAKAgC,EAAAA,KAAAA,YAKAI,EAAAA,KAAAA,YAUI,EAAA9iE,KAAKsK,GAAKq5D,GAAIhgD,QAAQ,IACtB3jB,KAAK0iE,OAASM,EACdhjE,KAAK0gE,GAAKA,EACV1gE,KAAK4iE,WAAY,EACjB5iE,KAAK6iE,UAAW,EAChB7iE,KAAKmkE,QAAS,EACdnkE,KAAKkkE,WAAY,EACjBlkE,KAAK2iE,OAAS,GACd3iE,KAAKikE,SAAW,CAAA,EAChBjkE,KAAKgkE,SAAW,CAAE,EAClBhkE,KAAK+jE,WAAa,CAAE,EAEpB/jE,KAAK6jE,aAAe,IAAIpB,GAAS/B,EAAIA,EAAG0D,cAAepkE,KAAK0iE,OAAO2B,QACnErkE,KAAK8jE,eAAiB,IAAIrB,GAAS/B,EAAIA,EAAG4D,gBAAiBtkE,KAAK0iE,OAAO6B,WAElEvkE,KAAK6jE,aAAajB,UAGnB,OAFA5iE,KAAK2iE,OAAS,CAAC,oCAAoCa,OAAOxjE,KAAK6jE,aAAalB,aAC5E6B,GAAUxkE,KAAK2iE,QAInB,IAAK3iE,KAAK8jE,eAAelB,UAGrB,OAFA5iE,KAAK2iE,OAAS,CAAC,sCAAsCa,OAAOxjE,KAAK8jE,eAAenB,aAChF6B,GAAUxkE,KAAK2iE,QAMnB,GAFA3iE,KAAK4iE,WAAY,GAEZ5iE,KAAK6jE,aAAahB,SAGnB,OAFA7iE,KAAK2iE,OAAS,CAAC,mCAAmCa,OAAOxjE,KAAK6jE,aAAalB,aAC3E6B,GAAUxkE,KAAK2iE,QAInB,IAAK3iE,KAAK8jE,eAAejB,SAGrB,OAFA7iE,KAAK2iE,OAAS,CAAC,qCAAqCa,OAAOxjE,KAAK8jE,eAAenB,aAC/E6B,GAAUxkE,KAAK2iE,QAQnB,GAJA3iE,KAAK6iE,UAAW,EAEhB7iE,KAAK8iE,OAASpC,EAAG+D,gBAEZzkE,KAAK8iE,OAAV,CAgBA,GAXApC,EAAGgE,aAAa1kE,KAAK8iE,OAAQ9iE,KAAK6jE,aAAaf,QAC/CpC,EAAGgE,aAAa1kE,KAAK8iE,OAAQ9iE,KAAK8jE,eAAehB,QACjDpC,EAAGiE,YAAY3kE,KAAK8iE,QAEpB9iE,KAAKmkE,OAASzD,EAAGkE,oBAAoB5kE,KAAK8iE,OAAQpC,EAAGmE,aAKrD7kE,KAAKkkE,WAAY,GAEZlkE,KAAKmkE,SAAWnkE,KAAKkkE,UAUtB,OATAlkE,KAAK2iE,OAAS,GACd3iE,KAAK2iE,OAAOv/D,KAAK,IAEjBpD,KAAK2iE,OAAOv/D,KAAKs9D,EAAGoE,kBAAkB9kE,KAAK8iE,SAC3C9iE,KAAK2iE,OAAOv/D,KAAK,sBACjBpD,KAAK2iE,OAAS3iE,KAAK2iE,OAAOa,OAAOxjE,KAAK0iE,OAAO2B,QAC7CrkE,KAAK2iE,OAAOv/D,KAAK,wBACjBpD,KAAK2iE,OAAS3iE,KAAK2iE,OAAOa,OAAOxjE,KAAK0iE,OAAO6B,eAC7CC,GAAUxkE,KAAK2iE,QAKnB,IADA,IAAMoC,EAAcrE,EAAGkE,oBAAoB5kE,KAAK8iE,OAAQpC,EAAGsE,iBAClDvhE,EAAI,EAAGA,EAAIshE,IAAethE,EAAG,CAClC,IAAMmM,EAAI8wD,EAAGuE,iBAAiBjlE,KAAK8iE,OAAQr/D,GAC3C,GAAImM,EAAG,CACH,IAAIs1D,EAAQt1D,EAAE/K,KACkB,OAA5BqgE,EAAMA,EAAM/hE,OAAS,KACrB+hE,EAAQA,EAAM73C,OAAO,EAAG63C,EAAM/hE,OAAS,IAE3C,IAAMw9D,EAAWD,EAAGyE,mBAAmBnlE,KAAK8iE,OAAQoC,GAC/Ct1D,EAAEggB,OAAS8wC,EAAG0E,YAAgBx1D,EAAEggB,OAAS8wC,EAAG2E,cAA6B,QAAXz1D,EAAEggB,KAEjE5vB,KAAKgkE,SAASkB,GAAS,IAAIzB,GAAU/C,EAAIC,GAGzC3gE,KAAKikE,SAASiB,GAASvE,CAE9B,CACJ,CAGD,IADA,IAAM2E,EAAa5E,EAAGkE,oBAAoB5kE,KAAK8iE,OAAQpC,EAAG6E,mBACjD9hE,EAAI,EAAGA,EAAI6hE,EAAY7hE,IAAK,CACjC,IAAMoW,EAAI6mD,EAAG8E,gBAAgBxlE,KAAK8iE,OAAQr/D,GAC1C,GAAIoW,EAAG,CACH,IAAM8mD,EAAWD,EAAG+E,kBAAkBzlE,KAAK8iE,OAAQjpD,EAAEhV,MACrD7E,KAAK+jE,WAAWlqD,EAAEhV,MAAQ,IAAI47D,GAAYC,EAAIC,EACjD,CACJ,CAED3gE,KAAK4iE,WAAY,CAtDhB,MAFG5iE,KAAK2iE,OAAS,CAAC,6BAyDvB,CAAC,IAAAviE,EAAAwjE,EAAAvjE,UAqEAujE,OArEAxjE,EAKD+nB,KAAA,WACSnoB,KAAK4iE,WAGV5iE,KAAK0gE,GAAGgF,WAAW1lE,KAAK8iE,OAC5B,EAAC1iE,EAMDulE,YAAA,SAAY9gE,GACR,OAAW7E,KAACikE,SAASp/D,EACzB,EAACzE,EAMDwlE,aAAA,SAAa/gE,GACT,OAAW7E,KAAC+jE,WAAWl/D,EAC3B,EAACzE,EAMDylE,WAAA,SAAWhhE,GACP,OAAO7E,KAAKgkE,SAASn/D,EACzB,EAACzE,EAQDqhE,YAAA,SAAY58D,EAAcyoC,EAA4Bs0B,GAClD,IAAK5hE,KAAK4iE,UACN,OAAO,EAEX,IAAMjB,EAAU3hE,KAAKgkE,SAASn/D,GAC9B,QAAI88D,GACOA,EAAQF,YAAYn0B,EAASs0B,EAI5C,EAACxhE,EAKD6K,QAAA,WACSjL,KAAK4iE,YAGVe,GAAI7/C,WAAW9jB,KAAKsK,IACpBtK,KAAK0gE,GAAGoF,cAAc9lE,KAAK8iE,QAC3B9iE,KAAK0gE,GAAGqF,aAAa/lE,KAAK6jE,aAAaf,QACvC9iE,KAAK0gE,GAAGqF,aAAa/lE,KAAK8jE,eAAehB,QACzC9iE,KAAK+jE,WAAa,CAAA,EAClB/jE,KAAKikE,SAAW,CAAA,EAChBjkE,KAAKgkE,SAAW,CAAE,EAClBhkE,KAAK4iE,WAAY,EACrB,EAACgB,CAAA,CA5PiB,GAgRtB,SAASY,GAAU7B,GACfh4D,QAAQE,MAAM83D,EAAOx1C,KAAK,MAC9B,UCzRgB64C,GAAatF,EAA4B77D,GAOrD,QAL6Byf,IAAzBo8C,EAAGuF,oBAEHvF,EAAGuF,kBAAoB,CAC1B,QAEkC3hD,IAA/Bo8C,EAAGuF,kBAAkBphE,GAErB,OAAO67D,EAAGuF,kBAAkBphE,GAEhC,IAAIqhE,EACJ,OAAQrhE,GACJ,IAAK,sBACDqhE,EAAYxF,EAAGsF,aAAa,wBAA0BtF,EAAGsF,aAAa,4BAA8BtF,EAAGsF,aAAa,8BACpH,MACJ,IAAK,iCACDE,EAAYxF,EAAGsF,aAAa,mCAAqCtF,EAAGsF,aAAa,uCAAyCtF,EAAGsF,aAAa,yCAC1I,MACJ,IAAK,gCACDE,EAAYxF,EAAGsF,aAAa,kCAAoCtF,EAAGsF,aAAa,sCAAwCtF,EAAGsF,aAAa,wCACxI,MACJ,IAAK,iCACDE,EAAYxF,EAAGsF,aAAa,mCAAqCtF,EAAGsF,aAAa,yCACjF,MACJ,QACIE,EAAYxF,EAAGsF,aAAanhE,GAIpC,OADA67D,EAAGuF,kBAAkBphE,GAAQqhE,EACtBA,CACX,CCkCgB,SAAAC,GAAgBzF,EAA4B0F,EAAqBpiC,GAE7E,IAAIkiC,EACEvrD,EAAIyrD,EAEV,GAAIzrD,IAAM7O,GAAkB,OAAO40D,EAAG2F,cACtC,GnFqDiC,OmFrD7B1rD,EAA6B,OAAO+lD,EAAG4F,uBAC3C,GnFyDiC,OmFzD7B3rD,EAA6B,OAAO+lD,EAAG6F,uBAE3C,GnFeoB,OmFfhB5rD,EAAgB,OAAO+lD,EAAG8F,KAC9B,GnFmBqB,OmFnBjB7rD,EAAiB,OAAO+lD,EAAG+F,MAC/B,GnFuB6B,OmFvBzB9rD,EAAyB,OAAO+lD,EAAGgG,eACvC,GnF2BmB,OmF3Bf/rD,EAAe,OAAO+lD,EAAGiG,IAC7B,GnF+B2B,OmF/BvBhsD,EAAuB,OAAO+lD,EAAGkG,aACrC,GnFmCqB,OmFnCjBjsD,EAAiB,OAAO+lD,EAAGmG,MAE/B,GnFsCyB,OmFtCrBlsD,EACA,OAAO+lD,EAAGoG,WAGd,GnFsDuB,OmFtDnBnsD,EAAmB,OAAO+lD,EAAGqG,MACjC,GAAIpsD,IAAM5O,GAAY,OAAO20D,EAAGsG,KAChC,GnFoE2B,OmFpEvBrsD,EAAuB,OAAO+lD,EAAGuG,UACrC,GnFwEgC,OmFxE5BtsD,EAA4B,OAAO+lD,EAAGwG,gBAC1C,GnF4EuB,OmF5EnBvsD,EAAmB,OAAO+lD,EAAGyG,gBACjC,GnFgF8B,OmFhF1BxsD,EAA0B,OAAO+lD,EAAG0G,cACxC,GnFoFqB,OmFpFjBzsD,EAAiB,OAAO+lD,EAAG2G,IAE/B,GnFmDqB,OmFnDjB1sD,EACA,OAAO+lD,EAAGsG,KAKd,GnFiF4B,OmFjFxBrsD,EAAwB,OAAO+lD,EAAG4G,YACtC,GnFqFoB,OmFrFhB3sD,EAAgB,OAAO+lD,EAAG6G,GAC9B,GnFyF2B,OmFzFvB5sD,EAAuB,OAAO+lD,EAAG8G,WACrC,GnF6F6B,OmF7FzB7sD,EAAyB,OAAO+lD,EAAG+G,aAIvC,GAAI9sD,IAAM3O,IAAwB2O,IAAM1O,IAAyB0O,IAAMzO,IAAyByO,IAAMxO,GAClG,GAAI63B,IAAar2B,GAAc,CAC3B,IAAMu4D,EAAYF,GAAatF,EAAI,sCACnC,GAAkB,OAAdwF,EAMA,YALA,GAAIvrD,IAAM3O,GAAsB,OAAOk6D,EAAUwB,8BACjD,GAAI/sD,IAAM1O,GAAuB,OAAOi6D,EAAUyB,oCAClD,GAAIhtD,IAAMzO,GAAuB,OAAOg6D,EAAU0B,oCAClD,GAAIjtD,IAAMxO,GAAuB,OAAO+5D,EAAU2B,mCAIzD,KAAM,CAEH,GAAkB,QADlB3B,EAAYF,GAAatF,EAAI,kCAOzB,OACH,KANG,GAAI/lD,IAAM3O,GAAsB,OAAOk6D,EAAU4B,6BACjD,GAAIntD,IAAM1O,GAAuB,OAAOi6D,EAAU6B,8BAClD,GAAIptD,IAAMzO,GAAuB,OAAOg6D,EAAU8B,8BAClD,GAAIrtD,IAAMxO,GAAuB,OAAO+5D,EAAU+B,6BAIzD,CAKL,GAAIttD,IAAMvO,IAA2BuO,IAAMtO,IAA2BsO,IAAMrO,IAA4BqO,IAAMpO,GAA0B,CACpI,IAAM25D,EAAYF,GAAatF,EAAI,kCACnC,GAAkB,OAAdwF,EAMA,OAAO,KALP,GAAIvrD,IAAMvO,GAAyB,OAAO85D,EAAUgC,gCACpD,GAAIvtD,IAAMtO,GAAyB,OAAO65D,EAAUiC,gCACpD,GAAIxtD,IAAMrO,GAA0B,OAAO45D,EAAUkC,iCACrD,GAAIztD,IAAMpO,GAA0B,OAAO25D,EAAUmC,gCAI5D,CAID,GAAI1tD,IAAMnO,GAAiB,CACvB,IAAM05D,EAAYF,GAAatF,EAAI,iCACnC,OAAkB,OAAdwF,EACOA,EAAUoC,0BAGpB,IACJ,CAID,GAAI3tD,IAAMlO,IAAmBkO,IAAMjO,GAAsB,CACrD,IAAMw5D,EAAYF,GAAatF,EAAI,gCACnC,GAAkB,OAAdwF,EAIA,YAHA,GAAIvrD,IAAMlO,GAAiB,OAAQu3B,IAAar2B,GAAgBu4D,EAAUqC,sBAAwBrC,EAAUsC,qBAC5G,GAAI7tD,IAAMjO,GAAsB,OAAQs3B,IAAar2B,GAAgBu4D,EAAUuC,iCAAmCvC,EAAUwC,yBAInI,CAID,GAAI/tD,IAAMhO,IAAwBgO,IAAM/N,IAAwB+N,IAAM9N,IAClE8N,IAAM7N,IAAwB6N,IAAM5N,IAAwB4N,IAAM3N,IAClE2N,IAAM1N,IAAwB0N,IAAMzN,IAAwByN,IAAMxN,IAClEwN,IAAMvN,IAAyBuN,IAAMtN,IAAyBsN,IAAMrN,IACpEqN,IAAMpN,IAA0BoN,IAAMnN,GAAwB,CAC9D,IAAM04D,EAAYF,GAAatF,EAAI,iCACnC,GAAkB,OAAdwF,EAgBA,OACH,KAhBG,GAAIvrD,IAAMhO,GAAsB,OAAQq3B,IAAar2B,GAAgBu4D,EAAUyC,qCAAuCzC,EAAU0C,6BAChI,GAAIjuD,IAAM/N,GAAsB,OAAQo3B,IAAar2B,GAAgBu4D,EAAU2C,qCAAuC3C,EAAU4C,6BAChI,GAAInuD,IAAM9N,GAAsB,OAAQm3B,IAAar2B,GAAgBu4D,EAAU6C,qCAAuC7C,EAAU8C,6BAChI,GAAIruD,IAAM7N,GAAsB,OAAQk3B,IAAar2B,GAAgBu4D,EAAU+C,qCAAuC/C,EAAUgD,6BAChI,GAAIvuD,IAAM5N,GAAsB,OAAQi3B,IAAar2B,GAAgBu4D,EAAUiD,qCAAuCjD,EAAUkD,6BAChI,GAAIzuD,IAAM3N,GAAsB,OAAQg3B,IAAar2B,GAAgBu4D,EAAUmD,qCAAuCnD,EAAUoD,6BAChI,GAAI3uD,IAAM1N,GAAsB,OAAQ+2B,IAAar2B,GAAgBu4D,EAAUqD,qCAAuCrD,EAAUsD,6BAChI,GAAI7uD,IAAMzN,GAAsB,OAAQ82B,IAAar2B,GAAgBu4D,EAAUuD,qCAAuCvD,EAAUwD,6BAChI,GAAI/uD,IAAMxN,GAAuB,OAAQ62B,IAAar2B,GAAgBu4D,EAAUyD,sCAAwCzD,EAAU0D,8BAClI,GAAIjvD,IAAMvN,GAAuB,OAAQ42B,IAAar2B,GAAgBu4D,EAAU2D,sCAAwC3D,EAAU4D,8BAClI,GAAInvD,IAAMtN,GAAuB,OAAQ22B,IAAar2B,GAAgBu4D,EAAU6D,sCAAwC7D,EAAU8D,8BAClI,GAAIrvD,IAAMrN,GAAwB,OAAQ02B,IAAar2B,GAAgBu4D,EAAU+D,uCAAyC/D,EAAUgE,+BACpI,GAAIvvD,IAAMpN,GAAwB,OAAQy2B,IAAar2B,GAAgBu4D,EAAUiE,uCAAyCjE,EAAUkE,+BACpI,GAAIzvD,IAAMnN,GAAwB,OAAQw2B,IAAar2B,GAAgBu4D,EAAUmE,uCAAyCnE,EAAUoE,8BAI3I,CAID,GAAI3vD,IAAMlN,GAAkB,CACxB,IAAMy4D,EAAYF,GAAatF,EAAI,gCACnC,GAAkB,OAAdwF,EAKA,OACH,KALG,GAAIvrD,IAAMlN,GACN,OAAQu2B,IAAar2B,GAAgBu4D,EAAUqE,qCAAuCrE,EAAUsE,8BAK3G,CAID,OnF5E8B,OmF4E1B7vD,EACO+lD,EAAG+J,kBAEV9vD,IAAMlP,GACCi1D,EAAGgK,OnFvMiB,OmFyM3B/vD,EACO+lD,EAAG2B,cnF3LwB,OmF6LlC1nD,GnF3KiC,OmF8KjCA,EAFO+lD,EAAGiK,sBAKVhwD,IAAM/O,GACC80D,EAAGkK,sBnFnJsB,OmFqJhCjwD,EACO+lD,EAAGmK,qBAEVlwD,IAAMjP,GACCg1D,EAAGwB,QAEVvnD,IAAMhP,GACC+0D,EAAGoK,OAIlB,IAAA,EC5O6B,WAEnB,IAAAC,EAAU1X,SAAS2X,cAAc,UAIvC,IAAKD,EAAQE,WACT,MAAO,CACHC,UAAW,WAAA,EAEXC,UAAW,WAAA,EAEXC,WAAY,WAAA,GAMKL,EAAQE,WAAW,MACxBn9C,MAiMvB,CApN4B,GCQ7B,IAAM8W,GAAQ,IAAIxW,WAAW,CAAC,EAAG,EAAG,EAAG,IAK1Bi9C,2BAmBT,SAAAA,EAAY1qC,GAWX3gC,KA5BO0gE,QACA3qD,EAAAA,KAAAA,YACAumD,EAAAA,KAAAA,mBACA1sC,UAAI,EAAA5vB,KACJsrE,oBACA5O,EAAAA,KAAAA,6BACA34B,WAAK,EAAA/jC,KACLurE,qBAAe,EAAAvrE,KACf4jC,WACAC,EAAAA,KAAAA,kBACAC,WAAK,EAAA9jC,KACLstC,aACAs1B,EAAAA,KAAAA,eACAj/B,EAAAA,KAAAA,sBACAD,eAAS,EAAA1jC,KACTgkC,cAAQ,EAeZhkC,KAAK0gE,GAAK//B,EAAO+/B,GAEjB1gE,KAAK+V,OAAS4qB,EAAO5qB,QAAU4qB,EAAO+/B,GAAGoB,WACzC9hE,KAAKs8D,OAAS37B,EAAO27B,QAAUvwD,GAC/B/L,KAAK4vB,KAAO+Q,EAAO/Q,MAAQ9jB,GAC3B9L,KAAKsrE,gBAAkB,EACvBtrE,KAAK08D,mBAAqB/7B,EAAO+7B,iBACjC18D,KAAK+jC,QAAUpD,EAAOoD,MACtB/jC,KAAKurE,gBAAkB,EACvBvrE,KAAK4jC,MAAQjD,EAAOiD,OAASn4B,GAC7BzL,KAAK6jC,MAAQlD,EAAOkD,OAASp4B,GAC7BzL,KAAK8jC,MAAQnD,EAAOmD,OAASr4B,GAG7BzL,KAAKstC,QAAU3M,EAAO+/B,GAAG3zB,gBAErBpM,EAAOsD,cACPjkC,KAAKwrE,gBAAgB7qC,EAAOsD,cAGhCjkC,KAAK4iE,WAAY,CACrB,CAAC,IAAAxiE,EAAAirE,EAAAhrE,UA2XAgrE,OA3XAjrE,EAEDorE,gBAAA,SAAgBtrE,GACPA,GAMD0kC,GAAM,GAAKp7B,KAAKwnB,MAAiB,IAAX9wB,EAAM,IAC5B0kC,GAAM,GAAKp7B,KAAKwnB,MAAiB,IAAX9wB,EAAM,IAC5B0kC,GAAM,GAAKp7B,KAAKwnB,MAAiB,IAAX9wB,EAAM,IAC5B0kC,GAAM,GAAKp7B,KAAKwnB,MAAgD,UAA5B1M,IAAbpkB,EAAM,GAAmBA,EAAM,GAAK,MAR3D0kC,GAAM,GAAK,EACXA,GAAM,GAAK,EACXA,GAAM,GAAK,EACXA,GAAM,GAAK,KAOf,IAAM87B,EAAK1gE,KAAK0gE,GAEhB,GADAA,EAAGe,YAAYzhE,KAAK+V,OAAQ/V,KAAKstC,SAC7BttC,KAAK+V,SAAW2qD,EAAG+K,iBASnB,IARA,IAAMjmC,EAAQ,CACVk7B,EAAGgL,4BACHhL,EAAGiL,4BACHjL,EAAGkL,4BACHlL,EAAGmL,4BACHnL,EAAGoL,4BACHpL,EAAGqL,6BAEEtoE,EAAI,EAAG8S,EAAMivB,EAAMriC,OAAQM,EAAI8S,EAAK9S,IACzCi9D,EAAGsL,WAAWxmC,EAAM/hC,GAAI,EAAGi9D,EAAGsG,KAAM,EAAG,EAAG,EAAGtG,EAAGsG,KAAMtG,EAAG2F,cAAezhC,SAG5E87B,EAAGsL,WAAWhsE,KAAK+V,OAAQ,EAAG2qD,EAAGsG,KAAM,EAAG,EAAG,EAAGtG,EAAGsG,KAAMtG,EAAG2F,cAAezhC,IAE/E87B,EAAGe,YAAYzhE,KAAK+V,OAAQ,KAChC,EAAC3V,EAED6rE,UAAA,SAAUl2D,GACN/V,KAAK+V,OAASA,GAAU/V,KAAK0gE,GAAGoB,UACpC,EAAC1hE,EAED8rE,SAAA,SAAS7oC,EAAyBo5B,YAAAA,IAAAA,EAahC,CAAE,GAEA,IAAMiE,EAAK1gE,KAAK0gE,QAEKp8C,IAAjBm4C,EAAMH,SACNt8D,KAAKs8D,OAASG,EAAMH,aAEKh4C,IAAzBm4C,EAAM6O,iBACNtrE,KAAKsrE,eAAiB7O,EAAM6O,qBAEThnD,IAAnBm4C,EAAMz4B,WACNhkC,KAAKgkC,SAAWy4B,EAAMz4B,eAEP1f,IAAfm4C,EAAM7sC,OACN5vB,KAAK4vB,KAAO6sC,EAAM7sC,WAEFtL,IAAhBm4C,EAAM14B,QACN/jC,KAAK+jC,MAAQ04B,EAAM14B,YAEQzf,IAA3Bm4C,EAAMC,mBACN18D,KAAK08D,iBAAmBD,EAAMC,uBAEJp4C,IAA1Bm4C,EAAM8O,kBACNvrE,KAAKurE,gBAAkB9O,EAAM8O,sBAETjnD,IAApBm4C,EAAM94B,YACN3jC,KAAK2jC,UAAY84B,EAAM94B,gBAEHrf,IAApBm4C,EAAM/4B,YACN1jC,KAAK0jC,UAAY+4B,EAAM/4B,gBAEPpf,IAAhBm4C,EAAM74B,QACN5jC,KAAK4jC,MAAQ64B,EAAM74B,YAEHtf,IAAhBm4C,EAAM54B,QACN7jC,KAAK6jC,MAAQ44B,EAAM54B,YAEHvf,IAAhBm4C,EAAM34B,QACN9jC,KAAK8jC,MAAQ24B,EAAM34B,OAKvB48B,EAAGe,YAAYzhE,KAAK+V,OAAQ/V,KAAKstC,SACjCozB,EAAGyL,YAAYzL,EAAG0L,oBAAqBpsE,KAAK+jC,OAC5C28B,EAAGyL,YAAYzL,EAAG2L,+BAAgCrsE,KAAK08D,kBACvDgE,EAAGyL,YAAYzL,EAAG4L,iBAAkBtsE,KAAKurE,iBACzC7K,EAAGyL,YAAYzL,EAAG6L,mCAAoC7L,EAAG8L,MAEzD,IAAM7oC,EAAYwiC,GAAgBzF,EAAI1gE,KAAK2jC,WAC3C+8B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGyB,mBAAoBx+B,GASrD,IAAMD,EAAYyiC,GAAgBzF,EAAI1gE,KAAK0jC,WACvCA,GACAg9B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGuB,mBAAoBv+B,GAGzD,IAAME,EAAQuiC,GAAgBzF,EAAI1gE,KAAK4jC,OACnCA,GACA88B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG0B,eAAgBx+B,GAGrD,IAAMC,EAAQsiC,GAAgBzF,EAAI1gE,KAAK6jC,OACnCA,GACA68B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG4B,eAAgBz+B,GAGrD,IAAM4oC,EAAWtG,GAAgBzF,EAAI1gE,KAAKs8D,OAAQt8D,KAAKgkC,UACjD0oC,EAASvG,GAAgBzF,EAAI1gE,KAAK4vB,MAClC+8C,EAAmBC,GAAkBlM,EAAI1gE,KAAKsrE,eAAgBmB,EAAUC,EAAQ1sE,KAAKgkC,UAAU,GAErG,GAAIhkC,KAAK+V,SAAW2qD,EAAG+K,kBACnB,GAAI98C,GAAQ0U,GAUR,IATA,IAAMwpC,EAASxpC,EACTmC,EAAQ,CACVk7B,EAAGgL,4BACHhL,EAAGiL,4BACHjL,EAAGkL,4BACHlL,EAAGmL,4BACHnL,EAAGoL,4BACHpL,EAAGqL,6BAEEtoE,EAAI,EAAG8S,EAAMivB,EAAMriC,OAAQM,EAAI8S,EAAK9S,IAEzCi9D,EAAGsL,WAAWxmC,EAAM/hC,GAAI,EAAGkpE,EAAkBF,EAAUC,EAAQG,EAAOppE,SAI9Ei9D,EAAGsL,WAAWtL,EAAGoB,WAAY,EAAG6K,EAAkBF,EAAUC,EAAQrpC,GAOxEq9B,EAAGe,YAAYzhE,KAAK+V,OAAQ,KAChC,EAAC3V,EAED0sE,kBAAA,SAAkBnsC,GAEd,IAAM+/B,EAAK1gE,KAAK0gE,GACVrE,EAAU17B,EAAO07B,SAAW,GAC5BsC,EAAStC,EAAQl5D,OACjBs5D,EAAQ97B,EAAO87B,WAIAn4C,IAAjBm4C,EAAMH,SACNt8D,KAAKs8D,OAASG,EAAMH,aAEKh4C,IAAzBm4C,EAAM6O,iBACNtrE,KAAKsrE,eAAiB7O,EAAM6O,qBAEThnD,IAAnBm4C,EAAMz4B,WACNhkC,KAAKgkC,SAAWy4B,EAAMz4B,eAEP1f,IAAfm4C,EAAM7sC,OACN5vB,KAAK4vB,KAAO6sC,EAAM7sC,WAEFtL,IAAhBm4C,EAAM14B,QACN/jC,KAAK+jC,MAAQ04B,EAAM14B,YAEQzf,IAA3Bm4C,EAAMC,mBACN18D,KAAK08D,iBAAmBD,EAAMC,uBAEJp4C,IAA1Bm4C,EAAM8O,kBACNvrE,KAAKurE,gBAAkB9O,EAAM8O,sBAETjnD,IAApBm4C,EAAM94B,YACN3jC,KAAK2jC,UAAY84B,EAAM94B,gBAEHrf,IAApBm4C,EAAM/4B,YACN1jC,KAAK0jC,UAAY+4B,EAAM/4B,gBAEPpf,IAAhBm4C,EAAM74B,QACN5jC,KAAK4jC,MAAQ64B,EAAM74B,YAEHtf,IAAhBm4C,EAAM54B,QACN7jC,KAAK6jC,MAAQ44B,EAAM54B,YAEHvf,IAAhBm4C,EAAM34B,QACN9jC,KAAK8jC,MAAQ24B,EAAM34B,OAGvB48B,EAAGmB,cAAcnB,EAAGqM,SAAW,GAC/BrM,EAAGe,YAAYzhE,KAAK+V,OAAQ/V,KAAKstC,SAEjC,IAAI0/B,EAAe3Q,EAAQl5D,OAAS,EAEpCu9D,EAAGyL,YAAYzL,EAAG0L,oBAAqBpsE,KAAK+jC,OAC5C28B,EAAGyL,YAAYzL,EAAG2L,+BAAgCrsE,KAAK08D,kBACvDgE,EAAGyL,YAAYzL,EAAG4L,iBAAkBtsE,KAAKurE,iBACzC7K,EAAGyL,YAAYzL,EAAG6L,mCAAoC7L,EAAG8L,MAEzD,IAAM5oC,EAAQuiC,GAAgBzF,EAAI1gE,KAAK4jC,OACnCA,GACA88B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG0B,eAAgBx+B,GAGrD,IAAMC,EAAQsiC,GAAgBzF,EAAI1gE,KAAK6jC,OAMvC,GALIA,GACA68B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG4B,eAAgBz+B,GAIjD7jC,KAAK4vB,OAAS8wC,EAAGuM,YAAcjtE,KAAK4vB,OAAS8wC,EAAGwM,iBAAkB,CAClE,IAAMppC,EAAQqiC,GAAgBzF,EAAI1gE,KAAK8jC,OACnCA,GACA48B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGyM,eAAgBrpC,GAErD48B,EAAGsB,cAAchiE,KAAK4vB,KAAM8wC,EAAGyM,eAAgBrpC,EAClD,CAEGkpC,GACAtM,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGyB,mBAAoBiL,GAAe1M,EAAI1gE,KAAK2jC,YAC7E+8B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGuB,mBAAoBmL,GAAe1M,EAAI1gE,KAAK0jC,cAG7Eg9B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGyB,mBAAoBgE,GAAgBzF,EAAI1gE,KAAK2jC,YAC9E+8B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGuB,mBAAoBkE,GAAgBzF,EAAI1gE,KAAK0jC,aAGlF,IAAM+oC,EAAWtG,GAAgBzF,EAAI1gE,KAAKs8D,OAAQt8D,KAAKgkC,UACjD0oC,EAASvG,GAAgBzF,EAAI1gE,KAAK4vB,MAClC+8C,EAAmBC,GAAkBlM,EAAI1gE,KAAKsrE,eAAgBmB,EAAUC,EAAQ1sE,KAAKgkC,UAAU,GAErG08B,EAAG2M,aAAa3M,EAAGoB,WAAYnD,EAAQgO,EAAkBtQ,EAAQ,GAAG94B,MAAO84B,EAAQ,GAAG/4B,QAEtF,IAAK,IAAI7/B,EAAI,EAAG8S,EAAM8lD,EAAQl5D,OAAQM,EAAI8S,EAAK9S,IAAK,CAEhD,IAAM6pE,EAASjR,EAAQ54D,GAEnBzD,KAAKs8D,SAAWvwD,GACC,OAAb0gE,EACA/L,EAAG6M,wBAAwB7M,EAAGoB,WAAYr+D,EAAG,EAAG,EAAG6pE,EAAO/pC,MAAO+pC,EAAOhqC,OAAQmpC,EAAUa,EAAO/gD,MAEjG5hB,QAAQC,KAAK,iFAGjB81D,EAAG8M,cAAc9M,EAAGoB,WAAYr+D,EAAG,EAAG,EAAG6pE,EAAO/pC,MAAO+pC,EAAOhqC,OAAQmpC,EAAUC,EAAQY,EAAO/gD,KAEtG,CAEDm0C,EAAGe,YAAYzhE,KAAK+V,OAAQ,KAChC,EAAC3V,EAEDqtE,SAAA,SAAShR,GAcL,IAAMiE,EAAK1gE,KAAK0gE,GAChBA,EAAGe,YAAYzhE,KAAK+V,OAAQ/V,KAAKstC,SACjCttC,KAAK0tE,aAAajR,GAClBiE,EAAGe,YAAYzhE,KAAK+V,OAAQ,KAChC,EAAC3V,EAEDstE,aAAA,SAAajR,GAcT,IAAMiE,EAAK1gE,KAAK0gE,GAahB,QAZqBp8C,IAAjBm4C,EAAMH,SACNt8D,KAAKs8D,OAASG,EAAMH,aAEKh4C,IAAzBm4C,EAAM6O,iBACNtrE,KAAKsrE,eAAiB7O,EAAM6O,qBAEThnD,IAAnBm4C,EAAMz4B,WACNhkC,KAAKgkC,SAAWy4B,EAAMz4B,eAEP1f,IAAfm4C,EAAM7sC,OACN5vB,KAAK4vB,KAAO6sC,EAAM7sC,WAEEtL,IAApBm4C,EAAM94B,UAAyB,CAC/B,IAAMA,EAAYwiC,GAAgBzF,EAAIjE,EAAM94B,WACxCA,IACA3jC,KAAK2jC,UAAY84B,EAAM94B,UACvB+8B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGyB,mBAAoBx+B,GACjDA,IAAc+8B,EAAGiN,wBAA0BhqC,IAAc+8B,EAAGkK,uBAAyBjnC,IAAc+8B,EAAGiK,uBAAyBhnC,IAAc+8B,EAAGmK,sBAChJnK,EAAGkN,eAAe5tE,KAAK+V,QAGlC,CACD,QAAwBuO,IAApBm4C,EAAM/4B,UAAyB,CAC/B,IAAMA,EAAYyiC,GAAgBzF,EAAIjE,EAAM/4B,WACxCA,IACA1jC,KAAK0jC,UAAY+4B,EAAM/4B,UACvBg9B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAGuB,mBAAoBv+B,GAE5D,CACD,QAAoBpf,IAAhBm4C,EAAM74B,MAAqB,CAC3B,IAAMA,EAAQuiC,GAAgBzF,EAAIjE,EAAM74B,OACpCA,IACA5jC,KAAK4jC,MAAQ64B,EAAM74B,MACnB88B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG0B,eAAgBx+B,GAExD,CACD,QAAoBtf,IAAhBm4C,EAAM54B,MAAqB,CAC3B,IAAMA,EAAQsiC,GAAgBzF,EAAIjE,EAAM54B,OACpCA,IACA7jC,KAAK6jC,MAAQ44B,EAAM54B,MACnB68B,EAAGsB,cAAchiE,KAAK+V,OAAQ2qD,EAAG4B,eAAgBz+B,GAExD,CACL,EAACzjC,EAED+nB,KAAA,SAAKy5C,GACD,IAAK5hE,KAAK4iE,UACN,SAEJ,GAAI5iE,KAAKstC,QAAS,CACd,IAAMozB,EAAK1gE,KAAK0gE,GAIhB,OAFAA,EAAGmB,cAAcnB,EAAE,UAAWkB,IAC9BlB,EAAGe,YAAYzhE,KAAK+V,OAAQ/V,KAAKstC,UAC1B,CACV,CACD,QACJ,EAACltC,EAEDmiE,OAAA,SAAOX,GACH,GAAK5hE,KAAK4iE,WAGN5iE,KAAKstC,QAAS,CACd,IAAMozB,EAAK1gE,KAAK0gE,GAEhBA,EAAGmB,cAAcnB,EAAE,UAAWkB,IAC9BlB,EAAGe,YAAYzhE,KAAK+V,OAAQ,KAC/B,CACL,EAAC3V,EAED6K,QAAA,WACSjL,KAAK4iE,WAGN5iE,KAAKstC,UACLttC,KAAK0gE,GAAG8B,cAAcxiE,KAAKstC,SAE3BttC,KAAKstC,QAAU,KAEvB,EAAC+9B,CAAA,IAGL,SAASuB,GACLlM,EACAmN,EACApB,EACAC,EACA1oC,EACA8pC,GACA,YADAA,IAAAA,GAAiB,GACU,OAAvBD,EAA6B,CAE7B,QAA+BvpD,IAA3Bo8C,EAAGmN,GAEH,OAAOnN,EAAGmN,GAEdljE,QAAQC,KAAK,sDAAyDijE,EAAqB,IAC9F,CACD,IAAIvC,EAAiBmB,EAuBrB,OAtBIA,IAAa/L,EAAG2G,MACZqF,IAAWhM,EAAGmG,QAAOyE,EAAiB5K,EAAGqN,MACzCrB,IAAWhM,EAAGoG,aAAYwE,EAAiB5K,EAAGsN,MAC9CtB,IAAWhM,EAAG2F,gBAAeiF,EAAiB5K,EAAGuN,KAErDxB,IAAa/L,EAAG6G,KACZmF,IAAWhM,EAAGmG,QAAOyE,EAAiB5K,EAAGwN,OACzCxB,IAAWhM,EAAGoG,aAAYwE,EAAiB5K,EAAGyN,OAC9CzB,IAAWhM,EAAG2F,gBAAeiF,EAAiB5K,EAAG0N,MAErD3B,IAAa/L,EAAGsG,OACZ0F,IAAWhM,EAAGmG,QAAOyE,EAAiB5K,EAAG2N,SACzC3B,IAAWhM,EAAGoG,aAAYwE,EAAiB5K,EAAG4N,SAC9C5B,IAAWhM,EAAG2F,gBAAeiF,EAAkBtnC,IAAar2B,KAAmC,IAAnBmgE,EAA4BpN,EAAG6N,aAAe7N,EAAG8N,OAC7H9B,IAAWhM,EAAG4F,yBAAwBgF,EAAiB5K,EAAG+N,OAC1D/B,IAAWhM,EAAG6F,yBAAwB+E,EAAiB5K,EAAGgO,UAE9DpD,IAAmB5K,EAAGsN,MAAQ1C,IAAmB5K,EAAGqN,MACpDzC,IAAmB5K,EAAGyN,OAAS7C,IAAmB5K,EAAGwN,OACrD5C,IAAmB5K,EAAG4N,SAAWhD,IAAmB5K,EAAG2N,SACvDrI,GAAatF,EAAI,0BAEd4K,CACX,CAEA,SAAS8B,GAAe1M,EAA4BnuD,GAChD,OAAIA,IAAM7G,IrFzc4B,OqFycX6G,GrFncU,OqFmc0BA,EACpDmuD,EAAGwB,QAEPxB,EAAGoK,MAEd,CCpfA,IAAM6D,GAEF,CACAC,OAAO,EACPC,qBAAsB,IAGpBnmB,GAAS2K,SAAS2X,cAAc,UAEtC,GAAItiB,GAAQ,CAGR,IAAMgY,GAA6BhY,GAAOuiB,WAAW,SAAU,CAAC6D,WAAW,IAE3EH,GAAWC,QAAUlO,GAEjBiO,GAAWC,QAEXD,GAAWI,UAAYrO,GAAGsO,uBAAuBF,UAIzCH,GAAWM,uBAHfvO,GAAGwO,yBAECxO,GAAGwO,yBAAyBxO,GAAG4D,gBAAiB5D,GAAGyO,YAAY1nC,UAAY,EACvC,QAEhCi5B,GAAGwO,yBAAyBxO,GAAG4D,gBAAiB5D,GAAG0O,cAAc3nC,UAAY,EAC7B,UAEA,OAIpB,UAExCknC,GAAWU,kBAAoB3O,GAAG4O,aAAa5O,GAAG6O,YAClDZ,GAAWa,iBAAmB9O,GAAG4O,aAAa5O,GAAG8O,kBACjDb,GAAWc,kBAAoB/O,GAAG4O,aAAa5O,GAAGgP,2BAClDf,GAAWgB,sBAAwBjP,GAAG4O,aAAa5O,GAAGiP,uBACtDhB,GAAWiB,kBAAoBlP,GAAG4O,aAAa5O,GAAGmP,kCAClDlB,GAAWmB,wBAA0BpP,GAAG4O,aAAa5O,GAAGoP,yBACxDnB,GAAWoB,mBAAqBrP,GAAG4O,aAAa5O,GAAGqP,oBACnDpB,GAAWqB,2BAA6BtP,GAAG4O,aAAa5O,GAAGsP,4BAC3DrB,GAAWsB,6BAA+BvP,GAAG4O,aAAa5O,GAAGuP,8BAC7DtB,GAAWuB,oBAAsBxP,GAAG4O,aAAa5O,GAAGwP,qBAEpDxP,GAAGyP,yBAAyBxnD,QAAQ,SAAUynD,GAC1CzB,GAAWE,qBAAqBuB,IAAO,CAC3C,GACAzB,GAAW0B,uBAAyB1B,GAAWE,qBAA0C,oBAEhG,CC5CD,IAAayB,gBAAa,WAoHtB,SAAAA,EAAYnuB,EAAgBh0B,EAAYuyC,GAA0B1gE,KA/G3DmiD,YAAM,EAAAniD,KAKNmuB,UAAI,EAAAnuB,KAKJ0gE,QAAE,EAAA1gE,KAEFuwE,2BAAqB,EAAAvwE,KAWrBwwE,gBAAU,EAAAxwE,KAKVywE,aAKArqB,EAAAA,KAAAA,eAMAsqB,EAAAA,KAAAA,eAKAC,EAAAA,KAAAA,wBAKAlP,iBAAW,EAAAzhE,KAKX4wE,gBAAU,EAAA5wE,KAQV6wE,sBAAgB,EAAA7wE,KAKhB8wE,sBAQAC,EAAAA,KAAAA,oBAKAC,EAAAA,KAAAA,oBAKAC,EAAAA,KAAAA,eAKAC,EAAAA,KAAAA,cAKAC,EAAAA,KAAAA,mBAIAzuB,EAAAA,KAAAA,eAKA0uB,EAAAA,KAAAA,0BAKAvuC,sBAAgB,EAGnB7iC,KAAKmiD,OAASA,EACdniD,KAAKmuB,KAAOA,EACZnuB,KAAK0gE,GAAKA,EACV1gE,KAAKwhC,OACT,CA8BC,OA9BA8uC,EAAAjwE,UAKDmhC,MAAA,WACIxhC,KAAKoxE,eAAiB,EACtBpxE,KAAKwwE,YAAa,EAClBxwE,KAAKywE,SAAU,EACfzwE,KAAKomD,WAAY,EACjBpmD,KAAK0wE,WAAY,EACjB1wE,KAAK2wE,YAAc,EACnB3wE,KAAK6wE,iBAAmB,KACxB7wE,KAAK8wE,iBAAmB,KACxB9wE,KAAK+wE,eAAiB,KACtB/wE,KAAKgxE,eAAiB,KACtBhxE,KAAKixE,UAAY,IACjBjxE,KAAKkxE,SAAW,IAChBlxE,KAAKmxE,eAAgB,EACrBnxE,KAAK0iD,UAAY,EACjB1iD,KAAK6iC,iBAAmB,IAC5B,EAAC3hC,EAAAovE,EAAA,CAAA,CAAAnvE,IAAA,kBAAAC,IAKD,WACI,IAAMuvE,EAAc3wE,KAAK2wE,YAEzB,OADA3wE,KAAK2wE,aAAe3wE,KAAK2wE,YAAc,GAAKhC,GAAWiB,kBAChDe,CACX,KAACL,CAAA,CAvJqB,GCJbe,GAAgB,CAIzBC,aAAc,EAIdC,aAAc,EACdC,kBAAmB,EAInBC,uBAAwB,EACxBC,oBAAqB,EACrBC,kBAAmB,EAInBC,mBAAoB,EACpBC,wBAAyB,EACzBC,kBAAmB,EACnBC,eAAgB,EAChBC,aAAc,GAIdC,KAAM,ICtBJC,GAAW/iE,KAAagjE,gBAAAxyE,EAAA,QAAAyyE,gBAAAzyE,aAAA0yE,gBAAA1yE,EAAA,eAAA2yE,gBAAA3yE,EAAA4yE,YAAAA,gBAAA5yE,EAAA,YAAA6yE,gBAAA7yE,EAAA8yE,SAAAA,gBAAA9yE,iBAAA+yE,gBAAA/yE,EAAAgzE,YAAAA,gBAAAhzE,EAAA,QAKRizE,gBAAa,WA4D/B,SAAAA,EAAsBC,GAA4B/yE,OAAAC,eAAAC,KAAA2yE,GAAA,CAAAzyE,MAAA4yE,KAAAhzE,OAAAC,eAAA2yE,KAAAA,IAAAxyE,MAAA6yE,KAAAjzE,OAAAC,eAAA0yE,KAAAA,IAAAvyE,MAAA8yE,KAAAlzE,OAAAC,eAAAyyE,KAAAA,IAAAtyE,MAAA+yE,KAvDlDtQ,KAAAA,mBAEUkQ,mBAAa,EAAA/yE,OAAAC,eAAAC,KAAAmyE,GAAAlyE,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAqyE,KAAAA,GAAAnyE,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAAsyE,GAAA,CAAApyE,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,oBAAAuyE,GAAA,CAAAryE,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,oBAAAwyE,GAAA,CAAAtyE,UAAAC,EAAAA,eAsDnBF,KAAK6yE,cAAgBA,EACrB1yE,EAAIH,KAAAqyE,IAAAA,KAAgB,EACpBlyE,EAAAH,KAAIwyE,IAAAA,KACR,CAAC,IAAApyE,EAAAwyE,EAAAvyE,UAinBA,OAjnBAD,EAuHD8yE,YAAA,WACI/yE,OAAIkyE,IAAAA,KAAgB,CACxB,EAACjyE,EAkBD+yE,KAAA,SAAK/0B,GAOD,GALIj+C,OAAIiyE,IAAAA,MAAajyE,EAACH,KAAI0yE,IAAAA,QACtBvyE,EAAAH,KAAIoyE,IAAAA,IAAUnnE,UACd9K,EAAAH,KAAIoyE,IAAAA,IAAY,OAGhBjyE,EAACH,KAAIoyE,IAAAA,IAAW,CAEhB,GADAjyE,EAAAH,KAAIwyE,IAAAA,MACAxyE,KAAK2iE,OACL,OAEJ3iE,KAAK6yE,cAAczB,eAAiB,CACvC,CAED,IAAMgC,EAAch1B,EAAMg1B,YACpBC,EAAOlzE,EAAGH,KAAIoyE,IAAAA,IACdS,EAAgB7yE,KAAK6yE,cACrBjC,EAAaiC,EAAcjC,WAC3BlQ,EAAK1gE,KAAK6yE,cAAcnS,GACxBvyC,EAAOnuB,KAAK6yE,cAAc1kD,KAC1B81C,EAAQ9jE,EAAGH,KAAIsyE,IAAAA,IACftO,EAAQ7jE,EAAGH,KAAIuyE,IAAAA,IA0BrB,GAvBIM,EAAczB,gBAAkBiC,EAAQ/oE,KAExCuoE,EAAczB,cAAgBiC,EAAQ/oE,GACtCnK,EAAIH,KAAA2yE,IAAAA,OAGJ1O,EAAS2M,YACTlQ,EAAGgD,UAAUO,EAAS2M,WAAYA,GAQlC3M,EAAS9zB,YACTuwB,EAAG4S,iBAAiBrP,EAAS9zB,YAAY,EAAiChiB,EAAKq0B,OAAOrS,YAGtF8zB,EAASsP,aACT7S,EAAG4S,iBAAiBrP,EAASsP,aAAa,EAAiCn1B,EAAMlS,cAAcqnC,aAG/FtP,EAASr/B,MACT,GAAIgsC,IAAeS,GAAcM,kBAAmB,CAChD,IAAM32B,EAAW7sB,EAAKikC,aAChBrM,EAAY/K,EAAS+K,UAE3B2a,EAAG8S,UAAUvP,EAASr/B,MAAOmhB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GADjD/K,EAASgL,UAG9B,SAAU4qB,IAAeS,GAAcI,uBAAwB,CAC5D,IAAMz2B,EAAW7sB,EAAKkkC,kBAChBtM,EAAY/K,EAAS+K,UAE3B2a,EAAG8S,UAAUvP,EAASr/B,MAAOmhB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GADjD/K,EAASgL,UAG9B,MAAM,GAAI4qB,IAAeS,GAAcK,oBAAqB,CACzD,IAAM12B,EAAW7sB,EAAKmkC,iBAChBvM,EAAY/K,EAAS+K,UAE3B2a,EAAG8S,UAAUvP,EAASr/B,MAAOmhB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GADjD/K,EAASgL,UAG9B,MACG0a,EAAG+S,WAAWxP,EAASr/B,MAAO,IAAIh0B,aAAa,CAAC,EAAG,EAAG,KA6B1DozD,EAAS0P,cAETN,EAAYO,eAAeD,aAAajS,YAAY4R,EAASrP,EAAS0P,aAAcb,EAAce,iBAElG5P,EAAStzC,WAET0iD,EAAYO,eAAejjD,UAAU+wC,YAAY4R,EAASrP,EAAStzC,UAAWmiD,EAAce,iBAE5F5P,EAAS6P,kBAETT,EAAYO,eAAeE,iBAAiBpS,YAAY4R,EAASrP,EAAS6P,iBAAkBhB,EAAce,iBAE1G5P,EAAS8P,oBAETV,EAAYO,eAAeG,mBAAmBrS,YAAY4R,EAASrP,EAAS8P,mBAAoBjB,EAAce,iBAE9G5P,EAAS+P,oBACLX,EAAYY,gBAAkB,IAE9BZ,EAAYO,eAAeM,wBAAwBxS,YAAY4R,EAASrP,EAAS+P,kBAAmBlB,EAAce,iBAElHR,EAAYO,eAAeO,cAAczS,YAAY4R,EAASrP,EAAS5sC,QAASy7C,EAAce,iBAC9FlT,EAAGyT,WAAWzT,EAAG0T,UAAW,EAAGhB,EAAYY,kBAE3CZ,EAAYiB,iBAAmB,IAE/BjB,EAAYO,eAAeW,yBAAyB7S,YAAY4R,EAASrP,EAAS+P,kBAAmBlB,EAAce,iBAEnHR,EAAYO,eAAeY,eAAe9S,YAAY4R,EAASrP,EAAS5sC,QAASy7C,EAAce,iBAC/FlT,EAAGyT,WAAWzT,EAAG0T,UAAW,EAAGhB,EAAYiB,mBAE3CjB,EAAYoB,iBAAmB,IAE/BpB,EAAYO,eAAec,yBAAyBhT,YAAY4R,EAASrP,EAAS+P,kBAAmBlB,EAAce,iBAEnHR,EAAYO,eAAee,eAAejT,YAAY4R,EAASrP,EAAS5sC,QAASy7C,EAAce,iBAC/FlT,EAAGyT,WAAWzT,EAAG0T,UAAW,EAAGhB,EAAYoB,oBAG/CxQ,EAAS2Q,cACT3Q,EAAS2Q,aAAalT,YAAY2R,EAAYwB,mBAAmBjyC,aAAakyC,UAAWhC,EAAce,iBAEvG5P,EAAS8Q,kBACT9Q,EAAS8Q,iBAAiBrT,YAAY2R,EAAYwB,mBAAmBhyC,yBAAyBiyC,UAAWhC,EAAce,iBAEvH5P,EAAS+Q,aACT/Q,EAAS+Q,YAAYtT,YAAY2R,EAAYwB,mBAAmB9xC,gBAAgB+xC,UAAWhC,EAAce,iBAEzG5P,EAASgR,cACThR,EAASgR,aAAavT,YAAY2R,EAAYwB,mBAAmB/xC,iBAAiBgyC,UAAWhC,EAAce,gBAEnH,EAACxzE,EAoVD6K,QAAA,WACI9K,EAAIH,KAAIoyE,IAAAA,KACJjyE,OAAIiyE,IAAAA,IAAUnnE,UAElB9K,OAAIiyE,IAAAA,IAAY,IACpB,EAAClxE,EAAA0xE,EAAA,CAAA,CAAAzxE,IAAAC,aAAAA,IAzQD,WACI,MAeJ,8kBAAA,IAACD,IAAA,sBAAAC,IAED,WACI,MAQJ,0cAAA,GAACD,CAAAA,0BAAAC,IAED,WACI,OAAIpB,KAAK6yE,cAAc1kD,KAAK6jC,wRAQjB,EAEf,GAAC7wD,CAAAA,6BAAAC,IAED,WACI,MAAO,EACX,GAAC,CAAAD,IAAA,yBAAAC,IAED,WACI,OAAIpB,KAAK6yE,cAAc1kD,KAAK6jC,8BAG3B,6GACU,EAEf,GAAC,CAAA7wD,IAAA,iBAAAC,IAED,WACI,OAAcpB,KAACi1E,WAAU,aACvBj1E,KAAKk1E,cACL,aAAAl1E,KAAKm1E,qBAAoB,aACzBn1E,KAAKo1E,cACL,aAAAp1E,KAAKq1E,gEAEDr1E,KAAKs1E,uBACL,iBAAAt1E,KAAKu1E,aAAY,iBACjBv1E,KAAKw1E,sBAAqB,aAEpC,GAACr0E,CAAAA,IAAAC,aAAAA,IAED,WACI,MAQJ,0NAAA,GAACD,CAAAA,oBAAAC,IAED,WACI,MAaJ,upBAAA,GAACD,CAAAA,IAAAC,gBAAAA,IAED,WACI,IAAM+sB,EAAOnuB,KAAK6yE,cAAc1kD,KAC1B+U,EAAM,GACZA,EAAI9/B,KAAK,8BACT,IAAK,IAAIK,EAAI,EAAG8S,EAAM4X,EAAK0kC,WAAW1vD,OAAQM,EAAI8S,EAAK9S,IAAK,CACxD,IAAMgyD,EAAatnC,EAAK0kC,WAAWpvD,GAChB,YAAfgyD,EAAM7lC,OAGVsT,EAAI9/B,KAAK,0BAA4BK,EAAI,KACtB,QAAfgyD,EAAM7lC,MACNsT,EAAI9/B,KAAK,wBAA0BK,EAAI,KAExB,UAAfgyD,EAAM7lC,MACNsT,EAAI9/B,KAAK,wBAA0BK,EAAI,KAExB,SAAfgyD,EAAM7lC,OACNsT,EAAI9/B,KAAK,wBAA0BK,EAAI,KACvCy/B,EAAI9/B,KAAK,wBAA0BK,EAAI,MAE9C,CACD,OAAOy/B,EAAI/V,KAAK,KACpB,IAAChsB,IAAA,sBAAAC,IAED,WACI,OAAIpB,KAAK6yE,cAAc1kD,KAAK6jC,8BAI3B,qHACU,EAEf,GAAC,CAAA7wD,IAAA,wBAAAC,IAED,WACI,OAAIpB,KAAK6yE,cAAc1kD,KAAK6jC,8BACjB,kGAEA,EAEf,GAAC,CAAA7wD,IAAAC,eAAAA,IAED,WACI,IAAM8hC,EAAM,GACZA,EAAI9/B,KAAK,qDACT8/B,EAAI9/B,KAAK,wDACT8/B,EAAI9/B,KAAK,gLACT8/B,EAAI9/B,KAAK,0EACT8/B,EAAI9/B,KAAK,8CACT8/B,EAAI9/B,KAAK,6CACT8/B,EAAI9/B,KAAK,2BAET,IAAK,IAAIK,EAAI,EAAG8S,EAAMvW,KAAK6yE,cAAc1kD,KAAK0kC,WAAW1vD,OAAQM,EAAI8S,EAAK9S,IAAK,CAC3E,IAAMgyD,EAAaz1D,KAAK6yE,cAAc1kD,KAAK0kC,WAAWpvD,GACtD,GAAmB,YAAfgyD,EAAM7lC,KAAV,CAGA,GAAmB,QAAf6lC,EAAM7lC,KAEFsT,EAAI9/B,KADY,SAAhBqyD,EAAMI,MACG,oCAAsCpyD,EAAI,KAE1C,uDAAyDA,EAAI,sBAEvE,GAAmB,UAAfgyD,EAAM7lC,KAETsT,EAAI9/B,KADY,SAAhBqyD,EAAMI,MACG,qCAAuCpyD,EAAI,wBAE3C,wDAA0DA,EAAI,qBAEpEgyD,IAAe,SAAfA,EAAM7lC,KAOb,SALIsT,EAAI9/B,KADY,SAAhBqyD,EAAMI,MACG,oCAAsCpyD,EAAI,KAE1C,uDAAyDA,EAAI,gBAI7E,CACDy/B,EAAI9/B,KAAK,0DACT8/B,EAAI9/B,KAAK,6CAA+CK,EAAI,oBAAsBA,EAAI,OAvBrF,CAwBJ,CAID,OAHAy/B,EAAI9/B,KAAK,8FACT8/B,EAAI9/B,KAAK,kHAEF8/B,EAAI/V,KAAK,KACpB,GAAC,CAAAhsB,IAAAC,gBAAAA,IAED,WACI,OAAIpB,KAAK6yE,cAAc1kD,KAAK8jC,IAAInpC,mkBAY/B,kCACL,GAAC3nB,CAAAA,IAAAC,aAAAA,IAED,WACI,wCACJ,GAAC,CAAAD,IAAAC,uBAAAA,IAGD,WACI,IAAM8hC,EAAM,GACZA,EAAI9/B,KAAI,iEAER,IAAK,IAAIK,EAAI,EAAG8S,EAAMvW,KAAK6yE,cAAc1kD,KAAKwkC,kBAAkBxvD,OAAQM,EAAI8S,EAAK9S,IAC7Ey/B,EAAI9/B,uCAAuCK,EAAC,wDACJA,EACAA,wDAAAA,EAC3C,KACD,OAAOy/B,EAAI/V,KAAK,KACpB,IAAChsB,IAAA,0BAAAC,IAED,WACI,IAAM8hC,EAAM,GACZA,EAAI9/B,KAAkC,8BACtC,IAAK,IAAIK,EAAI,EAAG8S,EAAMvW,KAAK6yE,cAAc1kD,KAAK0kC,WAAW1vD,OAAQM,EAAI8S,EAAK9S,IAAK,CAC3E,IAAMgyD,EAAQz1D,KAAK6yE,cAAc1kD,KAAK0kC,WAAWpvD,GAC7CgyD,aAAiByC,KAGrBh1B,EAAI9/B,KAAI,0BAA2BK,EAAK,KACpCgyD,aAAiB0C,IACjBj1B,EAAI9/B,6BAA6BK,EAAC,KAElCgyD,aAAiB2C,IACjBl1B,EAAI9/B,KAAI,wBAAyBK,EAAC,KAEzC,CACD,OAAOy/B,EAAI/V,KAAK,KACpB,GAAChsB,CAAAA,6BAAAC,IAED,WACI,IAAM8hC,EAAM,GAEZ,GADkBljC,KAAK6yE,cAAc1kD,KAAKwkC,kBAAkBxvD,OAAS,EACvD,CACV+/B,EAAI9/B,KAE6B,sIACjC,IAAK,IAAIK,EAAI,EAAG8S,EAAMvW,KAAK6yE,cAAc1kD,KAAKwkC,kBAAkBxvD,OAAQM,EAAI8S,EAAK9S,IAC7Ey/B,EAAI9/B,KAAI,yBAA0BK,EAAC,wEACeA,EAAC,4CAA4CA,EAElG,qDACDy/B,EAAI9/B,4GAIP,CACD,OAAO8/B,EAAI/V,KAAK,KACpB,GAAC,CAAAhsB,IAAA,kBAAAC,IAED,WACI,IAAM8hC,EAAM,GAEZ,OADAA,EAAI9/B,KAAK,IACF8/B,EAAI/V,KAAK,KACpB,KAACylD,CAAA,CAjrB8B,GAyrBlC,SAAAK,KArnBO,IAAM9kD,EAAOnuB,KAAK6yE,cAAc1kD,KAC1BuyC,EAAK1gE,KAAK6yE,cAAcnS,GAI9B,GAFAvgE,EAAAH,KAAIoyE,IAAAA,IAAY,IAAIxO,GAAUlD,EAAEvgE,EAAEH,KAAIyyE,IAAAA,OAElCtyE,EAAIH,KAAAoyE,IAAAA,IAAUzP,OACd3iE,KAAK2iE,OAASxiE,EAAAH,KAAIoyE,IAAAA,IAAUzP,WADhC,CAKA,IAAM0Q,EAAOlzE,EAAGH,KAAIoyE,IAAAA,IAEpBjyE,EAAAH,KAAIsyE,IAAAA,IAAa,CACb1B,WAAYyC,EAAQ1N,YAAY,cAChCz1B,WAAYmjC,EAAQ1N,YAAY,cAChCx1B,WAAYkjC,EAAQ1N,YAAY,cAChC4N,YAAaF,EAAQ1N,YAAY,eACjC1T,IAAKohB,EAAQ1N,YAAY,OACzB8P,cAAepC,EAAQ1N,YAAY,iBACnC+P,YAAarC,EAAQ1N,YAAY,eACjCpf,UAAW8sB,EAAQ1N,YAAY,aAC/BgQ,gBAAiBtC,EAAQ1N,YAAY,mBACrCiQ,yBAA0BvC,EAAQ1N,YAAY,4BAC9CsL,UAAWoC,EAAQ1N,YAAY,aAC/BuL,SAAUmC,EAAQ1N,YAAY,YAC9BwL,cAAekC,EAAQ1N,YAAY,iBACnC/gC,MAAOyuC,EAAQ1N,YAAY,SAC3BkQ,aAAcxC,EAAQ1N,YAAY,gBAClC/S,OAAQ,GACRF,cAAe,IAMnB,IAHA,IAAMuR,EAAQ9jE,EAAGH,KAAIsyE,IAAAA,IAEf1f,EAASzkC,EAAK0kC,WACXpvD,EAAI,EAAG8S,EAAMq8C,EAAOzvD,OAAQM,EAAI8S,EAAK9S,IAE1C,OADmBmvD,EAAOnvD,GACZmsB,MACV,IAAK,MACDq0C,EAASrR,OAAOxvD,KAAK,CACjBwhC,MAAOyuC,EAAQ1N,YAAY,aAAeliE,GAC1Cif,IAAK2wD,EAAQ1N,YAAY,WAAaliE,KAE1C,MACJ,IAAK,QACDwgE,EAASrR,OAAOxvD,KAAK,CACjBwhC,MAAOyuC,EAAQ1N,YAAY,aAAeliE,GAC1CqS,IAAKu9D,EAAQ1N,YAAY,WAAaliE,GACtC40D,YAAagb,EAAQ1N,YAAY,mBAAqBliE,KAE1D,MACJ,IAAK,OACDwgE,EAASrR,OAAOxvD,KAAK,CACjBwhC,MAAOyuC,EAAQ1N,YAAY,aAAeliE,GAC1CqS,IAAKu9D,EAAQ1N,YAAY,WAAaliE,GACtCif,IAAK2wD,EAAQ1N,YAAY,WAAaliE,GACtC40D,YAAagb,EAAQ1N,YAAY,mBAAqBliE,KAMtE,IAAK,IAAIA,EAAI,EAAG8S,EAAM4X,EAAKwkC,kBAAkBxvD,OAAQM,EAAI8S,EAAK9S,IAC1DwgE,EAASvR,cAActvD,KAAK,CACxB+8C,OAAQkzB,EAAQ1N,YAAY,qBAAuBliE,GACnDqS,IAAKu9D,EAAQ1N,YAAY,kBAAoBliE,GAC7Cif,IAAK2wD,EAAQ1N,YAAY,kBAAoBliE,KAIrDtD,EAAIH,KAAAuyE,IAAAA,IAAa,CACbmB,aAAcL,EAAQxN,WAAW,gBACjCn1C,UAAW2iD,EAAQxN,WAAW,aAC9BzuC,QAASi8C,EAAQxN,WAAW,WAC5BplC,YAAa4yC,EAAQxN,WAAW,eAChCiO,mBAAoBT,EAAQxN,WAAW,sBACvCgO,iBAAkBR,EAAQxN,WAAW,oBACrCiQ,eAAgBzC,EAAQxN,WAAW,kBACnCkO,kBAAmBV,EAAQxN,WAAW,wBACtCkQ,aAAc1C,EAAQxN,WAAW,gBACjC8O,aAActB,EAAQxN,WAAW,gBACjCiP,iBAAkBzB,EAAQxN,WAAW,oBACrCkP,YAAa1B,EAAQxN,WAAW,eAChCmQ,UAAW3C,EAAQxN,WAAW,aAC9BmP,aAAc3B,EAAQxN,WAAW,iBAGrC1lE,EAAAH,KAAImyE,IAAAA,IAASnyE,KAAKi2E,SA/EjB,CAgFL,CAAC,SAAAjD,KAGG,MAAO,CACH3O,OAAQrkE,KAAKk2E,oBACb3R,SAAUvkE,KAAKm2E,sBAEvB,CAAC,SAAApD,KA4BG,OAAI5yE,EAACH,KAAIqyE,IAAAA,MAGTlyE,EAAAH,KAAIqyE,IAAAA,KAAgB,EACblyE,EAAAH,KAAImyE,IAAAA,MAAWnyE,KAAKi2E,UAC/B,CAAC,SAAAnD,KA+JG,IAAM3kD,EAAOnuB,KAAK6yE,cAAc1kD,KAC1BuyC,EAAK1gE,KAAK6yE,cAAcnS,GACxBuD,EAAQ9jE,EAAGH,KAAIsyE,IAAAA,IACf8D,EAAUjoD,EAAKq0B,OAAO4zB,QAG5Bj2E,EAAIH,KAAAoyE,IAAAA,IAAUjqD,OAIV87C,EAAS4R,cACTnV,EAAG+S,WAAWxP,EAAS4R,aAAc1nD,EAAK6nC,+BAE9C,IAAK,IAAIvyD,EAAI,EAAG8S,EAAM0tD,EAASrR,OAAOzvD,OAAQM,EAAI8S,EAAK9S,IAAK,CACxD,IAAM4yE,EAA0BpS,EAASrR,OAAOnvD,GAC1CgyD,EAAQtnC,EAAK0kC,WAAWpvD,GAC1B4yE,EAAwBzxC,OACxB87B,EAAG8S,UAAU6C,EAAwBzxC,MAAO6wB,EAAM7wB,MAAM,GAAI6wB,EAAM7wB,MAAM,GAAI6wB,EAAM7wB,MAAM,GAAI6wB,EAAM9T,WAElG00B,EAAwB3zD,KACxBg+C,EAAG4V,UAAUD,EAAwB3zD,IAAK+yC,EAAM/yC,IAAI,GAAI+yC,EAAM/yC,IAAI,GAAI+yC,EAAM/yC,IAAI,IAEhF2zD,EAAwBvgE,KACxB4qD,EAAG4V,UAAUD,EAAwBvgE,IAAK2/C,EAAM3/C,IAAI,GAAI2/C,EAAM3/C,IAAI,GAAI2/C,EAAM3/C,IAAI,IAEhFugE,EAAwBhe,aACxBqI,EAAG6V,UAAUF,EAAwBhe,YAAa5C,EAAM4C,YAE/D,CACD,GAAI4L,EAAShS,IAAK,CACd,IAAMA,EAAM9jC,EAAK8jC,IAEjB,GADmBA,EAAIukB,SACP,CACZ,IACMC,EAAiB/V,EAAGgW,oBAC1BxE,GAAS,GAFaxR,EAAGiW,mBAGzBzE,GAAS,GAAKuE,EACdvE,GAAS,GAAKjgB,EAAIjQ,YAClBkwB,GAAS,GAAKjgB,EAAI/P,YAElBwe,EAAG+S,WAAWxP,EAAShS,IAAKigB,GAE/B,CACJ,CAiBD,GAhBIjO,EAASyR,aACThV,EAAG6V,UAAUtS,EAASyR,YAAavnD,EAAKunD,aAExCzR,EAAS1d,WACTma,EAAG6V,UAAUtS,EAAS1d,UAAWp4B,EAAKqkC,eAAejM,WAErD0d,EAAS0R,iBACTjV,EAAG6V,UAAUtS,EAAS0R,gBAAkBxnD,EAAKq0B,OAAOD,iBAAmBn0C,GAAuB,EAAOsyD,EAAGgW,qBAAuB,EAAIltE,KAAKkK,IAAI,GAAMya,EAAKq0B,OAAO+G,sBAAsBjC,IAAM99C,KAAKo+C,GAAK,OAEpMqc,EAASgN,YACTvQ,EAAG6V,UAAUtS,EAASgN,UAAWjxE,KAAK6yE,cAAc5B,WACpDvQ,EAAG6V,UAAUtS,EAASiN,SAAUlxE,KAAK6yE,cAAc3B,WAEnDjN,EAASkN,eACTzQ,EAAGgD,UAAUO,EAASkN,cAAenxE,KAAK6yE,cAAc1B,cAAgB,EAAI,GAE5ElN,EAASwR,cAAe,CACxB,IAAMA,EAAgB,GAAOjsE,KAAKkB,IAAK0rE,EAAkC3hE,IAAM,GAAOjL,KAAKotE,KAC3FlW,EAAG6V,UAAUtS,EAASwR,cAAeA,EACxC,CACL,CC9aJ,OAAaoB,gBAA2B,SAAAC,GAEpC,SAAAD,EAAYhE,GAA4B,OACpCiE,EAAA9yE,KAAM6uE,KAAAA,IACV7yE,IAAA,CAJoCuL,EAAAsrE,EAAAC,GAInC,IAAA12E,EAAAy2E,EAAAx2E,UAiJA,OAjJAD,EAED61E,QAAA,WACI,OAAcj2E,KAAC6yE,cAAc1kD,KAAKmnC,uBAA0B,IAAAt1D,KAAK6yE,cAAc1kD,KAAKynC,eACxF,EAACx1D,EAED81E,kBAAA,WACI,OAAUl2E,KAAK+2E,WA2GnB,65LAAA,EAAC32E,EAED+1E,oBAAA,WACI,OAAUn2E,KAAKi1E,WAQL,mUAAAj1E,KAAKm1E,qBACL,uCAAAn1E,KAAKq2E,siBAaDr2E,KAAKs1E,uBAAsB,6DAC3Bt1E,KAAKg3E,gBAAe,uPAKtC,EAACH,CAAA,CArJmC,CAAQjE,+BCGnCqE,gBAAc,WAwBvB,SAAAA,IAAAj3E,KAtBA0wB,eAAS,EAAA1wB,KACTk0E,mBAAa,EAAAl0E,KACbu0E,oBAAc,EAAAv0E,KACd00E,oBAAc,EAAA10E,KACdk3E,uBAAiB,EAAAl3E,KACjBm3E,wBAAkB,EAAAn3E,KAClBo3E,wBAAkB,EAAAp3E,KAClBo3B,aAAO,EAAAp3B,KACPygC,iBAAW,EAAAzgC,KACX8zE,wBAAkB,EAAA9zE,KAClB6zE,sBAAgB,EAAA7zE,KAChB81E,oBAAc,EAAA91E,KACdi0E,6BAAuB,EAAAj0E,KACvBs0E,8BAAwB,EAAAt0E,KACxBy0E,8BAAwB,EAAAz0E,KACxB+zE,uBAAiB,EAAA/zE,KACjBq3E,wBAAkB,EAAAr3E,KAClBs3E,yBAAmB,EAAAt3E,KACnBu3E,yBAAmB,EAAAv3E,KACnB+1E,kBAAY,EAAAj2E,OAAAC,eAAAC,KAAAw3E,GAAA,CAAAv3E,UAAA,EAAAC,WAAA,IAIRF,KAAK0wB,UAAY,KACjB1wB,KAAKk0E,cAAgB,KACrBl0E,KAAKu0E,eAAiB,KACtBv0E,KAAK00E,eAAiB,KACtB10E,KAAKk3E,kBAAoB,KACzBl3E,KAAKm3E,mBAAqB,KAC1Bn3E,KAAKo3E,mBAAqB,KAC1Bp3E,KAAK8zE,mBAAqB,KAC1B9zE,KAAK6zE,iBAAmB,KACxB7zE,KAAKi0E,wBAA0B,KAC/Bj0E,KAAKs0E,yBAA2B,KAChCt0E,KAAKy0E,yBAA2B,KAChCz0E,KAAKq3E,mBAAqB,KAC1Br3E,KAAKs3E,oBAAsB,KAC3Bt3E,KAAKu3E,oBAAsB,KAC3Bv3E,KAAK81E,eAAiB,KACtB31E,EAAAH,KAAIw3E,IAAAA,KAAU,CAClB,CAAC,IAAAp3E,EAAA62E,EAAA52E,UA2EA,OA3EAD,EAED69B,MAAA,WACIj+B,KAAKo3B,QAAU,CACX,EAAGp3B,KAAKk0E,cACR,GAAIl0E,KAAKu0E,eACT,GAAIv0E,KAAK00E,gBAEb10E,KAAK+zE,kBAAoB,CACrB,EAAG/zE,KAAKi0E,wBACR,GAAIj0E,KAAKs0E,yBACT,GAAIt0E,KAAKy0E,0BAEbz0E,KAAKygC,YAAc,CACf,EAAGzgC,KAAKk3E,kBACR,GAAIl3E,KAAKm3E,mBACT,GAAIn3E,KAAKo3E,oBAEbp3E,KAAK+1E,aAAe,CAChB,EAAG/1E,KAAKq3E,mBACR,GAAIr3E,KAAKs3E,oBACT,GAAIt3E,KAAKu3E,qBAEbp3E,EAAAH,KAAIw3E,IAAAA,KAAU,CAClB,EAACp3E,EAED6K,QAAA,WACQjL,KAAK0wB,WACL1wB,KAAK0wB,UAAUzlB,UAEfjL,KAAKk0E,eACLl0E,KAAKk0E,cAAcjpE,UAEnBjL,KAAKu0E,gBACLv0E,KAAKu0E,eAAetpE,UAEpBjL,KAAK00E,gBACL10E,KAAK00E,eAAezpE,UAEpBjL,KAAKk3E,mBACLl3E,KAAKk3E,kBAAkBjsE,UAEvBjL,KAAKm3E,oBACLn3E,KAAKm3E,mBAAmBlsE,UAExBjL,KAAKo3E,oBACLp3E,KAAKo3E,mBAAmBnsE,UAExBjL,KAAK6zE,kBACL7zE,KAAK6zE,iBAAiB5oE,UAEtBjL,KAAK8zE,oBACL9zE,KAAK8zE,mBAAmB7oE,UAExBjL,KAAK81E,gBACL91E,KAAK81E,eAAe7qE,UAEpBjL,KAAKi0E,yBACLj0E,KAAKi0E,wBAAwBhpE,UAE7BjL,KAAKs0E,0BACLt0E,KAAKs0E,yBAAyBrpE,UAE9BjL,KAAKy0E,0BACLz0E,KAAKy0E,yBAAyBxpE,UAE9BjL,KAAKq3E,oBACLr3E,KAAKq3E,mBAAmBpsE,UAExBjL,KAAKs3E,qBACLt3E,KAAKs3E,oBAAoBrsE,UAEzBjL,KAAKu3E,qBACLv3E,KAAKu3E,oBAAoBtsE,SAEjC,EAACgsE,CAAA,CArHsB,GCFdQ,gBAAU,WAanB,SAAAA,IAXAnrC,KAAAA,eACAorC,EAAAA,KAAAA,gBACAC,EAAAA,KAAAA,2BACAC,cAAQ,EAAA53E,KACR63E,eAAS,EAAA73E,KACT83E,iBAAW,EAAA93E,KACX+3E,oBACAC,EAAAA,KAAAA,kBACAC,EAAAA,KAAAA,iBACAC,EAAAA,KAAAA,iBAGIl4E,KAAKwhC,OACT,CAaC,OAbAi2C,EAAAp3E,UAEDmhC,MAAA,WACIxhC,KAAKssC,UAAY,EACjBtsC,KAAK03E,WAAa,EAClB13E,KAAK23E,eAAiB,EACtB33E,KAAK43E,SAAW,EAChB53E,KAAK63E,UAAY,EACjB73E,KAAK83E,YAAc,EACnB93E,KAAK+3E,eAAiB,EACtB/3E,KAAKg4E,aAAe,EACpBh4E,KAAKi4E,YAAc,EACnBj4E,KAAKk4E,UAAY,CACrB,EAACT,CAAA,CA5BkB,GCAVU,GAAqB,CAC9BC,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,eAAgB,IAChBC,OAAQ,IACRC,YAAa,IACbC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,YAAa,MCXjB,SAAS9mE,GAAEA,GAEP,OAAQuO,SAAAA,GAAiC,OAAAkP,GAAEzd,EAAGuO,EAAC,GAAA1c,MAAAC,KAAAM,UAAI,GAAA,CACvD,CAEA,SAASmc,GAAEA,EAAWkP,GAElB,OAAOzd,GAAEhC,GAAEuQ,EAAGkP,GAAGvuB,IACrB,CAiDA,IA5Ce,IAAAuuB,GAUPspD,QAVAt2E,MACWutB,GASX+oD,QATAC,UACgBhqD,GAQhB+pD,QARAl5E,eACK0D,GAOLw1E,QAPA73E,IAC0B8O,GAM1B+oE,QANAE,yBACgBzjE,GAKhBujE,QALAG,eACKxpE,GAILqpE,QAJAj4E,IACSuR,GAGT0mE,QAHAI,QACKC,GAELL,QAFAt8D,IACgBqJ,GAChBizD,QADAM,eACS1/D,GAAI2/D,MAAOvoE,GAAIzC,OAEdmM,GAEV1J,GAFAge,SACOld,GACPd,GADA8d,MAGUS,GAIViqD,OAJAC,SACS1/B,GAGTy/B,OAHAE,QACa9pE,GAEb4pE,OAFAG,YACK9/D,GACL2/D,OAAM,IAAEI,GAAI/5E,OAEJ8S,GAKRinE,GALAC,OACgBC,GAIhBF,GAJA95E,eACQiR,GAGR6oE,GAHAG,OACIC,GAEJJ,GAFAK,GAEGC,GAAIN,GAAEx5E,UAAW+5E,GAAIloE,GAAEioE,GAAEE,eAAgBxnD,GAAIgnD,GAAES,QAAUpoE,GAAEioE,GAAEjvE,gBAAiBqvE,GAAIr3E,MAAOs3E,GAAID,GAAE5rD,QAEtG8rD,GAAIF,GAAEl6E,UAAWqvB,GAAIxd,GAAEuoE,GAAEttD,MAAOutD,GAAIxoE,GAAEuoE,GAAEr3E,MAAOu3E,GAAIzoE,GAAEuoE,GAAEG,gBAAiBC,GAAIJ,GAAEjrD,IAAIsrD,GAAI5oE,GAAE2oE,IAAIE,GAAIvxE,KAAKqJ,MACrGmoE,GAAI9sD,YAAa+sD,GAAID,GAAEE,OAAQC,GAAIjpE,GAAE8oE,GAAE36E,UAAU0D,OAAQg1B,GAAItY,GAAEu6D,GAAE36E,UAAW,cAC5E+6E,GAAI,oBAAsBC,kBAAoBA,kBAAoB,KAAMC,GAAIF,IAAK36D,GAAE26D,GAAE/6E,UAAW,cAEhGk7E,GAAI7lE,GAAE0Y,YAAald,GAAIqqE,GAAEtjD,KAAMujD,GAAID,GAAEl7E,UAAWo7E,GAAID,GAAEhsD,IAAIksD,GAAIxpE,GAAEspE,GAAE9gD,MAAO9kB,GAAI1D,GAAEspE,GAAExsE,QAAS2sE,GAAIzpE,GAAEspE,GAAEI,SAClGC,GAAI3pE,GAAEspE,GAAE7+D,KAAMm/D,GAAI5pE,GAAEspE,GAAEluD,SAAUyuD,GAAI7pE,GAAEspE,GAAEpxC,MAAO4xC,GAAI9pE,GAAEspE,GAAES,YAAaC,GAAKhqE,GAAEspE,GAAEryC,MAAOgzC,GAAKjqE,GAAEspE,GAAEz3E,OAC7Fq4E,GAAKlqE,GAAEspE,GAAEa,UAAWC,GAAK77D,GAAE+6D,GAAG,UAAWe,GAAK97D,GAAE+6D,GAAG,cAAegB,GAAK/7D,GAAE+6D,GAAG,UAAW1uD,GAAKrM,GAAE+6D,GAAG3rE,IAEjG4sE,GAAK3rD,YAAa4rD,GAAK,WAAH,OAAa/sD,GAAEze,GAAGurE,GAAE,GAAA14E,MAAAC,KAAAM,WAAI,EAAEq4E,GAAK/zC,YAAag0C,GAAKhsE,aAAcisE,GAAKnnE,GAAE,GAAG8Z,OAAOstD,GAAK5qE,GAAE2qE,GAAG1nC,MAC9G4nC,GAAK7qE,GAAE8qE,IAAAC,KAAAC,SAAAA,IAAAF,OAAAA,IAAAG,cAAAC,iBAAAA,EAAAhoC,KAAAgoC,EAAAjoC,MAAAioC,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAnmC,OAAA,EAAAimC,EAEN,EAFMF,GAEH7nC,MAAOkoC,GAAK3nE,GAAEmnE,IAA0ES,GAAKC,UACjGC,GAAKC,WAAYC,GAAKC,IAAKC,GAAKF,GAAGr9E,UAAWw9E,GAAK3rE,GAAE0rE,GAAG50D,KAAM80D,GAAK5rE,GAAE0rE,GAAG58E,KAAM+8E,GAAKC,QAASC,GAAKF,GAAG19E,UACpG69E,GAAKhsE,GAAE+rE,GAAG78E,KAAM+8E,GAAKjsE,GAAE+rE,GAAGj9E,KAAMo9E,GAAKlsE,GAAE+rE,GAAGthE,KAAM0hE,GAAK,IAAIrD,GAAE,GAAIsD,GAAK,IAAI1B,GAAGyB,IAAKE,GAAK,IAAI5B,GAAG0B,IAAKG,GAAK,IAAI7B,GAAG,KAC7G8B,GAAK,IAAI9B,GAAG,KACPzqE,GAAI,EAAGA,GAAI,MAAOA,GAAG,CAC1B,IAAMuO,GAAIvO,GAAI,IACduO,IAAK,IAAM+9D,GAAGtsE,IAAK,EAAGssE,GAAG,IAAMtsE,IAAK,MAAOusE,GAAGvsE,IAAK,GAAIusE,GAAG,IAAMvsE,IAAK,IAAMuO,IAAK,IAAM+9D,GAAGtsE,IAAK,OAASuO,GAAI,GAAI+9D,GAAG,IAAMtsE,IAAK,OAASuO,GAAI,GAAK,MAAOg+D,GAAGvsE,KAAMuO,GAAI,EAAGg+D,GAAG,IAAMvsE,KAAMuO,GAAI,GAAKA,IAAK,IAAM+9D,GAAGtsE,IAAKuO,GAAI,IAAM,GAAI+9D,GAAG,IAAMtsE,IAAKuO,GAAI,IAAM,GAAK,MAAOg+D,GAAGvsE,IAAK,GAAIusE,GAAG,IAAMvsE,IAAK,IAAMuO,GAAI,KAAO+9D,GAAGtsE,IAAK,MAAOssE,GAAG,IAAMtsE,IAAK,MAAOusE,GAAGvsE,IAAK,GAAIusE,GAAG,IAAMvsE,IAAK,KAAOssE,GAAGtsE,IAAK,MAAOssE,GAAG,IAAMtsE,IAAK,MAAOusE,GAAGvsE,IAAK,GAAIusE,GAAG,IAAMvsE,IAAK,GACpb,CAED,SAASwsE,GAAGxsE,GACRosE,GAAG,GAAKpsE,EACR,IAAMuO,EAAI89D,GAAG,GACT5uD,EAAIlP,GAAK,GAAK,IAClB,OAAO+9D,GAAG7uD,KAAO,QAAUlP,IAAMg+D,GAAG9uD,GACxC,CAEA,IAAMgvD,GAAK,IAAIhC,GAAG,MACdiC,GAAK,IAAIjC,GAAG,IACZkC,GAAK,IAAIlC,GAAG,IAChBgC,GAAG,GAAK,EACR,IAAK,IAAIzsE,GAAI,EAAGA,GAAI,OAAQA,GAAG,CAG3B,IAFA,IAAIuO,GAAIvO,IAAK,GACTyd,GAAI,EACD,IAAM,QAAUlP,KAAKkP,IAAK,QAASlP,KAAM,EACjBk+D,GAAGzsE,KAAlCuO,KAAM,UAASkP,IAAK,UACvB,CACD,IAAK,IAAIzd,GAAI,KAAMA,GAAI,OAAQA,GAAGysE,GAAGzsE,IAAK,WAAaA,GAAI,MAAQ,IACnE0sE,GAAG,GAAK,EACR,IAAK,IAAI1sE,GAAI,EAAGA,GAAI,KAAMA,GAAG0sE,GAAG1sE,IAAKA,IAAK,GAC1C0sE,GAAG,IAAM,WAAYA,GAAG,IAAM,WAC9B,IAAK,IAAI1sE,GAAI,GAAIA,GAAI,KAAMA,GAAG0sE,GAAG1sE,IAAK,YAAcA,GAAI,IAAM,IAC9D0sE,GAAG,IAAM,WAAYC,GAAG,GAAK,EAC7B,IAAK,IAAI3sE,GAAI,EAAGA,GAAI,KAAMA,GAAG2sE,GAAG3sE,IAAK,KAAOA,GAAI,EAAI,KAEpD,SAAS4sE,GAAG5sE,GACR,IAAMuO,EAAIvO,GAAK,GACf,OAAOqsE,GAAG,GAAKI,GAAGE,GAAGp+D,IAAM,KAAOvO,IAAM0sE,GAAGn+D,GAAI69D,GAAG,EACtD,CASA,SAASS,GAAG7sE,GAAQ8sE,IAAAA,EAEhB,GAAI9sE,EAAEsd,MAAOqrD,GAAG,OAAO3oE,EACvB,IAAMuO,EAAIq6D,GAAE5oE,GACZ,OAAOU,GAAE,OAAIosE,EAAA,CAEL7pC,KACI,CACIj1C,MAAO,WACH,OAAO48E,GAAGr8D,EACd,KAEP+O,IACG,CACItvB,MAAO,WACH,OACJF,IAAA,GACHg/E,GAEjB,CAEA,IAAMC,GAAK,IAAIlB,GACXmB,GAAKtsE,GAAEyqE,IAAE8B,IAEDhqC,KACI,CACIj1C,MAAO,WACH,IAAMgS,EAAIgsE,GAAGe,GAAIj/E,MACjB,OAAO+8E,GAAG7qE,EACd,EACAjS,UAAU,EACVm/E,cAAc,IACjBD,GACJtvE,IACG,CACI3P,MAAO,iBACPk/E,cAAc,GACjBD,KAGjB,SAASE,GAAGntE,GACR,IAAMuO,EAAI7N,GAAEssE,IACZ,OAAOd,GAAGa,GAAIx+D,EAAGvO,GAAIuO,CACzB,CAEA,SAAS6+D,GAAGptE,GACR,cAAgBA,GAAK,iBAAmBA,GAAK,mBAAqBA,CACtE,CAEA,SAASqtE,GAAGrtE,GACR,OAAW,OAAKA,GAAK,iBAAmBA,CAC5C,CAEA,SAASstE,GAAGttE,GACR,YAAO,IAAW4a,GAAG5a,EACzB,CAEA,SAASutE,GAAGvtE,GACR,IAAMuO,EAAIqM,GAAG5a,GACb,MAAO,kBAAoBuO,GAAK,mBAAqBA,CACzD,CAEA,SAASi/D,GAAGxtE,GACR,GAAI,OAASkpE,GAAG,OAAO,EACvB,IAEI,OAAOE,GAAEppE,IAAI,CAChB,CAAC,MAAOA,GACL,OAAO,CACV,CACL,CAEA,SAASytE,GAAGztE,GACR,QAAKsoE,GAAEtoE,KAEHA,EAAEsd,MAAOqrD,IAEN,mBAAqB3oE,EAAEsd,MAAK3f,IACvC,CAEA,SAAS+vE,GAAG1tE,GACR,GAAI,iBAAmBA,EAAG,OAAO,EACjC,IAAMuO,EAAIxP,GAAEiB,GACZ,OAAOA,IAAMuO,EAAI,MAAS9F,GAAE8F,IAAMA,IAAMs6D,GAAEt6D,EAC9C,CAEA,IAAMo/D,GAAK5uE,GAAExC,iBAEb,SAASqxE,GAAG5tE,GACR,GAAI,iBAAmBA,EAAG,MAAMorE,GAAG,6CACnC,IAAM78D,EAAIxP,GAAEiB,GACZ,OAAOH,GAAE0O,IAAM,IAAMA,EAAI,EAAIs6D,GAAEt6D,EACnC,CAEA,SAASs/D,GAAG7tE,GACR,IAAMuO,EAAIq/D,GAAG5tE,GACb,OAAOuO,EAAI,EAAI,EAAIA,EAAIo/D,GAAKp/D,EAAIo/D,EACpC,CAEA,SAAStjC,GAAGrqC,EAA0BuO,GAClC,IAAK6+D,GAAGptE,GAAI,MAAMorE,GAAG,yBACrB,IAAM3tD,EAAIzd,EAAE1Q,YACZ,QAAI,IAAWmuB,EAAG,OAAOlP,EACzB,IAAK6+D,GAAG3vD,GAAI,MAAM2tD,GAAG,mDACrB,IAAMptD,EAAIP,EAAEqqB,IACZ,OAAO,MAAQ9pB,EAAIzP,EAAIyP,CAC3B,CAEA,SAAS8vD,GAAG9tE,GACR,GAAIwtE,GAAGxtE,GAAI,OAAO,EAClB,IACI,OAAOipE,GAAEjpE,EAAG,EAAG,IAAI,CACtB,CAAC,MAAOA,IAET,OAAO,CACX,CAEA,SAAS+tE,GAAG/tE,EAAYuO,GACpB,IAAMkP,EAAI5d,GAAEG,GACRge,EAAIne,GAAE0O,GACV,GAAIkP,GAAKO,EAAG,OAAO,EACnB,GAAIP,EAAG,OAAQ,EACf,GAAIO,EAAG,OAAQ,EAEf,GAAIhe,EAAIuO,EAAG,OAAQ,EAEnB,GAAIvO,EAAIuO,EAAG,OAAQ,EACnB,GAAI,IAAMvO,GAAK,IAAMuO,EAAG,CACpB,IAAMkP,EAAIsqD,GAAE/nE,EAAG,GACXge,EAAI+pD,GAAEx5D,EAAG,GACb,IAAKkP,GAAKO,EAAG,OAAQ,EACrB,GAAIP,IAAMO,EAAG,OAAO,CACvB,CACD,OACJ,CAAA,CAEA,IAAMgwD,GAAKpmE,GAAE,oBACTqmE,GAAK,IAAIpC,GAEb,SAASqC,GAAGluE,GACR,OAAOisE,GAAGgC,GAAIjuE,KAAO+oE,GAAE/oE,IAAM,SAAUA,GACnC,IAAKqtE,GAAGrtE,GAAI,OAAO,EACnB,IAAMuO,EAAI/K,GAAExD,GACZ,IAAKqtE,GAAG9+D,GAAI,OAAO,EAEnB,IAAMkP,EAAIlP,EAAEjf,YACZ,QAAI,IAAWmuB,EAAG,OAAO,EACzB,IAAK2vD,GAAG3vD,GAAI,MAAM2tD,GAAG,mDACrB,OAAO1tE,GAAE+f,EAAGuwD,GAChB,CAT6B,CAS3BhuE,EACN,CAEA,SAASmuE,GAAGnuE,GACR,IAAKkuE,GAAGluE,GAAI,MAAMorE,GAAG,oCACzB,CAEA,SAASgD,GAAGpuE,EAAQuO,GAChB,IAAMkP,EAAIywD,GAAGluE,GACTge,EAAIsvD,GAAGttE,GACX,IAAKyd,IAAMO,EAAG,MAAMotD,GAAG,uDACvB,GAAI,iBAAmB78D,EAAG,CACtB,IAAIyP,EACJ,GAAIP,EAAG,CACH,IAAMlP,EAAI8/D,GAAGruE,GACbge,EAAIssD,GAAG/7D,EACV,MAAMyP,EAAIssD,GAAGtqE,GACd,GAAIge,EAAIzP,EAAG,MAAM68D,GAAG,2EACvB,CACD,GAAImC,GAAGvtE,GAAI,MAAMorE,GAAG,8DACxB,CAEA,SAASiD,GAAGruE,GACR,IAAMuO,EAAIy9D,GAAGiC,GAAIjuE,GACjB,QAAI,IAAWuO,EAAG,CACd,GAAIu/D,GAAG1D,GAAG77D,IAAK,MAAM68D,GAAG,6CACxB,OAAO78D,CACV,CACD,IAAMkP,EAAIzd,EAAE+b,OACZ,GAAI+xD,GAAGrwD,GAAI,MAAM2tD,GAAG,6CACpB,IAAMpuD,EAAIgB,GAAEswD,GAAI,CAAC7wD,EAAGzd,EAAEuuE,WAAYvuE,EAAE/O,QAAS+O,EAAE1Q,aAC/C,OAAO08E,GAAGiC,GAAIjxD,EAClB,CAEA,SAASwxD,GAAGxuE,GAGR,IAFA,IAAMuO,EAAI+7D,GAAGtqE,GACTyd,EAAI,GACCO,EAAI,EAAGA,EAAIzP,IAAKyP,EAAGP,EAAEO,GAAK4uD,GAAG5sE,EAAEge,IACxC,OAAOP,CACX,CAGA,IADA,IACoBgxD,GADdC,GAAK,IAAIlD,GACfmD,GAAAC,EAAgBvuE,GAAEipE,OAAEmF,GAAAE,MAAA51D,MAAE,CAAX,IAAA/Y,GAACyuE,GAAAzgF,MACR,GAAIgS,KAAMrC,GAAV,CACA,IAAM4Q,GAAIvQ,GAAEsrE,GAAGtpE,IACf2gB,GAAEpS,GAAG,QAAUo9D,GAAG+C,GAAI1uE,GADtB,CAEH,CACD,IAAM6uE,GAAK/vE,GACP,CACI5P,IAAK,SAAC8Q,EAAWuO,EAAgBkP,UAAWiwD,GAAGn/D,IAAMoS,GAAE3gB,EAAGuO,GAAKq+D,GAAGr7E,GAAEyO,EAAGuO,IAAMq9D,GAAG8C,GAAIngE,IAAM25D,GAAEoB,GAAGtpE,GAAKzO,GAAEyO,EAAGuO,GAAKhd,GAAEyO,EAAGuO,EAAGkP,EAAE,EACxHhT,IAAK,SAACzK,EAAWuO,EAAgBkP,EAAWO,UAAW0vD,GAAGn/D,IAAMoS,GAAE3gB,EAAGuO,GAAK64D,GAAEpnE,EAAGuO,EAAGi+D,GAAG/uD,IAAM2pD,GAAEpnE,EAAGuO,EAAGkP,EAAGO,EAAE,EACxGipD,yBAAwB,SAACjnE,EAAWuO,GAChC,GAAIm/D,GAAGn/D,IAAMoS,GAAE3gB,EAAGuO,GAAI,CAClB,IAAMkP,EAAIzf,GAAEgC,EAAGuO,GAEf,OAAOkP,EAAEzvB,MAAQ4+E,GAAGnvD,EAAEzvB,OAAQyvB,CACjC,CACD,OAAOzf,GAAEgC,EAAGuO,EAChB,EACA1gB,eAAgB,SAACmS,EAAWuO,EAAgBkP,UAA0CiwD,GAAGn/D,IAAMoS,GAAE3gB,EAAGuO,IAAMoS,GAAElD,EAAG,UAAYA,EAAEzvB,MAAQw+E,GAAG/uD,EAAEzvB,OAAQgvB,GAAEhd,EAAGuO,EAAGkP,IAAMT,GAAEhd,EAAGuO,EAAGkP,EAAE,IAG5K6wD,2BACF,SAAAA,EAAYtuE,EAA4BuO,EAAckP,GAClD,IAAIT,EACJ,GAAIkxD,GAAGluE,GAAIgd,EAAIgB,GAAEusD,GAAI,CAAC8D,GAAGruE,IAAGlS,gBAAAwgF,EAAAh/E,KAAAA,4BACnB89E,GAAGptE,KAAO,SAAUA,GACzB,IACI,OAAO6mB,GAAE7mB,IAAI,CAChB,CAAC,MAAOA,GACL,OAAO,CACV,CACL,CANmB,CAMjBA,GAAI,CACF,IAAIuO,EAAGkP,EACP,GAAI6vD,GAAGttE,GAAI,CACPuO,EAAIvO,EAAGyd,EAAI6sD,GAAGtqE,GACd,IAAMzO,EAAI64E,GAAGpqE,GACThC,EAAIwvE,GAAGj8E,GAAKu3E,GAAIz+B,GAAG94C,EAAGu3E,IAC1B,GAAIgF,GAAGv8E,GAAI,MAAM65E,GAAG,6CACpB,GAAImC,GAAGvtE,GAAI,MAAMorE,GAAG,+DACpB,IAAM5nE,EAAI,IAAIxF,EAAE,EAAIyf,GACpBT,EAAIgB,GAAEusD,GAAI,CAAC/mE,GAAE8qE,gBAAAA,EAAAh/E,KAAAA,mBAChB,KAAM,CAEH,IAAMiC,EAAIyO,EAAEsd,IACZ,GAAI,MAAQ/rB,GAAK,mBAAqBA,EAAG,MAAM65E,GAAG,uCAElD,MAAQ75E,EAAIk8E,GAAGztE,IAAMuO,EAAIvO,EAAGyd,EAAIzd,EAAE/O,QAAuBwsB,GAAZlP,EAAC+iD,GAAAA,OAAOtxD,IAAU/O,OAAkBwsB,EAAIowD,IAAXt/D,EAAIvO,GAAY/O,QAAU+rB,EAAIgB,GAAEusD,GAAI,CAAC9sD,GAAE3vB,gBAAAwgF,EAAAxgF,KAAAwB,iBAAA,EACpH,CACD,IAAK,IAAI0Q,EAAI,EAAGA,EAAIyd,IAAKzd,EACrBgd,EAAEhd,GAAKwsE,GAAGj+D,EAAEvO,GAEnB,MAAMgd,EAAIgB,GAAEusD,GAAIn4E,0BAASk8E,EAAAxgF,KAAAwB,iBAAa,GACvC,IAAMiC,EAAI,IAAIoW,GAAEqV,EAAG6xD,IACnB,OAAO3C,GAAG+B,GAAI18E,EAAGyrB,GAAIzrB,CACzB,CAAC+8E,EAEMvoD,KAAP,SAAY/lB,GAA8B9G,IAmBlC8jB,EAAGzrB,EAnB+B2H,OAARqV,KAAQ1c,MAAAC,KAAAM,UAAA,GAChC4rB,EAAIlwB,KACV,IAAK4P,GAAEsgB,EAAGgwD,IAAK,MAAM5C,GAAG,sDACxB,GAAIptD,IAAMswD,EAAI,CACV,GAAIJ,GAAGluE,IAAM,IAAMuO,EAAEtd,OAAQ,CACzB,IAAMsd,EAAI8/D,GAAGruE,GACTyd,EAAI,IAAI8sD,GAAGH,GAAG77D,GAAI87D,GAAG97D,GAAI+7D,GAAG/7D,IAEhC,OAAW,IAAA+/D,EAAGlE,GAAGH,GAAGxsD,IACvB,CAED,GAAI,IAAMlP,EAAEtd,OAAQ,OAAO,IAAIq9E,EAAGlE,GAAGI,GAAGxqE,EAAGwsE,MAC3C,IAAMxuD,EAAIzP,EAAE,GAGZ,OAAO,IAAI+/D,EAAGlE,GAAGI,GAAGxqE,EAAI,SAACA,GACrB,OAAOwsE,GAAG/uD,GAAEO,EAAG9kB,EAAO8G,CAAAA,GAACsxD,OAAKub,GAAE,GAAAh7E,MAAAC,KAAAM,gBAClC,EAJQmc,EAAE,KAKb,CAGD,IAQI/K,EARExF,EAAIgC,EAAEsd,IACZ,GAAI,MAAQtf,GAAK,mBAAqBA,EAAG,MAAMotE,GAAG,uCAElD,GAAI,MAAQptE,EAAGyvE,GAAGztE,IAAMgd,EAAIhd,EAAGzO,EAAIyO,EAAE/O,SAAWq8E,GAAG9pE,EAAIxD,IAAMwD,EAAE8Z,MAAOisD,IAAK,mBAAqB/lE,EAAE8Z,MAAK3f,IAAkBpM,GAAZyrB,EAACs0C,GAAAA,OAAOtxD,IAAU/O,QAAW+rB,EAAIhd,EAAGzO,EAAI+4E,GAAGtqE,QACnJ,CACD,GAAI,MAAQA,EAAG,MAAMorE,GAAG,8CACd75E,EAAIs8E,IAAd7wD,EAAI2qD,GAAE3nE,IAAa/O,OACtB,CAGD,IAAMoP,EAAI,IAAI2d,EAAEzsB,GAChB,GAAI,IAAMgd,EAAEtd,OAER,IAAK,IAAI+O,EAAI,EAAGA,EAAIzO,IAAKyO,EAAGK,EAAEL,GAAKgd,EAAEhd,QAKrC,IAHA,IAAMA,EAAIuO,EAAE,GACRyP,EAAIzP,EAAE,GAEDA,EAAI,EAAGA,EAAIhd,IAAKgd,EAAGlO,EAAEkO,GAAKkP,GAAEzd,EAAGge,EAAG,CAAChB,EAAEzO,GAAIA,IAEtD,OAAOlO,CACX,EAACiuE,EAEMQ,GAAP,WAAkB,IAAL9uE,KAAKnO,MAAAC,KAAAM,WACRmc,EAAIzgB,KACV,IAAK4P,GAAE6Q,EAAGy/D,IAAK,MAAM5C,GAAG,sDACxB,IAAM3tD,EAAIzd,EAAE/O,OACZ,GAAIsd,IAAM+/D,EAAI,CAIV,IAFA,IAAM//D,EAAI,IAAI+/D,EAAG7wD,GACbO,EAAIqwD,GAAG9/D,GACFA,EAAI,EAAGA,EAAIkP,IAAKlP,EAAGyP,EAAEzP,GAAKi+D,GAAGxsE,EAAEuO,IACxC,OAAOA,CACV,CAID,IAFA,IAAMyP,EAAI,IAAIzP,EAAEkP,GAEPlP,EAAI,EAAGA,EAAIkP,IAAKlP,EAAGyP,EAAEzP,GAAKvO,EAAEuO,GACrC,OAAOyP,CACX,MAAC9vB,EAAAogF,EAAAngF,iBAAAD,EAEDs6B,KAAA,WACI2lD,GAAGrgF,MACH,IAAMkS,EAAIquE,GAAGvgF,MACb,OAAO07E,GAAExpE,EACb,EAAC9R,EAED4O,OAAA,WACIqxE,GAAGrgF,MACH,IAAMkS,EAAIquE,GAAGvgF,MACb,OAAOq/E,gBAAGrC,IAAAC,KAAAgE,SAAAA,QAAAC,EAAAC,EAAAC,EAAApE,OAAAA,IAAAG,cAAAkE,iBAAAA,EAAAjsC,KAAAisC,EAAAlsC,MAAA+rC,KAAAA,EAAAA,EAAAJ,EACUlrE,GAAE1D,IAAEivE,KAAAA,EAAAA,IAAAA,EAAAD,KAAAj2D,MAAAo2D,EAAAlsC,KAAA,EAAA,KAAA,CAAE,OAAX10B,EAAC0gE,EAAAjhF,MAAAmhF,EAAAlsC,OAAgB2pC,GAAGr+D,GAAE4gE,KAAAA,EAAAA,EAAAlsC,KAAAksC,EAAAA,MAAAA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAApqC,OAAA,EAAAgqC,EACpC,EAFSjE,GAGd,EAAC58E,EAEDw7E,QAAA,WACIyE,GAAGrgF,MACH,IAAMkS,EAAIquE,GAAGvgF,MACb,OAAOq/E,gBAAGrC,IAAAC,cAAAqE,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3E,IAAAG,cAAAyE,iBAAAA,EAAAxsC,KAAAwsC,EAAAzsC,MAAAosC,KAAAA,EAAAA,EAAAT,EACenF,GAAEzpE,IAAE,KAAA,EAAA,IAAAsvE,EAAAD,KAAAt2D,MAAA22D,EAAAzsC,KAAAssC,EAAAA,KAAAA,CAAE,OAAfhhE,GAAaghE,EAAAD,EAAAthF,OAAVyvB,GAAAA,EAAC8xD,EAAA,GAAAG,EAAAzsC,KAAA,EAAiB,CAAC10B,EAAGq+D,GAAGnvD,IAAGiyD,KAAAA,EAAAA,EAAAzsC,qCAAAysC,EAAA3qC,OAAAqqC,EAAAA,IADrCtE,GAGd,EAAC58E,EAED08E,GAAA,SAAG5qE,GACCmuE,GAAGrgF,MACH,IAAMygB,EAAI8/D,GAAGvgF,MACT2vB,EAAI6sD,GAAG/7D,GACPyP,EAAI4vD,GAAG5tE,GACPgd,EAAIgB,GAAK,EAAIA,EAAIP,EAAIO,EACzB,KAAMhB,EAAI,GAAKA,GAAKS,GAAI,OAAOmvD,GAAGr+D,EAAEyO,GACxC,EAAC9uB,EAEDwsB,IAAA,SAAI1a,GACAmuE,GAAGrgF,MACH,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,UAAA,GAAE,GAEN4L,EAAIqsC,GAAGrsB,EAAGswD,GACd,GAAItwE,IAAMswE,EAAI,CAIV,IAFA,IAAM//D,EAAI,IAAI+/D,EAAGtxD,GACbhf,EAAIqwE,GAAG9/D,GACFA,EAAI,EAAGA,EAAIyO,IAAKzO,EAAG,CACxB,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACfvQ,EAAEuQ,GAAKi+D,GAAG/uD,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,OAC5B,CACD,OAAOygB,CACV,CACD,IAAM/K,EAAI,IAAIxF,EAAEgf,GAChBoxD,GAAG5qE,EAAGwZ,GACN,IAAK,IAAIzO,EAAI,EAAGA,EAAIyO,IAAKzO,EAAG,CACxB,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACf/K,EAAE+K,GAAKkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,MACzB,CACD,OAAO0V,CACX,EAACtV,EAEDyhF,OAAA,SAAO3vE,GACHmuE,GAAGrgF,MAMH,IALA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,UAAE,GAAA,GAEN4L,EAAI,GACCuQ,EAAI,EAAGA,EAAIyO,IAAKzO,EAAG,CACxB,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IAEfkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,QAAU06E,GAAExqE,EAAGgf,EACjC,CAED,IAAMxZ,EAAI,IAAK6mC,GAAGrsB,EAAGswD,GAAX,CAAgBtwE,GAE1B,OAAOowE,GAAG5qE,GAAIA,CAClB,EAACtV,EAED0hF,OAAA,SAAO5vE,OAAkEuO,KAAQ1c,MAAAC,KAAAM,UAAA,GAC7E+7E,GAAGrgF,MACH,IAGIkvB,EAAGzrB,EAHDksB,EAAI4wD,GAAGvgF,MACTkwB,EAAIssD,GAAG7sD,GACX,GAAI,IAAMO,GAAK,IAAMzP,EAAEtd,OAAQ,MAAMm6E,GAAG,+CAExC,IAAM78D,EAAEtd,QAAU+rB,EAAI4vD,GAAGnvD,EAAE,IAAKlsB,EAAI,IAAMyrB,EAAIzO,EAAE,GAAIhd,EAAI,GACxD,IAAK,IAAIgd,EAAIhd,EAAGgd,EAAIyP,IAAKzP,EAAGyO,EAAIhd,EAAEgd,EAAG4vD,GAAGnvD,EAAElP,IAAKA,EAAGzgB,MAClD,OAAOkvB,CACX,EAAC9uB,EAED2hF,YAAA,SAAY7vE,GAA0E,IAARuO,EAAQ,GAAA1c,MAAAC,KAAAM,UAClF+7E,GAAAA,GAAGrgF,MACH,IAGIkvB,EAAGzrB,EAHDksB,EAAI4wD,GAAGvgF,MACTkwB,EAAIssD,GAAG7sD,GACX,GAAI,IAAMO,GAAK,IAAMzP,EAAEtd,OAAQ,MAAMm6E,GAAG,+CAExC,IAAM78D,EAAEtd,QAAU+rB,EAAI4vD,GAAGnvD,EAAEO,EAAI,IAAKzsB,EAAIysB,EAAI,IAAMhB,EAAIzO,EAAE,GAAIhd,EAAIysB,EAAI,GACpE,IAAK,IAAIzP,EAAIhd,EAAGgd,GAAK,IAAKA,EAAGyO,EAAIhd,EAAEgd,EAAG4vD,GAAGnvD,EAAElP,IAAKA,EAAGzgB,MACnD,OAAOkvB,CACX,EAAC9uB,EAEDuoB,QAAA,SAAQzW,GACJmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,aAAE,GACDmc,EAAI,EAAGA,EAAIyO,IAAKzO,EAAGkP,GAAEzd,EAAGzO,EAAG,CAACq7E,GAAG5uD,EAAEzP,IAAKA,EAAGzgB,MACtD,EAACI,EAED4hF,KAAA,SAAK9vE,GACDmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,aAAE,GACDmc,EAAI,EAAGA,EAAIyO,IAAKzO,EAAG,CACxB,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACf,GAAIkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,OAAQ,OAAOkvB,CACrC,CACL,EAAC9uB,EAED6hF,UAAA,SAAU/vE,GACNmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,aAAE,GACDmc,EAAI,EAAGA,EAAIyO,IAAKzO,EAAG,CACxB,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACf,GAAIkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,OAAQ,OAAOygB,CACrC,CACD,OAAQ,CACZ,EAACrgB,EAED8hF,SAAA,SAAShwE,GACLmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,UAAA,GAAE,GACDmc,EAAIyO,EAAI,EAAGzO,GAAK,IAAKA,EAAG,CAC7B,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACf,GAAIkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,OAAQ,OAAOkvB,CACrC,CACL,EAAC9uB,EAED+hF,cAAA,SAAcjwE,GACVmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,aAAE,GACDmc,EAAIyO,EAAI,EAAGzO,GAAK,IAAKA,EAAG,CAC7B,IAAMyO,EAAI4vD,GAAG5uD,EAAEzP,IACf,GAAIkP,GAAEzd,EAAGzO,EAAG,CAACyrB,EAAGzO,EAAGzgB,OAAQ,OAAOygB,CACrC,CACD,OAAQ,CACZ,EAACrgB,EAEDgiF,MAAA,SAAMlwE,GACFmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,UAAA,GAAE,GACDmc,EAAI,EAAGA,EAAIyO,IAAKzO,EACrB,IAAKkP,GAAEzd,EAAGzO,EAAG,CAACq7E,GAAG5uD,EAAEzP,IAAKA,EAAGzgB,OAAQ,OAAO,EAC9C,OAAO,CACX,EAACI,EAEDmD,KAAA,SAAK2O,GACDmuE,GAAGrgF,MAIH,IAHA,IAAMkwB,EAAIqwD,GAAGvgF,MACTkvB,EAAIstD,GAAGtsD,GACPzsB,EAAI,GAAAM,MAAAC,KAAAM,UAAE,GAAA,GACDmc,EAAI,EAAGA,EAAIyO,IAAKzO,EACrB,GAAIkP,GAAEzd,EAAGzO,EAAG,CAACq7E,GAAG5uD,EAAEzP,IAAKA,EAAGzgB,OAAQ,OAAO,EAC7C,OAAO,CACX,EAACI,EAEDuc,IAAA,SAAIzK,GACAmuE,GAAGrgF,MACH,IAAM2vB,EAAI4wD,GAAGvgF,MACTkwB,EAAI4vD,GAAG,GAAA/7E,MAAAC,KAAAM,UAAA,GAAE,IACb,GAAI4rB,EAAI,EAAG,MAAMstD,GAAG,2BACpB,GAAI,MAAQtrE,EAAG,MAAMorE,GAAG,8CACxB,GAAImC,GAAGvtE,GAAI,MAAMorE,GAAG,+DACpB,GAAI8C,GAAGluE,GAAI,OAAO2pE,GAAE0E,GAAGvgF,MAAOugF,GAAGruE,GAAIge,GACrC,GAAIsvD,GAAGttE,IACC8tE,GAAG1D,GAAGpqE,IAAK,MAAMorE,GAAG,6CAE5B,IAAMpuD,EAAIstD,GAAG7sD,GACTlsB,EAAIo2E,GAAE3nE,GACNhC,EAAI6vE,GAAGt8E,EAAEN,QACb,GAAI+sB,IAAM,EAAI,GAAKhgB,EAAIggB,EAAIhB,EAAG,MAAMsuD,GAAG,2BACvC,IAAK,IAAItrE,EAAI,EAAGA,EAAIhC,IAAKgC,EAAGyd,EAAEzd,EAAIge,GAAKwuD,GAAGj7E,EAAEyO,GAChD,EAAC9R,EAEDktB,QAAA,WACI+yD,GAAGrgF,MACH,IAAMkS,EAAIquE,GAAGvgF,MACb,OAAO87E,GAAE5pE,GAAIlS,IACjB,EAACI,EAEDgqC,KAAA,SAAKl4B,GACDmuE,GAAGrgF,MACH,IAAM2vB,EAAI4wD,GAAGvgF,MACb,OAAO+7E,GAACp5E,WAAA,EAAA,CAACgtB,EAAG+uD,GAAGxsE,IAAEsxD,OAAKub,GAAE,GAAAh7E,MAAAC,KAAAM,UAAG,MAAGtE,IAClC,EAACI,EAED67E,WAAA,SAAW/pE,EAAQuO,GACf4/D,GAAGrgF,MACH,IAAMkwB,EAAIqwD,GAAGvgF,MACb,OAAOg8E,GAACr5E,WAACutB,EAAAA,CAAAA,EAAGhe,EAAGuO,GAAC+iD,OAAKub,GAAE,GAAAh7E,MAAAC,KAAAM,UAAG,MAAGtE,IACjC,EAACI,EAED+oC,KAAA,WAAQ,IAAAj3B,EAAKnO,GAAAA,MAAAC,KAAAM,WACT+7E,GAAGrgF,MACH,IAAMygB,EAAI8/D,GAAGvgF,MACT2vB,OAAI,IAAWzd,EAAE,GAAKA,EAAE,GAAK+tE,GAEjC,OAAO/D,GAAGz7D,EAAI,SAACvO,EAAGuO,UAAMkP,EAAEmvD,GAAG5sE,GAAI4sE,GAAGr+D,GAAG,GAAIzgB,IAC/C,EAACI,EAED2D,MAAA,eAASmO,KAAKnO,MAAAC,KAAAM,WACV+7E,GAAGrgF,MACH,IAAMygB,EAAI8/D,GAAGvgF,MAET2vB,EAAI4sB,GAAG97B,EAAG+/D,GACd,GAAI7wD,IAAM6wD,EAAI,CACV,IAAM7wD,EAAI,IAAI8sD,GAAGH,GAAG77D,GAAI87D,GAAG97D,GAAI+7D,GAAG/7D,IAElC,OAAW,IAAA+/D,EAAGlE,GAAGH,GAAEx5E,WAACgtB,EAAAA,CAAAA,GAAC6zC,OAAKub,GAAG7sE,MAChC,CACD,IAGIhC,EAAGwF,EAHDwa,EAAIssD,GAAG/7D,GACTyO,EAAI4wD,GAAG5tE,EAAE,IACTzO,OAAI,IAAWyO,EAAE,GAAKge,EAAI4vD,GAAG5tE,EAAE,IAG7BtC,GADgE8F,EAAIjS,KAAO,EAAI,EAAI,EAAIA,EAAI,EAAIysB,EAAIzsB,EAAI,EAAIysB,EAAIzsB,EAAI,EAAIysB,EAAIzsB,EAAIysB,EAAIzsB,IAAzIyM,EAAIgf,KAAO,EAAI,EAAI,EAAIA,EAAI,EAAIgB,EAAIhB,EAAI,EAAIgB,EAAIhB,EAAI,EAAIgB,EAAIhB,EAAIgB,EAAIhB,GACjD,EAAIxZ,EAAIxF,EAAI,EAC1BqC,EAAI,IAAIod,EAAE/f,GACd,GAAI0wE,GAAG/tE,EAAG3C,GAAI,IAAMA,EAAG,OAAO2C,EAC9B,GAAIytE,GAAG1D,GAAG77D,IAAK,MAAM68D,GAAG,6CAExB,IADA,IAAIhE,EAAI,EACDppE,EAAIwF,GAAInD,EAAE+mE,GAAKwF,GAAGr+D,EAAEvQ,MAAOA,IAAKopE,EACvC,OAAO/mE,CACX,EAACnS,EAEDi8E,SAAA,WACIgE,GAAGrgF,MACH,IAAMygB,EAAI8/D,GAAGvgF,MAET2vB,EAAI4sB,GAAG97B,EAAG+/D,GACVtwD,EAAI,IAAIusD,GAAGH,GAAG77D,GAAI87D,GAAG97D,GAAI+7D,GAAG/7D,IAC5ByO,EAAIktD,GAAEz5E,WAAA,EAAA,CAACutB,GAACszC,OAAKub,MAAEh7E,MAAAC,KAAAM,cACfb,EAAI,IAAIksB,EAAE2sD,GAAGptD,GAAIqtD,GAAGrtD,GAAIstD,GAAGttD,IAE/B,OAAOoxD,GAAG78E,GAAIA,CAClB,EAACrD,EAED+D,QAAA,SAAQ+N,GACJmuE,GAAGrgF,MACH,IAAM2vB,EAAI4wD,GAAGvgF,MACTkwB,EAAIssD,GAAG7sD,GACPT,EAAI4wD,GAAG,GAAA/7E,MAAAC,KAAAM,UAAA,GAAE,IACb,GAAI4qB,IAAM,EAAI,EAAG,OAAQ,EACzBA,EAAI,IAAMA,GAAKgB,GAAO,IAAMhB,EAAI,GAChC,IAAK,IAAIzO,EAAIyO,EAAGzO,EAAIyP,IAAKzP,EACrB,GAAIoS,GAAElD,EAAGlP,IAAMq+D,GAAGnvD,EAAElP,MAAQvO,EAAG,OAAOuO,EAC1C,OAAQ,CACZ,EAACrgB,EAEGg9D,YAAA,SAAYlrD,GAAsB,IAARuO,EAAQ,GAAA1c,MAAAC,KAAAM,UAAA,GAClC+7E,GAAGrgF,MACH,IAAM2vB,EAAI4wD,GAAGvgF,MACTkwB,EAAIssD,GAAG7sD,GACPT,EAAIzO,EAAEtd,QAAU,EAAI28E,GAAGr/D,EAAE,IAAMyP,EAAI,EACvC,GAAIhB,KAAO,EAAI,EAAG,OAAQ,EAC1BA,GAAK,EAAIA,EAAIA,EAAIgB,EAAI,EAAIhB,EAAIgB,EAAI,EAAIhB,GAAKgB,EAC1C,IAAK,IAAIzP,EAAIyO,EAAGzO,GAAK,IAAKA,EACtB,GAAIoS,GAAElD,EAAGlP,IAAMq+D,GAAGnvD,EAAElP,MAAQvO,EAAG,OAAOuO,EAC1C,OAAQ,CACZ,EAACrgB,EAEDy8C,SAAA,SAAS3qC,GACLmuE,GAAGrgF,MACH,IAAM2vB,EAAI4wD,GAAGvgF,MACTkwB,EAAIssD,GAAG7sD,GACPT,EAAI4wD,GAAG,GAAA/7E,MAAAC,KAAAM,UAAE,GAAA,IACb,GAAI4qB,IAAM,EAAI,EAAG,OAAO,EACxBA,EAAI,IAAMA,GAAKgB,GAAO,IAAMhB,EAAI,GAEhC,IADA,IAAMzrB,EAAIsO,GAAEG,GACHuO,EAAIyO,EAAGzO,EAAIyP,IAAKzP,EAAG,CACxB,IAAMyP,EAAI4uD,GAAGnvD,EAAElP,IACf,GAAIhd,GAAKsO,GAAEme,GAAI,OAAO,EACtB,GAAIA,IAAMhe,EAAG,OAAO,CACvB,CACD,OAAO,CACX,EAAC9R,EAED+sB,KAAA,WACIkzD,GAAGrgF,MACH,IAAMygB,EAAIigE,GAAGH,GAAGvgF,OAChB,OAAO0vB,GAAC/sB,WAAC8d,EAAAA,CAAAA,GAAC+iD,OAAKub,MAAEh7E,MAAAC,KAAAM,aACrB,EAAClE,EAEDw6E,eAAA,WACIyF,GAAGrgF,MACH,IAAMygB,EAAIigE,GAAGH,GAAGvgF,OAChB,OAAO26E,GAACh4E,WAAC8d,EAAAA,CAAAA,GAAC+iD,OAAKub,MAAEh7E,MAAAC,KAAAM,aACrB,EAACpD,EAAAs/E,IAAAr/E,IAEI0O,GAACzO,IAAN,WACI,GAAIg/E,GAAGpgF,MAAO,MAAO,cACzB,KAACwgF,CAAA,IAGLzG,GAAEyG,GAAI,oBACF,CACItgF,MAAO,IACP65E,GAAEyG,GAAIN,GACV,IAAKl6D,GAAEw6D,GAAIjF,IACf,IAAM8G,GAAK7B,GAAGngF,UAUd05E,GAAEsI,GAAI,oBACF,CACIniF,MAAO,IACP65E,GAAEsI,GAAI7yD,GACV,CACItvB,MAAOmiF,GAAGrzE,OACV/O,UAAU,EACVm/E,cAAc,IACdp5D,GAAEq8D,GAAI7G,ICpuBd,IAAM8G,GAAmB,IAAIlhB,GAAc,CAACC,aAAc,EAAGC,cAAe,IAKtE,SAAUihB,GAAgC7hB,GAC5CA,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,cAC1D,CCda,IAAAmgB,GAiCT,WAAAxiF,KA/BAyiF,iCAA2B,EAAAziF,KAC3B8xB,yBAAmB,EAAA9xB,KACnBk0E,mBACAK,EAAAA,KAAAA,oBACAG,EAAAA,KAAAA,oBACAwC,EAAAA,KAAAA,8BACAC,wBAAkB,EAAAn3E,KAClBo3E,wBAAkB,EAAAp3E,KAElBi0E,6BAAuB,EAAAj0E,KACvBs0E,8BACAG,EAAAA,KAAAA,qCAEA4C,wBAAkB,EAAAr3E,KAClBs3E,yBACAC,EAAAA,KAAAA,yBAEAmL,EAAAA,KAAAA,+BACAC,EAAAA,KAAAA,wCACAC,+BAAyB,EAAA5iF,KAEzB6iF,mBAAa,EAAA7iF,KACb8iF,uBAAiB,EAAA9iF,KACjB6zE,sBACAkP,EAAAA,KAAAA,0BACAC,EAAAA,KAAAA,uCACAC,EAAAA,KAAAA,2BACAC,oBAAc,EAAAljF,KACd81E,oBACAqN,EAAAA,KAAAA,qBAGInjF,KAAKyiF,4BAA8B,GACnCziF,KAAK8xB,oBAAsB,GAC3B9xB,KAAKk0E,cAAgB,GACrBl0E,KAAKu0E,eAAiB,GACtBv0E,KAAK00E,eAAiB,GACtB10E,KAAKk3E,kBAAoB,GACzBl3E,KAAKm3E,mBAAqB,GAC1Bn3E,KAAKo3E,mBAAqB,GAC1Bp3E,KAAK0iF,0BAA4B,GACjC1iF,KAAK2iF,4BAA8B,GACnC3iF,KAAK4iF,0BAA4B,GACjC5iF,KAAK6iF,cAAgB,GACrB7iF,KAAK8iF,kBAAoB,GACzB9iF,KAAK6zE,iBAAmB,GACxB7zE,KAAK+iF,qBAAuB,GAC5B/iF,KAAKgjF,kCAAoC,GACzChjF,KAAKijF,eAAiB,GACtBjjF,KAAKkjF,eAAiB,GACtBljF,KAAKy0E,yBAA2B,GAChCz0E,KAAKs0E,yBAA2B,GAChCt0E,KAAKi0E,wBAA0B,GAC/Bj0E,KAAKu3E,oBAAsB,GAC3Bv3E,KAAKs3E,oBAAsB,GAC3Bt3E,KAAKq3E,mBAAqB,GAC1Br3E,KAAK81E,eAAiB,GACtB91E,KAAKmjF,cAAgB,EACzB,EC7BEC,GAAsC,EAEtCC,GAAiBxuE,KACjB3F,GAAYC,GAAW,CAAC,EAAG,EAAG,EAAG,IACjCO,GAAYP,GAAW,CAAC,EAAG,EAAG,EAAG,IAEjCm0E,GAAkB,IAAIl1D,WAAW,GACjCm1D,GAAoB,IAAI3yE,aAAa,GAAG4yE,gBAAA7jF,EAAA,MAAA8jF,gBAAA9jF,EAAA+jF,QAAAA,gBAAA/jF,EAAAgkF,qBAAAA,gBAAAhkF,qBAAAikF,gBAAAjkF,EAAA,mBAAAkkF,gBAAAlkF,EAAA,gBAAAmkF,gBAAAnkF,EAAAokF,0BAAAA,gBAAApkF,EAAA63E,yBAAAA,gBAAA73E,EAAA,SAAAqkF,gBAAArkF,EAAA,wBAAAskF,gBAAAtkF,EAAA,kBAAAukF,gBAAAvkF,EAAA,gBAAAwkF,gBAAAxkF,EAqC9C,iBAAaykF,gBAiBT,WAAA,SAAAA,EAAYC,EAA0BC,GAAexkF,OAAAC,eAAAokF,KAAAA,IAAAjkF,MAAAqkF,KAAAzkF,OAAAC,eAAAC,KAAAkkF,GAAAhkF,CAAAA,MAAAskF,KAAA1kF,OAAAC,oBAAAkkF,GAAA,CAAA/jF,MAAAukF,KAAA3kF,OAAAC,eAAAikF,KAAAA,GAAA9jF,CAAAA,MAAAwkF,KAfrDx4C,KAAAA,0BACAy4C,gBAAU,EAAA3kF,KACV4kF,gBAAU,EAAA5kF,KACVozE,iBAAW,EAAAtzE,OAAAC,eAAAC,KAAAwjF,GAAA,CAAAvjF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA0jF,KAAAA,GAAAxjF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA0jF,GAAA,CAAAzjF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAA4jF,KAAAA,GAAA1jF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA4jF,GAAA,CAAA3jF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAA8jF,KAAAA,IAAA5jF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA8jF,GAAA7jF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAgkF,KAAAA,GAAA9jF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAw3E,GAAA,CAAAv3E,UAAA,EAAAC,WAAA,IAcPF,KAAK4kF,WAAa,IAAInN,GACtBz3E,KAAK2kF,WAAaN,EAAYM,WAC9B3kF,KAAKksC,cAAgBm4C,EAAYn4C,cAEjClsC,KAAKozE,YAAgC,CACjCxyC,UAAWyjD,EAAYzjD,UACvB+yC,eAAgB,IAAIsD,GACpBjD,gBAAiB,EACjBK,iBAAkB,EAClBG,iBAAkB,EAClBqQ,oBAAqB,EACrBC,qBAAsB,EACtBC,qBAAsB,EACtBn4C,YAAa,GAGjBzsC,OAAIqjF,IAAAA,IAAOa,EAAY3jB,GACvBvgE,EAAAH,KAAIyjF,IAAAA,IAASY,EAAYl2D,KACzBhuB,EAAAH,KAAI0jF,IAAAA,IAAsB,IAAIlB,GAC9BriF,EAAAH,KAAI6jF,IAAAA,IAAiB,EACrB1jF,EAAAH,KAAI2jF,IAAAA,IAAoB,CAAE,EAC1BxjF,EAAIH,KAAA4jF,IAAAA,IAAoB,GACxBzjF,EAAIH,KAAAw3E,IAAAA,KAAU,EAEdx3E,KAAKglF,oBACT,CAAC,IAAA5kF,EAAAgkF,EAAA/jF,UAIA+jF,OAJAhkF,EAMD6kF,cAAA,SAAch3C,GACV,GAAA9tC,EAAIH,KAAIw3E,IAAAA,IACJ,KAAM,gBAEV,IAAMpE,EAAcpzE,KAAKozE,YACnB8R,EAAqBj3C,EAAyBnN,gBAAgB39B,OACpE,GAAKhD,EAAAH,KAAI6jF,IAAAA,IAAiBqB,EAtGV,KAuGZ,OACH,EAGD,IAFA,IAAInvD,EAAe,EACf8R,EAAa,EACRpkC,EAAI,EAAGA,EAAIyhF,EAAoBzhF,IAAK,CACzC,IAAM69B,EAAiB2M,EAAyBnN,gBAAgBr9B,GAChEsyB,GAAgBuL,EAAexP,oBAAoB3uB,OAC/Cm+B,EAAelK,UACfyQ,GAAcvG,EAAelK,QAAQj0B,OAE5C,CAKD,OAAQiwE,EAAYxmC,YAFH7W,GAFEkY,EAAyBrN,YAAchzB,GAAmB,EAAKqgC,EAAyBrN,WAAa/yB,GAAiB,EAAI,IAI9Fs3E,SADtBt9C,EAAa,EACgEA,GAAes9C,OACzH,EAAC/kF,EAEDglF,YAAA,SAAYv3C,GACR,OAAO1tC,EAAIH,KAAA2jF,IAAAA,IAAkB91C,EACjC,EAACztC,EAED4tC,yBAAA,SAAyBC,GACrB,GAAA9tC,EAAIH,KAAIw3E,IAAAA,IACJ,KAAM,gBAGV,IADA,IAAM6N,EAAwB,GACrB5hF,EAAI,EAAG8S,EAAM03B,EAAyBnN,gBAAgB39B,OAAQM,EAAI8S,EAAK9S,IAC5E4hF,EAAsBjiF,KAAIjD,EAACH,KAAIgkF,IAAAA,IAAuB/1C,EAAyBnN,gBAAgBr9B,KAEnGtD,EAAAH,KAAI2jF,IAAAA,IAAkB11C,EAAyB3jC,IAAsB,CACjEA,GAAI2jC,EAAyB3jC,GAC7BqnB,KAAMsc,EAAyBtc,KAC/BC,0BAA2Bqc,EAAyBrc,0BACpDyzD,sBAAAA,EAER,EAACjlF,EAyED6sC,WAAA,SAAWxI,GAAsB,IAAAr5B,EAAApL,KAC7B,GAAAG,EAAIH,KAAIw3E,IAAAA,IACJ,MAAM,IAAIhzE,MAAM,iBAEpB,IAAM48B,EAAYphC,KAAK4kF,WAAWt4C,UAElC,IAAK7H,EAAWoJ,WACZ,MAAM,IAAIrpC,MAAM,uBAEpB,IAAM8gF,EAAiBnlF,OAAIwjF,IAAAA,IAAkBl/C,EAAWoJ,YACxD,IAAKy3C,EACD,UAAU9gF,MAAM,sBAEpB8gF,EAAeD,sBAAsB18D,QAAQ,SAAC48D,GAC1BplF,EAAGiL,EAAI64E,IAAAA,IAAiBx/C,EAAY6gD,EAAgBC,EAExE,GAGA,IAFA,IAAMC,EAAYxwD,KACZywD,EAAcxwD,GAAYqwD,EAAe3zD,MACtCluB,EAAI,EAAG8S,EAAMkvE,EAAYtiF,OAAQM,EAAI8S,EAAK9S,GAAK,EACpDyL,GAAU,GAAKu2E,EAAYhiF,EAAI,GAC/ByL,GAAU,GAAKu2E,EAAYhiF,EAAI,GAC/ByL,GAAU,GAAKu2E,EAAYhiF,EAAI,GAC3BghC,EAAWnoB,QACX1B,GAAgB6pB,EAAWnoB,OAAQpN,GAAWQ,IAE9C0lB,GAAkBowD,EAAW91E,KAE7B0lB,GAAkBowD,EAAW91E,IAIrC,OADA1P,KAAK4kF,WAAWt4C,YACTlL,CACX,EAAChhC,EAgGD69B,MAAA,WACI,GAAA99B,EAAIH,KAAIw3E,IAAAA,IACJ,MAAU,IAAAhzE,MAAM,iBAEpB,IAAMk8D,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IACTkC,EAAiBvlF,EAAGH,KAAI0jF,IAAAA,IACxB/P,EAAiB3zE,KAAKozE,YAAYO,eACxCA,EAAejjD,mBF1ToBgwC,EAA4BhwC,GACnE,IACM2wC,EAAe,KACfC,EAAgB93D,KAAKm8E,KAFPj1D,EAAUvtB,OAAS,EAEOk+D,GAC9C,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAIzwC,YADAuwC,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAI+T,EAAW,GAC3B,IAAM4c,EAAUozB,EAAG3zB,gBAUnB,OATA2zB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAGklB,QAASvkB,EAAcC,GAC5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAGmlB,YAAanlB,EAAGgG,eAAgBnF,EAAa,GACtHb,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,eACtD3B,EAAGe,YAAYf,EAAGoB,WAAY,MAEnB,IAAAV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,GACzD,CEkSmCwkB,CAA2BplB,EAAIglB,EAAkB5zD,qBAC5E6hD,EAAeO,uBF9RsBxT,EAA4BwT,GACrE,GAA4B,GAAxBA,EAAc/wE,OACd,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKzR,EAAc/wE,OAAS,EAAIk+D,GAC3D,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAInzC,WADAizC,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GACjBm3B,EAAY5kD,IAAIu3D,EAAe,GAC/B,IAAM5mC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAGqlB,OAAQ1kB,EAAcC,GAC3DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAGmlB,YAAanlB,EAAG2F,cAAe9E,EAAa,GACrHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,MACvB,IAAIV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CEsQuC0D,CAA6BtlB,EAAIglB,EAAkBxR,eAClFP,EAAeY,eFlQP,SAA8B7T,EAA4B6T,GACtE,GAA6B,GAAzBA,EAAepxE,OACf,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKpR,EAAepxE,OAAS,EAAIk+D,GAC5D,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAIzwC,YADAuwC,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAI43D,EAAgB,GAChC,IAAMjnC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAGklB,QAASvkB,EAAcC,GAC5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAGmlB,YAAanlB,EAAGgG,eAAgBnF,EAAa,GACtHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,MACvB,IAAIV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CEyOwC2D,CAA8BvlB,EAAIglB,EAAkBnR,gBACpFZ,EAAee,eFrOP,SAA8BhU,EAA4BgU,GACtE,GAA6B,GAAzBA,EAAevxE,OACf,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKjR,EAAevxE,OAAS,EAAIk+D,GAC5D,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAI34B,YADAy4B,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAI+3D,EAAgB,GAChC,IAAMpnC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAGwlB,QAAS7kB,EAAcC,GAC5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAGmlB,YAAanlB,EAAGkG,aAAcrF,EAAa,GACpHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,MACnB,IAAAV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CE4MwC6D,CAA8BzlB,EAAIglB,EAAkBhR,gBACpFf,EAAeuD,kBFxMP,SAAiCxW,EAA4BwW,GACzE,GAAgC,GAA5BA,EAAkB/zE,OAClB,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKzO,EAAkB/zE,OAAS,EAAIk+D,GAC/D,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAInzC,WADAizC,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAIu6D,EAAmB,GACnC,IAAM5pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG0lB,MAAO/kB,EAAcC,GAC1DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAG8G,WAAY9G,EAAG2F,cAAe9E,EAAa,GACpHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,MACnB,IAAAV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CE+K2C+D,CAAiC3lB,EAAIglB,EAAkBxO,mBAC1FvD,EAAewD,mBF3KP,SAAkCzW,EAA4ByW,GAC1E,GAAiC,GAA7BA,EAAmBh0E,OACnB,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKxO,EAAmBh0E,OAAS,EAAIk+D,GAChE,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAIzwC,YADAuwC,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAIw6D,EAAoB,GACpC,IAAM7pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG4lB,OAAQjlB,EAAcC,GAC3DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAG8G,WAAY9G,EAAGgG,eAAgBnF,EAAa,GACrHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,UACnBV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CEkJ4CiE,CAAkC7lB,EAAIglB,EAAkBvO,oBAC5FxD,EAAeyD,4BF9I2B1W,EAA4B0W,GAC1E,GAAiC,GAA7BA,EAAmBj0E,OACnB,OAAOm/E,GAEX,IAAMjhB,EAAe,KACfC,EAAgB93D,KAAKm8E,KAAKvO,EAAmBj0E,OAAS,EAAIk+D,GAChE,GAAqB,GAAjBC,EACA,KAAM,sBAEV,IACMC,EAAc,IAAI34B,YADAy4B,EAAeC,EAAgB,GAGvDC,EAAYn3B,KAAK,GAEjBm3B,EAAY5kD,IAAIy6D,EAAoB,GACpC,IAAM9pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG8lB,OAAQnlB,EAAcC,GAC3DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAGT,EAAcC,EAAeZ,EAAG8G,WAAY9G,EAAGkG,aAAcrF,EAAa,GACnHghB,GAAgC7hB,GAChCA,EAAGe,YAAYf,EAAGoB,WAAY,MACvB,IAAIV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAAAA,EAAcC,cAAAA,KAP1CghB,EAQf,CEqH4CmE,CAAkC/lB,EAAIglB,EAAkBtO,oBAC5FzD,EAAeG,mBFtGP,SAAoCpT,EAA4BgmB,EAA2BC,EAA+BC,EAA4BC,EAAiCC,GAanM,IAAMxlB,EAAgBolB,EAAOvjF,OAC7B,GAAqB,GAAjBm+D,EACA,KAAM,sBAIV,IAFA,IACMC,EAAc,IAAInzC,WAAW,GAAmBkzC,GAC7C79D,EAAI,EAAGA,EAAI69D,EAAe79D,IAC/B89D,EAAY5kD,IAAI+pE,EAAQjjF,GAAQ,GAAJA,EAAS,GACrC89D,EAAY5kD,IAAIgqE,EAAYljF,GAAQ,GAAJA,EAAS,GACzC89D,EAAY5kD,IAAI,CAAC,EAAG,EAAG,EAAG,GAAQ,GAAJlZ,EAAS,GACvC89D,EAAY5kD,IAAI,CAAC,EAAG,EAAG,EAAG,GAAQ,GAAJlZ,EAAS,IACvC89D,EAAY5kD,IAAI,CAAEiqE,EAAYnjF,IAAM,GAAM,IAAMmjF,EAAYnjF,IAAM,GAAM,IAAMmjF,EAAYnjF,IAAM,EAAK,IAAwB,IAAlBmjF,EAAYnjF,IAAgB,GAAJA,EAAS,IAC5I89D,EAAY5kD,IAAI,CAAEkqE,EAAiBpjF,IAAM,GAAM,IAAMojF,EAAiBpjF,IAAM,GAAM,IAAMojF,EAAiBpjF,IAAM,EAAK,IAA6B,IAAvBojF,EAAiBpjF,IAAgB,GAAJA,EAAS,IAChK89D,EAAY5kD,IAAI,CAAEmqE,EAAqBrjF,IAAM,GAAM,IAAMqjF,EAAqBrjF,IAAM,GAAM,IAAMqjF,EAAqBrjF,IAAM,EAAK,IAAiC,IAA3BqjF,EAAqBrjF,IAAgB,GAAJA,EAAS,IAGpL,IAAM6pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAGqmB,QAjBhB,EAiBuCzlB,GAC5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAlBjB,EAkBkCR,EAAeZ,EAAG+G,aAAc/G,EAAG2F,cAAe9E,EAAa,GACtHb,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,eACtD3B,EAAGe,YAAYf,EAAGoB,WAAY,MACvB,IAAIV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAxBlB,EAwBgCC,cAAAA,EAAeC,YAAAA,KAVzD+gB,EAWf,CE4D4C0E,CAAoCtmB,EACpEglB,EAAkB7C,cAClB6C,EAAkB5C,kBAClB4C,EAAkBhD,0BAClBgD,EAAkB/C,4BAClB+C,EAAkB9C,2BACtBjP,EAAeE,iBFrBP,SAAkCnT,EAA4BumB,EAAyCC,GAQnH,IAAM5lB,EAAgB2lB,EAAuB9jF,OAC7C,GAAqB,GAAjBm+D,EACA,KAAM,sBAKV,IAHA,IAEMC,EAAc,IAAI4lB,GAAa,GAAmB7lB,GAC/C79D,EAAI,EAAGA,EAAIwjF,EAAuB9jF,OAAQM,IAC/C89D,EAAY5kD,IAAIsqE,EAAwBxjF,GAAQ,GAAJA,GAC5C89D,EAAY5kD,IAAIuqE,EAAUzjF,GAAQ,GAAJA,EAAS,IAE3C,IAAM6pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG4N,QAZhB,GAYuChN,GAE5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAdjB,GAckCR,EAAeZ,EAAGsG,KAAMtG,EAAGoG,WAAY,IAAIh2C,YAAYywC,EAAYtzC,QAAS,GACnIyyC,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,eACtD3B,EAAGe,YAAYf,EAAGoB,WAAY,MACnB,IAAAV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aApBlB,GAoBgCC,cAAAA,KAX1CghB,EAYf,CEZ0C8E,CAAkC1mB,EAAIglB,EAAkB1C,kCAAmC0C,EAAkB7R,kBAO/IF,EAAemC,wBFjEyBpV,EAA4B2mB,GACxE,IAAM/lB,EAAgB+lB,EAAQlkF,OAC9B,GAAqB,GAAjBm+D,EACA,KAAM,sBAIV,IAFA,IACMC,EAAc,IAAI3wD,aAAa,EAAmB0wD,GAC/C79D,EAAI,EAAGA,EAAI4jF,EAAQlkF,OAAQM,IAChC89D,EAAY5kD,IAAI0qE,EAAS5jF,GAAQ,EAAJA,GAEjC,IAAM6pC,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG4mB,OAVhB,EAUsChmB,GAC3DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAXjB,EAWkCR,EAAeZ,EAAG6mB,IAAK7mB,EAAGmG,MAAOtF,EAAa,GACrGb,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,eACtD3B,EAAGe,YAAYf,EAAGoB,WAAY,MACvB,IAAIV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAjBlB,EAiBgCC,cAAAA,EAAeC,YAAAA,KAVzD+gB,EAWf,CE0CwCkF,CAAgC9mB,EAAIglB,EAAkB5P,gBACtFnC,EAAe11C,QAEf99B,EAAAH,KAAI0jF,IAAAA,IAAsB,KAC1BvjF,EAAAH,KAAI2jF,IAAAA,IAAoB,CAAE,EAC1BxjF,EAAIH,KAAA4jF,IAAAA,IAAoB,GACxBzjF,EAAIH,KAAAw3E,IAAAA,KAAU,CAClB,EAACp3E,EAEDqnF,QAAA,WACI,OAAoC,GAAzBznF,KAAC4kF,WAAWt4C,SAC3B,EAAClsC,EAEDsnF,UAAA,SAAUtmD,EAAmBumD,EAAeC,GACpCD,EAAQxP,GAAmBC,SAC3Bp4E,KAAK4kF,WAAWlN,aAEhBiQ,EAAQxP,GAAmBS,aAC3B54E,KAAK4kF,WAAW7M,iBAEhB4P,EAAQxP,GAAmBQ,QAC3B34E,KAAK4kF,WAAW/M,YAEhB8P,EAAQxP,GAAmBU,UAC3B74E,KAAK4kF,WAAW9M,cAEhB6P,EAAQxP,GAAmBI,WAC3Bv4E,KAAK4kF,WAAW5M,eAEhB2P,EAAQxP,GAAmBW,OAC3B94E,KAAK4kF,WAAWhN,WAEhB+P,EAAQxP,GAAmBG,UAC3Bt4E,KAAK4kF,WAAW3M,cAEhB0P,EAAQxP,GAAmBE,QAC3Br4E,KAAK4kF,WAAW1M,YAEhB0P,GACA5nF,KAAK4kF,WAAWjN,iBAEpBx3E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAOC,GACrCznF,EAAIH,KAAAmkF,IAAAA,IAAgB/iD,EAAWumD,EACnC,EAACvnF,EAED4kF,mBAAA,WACI7kF,EAAAH,KAAI8jF,IAAAA,KAA2B,CACnC,EAAC1jF,EAEDynF,oBAAA,WAEI,GADA1nF,EAAIH,KAAA8jF,IAAAA,KAA2B,EAC3B3jF,EAACH,KAAI+jF,IAAAA,IAAT,CAGA5jF,EAAIH,KAAA+jF,IAAAA,KAA0B,EAC9B,IAAMrjB,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IACT7P,EAAiB3zE,KAAKozE,YAAYO,eAExCjT,EAAGe,YAAYf,EAAGoB,WAAY6R,EAAeG,mBAAmBxmC,SAEhEozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAG6R,EAAeG,mBAAmBzS,aAAcsS,EAAeG,mBAAmBxS,cAAeZ,EAAG+G,aAAc/G,EAAG2F,cAAesN,EAAeG,mBAAmBvS,aAE/Mb,EAAGe,YAAYf,EAAGoB,WAAY6R,EAAemC,eAAexoC,SAE5DozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAG6R,EAAemC,eAAezU,aAAcsS,EAAemC,eAAexU,cAAeZ,EAAG6mB,IAAK7mB,EAAGmG,MAAO8M,EAAemC,eAAevU,YAXjL,CAYL,EAACnhE,EAED0nF,eAAA,WACI9nF,KAAK6nF,qBACT,EAACznF,EAED2nF,eAAA,SAAe3mD,EAAmBumD,EAAe51B,GAC7C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBC,QAE3Bp4E,KAAK4kF,WAAWlN,aAEhB13E,KAAK4kF,WAAWlN,aAEpBv3E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAED4nF,mBAAA,SAAmB5mD,EAAmBumD,EAAe51B,GACjD,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBS,YAC3B54E,KAAK4kF,WAAW7M,iBAEhB/3E,KAAK4kF,WAAW7M,iBAEpB53E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAED6nF,cAAA,SAAc7mD,EAAmBumD,EAAe51B,GAC5C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBQ,OAC3B34E,KAAK4kF,WAAW/M,YAEhB73E,KAAK4kF,WAAW/M,YAEpB13E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAED8nF,gBAAA,SAAgB9mD,EAAmBumD,EAAe51B,GAC9C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBU,SAC3B74E,KAAK4kF,WAAW9M,cAEhB93E,KAAK4kF,WAAW9M,cAEpB33E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAED+nF,aAAA,SAAa/mD,EAAmBumD,EAAe51B,GAC3C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBW,MAC3B94E,KAAK4kF,WAAWhN,WAEhB53E,KAAK4kF,WAAWhN,WAEpBz3E,OAAI+jF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAEDgoF,iBAAA,SAAiBhnD,EAAmBumD,GAChC,IAAIxnF,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBI,UAC3Bv4E,KAAK4kF,WAAW5M,eAEhBh4E,KAAK4kF,WAAW5M,eAEpB73E,EAAIH,KAAAmkF,IAAAA,IAAgB/iD,EAAWumD,EACnC,EAACvnF,EAEDioF,cAAA,SAAcjnD,EAAmBumD,EAAe51B,GAC5C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBE,OAC3Br4E,KAAK4kF,WAAW1M,YAEhBl4E,KAAK4kF,WAAW1M,YAEpB/3E,EAAIH,KAAAkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAEDkoF,kBAAA,SAAkBlnD,EAAmBumD,GACjC,IAAIxnF,EAACH,KAAIw3E,IAAAA,IACL,KAAM,WAEd,EAACp3E,EAEDmoF,gBAAA,SAAgBnnD,EAAmBumD,EAAe51B,GAC9C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENmQ,EAAQxP,GAAmBG,SAC3Bt4E,KAAK4kF,WAAW3M,cAEhBj4E,KAAK4kF,WAAW3M,cAEpB93E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EAEDooF,aAAA,SAAapnD,EAAmBwD,EAAwBmtB,GACpD,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAEV,IAAM7D,EAAiB3zE,KAAKozE,YAAYO,eAClCjT,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IACfF,GAAiB,GAAK1+C,EAAM,GAC5B0+C,GAAiB,GAAK1+C,EAAM,GAC5B0+C,GAAiB,GAAK1+C,EAAM,GAC5B0+C,GAAiB,GAAK1+C,EAAM,GAE5B+uC,EAAeG,mBAAmBvS,YAAY5kD,IAAI2mE,GAA6B,GAAZliD,GACnEjhC,EAAIH,KAAI8jF,IAAAA,IACJ3jF,OAAI4jF,IAAAA,KAA0B,GAIlCrjB,EAAGe,YAAYf,EAAGoB,WAAY6R,EAAeG,mBAAmBxmC,SAChEozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG1gC,EAAW,EAAG,EAAGs/B,EAAG+G,aAAc/G,EAAG2F,cAAeid,IAE9F,EAACljF,EAEDqoF,mBAAA,SAAmBrnD,EAAmBumD,EAAe51B,GACjD,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAENzlB,GACA/xD,KAAK4kF,WAAWjN,iBAChB33E,KAAK4kF,WAAWjN,mBAEhB33E,KAAK4kF,WAAWjN,iBAChB33E,KAAK4kF,WAAWjN,kBAEpBx3E,EAAAH,KAAIkkF,IAAAA,IAAe9iD,EAAWumD,EAAO51B,EACzC,EAAC3xD,EA+FDsoF,cAAA,SAActnD,EAAmBlL,GAC7B,IAAI/1B,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAGV,IAAM9W,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IACfD,GAAmB,GAAKrtD,EAAO,GAC/BqtD,GAAmB,GAAKrtD,EAAO,GAC/BqtD,GAAmB,GAAKrtD,EAAO,GAE/B/1B,EAAIH,KAAI8jF,IAAAA,IACJ3jF,OAAI4jF,IAAAA,KAA0B,EAIlCrjB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG1gC,EAAW,EAAG,EAAGs/B,EAAG6mB,IAAK7mB,EAAGmG,MAAO0c,GAE7E,EAACnjF,EAEDuoF,cAAA,SAAcvnD,EAAmB9kB,GAC7B,IAAInc,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAGFr3E,EAAGH,KAAIwjF,IAEfrjF,EAAIH,KAAI8jF,IAAAA,MACJ3jF,EAAAH,KAAI+jF,IAAAA,KAA0B,EAItC,EAAC3jF,EAEDwoF,uBAAA,SAAuBxnD,EAAmBvb,GACtC,IAAI1lB,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAGFr3E,EAAGH,KAAIwjF,IAOfrjF,EAAIH,KAAI8jF,IAAAA,MACJ3jF,EAAAH,KAAI+jF,IAAAA,KAA0B,EAOtC,EAAC3jF,EAED6K,QAAA,WACIjL,KAAKozE,YAAYO,eAAe1oE,SACpC,EAAC/J,EAAAkjF,IAAAjjF,IAAA,OAAAC,IA5nBD,WACI,eAAgBpB,KAAKozE,YAAYxyC,SACrC,KAACwjD,CAAA,CA/BD,GA0pBH,SAAAM,GA5kByBpjD,GAClB,IAAM8xC,EAAcpzE,KAAKozE,YACzB,GAAI9xC,EAAelK,QAAS,CACxB,IAAMyxD,EAAmB7oF,KAAKozE,YAAYxyC,YAAchzB,GAAkB,EAAK5N,KAAKozE,YAAYxyC,YAAc/yB,GAAiB,EAAI,EAC7Hi7E,EAAoBt/E,KAAKm8E,KAAMrkD,EAAelK,QAAQj0B,OAAS0lF,EAAmBzF,IAAuCA,GAAsCyF,EAC/JE,EAAiB,IAAIngD,YAAYkgD,GACvCC,EAAe3+C,KAAK,GACpB2+C,EAAepsE,IAAI2kB,EAAelK,SAClCkK,EAAelK,QAAU2xD,CAC5B,CACD,GAAIznD,EAAeb,YAAa,CAC5B,IAAMuoD,EAAwBx/E,KAAKm8E,KAAMrkD,EAAeb,YAAYt9B,OAAS,EAAKigF,IAAuCA,GAAsC,EACzJ6F,EAAqB,IAAIrgD,YAAYogD,GAC3CC,EAAmB7+C,KAAK,GACxB6+C,EAAmBtsE,IAAI2kB,EAAeb,aACtCa,EAAeb,YAAcwoD,CAChC,CAOD,IANA,IASIC,EATExD,EAAiBvlF,EAAGH,KAAI0jF,IAAAA,IACxB5xD,EAAsBwP,EAAexP,oBACrCsF,EAAUkK,EAAelK,QACzBqJ,EAAca,EAAeb,YAC7B0oD,EAAazD,EAAkB5zD,oBAAoB3uB,OAAS,EAC5DypC,EAAc9a,EAAoB3uB,OAAS,EACxCM,EAAI,EAAG8S,EAAMub,EAAoB3uB,OAAQM,EAAI8S,EAAK9S,IACvDiiF,EAAkB5zD,oBAAoB1uB,KAAK0uB,EAAoBruB,IAGnE,IAgBI2lF,EAhBAz8C,EAAe,EACnB,GAAIvV,EAAS,CAET,IAAIiyD,EADJ18C,EAAevV,EAAQj0B,OAAS,EAShC+lF,GANIG,EADAz8C,GAAgB,IACA84C,EAAkBxR,cAC3BtnC,GAAgB,MACP84C,EAAkBnR,eAElBmR,EAAkBhR,gBAEVvxE,OAAS,EACrC,IAAK,IAAIM,EAAI,EAAG8S,EAAM6gB,EAAQj0B,OAAQM,EAAI8S,EAAK9S,IAC3C4lF,EAAcjmF,KAAKg0B,EAAQ3zB,GAElC,CAED,IAAIm0E,EAAW,EACf,GAAIn3C,EAAa,CAEb,IAAI6oD,EADJ1R,EAAWn3C,EAAYt9B,OAAS,EAShCimF,GANIE,EADA18C,GAAgB,IACI84C,EAAkBxO,kBAC/BtqC,GAAgB,MACH84C,EAAkBvO,mBAElBuO,EAAkBtO,oBAENj0E,OAAS,EAC7C,IAAK,IAAIM,EAAI,EAAG8S,EAAMkqB,EAAYt9B,OAAQM,EAAI8S,EAAK9S,IAC/C6lF,EAAkBlmF,KAAKq9B,EAAYh9B,GAE1C,CAED,OADA2vE,EAAYxmC,aAAeA,EACE,CACzBu8C,WAAAA,EACAv8C,YAAAA,EACAD,aAAAA,EACAirC,SAAAA,EACAsR,YAAAA,EACAE,gBAAAA,EAER,CAAC,SAAA3E,GAqCehgD,EAAwB6gD,EAAgCC,GAEpE,IAkBIgE,EAlBE7D,EAAiBvlF,EAAGH,KAAI0jF,IAAAA,IAExBtQ,EAAcpzE,KAAKozE,YAEnB92D,EAASmoB,EAAWnoB,QAAU+mE,GAC9Bz+C,EAAQH,EAAWG,OAAS,CAAC,IAAK,IAAK,KAMvC4kD,EADiB9D,EAAkB5zD,oBAAoB3uB,OACzB,EAEpCuiF,EAAkB1C,kCAAkC5/E,KAAKkiF,EAAe1zD,2BACxE8zD,EAAkB7R,iBAAiBzwE,KAAKkZ,GACxCopE,EAAkB7C,cAAcz/E,KAAK,CAACwhC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI,MACpE8gD,EAAkB5C,kBAAkB1/E,KAAKqhC,EAAWglD,WAIhDF,EADAhE,EAAqB34C,aAAgB,IACjBwmC,EAAYY,gBACzBuR,EAAqB34C,aAAgB,MACxBwmC,EAAYiB,iBAEZjB,EAAYoB,iBAEpCkR,EAAkBhD,0BAA0Bt/E,KAAKmiF,EAAqB4D,YACtEzD,EAAkB/C,4BAA4Bv/E,KAAKmmF,EAAoB,EAAIhE,EAAqB2D,aAYhGxD,EAAkB9C,0BAA0Bx/E,MAPxCmiF,EAAqB34C,aAAgB,IACbwmC,EAAYyR,oBAC7BU,EAAqB34C,aAAgB,MACpBwmC,EAAY0R,qBAEZ1R,EAAY2R,sBAEiC,EAAIQ,EAAqB6D,iBAIlG,IAAMM,EAAavpF,EAAAH,KAAI4jF,IAAAA,IAAkBzgF,OAEzC,GAAIoiF,EAAqB54C,aAAe,EAAG,CACvC,IACIg9C,EADE9hD,EAAiD,EAApC09C,EAAqB54C,aAEpC44C,EAAqB34C,aAAgB,KACrC+8C,EAA0BjE,EAAkBzR,wBAC5Cb,EAAYY,iBAAmBnsC,GACxB09C,EAAqB34C,aAAgB,OAC5C+8C,EAA0BjE,EAAkBpR,yBAC5ClB,EAAYiB,kBAAoBxsC,IAEhC8hD,EAA0BjE,EAAkBjR,yBAC5CrB,EAAYoB,kBAAoB3sC,GAEpC,IAAK,IAAIpkC,EAAI,EAAGA,EAAI8hF,EAAqB54C,aAAclpC,GAAK2/E,GACxDuG,EAAwBvmF,KAAKsmF,EAEpC,CAID,GAAInE,EAAqB3N,SAAW,EAAG,CACnC,IACIgS,EADAC,EAAiD,EAAhCtE,EAAqB3N,SAEtC2N,EAAqB34C,aAAgB,KACrCg9C,EAA0BlE,EAAkBrO,mBAC5CjE,EAAYyR,qBAAuBgF,GAC5BtE,EAAqB34C,aAAgB,OAC5Cg9C,EAA0BlE,EAAkBpO,oBAC5ClE,EAAY0R,sBAAwB+E,IAEpCD,EAA0BlE,EAAkBnO,oBAC5CnE,EAAY2R,sBAAwB8E,GAExC,IAAK,IAAIpmF,EAAI,EAAGA,EAAI8hF,EAAqB3N,SAAUn0E,GAAK2/E,GACpDwG,EAAwBxmF,KAAKsmF,EAEpC,CAQD,OAPAhE,EAAkB5P,eAAe1yE,KAAK,CAAC,EAAG,EAAG,IAE7CjD,OAAIyjF,IAAAA,IAAkBxgF,KAAqB,CACvC0mF,UAAWN,EACXO,SAAUxE,EAAqB54C,eAEnCxsC,EAAAH,KAAI6jF,IAAAA,MACG6F,CACX,CAAC,SAAAlF,GA+OapjD,EAAmBumD,EAAe51B,GAC5C,IAAI5xD,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAEV,IAOIwS,EAUAC,EAYAC,EA7BE5rC,KAAaqpC,EAAQxP,GAAmBC,SACxCz5B,KAAYgpC,EAAQxP,GAAmBQ,QACvC95B,KAAiB8oC,EAAQxP,GAAmBS,aAC5Ch6B,KAAc+oC,EAAQxP,GAAmBU,UAGzCt6B,KAAYopC,EAAQxP,GAAmBE,QAGzC2R,GADC1rC,GAAWC,GAAUI,EACjB0yB,GAAcC,aAEfvf,EACKsf,GAAcG,kBAEdH,GAAcE,aAKvB0Y,GADC3rC,GAAWC,EACP8yB,GAAcC,aACZ1yB,EACFyyB,GAAcK,oBACZ7yB,EACFwyB,GAAcI,uBACZ9yB,EACF0yB,GAAcM,kBAEdN,GAAcC,aAInB4Y,GADC5rC,GAAWC,EACP8yB,GAAcC,aACZ1yB,EACFyyB,GAAcU,eACZlzB,EACFwyB,GAAcS,kBACZnzB,EACF0yB,GAAcW,aAjCN2V,EAAQxP,GAAmBW,MAmCpC/mB,EACKsf,GAAcQ,wBAEdR,GAAcO,mBAGlBP,GAAcC,aAEvB,IAAI6Y,EAAM7rC,IAAYC,GA1CFopC,EAAQxP,GAAmBG,SA0CHjH,GAAcY,KAAOZ,GAAcC,aACzEqC,EAAiB3zE,KAAKozE,YAAYO,eAClCjT,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IAKf,GAJAF,GAAiB,GAAK0G,EACtB1G,GAAiB,GAAK2G,EACtB3G,GAAiB,GAAK4G,EACtB5G,GAAiB,GAAK6G,EACtBhqF,EAAIH,KAAI8jF,IAAAA,IAIJ,OAFAnQ,EAAeG,mBAAmBvS,YAAY5kD,IAAI2mE,GAA6B,GAAZliD,EAAiB,QACpFjhC,OAAI4jF,IAAAA,KAA0B,GAIlCrjB,EAAGe,YAAYf,EAAGoB,WAAY6R,EAAeG,mBAAmBxmC,SAChEozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG1gC,EAAW,EAAG,EAAGs/B,EAAG+G,aAAc/G,EAAG2F,cAAeid,GAE9F,CAAC,SAAAiB,GAEcnjD,EAAmBumD,GAC9B,IAAIxnF,EAACH,KAAIw3E,IAAAA,IACL,KAAM,YAEV,IAAM/4B,EAAekpC,EAAQxP,GAAmBI,UAAa,IAAM,EAC7D5E,EAAiB3zE,KAAKozE,YAAYO,eAClCjT,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IAKf,GAJAF,GAAiB,GAAK7kC,EACtB6kC,GAAiB,GAAK,EACtBA,GAAiB,GAAK,EACtBA,GAAiB,GAAK,EACtBnjF,EAAIH,KAAI8jF,IAAAA,IAIJ,OAFAnQ,EAAeG,mBAAmBvS,YAAY5kD,IAAI2mE,GAA6B,GAAZliD,EAAiB,SACpFjhC,EAAIH,KAAA+jF,IAAAA,KAA0B,GAIlCrjB,EAAGe,YAAYf,EAAGoB,WAAY6R,EAAeG,mBAAmBxmC,SAChEozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG1gC,EAAW,EAAG,EAAGs/B,EAAG+G,aAAc/G,EAAG2F,cAAeid,GAE9F,CCrrBJ,IAAa8G,GAET,WACC,ECFQC,gBAAmB,WAK5B,SAAAA,EAAY/8C,EAAyBunC,GAHrCvnC,KAAAA,aACAunC,EAAAA,KAAAA,iBAGI70E,KAAKstC,QAAUA,EACfttC,KAAK60E,UAAYA,CACrB,CAMC,OANAwV,EAAAhqF,UAED4K,QAAA,WACQjL,KAAK60E,WACL70E,KAAK60E,UAAU5pE,SAEvB,EAACo/E,CAAA,CAd2B,GCG1BC,GAAa,IAAIx5D,YAAY,CAAC,EAAG,EAAG,IAAIy5D,gBAAA5qF,EAAAsiC,SAAAA,gBAAAtiC,EAAA,QAAA6qF,gBAAA7qF,EAAA,cAAA8qF,gBAAA9qF,EAAA+qF,UAAAA,gBAAA/qF,qBAAAgrF,gBAAAhrF,EAK9C,kBAAairF,gBAAkB,WAgB3B,SAAAA,EAAYjqD,QAdHr2B,QAAE,EAAAtK,KACFw7B,WACAuG,EAAAA,KAAAA,wBACAK,aAAO,EAAApiC,KAEP6qF,oBAAc,EAAA/qF,OAAAC,eAAAwqF,KAAAA,IAAAtqF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAkiC,KAAAA,IAAAhiC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAyqF,KAAAA,GAAAvqF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAA0qF,KAAAA,IAAAxqF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA2qF,KAAAA,IAAAzqF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAA4qF,KAAAA,IAAA1qF,UAAA,EAAAC,WAgBnB,IAAAF,KAAKsK,GAAKq2B,EAAOr2B,GAEjBtK,KAAK6qF,eAAiBlqD,EAAOkqD,gBAAkB,GAC/C1qF,EAAAH,KAAIuqF,IAAAA,IAAU,EACdpqF,OAAI8hC,IAAAA,IAAStB,EAAOhP,KACpBxxB,EAAIH,KAAAwqF,IAAAA,IAAe12D,GAAY6M,EAAOhP,MACtCxxB,EAAAH,KAAIyqF,IAAAA,IAAWp7E,KACflP,EAAAH,KAAI0qF,IAAAA,KAAoB,EACxBvqF,EAAAH,KAAI2qF,IAAAA,KAAmB,EAEvB3qF,KAAKoiC,QAAUzB,EAAOyB,SAAW,KAEjC,IAAK,IAAI3+B,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGqnF,eAAe9qF,KAE9C,CAAC,IAAAI,EAAAwqF,EAAAvqF,UAIA,OAJAD,EAMD6+C,WAAA,SAAWC,EAAmBZ,GAC1B,MAAOn+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBC,WAAa95B,EAArD,CAGAn+C,EAAIH,KAAAuqF,IAAAA,IAAUjsC,EAAUn+C,OAAIoqF,IAAAA,IAAUpS,GAAmBC,QAAUj4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBC,QACrG,IAAK,IAAI30E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGw7C,WAAU9+C,EAACH,KAAIuqF,IAAAA,IAHzC,CAKL,EAACnqF,EAEDy/C,eAAA,SAAeX,EAAmBL,GAC9B,MAAO1+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBS,eAAiB/5B,EAAzD,CAGA1+C,EAAIH,KAAAuqF,IAAAA,IAAU1rC,EAAc1+C,OAAIoqF,IAAAA,IAAUpS,GAAmBS,YAAcz4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBS,YAC7G,IAAK,IAAIn1E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGo8C,eAAc1/C,EAACH,KAAIuqF,IAAAA,IAH7C,CAKL,EAACnqF,EAEDu/C,UAAA,SAAUT,EAAmBP,GACzB,MAAOx+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBQ,UAAYh6B,EAApD,CAGAx+C,EAAIH,KAAAuqF,IAAAA,IAAU5rC,EAASx+C,OAAIoqF,IAAAA,IAAUpS,GAAmBQ,OAASx4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBQ,OACnG,IAAK,IAAIl1E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGk8C,UAASx/C,EAACH,KAAIuqF,IAAAA,IAHxC,CAKL,EAACnqF,EAED0/C,YAAA,SAAYZ,EAAmBN,GAC3B,MAAOz+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBU,YAAcj6B,EAAtD,CAGAz+C,EAAIH,KAAAuqF,IAAAA,IAAU3rC,EAAWz+C,OAAIoqF,IAAAA,IAAUpS,GAAmBU,SAAW14E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBU,SACvG,IAAK,IAAIp1E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGq8C,YAAW3/C,EAACH,KAAIuqF,IAAAA,IAH1C,CAKL,EAACnqF,EAEDw/C,SAAA,SAASV,EAAmB3W,GACxB,MAAOpoC,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBW,SAAWvwC,EAAnD,CAGApoC,EAAIH,KAAAuqF,IAAAA,IAAUhiD,EAAQpoC,OAAIoqF,IAAAA,IAAUpS,GAAmBW,MAAQ34E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBW,MACjG,IAAK,IAAIr1E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGm8C,SAAQz/C,EAACH,KAAIuqF,IAAAA,IAHvC,CAKL,EAACnqF,EAED2qF,UAAA,SAAU7rC,EAAmBX,GACzB,MAAOp+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBE,UAAY95B,EAApD,CAGAp+C,EAAIH,KAAAuqF,IAAAA,IAAUhsC,EAASp+C,OAAIoqF,IAAAA,IAAUpS,GAAmBE,OAASl4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBE,OACnG,IAAK,IAAI50E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGsnF,UAAS5qF,EAACH,KAAIuqF,IAAAA,IAHxC,CAKL,EAACnqF,EAED4qF,aAAA,SAAa9rC,EAAmBT,GAC5B,MAAQt+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBI,aAAgB95B,EAAzD,CAGAt+C,EAAIH,KAAAuqF,IAAAA,IAAU9rC,EAAYt+C,OAAIoqF,IAAAA,IAAUpS,GAAmBI,UAAYp4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBI,UACzG,IAAK,IAAI90E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGunF,aAAY7qF,EAACH,KAAIuqF,IAAAA,IAH3C,CAKL,EAACnqF,EAED6qF,cAAA,SAAc/rC,EAAmBR,GAC7B,MAAOv+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBK,cAAgB95B,EAAxD,CAGAv+C,EAAIH,KAAAuqF,IAAAA,IAAU7rC,EAAav+C,OAAIoqF,IAAAA,IAAUpS,GAAmBK,WAAar4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBK,WAC3G,IAAK,IAAI/0E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGwnF,cAAa9qF,EAACH,KAAIuqF,IAAAA,IAH5C,CAKL,EAACnqF,EAED8qF,YAAA,SAAYhsC,EAAmBV,GAC3B,MAAOr+C,EAAIH,KAAAuqF,IAAAA,IAAUpS,GAAmBG,YAAc95B,EAAtD,CAGAr+C,EAAIH,KAAAuqF,IAAAA,IAAU/rC,EAAWr+C,OAAIoqF,IAAAA,IAAUpS,GAAmBG,SAAWn4E,EAAIH,KAAAuqF,IAAAA,KAAWpS,GAAmBG,SACvG,IAAK,IAAI70E,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGynF,YAAW/qF,EAACH,KAAIuqF,IAAAA,IAH1C,CAKL,EAACnqF,EAED+qF,YAAA,SAAYjsC,EAAmBta,GAC3B,GAAIA,EAAO,CACP0lD,GAAW,GAAK9gF,KAAKwnB,MAAiB,IAAX4T,EAAM,IACjC0lD,GAAW,GAAK9gF,KAAKwnB,MAAiB,IAAX4T,EAAM,IACjC0lD,GAAW,GAAK9gF,KAAKwnB,MAAiB,IAAX4T,EAAM,IACjC,IAAK,IAAInhC,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAG0nF,YAAYb,GAE1C,MACG,IAAK,IAAI7mF,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAG0nF,YAAY,KAG/C,EAAC/qF,EAEDgrF,WAAA,SAAWlsC,EAAmBna,GAC1B,GAAmC,IAA/B/kC,KAAK6qF,eAAe1nF,OAAxB,CAIA,IAAMkoF,EAAuBrrF,KAAK6qF,eAAe,GAAG/rC,SAAS,GACzDwsC,EAAmB,IACvB,GAAIvmD,SAOA,GANIA,EAAU,EACVA,EAAU,EACHA,EAAU,IACjBA,EAAU,GAGVsmD,KADJC,EAAmB9hF,KAAKwnB,MAAgB,IAAV+T,IAE1B,YAIJ,GAAIsmD,KADJC,EAAmB,KAEf,OAGR,IAAK,IAAI7nF,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAG2nF,WAAWE,EAAgBnrF,EAAEH,KAAIuqF,IAAAA,IArB3D,CAuBL,EAACnqF,EAEDmrF,UAAA,SAAUrsC,EAAmBhpB,GAuB5B,EAAA91B,EAED69B,MAAA,WACI,IAAK,IAAIx6B,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGw6B,MAAK99B,EAACH,KAAIuqF,IAAAA,IAEzC,EAACnqF,EAEDorF,UAAA,WACI,IAAK,IAAI/nF,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAG+nF,WAE/B,EAACprF,EAED6K,QAAA,WACI,IAAK,IAAIxH,EAAI,EAAG8S,EAAMvW,KAAK6qF,eAAe1nF,OAAQM,EAAI8S,EAAK9S,IACvDzD,KAAK6qF,eAAepnF,GAAGwH,SAE/B,EAAC/J,EAAA0pF,EAAA,CAAA,CAAAzpF,IAAAC,OAAAA,IAlLD,WACI,OAAAjB,EAAOH,KAAIwqF,IAAAA,GACf,KAACI,CAAA,CA1C0B,GCJzB33E,GAAYD,KACZE,GAAYF,KAMLy4E,gBAsBT,WAAA,SAAAA,EAAY9qD,GAYX3gC,KAhCDsK,QAAE,EAAAtK,KACF4kC,WACA7D,EAAAA,KAAAA,sBACAgC,EAAAA,KAAAA,wBACAzmB,EAAAA,KAAAA,YACAuoB,EAAAA,KAAAA,qBACAC,eAAS,EAAA9kC,KACT+kC,aAAO,EAAA/kC,KACP0rF,YAAM,EAAA1rF,KACN2rF,iBAAW,EAAA3rF,KACX4rF,UACAC,EAAAA,KAAAA,yBACAl6D,EAAAA,KAAAA,UACAysB,EAAAA,KAAAA,WACAhd,EAAAA,KAAAA,sBACA0d,cAAQ,EAAA9+C,KACR8rF,gBAAU,EAAA9rF,KACV+xD,iBAAW,EAgBP/xD,KAAK6rF,oBAAsB,KAC3B7rF,KAAK2rF,YAAchrD,EAAOgrD,YAC1B3rF,KAAKsK,GAAKq2B,EAAOr2B,GACjBtK,KAAK0rF,OAAS,EACd1rF,KAAK4kC,MAAQ,CAACjE,EAAOiE,MAAM,GAAIjE,EAAOiE,MAAM,GAAIjE,EAAOiE,MAAM,GAAIjE,EAAOoE,SACxE/kC,KAAK8+C,SAAW,CAACne,EAAOiE,MAAM,GAAIjE,EAAOiE,MAAM,GAAIjE,EAAOiE,MAAM,GAAIjE,EAAOoE,SAC3E/kC,KAAK8rF,YAAa,EAClB9rF,KAAK+xD,YAAepxB,EAAOoE,QAAU,IACrC/kC,KAAKo+C,MAAQzd,EAAOyd,MACpBp+C,KAAKsc,OAASqkB,EAAOrkB,OACrBtc,KAAK6kC,SAAWlE,EAAOkE,SACvB7kC,KAAK8kC,UAAYnE,EAAOmE,UACxB9kC,KAAK+kC,QAAUpE,EAAOoE,QACtB/kC,KAAK2xB,KAAOmC,KACZ9zB,KAAK+iC,mBAAqBpC,EAAOoC,mBACjC/iC,KAAK+gC,iBAAmBJ,EAAOI,iBAC/B/gC,KAAKohC,UAAYT,EAAOS,SAC5B,CAAC,IAAAhhC,EAAAqrF,EAAAprF,iBAAAD,EAED2rF,qBAAA,WACI,UAAUvnF,MAAM,0BACpB,EAACpE,EAED0qF,eAAA,SAAee,GACX7rF,KAAK6rF,oBAAsBA,CAC/B,EAACzrF,EAED69B,MAAA,SAAM0pD,GAEF3nF,KAAKo+C,MAAMspC,UAAU1nF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YACrD,EAAC3xD,EAEDorF,UAAA,WAEQxrF,KAAKo+C,MAAM0pC,gBACX9nF,KAAKo+C,MAAM0pC,gBAEnB,EAAC1nF,EAED6+C,WAAA,SAAW0oC,GACP3nF,KAAKo+C,MAAM2pC,eAAe/nF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YAC1D,EAAC3xD,EAED6kC,UAAA,SAAU3oB,GACN,IAAMqZ,EAASjb,GAAgB4B,EAAQ,CAAC,EAAG,EAAG,IACxC0vE,EAAUhsF,KAAK4rF,KACrB5rF,KAAK4rF,KAAOI,EAAUhsF,KAAK2rF,YAAYM,iBAAiBD,EAASr2D,GAAU31B,KAAK2rF,YAAYO,QAAQv2D,GACpG,IAAMw2D,GAAeH,GAAWA,EAAQ1hF,KAAOtK,KAAK4rF,KAAKthF,GACnD8hF,EAAapsF,KAAK4rF,KAAKj2D,OAE7B31B,KAAKo+C,MAAMuqC,cAAc3oF,KAAKohC,UADK,IAAlBgrD,EAAW,IAA8B,IAAlBA,EAAW,IAA8B,IAAlBA,EAAW,GAEpExyE,GAAQ0C,EAAQe,IAAkB+uE,EAAW,IAAKA,EAAW,IAAKA,EAAW,GAAIn5E,IAAYC,IAC7FoJ,GACF6vE,GACAnsF,KAAKo+C,MAAMwqC,uBAAuB5oF,KAAKohC,UAAWphC,KAAK4rF,KAAK/lE,MAEpE,EAACzlB,EAED8kC,YAAA,SAAYL,GACX,EAAAzkC,EAED+kC,aAAA,SAAaL,GAAiB,EAC7B1kC,EAED4kC,SAAA,SAASJ,GACL5kC,KAAK4kC,MAAM,GAAKA,EAAM,GACtB5kC,KAAK4kC,MAAM,GAAKA,EAAM,GACtB5kC,KAAK4kC,MAAM,GAAKA,EAAM,GACjB5kC,KAAK8rF,YACN9rF,KAAKo+C,MAAMoqC,aAAaxoF,KAAKohC,UAAWphC,KAAK4kC,MAErD,EAACxkC,EAED+qF,YAAA,SAAYrsC,GAEJA,GACA9+C,KAAK8+C,SAAS,GAAKA,EAAS,GAC5B9+C,KAAK8+C,SAAS,GAAKA,EAAS,GAC5B9+C,KAAK8+C,SAAS,GAAKA,EAAS,GAC5B9+C,KAAKo+C,MAAMoqC,aAAaxoF,KAAKohC,UAAWphC,KAAK8+C,UAL9B,GAMf9+C,KAAK8rF,YAAa,IAElB9rF,KAAKo+C,MAAMoqC,aAAaxoF,KAAKohC,UAAWphC,KAAK4kC,OAR9B,GASf5kC,KAAK8rF,YAAa,EAE1B,EAAC1rF,EAEDgrF,WAAA,SAAWrmD,EAAiB4iD,GACxB,IAAM0E,EAAkBtnD,EAAU,IAE5BunD,EADkBtsF,KAAK+xD,cACqBs6B,EAClDrsF,KAAK4kC,MAAM,GAAKG,EAChB/kC,KAAK8+C,SAAS,GAAK/Z,EACnB/kC,KAAK+xD,YAAcs6B,EAEfrsF,KAAKo+C,MAAMoqC,aAAaxoF,KAAKohC,UAD7BphC,KAAK8rF,WACmC9rF,KAAK8+C,SAEL9+C,KAAK4kC,OAE7C0nD,GACAtsF,KAAKo+C,MAAMqqC,mBAAmBzoF,KAAKohC,UAAWumD,EAAO0E,EAE7D,EAACjsF,EAEDy/C,eAAA,SAAe8nC,GACX3nF,KAAKo+C,MAAM4pC,mBAAmBhoF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YAC9D,EAAC3xD,EAEDu/C,UAAA,SAAUgoC,GACN3nF,KAAKo+C,MAAM6pC,cAAcjoF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YACzD,EAAC3xD,EAED0/C,YAAA,SAAY6nC,GACR3nF,KAAKo+C,MAAM8pC,gBAAgBloF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YAC3D,EAAC3xD,EAEDw/C,SAAA,SAAS+nC,GACL3nF,KAAKo+C,MAAM+pC,aAAanoF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YACxD,EAAC3xD,EAED4qF,aAAA,SAAarD,GACT3nF,KAAKo+C,MAAMgqC,iBAAiBpoF,KAAKohC,UAAWumD,EAChD,EAACvnF,EAED6qF,cAAA,SAActD,GACV3nF,KAAKo+C,MAAMkqC,kBAAkBtoF,KAAKohC,UAAWumD,EACjD,EAACvnF,EAED8qF,YAAA,SAAYvD,GACR3nF,KAAKo+C,MAAMmqC,gBAAgBvoF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YAC3D,EAAC3xD,EAED2qF,UAAA,SAAUpD,GACN3nF,KAAKo+C,MAAMiqC,cAAcroF,KAAKohC,UAAWumD,EAAO3nF,KAAK+xD,YACzD,EAAC3xD,EAEDmsF,gBAAA,WACI,OACJ,CAAA,EAACnsF,EAEDosF,kBAAA,SAAkBC,EAAgB5Z,KAEjCzyE,EAEDssF,oBAAA,SAAoBC,GAEnB,EAAAvsF,EAEDwsF,gBAAA,WACI,OAAO,CACX,EAACxsF,EAEDysF,gBAAA,SAAgBha,GAA4B,EAE3CzyE,EAMD6K,QAAA,WACQjL,KAAK4rF,MAAQ5rF,KAAK2rF,aAClB3rF,KAAK2rF,YAAYmB,QAAQ9sF,KAAK4rF,KAEtC,EAACH,CAAA,CAjLD,GChCSsB,GAQT,SAAYpsD,GANIr2B,KAAAA,QACAq4B,EAAAA,KAAAA,kBACAC,EAAAA,KAAAA,qCACAE,qBAAe,EAAA9iC,KACf6iC,sBAAgB,EAS5B7iC,KAAKsK,GAAKq2B,EAAOr2B,GACjBtK,KAAK2iC,aAAehC,EAAOgC,aAC3B3iC,KAAK4iC,yBAA2BjC,EAAOiC,yBACvC5iC,KAAK8iC,gBAAkBnC,EAAOmC,gBAC9B9iC,KAAK6iC,iBAAmBlC,EAAOkC,gBACnC,ECesB3kB,KAE1B,IAKM8uE,GAAsB,oBAAoBvJ,gBAAA9jF,EAAAstF,QAAAA,gBAAAttF,mBAAAutF,gBAAAvtF,EAAA,iBAAAwtF,gBAAAxtF,EAAAytF,YAAAA,gBAAAztF,EAAA,YAAA0tF,gBAAA1tF,EAAAmhD,cAAAA,gBAAAnhD,WAAA2tF,gBAAA3tF,EAAA,eAAA4tF,gBAAA5tF,EAAA6tF,cAAAA,gBAAA7tF,EAAA,uBAAA8tF,gBAAA9tF,EAAA+tF,aAAAA,gBAAA/tF,YAAAguF,gBAAAhuF,EAAA,iBAAAiuF,gBAAAjuF,EAAAkuF,gBAAAA,gBAAAluF,EAAA,YAAAmuF,gBAAAnuF,EAAAouF,aAAAA,gBAAApuF,wBAAAquF,gBAAAruF,EAAA,qBAAAuiC,gBAAAviC,EAAAsuF,aAAAA,gBAAAtuF,EAAA,iBAAAuuF,gBAAAvuF,EAAAsiC,iBAAAA,gBAAAtiC,UAAAwuF,gBAAAxuF,EAAA,mBAAAyuF,gBAAAzuF,EAAA0uF,0BAAAA,gBAAA1uF,EAAA,sBAAA2uF,gBAAA3uF,EAAA4uF,WAAAA,gBAAA5uF,sBAAA6uF,gBAAA7uF,EAAA,iBAAA8uF,gBAAA9uF,EAAA+uF,kBAAAA,gBAAA/uF,EAAA,cAAAgvF,gBAAAhvF,EAAAivF,YAAAA,gBAAAjvF,uBAAAkvF,gBAAAlvF,EAAA,mCAAAmvF,gBAAAnvF,EAAAovF,eAAAA,gBAAApvF,EAKhD,oBAAaqvF,gBAAkB,SAAA9yD,GAkD3B,SAAA8yD,EAAYruD,OAeXv1B,EAEGA,EAAA8wB,EAAAl4B,KAAM28B,KAAAA,EAAOxS,OAAMruB,KAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA2jF,GAAA7uF,CAAAA,MAAA+uF,KAAAnvF,OAAAC,eAAAs8B,EAAAjxB,GAAA0jF,GAAA,CAAA5uF,MAAAgvF,KAAApvF,OAAAC,eAAAs8B,EAAAjxB,GAAAyjF,GAAA3uF,CAAAA,MAAAivF,KAAArvF,OAAAC,eAAAs8B,EAAAjxB,GAAAwjF,IAAA1uF,MAAAkvF,KAAAtvF,OAAAC,eAAAs8B,EAAAjxB,GAAAujF,GAAA,CAAAzuF,MAAAmvF,KAAAvvF,OAAAC,eAAAs8B,EAAAjxB,GAAAsjF,GAAAxuF,CAAAA,MAAAovF,KAAAxvF,OAAAC,eAAAs8B,EAAAjxB,GAAAqjF,GAAA,CAAAvuF,MAAAqvF,KAAAzvF,OAAAC,eAAAs8B,EAAAjxB,GAAAojF,GAAAtuF,CAAAA,MAAAsvF,KAAA1vF,OAAAC,eAAAs8B,EAAAjxB,GAAAmjF,IAAAruF,MAAAuvF,KAAArkF,EAjEdq5C,mBAAar5C,EAAAA,EAKtB2jC,gBAAU,EAAA3jC,EAEVskF,wBAAkBtkF,EAAAA,EAClBukF,wBAAgBvkF,EAChBwkF,yBAAmB,EAAAxkF,EACnBy/E,oBAAcz/E,EAAAA,EACdykF,qBAAe,EAAAzkF,EACf0kF,yBAAmB1kF,EAAAA,EAEnBw6C,2BAAmBx6C,EAEV+2C,YAAM,EAAA/2C,EAEf2kF,eAAS3kF,EAAAA,EACA8xB,aAAO,EAAAp9B,OAAAC,eAAAs8B,EAAAjxB,GAAAq4E,GAAA,CAAAxjF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA6hF,GAAAhtF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA8hF,IAAAjtF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA+hF,GAAA,CAAAltF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAgiF,GAAAntF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAiiF,GAAA,CAAAptF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA01C,GAAA7gD,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAkiF,IAAArtF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAmiF,IAAAttF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAoiF,GAAA,CAAAvtF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAqiF,GAAAxtF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAsiF,GAAA,CAAAztF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAuiF,GAAA1tF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAwiF,IAAA3tF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAyiF,GAAA,CAAA5tF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA0iF,GAAA7tF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA2iF,GAAA,CAAA9tF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA4iF,GAAA/tF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA82B,IAAAjiC,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA6iF,GAAA,CAAAhuF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA8iF,GAAAjuF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA62B,GAAA,CAAAhiC,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAA+iF,GAAAluF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAgjF,IAAAnuF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAijF,GAAA,CAAApuF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAkjF,GAAAruF,CAAAA,YAAAC,WAAA,IAgDZkL,EAAKd,GAAKq2B,EAAOr2B,GACjBc,EAAK2jC,WAAapO,EAAOoO,WACzB3jC,EAAK+2C,OAASxhB,EAAOxS,KAAKg0B,OAE1BhiD,EAAAk8B,EAAAjxB,GAAAq4E,IAAAA,IAAa9iD,EAAOxS,KACpBhuB,EAAAk8B,EAAAjxB,GAAA6hF,IAAAA,IAAsBtsD,EAAOqvD,cAC7B7vF,EAAAk8B,EAAAjxB,GAAA8hF,IAAAA,IAAsBvsD,EAAOkyC,cAC7B1yE,EAAAk8B,EAAAjxB,GAAA4iF,IAAAA,IAA0BrtD,EAAOsvD,kBAEjC9vF,EAAAk8B,EAAAjxB,GAAA62B,IAAAA,IAAajN,KACb70B,EAAAk8B,EAAAjxB,GAAA82B,IAAAA,KAAkB,EAClB/hC,EAAAk8B,EAAAjxB,GAAAsiF,IAAAA,IAAe,CAAA,EACftiF,EAAK2kF,UAAY,GACjB5vF,EAAAk8B,EAAAjxB,GAAA8iF,IAAAA,IAAsB,CAAE,EAExB9iF,EAAKskF,mBAAqB,CAAA,EAC1BtkF,EAAKukF,iBAAmB,CAAA,EACxBvkF,EAAKwkF,oBAAsB,GAC3BxkF,EAAKy/E,eAAiB,CAAE,EACxBz/E,EAAKykF,gBAAkB,CAAE,EACzBzkF,EAAK0kF,oBAAsB,GAE3B1kF,EAAKw6C,oBAAsB,CAAA,EAE3BzlD,EAAAk8B,EAAAjxB,GAAAuiF,IAAAA,IAAsB,EACtBxtF,EAAAk8B,EAAAjxB,GAAA2iF,IAAAA,IAA2B,EAE3B5tF,EAAAk8B,EAAAjxB,GAAAwiF,IAAAA,IAAqB,EACrBztF,EAAAk8B,EAAAjxB,GAAAyiF,IAAAA,IAAiB,EACjB1tF,EAAAk8B,EAAAjxB,GAAA0iF,IAAAA,IAAkB,EAClB3tF,EAAAk8B,EAAAjxB,GAAA6iF,IAAAA,IAAsBttD,EAAOyG,eAAiB,GAE9Ch8B,EAAK+xB,OAAQ,EAIbh9B,EAAAk8B,EAAAjxB,GAAA+hF,IAAAA,IAAiB99E,GAAWsxB,EAAO3kB,UAAY,CAAC,EAAG,EAAG,IACtD7b,EAAAk8B,EAAAjxB,GAAAgiF,IAAAA,IAAiB/9E,GAAWsxB,EAAOuvD,UAAY,CAAC,EAAG,EAAG,IACtD/vF,EAAAk8B,EAAAjxB,GAAAiiF,IAAAA,IAAmBl+E,GAAWwxB,EAAO1kB,YAAc,CAAC,EAAG,EAAG,EAAG,IACzD0kB,EAAOuvD,UACP/xE,GAAWhe,EAAAk8B,EAAAjxB,GAAAgiF,IAAAA,IAAiB,MAAKjtF,EAAAk8B,EAAAjxB,GAAAiiF,IAAAA,KAErCltF,EAAAk8B,EAAAjxB,GAAA01C,IAAAA,IAAczxC,GAAWsxB,EAAOzkB,OAAS,CAAC,EAAG,EAAG,IAChD/b,EAAAk8B,EAAAjxB,GAAAkiF,IAAAA,IAAoBt6E,KACpB+I,GAAW5b,EAAAk8B,EAAAjxB,GAAA+hF,IAAAA,IAAAhtF,EAAAk8B,EAAAjxB,GAAAiiF,IAAAA,IAAAltF,EAAAk8B,EAAAjxB,GAAA01C,IAAAA,IAAA3gD,EAAAk8B,EAAAjxB,GAAAkiF,IAAAA,MAEP3sD,EAAOrkB,QAAUqkB,EAAO3kB,UAAY2kB,EAAOuvD,UAAYvvD,EAAOzkB,OAASykB,EAAO1kB,cAC9E9b,EAAAk8B,EAAAjxB,GAAAmiF,IAAAA,IAAmBv6E,KACnB7S,EAAAk8B,EAAAjxB,GAAA+iF,IAAAA,KAAwB,EACxBhuF,EAAAk8B,EAAAjxB,GAAAgjF,IAAAA,KAA+B,GAGnChjF,EAAKq5C,eAA0C,IAAzB9jB,EAAO8jB,cAE7BtkD,EAAAk8B,EAAAjxB,GAAAkjF,IAAAA,IAAgB3tD,EAAOyB,QAEvBjiC,EAAAk8B,EAAAjxB,GAAAijF,IAAAA,IAA2BluF,EAAAk8B,EAAAjxB,GAAAq4E,IAAAA,IAAWjhC,OAAOoH,aAAatpD,UAAU,SAACkiD,EAAgBtS,GACjF/vC,EAAAk8B,EAAAjxB,GAAA+iF,IAAAA,KAAwB,CAC5B,GAEAhuF,EAAAk8B,EAAAjxB,GAAAyjF,IAAAA,MAEAzjF,EAAK8xB,QAAU,IAAIt9B,EAAa,IAAImG,GAAeA,iBAEnD5F,EAAAk8B,EAAAjxB,GAAAmjF,IAAAA,IAAuB5tD,EAAOoO,YAW9B,IAAK,IAAItrC,EAAI,EAAG8S,EAAMnL,EAAK2kF,UAAU5sF,OAAQM,EAAI8S,EAAK9S,IACpC2H,EAAK2kF,UAAUtsF,GACvBkhF,WAAalhF,EAMW,OAJlCtD,EAAAk8B,EAAAjxB,GAAA8iF,IAAAA,IAAsB,GACtB9iF,EAAK+xB,OAAQ,EACbh9B,EAAAk8B,EAAAjxB,GAAA6hF,IAAAA,IAAoBpoC,gBAEpBz5C,EAAK8xB,QAAQz8B,SAAQ47B,EAAAjxB,GAAO,MAAMA,CACtC,CAzJ2BG,EAAAyjF,EAAA9yD,GAyJ1B,IAAA97B,EAAA4uF,EAAA3uF,UA+TA2uF,OA/TA5uF,EAiUD6+C,WAAA,SAAWC,EAAmBZ,GAC1B,IAAK,IAAI76C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGw7C,WAAWC,EAAWZ,GAEtDn+C,EAAAH,KAAIitF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAEDu/C,UAAA,SAAUT,EAAmBP,GACzB,IAAK,IAAIl7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGk8C,UAAUT,EAAWP,GAErDx+C,OAAI8sF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAEDy/C,eAAA,SAAeX,EAAmBL,GAC9B,IAAK,IAAIp7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGo8C,eAAeX,EAAWL,GAE1D1+C,EAAIH,KAAAitF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAED0/C,YAAA,SAAYZ,EAAmBN,GAC3B,IAAK,IAAIn7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGq8C,YAAYZ,EAAWN,GAEvDz+C,EAAAH,KAAIitF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAEDw/C,SAAA,SAASV,EAAmB3W,GACxB,IAAK,IAAI9kC,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGm8C,SAASV,EAAW3W,GAEpDpoC,EAAIH,KAAAitF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAED2qF,UAAA,SAAU7rC,EAAmBX,GACzB,IAAK,IAAI96C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGsnF,UAAU7rC,EAAWX,GAErDp+C,OAAI8sF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAED4qF,aAAA,SAAa9rC,EAAmBT,GAC5B,IAAK,IAAIh7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGunF,aAAa9rC,EAAWT,GAExDt+C,EAAIH,KAAAitF,IAAAA,IAAgBpoC,cAAc3F,EACtC,EAAC9+C,EAED6qF,cAAA,SAAc/rC,EAAmBR,GAC7B,IAAK,IAAIj7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGwnF,cAAc/rC,EAAWR,EAE7D,EAACt+C,EAED8qF,YAAA,SAAYhsC,EAAmBV,GAC3B,IAAK,IAAI/6C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGynF,YAAYhsC,EAAWV,EAE3D,EAACp+C,EAED+qF,YAAA,SAAYjsC,EAAmBJ,GAC3B,IAAK,IAAIr7C,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAG0nF,YAAYjsC,EAAWJ,EAE3D,EAAC1+C,EAEDgrF,WAAA,SAAWlsC,EAAmBna,GAC1B,IAAK,IAAIthC,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAG2nF,WAAWlsC,EAAWna,EAE1D,EAAC3kC,EAkcD6K,QAAA,WACI,IAAIjL,KAAKuK,UAAT,CAKA,IAAK,IAAI63B,KAFTjiC,OAAI4uF,IAAAA,MACJ5uF,EAAAH,KAAIyjF,IAAAA,IAAOjhC,OAAOoH,aAAa/oD,YAAWV,EAACH,KAAIquF,IAAAA,KAC/BluF,EAAIH,KAAIkuF,IAAAA,IAChB/tF,EAAAH,KAAIkuF,IAAAA,IAAgBhjF,eAAek3B,IACnCjiC,EAAAH,KAAIkuF,IAAAA,IAAgB9rD,GAASn3B,UAGrC,IAAK,IAAIxH,EAAI,EAAG8S,EAAMvW,KAAK+vF,UAAU5sF,OAAQM,EAAI8S,EAAK9S,IAClDzD,KAAK+vF,UAAUtsF,GAAGwH,UAEtB,IAAK,IAAIgkC,KAAgBjvC,KAAC6vF,gBACtB7vF,KAAK6vF,gBAAgB5gD,GAAUhkC,UAKnC9K,OAAI+tF,IAAAA,IAAkB,CAAA,EACtB/tF,OAAIutF,IAAAA,IAAW,GACf1tF,KAAK+vF,UAAY,GACjB/vF,KAAK0vF,mBAAqB,CAAE,EAC5B1vF,KAAK2vF,iBAAmB,CAAE,EAC1B3vF,KAAK4vF,oBAAsB,CAAA,EAC3B5vF,KAAK6qF,eAAiB,CAAA,EACtB7qF,KAAK4lD,oBAAsB,GAE3B5lD,KAAKk9B,QAAQj8B,QACbi7B,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KA3BZ,CA4BL,EAACkB,EAAA8tF,IAAA7tF,IAAA,WAAAC,IA5mBD,WACI,OAAAjB,EAAOH,KAAImtF,IAAAA,GACf,GAAC,CAAAhsF,IAAAC,WAAAA,IAED,WACI,OAAAjB,EAAOH,KAAIotF,IAAAA,GACf,GAACjsF,CAAAA,iBAAAC,IAED,WACI,OAAAjB,EAAOH,KAAIqtF,IAAAA,GACf,GAAC,CAAAlsF,IAAA,QAAAC,IAED,WACI,OAAAjB,EAAOH,KAAI8gD,IAAAA,GACf,GAAC3/C,CAAAA,IAAAC,cAAAA,IAED,WACI,OAAAjB,EAAOH,KAAIstF,IAAAA,GACf,GAACnsF,CAAAA,IAAAC,aAAAA,IAED,WACI,OAAIjB,EAACH,KAAIutF,IAAAA,KAGTptF,EAAIH,KAAImuF,IAAAA,MACJv0E,GAAQzZ,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OAAOtS,WAAU/vC,EAAEH,KAAIstF,IAAAA,IAAAntF,EAAeH,KAAIutF,IAAAA,KAC7DptF,EAAIH,KAAAmuF,IAAAA,KAAoB,GAE5BhuF,EAAOH,KAAIutF,IAAAA,KANAptF,OAAIsjF,IAAAA,IAAOjhC,OAAOtS,UAOjC,GAAC,CAAA/uC,IAAAC,sBAAAA,IAED,WACI,OAAAjB,EAAOH,KAAIwtF,IAAAA,GACf,GAACrsF,CAAAA,gBAAAC,IAED,WACI,OAAAjB,EAAOH,KAAIytF,IAAAA,GACf,EAAC9wE,IAED,SAAcypC,GACVA,IAAcA,EACdjmD,EAAAH,KAAIytF,IAAAA,IAAcrnC,EAClBjmD,EAAIH,KAAAitF,IAAAA,IAAgBpoC,eACxB,IAAC1jD,IAAA,SAAAC,IAED,WACI,OAAAjB,EAAOH,KAAIstF,IAAAA,GACf,GAAC,CAAAnsF,IAAAC,OAAAA,IAED,WAII,OAHAjB,EAAIH,KAAIkiC,IAAAA,KACJ/hC,EAAAH,KAAI8uF,IAAAA,MAER3uF,EAAOH,KAAIiiC,IAAAA,GACf,GAAC9gC,CAAAA,IAAAC,eAAAA,IAED,WACI,OAAAjB,EAAOH,KAAI4tF,IAAAA,GACf,IAACzsF,IAAA,WAAAC,IAED,WACI,OAAAjB,EAAOH,KAAI6tF,IAAAA,GACf,GAAC,CAAA1sF,IAAAC,YAAAA,IAED,WACI,OAAAjB,EAAOH,KAAI8tF,IAAAA,GACf,KAACkB,CAAA,CAxd0B,CAAQ/kF,IA+iCtC,SAAAwlF,GAp5BqB1gD,GACd,IAAMrM,EAAWqM,EAAWrM,SACtBsJ,EAAa+C,EAAW/C,WACxBtK,EAASqN,EAAWrN,OACpB7E,EAAUkS,EAAWlS,QAC3B,GAAI6F,EACA,IAAK,IAAIytD,KAAaztD,EAClBviC,OAAIquF,IAAAA,IAAgB9rD,EAASytD,IAGrC,GAAInkD,EACA,IAAK,IAAI6B,KAAc7B,EACnB7rC,EAAAH,KAAIyuF,IAAAA,IAAiBziD,EAAW6B,IAGxC,GAAInM,EACA,IAAK,IAAI4M,KAAU5M,EACfvhC,EAAAH,KAAI0uF,IAAAA,IAAahtD,EAAO4M,IAGhC,GAAIzR,EACA,IAAK,IAAIoS,KAAYpS,EACjB18B,EAAIH,KAAA4uF,IAAAA,IAAoB/xD,EAAQoS,IAGxC,IAAK,IAAI7M,KAAOjiC,EAAIH,KAAIkuF,IAAAA,IACpB/tF,EAAAH,KAAIkuF,IAAAA,IAAgB9rD,GAASnE,QAEjC,IAAK,IAAIx6B,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAGw6B,QAEhC,IAAK,IAAIx6B,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAC5DzD,KAAK8vF,oBAAoBrsF,GAAG+nF,WAEpC,CAAC,SAAAgE,GAEcliD,GAAgB,IAAAhkB,EAAAtpB,KACrBmwF,EAAY7iD,EAAQhjC,GAC1B,GAAItK,KAAK2vF,iBAAiBQ,GACtB,MAAU,IAAA9kF,GAAS,oCAAsC8kF,GAE7D,IAAMC,EAAY,IAAI/kB,GAAU,CAAC3K,GAAIvgE,EAAAH,KAAIktF,IAAAA,IAAgBxsB,KAIzD,GAHIpzB,EAAQrJ,cACRmsD,EAAU5kB,gBAAgBl+B,EAAQrJ,cAElCqJ,EAAQjK,MAAO,CACf,IAAMA,EAAQiK,EAAQjK,MACtBA,EAAM9c,YAAc,YACpB6pE,EAAUlkB,SAAS7oC,EAAO,CACtBM,UAAW2J,EAAQ3J,UACnBD,UAAW4J,EAAQ5J,UACnBE,MAAO0J,EAAQ1J,MACfC,MAAOyJ,EAAQzJ,MACfC,MAAOwJ,EAAQxJ,MACfC,MAAOuJ,EAAQvJ,MACfC,SAAUsJ,EAAQtJ,UAEzB,MAAM,GAAIsJ,EAAQpK,IAAK,CACpB,IAAMktC,EAAM9iC,EAAQpK,IAAItJ,MAAM,KAAKyT,MACnC,OAAQ+iC,GACJ,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,MACD,IAAM/sC,EAAQ,IAAIgtD,MAClBhtD,EAAMpT,OAAS,WACXmgE,EAAUlkB,SAAS7oC,EAAO,CACtBM,UAAW2J,EAAQ3J,UACnBD,UAAW4J,EAAQ5J,UACnBE,MAAO0J,EAAQ1J,MACfC,MAAOyJ,EAAQzJ,MACfC,MAAOwJ,EAAQxJ,MACfC,MAAOuJ,EAAQvJ,MACfC,SAAUsJ,EAAQtJ,UAE1B,EACAX,EAAMH,IAAMoK,EAAQpK,IACpB,MACJ,QACQ/iC,EAACH,KAAIguF,IAAAA,IAGLzgE,GAAgB+f,EAAQpK,IAAK,SAACxX,GACjBA,EAAYN,WAIjBjrB,EAAAmpB,EAAI0kE,IAAAA,IAAoB/xB,UAAU,CAACvwC,IAAc5B,KAAK,SAACwmE,GACnDF,EAAUtjB,kBAAkBwjB,GAC5BnwF,EAAAmpB,EAAI2jE,IAAAA,IAAgBpoC,eACxB,GANIv7B,EAAKze,MAAkE,4DAO/E,EACA,SAACmzC,GACG10B,EAAKze,MAAK,oCAAqCmzC,EACnD,GAdJh+C,KAAK6K,8HAA8HulE,EAAG,MAkBrJ,MAAU9iC,EAAQlK,UACXjjC,EAACH,KAAIguF,IAAAA,IAGL7tF,OAAI6tF,IAAAA,IAAoB/xB,UAAU3uB,EAAQlK,SAAStZ,KAAK,SAACwmE,GACrDF,EAAUtjB,kBAAkBwjB,GAC5BnwF,EAAAmpB,EAAI2jE,IAAAA,IAAgBpoC,eACxB,GALA7kD,KAAK6K,8HAQb,IAAMo4B,EAAkB,IAAIonD,GAAoB/8C,EAAS8iD,GACzD9iD,EAAQrK,gBAAkBA,EAC1BjjC,KAAK2vF,iBAAiBQ,GAAaltD,CACvC,CAAC,SAAAssD,GAEeluD,GACZ,IAAMwM,EAAaxM,EAAS/2B,GAC5B,GAAItK,KAAK0vF,mBAAmB7hD,GACxB,MAAU,IAAAxiC,GAAQ,qCAAsCwiC,GAE5D,IAAM9M,EAAmB,IAAIqpD,GAC7BpqF,KAAK0vF,mBAAmB7hD,GAAc9M,EACtCM,EAASN,iBAAmBA,EAC5B5gC,EAAAH,KAAI2tF,IAAAA,KACR,CAAC,SAAA2B,GAEWnuD,GACR,IAAMJ,EAAmB/gC,KAAK0vF,mBAAmBvuD,EAAKE,SAAS/2B,IAC/D,IAAKy2B,EACD,UAAU11B,GAAS,8BAEvB,IAAM03B,EAAqB/iC,KAAK4vF,oBAAiCzuD,EAAKuD,WAAYp6B,IAClF,IAAKy4B,EACD,MAAU,IAAA13B,GAAS,gCAEvB,IAAM+yC,EAAKj+C,EAAGH,KAAI2uF,IAAAA,IAAWxtD,EAAKuD,WAA0BvD,EAAKuD,WAAYp6B,QAAKga,EAAW6c,EAAKE,UAClG,GAAK+c,EAAL,CAMA,IAAImyC,EAHCnyC,EAAMgnC,YAAYjkD,EAAKE,SAAS/2B,KACjC8zC,EAAMpQ,yBAAyB7M,EAAKE,UAGtBlhC,EAAIH,KAAAouF,IAAAA,KAAAjuF,EAA2BH,KAAIstF,IACrDiD,EAAapvD,EAAK7kB,OAClB,IAAMsoB,EAASzD,EAAKyD,MAAS,IAAIxW,WAAW,CAAC5kB,KAAKwnB,MAAsB,IAAhBmQ,EAAKyD,MAAM,IAAWp7B,KAAKwnB,MAAsB,IAAhBmQ,EAAKyD,MAAM,IAAWp7B,KAAKwnB,MAAsB,IAAhBmQ,EAAKyD,MAAM,MAAc,CAAC,IAAK,IAAK,KACxJG,EAAW5D,QAAK4D,QAAkDv7B,KAAKwnB,MAAqB,IAAfmQ,EAAK4D,SAAiB,IACnGF,EAAY1D,QAAK0D,SAAoDr7B,KAAKwnB,MAAsB,IAAhBmQ,EAAK0D,UAAkB,EACvGC,EAAa3D,QAAK2D,UAAsDt7B,KAAKwnB,MAAuB,IAAjBmQ,EAAK2D,WAAmB,IAC3G0rD,EAAe,IAAI/E,GAAiB,CACtCE,YAA0BxrF,OAAI8sF,IAAAA,IAAgBtB,YAC9CrhF,GAAI62B,EAAK72B,GACT8zC,MAAAA,EACAxZ,MAAAA,EACAG,QAAAA,EACAzoB,OAAQi0E,EACR1rD,SAAAA,EACAC,UAAAA,EACA/B,mBAAAA,EACAhC,iBAAAA,EACAK,UAAW,IAEfovD,EAAa9E,OAASvrF,EAAAH,KAAIitF,IAAAA,IAAgBwD,eAAeD,GACzD,IAIM/G,EAAY,IAAIr7D,WAAW,CADD,IAAtBoiE,EAAa9E,OADb8E,EAAa9E,QAAU,EAAI,IAD3B8E,EAAa9E,QAAU,GAAK,IAD5B8E,EAAa9E,QAAU,GAAK,MAKtC12D,GAAcw7D,EAAa7+D,MAC3B,IAAMyP,EAAYgd,EAAMnR,WAAW,CAC/B3iC,GAAI62B,EAAK72B,GACTujC,WAAY1M,EAAKE,SAAS/2B,GAC1Bs6B,MAAAA,EACAG,QAAAA,EACAF,SAAAA,EACAC,UAAAA,EACAxoB,OAAQi0E,EAGR9G,UAAAA,IAEJtpF,OAAIwtF,IAAAA,MACJx4D,GAAWh1B,EAACH,KAAIiiC,IAAAA,IAAQuuD,EAAa7+D,MACrC6+D,EAAapyC,MAAQA,EACrBoyC,EAAapvD,UAAYA,EACzBphC,KAAK6qF,eAAe1pD,EAAK72B,IAAMkmF,CA/C9B,CAgDL,CAAC,SAAAnB,GAESnhD,EAAkCD,GAExC,IAUIvJ,EAVEtC,GADN8L,EAAeA,GAAgB8+C,IACI/+C,IAAAA,EAAyBrN,UACxDwd,EAAQj+C,EAAIH,KAAAkuF,IAAAA,IAAgB9rD,GAChC,GAAIgc,EAAO,CACP,GAAIA,EAAM6mC,cAAch3C,GACpB,OAAOmQ,EAEPA,EAAMngB,eACC99B,EAAAH,KAAIkuF,IAAAA,IAAgB9rD,EAElC,CAED,IAAI8L,IACAxJ,EAAa1kC,KAAK4vF,oBAAoB1hD,IAiB1C,OAXAkQ,EAAQ,IAAIgmC,GAAmB,CAC3B1jB,GAAIvgE,EAAIH,KAAAktF,IAAAA,IAAgBxsB,GACxBvyC,KAAIhuB,EAAEH,KAAIyjF,IAAAA,IACVv3C,cAAelsC,KACf4gC,UAAWqN,EAAyBrN,UACpC8D,WAAAA,EACAigD,WAAY,IAEhBxkF,EAAIH,KAAA0tF,IAAAA,IAAStrD,GAAWgc,EACxBp+C,KAAK+vF,UAAU3sF,KAAKg7C,GACpBj+C,EAAAH,KAAIkuF,IAAAA,IAAgB9rD,GAAWgc,EACxBA,EAfCp+C,KAAK6K,MAAK,yBAA0BqjC,EAAyE,6DAgBzH,CAAC,SAAAkhD,GAEkBrtD,GACf,IAAIkN,EAAWlN,EAAYz3B,QACVga,IAAb2qB,EACAA,EAAW7lC,KACJpJ,KAAK6vF,gBAAgB5gD,KAC5BjvC,KAAK6K,MAAM,yEAA2EokC,EAAW,4BACjGA,EAAW7lC,MAEf,IAAMs4B,EAASK,EAAYL,OAC3B,QAAepd,IAAXod,EACA,MAAM,IAAIr2B,GAAS,yCAGvB,IADA,IAAMw/E,EAAqC,GAClCpnF,EAAI,EAAG8S,EAAMmrB,EAAOv+B,OAAQM,EAAI8S,EAAK9S,IAG1ConF,EAAeznF,KADwBpD,KAAK6qF,eAD/BnpD,EAAOj+B,GAC4C6G,KAGpE,IAAM+3B,EAAiB,IAAIuoD,GAAmB,CAC1CtgF,GAAI2kC,EACJ/C,cAAelsC,KACf6qF,eAAAA,EACAl5D,KAAMoQ,EAAYpQ,KAClByQ,QAAOjiC,EAAEH,KAAIsuF,IAAAA,MAEjBtuF,KAAK8vF,oBAAoB1sF,KAAKi/B,GAC9BriC,KAAK6vF,gBAAgB5gD,GAAY5M,EACjCriC,KAAK4lD,oBAAoB3W,GAAY5M,EACrCliC,EAAAH,KAAI+tF,IAAAA,KACR,CAAC,SAAAoB,KAuVG,IAAMuB,EAAsB,IAAIrG,GAC5B,KACA,IAAIhf,GAAU,CACV3K,GAAIvgE,EAAIH,KAAAktF,IAAAA,IAAgBxsB,GACxBz8B,aAAc,CAAC,EAAG,EAAG,EAAG,MAG1B0sD,EAA2B,IAAItG,GACjC,KACA,IAAIhf,GAAU,CACV3K,GAAIvgE,EAAAH,KAAIktF,IAAAA,IAAgBxsB,GACxBz8B,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1B2sD,EAAwB,IAAIvG,GAC9B,KACA,IAAIhf,GAAU,CACV3K,GAAIvgE,OAAI+sF,IAAAA,IAAgBxsB,GACxBz8B,aAAc,CAAC,EAAG,EAAG,EAAG,MAG1B4sD,EAAyB,IAAIxG,GAC/B,KACA,IAAIhf,GAAU,CACV3K,GAAIvgE,EAAIH,KAAAktF,IAAAA,IAAgBxsB,GACxBz8B,aAAc,CAAC,EAAG,EAAG,EAAG,MAE1B6sD,EAA0B,IAAIzG,GAChC,KACA,IAAIhf,GAAU,CACV3K,GAAIvgE,EAAAH,KAAIktF,IAAAA,IAAgBxsB,GACxBz8B,aAAc,CAAC,EAAG,EAAG,EAAG,MAEhCjkC,KAAK2vF,iBAAsC,oBAAIe,EAC/C1wF,KAAK2vF,iBAA2C,yBAAIgB,EACpD3wF,KAAK2vF,iBAAwC,sBAAIiB,EACjD5wF,KAAK2vF,iBAAyC,uBAAIkB,EAClD7wF,KAAK2vF,iBAA0C,wBAAImB,EACnD9wF,KAAK4vF,oBAAoB5C,IAAuB,IAAID,GAAuB,CACvEziF,GAAI0iF,GACJrqD,aAAc+tD,EACd9tD,yBAA0B+tD,EAC1B7tD,gBAAiB+tD,EACjBhuD,iBAAkBiuD,GAE1B,CAAC,SAAA5B,KAGGl6D,GAAa70B,EAACH,KAAIiiC,IAAAA,KAClB,IAAK,IAAIx+B,EAAI,EAAG8S,EAAMvW,KAAK8vF,oBAAoB3sF,OAAQM,EAAI8S,EAAK9S,IAAK,CACjE,IAAM4+B,EAAiBriC,KAAK8vF,oBAAoBrsF,GAChD0xB,GAAWh1B,EAACH,KAAIiiC,IAAAA,IAAQI,EAAe1Q,KAC1C,CACDxxB,EAAAH,KAAIkiC,IAAAA,KAAc,CACtB,CAAC,SAAA+sD,KAqOG,IAAMlgD,EAAa/uC,KAAK+uC,WACxB,GAAKA,EAAL,CAGA,IAAMrM,EAAWqM,EAAWrM,SACtBsJ,EAAa+C,EAAW/C,WACxBtK,EAASqN,EAAWrN,OACpB7E,EAAUkS,EAAWlS,QAC3B,GAAI6F,EACA,IAAK,IAAIytD,KAAaztD,EAAU,CAC5B,IAAM4K,EAAU5K,EAASytD,GACrB7iD,EAAQrK,kBACRqK,EAAQrK,gBAAkB,KAEjC,CAEL,GAAI+I,EACA,IAAK,IAAI6B,KAAc7B,EAAY,CAC/B,IAAM3K,EAAW2K,EAAW6B,GACxBxM,EAASN,mBACTM,EAASN,iBAAmB,KAEnC,CAEL,GAAIW,EACA,IAAK,IAAI4M,KAAU5M,EAAQ,CACvB,IAAMP,EAAOO,EAAO4M,GAChBnN,EAAKwD,eACLxD,EAAKwD,aAAe,KAE3B,CAEL,GAAI9H,EACA,IAAK,IAAIoS,KAAYpS,EAAS,CAC1B,IAAMyB,EAASzB,EAAQoS,GACnB3Q,EAAO+D,iBACP/D,EAAO+D,eAAiB,KAE/B,CAELriC,KAAK+uC,WAAa,IArCjB,CAsCL,CC7lCJ,IAAMgiD,GAAY,IAAKvN,gBAAA7jF,EAAA,MAAAqxF,gBAAArxF,EAAAsxF,eAAAA,gBAAAtxF,WAAAuxF,gBAAAvxF,EAAAwxF,eAAAA,gBAAAxxF,EAAA,UAAAyxF,gBAAAzxF,EAAA,iBAAA0xF,gBAAA1xF,iBAAA2xF,gBAAA3xF,EAUvB,gBAAa4xF,gBAST,WAAA,SAAAA,EAAY5wD,GAGX7gC,OAAAC,eAAAuxF,KAAAA,GAAApxF,CAAAA,MAAAsxF,KAAA1xF,OAAAC,eAAAsxF,KAAAA,IAAAnxF,MAAAuxF,KAAA3xF,OAAAC,eAAAyjF,KAAAA,IAAAvjF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAixF,KAAAA,IAAA/wF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAixF,GAAA,CAAAhxF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAkxF,GAAAjxF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAmxF,GAAAlxF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAoxF,GAAAnxF,CAAAA,YAAAC,WAAA,IACGC,EAAIH,KAAAmxF,IAAAA,IAAWxwD,EAAO6hB,OACtBriD,EAAAH,KAAIwjF,IAAAA,IAAO7iD,EAAO+/B,GAClBvgE,OAAI6wF,IAAAA,IAAgB,GACpB7wF,EAAAH,KAAIoxF,IAAAA,IAAkB,EACtBjxF,EAAAH,KAAIixF,IAAAA,IAAU,CAAE,EAChB9wF,EAAAH,KAAIkxF,IAAAA,IT+ZI,SAA0BxwB,EAA4BgxB,GAClE,IAAMpwB,EShasDyvB,GTia5D,GAAqB,GAAjBzvB,EACA,KAAM,sBAEV,IAEMC,EAAc,IAAI4lB,GAAa,GAAmB7lB,GAClDh0B,EAAUozB,EAAG3zB,gBACnB,OAAKO,GAGLozB,EAAGe,YAAYf,EAAGoB,WAAYx0B,GAC9BozB,EAAG2M,aAAa3M,EAAGoB,WAAY,EAAGpB,EAAG4N,QARhB,GAQuChN,GAE5DZ,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAVjB,GAUkCR,EAAeZ,EAAGsG,KAAMtG,EAAGoG,WAAY,IAAIh2C,YAAYywC,EAAYtzC,QAAS,GACnIyyC,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGuB,mBAAoBvB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAGyB,mBAAoBzB,EAAGwB,SAC1DxB,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG0B,eAAgB1B,EAAG2B,eACtD3B,EAAGsB,cAActB,EAAGoB,WAAYpB,EAAG4B,eAAgB5B,EAAG2B,eACtD3B,EAAGe,YAAYf,EAAGoB,WAAY,MACnB,IAAAV,GAAc,CAACV,GAAAA,EAAIpzB,QAAAA,EAAS+zB,aAhBlB,GAgBgCC,cAAAA,KAX1CghB,EAYf,CSrb4BqP,CAAyBxxF,EAACH,KAAIwjF,IAAAA,IACtD,CAAC,IAAApjF,EAAAmxF,EAAAlxF,iBAAAD,EAED8rF,QAAA,SAAQv2D,GACJ,IAAM8B,EAAYE,GAAiBhC,EAAQtmB,MACrC/E,EAAQmtB,EAAU,GAAMA,IAAAA,EAAU,GAAMA,IAAAA,EAAU,GACpDm0D,EAAOzrF,EAAAH,KAAIixF,IAAAA,IAAQ3mF,GAYvB,OAXKshF,IACDA,EAAO,CACHthF,GAAAA,EACAub,MAAK1lB,EAAEH,KAAIsxF,IAAAA,MACXM,SAAU,EACVj8D,OAAQtmB,KACRwiF,cAAe7+E,MAEnB7S,EAAAH,KAAIixF,IAAAA,IAAQrF,EAAKthF,IAAMshF,GAE3BA,EAAKgG,WACEhG,CACX,EAACxrF,EAED0sF,QAAA,SAAQlB,KACEA,EAAKgG,UAAY,WACZzxF,OAAI8wF,IAAAA,IAAQrF,EAAKthF,IACxBnK,EAAAH,KAAIqxF,IAAAA,IAAczF,EAAK/lE,OAE/B,EAACzlB,EAED6rF,iBAAA,SAAiBL,EAAYkG,GACzB,IAAMC,EAAep6D,GAAiBm6D,EAAWziF,MAC3C2iF,EAAWD,EAAa,GAAMA,IAAAA,EAAa,OAAMA,EAAa,GACpE,GAAIC,IAAUpG,EAAKthF,GACf,OAAOshF,EAEX5rF,KAAK8sF,QAAQlB,GACb,IAAIqG,EAAU9xF,EAAIH,KAAAixF,IAAAA,IAAQe,GAY1B,OAXKC,IACDA,EAAU,CACN3nF,GAAI0nF,EACJnsE,MAAK1lB,EAAEH,KAAIsxF,IAAAA,MACXM,SAAU,EACVj8D,OAAQtmB,KACRwiF,cAAe7+E,MAEnB7S,EAAAH,KAAIixF,IAAAA,IAAQgB,EAAQ3nF,IAAM2nF,GAE9BA,EAAQL,WACDK,CACX,EAAC7xF,EAED8xF,gBAAA,WACI,GAAK/xF,EAAAH,KAAIkxF,IAAAA,IAAc5jD,QAAvB,CAQA,IALA,IAAMozB,EAAEvgE,EAAGH,KAAIwjF,IAAAA,IACTtzC,EAAa/vC,EAAAH,KAAImxF,IAAAA,IAASjhD,WAC1BiiD,EAAUryF,OAAO46B,KAAIv6B,EAACH,KAAIixF,IAAAA,KAE1B1kE,EAAO,IAAI3b,aAAa,GADbuhF,EAAQhvF,QAEhBM,EAAI,EAAG8S,EAAM47E,EAAQhvF,OAAQM,EAAI8S,EAAK9S,IAAK,CAChD,IAAM2uF,EAASD,EAAQ1uF,GACjBmoF,EAAOzrF,EAAAH,KAAIixF,IAAAA,IAAQmB,GACzB56D,GAAiB0Y,EAAY07C,EAAKj2D,OAAQi2D,EAAKiG,eAC/CtlE,EAAK5P,IAAIivE,EAAKiG,cAA4B,GAAbjG,EAAK/lE,MACrC,CACD66C,EAAGe,YAAYf,EAAGoB,WAAY3hE,OAAI+wF,IAAAA,IAAc5jD,SAChDozB,EAAG8M,cAAc9M,EAAGoB,WAAY,EAAG,EAAG,EAAG,EAAG,EAAGpB,EAAGsG,KAAMtG,EAAGmG,MAAOt6C,GAClEm0C,EAAGe,YAAYf,EAAGoB,WAAY,KAd7B,CAeL,EAACyvB,CAAA,CA7ED,GA8FH,SAAAE,GAfgB5rE,UACF1lB,EAAIH,KAAAgxF,IAAAA,IAAcnrE,GACzB1lB,EAAIH,KAAAoxF,IAAAA,IAAkBvrE,CAC1B,CAAC,SAAA2rE,KAGG,IAAK,IAAI3rE,EAAK1lB,EAAGH,KAAIoxF,IAAAA,KAAmBvrE,GAASA,EAAQ,GAAKkrE,GAC1D,IAAK5wF,EAAIH,KAAAgxF,IAAAA,IAAcnrE,GAEnB,OADA1lB,EAAIH,KAAAgxF,IAAAA,IAAcnrE,IAAS,EACpBA,CAGnB,CChGJ,IAAMwsE,GAAKC,UAAUC,UAAU3kE,MAAM,oEAC/B4kE,GAAYH,IAA8B,WAAxBA,GAAG,GAAGnmE,cAA4BumE,gBAAA9yF,EAAA+yF,eAAAA,gBAAA/yF,YAAA8jF,gBAAA9jF,EAAA,QAAAutF,gBAAAvtF,EAAAgzF,iBAAAA,gBAAAhzF,EAAAizF,qBAAAA,gBAAAjzF,EAAA,sBAAAkzF,gBAAAlzF,EAAA,gBAAAmzF,gBAAAnzF,EAAAozF,cAAAA,gBAAApzF,EAAAqzF,cAAAA,gBAAArzF,gBAAA0xD,gBAAA1xD,EAAA,mBAAAszF,gBAAAtzF,EAAAuzF,kBAAAA,gBAAAvzF,EAAA,aAAAwzF,gBAAAxzF,EAAA,kBAAAyzF,gBAAAzzF,EAAA0zF,kBAAAA,gBAAA1zF,EAAA2zF,WAAAA,gBAAA3zF,0BAAA4zF,gBAAA5zF,EAAA,oBAAA6zF,gBAAA7zF,EAAA,iCAAA8zF,gBAAA9zF,EAAA+zF,kBAAAA,gBAAA/zF,EAAA,mBAAAquF,gBAAAruF,EAAAg0F,qBAAAA,gBAAAh0F,EAAAwuF,kBAAAA,gBAAAxuF,qBAAAi0F,gBAAAj0F,EAAA,6BAAAk0F,gBAAAl0F,EAAA,6BAAAm0F,gBAAAn0F,EAAAo0F,mBAAAA,gBAAAp0F,EAAAq0F,kBAAAA,gBAAAr0F,EAAA,QAAAs0F,gBAAAt0F,EAAAu0F,sBAAAA,gBAAAv0F,oBAAAw0F,gBAAAx0F,EAAA,aAAAy0F,gBAAAz0F,EAAA,aAAA00F,gBAAA10F,EAO1D,aAAa20F,gBAyDT,WAAA,SAAAA,EAAY3zD,GAEX7gC,OAAAC,eAAAs0F,KAAAA,IAAAn0F,MAAAq0F,KAAAz0F,OAAAC,eAAAq0F,KAAAA,IAAAl0F,MAAAs0F,KAAA10F,OAAAC,eAAAC,KAAAm0F,GAAAj0F,CAAAA,MAAAu0F,KAAA30F,OAAAC,oBAAAm0F,GAAA,CAAAh0F,MAAAw0F,KAAA50F,OAAAC,eAAAk0F,KAAAA,GAAA/zF,CAAAA,MAAAy0F,KAAA70F,OAAAC,eAAAi0F,KAAAA,GAAA9zF,CAAAA,MAAA00F,KAAA90F,OAAAC,eAAAC,KAAA+zF,GAAA,CAAA7zF,MAAA20F,KAAA/0F,OAAAC,eAAA+zF,KAAAA,GAAA5zF,CAAAA,MAAA40F,KAAAh1F,OAAAC,eAAAC,KAAA6zF,GAAA3zF,CAAAA,MAAA60F,KAAAj1F,OAAAC,eAAAC,KAAA4zF,GAAA,CAAA1zF,MAAA80F,KArDDpvC,KAAAA,yBAEA+lC,EAAAA,KAAAA,iBAAW7rF,EAAAA,OAAAC,oBAAA0yF,GAAA,CAAAxyF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA2yF,KAAAA,GAAAzyF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAA0jF,KAAAA,GAAAxjF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAktF,GAAA,CAAAjtF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA4yF,KAAAA,GAAA1yF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA4yF,GAAA3yF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA6yF,GAAA,CAAA5yF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAA+yF,KAAAA,GAAA7yF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA+yF,GAAA,CAAA9yF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAgzF,GAAA,CAAA/yF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAsxD,KAAAA,IAAApxD,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAizF,GAAAhzF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,oBAAAmzF,GAAA,CAAAjzF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,oBAAAozF,GAAA,CAAAlzF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAqzF,KAAAA,GAAAnzF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAqzF,GAAA,CAAApzF,UAAA,EAAAC,MAiBA,IAAIojB,GAAI,CAAE,KAACxjB,OAAAC,eAAAuzF,KAAAA,GAAArzF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAuzF,GAAA,CAAAtzF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAyzF,KAAAA,GAAAvzF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAyzF,GAAAxzF,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA0zF,GAAA,CAAAzzF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAiuF,KAAAA,GAAA/tF,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA2zF,GAAA,CAAA1zF,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAmuF,GAAA,CAAAluF,UAAAC,EAAAA,WAoClB,IAAAF,KAAK4lD,oBAAsB,GAC3B5lD,KAAK2rF,YAAc,KAEnBxrF,OAAIsyF,IAAAA,IAAgB,GACpBtyF,EAAIH,KAAAguF,IAAAA,IAAsBrtD,EAAOsvD,mBAAqB,IAAIr0B,GAAsB,CAAE,GAClFz7D,EAAIH,KAAA2yF,IAAAA,KAAsB,EAC1BxyF,EAAIH,KAAAyzF,IAAAA,KAAmB,EACvBtzF,EAAIH,KAAAuzF,IAAAA,IAAqB,CAAA,EACzBpzF,EAAIH,KAAAqzF,IAAAA,IAAY,IAAI/vE,GAAI,CAAA,GACxBnjB,EAAIH,KAAAkzF,IAAAA,IAAc,GAClB/yF,EAAIH,KAAAmzF,IAAAA,KAAmB,EACvBhzF,EAAAH,KAAIozF,IAAAA,KAAmB,EACvBjzF,EAAAH,KAAI8yF,IAAAA,KAAe,EACnB3yF,EAAAH,KAAI4yF,IAAAA,KAAuB,EAC3BzyF,EAAAH,KAAI6yF,IAAAA,KAAiB,EACrB1yF,EAAIH,KAAA+yF,IAAAA,KAAe,EACnB5yF,EAAIH,KAAAgzF,IAAAA,KAAe,EACnB7yF,EAAIH,KAAAqxD,IAAAA,IAAoBhiD,KACxBlP,EAAAH,KAAI0zF,IAAAA,IAAoB,KAIxBvzF,EAAIH,KAAAwzF,IAAAA,KAAkC,EACtCrzF,EAAIH,KAAAizF,IAAAA,IAAmB,CAAA,EACvB9yF,EAAAH,KAAImuF,IAAAA,KAAoB,CAC5B,CAAC,IAAA/tF,EAAAk0F,EAAAj0F,UAiNAi0F,OAjNAl0F,EAEDq3D,gBAAA,SAAgBb,GACZA,EAAaM,SAAW,EACxB,IACIwJ,EADE1Y,EAAgBqL,SAAS2X,cAAc,UAE7C,IACItK,EAAK1Y,EAAcijB,WAAW,SACjC,CAAC,MAAO/6C,GACLvlB,QAAQE,MAAM,gCACjB,CACG61D,IACA9J,EAAaO,gBAAkB6O,GAAatF,EAAI,iCAChD9J,EAAaQ,eAAgB,EAC7BR,EAAaS,gBAAkB2O,GAAatF,EAAI,gCAChD9J,EAAaU,eAAiB0O,GAAatF,EAAI,iCAC/C9J,EAAaW,gBAAkByO,GAAatF,EAAI,gCAChD9J,EAAaY,kBAAoBwO,GAAatF,EAAI,oCAAqCsF,GAAatF,EAAI,0CAEhH,EAACtgE,EAEDs3D,aAAA,SAAavV,GACThiD,EAAAH,KAAI0yF,IAAAA,IAAWvwC,EACfhiD,EAAIH,KAAAguF,IAAAA,IAAoBhyB,KAAK77D,EAAIH,KAAA0yF,IAAAA,IAAS97B,aAC9C,EAACx2D,EAEDy3D,WAAA,SAAW1pC,GAAU/iB,IAAAA,EACjBpL,KAAA,GAAAG,EAAIH,KAAIktF,IAAAA,IACJ,KAAM,gFAEV/sF,EAAAH,KAAIyjF,IAAAA,IAASt1D,EAKb,IAJA,IAAM8mE,EAAsB,CAAC,UACvBjtC,EAAgB75B,EAAK65B,cACrBktC,EAAc,CAAE,EAClBx0B,EAAoC,KAC/Bj9D,EAAI,GAAIi9D,GAAMj9D,EAAIwxF,EAAoB9xF,OAAQM,IACnD,IACIi9D,EAAK1Y,EAAcijB,WAAWgqB,EAAoBxxF,GAAIyxF,EACzD,CAAC,MAAOhlE,IAGb,OAAKwwC,GAKDA,GACAA,EAAGy0B,KAAKz0B,EAAG00B,gCAAiC10B,EAAG20B,QAEnDl1F,OAAI+sF,IAAAA,IAAkB,IAAI5c,GAAanwE,EAACH,KAAI0yF,IAAAA,IAAAvyF,EAAUH,KAAIyjF,IAAAA,IAAQ/iB,GAClE1gE,KAAK2rF,YAAc,IAAI4F,GAAY,CAC/B/uC,OAAQr0B,EAAKq0B,OACbke,GAAAA,IAEJvgE,EAAAH,KAAI2zF,IAAAA,IAAmB,CAEnB2B,eAAgB,IAAIze,GAA0B12E,EAACH,KAAIktF,IAAAA,MAOvD/+D,EAAKq0B,OAAOoH,aAAahpD,IAAI,WACzBT,EAAAiL,EAAI+iF,IAAAA,KAAoB,CAC5B,GACO,IAxBHxjF,QAAQE,MAAM,kCAEP,EAuBf,EAACzK,EAED03D,WAAA,SAAW5Y,GACV,EAAA9+C,EAED23D,iBAAA,SAAiBhpB,GAAsBzlB,IAAAA,OACnC,IAAInpB,EAACH,KAAIktF,IAAAA,IACL,UAAU7hF,GAAS,qDAEvB,IAAM6gC,EAAgB,IAAI8iD,GAAkB,CACxC1kF,GAAIykC,EAAWzkC,GACfykC,WAAAA,EACA5gB,KAAIhuB,EAAEH,KAAIyjF,IAAAA,IACVwM,kBAAiB9vF,EAAEH,KAAIguF,IAAAA,IACvBgC,cAAehwF,KACf6yE,cAAa1yE,EAAEH,KAAIktF,IAAAA,MAEvB/sF,EAAAH,KAAIizF,IAAAA,IAAiB/mD,EAAc5hC,IAAM4hC,EACzC/rC,EAAIH,KAAA4zF,IAAAA,IAA4B1nD,GAChC/rC,EAAIH,KAAAmzF,IAAAA,KAAmB,EACvBjnD,EAAczhC,YAAY1J,IAAI,SAACoK,GAC3B,IAAM+gC,EAAgB/rC,EAAAmpB,EAAI2pE,IAAAA,IAAiB9nF,EAAUb,WAC9CnK,EAAAmpB,EAAI2pE,IAAAA,IAAiB9nF,EAAUb,IACtCnK,EAAAmpB,EAAIuqE,IAAAA,IAA4B3nD,GAChC/rC,EAAAmpB,EAAI6pE,IAAAA,KAAmB,CAC3B,GACApkD,EAAW7C,cAAgBA,CAC/B,EAAC9rC,EAED43D,iBAAA,SAAiBjpB,GACb,GAAI5uC,EAAAH,KAAIyyF,IAAAA,IAAc1jD,EAAWzkC,IAAK,CAClC,IAAM4hC,EAAgB/rC,EAAAH,KAAIizF,IAAAA,IAAiBlkD,EAAWzkC,WAC/CnK,EAAAH,KAAIizF,IAAAA,IAAiBlkD,EAAWzkC,IACvCnK,OAAI0zF,IAAAA,IAA4B3nD,GAChC/rC,EAAAH,KAAImzF,IAAAA,KAAmB,EACvBpkD,EAAW7C,cAAgB,IAC9B,CACL,EAAC9rC,EAmBDqwF,eAAA,SAAejyC,GACX,OAAOr+C,OAAIkzF,IAAAA,IAAU1vE,QAAQ66B,EACjC,EAACp+C,EAKDm1F,eAAA,SAAe7J,GACXvrF,EAAAH,KAAIqzF,IAAAA,IAAUvvE,WAAW4nE,EAC7B,EAACtrF,EAEDykD,cAAA,SAAc3F,GACV/+C,EAAAH,KAAI8yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDo1F,mBAAA,SAAmBt2C,EAAmBta,GAClCzkC,EAAIH,KAAAqxD,IAAAA,IAAkB10C,IAAIioB,GAC1BzkC,EAAIH,KAAA8yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDq1F,gBAAA,SAAgBv2C,EAAmBp2B,GAC/B3oB,EAAIH,KAAA6yF,IAAAA,IAAiB/pE,EACrB3oB,EAAIH,KAAA8yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDs1F,cAAA,SAAcx2C,EAAmBp2B,GAC7B3oB,EAAIH,KAAAgzF,IAAAA,IAAelqE,EACnB3oB,EAAIH,KAAA8yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDiiD,gBAAA,WACI,OAAOmwC,IAAY7jB,GAAWE,qBAA+C,wBACjF,EAACzuE,EAEDu1F,cAAA,SAAcz2C,EAAmBp2B,GAC7B3oB,EAAIH,KAAA+yF,IAAAA,IAAejqE,EACnB3oB,EAAAH,KAAI8yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDw1F,sBAAA,SAAsB12C,EAAmBp2B,GACrC3oB,OAAIyyF,IAAAA,IAAuB9pE,EAC3B3oB,OAAI2yF,IAAAA,KAAe,CACvB,EAAC1yF,EAEDa,MAAA,SAAMi+C,GACF,IAAMwhB,EAAKvgE,EAAAH,KAAIktF,IAAAA,IAAgBxsB,GAC/BA,EAAGm1B,SAAS,EAAG,EAAGn1B,EAAGiW,mBAAoBjW,EAAGgW,qBAC5Cv2E,EAAIH,KAAI2yF,IAAAA,IACJjyB,EAAGo1B,WAAW,EAAG,EAAG,EAAG,GAEvBp1B,EAAGo1B,WAAW31F,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAIlxD,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAIlxD,EAAIH,KAAAqxD,IAAAA,IAAkB,GAAI,GAEhGqP,EAAGz/D,MAAMy/D,EAAGq1B,iBAAmBr1B,EAAGs1B,iBACtC,EAAC51F,EAED21D,aAAA,SAAa7W,GACT,IAAK,IAAI+2C,KAAU91F,EAAIH,KAAI2zF,IAAAA,IAEvBxzF,OAAIwzF,IAAAA,IAAiBsC,GAAY/iB,aAEzC,EAAC9yE,EAED81F,YAAA,SAAYh3C,GACR,OAAQ/+C,EAAIH,KAAA8yF,IAAAA,KAAA3yF,EAAgBH,KAAImzF,IAAAA,KAAgBhzF,EAAIH,KAAIozF,IAAAA,GAC5D,EAAChzF,EAEDgtD,OAAA,SAAOlO,EAAmBve,IAGtBA,EAASA,GAAU,CAAA,GACRs3B,QACP93D,EAAAH,KAAI8yF,IAAAA,KAAe,GAEvB3yF,EAAIH,KAAImuF,IAAAA,MACUnuF,KAAK2rF,YAAauG,kBAChC/xF,OAAIguF,IAAAA,KAAoB,GAE5BhuF,OAAI2zF,IAAAA,MACJ3zF,EAAIH,KAAI8yF,IAAAA,MACJ3yF,EAAIH,KAAAg0F,IAAAA,IAAO,CAAC/yF,OAAO,IACnBd,EAAAH,KAAI8yF,IAAAA,KAAe,EAE3B,EAAC1yF,EAED+1F,gBAAA,SAAgBj3C,EAAmBve,GAC/B,OACJ,IAAA,EAAC2zD,CAAA,CA9OD,GA0sBH,SAAAU,GAnkB8B9oD,GACvB,IAAM0Z,EAAsB1Z,EAAc0Z,oBAC1C,IAAK,IAAIt7C,KAAMs7C,EACX5lD,KAAK4lD,oBAAoBt7C,GAAMs7C,EAAoBt7C,EAE3D,CAAC,SAAAyqF,GAE0B7oD,GACvB,IAAM0Z,EAAsB1Z,EAAc0Z,oBAC1C,IAAK,IAAIt7C,KAAMs7C,SACJ5lD,KAAK4lD,oBAAoBt7C,EAExC,CAAC,SAAAwqF,KA8FG30F,EAAIH,KAAImzF,IAAAA,MACJhzF,EAAAH,KAAI+zF,IAAAA,MACJ5zF,EAAAH,KAAImzF,IAAAA,KAAmB,EACvBhzF,EAAIH,KAAAozF,IAAAA,KAAmB,GAE3BjzF,EAAIH,KAAIozF,IAAAA,MAEJjzF,EAAAH,KAAIozF,IAAAA,KAAmB,EACvBjzF,EAAAH,KAAI8yF,IAAAA,KAAe,EAE3B,CAAC,SAAA+B,KAGG,IAAIuB,EAAkB,EACtB,IAAK,IAAI9rF,KAAEnK,EAAIH,KAAIizF,IAAAA,IAEf,IADA,IAAMoD,EAA0Bl2F,EAAIH,KAAAizF,IAAAA,IAAiB3oF,GAC5C7G,EAAI,EAAG8S,EAAM8/E,EAAwBtG,UAAU5sF,OAAQM,EAAI8S,EAAK9S,IACrEtD,EAAIH,KAAAkzF,IAAAA,IAAYkD,KAAqBC,EAAwBtG,UAAUtsF,GAG/EtD,EAAIH,KAAAkzF,IAAAA,IAAY/vF,OAASizF,CAC7B,CAAC,SAAAxB,GAEKj0D,GAGFxgC,EAAIH,KAAAi0F,IAAAA,MACA9zF,OAAI4yF,IAAAA,KAAgB5yF,EAAAH,KAAIyjF,IAAAA,IAAOxxB,IAAIukB,UACnCr2E,OAAI+zF,IAAAA,IAAiBvzD,GAEzBxgC,EAAIH,KAAAo0F,IAAAA,IAAYzzD,EACpB,CAAC,SAAAg0D,KAGOhmB,GAAWE,qBAA6C,yBACxD1uE,EAAIH,KAAAuzF,IAAAA,IAAmB+C,uBAAyBn2F,OAAI+sF,IAAAA,IAAgBxsB,GAAGsF,aAAa,2BAEpF7lE,EAAIH,KAAAwzF,IAAAA,KAAmC7kB,GAAWE,qBAAqC,iBACvF1uE,EAAAH,KAAIuzF,IAAAA,IAAmBgD,eAAiBp2F,EAAAH,KAAIktF,IAAAA,IAAgBxsB,GAAGsF,aAAa,mBAE5E2I,GAAWE,qBAA0C,sBACrD1uE,EAAIH,KAAAuzF,IAAAA,IAAmBiD,oBAAsBr2F,EAAIH,KAAAktF,IAAAA,IAAgBxsB,GAAGsF,aAAa,uBAEzF,CAAC,SAAA0uB,GAEe/zD,GAEf,CA4BA,SAAA8zD,GAEU9zD,GAGPxgC,EAAAH,KAAIktF,IAAAA,IAAgB1rD,QACpB,IAAMk/B,EAAKvgE,EAAAH,KAAIktF,IAAAA,IAAgBxsB,GAC/BA,EAAGm1B,SAAS,EAAG,EAAGn1B,EAAGiW,mBAAoBjW,EAAGgW,qBAC5ChW,EAAGo1B,WAAW,EAAG,EAAG,EAAG,GACvBp1B,EAAG+1B,OAAO/1B,EAAGg2B,YACbh2B,EAAGi2B,UAAUj2B,EAAGk2B,KAChBl2B,EAAG+1B,OAAO/1B,EAAGm2B,WACbn2B,EAAGo2B,WAAU,IACQ,IAAjBn2D,EAAO1/B,OACPy/D,EAAGz/D,MAAMy/D,EAAGq1B,iBAAmBr1B,EAAGs1B,iBAgB1C,CAAC,SAAAxB,GAEU7zD,GAIP,IAAMxS,EAAIhuB,EAAGH,KAAIyjF,IAAAA,IACX5Q,EAAa1yE,EAAGH,KAAIktF,IAAAA,IACpBxsB,EAAKmS,EAAcnS,GAEnBq2B,EAA4B,GAC5BC,EAA+B,GAC/BC,EAAoC,GACpCC,EAAoC,GACpCC,EAAqC,GACrCC,EAA8B,GAC9BC,EAA0C,GAC1CC,EAAmC,GACnCC,EAA0C,GAC1CC,EAAqC,GACrCC,EAA+C,GAC/CC,EAA0C,GAC1CC,EAAuC,GACvCC,EAAkC,GAClCC,EAA4C,GAC5CC,EAAuC,GAE7CjlB,EAAcrxC,QACdqxC,EAAcpC,SAAU,EACxBoC,EAAcrC,WAAarwE,EAAAH,KAAIgzF,IAAAA,OAAkB7kE,EAAKs2B,cAEtDic,EAAGm1B,SAAS,EAAG,EAAGn1B,EAAGiW,mBAAoBjW,EAAGgW,qBAE5Cv2E,EAAIH,KAAI2yF,IAAAA,IACJjyB,EAAGo1B,WAAW,EAAG,EAAG,EAAG,GAEvBp1B,EAAGo1B,WAAW31F,EAAIH,KAAAqxD,IAAAA,IAAkB,GAAIlxD,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAIlxD,EAAAH,KAAIqxD,IAAAA,IAAkB,GAAI,GAGhGqP,EAAG+1B,OAAO/1B,EAAGg2B,YACbh2B,EAAGi2B,UAAUj2B,EAAGk2B,KAChBl2B,EAAG+1B,OAAO/1B,EAAGm2B,WACbn2B,EAAGo2B,WAAU,GACbp2B,EAAGhe,UAAU,GAEbmwB,EAAcnwB,UAAY,EAE1B,IAAMq1C,EAAc5pE,EAAK8jC,IAAIukB,SAEzBr2E,EAAIH,KAAA+yF,IAAAA,KAAgBgF,IAOpBllB,EAAchwC,iBAAmB,OAIhB,IAAjBlC,EAAO1/B,OACPy/D,EAAGz/D,MAAMy/D,EAAGq1B,iBAAmBr1B,EAAGs1B,kBAsBtC,IAjBA,IAAIgC,EAAsB,EACtBC,EAAyB,EACzBC,EAA8B,EAC9BC,EAA8B,EAC9BC,EAA+B,EAC/BC,EAAwB,EACxBC,EAAoC,EACpCC,EAA6B,EAC7BC,EAAoC,EACpCC,EAA+B,EAC/BC,EAAyC,EACzCC,EAAoC,EACpCC,EAAiC,EACjCC,EAA4B,EAC5BC,EAAsC,EACtCC,EAAiC,EAE5Bt1F,EAAI,EAAG8S,EAAMpW,EAAIH,KAAAkzF,IAAAA,IAAY/vF,OAAQM,EAAI8S,EAAK9S,IAAK,CAExD,IAAM26C,EAAQj+C,EAAIH,KAAAkzF,IAAAA,IAAYzvF,GACxBmhF,EAAaxmC,EAAMwmC,WAErBA,EAAW1M,YAAc0M,EAAWt4C,WAAuC,IAA1Bs4C,EAAWlN,aAI5DkN,EAAWjN,eAAiBiN,EAAWt4C,YACnCnsC,EAAAH,KAAI+yF,IAAAA,KAAgBgF,GAAe35C,EAAMlS,cAAcuY,cACvDsyC,EAAiBiB,KAAyB55C,EAE1Cj+C,OAAIk0F,IAAAA,IAAYj2C,EAAOizB,GAAcE,aAAcnzB,EAAMlS,cAAcuY,gBAI/EtkD,EAAIH,KAAI4yF,IAAAA,KACAhO,EAAWjN,iBACXsf,EAAyBiB,KAAiC95C,GAI9DwmC,EAAW/M,UAAY,GACnB1pD,EAAKikC,aAAahoB,OACdjc,EAAKikC,aAAapM,UAAY,EAC9BqxC,EAA+BiB,KAAuCl6C,EAEtE+4C,EAA0BiB,KAAkCh6C,GAKpEwmC,EAAW7M,eAAiB,GACxB5pD,EAAKkkC,kBAAkBjoB,OACnBjc,EAAKkkC,kBAAkBrM,UAAY,EACnCyxC,EAAoCiB,KAA4Ct6C,EAEhFm5C,EAA+BiB,KAAuCp6C,GAK9EwmC,EAAW9M,YAAc,GACrB3pD,EAAKmkC,iBAAiBloB,OAClBjc,EAAKmkC,iBAAiBtM,UAAY,EAClC6xC,EAAiCiB,KAAyC16C,EAE1Eu5C,EAA4BiB,KAAoCx6C,GAKxEj+C,OAAI0yF,IAAAA,KAAkB1yF,EAAIH,KAAAyjF,IAAAA,IAAOlxB,aAAahqB,OAC1Cq8C,EAAWhN,SAAW,IAClBgN,EAAWjN,eAAiBiN,EAAWt4C,YACvC0qD,EAAoBiB,KAA4B75C,GAEhDwmC,EAAWjN,eAAiB,IAC5Buf,EAAyBiB,KAAiC/5C,GAE1DjwB,EAAKmkC,iBAAiBpM,UAAY,EAClC4xC,EAA4BiB,KAAoC36C,EAEhEw5C,EAAuBiB,KAA+Bz6C,EAEtDjwB,EAAKikC,aAAalM,UAAY,EAC9BoxC,EAAwBiB,KAAgCn6C,EAExDg5C,EAAmBiB,KAA2Bj6C,EAE9CjwB,EAAKkkC,kBAAkBnM,UAAY,EACnCwxC,EAA+BiB,KAAuCv6C,EAEtEo5C,EAA0BiB,KAAkCr6C,GAI3E,CAIG45C,EAAsB,IACtBnlB,EAAcpC,SAAU,GAO5B,IAAK,IAAIhtE,EAAI,EAAGA,EAAIw0F,EAAwBx0F,IACxCtD,EAAIH,KAAAq0F,IAAAA,IAAY2C,EAAoBvzF,GAAI4tE,GAAcO,oBAG1D,IAAK,IAAInuE,EAAI,EAAGA,EAAI20F,EAA8B30F,IAC9CtD,EAAAH,KAAIq0F,IAAAA,IAAY8C,EAA0B1zF,GAAI4tE,GAAcM,mBAGhE,IAAK,IAAIluE,EAAI,EAAGA,EAAI40F,EAAuB50F,IACvCtD,EAAIH,KAAAq0F,IAAAA,IAAY+C,EAAmB3zF,GAAI4tE,GAAcW,cAGzD,GAAIsmB,EAAoC,GAAKC,EAA6B,GAAKL,EAA8B,GAAKC,EAA8B,EAAG,CAC/Iz3B,EAAG+1B,OAAO/1B,EAAGm2B,WACbn2B,EAAG+1B,OAAO/1B,EAAGs4B,OACb74F,EAAIH,KAAI2yF,IAAAA,KACJjyB,EAAGu4B,cAAcv4B,EAAGw4B,UACpBx4B,EAAGy4B,kBAAkBz4B,EAAG04B,UAAW14B,EAAG24B,oBAAqB34B,EAAG44B,IAAK54B,EAAG24B,uBAEtE34B,EAAGu4B,cAAcv4B,EAAGw4B,UACpBx4B,EAAG64B,UAAU74B,EAAG04B,UAAW14B,EAAG24B,sBAElCxmB,EAAczsB,WAAY,EACtBjmD,EAACH,KAAIyzF,IAAAA,KACL/yB,EAAGo2B,WAAU,GAEjB,IAAK,IAAIrzF,EAAI,EAAGA,EAAI80F,EAA4B90F,IAC5CtD,EAAIH,KAAAq0F,IAAAA,IAAYiD,EAAwB7zF,GAAI4tE,GAAcW,cAE9D,IAAK,IAAIvuE,EAAI,EAAGA,EAAI60F,EAAmC70F,IACnDtD,OAAIk0F,IAAAA,IAAYgD,EAA+B5zF,GAAI4tE,GAAcM,oBAEjEumB,EAA8B,GAAKC,EAA8B,IACjEz3B,EAAG64B,UAAU74B,EAAG04B,UAAW14B,EAAG24B,qBAElC,IAAK,IAAI51F,EAAI,EAAGA,EAAI00F,EAA6B10F,IAC7CtD,EAAAH,KAAIq0F,IAAAA,IAAY6C,EAAyBzzF,GAAI4tE,GAAcQ,yBAE/D,IAAK,IAAIpuE,EAAI,EAAGA,EAAIy0F,EAA6Bz0F,IAC7CtD,EAAAH,KAAIq0F,IAAAA,IAAY4C,EAAyBxzF,GAAI4tE,GAAcG,mBAE/D9Q,EAAG84B,QAAQ94B,EAAGs4B,OACV74F,EAACH,KAAIyzF,IAAAA,KACL/yB,EAAGo2B,WAAU,EAEpB,CAED,GAAI0B,EAAoC,GAAKC,EAA+B,EAAG,CAC3E5lB,EAAczB,eAAiB,EAC/B1Q,EAAGz/D,MAAMy/D,EAAGs1B,kBACZ,IAAK,IAAIvyF,EAAI,EAAGA,EAAIg1F,EAA8Bh1F,IAC9CtD,EAAIH,KAAAq0F,IAAAA,IAAYmD,EAA0B/zF,GAAI4tE,GAAcS,mBAEhE,IAAK,IAAIruE,EAAI,EAAGA,EAAI+0F,EAAmC/0F,IACnDtD,EAAAH,KAAIq0F,IAAAA,IAAYkD,EAA+B9zF,GAAI4tE,GAAcI,uBAExE,CAED,GAAIinB,EAAyC,GAAKC,EAAoC,GAAKH,EAAoC,EAAG,CAC9H3lB,EAAczB,eAAiB,EAC/B1Q,EAAGz/D,MAAMy/D,EAAGs1B,kBACZt1B,EAAG+1B,OAAO/1B,EAAGm2B,WACbn2B,EAAG+1B,OAAO/1B,EAAGs4B,OACb74F,EAAIH,KAAI2yF,IAAAA,KACJjyB,EAAGu4B,cAAcv4B,EAAGw4B,UACpBx4B,EAAGy4B,kBAAkBz4B,EAAG04B,UAAW14B,EAAG24B,oBAAqB34B,EAAG44B,IAAK54B,EAAG24B,sBAEtE34B,EAAG64B,UAAU74B,EAAG04B,UAAW14B,EAAG24B,qBAElC,IAAK,IAAI51F,EAAI,EAAGA,EAAIk1F,EAAmCl1F,IACnDtD,OAAIk0F,IAAAA,IAAYqD,EAA+Bj0F,GAAI4tE,GAAcS,mBAErE,IAAK,IAAIruE,EAAI,EAAGA,EAAIi1F,EAAwCj1F,IACxDtD,EAAAH,KAAIq0F,IAAAA,IAAYoD,EAAoCh0F,GAAI4tE,GAAcI,wBAE1E/Q,EAAG84B,QAAQ94B,EAAGs4B,MACjB,CAED,GAAIJ,EAAiC,GAAKC,EAA4B,EAAG,CACrEhmB,EAAczB,eAAiB,EAC/B1Q,EAAGz/D,MAAMy/D,EAAGs1B,kBACZ,IAAK,IAAIvyF,EAAI,EAAGA,EAAIo1F,EAA2Bp1F,IAC3CtD,EAAAH,KAAIq0F,IAAAA,IAAYuD,EAAuBn0F,GAAI4tE,GAAcU,gBAE7D,IAAK,IAAItuE,GAAI,EAAGA,GAAIm1F,EAAgCn1F,KAChDtD,EAAIH,KAAAq0F,IAAAA,IAAYsD,EAA4Bl0F,IAAI4tE,GAAcK,oBAErE,CAED,GAAIonB,EAAsC,GAAKC,EAAiC,EAAG,CAC/ElmB,EAAczB,eAAiB,EAC/B1Q,EAAGz/D,MAAMy/D,EAAGs1B,kBACZt1B,EAAG+1B,OAAO/1B,EAAGm2B,WACbn2B,EAAG+1B,OAAO/1B,EAAGs4B,OACb74F,EAAIH,KAAI2yF,IAAAA,KACJjyB,EAAGu4B,cAAcv4B,EAAGw4B,UACpBx4B,EAAGy4B,kBAAkBz4B,EAAG04B,UAAW14B,EAAG24B,oBAAqB34B,EAAG44B,IAAK54B,EAAG24B,sBAEtE34B,EAAG64B,UAAU74B,EAAG04B,UAAW14B,EAAG24B,qBAElC,IAAK,IAAI51F,GAAI,EAAGA,GAAIs1F,EAAgCt1F,KAChDtD,EAAAH,KAAIq0F,IAAAA,IAAYyD,EAA4Br0F,IAAI4tE,GAAcU,gBAElE,IAAK,IAAItuE,GAAI,EAAGA,GAAIq1F,EAAqCr1F,KACrDtD,EAAAH,KAAIq0F,IAAAA,IAAYwD,EAAiCp0F,IAAI4tE,GAAcK,qBAEvEhR,EAAG84B,QAAQ94B,EAAGs4B,MACjB,CAGD,IADA,IAAMS,GAAkB9qB,GAAWiB,kBAC1B8pB,GAAK,EAAGA,GAAKD,GAAiBC,KACnCh5B,EAAGmB,cAAcnB,EAAGqM,SAAW2sB,IAEnCh5B,EAAGe,YAAYf,EAAG+K,iBAAkB,MACpC/K,EAAGe,YAAYf,EAAGoB,WAAY,MAG9B,IADA,IAAM63B,GAAmBhrB,GAAWoB,mBAC3B2pB,GAAK,EAAGA,GAAKC,GAAkBD,KACpCh5B,EAAGk5B,yBAAyBF,GAEpC,CAAC,SAAAnF,GAEUn2C,EAAcwyB,EAAoBipB,GACzC,gBADyCA,IAAAA,GAAmB,GACpDz7C,EAAMg1B,YAAYxyC,WACtB,KAAK9yB,GACL,KAAKE,GACL,KAAKD,GACD,OAAQ6iE,GACJ,KAAKS,GAAcE,aACf,GAAInzB,EAAMwmC,WAAWjN,iBAAmBv5B,EAAMwmC,WAAWt4C,WAAa8R,EAAMwmC,WAAW/M,YAAcz5B,EAAMwmC,WAAWt4C,UAClH,OAEAutD,GAGA15F,OAAIwzF,IAAAA,IAAiB2B,eAAeniB,KAAK/0B,GAE7C,MACJ,KAAKizB,GAAcG,kBACf,GAAwC,IAApCpzB,EAAMwmC,WAAWjN,eACjB,OAEAkiB,GAGA15F,EAAIH,KAAA2zF,IAAAA,IAAiB2B,eAAeniB,KAAK/0B,IA+CjE,0CC9wBE2J,GAAY54C,KACZqhC,GAAUrhC,KAEV0kB,GAAYxkB,KACZC,GAAYD,KACZE,GAAYF,KAEZH,GAAYC,KACZO,GAAYP,KACZ2qF,GAAY3qF,KAAa4qF,gBAAAp6F,EAKzB,aAAAq6F,gBAIF,WAAA,SAAAA,EAAYC,GAA4Bn6F,OAAAC,eAAAC,KAAA+5F,GAAA75F,CAAAA,MAAAg6F,KAAAl6F,KAFhCmuB,UAGJ,EAAAnuB,KAAKmuB,KAAO8rE,EAAc9rE,IAC9B,CAAC,IAAA/tB,EAAA45F,EAAA35F,UA0EA25F,OA1EA55F,EAaD+5F,iBAAA,SAAiBC,EAA6BC,EAAsBC,GAEhE,IAAIC,GAAwB,EAEtB/3C,EAASxiD,KAAKmuB,KAAKq0B,OAQzB,GANI43C,IAGAG,EADwB3oF,GADCrB,GAAQ6pF,EAAwB53C,EAAOuH,IAAKl2B,KAE1BymE,GAG3C93C,EAAOD,iBAAmBp0C,GAA2B,CAErDq0C,EAAOgH,gBAAgBttC,MAAQsmC,EAAOgH,gBAAgBttC,MAAQo+E,EAE9D,IAEME,EAAUrqF,GAAcuC,GADfnC,GADUpQ,EAAGH,KAAI+5F,IAAAA,IAAYM,EAAiBnrF,IACjBszC,EAAOuH,IAAK+vC,MACFQ,EAAY,IAKlE,GAHA93C,EAAOuH,IAAM,CAACvH,EAAOuH,IAAI,GAAKywC,EAAQ,GAAIh4C,EAAOuH,IAAI,GAAKywC,EAAQ,GAAIh4C,EAAOuH,IAAI,GAAKywC,EAAQ,IAC9Fh4C,EAAOwH,KAAO,CAACxH,EAAOwH,KAAK,GAAKwwC,EAAQ,GAAIh4C,EAAOwH,KAAK,GAAKwwC,EAAQ,GAAIh4C,EAAOwH,KAAK,GAAKwwC,EAAQ,IAE9FJ,EAAwB,CAQxB,IACMK,EAAkB7oF,GADHrB,GAAQ6pF,EAAwB53C,EAAOuH,IAAKl2B,KAE3Dm1B,EAAa74C,GAAcuC,GAAcnC,GAAQiyC,EAAOwH,KAAMxH,EAAOuH,IAAKz6C,KAAamrF,GAC7Fj4C,EAAOwH,KAAO,CAACxH,EAAOuH,IAAI,GAAKf,EAAW,GAAIxG,EAAOuH,IAAI,GAAKf,EAAW,GAAIxG,EAAOuH,IAAI,GAAKf,EAAW,GAC3G,CAEJ,MAAUxG,GAAAA,EAAOD,iBAAmBn0C,GAAqB,CAMtD,IAAMssF,EAASv6F,EAAGH,KAAI+5F,IAAAA,IAAYM,EAAiBnrF,IAEnDszC,EAAOgH,gBAAgBttC,MAAQsmC,EAAOgH,gBAAgBttC,MAAQo+E,EAC9D93C,EAAOgH,gBAAgBx+C,QAEvB,IAGMwvF,EAAUnqF,GAFDE,GADApQ,EAAGH,KAAI+5F,IAAAA,IAAYM,EAAiB3qF,IACjBgrF,EAAWZ,IACtB3pF,GAAcuC,GAAcnC,GAAQiyC,EAAOwH,KAAMxH,EAAOuH,IAAKl2B,MAAcymE,EAAYhrF,IAC9DC,IAEhDizC,EAAOuH,IAAM,CAACvH,EAAOuH,IAAI,GAAKywC,EAAQ,GAAIh4C,EAAOuH,IAAI,GAAKywC,EAAQ,GAAIh4C,EAAOuH,IAAI,GAAKywC,EAAQ,IAC9Fh4C,EAAOwH,KAAO,CAACxH,EAAOwH,KAAK,GAAKwwC,EAAQ,GAAIh4C,EAAOwH,KAAK,GAAKwwC,EAAQ,GAAIh4C,EAAOwH,KAAK,GAAKwwC,EAAQ,GACrG,CAED,OAAOD,CACX,EAACn6F,EAED6K,QAAA,WACC,EAAA+uF,CAAA,CA5ED,YA4ECE,GAEUnqD,EAA4BjY,GAEnC,IAAM0qB,EAASxiD,KAAKmuB,KAAKq0B,OACnBm4C,EAAuBn4C,EAAO4zB,QAAQ3uB,qBAEtCmzC,EAAMD,EAAqBte,SAAS,EAAG,IAEvCwe,EAAMF,EAAqBte,SAAS,IACpClB,EAAI,CAAC,EAAG,GAAI,EAAK,GACjBrzB,EAAUh3C,GAAQqqE,EAAGyf,GAAO9pF,GAAQqqE,EAAG0f,GAI7C,OAFAr4C,EAAO4zB,QAAQvuB,UAAU9X,EAAW+X,EAASC,GAAWvX,GAAS1Y,GAE1DA,CACX,CC1GJ,IAAMjE,GAAYxkB,KACZC,GAAYD,KACZE,GAAYF,KAEZH,GAAYC,KACZO,GAAYP,KACZ2qF,GAAY3qF,KAAas0E,gBAAA9jF,EAAA,QAAAm7F,gBAAAn7F,EAAAo7F,WAAAA,gBAAAp7F,EAAAq7F,iBAAAA,gBAAAr7F,kBAAAs7F,gBAAAt7F,EAAA,WAAAu7F,gBAAAv7F,EAAA,SAAAw7F,gBAAAx7F,EAAAy7F,UAAAA,gBAAAz7F,EAAA07F,eAAAA,gBAAA17F,EAAA,YAAA27F,gBAAA37F,EAAA,SAAA47F,gBAAA57F,EAAA67F,gBAAAA,gBAAA77F,kBAAA87F,gBAAA97F,EAAA,kBAAA+7F,gBAAA/7F,EAAAg8F,eAAAA,gBAAAh8F,EAAAi8F,gBAAAA,gBAAAj8F,EAAA,gBAAAyxD,gBAAAzxD,EAAA,UAAAk8F,gBAAAl8F,EAAAm8F,eAAAA,gBAAAn8F,EAAAo8F,gBAAAA,gBAAAp8F,4BAKzBq8F,gBAyBF,WAAA,SAAAA,EAAY/B,EAA8BgC,GAAY7wF,IAAAA,EAAAtL,KAAAA,OAAAC,eAAAg8F,KAAAA,IAAA77F,MAAAg8F,KAAAp8F,OAAAC,eAAAC,KAAAyjF,GAAAxjF,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,oBAAA+6F,GAAA,CAAA76F,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,oBAAAg7F,GAAA,CAAA96F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAi7F,KAAAA,GAAA/6F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAi7F,GAAA,CAAAh7F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAm7F,KAAAA,GAAAj7F,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAm7F,GAAA,CAAAl7F,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAq7F,KAAAA,GAAAn7F,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAq7F,GAAA,CAAAp7F,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAs7F,GAAA,CAAAr7F,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAw7F,KAAAA,IAAAt7F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAw7F,GAAAv7F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,oBAAA07F,GAAA,CAAAx7F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA27F,KAAAA,GAAAz7F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA27F,GAAA,CAAA17F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA67F,KAAAA,GAAA37F,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAAoxD,GAAAnxD,CAAAA,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAC,KAAA67F,GAAA,CAAA57F,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAA+7F,KAAAA,GAAA77F,CAAAA,YAAAC,WAAA,IAElDC,EAAAH,KAAIyjF,IAAAA,IAASwW,EAAc9rE,KAC3BhuB,EAAAH,KAAI86F,IAAAA,IAAYmB,EAChB97F,EAAAH,KAAI+6F,IAAAA,IAAkB1rF,KACtBlP,EAAIH,KAAAg7F,IAAAA,IAAiB3rF,KACrBlP,EAAAH,KAAIi7F,IAAAA,IAAY,EAChB96F,EAAIH,KAAAk7F,IAAAA,IAAU,EACd/6F,EAAIH,KAAAm7F,IAAAA,IAAW,EACfh7F,EAAIH,KAAAo7F,IAAAA,KAAgB,EACpBj7F,EAAIH,KAAAq7F,IAAAA,KAAa,EACjBl7F,EAAIH,KAAAs7F,IAAAA,KAAU,EACdn7F,EAAIH,KAAAu7F,IAAAA,IAAiBpsF,KACrBhP,EAAAH,KAAIw7F,IAAAA,IAAiBrsF,KACrBhP,OAAIo7F,IAAAA,IAAiBzrF,KACrB3P,OAAIu7F,IAAAA,KAAgB,EAEpBv7F,OAAIw7F,IAAAA,IAAiBx7F,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OAAOoH,aAAatpD,UAAU,WAC1DH,EAAAiL,EAAIswF,IAAAA,KAAgB,CACxB,GAEAv7F,EAAIH,KAAA47F,IAAAA,IAAiBz7F,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OAAO6E,aAAa/mD,UAAU,WAC1DH,EAAAiL,EAAIswF,IAAAA,KAAgB,CACxB,GAEAv7F,EAAAH,KAAIoxD,IAAAA,IAAWjxD,EAAAH,KAAIyjF,IAAAA,IAAOthC,OAAO8K,OAAO3sD,UAAU,WAC9C8K,EAAK+wF,oBACT,EACJ,CAAC,IAAA/7F,EAAA47F,EAAA37F,UAsNA27F,OAtNA57F,EAED+7F,mBAAA,WACI,IAAM35C,EAASriD,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OACpBwF,EAAgB7nD,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cACjC,GAAI7nD,EAAAH,KAAIq7F,IAAAA,KAAAl7F,EAAcH,KAAI07F,IAAAA,IAAe,CACrChhF,GAAgB8nC,EAAOtS,WAAYlwC,KAAKo8F,cAAaj8F,EAAEH,KAAIu7F,IAAAA,KAC3Dp7F,EAAIH,KAAAu7F,IAAAA,IAAe,GAAK,EACxB3gF,GAAgB4nC,EAAOrS,WAAUhwC,EAAEH,KAAIu7F,IAAAA,IAAAp7F,EAAgBH,KAAIw7F,IAAAA,KAC3D,IAAMa,EAAal8F,EAAIH,KAAAyjF,IAAAA,IAAO9mC,SACxB2/C,EAAcD,EAAW,GACzBE,EAAeF,EAAW,GAChCl8F,EAAIH,KAAAu7F,IAAAA,IAAe,GAAK/xF,KAAKwnB,OAAO,EAAI7wB,EAAAH,KAAIw7F,IAAAA,IAAe,GAAKr7F,EAAIH,KAAAw7F,IAAAA,IAAe,IAAMc,EAAc,GACvGn8F,EAAIH,KAAAu7F,IAAAA,IAAe,GAAK/xF,KAAKwnB,OAAO,EAAI7wB,OAAIq7F,IAAAA,IAAe,GAAKr7F,EAAIH,KAAAw7F,IAAAA,IAAe,IAAMe,EAAe,GACxG,IAAMC,EAAqBx0C,EAAcy0C,wBACzCt8F,EAAIH,KAAI87F,IAAAA,MACJ37F,EAAAH,KAAI87F,IAAAA,IAAeY,MAAMtoF,KAAQ5K,KAAKwnB,MAAMwrE,EAAmBpoF,KAAOjU,EAAAH,KAAIu7F,IAAAA,IAAe,IAAOp7F,EAAIH,KAAA87F,IAAAA,IAAenoC,YAAc,EAAK7lC,OAAO6uE,QAAW,KACxJx8F,OAAI27F,IAAAA,IAAeY,MAAMnoF,IAAO/K,KAAKwnB,MAAMwrE,EAAmBjoF,IAAMpU,EAAIH,KAAAu7F,IAAAA,IAAe,IAAOp7F,EAAIH,KAAA87F,IAAAA,IAAeloC,aAAe,EAAK9lC,OAAO8uE,QAAW,MAE3Jz8F,EAAIH,KAAA07F,IAAAA,KAAgB,CACvB,CACL,EAACt7F,EAODy8F,gBAAA,SAAgBC,GACZ38F,EAAIH,KAAA87F,IAAAA,IAAiBgB,CACzB,EAAC18F,EAKD28F,WAAA,WACI,GAAA58F,EAAIH,KAAI+7F,IAAAA,MAEJ,OADA57F,EAAAH,KAAIq7F,IAAAA,KAAa,GACV,EAEX,IAAM74C,EAASriD,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OACtBw6C,EAASnnF,GAAY2sC,EAAOuH,IAAKvH,EAAOwH,KAAMxH,EAAOyH,SACzDvvC,GAAgBsiF,EAAQh9F,KAAKo8F,cAAaj8F,EAAEH,KAAIg7F,IAAAA,KAChD,IAAMiC,EAAWj9F,KAAKo8F,cACtBj8F,EAAAH,KAAIg7F,IAAAA,IAAe,IAAMlpF,GAAS0wC,EAAOuH,IAAKkzC,GAE9C,IAAM/mE,EAAS1a,GADfwhF,EAAS/lF,GAAY+lF,GACc78F,EAAEH,KAAIg7F,IAAAA,KACnCkC,EAAO7tF,KAGb,GAFAkB,GAAQiyC,EAAOuH,IAAKkzC,EAAUC,GAC9B7sF,GAAQ6sF,EAAMhnE,GACVssB,EAAO26C,IAAK,CACZ,IAAMjrF,EAAIgrF,EAAK,GACfA,EAAK,GAAKA,EAAK,GACfA,EAAK,GAAKhrF,CACb,CACD/R,OAAIg7F,IAAAA,IAAWvpF,GAAQsrF,GACvB/8F,EAAIH,KAAAk7F,IAAAA,IAAU1xF,KAAKiW,KAAKy9E,EAAK,GAAE/8F,EAAGH,KAAIm7F,IAAAA,KACtCh7F,EAAAH,KAAIi7F,IAAAA,IAAYzxF,KAAKwU,MAAMk/E,EAAK,GAAIA,EAAK,IACzC/8F,EAAIH,KAAAq7F,IAAAA,KAAa,CACrB,EAACj7F,EAODg9F,YAAA,WACI,OAAAj9F,EAAOH,KAAIq7F,IAAAA,GACf,EAACj7F,EAODi9F,YAAA,SAAYvlE,GAER33B,EAAIH,KAAA+6F,IAAAA,IAAgBp+E,IAAImb,GACxB33B,EAAIH,KAAAo7F,IAAAA,KAAgB,CACxB,EAACh7F,EAQDk9F,kBAAA,SAAkBvtD,GACd,IAAMyS,EAASriD,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OACpB+6C,EAAmB/zF,KAAKuU,IAAIjM,GAASijB,GAAe50B,EAAAH,KAAIyjF,IAAAA,IAAO9xD,MAAO6wB,EAAOuH,MAC7E4wC,EAAuBn4C,EAAO4zB,QAAQ3uB,qBAEtCmzC,EAAMD,EAAqBte,SAAS,EAAG,IAEvCwe,EAAMF,EAAqBte,SAAS,IACpClB,EAAI,CAAC,EAAG,GAAI,EAAK,GACjBrzB,EAAUh3C,GAAQqqE,EAAGyf,GAAO9pF,GAAQqqE,EAAG0f,GACvC/iE,EAAW5oB,GACjBszC,EAAO4zB,QAAQvuB,UAAU9X,EAAW+X,EAASp4C,GAAWoqF,GAAWhiE,GACnE,IAAM0lE,EAAiB9qF,GAAcnC,GAAQunB,EAAU0qB,EAAOuH,IAAKl2B,KAC7D4pE,EAAcptF,GAAQmyC,EAAOuH,IAAK55C,GAAcqtF,EAAgBD,EAAkBjuF,IAAYC,IACpGvP,KAAKq9F,YAAYI,EACrB,EAACr9F,EAMDg8F,YAAA,WACI,OAAOj8F,EAACH,KAAIo7F,IAAAA,IAAAj7F,EAAiBH,KAAI+6F,IAAAA,IAAkB56F,EAAAH,KAAIyjF,IAAAA,IAAOjhC,OAAOwH,IACzE,EAAC5pD,EAQDs9F,cAAA,SAAcC,EAAgBC,GAC1B,GAAIz9F,EAACH,KAAIq7F,IAAAA,MAGM,IAAXsC,GAA6B,IAAbC,GAApB,CAGA,IAAMp7C,EAASriD,EAAAH,KAAIyjF,IAAAA,IAAOjhC,OACtBq7C,GAAMF,EACJG,GAAMF,EACc,IAAtBp7C,EAAOyH,QAAQ,KACf4zC,GAAMA,GAEV19F,EAAAH,KAAIi7F,IAAAA,KAAmB,KAAL4C,EAClB19F,OAAI+6F,IAAAA,KAAgB,IAAL4C,EACf39F,EAAAH,KAAIk7F,IAAAA,IAAUtsF,GAAKzO,EAACH,KAAIk7F,IAAAA,IAAS,KAAM1xF,KAAKo+C,GAAK,MACjD,IAAM9xC,EAAM,CACR3V,EAAAH,KAAIm7F,IAAAA,IAAW3xF,KAAKiM,IAAGtV,EAACH,KAAIk7F,IAAAA,KAAW1xF,KAAKiM,IAAGtV,EAACH,KAAIi7F,IAAAA,KACpD96F,EAAAH,KAAIm7F,IAAAA,IAAW3xF,KAAKmM,IAAGxV,EAACH,KAAIk7F,IAAAA,KAC5B/6F,EAAAH,KAAIm7F,IAAAA,IAAW3xF,KAAKiM,IAAGtV,EAACH,KAAIk7F,IAAAA,KAAW1xF,KAAKmM,IAAGxV,EAACH,KAAIi7F,IAAAA,MAExD,GAA0B,IAAtBz4C,EAAOyH,QAAQ,GAAU,CACzB,IAAM/3C,EAAI4D,EAAI,GACdA,EAAI,GAAKA,EAAI,GACbA,EAAI,GAAK5D,CACZ,CAED,IAAM6rF,EAAansF,GAAQrB,GAAQiyC,EAAOwH,KAAMxH,EAAOuH,IAAK16C,OACtD4tF,EAAWj9F,KAAKo8F,cACtB/rF,GAAQyF,EAAKmnF,GACb,IAAID,EAASnnF,GAAYC,EAAKmnF,EAAUz6C,EAAOyH,SAEzC/zB,EAAS1a,GADfwhF,EAAS/lF,GAAY+lF,GACc78F,EAAEH,KAAIg7F,IAAAA,KACzCgC,EAAO,KAAO9mE,EAAO,GACrB8mE,EAAO,KAAO9mE,EAAO,GACrB8mE,EAAO,KAAO9mE,EAAO,GACrB,IAAM8nE,EAAQ,CAAChB,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAC5Cx6C,EAAOuH,IAAM,CAACizC,EAAO,IAAKA,EAAO,IAAKA,EAAO,KAC7CzsF,GAAQiyC,EAAOuH,IAAK55C,GAAc6tF,EAAOD,GAAav7C,EAAOwH,MAC7DxH,EAAOxsC,GAAK,CAACgnF,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC1Ch9F,KAAKi+F,WAlCJ,CAmCL,EAAC79F,EAOD69F,UAAA,WAAS,IAAA30E,EACLtpB,KAAAG,EAAIH,KAAIs7F,IAAAA,MAGkB,OAAtBn7F,EAAIH,KAAA67F,IAAAA,MACJ/tE,OAAOowE,aAAY/9F,EAACH,KAAI67F,IAAAA,KACxB17F,EAAIH,KAAA67F,IAAAA,IAAgB,MAExB17F,EAAIH,KAAI87F,IAAAA,MACJ97F,KAAKm8F,qBACLh8F,EAAAH,KAAI87F,IAAAA,IAAeY,MAAMyB,WAAa,UACtCh+F,EAAIH,KAAAs7F,IAAAA,KAAU,EACdn7F,EAAIH,KAAA67F,IAAAA,IAAgB/tE,OAAOprB,WAAW,WAClC4mB,EAAK80E,WACT,EAAG,MAEX,EAACh+F,EAODg+F,UAAA,WACQj+F,EAACH,KAAIs7F,IAAAA,MAGiB,OAAtBn7F,OAAI07F,IAAAA,MACJ/tE,OAAOowE,aAAY/9F,EAACH,KAAI67F,IAAAA,KACxB17F,OAAI07F,IAAAA,IAAgB,MAExB17F,EAAIH,KAAI87F,IAAAA,MACJ37F,EAAIH,KAAA87F,IAAAA,IAAeY,MAAMyB,WAAa,UAE1Ch+F,EAAIH,KAAAs7F,IAAAA,KAAU,EAClB,EAACl7F,EAKDi+F,SAAA,WACIl+F,OAAIk7F,IAAAA,KAAa,CACrB,EAACj7F,EAED6K,QAAA,WACI9K,EAAAH,KAAIyjF,IAAAA,IAAOjhC,OAAOoH,aAAa/oD,YAAWV,EAACH,KAAI27F,IAAAA,KAC/Cx7F,EAAAH,KAAIyjF,IAAAA,IAAOjhC,OAAO6E,aAAaxmD,YAAWV,EAACH,KAAI47F,IAAAA,KAC/Cz7F,EAAIH,KAAAyjF,IAAAA,IAAOthC,OAAO8K,OAAOpsD,YAAWV,EAACH,KAAIoxD,IAAAA,IAC7C,EAAC4qC,CAAA,CAlPD,GAkPCE,SAAAA,KAGG,IAAM15C,EAASriD,EAAIH,KAAAyjF,IAAAA,IAAOjhC,OAI1B,OADmB9wC,GADDX,GADE2B,GAAcnC,GAAQiyC,EAAOwH,KAAMxH,EAAOuH,IAAKl2B,KACzB2uB,EAAOyH,QAAS36C,MAElC,IAC5B,CCjTsC,IAAAm0E,gBAAA9jF,EAAA2+F,QAAAA,gBAAA3+F,EAAA,iBAAA4+F,gBAAA5+F,YAAA6+F,gBAAA7+F,EAAA,sBAAA8+F,gBAAA9+F,EAOpC,kBAAA++F,gBAqCF,WAAA,SAAAA,EAAYzE,EAA8BgC,GAhC1C0C,KAAAA,+BAKAC,yBAAmB,EAAA5+F,KAKnB6+F,mBAKAC,EAAAA,KAAAA,mBAKAC,mBAAa,EAAA/+F,KAKb2sF,gBAAU,EAAA7sF,OAAAC,eAAA0jF,KAAAA,IAAAxjF,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAu+F,KAAAA,IAAAr+F,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAu+F,GAAA,CAAAt+F,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAw+F,GAAAv+F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAy+F,GAAAx+F,CAAAA,YAAAC,WAAA,IAQNC,EAAAH,KAAIyjF,IAAAA,IAASwW,EAAc9rE,KAC3BhuB,EAAAH,KAAIs+F,IAAAA,IAAkBrE,EACtB95F,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cAAcg3C,cAAgB,SAAC9uE,GACtCA,EAAE+uE,gBACN,EACA9+F,OAAIo+F,IAAAA,IAAWtC,EACfj8F,KAAK2+F,oBAAqB,EAC1B3+F,KAAK4+F,qBAAsB,EAC3B5+F,KAAK6+F,cAAgB/uF,KACrB9P,KAAK8+F,QAAS,EACd9+F,KAAK++F,eAAgB,EACrB/+F,KAAK2sF,WAAa,KAClBxsF,EAAIH,KAAAw+F,IAAAA,IAAuB,KAC3Br+F,OAAIs+F,IAAAA,KAAmB,CAC3B,CAAC,IAAAr+F,EAAAs+F,EAAAr+F,UAkIAq+F,OAlIAt+F,EAKD8+F,OAAA,WAEI,GAAK/+F,EAAIH,KAAAu+F,IAAAA,IAASY,iBAIbn/F,KAAK2+F,oBAAuB3+F,KAAK4+F,qBAAtC,CAIA5+F,KAAK8+F,QAAS,EACd9+F,KAAK++F,eAAgB,EACrB5+F,OAAIs+F,IAAAA,KAAmB,EAEvB,IAAMW,EAAuBj/F,OAAIm+F,IAAAA,IAAgBe,eAAeh+F,MAAQ,EAExE,GAAIrB,KAAK4+F,qBAED5+F,KAAK2sF,YAAc3sF,KAAK2sF,WAAW70D,SAAU,CAC7C,IAAMwnE,EAAoBt/F,KAAK2sF,WAAW58C,UAC1C,GAAIuvD,EAAkB,KAAOt/F,KAAK6+F,cAAc,IAAMS,EAAkB,KAAOt/F,KAAK6+F,cAAc,GAM9F,OALA7+F,KAAK8+F,QAAS,EACd9+F,KAAK++F,eAAgB,EACrB5+F,EAAAH,KAAIy+F,IAAAA,IAAmBW,EACvBp/F,KAAK2+F,oBAAqB,OAC1B3+F,KAAK4+F,qBAAsB,EAGlC,CAGL,GAAI5+F,KAAK2+F,oBACD3+F,KAAK2sF,WAAY,CACjB,IAAM2S,EAAoBt/F,KAAK2sF,WAAW58C,UAC1C,GAAIuvD,EAAkB,KAAOt/F,KAAK6+F,cAAc,IAAMS,EAAkB,KAAOt/F,KAAK6+F,cAAc,GAM9F,OALA7+F,KAAK8+F,QAAS,EACd9+F,KAAK++F,eAAgB,EACrB5+F,OAAIs+F,IAAAA,KAAmB,EACvBz+F,KAAK2+F,oBAAqB,OAC1B3+F,KAAK4+F,qBAAsB,EAGlC,CA8BL5+F,KAAK2+F,oBAAqB,EAC1B3+F,KAAK4+F,qBAAsB,CAjE1B,CAkEL,EAACx+F,EAEDm/F,WAAA,WAEI,GAAIp/F,EAACH,KAAIy+F,IAAAA,IAAT,CAIA,GAAIz+F,KAAK8+F,QAAU9+F,KAAK2sF,YAAc3sF,KAAK2sF,WAAW6S,OAAQ,CAE1D,IAAMC,EAAiBz/F,KAAK2sF,WAAW6S,OAAOl1F,GAE1CnK,EAAAH,KAAIw+F,IAAAA,MAAyBiB,SAEIn7E,IAA7BnkB,EAAAH,KAAIw+F,IAAAA,KAAmE,OAA7Br+F,OAAIq+F,IAAAA,KAC9Cr+F,OAAIm+F,IAAAA,IAAgBoB,WAAWj/F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiB,CACzDkB,OAAQr/F,EAAAH,KAAIyjF,IAAAA,IAAO5mD,QAAO18B,EAACH,KAAIw+F,IAAAA,OAIvCr+F,OAAIm+F,IAAAA,IAAgBoB,WAAWj/F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiBt+F,KAAK2sF,YAClExsF,EAAIH,KAAAw+F,IAAAA,IAAuBiB,GAG/Bt/F,EAAIH,KAAAs+F,IAAAA,IAAgBqB,QAAQl/F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiBt+F,KAAK2sF,YAE3D3sF,KAAK2sF,WAAW70D,WAChB93B,KAAK++F,eAAgB,EACrB5+F,OAAIm+F,IAAAA,IAAgBe,eAAe5+F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiBt+F,KAAK2sF,YAG7E,WAEoCroE,IAA7BnkB,EAAAH,KAAIw+F,IAAAA,KAAmE,OAA7Br+F,EAAIH,KAAAw+F,IAAAA,MAC9Cr+F,EAAAH,KAAIs+F,IAAAA,IAAgBoB,WAAWj/F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiB,CACzDkB,OAAQr/F,EAAIH,KAAAyjF,IAAAA,IAAO5mD,QAAO18B,EAACH,KAAIw+F,IAAAA,OAEnCr+F,EAAIH,KAAAw+F,IAAAA,SAAuBl6E,GAG/BnkB,EAAIH,KAAAs+F,IAAAA,IAAgBsB,WAAWn/F,SAAQN,EAACH,KAAIs+F,IAAAA,IAAiB,CACzDvuD,UAAW/vC,KAAK6+F,gBAIxB7+F,KAAK2sF,WAAa,KAElBxsF,EAAAH,KAAIy+F,IAAAA,KAAmB,CAzCtB,CA0CL,EAACr+F,EAED6K,QAAA,WAAO,EACNyzF,CAAA,CAjJD,GCvCE3uD,GAAYjgC,KAAa2zE,gBAAA9jF,EAAA,QAAAkgG,gBAAAlgG,EAAAmgG,0BAAAA,gBAAAngG,EAAAogG,wBAAAA,gBAAApgG,EAAA,oBAAAqgG,gBAAArgG,EAAA,4BAAAsgG,gBAAAtgG,EAAA,0BAAAugG,gBAAAvgG,EAAA,0BAAAwgG,gBAAAxgG,EAAAygG,kBAAAA,gBAAAzgG,uBAAA0gG,gBAAA1gG,EAAA,qBAKlB2gG,gBAcT,WAAA,SAAAA,EAAYC,EAAiBC,EAAkBvE,EAAcwE,EAAaC,GAAY,IAAAt1F,EAAAtL,KAAAA,OAAAC,eAAA0jF,KAAAA,IAAAxjF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAA8/F,KAAAA,GAAA5/F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAA+/F,KAAAA,GAAA7/F,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAA+/F,GAAA9/F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAggG,GAAA,CAAA//F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAigG,GAAA,CAAAhgG,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,oBAAAmgG,GAAA,CAAAjgG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAogG,KAAAA,GAAAlgG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAqgG,KAAAA,IAAAngG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAsgG,KAAAA,GAAApgG,CAAAA,UAAAC,EAAAA,eAElFC,EAAAH,KAAIyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IASIwyE,EACAC,EACAC,EAXEC,EAAiBN,EAAYM,eAE/BC,EAAQ,EACRC,EAAQ,EACRC,EAAY,EACZC,EAAY,EAQZC,GAAkB,EAChBC,EAAiB,IAAInyF,aAAa,GAEpCoyF,GAAiC,EAE/Br5C,EAAgB7nD,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cAE3Bs5C,EAAiB,GAkBvB,SAASC,EAAkBC,QAAI,IAAJA,IAAAA,GAAO,GAC9Bx5C,EAAc00C,MAAM+E,OAAS,OAU7BV,EAAQN,EAAOiB,eAAe,GAC9BV,EAAQP,EAAOiB,eAAe,GAC9BT,EAAYR,EAAOiB,eAAe,GAClCR,EAAYT,EAAOiB,eAAe,GAX9BF,IAeJV,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAelC,qBAAsB,EACrCkC,EAAe5B,SACX4B,EAAehC,QAAUgC,EAAe/B,eAAiB+B,EAAenU,YAAcmU,EAAenU,WAAW70D,UAChHqpE,GAAkB,EAClBC,EAAezkF,IAAImkF,EAAenU,WAAW70D,WAE7CqpE,GAAkB,EAnB1B,CAtBA9tC,SAASprC,iBAAiB,UAAW9nB,OAAI0/F,IAAAA,IAA2B,SAAC3vE,GAC3D+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,kBAI7DL,EADgBpxE,EAAE0xE,UACC,EACvB,GAEAvuC,SAASprC,iBAAiB,QAAS9nB,EAAIH,KAAA8/F,IAAAA,IAAyB,SAAC5vE,GACvD+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,kBAI7DL,EADgBpxE,EAAE0xE,UACC,EACvB,GA+BA55C,EAAc//B,iBAAiB,YAAa9nB,EAAAH,KAAI+/F,IAAAA,IAAqB,SAAC7vE,GAClE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAGhC,OAAQjvE,EAAE2xE,OACN,OACQP,ECnFS,KDmFsBrF,EAAQ6F,UACvCnB,GAAgB,EAChBY,MAEAZ,GAAgB,EAChBY,GAAkB,IAEtB,MACJ,KAAK,EACDX,GAAkB,EAClBW,IACA,MACJ,KAAK,EACDV,GAAiB,EACb5E,EAAQ8F,eACRR,IAMhB,GAEAluC,SAASprC,iBAAiB,YAAa9nB,EAAAH,KAAIggG,IAAAA,IAA6B,WAEpE,GAAM/D,EAAQ97C,QAAU87C,EAAQkD,iBAI3BwB,GAAkBC,GAAoBC,GAA3C,CAMA,IAAM5wD,EAAiB9vC,EAAAiL,EAAIq4E,IAAAA,IAAO9mC,SAC5B2/C,EAAcrsD,EAAe,GAC7BssD,EAAetsD,EAAe,GAC9Bj/B,EAAIyvF,EAAOiB,eAAe,GAC1BzwF,EAAIwvF,EAAOiB,eAAe,GAIhC,GAFgBJ,EC5HK,KD4H0BrF,EAAQ6F,WAAc7F,EAAQ8F,eAAiBnB,GAAqB3E,EAAQ8F,eAAiBlB,EAE/H,CAET,IAAMmB,EAAahxF,EAAI+vF,EACjBkB,EAAahxF,EAAI+vF,EAEjBx+C,EAASriD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAI1B,GAAIA,EAAOD,iBAAmBp0C,GAA2B,CAErD,IACM+zF,EADQ14F,KAAKuU,IAAIojF,EAAkBvvF,GAAQrB,GAAQ6wF,EAAgBjhG,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAOuH,IAAK,KAAO5pD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAO2/C,aAC1F34F,KAAKkK,IAAK8uC,EAAO+G,sBAAsBjC,IAAM,EAAK99C,KAAKo+C,GAAK,KAE3F84C,EAAQ0B,WAAc,IAAMJ,EAAYE,EAAiB3F,EACzDmE,EAAQ2B,WAAc,IAAMJ,EAAYC,EAAiB3F,CAE5D,MAEGmE,EAAQ0B,WAAa,GAAM5/C,EAAOgH,gBAAgBttC,OAAS8lF,EAAYzF,GACvEmE,EAAQ2B,WAAa,GAAM7/C,EAAOgH,gBAAgBttC,OAAS+lF,EAAY1F,EAG9E,MAAUoE,GAAkBC,GAAoBC,GAExC5E,EAAQ6F,WAEL7F,EAAQqG,aACR5B,EAAQ6B,eAAkBvxF,EAAI+vF,GAASzE,EAAeL,EAAQuG,iBAAmB,EACjF9B,EAAQ+B,eAAkBxxF,EAAI+vF,GAASzE,GAAiBN,EAAQuG,iBAAmB,KAGnF9B,EAAQ6B,eAAkBvxF,EAAI+vF,GAASzE,GAA2C,IAA3BL,EAAQuG,kBAC/D9B,EAAQ+B,eAAkBxxF,EAAI+vF,GAASzE,GAA4C,IAA3BN,EAAQuG,oBAK5EzB,EAAQ/vF,EACRgwF,EAAQ/vF,CAnDP,CAoDL,GAEA+2C,EAAc//B,iBAAiB,YAAa9nB,EAAIH,KAAAigG,IAAAA,IAA2B,SAAC/vE,GAElE+rE,EAAQ97C,QAAU87C,EAAQkD,gBAI3BsB,EAAOiC,YAIZrB,GAAiC,EACrC,GAEAhuC,SAASprC,iBAAiB,UAAW9nB,EAAAH,KAAIkgG,IAAAA,IAA2B,SAAChwE,GACjE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAGhC,OAAQjvE,EAAE2xE,OACN,KAAK,EAKL,KAAM,EAKN,KAAM,EACFlB,GAAgB,EAChBC,GAAkB,EAClBC,GAAiB,EAO7B,GAEA74C,EAAc//B,iBAAiB,UAAW9nB,EAAAH,KAAImgG,IAAAA,IAAmB,SAACjwE,GAC9D,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAGA,GACU,IADFjvE,EAAE2xE,MACN,CACIc,GAAoBzyE,EAAG6f,IACvB,IACM9+B,EAAI8+B,GAAU,GAChBvmC,KAAKuU,IAFCgyB,GAAU,GAEHkxD,GAAa,GAAKz3F,KAAKuU,IAAI9M,EAAIiwF,GAAa,GACzDV,EAAYvG,cAAc/0F,OAAO09F,KAAK,aAAc,CAChDC,QAAS,CAACr5F,KAAKsJ,MAAMod,EAAE4yE,OAAQt5F,KAAKsJ,MAAMod,EAAE6yE,QAC5ChzD,UAAWA,GACXjrC,MAAOorB,IACR,EAEP,CAIR83B,EAAc00C,MAAMsG,eAAe,SAjBlC,CAkBL,GAEAh7C,EAAc//B,iBAAiB,aAAc9nB,EAAAH,KAAIogG,IAAAA,IAAsB,WAMvE,GAEA,IACM6C,EAAa,EAAI,GAEnBC,EAA6B,KAEjCl7C,EAAc//B,iBAAiB,QAAS9nB,EAAAH,KAAIqgG,IAAAA,IAAsB,SAACnwE,GAC/D,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAGA,IAAMgE,EAAUC,YAAY51C,MAAQ,IAChC61C,EAA+B,OAAhBH,EAAyBC,EAAUD,EAAe,EACrEA,EAAcC,EACVE,EAZW,MAaXA,EAbW,KAeXA,EAAcJ,IACdI,EAAcJ,GAElB,IAAM73C,EAAQ5hD,KAAKsF,KAAK,EAAGtF,KAAKqF,IAAI,EAAe,IAAXqhB,EAAEozE,SAC1C,GAAc,IAAVl4C,EAAJ,CAGA,IAAMm4C,EAAkBn4C,EAAQ5hD,KAAKuU,IAAIqtC,GACzCs1C,EAAQpG,aAAeiJ,EAAkBF,EAAcpH,EAAQuH,oBAE3DnC,IACAZ,EAAOgD,oBAAqB,EAC5BpC,GAAiC,GAGrCnxE,EAAE+uE,gBATD,CAbA,CAuBL,EACJ,CAAC,IAAA7+F,EAAAkgG,EAAAjgG,UAkBA,OAlBAD,EAEDohC,MAAA,WACC,EAAAphC,EAED6K,QAAA,WAEI,IAAM+8C,EAAgB7nD,EAAIH,KAAAyjF,IAAAA,IAAOz7B,cAEjCqL,SAASqwC,oBAAoB,UAASvjG,EAAEH,KAAI6/F,IAAAA,KAC5CxsC,SAASqwC,oBAAoB,QAAOvjG,EAAEH,KAAI8/F,IAAAA,KAC1C93C,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAI+/F,IAAAA,KACnD1sC,SAASqwC,oBAAoB,YAAWvjG,EAAEH,KAAIggG,IAAAA,KAC9Ch4C,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAIigG,IAAAA,KACnD5sC,SAASqwC,oBAAoB,UAASvjG,EAAEH,KAAIkgG,IAAAA,KAC5Cl4C,EAAc07C,oBAAoB,UAASvjG,EAAEH,KAAImgG,IAAAA,KACjDn4C,EAAc07C,oBAAoB,aAAYvjG,EAAEH,KAAIogG,IAAAA,KACpDp4C,EAAc07C,oBAAoB,QAAOvjG,EAAEH,KAAIqgG,IAAAA,IACnD,EAACC,CAAA,CA3RD,GA8REqC,GAAsB,SAAU79F,EAAYirC,GAC9C,GAAKjrC,EAIE,CAIH,IAHA,IAAI84C,EAAU94C,EAAMiR,OAChB4tF,EAAkB,EAClBC,EAAiB,EACdhmD,EAAQimD,cACXF,GAAmB/lD,EAAQiW,WAC3B+vC,GAAkBhmD,EAAQkW,UAC1BlW,EAAUA,EAAQimD,aAEtB9zD,EAAU,GAAKjrC,EAAMg+F,MAAQa,EAC7B5zD,EAAU,GAAKjrC,EAAMi+F,MAAQa,CAChC,MAdG9+F,EAAQgpB,OAAOhpB,MACfirC,EAAU,GAAKjrC,EAAMkM,EACrB++B,EAAU,GAAKjrC,EAAMmM,EAazB,OAAO8+B,CACX,EEnUMpa,GAAStmB,KACTwkB,GAAYxkB,KACZC,GAAYD,KACZE,GAAYF,KACZG,GAAYH,KAEZy0F,GAAmB,CACrB/5C,IAAK,IAAI96C,aAAa,GACtB+6C,KAAM,IAAI/6C,aAAa,GACvB+G,GAAI,IAAI/G,aAAa,GACrBshD,WAAY,GACdsvC,gBAAAlgG,EAAA,0BAKIokG,2BAIF,SAAAA,EAAYxD,EAAiBC,EAAkBvE,EAAcwE,EAAaC,GAAY5gG,OAAAC,eAAAC,KAAA6/F,GAAA5/F,CAAAA,UAAAC,EAAAA,WAElF,IAAA,IAAMiuB,EAAOoyE,EAAWpyE,KAClBq0B,EAAS+9C,EAAW/9C,OACpBy3C,EAAgBuG,EAAYvG,cAElC5mC,SAASprC,iBAAiB,UAAW9nB,EAAIH,KAAA6/F,IAAAA,IAA2B,SAAC3vE,GAEjE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,iBAIxDlB,EAAOiC,UAAZ,CAIA,IAAMsB,EAAgB/J,EAAcgK,oBAAoBhK,EAAciK,iBAChEC,EAAelK,EAAcgK,oBAAoBhK,EAAcmK,gBAC/DC,EAAepK,EAAcgK,oBAAoBhK,EAAcqK,gBAC/DC,EAAgBtK,EAAcgK,oBAAoBhK,EAAcuK,iBAChEC,EAAcxK,EAAcgK,oBAAoBhK,EAAcyK,eAC9DC,EAAiB1K,EAAcgK,oBAAoBhK,EAAc2K,kBAEvE,GAAMZ,GAAoBG,GAAmBE,GAAmBE,GAAoBE,GAAkBE,EAAtG,CAIA,IAAMhzE,EAAOxD,EAAKwD,KACZ++B,EAAOp8B,GAAa3C,GAE1BoD,GAAepD,EAAMgE,IAErB,IAAMkvE,EAAkBr7F,KAAKuU,IAAI2yC,EAAOlnD,KAAKkK,IAAI8sF,EAAYtuC,aAAavB,OAAShiD,KAGnFm1F,GAAiBvzC,WAFS,IAAPG,EAIfszC,GAEAF,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAO0H,WAAY26C,EAAiBhxE,IAAYrkB,KACvGs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAI6lC,EAAOyH,UAExBk6C,GAEPL,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAO2H,aAAc06C,EAAiBhxE,IAAYrkB,KACzGs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAI6lC,EAAOyH,UAExBo6C,GAEPP,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAO0H,YAAa26C,EAAiBhxE,IAAYrkB,KACxGs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAI6lC,EAAOyH,UAExBs6C,GAEPT,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAO2H,cAAe06C,EAAiBhxE,IAAYrkB,KAC1Gs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAI6lC,EAAOyH,UAExBw6C,GAEPX,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAOyH,QAAS46C,EAAiBhxE,IAAYrkB,KACpGs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAIjK,GAAcvC,GAAcqyC,EAAO2H,aAAc,EAAG76C,IAAYC,MAEjFo1F,IAEPb,GAAiB/5C,IAAIptC,IAAItM,GAAQslB,GAAQxlB,GAAcqyC,EAAOyH,SAAU46C,EAAiBhxE,IAAYrkB,KACrGs0F,GAAiB95C,KAAKrtC,IAAIgZ,IAC1BmuE,GAAiB9tF,GAAG2G,IAAIjK,GAAcvC,GAAcqyC,EAAO2H,cAAe,EAAG76C,QAG3E2sF,EAAQqG,aAAgBrG,EAAQ6I,eAClCtE,EAAYuE,gBAAgB1H,YAAY1nE,IAGxC6qE,EAAYtuC,aAAarB,SAAW,EACpC2vC,EAAYtuC,aAAa9B,MAAM0zC,GAAkB,WACzCtD,EAAYuE,gBAAgB3H,eAAiBnB,EAAQ6I,eACrDtE,EAAYuE,gBAAgB9G,WAEpC,IAGAuC,EAAYtuC,aAAapB,OAAOgzC,IAC5BtD,EAAYuE,gBAAgB3H,eAAiBnB,EAAQ6I,eACrDtE,EAAYuE,gBAAgB9G,YA/DnC,CAXA,CA6EL,EACJ,CAAC,IAAA79F,EAAA2jG,EAAA1jG,UAOA0jG,OAPA3jG,EAEDohC,MAAA,aACCphC,EAED6K,QAAA,WACIooD,SAASqwC,oBAAoB,UAASvjG,EAAEH,KAAI6/F,IAAAA,IAChD,EAACkE,CAAA,ICzH6CtgB,gBAAA9jF,EAAAqlG,QAAAA,gBAAArlG,EAAAslG,UAAAA,gBAAAtlG,EAAA6+F,WAAAA,gBAAA7+F,EAAAsgG,sBAAAA,gBAAAtgG,EAAA,0BAAAulG,gBAAAvlG,EAAA,0BAAAugG,gBAAAvgG,EAAA,0BAAAwlG,gBAAAxlG,EAAA,wBAM5CylG,gBAAgB,WAWlB,SAAAA,EAAY7E,EAAiBC,EAAkBvE,EAAcwE,EAAaC,OAAYt1F,EAAApL,KAAAF,OAAAC,eAAAC,KAAAyjF,GAAA,CAAAxjF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAilG,KAAAA,GAAA/kG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAklG,KAAAA,GAAAhlG,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAw+F,GAAA,CAAAv+F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAkgG,KAAAA,GAAAhgG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAmlG,KAAAA,GAAAjlG,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAkgG,GAAA,CAAAjgG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAolG,KAAAA,GAAAllG,CAAAA,UAAAC,EAAAA,WAElFC,IAAAA,EAAIH,KAAAyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IAAM2yE,EAAiBN,EAAYM,eAC7BiE,EAAkBvE,EAAYuE,gBAC9B9K,EAAgBuG,EAAYvG,cAElC95F,EAAAH,KAAIglG,IAAAA,IAAW,EACf7kG,EAAAH,KAAIilG,IAAAA,IAAY,KAChB9kG,EAAAH,KAAIw+F,IAAAA,IAAuB,KAE3B,IAAI6G,GAAW,EACXC,GAAY,EAEVt9C,EAAgB7nD,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cAE3Bu9C,EAAc,SAAC5Y,GACjB,IAAI72E,EACA62E,GAAcA,EAAW70D,WACzBhiB,EAAM62E,EAAW70D,UAErB,IAAMnG,EAAOg7D,GAAcA,EAAWhoC,WAChCgoC,EAAWhoC,WAAWhzB,KACtBxxB,EAAAiL,EAAIq4E,IAAAA,IAAO9xD,KACjB,GAAI7b,EAAK,CACL,IAAM0sC,EAASriD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OACbjyC,GAAQiyC,EAAOuH,IAAKvH,EAAOwH,KAAM,IAC9Cw2C,EAAYtuC,aAAa9B,MAAM,CAI3Bz+B,KAAMA,GAGb,MACG6uE,EAAYtuC,aAAa9B,MAAM,CAC3Bz+B,KAAMA,GAGlB,EAEAq2B,EAAc//B,iBAAiB,YAAa9nB,EAAIH,KAAAigG,IAAAA,IAA2B,SAAC/vE,GAExE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,iBAI5BkG,IAAYC,EAAhB,CAIA,IAAME,EAAYvL,EAAc/0F,OAAOugG,QAAQ,SACzCC,EAAezL,EAAc/0F,OAAOugG,QAAQ,YAC5CE,EAAe1L,EAAc/0F,OAAOugG,QAAQ,YAC5CG,EAAmB3L,EAAc/0F,OAAOugG,QAAQ,gBAEtD,GAAID,GAAaE,GAAgBC,GAAgBC,EAQ7C,GANA9E,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAenC,oBAAqB,EACpCmC,EAAelC,oBAAsBgH,EAErC9E,EAAe5B,SAEX4B,EAAenU,WAAY,CAE3B,IAAM8S,EAAiBqB,EAAenU,WAAW6S,OAAOl1F,GAEpDnK,EAAAiL,EAAIozF,IAAAA,MAAyBiB,SAEIn7E,IAA7BnkB,EAAAiL,EAAIozF,IAAAA,KAEJvE,EAAc/0F,OAAO09F,KAAK,WAAY,CAClCpD,OAAQr/F,EAAAiL,EAAIq4E,IAAAA,IAAO5mD,QAAO18B,EAACiL,EAAIozF,IAAAA,OAChC,GAGPvE,EAAc/0F,OAAO09F,KAAK,aAAc9B,EAAenU,YAAY,GAEnExsF,EAAAiL,EAAIozF,IAAAA,IAAuBiB,GAG/BxF,EAAc/0F,OAAO09F,KAAK,QAAS9B,EAAenU,YAAY,GAE1DmU,EAAenU,WAAW70D,UAC1BmiE,EAAc/0F,OAAO09F,KAAK,eAAgB9B,EAAenU,YAAY,EAG5E,WAEoCroE,IAA7BnkB,EAAAiL,EAAIozF,IAAAA,MAEJvE,EAAc/0F,OAAO09F,KAAK,WAAY,CAClCpD,OAAQr/F,EAAAiL,EAAIq4E,IAAAA,IAAO5mD,QAAO18B,EAACiL,EAAIozF,IAAAA,OAChC,GAEHr+F,EAAAiL,EAAIozF,IAAAA,SAAuBl6E,GAG/B21E,EAAc/0F,OAAO09F,KAAK,WAAY,CAClC7yD,UAAW+wD,EAAejC,gBAC3B,EApDV,CAuDL,GAEA72C,EAAc//B,iBAAiB,YAAa9nB,EAAIH,KAAAklG,IAAAA,IAA2B,SAACh1E,GAYxE,GAVgB,IAAZA,EAAE2xE,QACFwD,GAAW,GAGC,IAAZn1E,EAAE2xE,QACFyD,GAAY,GAGoB,IAAZp1E,EAAE2xE,OAMpB5F,EAAQ97C,QAAU87C,EAAQkD,iBAMhCsB,EAAOoF,iBAAmB31E,EAAE41E,QAC5BrF,EAAOsF,iBAAmB71E,EAAE81E,QAC5BvF,EAAOwF,iBAAmBxF,EAAOiB,eAAe,GAChDjB,EAAOyF,iBAAmBzF,EAAOiB,eAAe,IAE1CzF,EAAQqG,aAAgBrG,EAAQ6I,gBAElChE,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAelC,qBAAsB,EAErCkC,EAAe5B,SAEC,IAAZhvE,EAAE2xE,QAAa,CACf,IAAMlV,EAAamU,EAAenU,WAC9BA,GAAcA,EAAW70D,UACzBitE,EAAgB1H,YAAY1Q,EAAW70D,UACvCitE,EAAgBhI,eAEZd,EAAQkK,WACRpB,EAAgBqB,gBAAgB3F,EAAOiB,gBAEvCqD,EAAgB1H,YAAYl9F,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAOwH,MAElD+6C,EAAgBhI,aAEvB,CAET,GAEA1pC,SAASprC,iBAAiB,UAAW9nB,OAAI+/F,IAAAA,IAA2B,SAAChwE,GAEjD,IAAZA,EAAE2xE,QACFwD,GAAW,GAGC,IAAZn1E,EAAE2xE,QACFyD,GAAY,EAEpB,GAEAt9C,EAAc//B,iBAAiB,UAAW9nB,OAAIglG,IAAAA,IAAyB,SAACj1E,GAEpE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,gBAIE,IAAZjvE,EAAE2xE,QAQxBkD,EAAgB3G,cAEZ50F,KAAKuU,IAAImS,EAAE41E,QAAUrF,EAAOoF,kBAAoB,GAAKr8F,KAAKuU,IAAImS,EAAE81E,QAAUvF,EAAOsF,kBAAoB,IAAzG,CAIA,IAAMM,EAAapM,EAAc/0F,OAAOugG,QAAQ,UAC1Ca,EAAoBrM,EAAc/0F,OAAOugG,QAAQ,iBACjDc,EAAoBtM,EAAc/0F,OAAOugG,QAAQ,iBACjDe,EAAmBvM,EAAc/0F,OAAOugG,QAAQ,gBAChDgB,EAA0BxM,EAAc/0F,OAAOugG,QAAQ,uBACvDiB,EAA0BzM,EAAc/0F,OAAOugG,QAAQ,uBAE7D,KAAMxJ,EAAQ0K,iBACRH,GACAC,GACAC,GA2BF,OAvBIL,GAAcC,GAAqBC,KAEnCzF,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAenC,oBAAqB,EACpCmC,EAAelC,oBAAsB2H,EACrCzF,EAAe5B,SAEX4B,EAAenU,YAEfsN,EAAc/0F,OAAO09F,KAAK,SAAU9B,EAAenU,YAAY,GAE3DmU,EAAe/B,eACf9E,EAAc/0F,OAAO09F,KAAK,gBAAiB9B,EAAenU,YAAY,IAG1EsN,EAAc/0F,OAAO09F,KAAK,gBAAiB,CACvC7yD,UAAW0wD,EAAOiB,iBACnB,SAIXvhG,EAAAiL,EAAI45F,IAAAA,IAAW,GAOnB,GAFA7kG,EAAAiL,EAAI45F,IAAAA,MAEiB,IAAjB7kG,EAAAiL,EAAI45F,IAAAA,IAEJ7kG,EAAAiL,EAAI65F,IAAAA,IAAYviG,WAAW,WAEvBo+F,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAenC,mBAAqB1C,EAAQ0K,gBAC5C7F,EAAelC,oBAAsB2H,EACrCzF,EAAe5B,SAEX4B,EAAenU,YAEfsN,EAAc/0F,OAAO09F,KAAK,SAAU9B,EAAenU,YAAY,GAE3DmU,EAAe/B,gBAEf9E,EAAc/0F,OAAO09F,KAAK,gBAAiB9B,EAAenU,YAAY,IAEhEsP,EAAQqG,aAAgBrG,EAAQ6I,gBAClCtE,EAAYuE,gBAAgB1H,YAAYyD,EAAenU,WAAW70D,UAC9D0oE,EAAYuE,gBAAgBhI,cAC5ByD,EAAYuE,gBAAgB9G,eAKxChE,EAAc/0F,OAAO09F,KAAK,gBAAiB,CACvC7yD,UAAW0wD,EAAOiB,iBACnB,GAGPvhG,EAAAiL,EAAI45F,IAAAA,IAAW,CAEnB,EAAG,SAEA,CAYH,GAVsB,OAAlB7kG,EAAAiL,EAAI65F,IAAAA,MACJn3E,OAAOowE,aAAY/9F,EAACiL,EAAI65F,IAAAA,KACxB9kG,EAAAiL,EAAI65F,IAAAA,IAAY,MAGpBnE,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAenC,mBAAqB1C,EAAQ0K,iBAAmBH,GAAoBC,EACnF3F,EAAelC,oBAAsBkC,EAAenC,oBAAsB8H,EAC1E3F,EAAe5B,SAEX4B,EAAenU,YAQf,GANAsN,EAAc/0F,OAAO09F,KAAK,eAAgB9B,EAAenU,YAAY,GAEjEmU,EAAe/B,eACf9E,EAAc2M,sBAAsBnmG,SAAUqgG,EAAenU,YAAY,GAGzEsP,EAAQ0K,kBAERpB,EAAYzE,EAAenU,aAErBsP,EAAQqG,aAAgBrG,EAAQ6I,eAAe,CAEjD,IACM+B,EAAwB9xE,GADL+rE,EAAenU,WAAW6S,OAAO7tE,MAG1D6uE,EAAYuE,gBAAgB1H,YAAYwJ,GAEpCrG,EAAYuE,gBAAgBhI,cAC5ByD,EAAYuE,gBAAgB9G,WAEnC,OASL,GAJAhE,EAAc/0F,OAAO09F,KAAK,sBAAuB,CAC7C7yD,UAAW0wD,EAAOiB,iBACnB,GAECzF,EAAQ0K,kBAERpB,KAEMtJ,EAAQqG,aAAgBrG,EAAQ6I,eAAe,CAEjD,IACMgC,EAAgB/xE,GADL50B,EAAAiL,EAAIq4E,IAAAA,IAAO9xD,MAG5B6uE,EAAYuE,gBAAgB1H,YAAYyJ,GAEpCtG,EAAYuE,gBAAgBhI,cAC5ByD,EAAYuE,gBAAgB9G,WAEnC,CAIT99F,EAAAiL,EAAI45F,IAAAA,IAAW,CAClB,CA5IA,CA6IL,GAAG,EACP,CAAC,IAAA5kG,EAAAglG,EAAA/kG,UAqBA+kG,OArBAhlG,EAEDohC,MAAA,WACIrhC,EAAIH,KAAAglG,IAAAA,IAAW,EACf7kG,EAAIH,KAAAw+F,IAAAA,IAAuB,KAC3Br+F,EAAIH,KAAIilG,IAAAA,MACJn3E,OAAOowE,aAAY/9F,EAACH,KAAIilG,IAAAA,KACxB9kG,EAAIH,KAAAilG,IAAAA,IAAY,KAExB,EAAC7kG,EAED6K,QAAA,WACI,IAAM+8C,EAAgB7nD,EAAIH,KAAAyjF,IAAAA,IAAOz7B,cACjCA,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAIigG,IAAAA,KACnDj4C,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAIklG,IAAAA,KACnD7xC,SAASqwC,oBAAoB,UAASvjG,EAAEH,KAAIkgG,IAAAA,KAC5Cl4C,EAAc07C,oBAAoB,UAASvjG,EAAEH,KAAImlG,IAAAA,KACjDhlG,EAAIH,KAAIilG,IAAAA,MACJn3E,OAAOowE,aAAY/9F,EAACH,KAAIilG,IAAAA,KACxB9kG,OAAI8kG,IAAAA,IAAY,KAExB,EAACG,CAAA,CAzWiB,GCNiB3hB,gBAAA9jF,EAAA,QAAAqgG,gBAAArgG,EAAAkgG,4BAAAA,gBAAAlgG,EAAAmgG,0BAAAA,gBAAAngG,EAAAyxD,wBAAAA,gBAAAzxD,EAKjC,UAAAonG,gBAYF,WAAA,SAAAA,EAAYxG,EAAiBC,EAAkBvE,EAAcwE,EAAaC,GAAY5gG,OAAAC,eAAAC,KAAAyjF,GAAA,CAAAxjF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAggG,GAAA,CAAA//F,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAA8/F,KAAAA,GAAA5/F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA8/F,GAAA,CAAA7/F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAoxD,GAAA,CAAAnxD,UAAAC,EAAAA,WAD9E8mG,IAAAA,KAAAA,cAGJ7mG,EAAAA,EAAIH,KAAAyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IAAM84E,EAAoB,GACpBj/C,EAAgBu4C,EAAWpyE,KAAK65B,cAElCk/C,GAAmC,EAEvC7zC,SAASprC,iBAAiB,YAAa9nB,OAAI6/F,IAAAA,IAA6B,WACpEkH,GAAmC,CACvC,GAEA7zC,SAASprC,iBAAiB,UAAW9nB,EAAAH,KAAI6/F,IAAAA,IAA2B,SAAC3vE,GACjE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,iBAGxDlB,EAAOiC,UAAZ,CAGA,IAAMd,EAAU1xE,EAAE0xE,QAClBqF,EAAWrF,IAAW,EHvBD,KGwBjBA,IACA55C,EAAc00C,MAAM+E,OAAS,OAJhC,CAML,GAEApuC,SAASprC,iBAAiB,QAAS9nB,EAAAH,KAAI8/F,IAAAA,IAAyB,SAAC5vE,GAC7D,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,iBAGxDlB,EAAOiC,UAAZ,CAGA,IAAMd,EAAU1xE,EAAE0xE,QAClBqF,EAAWrF,IAAW,EHrCD,KGsCjBA,IACA55C,EAAc00C,MAAM+E,OAAS,KAJhC,CAML,GAEAthG,EAAIH,KAAAoxD,IAAAA,IAAWmvC,EAAWpyE,KAAKg0B,OAAOj9C,OAAOiiG,GAAG,OAAQ,SAACj3E,GAErD,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,gBAAqBlD,EAAQ0F,iBAIxDlB,EAAOiC,UAAZ,CAIA,IAAMzI,EAAgBuG,EAAYvG,cAC5BmN,EAAel3E,EAAE07B,UAAY,IAMnC,IAAKqwC,EAAQ6F,SAAU,CAEnB,IAAMuF,EAAapN,EAAcgK,oBAAoBhK,EAAcqN,aAAcL,GAC3EM,EAAatN,EAAcgK,oBAAoBhK,EAAcuN,aAAcP,GAC3EQ,EAAaxN,EAAcgK,oBAAoBhK,EAAcyN,aAAcT,GAC3EU,EAAa1N,EAAcgK,oBAAoBhK,EAAc2N,aAAcX,GAE3EY,EAAaT,EAAcnL,EAAQ6L,sBAErCT,GAAcE,GAAcE,GAAcE,MAEpC1L,EAAQqG,aAAgBrG,EAAQ6I,eAClCtE,EAAYuE,gBAAgBhI,aAG5BsK,EACA3G,EAAQ6B,cAAgBsF,EAEjBN,IACP7G,EAAQ6B,cAAgBsF,GAGxBJ,EACA/G,EAAQ+B,cAAgBoF,EAEjBF,IACPjH,EAAQ+B,cAAgBoF,IAGtB5L,EAAQqG,aAAgBrG,EAAQ6I,eAClCtE,EAAYuE,gBAAgBhI,aAGvC,CAMD,IAAKkK,EH9Fe,MG8FmBA,EHzFpB,IGyFkD,CAEjE,IAAMc,EAAiB9N,EAAcgK,oBAAoBhK,EAAc+N,gBAAiBf,GAClFgB,EAAgBhO,EAAcgK,oBAAoBhK,EAAciO,eAAgBjB,GAEtF,GAAIc,GAAkBE,EAAe,CAEjC,IAAM3N,EAAa8M,EAAcnL,EAAQkM,mBAEnClM,EAAQqG,aAAgBrG,EAAQ6I,eAClCtE,EAAYuE,gBAAgBhI,aAE5BkL,EACAvH,EAAQpG,YAAcA,EACfyN,IACPrH,EAAQpG,YAAcA,GAGtB4M,IACAzG,EAAOgD,oBAAqB,EAC5ByD,GAAmC,EAE1C,CACJ,CAED,IAAMkB,EAAcnO,EAAcgK,oBAAoBhK,EAAcoO,aAAcpB,GAC5EqB,EAAerO,EAAcgK,oBAAoBhK,EAAcsO,cAAetB,GAC9EuB,EAAUvO,EAAcgK,oBAAoBhK,EAAcwO,SAAUxB,GACpEyB,EAAWzO,EAAcgK,oBAAoBhK,EAAc0O,UAAW1B,GACtE2B,EAAQ3O,EAAcgK,oBAAoBhK,EAAc4O,OAAQ5B,GAChE6B,EAAU7O,EAAcgK,oBAAoBhK,EAAc8O,SAAU9B,GAEpE+B,GAAY/B,EHzHC,IGyH8B,GAAM,GAAOG,EAAcnL,EAAQgN,iBAEhFb,GAAeE,GAAgBE,GAAWE,GAAYE,GAASE,MAEzD7M,EAAQqG,aAAgBrG,EAAQ6I,eAClCtE,EAAYuE,gBAAgBhI,aAG5B+L,EACApI,EAAQ2B,WAAa2G,EAEdJ,IACPlI,EAAQ2B,YAAc2G,GAGtBN,EACAhI,EAAQ0B,YAAc4G,EAEfR,IACP9H,EAAQ0B,WAAa4G,GAGrBV,EACA5H,EAAQwI,WAAaF,EAEdZ,IACP1H,EAAQwI,YAAcF,GA1G7B,CA6GL,EACJ,CAAC,IAAA5oG,EAAA2mG,EAAA1mG,UAYA0mG,OAZA3mG,EAEDohC,MAAA,WACC,EAAAphC,EAED6K,QAAA,WAEI9K,EAAAH,KAAIyjF,IAAAA,IAAOthC,OAAO8K,OAAOpsD,YAAWV,EAACH,KAAIoxD,IAAAA,KAEzCiC,SAASqwC,oBAAoB,YAAWvjG,EAAEH,KAAIggG,IAAAA,KAC9C3sC,SAASqwC,oBAAoB,UAASvjG,EAAEH,KAAI6/F,IAAAA,KAC5CxsC,SAASqwC,oBAAoB,QAAOvjG,EAAEH,KAAI8/F,IAAAA,IAC9C,EAACiH,CAAA,CA3KD,GCdEoC,GAAU,KACV/5F,GAAWC,KAAa+hD,gBAAAzxD,YAAA8jF,gBAAA9jF,EAOxB,QAAAypG,gBAKF,WAAA,SAAAA,EAAYj7E,EAAWqyE,EAAkBvE,EAAcwE,EAAaC,GAAY5gG,OAAAC,oBAAAqxD,GAAA,CAAAnxD,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAC,KAAAyjF,GAAAxjF,CAAAA,YAAAC,WAAA,IAE5EC,EAAAH,KAAIyjF,IAAAA,IAASt1D,EAEb,IAAMq0B,EAASr0B,EAAKq0B,OACds+C,EAAiBN,EAAYM,eAC7BiE,EAAkBvE,EAAYuE,gBAC9BsE,EAAgB7I,EAAY6I,cAE9BC,EAvBmB,EAwBnBC,EAAkB,EAClBC,EAA6B,KAEjCrpG,OAAIixD,IAAAA,IAAWjjC,EAAKg0B,OAAO8K,OAAO3sD,UAAU,WAExC,GAAM27F,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAIA,IAAIsK,EAAa,UAqCjB,GA/BIjgG,KAAKuU,IAAI2iF,EAAQpG,YAAc6O,KAC/BzI,EAAQpG,WAAa,GAOrB9wF,KAAKuU,IAAI2iF,EAAQ+B,cAAgB0G,KACjCzI,EAAQ+B,aAAe,GAGvBj5F,KAAKuU,IAAI2iF,EAAQ6B,cAAgB4G,KACjCzI,EAAQ6B,aAAe,GAGE,IAAzB7B,EAAQ+B,cAA+C,IAAzB/B,EAAQ6B,eACtC7B,EAAQpG,WAAa,GAcrB2B,EAAQ6I,iBAEFwE,GAAa,IAEfA,EA1EW,EA4EgB,IAAvB5I,EAAQpG,YAAkB,CAqB1B,GApB6B,IAAzBoG,EAAQ6B,cAA+C,IAAzB7B,EAAQ+B,cAElCxG,EAAQ6I,eAAiBrE,EAAOgD,qBAEhC3C,EAAejC,cAAgB4B,EAAOiB,eACtCZ,EAAelC,qBAAsB,EACrCkC,EAAe5B,SAEX4B,EAAenU,YAAcmU,EAAenU,WAAW70D,SACvD0xE,EAAwB1I,EAAenU,WAAW70D,UAGlDyxE,EAAkB,EAClBC,EAAwB,MAG5B/I,EAAOgD,oBAAqB,GAIhC+F,EAAuB,CACvB,IAAM5wE,EAAOpvB,KAAKuU,IAAInM,GAAQrB,GAAQi5F,EAAuBr7E,EAAKq0B,OAAOuH,IAAK36C,MAC9Em6F,EAAkB3wE,EAAOqjE,EAAQyN,uBACpC,CAEGH,EAAkBtN,EAAQ0N,gBAC1BJ,EAAkBtN,EAAQ0N,cAEjC,CAIT,IAAMC,EAAqBlJ,EAAQpG,WAAaiP,EAqDhD,GA/C6B,IAAzB7I,EAAQ6B,cAA+C,IAAzB7B,EAAQ+B,gBAEhCxG,EAAQqG,aAAgBrG,EAAQ6I,eAAiBC,EAAgB3H,eACnE2H,EAAgBrH,cAAcgD,EAAQ6B,aAAc7B,EAAQ+B,cAC5DsC,EAAgB9G,cAIa,IAAzByC,EAAQ+B,eACJxG,EAAQqG,YACR9/C,EAAOyI,OAAOy1C,EAAQ+B,cAEtBjgD,EAAOqI,WAAW61C,EAAQ+B,eAIL,IAAzB/B,EAAQ6B,eACJtG,EAAQqG,YACR9/C,EAAOuI,IAAI21C,EAAQ6B,cAEnB//C,EAAOkI,SAASg2C,EAAQ6B,gBAKpC7B,EAAQ+B,cAAgBxG,EAAQ4N,gBAChCnJ,EAAQ6B,cAAgBtG,EAAQ4N,gBAEhCJ,EAAa,YAObjgG,KAAKuU,IAAI2iF,EAAQ0B,WAAa+G,KAC9BzI,EAAQ0B,UAAY,GAGpB54F,KAAKuU,IAAI2iF,EAAQ2B,WAAa8G,KAC9BzI,EAAQ2B,UAAY,GAGpB74F,KAAKuU,IAAI2iF,EAAQwI,WAAaC,KAC9BzI,EAAQwI,UAAY,GAGE,IAAtBxI,EAAQ0B,WAAyC,IAAtB1B,EAAQ2B,WAAyC,IAAtB3B,EAAQwI,UAAiB,CAE/E,IAMIY,EACAC,EAPEl4F,EAAMxC,KASZ,GAPAwC,EAAI,GAAK6uF,EAAQ0B,UACjBvwF,EAAI,GAAK6uF,EAAQ2B,UACjBxwF,EAAI,GAAK6uF,EAAQwI,UAKbjN,EAAQ+N,kBAAmB,CAEvBxnD,EAAOynD,KACPH,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,IACpBxH,EAAO0nD,KACdJ,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,IACpBxH,EAAO26C,MACd2M,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,IAG/BxH,EAAO0I,IAAIr5C,GAEX,IAAMk4C,EAAMvH,EAAOuH,IACbC,EAAOxH,EAAOwH,KAEhBxH,EAAOynD,KACPlgD,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GACHvnD,EAAO0nD,KACdngD,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GACHvnD,EAAO26C,MACdpzC,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GAGdvnD,EAAOuH,IAAMA,EACbvH,EAAOwH,KAAOA,CAEjB,MACGxH,EAAO0I,IAAIr5C,GAGf43F,EAAa,UAChB,CAUD,GARA/I,EAAQ0B,WAAanG,EAAQkO,WAC7BzJ,EAAQ2B,WAAapG,EAAQkO,WAC7BzJ,EAAQwI,WAAajN,EAAQkO,WAMH,IAAtBP,EAAyB,CAUrB,IAAIE,EACAC,EAHR,GALIN,EADAG,EAAoB,EACP,UAEA,WAGb3N,EAAQqG,aA4BR,GAvBIrG,EAAQ+N,oBACJxnD,EAAOynD,KACPH,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,IACpBxH,EAAO0nD,KACdJ,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,IACpBxH,EAAO26C,MACd2M,EAActnD,EAAOuH,IAAI,GACzBggD,EAAevnD,EAAOwH,KAAK,KAI/BiyC,EAAQ6I,cACsBuE,EAAce,eAAeZ,EAAuB/I,EAAOiB,gBAAiBkI,KAEtGnJ,EAAOgD,oBAAqB,IAGhCjhD,EAAO0I,IAAI,CAAC,EAAG,EAAG0+C,IAClBpnD,EAAOgH,gBAAgBttC,MAAQsmC,EAAOgH,gBAAgBttC,MAAQ0tF,GAG9D3N,EAAQ+N,kBAAmB,CAC3B,IAAMjgD,EAAMvH,EAAOuH,IACbC,EAAOxH,EAAOwH,KAChBxH,EAAOynD,KACPlgD,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GACHvnD,EAAO0nD,KACdngD,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GACHvnD,EAAO26C,MACdpzC,EAAI,GAAK+/C,EACT9/C,EAAK,GAAK+/C,GAEdvnD,EAAOuH,IAAMA,EACbvH,EAAOwH,KAAOA,CACjB,OAIGiyC,EAAQ6I,cACsBuE,EAAce,eAAeZ,EAAuB/I,EAAOiB,gBAAiBkI,KAEtGnJ,EAAOgD,oBAAqB,IAGhCjhD,EAAOgH,gBAAgBttC,MAAQsmC,EAAOgH,gBAAgBttC,MAAQ0tF,EAC9DpnD,EAAO2I,KAAKy+C,IAgBpBlJ,EAAQpG,YAAc2B,EAAQoO,YACjC,CAEDvJ,EAAevB,aAEflsC,SAASnpC,KAAKwyE,MAAM+E,OAASgI,CAhR5B,CAiRL,EACJ,QAACL,EAAA/oG,UAED4K,QAAA,WACI9K,EAAIH,KAAAyjF,IAAAA,IAAOthC,OAAO8K,OAAOpsD,YAAWV,EAACH,KAAIoxD,IAAAA,IAC7C,EAACg4C,CAAA,CAvSD,2NCbEkB,gBAQF,WAAA,SAAAA,EAAY/J,EAAiBC,EAAkBvE,EAAcwE,EAAaC,GAAY5gG,OAAAC,eAAAC,KAAAyjF,GAAA,CAAAxjF,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAqgG,KAAAA,GAAAngG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAwqG,KAAAA,GAAAtqG,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,eAAAC,KAAAwqG,GAAA,CAAAvqG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAggG,KAAAA,GAAA9/F,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAogG,KAAAA,GAAAlgG,CAAAA,YAAAC,WAAA,IAElFC,EAAAH,KAAIyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IAAM65B,EAAgB7nD,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cAEjCA,EAAc//B,iBAAiB,aAAc9nB,EAAAH,KAAIogG,IAAAA,IAAsB,WACnEK,EAAOiC,WAAY,CACvB,GAEA16C,EAAc//B,iBAAiB,aAAc9nB,EAAIH,KAAAwqG,IAAAA,IAAsB,WACnE/J,EAAOiC,WAAY,EAEnB16C,EAAc00C,MAAM+E,OAAS,IACjC,GAEApuC,SAASprC,iBAAiB,YAAa9nB,EAAAH,KAAIuqG,IAAAA,IAAqB,SAACr6E,GAC7DyyE,GAAoBzyE,EAAG83B,EAAey4C,EAAOiB,eACjD,GAEA15C,EAAc//B,iBAAiB,YAAa9nB,EAAAH,KAAI+/F,IAAAA,IAAqB,SAAC7vE,GAC5D+rE,EAAQ97C,QAAU87C,EAAQkD,iBAGhCwD,GAAoBzyE,EAAG83B,EAAey4C,EAAOiB,gBAC7CjB,EAAOiC,WAAY,EACvB,GAEA16C,EAAc//B,iBAAiB,UAC3B9nB,EAAAH,KAAImgG,IAAAA,IAAmB,SAACjwE,GAI5B,EACJ,CAAC,IAAA9vB,EAAAkqG,EAAAjqG,UAYAiqG,OAZAlqG,EAEDohC,MAAA,WAAK,EACJphC,EAED6K,QAAA,WACI,IAAM+8C,EAAgB7nD,EAAAH,KAAIyjF,IAAAA,IAAOz7B,cACjCqL,SAASqwC,oBAAoB,YAAWvjG,EAAEH,KAAIuqG,IAAAA,KAC9CviD,EAAc07C,oBAAoB,aAAYvjG,EAAEH,KAAIogG,IAAAA,KACpDp4C,EAAc07C,oBAAoB,aAAYvjG,EAAEH,KAAIwqG,IAAAA,KACpDxiD,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAI+/F,IAAAA,KACnD/3C,EAAc07C,oBAAoB,UAASvjG,EAAEH,KAAImgG,IAAAA,IACrD,EAACmK,CAAA,CA9CD,GAiDJ,SAAS3H,GAAoB79F,EAAYkjD,EAAoBjY,GACzD,GAAKjrC,EAIE,CACH,IAAA2lG,EAAeziD,EAAcy0C,wBAAnBxrF,EAACw5F,EAADx5F,EACV8+B,EAAU,GAAKjrC,EAAMghG,QADb2E,EAADz5F,EAEP++B,EAAU,GAAKjrC,EAAMkhG,QAAU/0F,CAClC,MAPGnM,EAAQgpB,OAAOhpB,MACfirC,EAAU,GAAKjrC,EAAMkM,EACrB++B,EAAU,GAAKjrC,EAAMmM,EAMzB,OAAO8+B,CACX,CClEA,IAAM26D,GAAwB,SAAU5lG,EAAWirC,GAC/C,GAAKjrC,EAIE,CAIH,IAHA,IAAI84C,EAAU94C,EAAMiR,OAChB4tF,EAAkB,EAClBC,EAAiB,EACdhmD,EAAQimD,cACXF,GAAmB/lD,EAAQiW,WAC3B+vC,GAAkBhmD,EAAQkW,UAC1BlW,EAAUA,EAAQimD,aAEtB9zD,EAAU,GAAKjrC,EAAMg+F,MAAQa,EAC7B5zD,EAAU,GAAKjrC,EAAMi+F,MAAQa,CAChC,MAdG9+F,EAAQgpB,OAAOhpB,MACfirC,EAAU,GAAKjrC,EAAMkM,EACrB++B,EAAU,GAAKjrC,EAAMmM,EAazB,OAAO8+B,CACX,EAAE0zC,gBAAA9jF,EAAA,QAAAyxD,gBAAAzxD,YAAAgrG,gBAAAhrG,EAAAirG,2BAAAA,gBAAAjrG,EAAA,0BAKIkrG,gBAA6B,WAM/B,SAAAA,EAAYtK,EAAgBC,EAAiBvE,EAAawE,EAAYC,OAAWt1F,EAAApL,KAAAF,OAAAC,oBAAA0jF,GAAA,CAAAxjF,UAAAC,EAAAA,eAAAJ,OAAAC,eAAAqxD,KAAAA,IAAAnxD,UAAA,EAAAC,WAAAJ,IAAAA,OAAAC,eAAAC,KAAA2qG,GAAA1qG,CAAAA,YAAAC,WAAA,IAAAJ,OAAAC,oBAAA6qG,GAAA,CAAA3qG,UAAAC,EAAAA,eAE7EC,EAAAH,KAAIyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IAAM2yE,EAAiBN,EAAYM,eAC7BiE,EAAkBvE,EAAYuE,gBAE9B+F,EAAoBh7F,KACpBi7F,EAAgBj7F,KAChBk7F,EAAgBl7F,KAChBm7F,EAAYn7F,KAEZo7F,EAAgC,GAChCljD,EAAgB7nD,EAAIH,KAAAyjF,IAAAA,IAAOz7B,cAE7BmjD,EAAa,EAEbC,GAAc,EAElBjrG,EAAAH,KAAIoxD,IAAAA,IAAWjxD,OAAIsjF,IAAAA,IAAOthC,OAAO8K,OAAO3sD,UAAU,WAC9C8qG,GAAc,CAClB,GAEApjD,EAAc//B,iBAAiB,aAAc9nB,OAAIwqG,IAAAA,IAA4B,SAAC7lG,GAE1E,GAAMm3F,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAIAr6F,EAAMm6F,iBAEN,IAAMoM,EAAUvmG,EAAMumG,QAChBC,EAAiBxmG,EAAMwmG,eA6C7B,IA3CA7K,EAAO8K,eAAiB5+C,KAAKa,MAEN,IAAnB69C,EAAQloG,QAA0C,IAA1BmoG,EAAenoG,SAIvCunG,GAAsBW,EAAQ,GAAIP,GAE9B7O,EAAQ6I,gBAERhE,EAAejC,cAAgBiM,EAC/BhK,EAAelC,qBAAsB,EACrCkC,EAAe5B,SAEVjD,EAAQ6F,WAELhB,EAAehC,QAAUgC,EAAe/B,eAAiB+B,EAAenU,YAAcmU,EAAenU,WAAW70D,UAEhHitE,EAAgB1H,YAAYyD,EAAenU,WAAW70D,WAEjDmkE,EAAQqG,aAAeyC,EAAgBhI,cACxCgI,EAAgB9G,cAKhBhC,EAAQkK,WACRpB,EAAgBzH,kBAAkBmD,EAAO+K,kBAEzCzG,EAAgB1H,YAAYl9F,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAOwH,OAG7CiyC,EAAQqG,aAAeyC,EAAgBhI,cACxCgI,EAAgB9G,gBAU7BiN,EAAuB/nG,OAASkoG,EAAQloG,QAC3C+nG,EAAuB9nG,KAAK0M,MAGhC,IAAK,IAAIrM,EAAI,EAAG8S,EAAM80F,EAAQloG,OAAQM,EAAI8S,IAAO9S,EAC7CinG,GAAsBW,EAAQ5nG,GAAIynG,EAAuBznG,IAG7D0nG,EAAaE,EAAQloG,MA1DpB,CA2DL,GAEA6kD,EAAc//B,iBAAiB,YAAa9nB,EAAIH,KAAA4qG,IAAAA,IAA2B,SAAC9lG,GAExE,GAAMm3F,EAAQ97C,QAAU87C,EAAQkD,iBAIhCr6F,EAAMhC,kBACNgC,EAAMm6F,kBAEFmM,GAAJ,CAKAA,GAAc,EAId,IAAMn7D,EAAiB9vC,EAAAiL,EAAIq4E,IAAAA,IAAO9mC,SAC5B2/C,EAAcrsD,EAAe,GAC7BssD,EAAetsD,EAAe,GAE9Bo7D,EAAUvmG,EAAMumG,QAEtB,GAAIvmG,EAAMumG,QAAQloG,SAAWgoG,EAA7B,CAMA,GAAmB,IAAfA,EAAkB,CAElBT,GAAsBW,EAAQ,GAAIN,GAMlCv6F,GAAQu6F,EAAeG,EAAuB,GAAID,GAElD,IAAMjJ,EAAYiJ,EAAU,GACtBhJ,EAAYgJ,EAAU,GAO5B,GALgC,OAA5BxK,EAAOgL,mBAA8BjiG,KAAKuU,IAAIikF,GAAa/F,EAAQyP,eAAiBliG,KAAKuU,IAAIkkF,GAAahG,EAAQyP,iBAClHxN,aAAauC,EAAOgL,kBACpBhL,EAAOgL,iBAAmB,MAG1BxP,EAAQ6F,SAAU,CAElB,IAAMt/C,EAASriD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAI1B,GAAIA,EAAOD,iBAAmBp0C,GAA2B,CAErD,IAIM+zF,EADQ14F,KAAKuU,IAAgF5d,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAO2/C,aACtF34F,KAAKkK,IAAK8uC,EAAO+G,sBAAsBjC,IAAM,EAAK99C,KAAKo+C,GAAK,KAE3F84C,EAAQ0B,WAAcJ,EAAYE,EAAiB3F,EAAgBN,EAAQ0P,aAC3EjL,EAAQ2B,WAAcJ,EAAYC,EAAiB3F,EAAgBN,EAAQ0P,YAE9E,MAEGjL,EAAQ0B,WAAa,GAAM5/C,EAAOgH,gBAAgBttC,OAAS8lF,EAAYzF,GAAgBN,EAAQ0P,aAC/FjL,EAAQ2B,WAAa,GAAM7/C,EAAOgH,gBAAgBttC,OAAS+lF,EAAY1F,GAAgBN,EAAQ0P,YAGtG,MACGjL,EAAQ6B,cAAiBP,EAAY1F,GAA2C,EAA3BL,EAAQuG,kBAC7D9B,EAAQ+B,cAAiBR,EAAY1F,GAA4C,IAA3BN,EAAQuG,iBAGrE,SAAyB,IAAf2I,EAAkB,CAEzB,IAAMS,EAASP,EAAQ,GACjBQ,EAASR,EAAQ,GAEvBX,GAAsBkB,EAAQb,GAC9BL,GAAsBmB,EAAQb,GAE9B,IAAMc,EAAkBr7F,GAAkBy6F,EAAuB,GAAIA,EAAuB,IACtFa,EAAqBt7F,GAAkBs6F,EAAeC,GAEtDgB,EAAal8F,KAEnBU,GAAQs7F,EAAiBC,EAAoBC,GAE7C,IAAMhK,EAAYgK,EAAW,GACvB/J,EAAY+J,EAAW,GAEvBxpD,EAASriD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAIpB94C,EAAK8I,GAAS,CAACo5F,EAAO9I,MAAO8I,EAAO7I,OAAQ,CAAC8I,EAAO/I,MAAO+I,EAAO9I,QAGlEzI,GAFK9nF,GAAS04F,EAAuB,GAAIA,EAAuB,IAE7CxhG,GAAMuyF,EAAQgQ,eAIvC,GAFAvL,EAAQpG,WAAaA,EAEjB9wF,KAAKuU,IAAIu8E,GAAc,EAIvB,GAAI93C,EAAOD,iBAAmBp0C,GAA2B,CACrD,IAAMizF,EAAiBN,EAAenU,WAAamU,EAAenU,WAAW70D,SAAW/C,GAAe50B,EAAAiL,EAAIq4E,IAAAA,IAAO9xD,MAG5GuwE,EADQ14F,KAAKuU,IAAInM,GAAQrB,GAAQ6wF,EAAgBjhG,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OAAOuH,IAAK,MAC/CvgD,KAAKkK,IAAK8uC,EAAO+G,sBAAsBjC,IAAM,EAAK99C,KAAKo+C,GAAK,KAE3F84C,EAAQ0B,WAAcJ,EAAYE,EAAiB3F,EAAgBN,EAAQ0P,aAC3EjL,EAAQ2B,WAAcJ,EAAYC,EAAiB3F,EAAgBN,EAAQ0P,YAE9E,MAEGjL,EAAQ0B,WAAa,GAAM5/C,EAAOgH,gBAAgBttC,OAAS8lF,EAAYzF,GAAgBN,EAAQ0P,aAC/FjL,EAAQ2B,WAAa,GAAM7/C,EAAOgH,gBAAgBttC,OAAS+lF,EAAY1F,GAAgBN,EAAQ0P,aAKvGlL,EAAO+K,iBAAmBO,CAC7B,CAED,IAAK,IAAItoG,EAAI,EAAGA,EAAI0nG,IAAc1nG,EAC9BinG,GAAsBW,EAAQ5nG,GAAIynG,EAAuBznG,GAtG5D,CAhBA,CAwHL,EACJ,CAAC,IAAArD,EAAAyqG,EAAAxqG,iBAAAD,EAEDohC,MAAA,WAAK,EACJphC,EAED6K,QAAA,WACI,IAAM+8C,EAAgB7nD,OAAIsjF,IAAAA,IAAOz7B,cACjCA,EAAc07C,oBAAoB,aAAYvjG,EAAEH,KAAI2qG,IAAAA,KACpD3iD,EAAc07C,oBAAoB,YAAWvjG,EAAEH,KAAI4qG,IAAAA,KACnDzqG,OAAIsjF,IAAAA,IAAOthC,OAAO8K,OAAOpsD,YAAWV,EAACH,KAAIoxD,IAAAA,IAC7C,EAACy5C,CAAA,CA7O8B,GCxBFpnB,gBAAA9jF,EAK3B,QAAAusG,gBAKF,WAAA,SAAAA,EAAY3L,EAAiBC,EAAkBvE,EAAcwE,EAAaC,GAAY,IAAAt1F,EAAApL,KAAAF,OAAAC,eAAA0jF,KAAAA,GAAAxjF,CAAAA,UAAAC,EAAAA,oBAH9EyqG,8BAAwB,EAAA3qG,KACxBmsG,4BAAsB,EAI1BhsG,EAAAH,KAAIyjF,IAAAA,IAAS8c,EAAWpyE,KAExB,IAGIo9E,EAHEzK,EAAiBN,EAAYM,eAC7B7G,EAAgBuG,EAAYvG,cAG5BmS,EAAuB,GACvBC,EAAc,IAAIz7F,aAAa,GACjC07F,GAAgB,EAChBC,GAAe,EAEb7jD,EAASvoD,EAAAH,KAAIyjF,IAAAA,IAAO/6B,OAAOA,OAE3B68C,EAAc,SAAC5Y,GACjB,IAAI72E,EACA62E,GAAcA,EAAW70D,WACzBhiB,EAAM62E,EAAW70D,UAErB,IAAMnG,EAAQg7D,GAAcA,EAAWhoC,WAAcgoC,EAAWhoC,WAAWhzB,KAAOxxB,EAAAiL,EAAIq4E,IAAAA,IAAOthC,OAAOxwB,KACpG,GAAI7b,EAAK,CACL,IAAM0sC,EAASriD,EAAAiL,EAAIq4E,IAAAA,IAAOjhC,OACbjyC,GAAQiyC,EAAOuH,IAAKvH,EAAOwH,KAAM,IAC9Cw2C,EAAYtuC,aAAa9B,MAAM,CAC3Bz+B,KAAMA,GAGb,MACG6uE,EAAYtuC,aAAa9B,MAAM,CAC3Bz+B,KAAMA,GAGlB,EAEA+2B,EAAOzgC,iBAAiB,aAAcjoB,KAAK2qG,yBAA2B,SAACz6E,GAEnE,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAIgC,OAA5BsB,EAAOgL,mBACPvN,aAAauC,EAAOgL,kBACpBhL,EAAOgL,iBAAmB,MAG9B,IAAMJ,EAAUn7E,EAAEm7E,QACZC,EAAiBp7E,EAAEo7E,eAIzB,GAFAC,EAAiB5+C,KAAKa,MAEC,IAAnB69C,EAAQloG,QAA0C,IAA1BmoG,EAAenoG,OAAc,CACrDmpG,EAAef,EACfc,EAAY,GAAKhB,EAAQ,GAAGvI,MAC5BuJ,EAAY,GAAKhB,EAAQ,GAAGtI,MAE5B,IAAMyJ,EAAoBnB,EAAQ,GAAGvF,QAC/B2G,EAAoBpB,EAAQ,GAAGrF,QAE/B0G,EAAkBrB,EAAQ,GAAGvI,MAC7B6J,EAAkBtB,EAAQ,GAAGtI,MAEnCtC,EAAOgL,iBAAmB/oG,WAAW,WACjC89F,EAAYvG,cAAc2S,aAAansG,SAASw5F,EAAe,CAC3D4I,QAAS,CAACr5F,KAAKsJ,MAAM45F,GAAkBljG,KAAKsJ,MAAM65F,IAClD58D,UAAW,CAACvmC,KAAKsJ,MAAM05F,GAAoBhjG,KAAKsJ,MAAM25F,IACtD3nG,MAAOorB,IAGXuwE,EAAOgL,iBAAmB,IAC9B,EAAGxP,EAAQ4Q,eAEd,MACGP,GAAgB,EAGpB,KAAOF,EAAcjpG,OAASkoG,EAAQloG,QAClCipG,EAAchpG,KAAK,IAAIwN,aAAa,IAGxC,IAAK,IAAInN,EAAI,EAAG8S,EAAM80F,EAAQloG,OAAQM,EAAI8S,IAAO9S,EAC7C2oG,EAAc3oG,GAAG,GAAK4nG,EAAQ5nG,GAAGq/F,MACjCsJ,EAAc3oG,GAAG,GAAK4nG,EAAQ5nG,GAAGs/F,MAGrCqJ,EAAcjpG,OAASkoG,EAAQloG,MA9C9B,CAgDL,EAAG,CAAC2pG,SAAS,IAGbpkD,EAAOzgC,iBAAiB,WAAYjoB,KAAKmsG,uBAAyB,SAACj8E,GAE/D,GAAM+rE,EAAQ97C,QAAU87C,EAAQkD,eAAhC,CAIA,IAAM4N,EAAcpgD,KAAKa,MACnB69C,EAAUn7E,EAAEm7E,QACZC,EAAiBp7E,EAAEo7E,eAEnB/E,EAAoBtM,EAAc/0F,OAAOugG,QAAQ,iBAEvB,OAA5BhF,EAAOgL,mBACPvN,aAAauC,EAAOgL,kBACpBhL,EAAOgL,iBAAmB,MAKP,IAAnBJ,EAAQloG,QAA0C,IAA1BmoG,EAAenoG,QAEnCmpG,GAAgB,GAAKS,EAAcT,EA3HlC,MA6HGC,GAAe,GAAKD,EAAeC,EA5HlC,KAgIDzL,EAAejC,cAAc,GAAKr1F,KAAKsJ,MAAMw4F,EAAe,GAAGxF,SAC/DhF,EAAejC,cAAc,GAAKr1F,KAAKsJ,MAAMw4F,EAAe,GAAGtF,SAC/DlF,EAAenC,oBAAqB,EACpCmC,EAAelC,oBAAsB2H,EAErCzF,EAAe5B,SAEX4B,EAAenU,YAEfsN,EAAc2M,sBAAsBnmG,SAASw5F,EAAe6G,EAAenU,YAEvEmU,EAAe/B,eACf9E,EAAc+S,gBAAgBvsG,SAASw5F,EAAe6G,EAAenU,YAGrEsP,EAAQ0K,iBACRpB,EAAYzE,EAAenU,cAG/BsN,EAAcgT,sBAAsBxsG,SAASw5F,EAAe,MACxDgC,EAAQ0K,iBACRpB,KAIRgH,GAAe,GAER/5F,GAAS45F,EAAc,GAAIC,GA1J3B,IA8JPvL,EAAejC,cAAc,GAAKr1F,KAAKsJ,MAAMw4F,EAAe,GAAGxF,SAC/DhF,EAAejC,cAAc,GAAKr1F,KAAKsJ,MAAMw4F,EAAe,GAAGtF,SAC/DlF,EAAenC,oBAAqB,EACpCmC,EAAelC,oBAAsB2H,EAErCzF,EAAe5B,SAEX4B,EAAenU,YAEfsN,EAAciT,SAASzsG,SAASw5F,EAAe6G,EAAenU,YAE1DmU,EAAe/B,eACf9E,EAAc+S,gBAAgBvsG,SAASw5F,EAAgB6G,EAAenU,aAI1EsN,EAAckT,gBAAgB1sG,SAASw5F,GAG3CsS,EAAcQ,GAGlBT,GAAgB,GAIxBF,EAAcjpG,OAASkoG,EAAQloG,OAE/B,IAAK,IAAIM,EAAI,EAAG8S,EAAM80F,EAAQloG,OAAQM,EAAI8S,IAAO9S,EAC7C2oG,EAAc3oG,GAAG,GAAK4nG,EAAQ5nG,GAAGq/F,MACjCsJ,EAAc3oG,GAAG,GAAK4nG,EAAQ5nG,GAAGs/F,MAGrC7yE,EAAEptB,iBAvFD,CAyFL,EAAG,CAACgqG,SAAS,GAEjB,CAAC,IAAA1sG,EAAA8rG,EAAA7rG,UAaA,OAbAD,EAEDohC,MAAA,WAKC,EAAAphC,EAED6K,QAAA,WACI,IAAMy9C,EAASvoD,EAAIH,KAAAyjF,IAAAA,IAAO/6B,OAAOA,OACjCA,EAAOg7C,oBAAoB,aAAc1jG,KAAK2qG,0BAC9CjiD,EAAOg7C,oBAAoB,WAAY1jG,KAAKmsG,uBAChD,EAACD,CAAA,CAtMD,GCGYkB,gBAAAztG,EAAAm7F,cAAAA,gBAAAn7F,EAAA0tG,WAAAA,gBAAA1tG,EAAA2tG,UAAAA,gBAAA3tG,EAAA4tG,WAAAA,gBAAA5tG,EAAA6tG,eAAAA,gBAAA7tG,EAAA8tG,YAAAA,gBAAA9tG,EAAA+tG,iBAAAA,gBAAA/tG,EAAA,SAAAguG,gBAAAhuG,EAAA,mBAAAiuG,gBAAAjuG,EAAA,sBAiCHkuG,gBAAc,SAAA3xE,GA+QvB,SAAA2xE,EAAY1/E,EAAYhkB,GAAwBiB,IAAAA,EA+HD,OA7H3CA,EAAA8wB,EAAAl4B,KAAAhE,KAAMmuB,EAAMhkB,IAAKrK,KAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAwiG,GAAA1tG,CAAAA,MAAA4tG,KAAAhuG,OAAAC,eAAAs8B,EAAAjxB,GAAAuiG,GAAA,CAAAztG,MAAA6tG,KAAAjuG,OAAAC,eAAAs8B,EAAAjxB,GAAAsiG,GAAA,CAAAxtG,MAAA8tG,KAAA5iG,EAlLL+iB,UAAI,EAAA/iB,EAKJ48C,mBAAa,EAAA58C,EAKbo3C,YAAM,EAAA1iD,OAAAC,eAAAs8B,EAAAjxB,GAAAgiG,GAAA,CAAAntG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAA0vF,GAAA,CAAA76F,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAiiG,GAAAptG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAkiG,GAAArtG,CAAAA,UAAAC,EAAAA,WAAAJ,IAAAA,OAAAC,eAAAs8B,EAAAjxB,GAAAmiG,GAAA,CAAAttG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAoiG,GAAA,CAAAvtG,UAAA,EAAAC,WAAA,IAAAJ,OAAAC,eAAAs8B,EAAAjxB,GAAAqiG,GAAAxtG,CAAAA,UAAAC,EAAAA,WAAAkL,IAAAA,EA0FbwhG,kBAAYxhG,EAAAA,EAOZu0F,aAAOv0F,EAAAA,EAOPi0F,oBAAcj0F,EAAAA,EAOdw0F,gBAAUx0F,EAAAA,EAOV6iG,kBAAY7iG,EAAAA,EAOZs0F,gBAAUt0F,EAAAA,EAOV8hG,cAAQ9hG,EAAAA,EAOR4hG,qBAAe5hG,EAAAA,EAOf+hG,qBAAe/hG,EAAAA,EAOfw7F,2BAAqBx7F,EAAAA,EAOrB6hG,2BAUL7hG,EAAAA,EAAK+iB,KAAOA,EACZ/iB,EAAKo3C,OAASr0B,EAAKq0B,OAEnBr0B,EAAK65B,cAAcg3C,cAAgB,SAAC9uE,GAChCA,EAAE+uE,gBACN,EAEA9+F,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAmB,CACfj/E,KAAAA,EACAq0B,OAAQp3C,EAAKo3C,QAGjBriD,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAgB,CACZ+R,eAAgB,IAChBnB,cAAe,EACfvrD,QAAQ,EACR+tD,eAAgB,SAChBC,QAAS,QACTrM,UAAU,EACVQ,aAAa,EACbwC,eAAe,EACf6B,iBAAiB,EACjB5E,eAAe,EACf9D,WAAW,EACXkB,gBAAgB,EAChB6K,mBAAmB,EACnB7D,YAAY,EACZ3D,iBAAkB,IAClBsF,qBAAsB,GACtB+B,gBAAiB,EACjBZ,gBAAiB,EACjB0C,aAAc,EACdxB,WAAY,GACZhC,kBAAmB,GACnB3E,oBAAqB,IACrByI,eAAgB,GAChB5B,aAAc,EACdX,wBAAyB,GACzBC,cAAe,IACfhI,iBAAiB,EACjByM,OAAQ,IAGZjuG,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAe,CACX7B,iBAAkB17F,KAClB4yF,WAAW,EACXe,oBAAoB,EACpBoC,iBAAkB,EAClBE,iBAAkB,EAClBE,iBAAkB,EAClBC,iBAAkB,EAClBqF,eAAgB,KAChBa,cAAe,GACfC,YAAav8F,KACbw8F,cAAe,EACfC,aAAc,EACdd,iBAAkB,KAClB4C,SAAS,EACTC,UAAU,EACVhN,QAAS,GACTiN,WAAW,GAGfpuG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,IAAgB,CACZ7K,aAAc,EACdF,aAAc,EACdH,UAAW,EACXC,UAAW,EACX6G,UAAW,EACX5O,WAAY,GAGhBn6F,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAoB,CAChBtT,cAAa59D,EAAAjxB,GACb01F,eAAgB,IAAIpC,GAAcriE,EAAAjxB,GAAAjL,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,KAClCiK,gBAAiB,IAAI/I,GAAe3/D,EAAAjxB,GAAAjL,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,KACpCuO,cAAe,IAAIrP,GAAa39D,EAAAjxB,IAChC8mD,aAAc,IAAIrC,GAAsBzkD,EAAK+iB,KAAM,CAC/C0iC,SAAU,MAIlB1wD,EAAAk8B,EAAAjxB,GAAAoiG,IAAAA,IAAiB,CACb,IAAIlD,GAAgBnqG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KACpB,IAAIzC,GAA6B1qG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KACjC,IAAIhN,GAA0BngG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KAC9B,IAAIvJ,GAAuB5jG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KAC3B,IAAIlI,GAAgBjlG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KACpB,IAAIpB,GAAgB/rG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KACpB,IAAIvG,GAA6B5mG,EAAAk8B,EAAAjxB,GAAAgiG,IAAAA,IAAAjtG,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,MAKrCntG,EAAAk8B,EAAAjxB,GAAAqiG,IAAAA,IAAsB,IAAIrE,GAAa/sE,EAAAjxB,GAAAjL,EAAAk8B,EAAAjxB,GAAAmiG,IAAAA,IAAAptG,EAAAk8B,EAAAjxB,GAAA0vF,IAAAA,IAAA36F,EAAAk8B,EAAAjxB,GAAAiiG,IAAAA,IAAAltG,EAAAk8B,EAAAjxB,GAAAkiG,IAAAA,KAEvCliG,EAAKu0F,QAAU,IAAI//F,EAAa,IAAImG,GAAeA,iBACnDqF,EAAKw0F,WAAa,IAAIhgG,EAAa,IAAImG,GAAeA,iBACtDqF,EAAK6iG,aAAe,IAAIruG,EAAa,IAAImG,GAAAA,iBACzCqF,EAAKs0F,WAAa,IAAI9/F,EAAa,IAAImG,GAAAA,iBAIvCqF,EAAK+iG,QAAUhkG,EAAIgkG,QACnB/iG,EAAK4+F,kBAAoB7/F,EAAI6/F,kBAC7B5+F,EAAKgjG,OAASjkG,EAAIikG,OAClBhjG,EAAKu7F,gBAAkBx8F,EAAIw8F,gBAC3Bv7F,EAAK22F,cAAgB53F,EAAI43F,cACzB32F,EAAK+0C,OAASh2C,EAAIg2C,OAClB/0C,EAAK05F,cAAgB36F,EAAI26F,cACzB15F,EAAKy+F,gBAAkB1/F,EAAI0/F,gBAC3Bz+F,EAAK69F,gBAAkB9+F,EAAI8+F,gBAC3B79F,EAAKugG,aAAexhG,EAAIwhG,aACxBvgG,EAAK08F,qBAAuB39F,EAAI29F,qBAChC18F,EAAKo3F,iBAAmBr4F,EAAIq4F,iBAC5Bp3F,EAAK6gG,eAAiB9hG,EAAI8hG,eAC1B7gG,EAAKi/F,aAAelgG,EAAIkgG,aACxBj/F,EAAKs+F,wBAA0Bv/F,EAAIu/F,wBACnCt+F,EAAKu+F,cAAgBx/F,EAAIw/F,cACzBv+F,EAAK++F,WAAahgG,EAAIggG,WACtB/+F,EAAK+zF,gBAAiB,EACtB/zF,EAAK+8F,kBAAoBh+F,EAAIg+F,kBAC7B/8F,EAAKo4F,oBAAsBr5F,EAAIq5F,oBAC/Bp4F,EAAKu2F,gBAAkBx3F,EAAIw3F,gBAAgBv2F,CAC/C,CA/YuBG,EAAAsiG,EAAA3xE,GA+YtB,IAAA97B,EAAAytG,EAAAxtG,UAwzBAwtG,OAxzBAztG,EAg0BD6jG,oBAAA,SAAoBuK,EAAgBvH,GAChC,IAAMvsE,EAAOv6B,EAAAH,KAAI86F,IAAAA,IAAUsT,OAAOI,GAClC,IAAK9zE,EACD,OACH,EACIusE,IACDA,EAAa9mG,EAAIH,KAAAqtG,IAAAA,IAAS/L,SAE9B,IAAK,IAAI79F,EAAI,EAAG8S,EAAMmkB,EAAKv3B,OAAQM,EAAI8S,EAAK9S,IAExC,GAAIwjG,EADQvsE,EAAKj3B,IAEb,OAAO,EAGf,OAAO,CACX,EAACrD,EAqBD6K,QAAA,WACI9K,EAAIH,KAAA2tG,IAAAA,MACJxtG,EAAAH,KAAI4tG,IAAAA,MACJztG,EAAIH,KAAAytG,IAAAA,IAAgBxiG,UACpBjL,KAAK2/F,QAAQ1+F,QACbjB,KAAK4/F,WAAW3+F,QAChBjB,KAAKiuG,aAAahtG,QAClBjB,KAAK0/F,WAAWz+F,QAChBi7B,EAAA77B,UAAM4K,QAAOjH,KAAAhE,KACjB,EAACkB,EAAA2sG,EAAA,CAAA,CAAA1sG,IAAA,SAAAC,IAt2BD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUsT,MACzB,EAACzxF,IAUD,SAAWzc,GAEP,GAAI2uB,GADJ3uB,EAAQA,GAAS,UACI,CACjB,IAAMkuG,EAAiC,CAAA,EAEvC,OAAQluG,GAEJ,QACIF,KAAK6K,MAAM,mCAAqC3K,EAAQ,2BAE5D,IAAK,SACDkuG,EAAOP,EAAcpF,UAAY,CR7UxB,IQ8UT2F,EAAOP,EAAclF,WAAa,CR/TzB,IQgUTyF,EAAOP,EAAchF,QAAU,CRlNtB,IQmNTuF,EAAOP,EAAc9E,UAAY,CR7NxB,IQ8NTqF,EAAOP,EAActF,eAAiB,GACtC6F,EAAOP,EAAcxF,cAAgB,GACrC+F,EAAOP,EAAc3F,gBAAkB,CRrO9B,GA0FE,KQ4IXkG,EAAOP,EAAc7F,iBAAmB,CR1P/B,GAmHO,KQwIhBoG,EAAOP,EAAcnG,cAAgB,CRtZnB,IQuZlB0G,EAAOP,EAAcjG,cAAgB,CRjarB,IQkahBwG,EAAOP,EAAcvG,cAAgB,CRvQ5B,GAjKS,IQyalB8G,EAAOP,EAAcrG,cAAgB,CRpU5B,GA1FU,IQ+ZnB4G,EAAOP,EAAc3J,iBAAmB,CRtY3B,IQuYbkK,EAAOP,EAAczJ,gBAAkB,CRlY1B,IQmYbgK,EAAOP,EAAcvJ,gBAAkB,CR9X1B,IQ+Xb8J,EAAOP,EAAcrJ,iBAAmB,CR1X3B,IQ2Xb4J,EAAOP,EAAcnJ,eAAiB,CRtXzB,IQuXb0J,EAAOP,EAAcjJ,kBAAoB,CRlX5B,IQmXb,MAEJ,IAAK,SACDwJ,EAAOP,EAAcpF,UAAY,CRlRxB,IQmRT2F,EAAOP,EAAclF,WAAa,CRpVzB,IQqVTyF,EAAOP,EAAchF,QAAU,CRtPtB,IQuPTuF,EAAOP,EAAc9E,UAAY,CRlPxB,IQmPTqF,EAAOP,EAActF,eAAiB,GACtC6F,EAAOP,EAAcxF,cAAgB,GACrC+F,EAAOP,EAAc3F,gBAAkB,CR3O9B,GA2EE,KQiKXkG,EAAOP,EAAc7F,iBAAmB,CR/Q/B,GAmHO,KQ6JhBoG,EAAOP,EAAcnG,cAAgB,CR3anB,IQ4alB0G,EAAOP,EAAcjG,cAAgB,CRtbrB,IQubhBwG,EAAOP,EAAcvG,cAAgB,CR5W5B,GAjFS,IQ8blB8G,EAAOP,EAAcrG,cAAgB,CRzV5B,GA1FU,IQobnB4G,EAAOP,EAAc3J,iBAAmB,CR3Z3B,IQ4ZbkK,EAAOP,EAAczJ,gBAAkB,CRvZ1B,IQwZbgK,EAAOP,EAAcvJ,gBAAkB,CRnZ1B,IQoZb8J,EAAOP,EAAcrJ,iBAAmB,CR/Y3B,IQgZb4J,EAAOP,EAAcnJ,eAAiB,CR3YzB,IQ4Yb0J,EAAOP,EAAcjJ,kBAAoB,CRvY5B,IQ2YrBzkG,EAAIH,KAAA86F,IAAAA,IAAUsT,OAASA,CAC1B,KAAM,CACH,IAAMA,EAASluG,EACfC,EAAAH,KAAI86F,IAAAA,IAAUsT,OAASA,CAC1B,CACL,IAACjtG,IAAA,eAAAwb,IASD,SAAiBihC,GACbz9C,EAAIH,KAAAutG,IAAAA,IAAcxI,gBAAgBlI,gBAAgBj/C,EACtD,GAAC,CAAAz8C,IAAA,SAAAC,IAWD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU36C,MACzB,EAACxjC,IAWD,SAAWzc,GACPC,EAAIH,KAAA86F,IAAAA,IAAU36C,QAAmB,IAAVjgD,CAC3B,GAAC,CAAAiB,IAAA,UAAAC,IAOD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUqT,OACzB,EAACxxF,IAeD,SAAYwxF,GAEQ,iBADhBA,EAAUA,GAAW,UACwB,UAAZA,GAAmC,aAAZA,IACpDnuG,KAAK6K,MAAM,kCAAoCsjG,EAAU,yFACzDA,EAAU,SAEdhuG,EAAAH,KAAI86F,IAAAA,IAAUwH,YAA2B,gBAAZ6L,EAC7BhuG,EAAIH,KAAA86F,IAAAA,IAAUgH,SAAwB,aAAZqM,GACtBhuG,EAAIH,KAAA86F,IAAAA,IAAUwH,aAAeniG,EAAAH,KAAI86F,IAAAA,IAAUgH,YAC3C3hG,EAAAH,KAAIutG,IAAAA,IAAcxI,gBAAgB3G,YAClCj+F,EAAAH,KAAIutG,IAAAA,IAAcxI,gBAAgB1G,YAEtCl+F,EAAIH,KAAA86F,IAAAA,IAAUqT,QAAUA,CAC5B,GAAChtG,CAAAA,IAAAC,iBAAAA,IAYD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUqE,cACzB,EAACxiF,IAYD,SAAmBzc,GACfC,EAAAH,KAAI0tG,IAAAA,MACJvtG,EAAIH,KAAA86F,IAAAA,IAAUqE,iBAAmBj/F,CACrC,GAAC,CAAAiB,IAAA,gBAAAC,IAiBD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUgK,aACzB,EAACnoF,IAiBD,SAAkBzc,GACdC,EAAIH,KAAA86F,IAAAA,IAAUgK,eAA2B,IAAV5kG,CACnC,GAACiB,CAAAA,IAAAC,WAAAA,IASD,WACI,OAAOjB,EAAIH,KAAAutG,IAAAA,IAAcxI,gBAAgB3I,aAC7C,EAACz/E,IASD,SAAamb,GACT33B,EAAAH,KAAIutG,IAAAA,IAAcxI,gBAAgB1H,YAAYvlE,EAClD,GAAC32B,CAAAA,qBAAAC,IAMD,WAEI,OADApB,KAAK4K,KAAK,uEACC5K,KAAC8kG,aAChB,EAACnoF,IAMD,SAAmBzc,GACfF,KAAK4K,KAAK,uEACV5K,KAAK8kG,cAAgB5kG,CACzB,GAACiB,CAAAA,IAAAC,eAAAA,IAMD,WAEI,OADApB,KAAK4K,KAAK,sEACH,CACX,EAAC+R,IAMD,SAAiBzc,GACbF,KAAK4K,KAAK,oEACd,GAACzJ,CAAAA,IAAAC,WAAAA,IAcD,WAEI,OADApB,KAAK4K,KAAK,2DACHzK,EAAAH,KAAI86F,IAAAA,IAAUgH,QACzB,EAACnlF,IAcD,SAAazc,GACTC,EAAAH,KAAI86F,IAAAA,IAAUgH,WAAa5hG,EAC3BC,EAAIH,KAAA86F,IAAAA,IAAUwH,aAAc,EACxBniG,EAAIH,KAAA86F,IAAAA,IAAUgH,WACd3hG,EAAIH,KAAAutG,IAAAA,IAAcxI,gBAAgB3G,YAClCj+F,OAAIotG,IAAAA,IAAcxI,gBAAgB1G,YAEtCr+F,KAAK4K,KAAK,0DACd,GAAC,CAAAzJ,IAAA,cAAAC,IAcD,WAEI,OADApB,KAAK4K,KAAK,8DACHzK,EAAIH,KAAA86F,IAAAA,IAAUwH,WACzB,EAAC3lF,IAcD,SAAgBzc,GACZF,KAAK4K,KAAK,8DACVzK,EAAIH,KAAA86F,IAAAA,IAAUwH,cAAgBpiG,EAC9BC,EAAIH,KAAA86F,IAAAA,IAAUgH,UAAW,EACrB3hG,EAAIH,KAAA86F,IAAAA,IAAUwH,cACdniG,EAAAH,KAAIutG,IAAAA,IAAcxI,gBAAgB3G,YAClCj+F,EAAAH,KAAIutG,IAAAA,IAAcxI,gBAAgB1G,WAE1C,GAAC,CAAAl9F,IAAA,oBAAAC,IAaD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUkP,iBACzB,EAACrtF,IAaD,SAAsBzc,GAClBC,EAAAH,KAAI86F,IAAAA,IAAUkP,oBAAsB9pG,CACxC,GAAC,CAAAiB,IAAA,kBAAAC,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU6L,eACzB,EAAChqF,IASD,SAAoBzc,GAChBC,EAAAH,KAAI86F,IAAAA,IAAU6L,iBAA4B,IAAVzmG,CACpC,GAAC,CAAAiB,IAAA,gBAAAC,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUiH,aACzB,EAACplF,IASD,SAAkBzc,GACdC,EAAIH,KAAA86F,IAAAA,IAAUiH,eAA0B,IAAV7hG,CAClC,GAACiB,CAAAA,IAAAC,kBAAAA,IAWD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU+O,eACzB,EAACltF,IAkBD,SAAoBktF,GAChB1pG,EAAIH,KAAA86F,IAAAA,IAAU+O,gBAAmBA,QAA6DA,EAAkB,CACpH,GAAC1oG,CAAAA,IAAAC,eAAAA,IASD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAU6Q,YACzB,EAAChvF,IAOD,SAAiBgvF,GACbxrG,EAAIH,KAAA86F,IAAAA,IAAU6Q,aAAgBA,QAAuDA,EAAe,CACxG,GAACxqG,CAAAA,IAAAC,kBAAAA,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUmO,eACzB,EAACtsF,IAiBD,SAAoBssF,GAChB9oG,EAAIH,KAAA86F,IAAAA,IAAUmO,gBAAmBA,QAA6DA,EAAkB,CACpH,GAAC,CAAA9nG,IAAA,uBAAAC,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUgN,oBACzB,EAACnrF,IAWD,SAAyBmrF,GACrB3nG,EAAIH,KAAA86F,IAAAA,IAAUgN,qBAAwBA,QAAuEA,EAAuB,EACxI,IAAC3mG,IAAA,mBAAAC,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU0H,gBACzB,EAAC7lF,IAkBD,SAAqB6lF,GACjBriG,EAAIH,KAAA86F,IAAAA,IAAU0H,iBAAoBA,QAA+DA,EAAmB,GACxH,GAACrhG,CAAAA,IAAAC,oBAAAA,IASD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUqN,iBACzB,EAACxrF,IAUD,SAAsBwrF,GAClBhoG,EAAIH,KAAA86F,IAAAA,IAAUqN,kBAAqBA,QAAiEA,EAAoB,EAC5H,GAAChnG,CAAAA,IAAAC,iBAAAA,IASD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUmR,cACzB,EAACtvF,IASD,SAAmBsvF,GACf9rG,EAAIH,KAAA86F,IAAAA,IAAUmR,eAAkBA,QAA2DA,EAAiB,EAChH,GAAC9qG,CAAAA,IAAAC,sBAAAA,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU0I,mBACzB,EAAC7mF,IAUD,SAAwB6mF,GACpBrjG,EAAIH,KAAA86F,IAAAA,IAAU0I,oBAAuBA,QAAqEA,EAAsB,GACpI,GAAC,CAAAriG,IAAA,eAAAC,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUuP,YACzB,EAAC1tF,IAmBD,SAAiB0tF,GACblqG,EAAIH,KAAA86F,IAAAA,IAAUuP,aAAgBA,QAAuDA,EAAe,CACxG,GAAClpG,CAAAA,IAAAC,0BAAAA,IASD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU4O,uBACzB,EAAC/sF,IASD,SAA4B+sF,GACxBvpG,EAAIH,KAAA86F,IAAAA,IAAU4O,wBAA2BA,QAA6EA,EAA0B,EACpJ,GAACvoG,CAAAA,IAAAC,gBAAAA,IASD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAU6O,aACzB,EAAChtF,IASD,SAAkBgtF,GACdxpG,EAAIH,KAAA86F,IAAAA,IAAU6O,cAAiBA,QAAyDA,EAAgB,GAC5G,GAACxoG,CAAAA,IAAAC,aAAAA,IASD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUqP,UACzB,EAACxtF,IAmBD,SAAewtF,GACXhqG,EAAAH,KAAI86F,IAAAA,IAAUqP,WAAcA,QAAmDA,EAAa,EAChG,GAAChpG,CAAAA,IAAAC,iBAAAA,IAaD,WACI,OAAOjB,EAAIH,KAAA86F,IAAAA,IAAUoT,cACzB,EAACvxF,IAaD,SAAmBzc,GAGD,YADdA,EAAQA,GAAS,WACmB,WAAVA,IACtBF,KAAK6K,MAAM,iEACX3K,EAAQ,UAEZC,EAAIH,KAAA86F,IAAAA,IAAUoT,eAAiBhuG,EAC/BF,KAAKouG,OAASjuG,EAAAH,KAAI86F,IAAAA,IAAUoT,cAChC,GAAC,CAAA/sG,IAAA,aAAAC,IAcD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAUqL,UACzB,EAACxpF,IAcD,SAAemM,GACX3oB,EAAIH,KAAA86F,IAAAA,IAAUqL,YAA0B,IAAZr9E,CAChC,GAAC,CAAA3nB,IAAA,kBAAAC,IAKD,WACI,OAAOjB,EAAAH,KAAI86F,IAAAA,IAAU6G,eACzB,EAAChlF,IAKD,SAAoBmM,GAChB3oB,EAAIH,KAAA86F,IAAAA,IAAU6G,iBAA+B,IAAZ74E,CACrC,KAAC+kF,CAAA,CAvsCsB,CAAQ5jG,kBAiuC3B,IAAK,IAAIxG,EAAI,EAAG8S,EAAMpW,EAAIH,KAAAwtG,IAAAA,IAAWrqG,OAAQM,EAAI8S,EAAK9S,IAAK,CACvD,IAAMrB,EAAUjC,EAAAH,KAAIwtG,IAAAA,IAAW/pG,GAC3BrB,EAAQo/B,OACRp/B,EAAQo/B,OAEf,CAEDrhC,EAAAH,KAAIstG,IAAAA,IAAUlL,UAAY,EAC1BjiG,EAAIH,KAAAstG,IAAAA,IAAUjL,UAAY,EAC1BliG,EAAIH,KAAAstG,IAAAA,IAAU7K,aAAe,EAC7BtiG,EAAAH,KAAIstG,IAAAA,IAAU/K,aAAe,EAC7BpiG,OAAImtG,IAAAA,IAAUhT,WAAa,CAC/B,CAAC,SAAAyT,KAkBG,IAAK,IAAItqG,EAAI,EAAG8S,EAAMpW,EAAAH,KAAIwtG,IAAAA,IAAWrqG,OAAQM,EAAI8S,EAAK9S,IAAK,CACvD,IAAMrB,EAAUjC,EAAAH,KAAIwtG,IAAAA,IAAW/pG,GAC3BrB,EAAQ6I,SACR7I,EAAQ6I,SAEf,CACL,CAAC,SAAA6iG,KAGG,IAAK,IAAI3sG,KAAGhB,EAAIH,KAAIutG,IAAAA,IAAe,CAE/B,IAAM1iF,EAAa1qB,EAAIH,KAAAutG,IAAAA,IAAcpsG,GACjC0pB,EAAW5f,SACX4f,EAAW5f,SAElB,CACL,CA/wCS4iG,GAKcpF,SAAmB,EALjCoF,GAUclF,UAAoB,EAVlCkF,GAechF,OAAiB,EAf/BgF,GAoBc9E,SAAmB,EApBjC8E,GAyBcxF,aAAuB,EAzBrCwF,GA8BctF,cAAwB,EA9BtCsF,GAmCcnG,aAAuB,EAnCrCmG,GAwCcjG,aAAuB,EAxCrCiG,GA6CcvG,aAAuB,EA7CrCuG,GAkDcrG,aAAuB,EAlDrCqG,GAuDc3F,eAAyB,GAvDvC2F,GA4Dc7F,gBAA0B,GA5DxC6F,GAiEc3J,gBAA0B,GAjExC2J,GAsEczJ,eAAyB,GAtEvCyJ,GA2EcvJ,eAAyB,GA3EvCuJ,GAgFcrJ,gBAA0B,GAhFxCqJ,GAqFcnJ,cAAwB,GArFtCmJ,GA0FcjJ,iBAA2B,iER5IjB,UAKN,YAKE,aAKA,YAKD,WAKD,mBAKQ,iBAKF,cAKH,eAKC,iBAKE,WAKN,YAKC,kBAKM,gBAMF,mBAKG,kBAKD,cAKJ,cAKA,aAKD,aAKA,aAKA,aAKA,aAKA,aAKA,aAKA,aAKA,aAKA,aAKA,SAKJ,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,SAKA,mBAKU,oBAKC,kBAKF,gBAKF,gBAKA,gBAKA,gBAKA,gBAKA,iBAKA,iBAKA,iBAKA,iBAKA,iBAKA,iBAKA,YAKL,iBAKK,sBAKK,eAKP,WAKJ,WAKA,WAKA,WAKA,WAKA,WAKA,WAKA,WAKA,WAKA,YAKC,YAKA,YAKA,iBAKK,oBAKG,mBAKD,mBAKA,cAKL,aAKD,eAKE,sBAKO,qBAKD,qBAKA,mBAKF,sBAKG,qBAKD,cAKP,mESneAjkE,GAA6B,mBCAxD,SAA2BA,GAC7B,MAAO,CACX,CAAA"}