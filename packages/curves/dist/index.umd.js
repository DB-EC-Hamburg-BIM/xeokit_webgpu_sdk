!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n||self).curves={})}(this,function(n){n.b2=function(n,t,e,r){return this.b2p0(n,t)+this.b2p1(n,e)+this.b2p2(n,r)},n.b2p0=function(n,t){var e=1-n;return e*e*t},n.b2p1=function(n,t){return 2*(1-n)*n*t},n.b2p2=function(n,t){return n*n*t},n.b3=function(n,t,e,r,i){return this.b3p0(n,t)+this.b3p1(n,e)+this.b3p2(n,r)+this.b3p3(n,i)},n.b3p0=function(n,t){var e=1-n;return e*e*e*t},n.b3p1=function(n,t){var e=1-n;return 3*e*e*n*t},n.b3p2=function(n,t){return 3*(1-n)*n*n*t},n.b3p3=function(n,t){return n*n*n*t},n.catmullRomInterpolate=function(n,t,e,r,i){var u=.5*(e-n),o=.5*(r-t),f=i*i;return(2*t-2*e+u+o)*(i*f)+(-3*t+3*e-2*u-o)*f+u*i+t},n["tangentQuadraticBézier"]=function(n,t,e,r){return 2*(1-n)*(e-t)+2*n*(r-e)},n["tangentQuadraticBézier3"]=function(n,t,e,r,i){return-3*t*(1-n)*(1-n)+3*e*(1-n)*(1-n)-6*n*e*(1-n)+6*n*r*(1-n)-3*n*n*r+3*n*n*i},n.tangentSpline=function(n){return 6*n*n-6*n+(3*n*n-4*n+1)+(-6*n*n+6*n)+(3*n*n-2*n)}});
//# sourceMappingURL=index.umd.js.map
