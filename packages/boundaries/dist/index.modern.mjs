import{createVec3 as t,createMat4 as n,subVec3 as r,lenVec3 as e,createVec2 as o,mulMat4 as u}from"@xeokit/matrix";import{newFloatArray as s,MAX_DOUBLE as i,MIN_DOUBLE as c}from"@xeokit/math";import{decompressPoint3 as f}from"@xeokit/compression";const l=t(),a=t(),h=n();function m(t){return new Float64Array(t||6)}function x(t){return new Int16Array(t||6)}function p(t){return s(t||4)}function V(t){return s(t||32)}function w(t){return s(t||16)}function g(t,n,r,e){return s([t,n,r,e])}function v(t,n,r=n){let e;const o=n.length;let u,s,i;const c=t[0],f=t[1],l=t[2],a=t[3],h=t[4],m=t[5],x=t[6],p=t[7],V=t[8],w=t[9],g=t[10],v=t[11],d=t[12],k=t[13],M=t[14],b=t[15];for(e=0;e<o;e+=4)u=n[e+0],s=n[e+1],i=n[e+2],r[e+0]=c*u+h*s+V*i+d,r[e+1]=f*u+m*s+w*i+k,r[e+2]=l*u+x*s+g*i+M,r[e+3]=a*u+p*s+v*i+b;return r}function d(t,n){return t[0]<=n[0]&&n[3]<=t[3]&&t[1]<=n[1]&&t[2]<=n[2]}function k(t,n){return t[0]<=n[0]&&n[3]<=t[3]&&t[1]<=n[1]&&n[4]<=t[4]&&t[2]<=n[2]&&n[5]<=t[5]}const M=(()=>{const t=s(3),n=s(3),o=s(3);return u=>(t[0]=u[0],t[1]=u[1],t[2]=u[2],n[0]=u[3],n[1]=u[4],n[2]=u[5],r(n,t,o),Math.abs(e(o)))})(),b=(()=>{const t=s(3),n=s(3),o=s(3);return(u,s)=>{t[0]=u[0],t[1]=u[1],t[2]=u[2],n[0]=u[3],n[1]=u[4],n[2]=u[5];const i=r(n,t,o),c=s[0]-u[0],f=u[3]-s[0],l=s[1]-u[1],a=u[4]-s[1],h=s[2]-u[2],m=u[5]-s[2];return i[0]+=c>f?c:f,i[1]+=l>a?l:a,i[2]+=h>m?h:m,Math.abs(e(i))}})();function y(t){return(t[3]-t[0])*(t[4]-t[1])*(t[5]-t[2])}function A(n,r=t()){return r[0]=(n[0]+n[3])/2,r[1]=(n[1]+n[4])/2,r[2]=(n[2]+n[5])/2,r}function q(t,n=o()){return n[0]=(t[2]+t[0])/2,n[1]=(t[3]+t[1])/2,n}function F(t=m()){return t[0]=i,t[1]=i,t[2]=i,t[3]=c,t[4]=c,t[5]=c,t}function I(t=x()){return t[0]=65535,t[1]=65535,t[2]=65535,t[3]=-65535,t[4]=-65535,t[5]=-65535,t}function j(t=m(),n=V()){return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1,n[4]=t[3],n[5]=t[1],n[6]=t[2],n[7]=1,n[8]=t[3],n[9]=t[4],n[10]=t[2],n[11]=1,n[12]=t[0],n[13]=t[4],n[14]=t[2],n[15]=1,n[16]=t[0],n[17]=t[1],n[18]=t[5],n[19]=1,n[20]=t[3],n[21]=t[1],n[22]=t[5],n[23]=1,n[24]=t[3],n[25]=t[4],n[26]=t[5],n[27]=1,n[28]=t[0],n[29]=t[4],n[30]=t[5],n[31]=1,n}function z(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[2]>n[2]&&(t[2]=n[2]),t[3]<n[3]&&(t[3]=n[3]),t[4]<n[4]&&(t[4]=n[4]),t[5]<n[5]&&(t[5]=n[5]),t}function B(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[3]<n[3]&&(t[3]=n[3]),t[4]<n[4]&&(t[4]=n[4]),t}function C(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[2]>n[2]&&(t[2]=n[2]),t[3]<n[0]&&(t[3]=n[0]),t[4]<n[1]&&(t[4]=n[1]),t[5]<n[2]&&(t[5]=n[2]),t}function D(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[3]<n[0]&&(t[3]=n[0]),t[4]<n[1]&&(t[4]=n[1]),t}function E(t,n){for(var r,e,o,u=0,s=n.length;u<s;u+=3)e=n[u+1],o=n[u+2],t[0]>(r=n[u])&&(t[0]=r),t[1]>e&&(t[1]=e),t[2]>o&&(t[2]=o),t[3]<r&&(t[3]=r),t[4]<e&&(t[4]=e),t[5]<o&&(t[5]=o);return t}function G(t,n=V()){return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1,n[4]=t[3],n[5]=t[1],n[6]=t[2],n[7]=1,n[8]=t[3],n[9]=t[4],n[10]=t[2],n[11]=1,n[12]=t[0],n[13]=t[4],n[14]=t[2],n[15]=1,n[16]=t[0],n[17]=t[1],n[18]=t[5],n[19]=1,n[20]=t[3],n[21]=t[1],n[22]=t[5],n[23]=1,n[24]=t[3],n[25]=t[4],n[26]=t[5],n[27]=1,n[28]=t[0],n[29]=t[4],n[30]=t[5],n[31]=1,n}const H=(()=>{const t=s(3);return(n,r,e)=>{r=r||m();let o,u,s,l=i,a=i,h=i,x=c,p=c,V=c;for(let r=0,i=n.length;r<i;r+=3)e?(t[0]=n[r+0],t[1]=n[r+1],t[2]=n[r+2],f(t,e,t),o=t[0],u=t[1],s=t[2]):(o=n[r+0],u=n[r+1],s=n[r+2]),o<l&&(l=o),u<a&&(a=u),s<h&&(h=s),o>x&&(x=o),u>p&&(p=u),s>V&&(V=s);return r[0]=l,r[1]=a,r[2]=h,r[3]=x,r[4]=p,r[5]=V,r}})();function J(t,n=m()){let r,e,o,u=i,s=i,f=i,l=c,a=c,h=c;for(let n=0,i=t.length;n<i;n+=4)r=t[n+0],e=t[n+1],o=t[n+2],r<u&&(u=r),e<s&&(s=e),o<f&&(f=o),r>l&&(l=r),e>a&&(a=e),o>h&&(h=o);return n[0]=u,n[1]=s,n[2]=f,n[3]=l,n[4]=a,n[5]=h,n}function K(t,n=m()){let r,e,o,u=i,s=i,f=i,l=c,a=c,h=c;for(let n=0,i=t.length;n<i;n++)r=t[n][0],e=t[n][1],o=t[n][2],r<u&&(u=r),e<s&&(s=e),o<f&&(f=o),r>l&&(l=r),e>a&&(a=e),o>h&&(h=o);return n[0]=u,n[1]=s,n[2]=f,n[3]=l,n[4]=a,n[5]=h,n}function L(n,r=t()){let e=0,o=0,u=0;for(let t=0,r=n.length;t<r;t+=3)e+=n[t+0],o+=n[t+1],u+=n[t+2];const s=n.length/3;return r[0]=e/s,r[1]=o/s,r[2]=u/s,r}class N{constructor(){this.testVertex=void 0,this.offset=void 0,this.normal=void 0,this.normal=t(),this.offset=0,this.testVertex=t()}set(t,n,r,e){const o=1/Math.sqrt(t*t+n*n+r*r);this.normal[0]=t*o,this.normal[1]=n*o,this.normal[2]=r*o,this.offset=e*o,this.testVertex[0]=this.normal[0]>=0?1:0,this.testVertex[1]=this.normal[1]>=0?1:0,this.testVertex[2]=this.normal[2]>=0?1:0}}const O=1,P=2,Q=3;class R{constructor(){this.planes=void 0,this.planes=[new N,new N,new N,new N,new N,new N]}}function S(t,n,r){const e=u(n,t,h),o=e[0],s=e[1],i=e[2],c=e[3],f=e[4],l=e[5],a=e[6],m=e[7],x=e[8],p=e[9],V=e[10],w=e[11],g=e[12],v=e[13],d=e[14],k=e[15];return(r=r||new R).planes[0].set(c-o,m-f,w-x,k-g),r.planes[1].set(c+o,m+f,w+x,k+g),r.planes[2].set(c-s,m-l,w-p,k-v),r.planes[3].set(c+s,m+l,w+p,k+v),r.planes[4].set(c-i,m-a,w-V,k-d),r.planes[5].set(c+i,m+a,w+V,k+d),r}function T(t,n){let r=1;const e=l,o=a;e[0]=n[0],e[1]=n[1],e[2]=n[2],o[0]=n[3],o[1]=n[4],o[2]=n[5];const u=[e,o];for(let n=0;n<6;++n){const e=t.planes[n];if(e.normal[0]*u[e.testVertex[0]][0]+e.normal[1]*u[e.testVertex[1]][1]+e.normal[2]*u[e.testVertex[2]][2]+e.offset<0)return 3;e.normal[0]*u[1-e.testVertex[0]][0]+e.normal[1]*u[1-e.testVertex[1]][1]+e.normal[2]*u[1-e.testVertex[2]][2]+e.offset<0&&(r=2)}return r}function U(t,n){return 2}function W(t,n,r){return!0}function X(t,n,r,e){return!0}function Y(t,n,r){return!0}function Z(t,n){return!0}function $(t,n){return!0}function _(t,n,r){return!1}function tt(t,n,r){return!1}function nt(t,n){const r=t[0],e=t[1],o=t[2],u=t[3],s=t[4],i=t[5];for(let t=0,c=n.length;t<c;t+=3){const c=n[t];if(r<=c&&c<=u){const r=n[t+1];if(e<=r&&r<=s){const r=n[t+2];if(o<=r&&r<=i)return!0}}}return!1}function rt(t,n){return t[0]<=n[0]&&n[0]<=t[3]&&t[1]<=n[1]&&n[1]<=t[4]&&t[2]<=n[2]&&n[2]<=t[5]}function et(t,n){return t[0]<=n[0]&&n[0]<=t[3]&&t[1]<=n[1]&&n[1]<=t[4]}export{j as AABB3ToOBB3,G as ABB3ToOBB3,R as Frustum3,N as FrustumPlane3,O as INSIDE,P as INTERSECT,J as OBB3ToAABB3,Q as OUTSIDE,F as collapseAABB3,I as collapseAABB3Int16,d as containsAABB2,et as containsAABB2Point2,k as containsAABB3,rt as containsAABB3Point3,p as createAABB2,m as createAABB3,x as createAABB3Int16,w as createOBB2,V as createOBB3,g as createSphere3,B as expandAABB2,D as expandAABB2Point2,z as expandAABB3,C as expandAABB3Point3,E as expandAABB3Points3,q as getAABB2Center,y as getAABB3Area,A as getAABB3Center,M as getAABB3Diag,b as getAABB3DiagPoint,L as getPositions3Center,tt as intersectAABB3Lines3,nt as intersectAABB3Positions3,_ as intersectAABB3Triangles3,U as intersectAABB3s,T as intersectFrustum3AABB3,Y as intersectFrustum3Lines3,$ as intersectFrustum3Point3,Z as intersectFrustum3Positions3,X as intersectFrustum3Triangle3,W as intersectFrustum3Triangles3,K as points3ToAABB3,H as positions3ToAABB3,S as setFrustum3,v as transformOBB3};
//# sourceMappingURL=index.modern.mjs.map
