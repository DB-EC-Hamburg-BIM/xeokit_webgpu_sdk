{"version":3,"file":"index.es","sources":["../../math/dist/index.es","../../matrix/dist/index.es","../../boundaries/src/index.ts","../src/KdTree2.ts","../../../node_modules/ste-core/dist/dispatching/DispatcherWrapper.js","../../../node_modules/ste-core/dist/events/Subscription.js","../../../node_modules/ste-core/dist/management/EventManagement.js","../../../node_modules/ste-core/dist/dispatching/DispatcherBase.js","../../../node_modules/ste-core/dist/dispatching/DispatchError.js","../../../node_modules/ste-core/dist/dispatching/EventListBase.js","../../../node_modules/ste-core/dist/handling/HandlingBase.js","../../../node_modules/ste-core/dist/events/PromiseSubscription.js","../../../node_modules/ste-core/dist/dispatching/PromiseDispatcherBase.js","../../../node_modules/ste-core/dist/index.js","../../../node_modules/ste-events/dist/EventDispatcher.js","../../../node_modules/ste-events/dist/EventList.js","../../../node_modules/ste-events/dist/EventHandlingBase.js","../../../node_modules/ste-events/dist/NonUniformEventList.js","../../../node_modules/ste-events/dist/index.js","../../../node_modules/ste-simple-events/dist/SimpleEventDispatcher.js","../../../node_modules/ste-simple-events/dist/SimpleEventList.js","../../../node_modules/ste-simple-events/dist/SimpleEventHandlingBase.js","../../../node_modules/ste-simple-events/dist/NonUniformSimpleEventList.js","../../../node_modules/ste-simple-events/dist/index.js","../../../node_modules/ste-signals/dist/SignalDispatcher.js","../../../node_modules/ste-signals/dist/SignalList.js","../../../node_modules/ste-signals/dist/SignalHandlingBase.js","../../../node_modules/ste-signals/dist/index.js","../../../node_modules/ste-promise-events/dist/PromiseEventDispatcher.js","../../../node_modules/ste-promise-events/dist/PromiseEventList.js","../../../node_modules/ste-promise-events/dist/PromiseEventHandlingBase.js","../../../node_modules/ste-promise-events/dist/NonUniformPromiseEventList.js","../../../node_modules/ste-promise-events/dist/index.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalDispatcher.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalList.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalHandlingBase.js","../../../node_modules/ste-promise-signals/dist/index.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventDispatcher.js","../../../node_modules/ste-promise-simple-events/dist/NonUniformPromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventHandlingBase.js","../../../node_modules/ste-promise-simple-events/dist/index.js","../../../node_modules/strongly-typed-events/dist/index.js","../../constants/dist/index.es","../../scene/src/getSceneObjectGeometry.ts","../../compression/src/index.ts","../src/createKdTree2FromSceneObjectVerts.ts","../src/searchKdTree2ForNearestNeighbor.ts","../src/KdVertex2.ts"],"sourcesContent":["var r=Float64Array,n=-Number.MAX_SAFE_INTEGER,t=Number.MAX_SAFE_INTEGER,a=.0174532925,e=57.295779513;function u(r,n,t){return Math.max(n,Math.min(t,r))}function E(n){return new r(n)}export{a as DEGTORAD,r as FloatArrayClass,t as MAX_DOUBLE,n as MIN_DOUBLE,e as RADTODEG,u as clamp,E as newFloatArray};\n//# sourceMappingURL=index.es.map\n","import{newFloatArray as n,clamp as t,DEGTORAD as r}from\"@xeokit/math\";var u=s(),a=M(),o=M(),i=M(),e=M(),c=M(),f=s();function v(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function h(n){return new FloatArrayClass(n||2)}function M(n){return new Float64Array(n||3)}function s(n){return new FloatArrayClass(n||4)}function l(n,t){return t||(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t}function d(n,t){return t||(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t}function q(n,t,r){return r||(r=n),r[0]=n[0]+t[0],r[1]=n[1]+t[1],r[2]=n[2]+t[2],r[3]=n[3]+t[3],r}function X(n,t,r){return r||(r=n),r[0]=n[0]+t,r[1]=n[1]+t,r[2]=n[2]+t,r[3]=n[3]+t,r}function Y(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r[2]=n[2]*t,r[3]=n[3]*t,r}function Z(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r[2]=n[2]*t,r}function b(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r}function g(n,t,r){return r||(r=n),r[0]=n[0]+t[0],r[1]=n[1]+t[1],r[2]=n[2]+t[2],r}function y(n,t,r){return r||(r=n),r[0]=n[0]+t,r[1]=n[1]+t,r[2]=n[2]+t,r}function w(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r[2]=n[2]-t[2],r[3]=n[3]-t[3],r}function A(n,t){return n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2]}function p(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r[2]=n[2]-t[2],r}function F(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r}function m(){for(var n=[].slice.call(arguments),t=new Float32Array(n[0]),r=1;r<n.length;r++)t[0]+=n[r][0],t[1]+=n[r][1];return t[0]/=n.length,t[1]/=n.length,t}function x(n,t,r){return r||(r=n),r[0]=n[0]-t,r[1]=n[1]-t,r[2]=n[2]-t,r[3]=n[3]-t,r}function C(n,t,r){return r||(r=n),r[0]=t-n[0],r[1]=t-n[1],r[2]=t-n[2],r[3]=t-n[3],r}function k(n,t,r){return r||(r=n),r[0]=n[0]*t[0],r[1]=n[1]*t[1],r[2]=n[2]*t[2],r[3]=n[3]*t[3],r}function j(n,t,r){return r||(r=n),r[0]=n[0]/t[0],r[1]=n[1]/t[1],r[2]=n[2]/t[2],r}function z(n,t,r){return r||(r=n),r[0]=n[0]/t[0],r[1]=n[1]/t[1],r[2]=n[2]/t[2],r[3]=n[3]/t[3],r}function B(n,t,r){return r||(r=t),r[0]=n/t[0],r[1]=n/t[1],r[2]=n/t[2],r}function D(n,t,r){return r||(r=n),r[0]=n[0]/t,r[1]=n[1]/t,r[2]=n[2]/t,r}function E(n,t,r){return r||(r=n),r[0]=n[0]/t,r[1]=n[1]/t,r[2]=n[2]/t,r[3]=n[3]/t,r}function G(n,t,r){return r||(r=t),r[0]=n/t[0],r[1]=n/t[1],r[2]=n/t[2],r[3]=n/t[3],r}function H(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function I(n,t){var r=n[0],u=n[1],a=n[2],o=t[0],i=t[1],e=t[2];return[u*e-a*i,a*o-r*e,r*i-u*o,0]}function J(n,t,r){r||(r=n);var u=n[0],a=n[1],o=n[2],i=t[0],e=t[1],c=t[2];return r[0]=a*c-o*e,r[1]=o*i-u*c,r[2]=u*e-a*i,r}function K(n){return H(n,n)}function L(n){return Math.sqrt(K(n))}function N(n,t){return n[0]*t[0]+n[1]*t[1]}function O(n){return v(n,n)}function P(n){return N(n,n)}function Q(n){return Math.sqrt(O(n))}var R,S=(R=M(),function(n,t){return Q(p(n,t,R))});function T(n){return Math.sqrt(P(n))}function U(n,t,r,u,a,o){var i=o||M(),e=(n-t)/(r-t);return i[0]=u[0]+e*(a[0]-u[0]),i[1]=u[1]+e*(a[1]-u[1]),i[2]=u[2]+e*(a[2]-u[2]),i}var V=function(){var n=h();return function(t,r){return T(F(t,r,n))}}();function W(n,t){return B(1,n,t)}function $(n,t){return Y(n,1/L(n),t)}function _(n,t){return Z(n,1/Q(n),t)}function nn(n,t){return b(n,1/T(n),t)}function tn(n,t){var r=v(n,t)/Math.sqrt(O(n)*O(t));return r=r<-1?-1:r>1?1:r,Math.acos(r)}var rn=function(){var n=M();return function(t,r){return n[0]=t[0],n[1]=t[1],n[2]=t[2],r[0]=Q(n),n[0]=t[4],n[1]=t[5],n[2]=t[6],r[1]=Q(n),n[0]=t[8],n[1]=t[9],n[2]=t[10],r[2]=Q(n),r}}();function un(n){for(var t=0,r=(n=Array.prototype.slice.call(n)).length;t<r;t++)n[t]=an(n[t]);return n}function an(n){return Math.round(1e5*n)/1e5}function on(n,t,r,u){void 0===u&&(u=M());var a=t[0]-n[0],o=t[1]-n[1],i=t[2]-n[2],e=r[0]-n[0],c=r[1]-n[1],f=r[2]-n[2],v=o*f-i*c,h=i*e-a*f,s=a*c-o*e,l=Math.sqrt(v*v+h*h+s*s);return 0===l?(u[0]=0,u[1]=0,u[2]=0):(u[0]=v/l,u[1]=h/l,u[2]=s/l),u}function en(t){return new n(t||9)}function cn(t){return n(t||16)}var fn=cn(),vn=cn();function hn(n,t){return n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2]&&n[3]===t[3]&&n[4]===t[4]&&n[5]===t[5]&&n[6]===t[6]&&n[7]===t[7]&&n[8]===t[8]&&n[9]===t[9]&&n[10]===t[10]&&n[11]===t[11]&&n[12]===t[12]&&n[13]===t[13]&&n[14]===t[14]&&n[15]===t[15]}function Mn(n,t,r,u,a){var o=[],i=[];return o[2]=r,i[2]=u,i[1]=o[2]*Math.tan(n/2),o[1]=-i[1],i[0]=i[1]*t,o[0]=-i[0],sn(o,i,a)}function sn(n,t,r){r||(r=cn());var u=[n[0],n[1],n[2],0],a=[t[0],t[1],t[2],0];q(a,u,fn),w(a,u,vn);var o=2*u[2],i=vn[0],e=vn[1],c=vn[2];return r[0]=o/i,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=o/e,r[6]=0,r[7]=0,r[8]=fn[0]/i,r[9]=fn[1]/e,r[10]=-fn[2]/c,r[11]=-1,r[12]=0,r[13]=0,r[14]=-o*a[2]/c,r[15]=0,r}function ln(n,t,r,u,a,o,i){i||(i=cn());var e=t-n,c=u-r,f=o-a;return i[0]=2/e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2/c,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-2/f,i[11]=0,i[12]=-(n+t)/e,i[13]=-(u+r)/c,i[14]=-(o+a)/f,i[15]=1,i}function dn(n,t,r,u,a,o,i){i||(i=cn());var e=t-n,c=u-r,f=o-a;return i[0]=2*a/e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2*a/c,i[6]=0,i[7]=0,i[8]=(t+n)/e,i[9]=(u+r)/c,i[10]=-(o+a)/f,i[11]=-1,i[12]=0,i[13]=0,i[14]=-o*a*2/f,i[15]=0,i}function qn(n){return n||(n=cn()),n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function Xn(n){return n||(n=cn()),n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n}function Yn(n){return 1===n[0]&&0===n[1]&&0===n[2]&&0===n[3]&&0===n[4]&&1===n[5]&&0===n[6]&&0===n[7]&&0===n[8]&&0===n[9]&&1===n[10]&&0===n[11]&&0===n[12]&&0===n[13]&&0===n[14]&&1===n[15]}function Zn(n,t,r){r||(r=cn());var u,a,o,i,e,c,f=$([t[0],t[1],t[2],0],[]),v=Math.sin(n),h=Math.cos(n),M=1-h,s=f[0],l=f[1],d=f[2];return u=s*l,a=l*d,o=d*s,i=s*v,e=l*v,c=d*v,r[0]=M*s*s+h,r[1]=M*u+c,r[2]=M*o-e,r[3]=0,r[4]=M*u-c,r[5]=M*l*l+h,r[6]=M*a+i,r[7]=0,r[8]=M*o+e,r[9]=M*a-i,r[10]=M*d*d+h,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}function bn(n,t,r,u){u||(u=cn());var a,o,i,e,c,f,v,h,M,s,l=n[0],d=n[1],q=n[2],X=r[0],Y=r[1],Z=r[2],b=t[0],g=t[1],y=t[2];return l===b&&d===g&&q===y?qn():(a=l-b,o=d-g,i=q-y,e=Y*(i*=s=1/Math.sqrt(a*a+o*o+i*i))-Z*(o*=s),c=Z*(a*=s)-X*i,f=X*o-Y*a,(s=Math.sqrt(e*e+c*c+f*f))?(e*=s=1/s,c*=s,f*=s):(e=0,c=0,f=0),v=o*f-i*c,h=i*e-a*f,M=a*c-o*e,(s=Math.sqrt(v*v+h*h+M*M))?(v*=s=1/s,h*=s,M*=s):(v=0,h=0,M=0),u[0]=e,u[1]=v,u[2]=a,u[3]=0,u[4]=c,u[5]=h,u[6]=o,u[7]=0,u[8]=f,u[9]=M,u[10]=i,u[11]=0,u[12]=-(e*l+c*d+f*q),u[13]=-(v*l+h*d+M*q),u[14]=-(a*l+o*d+i*q),u[15]=1,u)}function gn(n,t){t||(t=n);var r=n[0],u=n[1],a=n[2],o=n[3],i=n[4],e=n[5],c=n[6],f=n[7],v=n[8],h=n[9],M=n[10],s=n[11],l=n[12],d=n[13],q=n[14],X=n[15],Y=r*e-u*i,Z=r*c-a*i,b=r*f-o*i,g=u*c-a*e,y=u*f-o*e,w=a*f-o*c,A=v*d-h*l,p=v*q-M*l,F=v*X-s*l,m=h*q-M*d,x=h*X-s*d,C=M*X-s*q,k=1/(Y*C-Z*x+b*m+g*F-y*p+w*A);return t[0]=(e*C-c*x+f*m)*k,t[1]=(-u*C+a*x-o*m)*k,t[2]=(d*w-q*y+X*g)*k,t[3]=(-h*w+M*y-s*g)*k,t[4]=(-i*C+c*F-f*p)*k,t[5]=(r*C-a*F+o*p)*k,t[6]=(-l*w+q*b-X*Z)*k,t[7]=(v*w-M*b+s*Z)*k,t[8]=(i*x-e*F+f*A)*k,t[9]=(-r*x+u*F-o*A)*k,t[10]=(l*y-d*b+X*Y)*k,t[11]=(-v*y+h*b-s*Y)*k,t[12]=(-i*m+e*p-c*A)*k,t[13]=(r*m-u*p+a*A)*k,t[14]=(-l*g+d*Z-q*Y)*k,t[15]=(v*g-h*Z+M*Y)*k,t}function yn(n,t){var r=n[4],u=n[14],a=n[8],o=n[13],i=n[12],e=n[9];if(!t||n===t){var c=n[1],f=n[2],v=n[3],h=n[6],M=n[7],s=n[11];return n[1]=r,n[2]=a,n[3]=i,n[4]=c,n[6]=e,n[7]=o,n[8]=f,n[9]=h,n[11]=u,n[12]=v,n[13]=M,n[14]=s,n}return t[0]=n[0],t[1]=r,t[2]=a,t[3]=i,t[4]=n[1],t[5]=n[5],t[6]=e,t[7]=o,t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=u,t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15],t}function wn(n,t,r){r||(r=n);var u=t[0],a=t[1],o=t[2],i=t[3];return r[0]=n[0]*u+n[4]*a+n[8]*o+n[12]*i,r[1]=n[1]*u+n[5]*a+n[9]*o+n[13]*i,r[2]=n[2]*u+n[6]*a+n[10]*o+n[14]*i,r[3]=n[3]*u+n[7]*a+n[11]*o+n[15]*i,r}function An(n,t,r){r||(r=n);var u=n[0],a=n[1],o=n[2],i=n[3],e=n[4],c=n[5],f=n[6],v=n[7],h=n[8],M=n[9],s=n[10],l=n[11],d=n[12],q=n[13],X=n[14],Y=n[15],Z=t[0],b=t[1],g=t[2],y=t[3],w=t[4],A=t[5],p=t[6],F=t[7],m=t[8],x=t[9],C=t[10],k=t[11],j=t[12],z=t[13],B=t[14],D=t[15];return r[0]=Z*u+b*e+g*h+y*d,r[1]=Z*a+b*c+g*M+y*q,r[2]=Z*o+b*f+g*s+y*X,r[3]=Z*i+b*v+g*l+y*Y,r[4]=w*u+A*e+p*h+F*d,r[5]=w*a+A*c+p*M+F*q,r[6]=w*o+A*f+p*s+F*X,r[7]=w*i+A*v+p*l+F*Y,r[8]=m*u+x*e+C*h+k*d,r[9]=m*a+x*c+C*M+k*q,r[10]=m*o+x*f+C*s+k*X,r[11]=m*i+x*v+C*l+k*Y,r[12]=j*u+z*e+B*h+D*d,r[13]=j*a+z*c+B*M+D*q,r[14]=j*o+z*f+B*s+D*X,r[15]=j*i+z*v+B*l+D*Y,r}function pn(t,r,u){void 0===u&&(u=n(9));var a=t[0],o=t[3],i=t[6],e=t[1],c=t[4],f=t[7],v=t[2],h=t[5],M=t[8],s=r[0],l=r[3],d=r[6],q=r[1],X=r[4],Y=r[7],Z=r[2],b=r[5],g=r[8];return u[0]=a*s+o*q+i*Z,u[3]=a*l+o*X+i*b,u[6]=a*d+o*Y+i*g,u[1]=e*s+c*q+f*Z,u[4]=e*l+c*X+f*b,u[7]=e*d+c*Y+f*g,u[2]=v*s+h*q+M*Z,u[5]=v*l+h*X+M*b,u[8]=v*d+h*Y+M*g,u}function Fn(n,t,r){r||(r=t);var u=t[0],a=t[1],o=t[2];return r[0]=n[0]*u+n[4]*a+n[8]*o+n[12],r[1]=n[1]*u+n[5]*a+n[9]*o+n[13],r[2]=n[2]*u+n[6]*a+n[10]*o+n[14],r}function mn(n,t,r){return r[0]=n[0]*t[0]+n[4]*t[1]+n[8]*t[2]+n[12]*t[3],r[1]=n[1]*t[0]+n[5]*t[1]+n[9]*t[2]+n[13]*t[3],r[2]=n[2]*t[0]+n[6]*t[1]+n[10]*t[2]+n[14]*t[3],r[3]=n[3]*t[0]+n[7]*t[1]+n[11]*t[2]+n[15]*t[3],r}function xn(n,t,r){for(var u,a,o,i,e,c=r||[],f=t.length,v=n[0],h=n[1],M=n[2],s=n[3],l=n[4],d=n[5],q=n[6],X=n[7],Y=n[8],Z=n[9],b=n[10],g=n[11],y=n[12],w=n[13],A=n[14],p=n[15],F=0;F<f;++F)u=(i=t[F])[0],a=i[1],o=i[2],(e=c[F]||(c[F]=[0,0,0]))[0]=v*u+l*a+Y*o+y,e[1]=h*u+d*a+Z*o+w,e[2]=M*u+q*a+b*o+A,e[3]=s*u+X*a+g*o+p;return c.length=f,c}function Cn(n,t,r){var u;r||(r=t);var a,o,i,e=t.length,c=n[0],f=n[1],v=n[2],h=n[3],M=n[4],s=n[5],l=n[6],d=n[7],q=n[8],X=n[9],Y=n[10],Z=n[11],b=n[12],g=n[13],y=n[14],w=n[15];for(u=0;u<e;u+=3)r[u+0]=c*(a=t[u+0])+M*(o=t[u+1])+q*(i=t[u+2])+b,r[u+1]=f*a+s*o+X*i+g,r[u+2]=v*a+l*o+Y*i+y,r[u+3]=h*a+d*o+Z*i+w;return r}function kn(n,t,r){var u;r||(r=t);var a,o,i,e=t.length,c=n[0],f=n[1],v=n[2],h=n[3],M=n[4],s=n[5],l=n[6],d=n[7],q=n[8],X=n[9],Y=n[10],Z=n[11],b=n[12],g=n[13],y=n[14],w=n[15];for(u=0;u<e;u+=4)r[u+0]=c*(a=t[u+0])+M*(o=t[u+1])+q*(i=t[u+2])+b,r[u+1]=f*a+s*o+X*i+g,r[u+2]=v*a+l*o+Y*i+y,r[u+3]=h*a+d*o+Z*i+w;return r}function jn(n,t,r){var u=t[0],a=t[1],o=t[2];return(r=r||M())[0]=n[0]*u+n[4]*a+n[8]*o,r[1]=n[1]*u+n[5]*a+n[9]*o,r[2]=n[2]*u+n[6]*a+n[10]*o,r}function zn(n,t,r){var u=t[0],a=t[1],o=t[2],i=t[3];return(r=r||s())[0]=n[0]*u+n[4]*a+n[8]*o+n[12]*i,r[1]=n[1]*u+n[5]*a+n[9]*o+n[13]*i,r[2]=n[2]*u+n[6]*a+n[10]*o+n[14]*i,r[3]=n[3]*u+n[7]*a+n[11]*o+n[15]*i,r}function Bn(n,t){void 0===t&&(t=qn());var r=n[0],u=n[1],a=n[2];return t[0]*=r,t[4]*=u,t[8]*=a,t[1]*=r,t[5]*=u,t[9]*=a,t[2]*=r,t[6]*=u,t[10]*=a,t[3]*=r,t[7]*=u,t[11]*=a,t}function Dn(n,t){return void 0===t&&(t=qn()),t[0]=n[0],t[5]=n[1],t[10]=n[2],t}function En(n,t){return void 0===t&&(t=Xn()),t[0]=n[0],t[4]=n[1],t}var Gn,Hn=(Gn=n(3),function(n,t,r,u){return Gn[0]=n,Gn[1]=t,Gn[2]=r,Dn(Gn,u)});function In(n,t,r,u){return u[0]*=n,u[4]*=t,u[8]*=r,u[1]*=n,u[5]*=t,u[9]*=r,u[2]*=n,u[6]*=t,u[10]*=r,u[3]*=n,u[7]*=t,u[11]*=r,u}function Jn(n){return Hn(n,n,n)}function Kn(n,t,r,u){return void 0===u&&(u=cn()),et(t,u),Bn(r,u),Nn(n,u),u}var Ln=function(){var n=M(),t=cn();return function(r,u,a,o){n[0]=r[0],n[1]=r[1],n[2]=r[2];var i=Q(n);n[0]=r[4],n[1]=r[5],n[2]=r[6];var e=Q(n);n[8]=r[8],n[9]=r[9],n[10]=r[10];var c=Q(n);Un(r)<0&&(i=-i),u[0]=r[12],u[1]=r[13],u[2]=r[14],t.set(r);var f=1/i,v=1/e,h=1/c;t[0]*=f,t[1]*=f,t[2]*=f,t[4]*=v,t[5]*=v,t[6]*=v,t[8]*=h,t[9]*=h,t[10]*=h,nt(t,a),o[0]=i,o[1]=e,o[2]=c}}();function Nn(n,t){return void 0===t&&(t=qn()),On(n[0],n[1],n[2],t)}function On(n,t,r,u){void 0===u&&(u=qn());var a=u[3];u[0]+=a*n,u[1]+=a*t,u[2]+=a*r;var o=u[7];u[4]+=o*n,u[5]+=o*t,u[6]+=o*r;var i=u[11];u[8]+=i*n,u[9]+=i*t,u[10]+=i*r;var e=u[15];return u[12]+=e*n,u[13]+=e*t,u[14]+=e*r,u}function Pn(n,t,r){return r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=t[0],r[13]=t[1],r[14]=t[2],r[15]=n[15],r}function Qn(n,t){var r=t||qn();return r[12]=n[0],r[13]=n[1],r[14]=n[2],r}function Rn(n,t){var r=t||Xn();return r[6]=n[0],r[7]=n[1],r}var Sn=function(){var t=n(3);return function(n,r,u,a){return t[0]=n,t[1]=r,t[2]=u,Qn(t,a)}}();function Tn(n,t){return Sn(n,n,n,t)}function Un(n){var t=n[0],r=n[1],u=n[2],a=n[3],o=n[4],i=n[5],e=n[6],c=n[7],f=n[8],v=n[9],h=n[10],M=n[11],s=n[12],l=n[13],d=n[14],q=n[15];return s*v*e*a-f*l*e*a-s*i*h*a+o*l*h*a+f*i*d*a-o*v*d*a-s*v*u*c+f*l*u*c+s*r*h*c-t*l*h*c-f*r*d*c+t*v*d*c+s*i*u*M-o*l*u*M-s*r*e*M+t*l*e*M+o*r*d*M-t*i*d*M-f*i*u*q+o*v*u*q+f*r*e*q-t*v*e*q-o*r*h*q+t*i*h*q}function Vn(n,r,u){void 0===u&&(u=M());var a=n[0],o=n[4],i=n[8],e=n[1],c=n[5],f=n[9],v=n[2],h=n[6],s=n[10];return\"XYZ\"===r?(u[1]=Math.asin(t(i,-1,1)),Math.abs(i)<.99999?(u[0]=Math.atan2(-f,s),u[2]=Math.atan2(-o,a)):(u[0]=Math.atan2(h,c),u[2]=0)):\"YXZ\"===r?(u[0]=Math.asin(-t(f,-1,1)),Math.abs(f)<.99999?(u[1]=Math.atan2(i,s),u[2]=Math.atan2(e,c)):(u[1]=Math.atan2(-v,a),u[2]=0)):\"ZXY\"===r?(u[0]=Math.asin(t(h,-1,1)),Math.abs(h)<.99999?(u[1]=Math.atan2(-v,s),u[2]=Math.atan2(-o,c)):(u[1]=0,u[2]=Math.atan2(e,a))):\"ZYX\"===r?(u[1]=Math.asin(-t(v,-1,1)),Math.abs(v)<.99999?(u[0]=Math.atan2(h,s),u[2]=Math.atan2(e,a)):(u[0]=0,u[2]=Math.atan2(-o,c))):\"YZX\"===r?(u[2]=Math.asin(t(e,-1,1)),Math.abs(e)<.99999?(u[0]=Math.atan2(-f,c),u[1]=Math.atan2(-v,a)):(u[0]=0,u[1]=Math.atan2(i,s))):\"XZY\"===r&&(u[2]=Math.asin(-t(o,-1,1)),Math.abs(o)<.99999?(u[0]=Math.atan2(h,c),u[1]=Math.atan2(i,a)):(u[0]=Math.atan2(-f,s),u[1]=0)),u}function Wn(n,t,r,u,a,o){var i=o||cn(),e=(n-t)/(r-t);return i[0]=u[0]+e*(a[0]-u[0]),i[1]=u[1]+e*(a[1]-u[1]),i[2]=u[2]+e*(a[2]-u[2]),i[3]=u[3]+e*(a[3]-u[3]),i[4]=u[4]+e*(a[4]-u[4]),i[5]=u[5]+e*(a[5]-u[5]),i[6]=u[6]+e*(a[6]-u[6]),i[7]=u[7]+e*(a[7]-u[7]),i[8]=u[8]+e*(a[8]-u[8]),i[9]=u[9]+e*(a[9]-u[9]),i[10]=u[10]+e*(a[10]-u[10]),i[11]=u[11]+e*(a[11]-u[11]),i[12]=u[12]+e*(a[12]-u[12]),i[13]=u[13]+e*(a[13]-u[13]),i[14]=u[14]+e*(a[14]-u[14]),i[15]=u[15]+e*(a[15]-u[15]),i}function $n(n){return void 0===n&&(n=s()),n[0]=0,n[1]=0,n[2]=0,n[3]=1,n}function _n(n,t,u){void 0===u&&(u=s());var a=n[0]*r/2,o=n[1]*r/2,i=n[2]*r/2,e=Math.cos(a),c=Math.cos(o),f=Math.cos(i),v=Math.sin(a),h=Math.sin(o),M=Math.sin(i);return\"XYZ\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f-v*h*M):\"YXZ\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f+v*h*M):\"ZXY\"===t?(u[0]=v*c*f-e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f-v*h*M):\"ZYX\"===t?(u[0]=v*c*f-e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f+v*h*M):\"YZX\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f-v*h*M):\"XZY\"===t&&(u[0]=v*c*f-e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f+v*h*M),u}function nt(n,t){void 0===t&&(t=s());var r,u=n[0],a=n[4],o=n[8],i=n[1],e=n[5],c=n[9],f=n[2],v=n[6],h=n[10],M=u+e+h;return M>0?(r=.5/Math.sqrt(M+1),t[3]=.25/r,t[0]=(v-c)*r,t[1]=(o-f)*r,t[2]=(i-a)*r):u>e&&u>h?(r=2*Math.sqrt(1+u-e-h),t[3]=(v-c)/r,t[0]=.25*r,t[1]=(a+i)/r,t[2]=(o+f)/r):e>h?(r=2*Math.sqrt(1+e-u-h),t[3]=(o-f)/r,t[0]=(a+i)/r,t[1]=.25*r,t[2]=(c+v)/r):(r=2*Math.sqrt(1+h-u-e),t[3]=(i-a)/r,t[0]=(o+f)/r,t[1]=(c+v)/r,t[2]=.25*r),t}function tt(n,t,r){void 0===r&&(r=s());var u=Math.sqrt(v(n,n)*v(t,t)),a=u+v(n,t);return a<1e-8*u?(a=0,Math.abs(n[0])>Math.abs(n[2])?(r[0]=-n[1],r[1]=n[0],r[2]=0):(r[0]=0,r[1]=-n[2],r[2]=n[1])):J(n,t,r),r[3]=a,ct(r)}function rt(n,t){void 0===t&&(t=s());var r=n[3]/2,u=Math.sin(r);return t[0]=u*n[0],t[1]=u*n[1],t[2]=u*n[2],t[3]=Math.cos(r),t}function ut(n,t,r){return void 0===r&&(r=M()),et(n,fn),Vn(fn,t,r),r}function at(n,t,r){void 0===r&&(r=s());var u=n[0],a=n[1],o=n[2],i=n[3],e=t[0],c=t[1],f=t[2],v=t[3];return r[0]=i*e+u*v+a*f-o*c,r[1]=i*c+a*v+o*e-u*f,r[2]=i*f+o*v+u*c-a*e,r[3]=i*v-u*e-a*c-o*f,r}function ot(n,t,r){void 0===r&&(r=M());var u=t[0],a=t[1],o=t[2],i=n[0],e=n[1],c=n[2],f=n[3],v=f*u+e*o-c*a,h=f*a+c*u-i*o,s=f*o+i*a-e*u,l=-i*u-e*a-c*o;return r[0]=v*f+l*-i+h*-c-s*-e,r[1]=h*f+l*-e+s*-i-v*-c,r[2]=s*f+l*-c+v*-e-h*-i,r}function it(n,t){t=qn(t);var r=n[0],u=n[1],a=n[2],o=n[3],i=2*r,e=2*u,c=2*a,f=i*o,v=e*o,h=c*o,M=i*r,s=e*r,l=c*r,d=e*u,q=c*u,X=c*a;return t[0]=1-(d+X),t[1]=s+h,t[2]=l-v,t[4]=s-h,t[5]=1-(M+X),t[6]=q+f,t[8]=l+v,t[9]=q-f,t[10]=1-(M+d),t}function et(n,t){var r=n[0],u=n[1],a=n[2],o=n[3],i=r+r,e=u+u,c=a+a,f=r*i,v=r*e,h=r*c,M=u*e,s=u*c,l=a*c,d=o*i,q=o*e,X=o*c;return t[0]=1-(M+l),t[4]=v-X,t[8]=h+q,t[1]=v+X,t[5]=1-(f+l),t[9]=s-d,t[2]=h-q,t[6]=s+d,t[10]=1-(f+M),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function ct(n,t){void 0===t&&(t=n);var r=L([n[0],n[1],n[2],n[3]]);return t[0]=n[0]/r,t[1]=n[1]/r,t[2]=n[2]/r,t[3]=n[3]/r,t}function ft(n,t){return void 0===t&&(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t}function vt(n,t){return ct(ft(n,t))}function ht(n,t){void 0===t&&(t=s());var r=(n=ct(n,u))[3],a=2*Math.acos(r),o=Math.sqrt(1-r*r);return o<.001?(t[0]=n[0],t[1]=n[1],t[2]=n[2]):(t[0]=n[0]/o,t[1]=n[1]/o,t[2]=n[2]/o),t[3]=a,t}function Mt(n,t,r,u,f,h){h=h||M();var s=p(u,r,a),l=p(f,r,o),d=J(t,l,i),q=v(s,d);if(q<1e-6)return null;var X=p(n,r,e),Y=v(X,d);if(Y<0||Y>q)return null;var Z=J(X,s,c),b=v(t,Z);if(b<0||Y+b>q)return null;var g=v(l,Z)/q;return h[0]=n[0]+g*t[0],h[1]=n[1]+g*t[1],h[2]=n[2]+g*t[2],h}function st(n,t,r,a,o){u[0]=t[0],u[1]=t[1],u[2]=t[2],u[3]=1,zn(n,u,f),a[0]=f[0],a[1]=f[1],a[2]=f[2],u[0]=r[0],u[1]=r[1],u[2]=r[2],jn(n,u,f),_(f),o[0]=f[0],o[1]=f[1],o[2]=f[2]}export{g as addVec3,y as addVec3Scalar,q as addVec4,X as addVec4Scalar,rt as angleAxisToQuaternion,tn as angleVec3,hn as compareMat4,A as compareVec3,Kn as composeMat4,ft as conjugateQuat,en as createMat3,cn as createMat4,h as createVec2,M as createVec3,s as createVec4,J as cross3Vec3,I as cross3Vec4,Ln as decomposeMat4,Un as determinantMat4,V as distVec2,S as distVec3,B as divScalarVec3,G as divScalarVec4,j as divVec3,D as divVec3Scalar,z as divVec4,E as divVec4Scalar,N as dotVec2,v as dotVec3,H as dotVec4,_n as eulerToQuat,dn as frustumMat4,sn as frustumMat4v,m as geometricMeanVec2,Xn as identityMat3,qn as identityMat4,$n as identityQuat,gn as inverseMat4,vt as inverseQuat,Yn as isIdentityMat4,T as lenVec2,Q as lenVec3,L as lenVec4,Wn as lerpMat4,U as lerpVec3,bn as lookAtMat4v,Vn as mat4ToEuler,nt as mat4ToQuat,pn as mulMat3,An as mulMat4,wn as mulMat4v4,at as mulQuats,b as mulVec2Scalar,Z as mulVec3Scalar,k as mulVec4,Y as mulVec4Scalar,l as negateVec3,d as negateVec4,ct as normalizeQuat,nn as normalizeVec2,_ as normalizeVec3,$ as normalizeVec4,ln as orthoMat4c,Mn as perspectiveMat4,ht as quatToAngleAxis,ut as quatToEuler,it as quatToMat4,et as quatToRotationMat4,Mt as rayTriangleIntersect,W as rcpVec3,Zn as rotationMat4v,In as scaleMat4c,Bn as scaleMat4v,En as scalingMat3v,Hn as scalingMat4c,Jn as scalingMat4s,Dn as scalingMat4v,Pn as setMat4Translation,P as sqLenVec2,O as sqLenVec3,K as sqLenVec4,C as subScalarVec4,F as subVec2,p as subVec3,w as subVec4,x as subVec4Scalar,Fn as transformPoint3,mn as transformPoint4,xn as transformPoints3,Cn as transformPositions3,kn as transformPositions4,st as transformRay,jn as transformVec3,zn as transformVec4,On as translateMat4c,Nn as translateMat4v,Rn as translationMat3v,Sn as translationMat4c,Tn as translationMat4s,Qn as translationMat4v,yn as transposeMat4,on as triangleNormal,ot as vec3ApplyQuat,rn as vec3FromMat4Scale,tt as vec3PairToQuat,un as vecToArray};\n//# sourceMappingURL=index.es.map\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fsvg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img src=\"http://xeokit.io/img/kdtree.jpeg\" />\n *\n * # xeokit Boundaries Math Library\n *\n * ---\n *\n * ### *Tools for 2D and 3D boundary analysis, boundary transformation, and collision detection*\n *\n * ---\n *\n * * Axis-aligned boundaries (AABB2 and AABB3)\n * * Object-aligned boundaries (OBB)\n * * Transformable OOBs\n * * Create boundaries from positions\n * * Find center of positions\n * * FrustumProjection-boundary intersection tests\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/boundaries\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as boundaries from \"@xeokit/boundaries\";\n *\n * //..TODO\n * ````\n *\n * @module @xeokit/boundaries\n */\nimport type {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec2, createVec3, lenVec3, mulMat4, subVec3} from \"@xeokit/matrix\";\nimport {MAX_DOUBLE, MIN_DOUBLE, newFloatArray} from \"@xeokit/math\";\nimport {decompressPoint3} from \"@xeokit/compression\";\n\n\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempMat4a = createMat4();\n\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function createAABB3Int16(values?: IntArrayParam): Int16Array {\n    // @ts-ignore\n    return new Int16Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 2D axis-aligned bounding box.\n */\nexport function createAABB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 4);\n}\n\n/**\n * Returns a new, uninitialized 3D oriented bounding box (OBB).\n */\nexport function createOBB3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 32);\n}\n\n/**\n * Returns a new, uninitialized 2D oriented bounding box (OBB).\n */\nexport function createOBB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\n/** Returns a new 3D bounding sphere */\nexport function createSphere3(\n    x: number,\n    y: number,\n    z: number,\n    r: number\n): FloatArrayParam {\n    return newFloatArray([x, y, z, r]);\n}\n\n/**\n * Transforms an createOBB3 by a 4x4 \n */\nexport function transformOBB3(\n    m: FloatArrayParam,\n    p: FloatArrayParam,\n    p2: FloatArrayParam = p\n): FloatArrayParam {\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = m0 * x + m4 * y + m8 * z + m12;\n        p2[i + 1] = m1 * x + m5 * y + m9 * z + m13;\n        p2[i + 2] = m2 * x + m6 * y + m10 * z + m14;\n        p2[i + 3] = m3 * x + m7 * y + m11 * z + m15;\n    }\n\n    return p2;\n}\n\n\n/** Returns true if the first AABB2 contains the second AABB2.\n */\nexport function containsAABB2(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    return aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb1[2] <= aabb2[2];\n}\n\n/** Returns true if the first AABB3 contains the second AABB3.\n */\nexport function containsAABB3(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    const result =\n        aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb2[4] <= aabb1[4] &&\n        aabb1[2] <= aabb2[2] &&\n        aabb2[5] <= aabb1[5];\n    return result;\n}\n\n/**\n * Gets the diagonal size of an createAABB3 given as minima and maxima.\n */\nexport const getAABB3Diag: Function = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n    return (aabb: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n        subVec3(max, min, tempVec3);\n        return Math.abs(lenVec3(tempVec3));\n    };\n})();\n\n/**\n * Get a diagonal boundary size that is symmetrical about the given point.\n */\nexport const getAABB3DiagPoint = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n\n    return (aabb: FloatArrayParam, p: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n\n        const diagVec = subVec3(max, min, tempVec3);\n\n        const xneg = p[0] - aabb[0];\n        const xpos = aabb[3] - p[0];\n        const yneg = p[1] - aabb[1];\n        const ypos = aabb[4] - p[1];\n        const zneg = p[2] - aabb[2];\n        const zpos = aabb[5] - p[2];\n\n        diagVec[0] += xneg > xpos ? xneg : xpos;\n        diagVec[1] += yneg > ypos ? yneg : ypos;\n        diagVec[2] += zneg > zpos ? zneg : zpos;\n\n        return Math.abs(lenVec3(diagVec));\n    };\n})();\n\n/**\n * Gets the area of an AABB.\n */\nexport function getAABB3Area(aabb: FloatArrayParam): number {\n    const width = aabb[3] - aabb[0];\n    const height = aabb[4] - aabb[1];\n    const depth = aabb[5] - aabb[2];\n    return width * height * depth;\n}\n\n/**\n * Gets the center of an AABB.\n */\nexport function getAABB3Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    dest[0] = (aabb[0] + aabb[3]) / 2;\n    dest[1] = (aabb[1] + aabb[4]) / 2;\n    dest[2] = (aabb[2] + aabb[5]) / 2;\n    return dest;\n}\n\n/**\n * Gets the center of a 2D AABB.\n */\nexport function getAABB2Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = createVec2()\n): FloatArrayParam {\n    dest[0] = (aabb[2] + aabb[0]) / 2;\n    dest[1] = (aabb[3] + aabb[1]) / 2;\n    return dest;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3(aabb: FloatArrayParam = createAABB3()): FloatArrayParam {\n    aabb[0] = MAX_DOUBLE;\n    aabb[1] = MAX_DOUBLE;\n    aabb[2] = MAX_DOUBLE;\n    aabb[3] = MIN_DOUBLE;\n    aabb[4] = MIN_DOUBLE;\n    aabb[5] = MIN_DOUBLE;\n    return aabb;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3Int16(aabb: IntArrayParam = createAABB3Int16()): IntArrayParam {\n    aabb[0] = 65535;\n    aabb[1] = 65535;\n    aabb[2] = 65535;\n    aabb[3] = -65535;\n    aabb[4] = -65535;\n    aabb[5] = -65535;\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n *\n * @private\n */\nexport function AABB3ToOBB3(aabb: FloatArrayParam = createAABB3(), obb = createOBB3()): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Expands the first axis-aligned 3D boundary to enclose the second, if required.\n */\nexport function expandAABB3(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[2] > aabb2[2]) {\n        aabb1[2] = aabb2[2];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    if (aabb1[5] < aabb2[5]) {\n        aabb1[5] = aabb2[5];\n    }\n    return aabb1;\n}\n\n/**\n * Expands the first axis-aligned 2D boundary to enclose the second, if required.\n */\nexport function expandAABB2(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    return aabb1;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given point, if needed.\n */\nexport function expandAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[2] > p[2]) {\n        aabb[2] = p[2];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    if (aabb[5] < p[2]) {\n        aabb[5] = p[2];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 2D boundary to enclose the given point, if needed.\n */\nexport function expandAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given points, if needed.\n */\nexport function expandAABB3Points3(aabb: FloatArrayParam, positions: FloatArrayParam): FloatArrayParam {\n    var x;\n    var y;\n    var z;\n    for (var i = 0, len = positions.length; i < len; i += 3) {\n        x = positions[i];\n        y = positions[i + 1];\n        z = positions[i + 2];\n        if (aabb[0] > x) {\n            aabb[0] = x;\n        }\n        if (aabb[1] > y) {\n            aabb[1] = y;\n        }\n        if (aabb[2] > z) {\n            aabb[2] = z;\n        }\n        if (aabb[3] < x) {\n            aabb[3] = x;\n        }\n        if (aabb[4] < y) {\n            aabb[4] = y;\n        }\n        if (aabb[5] < z) {\n            aabb[5] = z;\n        }\n    }\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n */\nexport function ABB3ToOBB3(\n    aabb: FloatArrayParam,\n    obb: FloatArrayParam = createOBB3()\n): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport const positions3ToAABB3 = (() => {\n    const p = newFloatArray(3);\n\n    return (\n        positions: FloatArrayParam,\n        aabb: FloatArrayParam,\n        positionsDecompressMatrix: FloatArrayParam\n    ): FloatArrayParam => {\n        aabb = aabb || createAABB3();\n\n        let xmin = MAX_DOUBLE;\n        let ymin = MAX_DOUBLE;\n        let zmin = MAX_DOUBLE;\n        let xmax = MIN_DOUBLE;\n        let ymax = MIN_DOUBLE;\n        let zmax = MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = positions.length; i < len; i += 3) {\n            if (positionsDecompressMatrix) {\n                p[0] = positions[i + 0];\n                p[1] = positions[i + 1];\n                p[2] = positions[i + 2];\n\n                decompressPoint3(p, positionsDecompressMatrix, p);\n\n                x = p[0];\n                y = p[1];\n                z = p[2];\n            } else {\n                x = positions[i + 0];\n                y = positions[i + 1];\n                z = positions[i + 2];\n            }\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    };\n})();\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport function OBB3ToAABB3(\n    obb: FloatArrayParam,\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = obb.length; i < len; i += 4) {\n        x = obb[i + 0];\n        y = obb[i + 1];\n        z = obb[i + 2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.\n */\nexport function points3ToAABB3(\n    points: number[][],\n    aabb: FloatArrayParam = createAABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = points.length; i < len; i++) {\n        x = points[i][0];\n        y = points[i][1];\n        z = points[i][2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Gets the 3D center of the given flat array of 3D positions.\n */\nexport function getPositions3Center(\n    positions: FloatArrayParam,\n    center: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    let xCenter = 0;\n    let yCenter = 0;\n    let zCenter = 0;\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        xCenter += positions[i + 0];\n        yCenter += positions[i + 1];\n        zCenter += positions[i + 2];\n    }\n    const numPositions = positions.length / 3;\n    center[0] = xCenter / numPositions;\n    center[1] = yCenter / numPositions;\n    center[2] = zCenter / numPositions;\n    return center;\n}\n\n\n/**\n * A plane within a {@link Frustum3}.\n */\nexport class FrustumPlane3 {\n\n    public testVertex: FloatArrayParam;\n    public offset: number;\n    public normal: FloatArrayParam;\n\n    /**\n     * Creates a new frustum plane.\n     */\n    constructor() {\n        this.normal = createVec3();\n        this.offset = 0;\n        this.testVertex = createVec3();\n    }\n\n    /**\n     * Sets the position and direction of the frustum plane.\n     * @param nx\n     * @param ny\n     * @param nz\n     * @param offset\n     */\n    set(nx: number, ny: number, nz: number, offset: number) {\n        const s = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n        this.normal[0] = nx * s;\n        this.normal[1] = ny * s;\n        this.normal[2] = nz * s;\n        this.offset = offset * s;\n        this.testVertex[0] = (this.normal[0] >= 0.0) ? 1 : 0;\n        this.testVertex[1] = (this.normal[1] >= 0.0) ? 1 : 0;\n        this.testVertex[2] = (this.normal[2] >= 0.0) ? 1 : 0;\n    }\n}\n\n/**\n * Intersection state in which first boundary is completely inside the second.\n */\nexport const INSIDE: number = 1;\n\n/**\n * Intersection state in which two boundaries partially intersect.\n */\nexport const INTERSECT: number = 2;\n\n/**\n * Intersection state in which two boundaries do not intersect.\n */\nexport const OUTSIDE: number = 3;\n\n/**\n * A 3D frustum defined as six planes.\n */\nexport class Frustum3 {\n\n    /**\n     * The six planes that comprise the frustum boundary.\n     */\n    public planes: FrustumPlane3[];\n\n    /**\n     * Creates a new FrustumProjection\n     */\n    constructor() {\n        this.planes = [\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3(),\n            new FrustumPlane3(), new FrustumPlane3(), new FrustumPlane3()\n        ];\n    }\n}\n\n/**\n * Sets the extents of a frustum to the World-space volume defined by view and projection matrices.\n * Creates the frustum first if not given.\n */\nexport function setFrustum3(viewMat: FloatArrayParam, projMat: FloatArrayParam, frustum?: Frustum3) {\n    const m = mulMat4(projMat, viewMat, tempMat4a);\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    frustum = frustum || new Frustum3();\n    frustum.planes[0].set(m3 - m0, m7 - m4, m11 - m8, m15 - m12);\n    frustum.planes[1].set(m3 + m0, m7 + m4, m11 + m8, m15 + m12);\n    frustum.planes[2].set(m3 - m1, m7 - m5, m11 - m9, m15 - m13);\n    frustum.planes[3].set(m3 + m1, m7 + m5, m11 + m9, m15 + m13);\n    frustum.planes[4].set(m3 - m2, m7 - m6, m11 - m10, m15 - m14);\n    frustum.planes[5].set(m3 + m2, m7 + m6, m11 + m10, m15 + m14);\n    return frustum;\n}\n\n/**\n * Tests for intersection between a frustum and an axis-aligned 3D boundary.\n * @param frustum\n * @param aabb\n */\nexport function intersectFrustum3AABB3(frustum: Frustum3, aabb: FloatArrayParam): number {\n    let ret = INSIDE;\n    const min = tempVec3a;\n    const max = tempVec3b;\n    min[0] = aabb[0];\n    min[1] = aabb[1];\n    min[2] = aabb[2];\n    max[0] = aabb[3];\n    max[1] = aabb[4];\n    max[2] = aabb[5];\n    const bminmax = [min, max];\n    for (let i = 0; i < 6; ++i) {\n        const plane = frustum.planes[i];\n        if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            return OUTSIDE;\n        }\n        if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            ret = INTERSECT;\n        }\n    }\n    return ret;\n}\n\n/**\n * Tests for intersection between two axis-aligned 3D boundaries.\n * @param aabb1\n * @param aabb2\n */\nexport function intersectAABB3s(aabb1: FloatArrayParam, aabb2: FloatArrayParam): number {\n\n    return INTERSECT;\n    // let ret = INSIDE;\n    // const min = tempVec3a;\n    // const max = tempVec3b;\n    // min[0] = aabb[0];\n    // min[1] = aabb[1];\n    // min[2] = aabb[2];\n    // max[0] = aabb[3];\n    // max[1] = aabb[4];\n    // max[2] = aabb[5];\n    // const bminmax = [min, max];\n    // for (let i = 0; i < 6; ++i) {\n    //     const plane = frustum.planes[i];\n    //     if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         return OUTSIDE;\n    //     }\n    //     if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n    //         (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n    //         (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n    //         (plane.offset)) < 0.0) {\n    //         ret = INTERSECT;\n    //     }\n    // }\n    // return ret;\n}\n\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Triangles3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given triangle primitive.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param a\n * @param b\n * @param c\n */\nexport function intersectFrustum3Triangle3(frustum: Frustum3, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n * @param indices\n */\nexport function intersectFrustum3Lines3(frustum: Frustum3, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given {@link @xeokit/constants!PointsPrimitive | PointsPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param positions\n */\nexport function intersectFrustum3Positions3(frustum: Frustum3, positions: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given {@link @math/boundaries!Frustum3 | Frustum3} intersects the given position.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param frustum\n * @param position\n */\nexport function intersectFrustum3Point3(frustum: Frustum3, position: FloatArrayParam): boolean {\n    return true;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!TrianglesPrimitive | TrianglesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Triangles3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam): boolean {\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        // if (aabbIntersectsTriangle(positions, indices[i], indices[i + 1], indices[i + 2], aabb)) {\n        //     return true;\n        // }\n    }\n    return false;\n}\n\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!LinesPrimitive | LinesPrimitive} geometry.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n * @param indices\n */\nexport function intersectAABB3Lines3(aabb: FloatArrayParam, positions: FloatArrayParam, indices: IntArrayParam) {\n    return false;\n}\n\n/**\n * Tests if the given AABB intersects the given {@link @xeokit/constants!PointsPrimitive | PointsPrimitive} vertex positions.\n *\n * Returns ```` true```` if intersection else ````false````.\n *\n * @param aabb\n * @param positions\n */\nexport function intersectAABB3Positions3(aabb: FloatArrayParam, positions: FloatArrayParam) {\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xmax = aabb[3];\n    const ymax = aabb[4];\n    const zmax = aabb[5];\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        const x = positions[i];\n        if (xmin <= x && x <= xmax) {\n            const y = positions[i + 1];\n            if (ymin <= y && y <= ymax) {\n                const z = positions[i + 2];\n                if (zmin <= z && z <= zmax) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Tets if the given 3D AABB contains the given 3D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4] &&\n        aabb[2] <= p[2] && p[2] <= aabb[5]);\n}\n\n/**\n * Tets if the given 2D AABB contains the given 2D position.\n * @param aabb\n * @param p\n */\nexport function containsAABB2Point2(aabb: FloatArrayParam, p: FloatArrayParam) {\n    return (\n        aabb[0] <= p[0] && p[0] <= aabb[3] &&\n        aabb[1] <= p[1] && p[1] <= aabb[4]);\n}","import {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {containsAABB2} from \"@xeokit/boundaries\";\n\nconst MAX_KD_TREE_DEPTH = 10; // Increase if greater precision needed\nconst kdTreeDimLength = new Float32Array(2);\n\n/**\n * An item stored in a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdItem2D {\n\n    /**\n     * The item stored in this KdItem2D.\n     */\n    item: any;\n}\n\n/**\n * A 2D k-d tree node.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdNode2D {\n\n    /**\n     * The axis-aligned 2D boundary of this kd-tree node.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * The left KD2Node.\n     */\n    left?: KdNode2D;\n\n    /**\n     * The right KD2Node.\n     */\n    right?: KdNode2D;\n\n    /**\n     * The {@link KdItem2D | KdItem2Ds} stored in this KD2Node.\n     */\n    items?: KdItem2D[];\n}\n\n/**\n * Parameters for creating a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdTree2DParams {\n\n    /**\n     * The 2D boundary of all the nodes we'll add to this k-d tree.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * Maximum depth of the 2D kd-tree.\n     */\n    maxDepth?: number;\n}\n\n/**\n * A static 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport class KdTree2 {\n\n    /**\n     * The root node in this k-d tree.\n     */\n    readonly root: KdNode2D;\n\n    /**\n     * The maximum allowed depth of this 2D k-d tree.\n     */\n    readonly maxDepth: number;\n\n    /**\n     * Creates a new 2D k-d tree.\n     *\n     * @param params\n     */\n    constructor(params?: KdTree2DParams) {\n        this.maxDepth = params?.maxDepth || MAX_KD_TREE_DEPTH;\n        this.root = {\n            aabb: params.aabb.slice()\n        };\n    }\n\n    /**\n     * Inserts a bounded item into this 2D k-d tree.\n     *\n     * @param item\n     * @param aabb\n     */\n    insertItem(item: any, aabb: IntArrayParam) {\n        this.#insertItem(this.root, <KdItem2D>{item}, aabb, 1)\n    }\n\n    #insertItem(node: KdNode2D, item: KdItem2D, aabb: IntArrayParam, depth: number) {\n        if (depth >= this.maxDepth) {\n            node.items = node.items || [];\n            node.items.push(item);\n            return;\n        }\n        if (node.left) {\n            if (containsAABB2(node.left.aabb, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (node.right) {\n            if (containsAABB2(node.right.aabb, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        const nodeAABB = node.aabb;\n        kdTreeDimLength[0] = nodeAABB[2] - nodeAABB[0];\n        kdTreeDimLength[1] = nodeAABB[3] - nodeAABB[1];\n        let dim = 0;\n        if (kdTreeDimLength[1] > kdTreeDimLength[dim]) {\n            dim = 1;\n        }\n        if (!node.left) {\n            const aabbLeft = nodeAABB.slice();\n            aabbLeft[dim + 2] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.left = {\n                aabb: aabbLeft\n            };\n            if (containsAABB2(aabbLeft, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (!node.right) {\n            const aabbRight = nodeAABB.slice();\n            aabbRight[dim] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.right = {\n                aabb: aabbRight\n            };\n            if (containsAABB2(aabbRight, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        node.items = node.items || [];\n        node.items.push(item);\n    }\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatcherWrapper = void 0;\r\n/**\r\n * Hides the implementation of the event dispatcher. Will expose methods that\r\n * are relevent to the event.\r\n *\r\n * @export\r\n * @class DispatcherWrapper\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherWrapper {\r\n    /**\r\n     * Creates an instance of DispatcherWrapper.\r\n     * @param {ISubscribable<TEventHandler>} dispatcher\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    constructor(dispatcher) {\r\n        this._subscribe = (fn) => dispatcher.subscribe(fn);\r\n        this._unsubscribe = (fn) => dispatcher.unsubscribe(fn);\r\n        this._one = (fn) => dispatcher.one(fn);\r\n        this._has = (fn) => dispatcher.has(fn);\r\n        this._clear = () => dispatcher.clear();\r\n        this._count = () => dispatcher.count;\r\n        this._onSubscriptionChange = () => dispatcher.onSubscriptionChange;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get onSubscriptionChange() {\r\n        return this._onSubscriptionChange();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get count() {\r\n        return this._count();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    subscribe(fn) {\r\n        return this._subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsubscribe(fn) {\r\n        this._unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    one(fn) {\r\n        return this._one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    has(fn) {\r\n        return this._has(fn);\r\n    }\r\n    /**\r\n     * Clears all the subscriptions.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    clear() {\r\n        this._clear();\r\n    }\r\n}\r\nexports.DispatcherWrapper = DispatcherWrapper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Subscription = void 0;\r\n/**\r\n * Stores a handler. Manages execution meta data.\r\n * @class Subscription\r\n * @template TEventHandler\r\n */\r\nclass Subscription {\r\n    /**\r\n     * Creates an instance of Subscription.\r\n     *\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n            }\r\n            else {\r\n                fn.apply(scope, args);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Subscription = Subscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventManagement = void 0;\r\n/**\r\n * Allows the user to interact with the event.\r\n *\r\n * @export\r\n * @class EventManagement\r\n * @implements {IEventManagement}\r\n */\r\nclass EventManagement {\r\n    /**\r\n     * Creates an instance of EventManagement.\r\n     * @param {() => void} unsub An unsubscribe handler.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    constructor(unsub) {\r\n        this.unsub = unsub;\r\n        this.propagationStopped = false;\r\n    }\r\n    /**\r\n     * Stops the propagation of the event.\r\n     * Cannot be used when async dispatch is done.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    stopPropagation() {\r\n        this.propagationStopped = true;\r\n    }\r\n}\r\nexports.EventManagement = EventManagement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.DispatcherBase = void 0;\r\nconst DispatcherWrapper_1 = require(\"./DispatcherWrapper\");\r\nconst Subscription_1 = require(\"../events/Subscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\n/**\r\n * Base class for implementation of the dispatcher. It facilitates the subscribe\r\n * and unsubscribe methods based on generic handlers. The TEventType specifies\r\n * the type of event that should be exposed. Use the asEvent to expose the\r\n * dispatcher as event.\r\n *\r\n * @export\r\n * @abstract\r\n * @class DispatcherBase\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherBase {\r\n    constructor() {\r\n        /**\r\n         * The subscriptions.\r\n         *\r\n         * @protected\r\n         *\r\n         * @memberOf DispatcherBase\r\n         */\r\n        this._subscriptions = new Array();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get count() {\r\n        return this._subscriptions.length;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get onSubscriptionChange() {\r\n        if (this._onSubscriptionChange == null) {\r\n            this._onSubscriptionChange = new SubscriptionChangeEventDispatcher();\r\n        }\r\n        return this._onSubscriptionChange.asEvent();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    subscribe(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, false));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    one(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, true));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    has(fn) {\r\n        if (!fn)\r\n            return false;\r\n        return this._subscriptions.some((sub) => sub.handler == fn);\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsubscribe(fn) {\r\n        if (!fn)\r\n            return;\r\n        let changes = false;\r\n        for (let i = 0; i < this._subscriptions.length; i++) {\r\n            if (this._subscriptions[i].handler == fn) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n                break;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let s = sub;\r\n            s.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n    /**\r\n     * Creates a subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce True if the handler should run only one.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new Subscription_1.Subscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Cleans up subs that ran and should run only once.\r\n     *\r\n     * @protected\r\n     * @param {ISubscription<TEventHandler>} sub The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    cleanup(sub) {\r\n        let changes = false;\r\n        if (sub.isOnce && sub.isExecuted) {\r\n            let i = this._subscriptions.indexOf(sub);\r\n            if (i > -1) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISubscribable<TEventHandler>}\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    asEvent() {\r\n        if (this._wrap == null) {\r\n            this._wrap = new DispatcherWrapper_1.DispatcherWrapper(this);\r\n        }\r\n        return this._wrap;\r\n    }\r\n    /**\r\n     * Clears the subscriptions.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    clear() {\r\n        if (this._subscriptions.length != 0) {\r\n            this._subscriptions.splice(0, this._subscriptions.length);\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers the subscription change event.\r\n     *\r\n     * @private\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    triggerSubscriptionChange() {\r\n        if (this._onSubscriptionChange != null) {\r\n            this._onSubscriptionChange.dispatch(this.count);\r\n        }\r\n    }\r\n}\r\nexports.DispatcherBase = DispatcherBase;\r\n/**\r\n * Dispatcher for subscription changes.\r\n *\r\n * @export\r\n * @class SubscriptionChangeEventDispatcher\r\n * @extends {DispatcherBase<SubscriptionChangeEventHandler>}\r\n */\r\nclass SubscriptionChangeEventDispatcher extends DispatcherBase {\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {number} count The currrent number of subscriptions.\r\n     *\r\n     * @memberOf SubscriptionChangeEventDispatcher\r\n     */\r\n    dispatch(count) {\r\n        this._dispatch(false, this, arguments);\r\n    }\r\n}\r\nexports.SubscriptionChangeEventDispatcher = SubscriptionChangeEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatchError = void 0;\r\n/**\r\n * Indicates an error with dispatching.\r\n *\r\n * @export\r\n * @class DispatchError\r\n * @extends {Error}\r\n */\r\nclass DispatchError extends Error {\r\n    /**\r\n     * Creates an instance of DispatchError.\r\n     * @param {string} message The message.\r\n     *\r\n     * @memberOf DispatchError\r\n     */\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n}\r\nexports.DispatchError = DispatchError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventListBase = void 0;\r\n/**\r\n * Base class for event lists classes. Implements the get and remove.\r\n *\r\n * @export\r\n * @abstract\r\n * @class EventListBaset\r\n * @template TEventDispatcher The type of event dispatcher.\r\n */\r\nclass EventListBase {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name The name of the event.\r\n     * @returns {TEventDispatcher} The disptacher.\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    get(name) {\r\n        let event = this._events[name];\r\n        if (event) {\r\n            return event;\r\n        }\r\n        event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n}\r\nexports.EventListBase = EventListBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HandlingBase = void 0;\r\n/**\r\n * Base class that implements event handling. With a an\r\n * event list this base class will expose events that can be\r\n * subscribed to. This will give your class generic events.\r\n *\r\n * @export\r\n * @abstract\r\n * @class HandlingBase\r\n * @template TEventHandler The type of event handler.\r\n * @template TDispatcher The type of dispatcher.\r\n * @template TList The type of event list.\r\n */\r\nclass HandlingBase {\r\n    /**\r\n     * Creates an instance of HandlingBase.\r\n     * @param {TList} events The event list. Used for event management.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    constructor(events) {\r\n        this.events = events;\r\n    }\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    one(name, fn) {\r\n        this.events.get(name).one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    has(name, fn) {\r\n        return this.events.get(name).has(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    subscribe(name, fn) {\r\n        this.events.get(name).subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    sub(name, fn) {\r\n        this.subscribe(name, fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsubscribe(name, fn) {\r\n        this.events.get(name).unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsub(name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    }\r\n}\r\nexports.HandlingBase = HandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSubscription = void 0;\r\n/**\r\n * Subscription implementation for events with promises.\r\n *\r\n * @export\r\n * @class PromiseSubscription\r\n * @implements {ISubscription<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseSubscription {\r\n    /**\r\n     * Creates an instance of PromiseSubscription.\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         *\r\n         * @memberOf PromiseSubscription\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    async execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            //TODO: do we need to cast to any -- seems yuck\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n                return;\r\n            }\r\n            let result = fn.apply(scope, args);\r\n            await result;\r\n        }\r\n    }\r\n}\r\nexports.PromiseSubscription = PromiseSubscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseDispatcherBase = void 0;\r\nconst PromiseSubscription_1 = require(\"../events/PromiseSubscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\nconst DispatcherBase_1 = require(\"./DispatcherBase\");\r\nconst DispatchError_1 = require(\"./DispatchError\");\r\n/**\r\n * Dispatcher base for dispatchers that use promises. Each promise\r\n * is awaited before the next is dispatched, unless the event is\r\n * dispatched with the executeAsync flag.\r\n *\r\n * @export\r\n * @abstract\r\n * @class PromiseDispatcherBase\r\n * @extends {DispatcherBase<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseDispatcherBase extends DispatcherBase_1.DispatcherBase {\r\n    /**\r\n     * The normal dispatch cannot be used in this class.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        throw new DispatchError_1.DispatchError(\"_dispatch not supported. Use _dispatchAsPromise.\");\r\n    }\r\n    /**\r\n     * Crates a new subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce Indicates if the handler should only run once.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf PromiseDispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new PromiseSubscription_1.PromiseSubscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    async _dispatchAsPromise(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let ps = sub;\r\n            await ps.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n}\r\nexports.PromiseDispatcherBase = PromiseDispatcherBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nconst DispatcherBase_1 = require(\"./dispatching/DispatcherBase\");\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return DispatcherBase_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"SubscriptionChangeEventDispatcher\", { enumerable: true, get: function () { return DispatcherBase_1.SubscriptionChangeEventDispatcher; } });\r\nconst DispatchError_1 = require(\"./dispatching/DispatchError\");\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return DispatchError_1.DispatchError; } });\r\nconst DispatcherWrapper_1 = require(\"./dispatching/DispatcherWrapper\");\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return DispatcherWrapper_1.DispatcherWrapper; } });\r\nconst EventListBase_1 = require(\"./dispatching/EventListBase\");\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return EventListBase_1.EventListBase; } });\r\nconst EventManagement_1 = require(\"./management/EventManagement\");\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return EventManagement_1.EventManagement; } });\r\nconst HandlingBase_1 = require(\"./handling/HandlingBase\");\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return HandlingBase_1.HandlingBase; } });\r\nconst PromiseDispatcherBase_1 = require(\"./dispatching/PromiseDispatcherBase\");\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return PromiseDispatcherBase_1.PromiseDispatcherBase; } });\r\nconst PromiseSubscription_1 = require(\"./events/PromiseSubscription\");\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return PromiseSubscription_1.PromiseSubscription; } });\r\nconst Subscription_1 = require(\"./events/Subscription\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return Subscription_1.Subscription; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class EventDispatcher\r\n * @extends {DispatcherBase<IEventHandler<TSender, TArgs>>}\r\n * @implements {IEvent<TSender, TArgs>}\r\n * @template TSender The sender type.\r\n * @template TArgs The event arguments type.\r\n */\r\nclass EventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of EventDispatcher.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     * @returns {IPropagationStatus} The propagation status to interact with the event\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatch(sender, args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event in an async way. Does not support event interaction.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {IEvent<TSender, TArgs>} The event.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.EventDispatcher = EventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass EventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.EventList = EventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventList_1 = require(\"./EventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass EventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new EventList_1.EventList());\r\n    }\r\n}\r\nexports.EventHandlingBase = EventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformEventList = NonUniformEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return EventDispatcher_1.EventDispatcher; } });\r\nconst EventHandlingBase_1 = require(\"./EventHandlingBase\");\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return EventHandlingBase_1.EventHandlingBase; } });\r\nconst EventList_1 = require(\"./EventList\");\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return EventList_1.EventList; } });\r\nconst NonUniformEventList_1 = require(\"./NonUniformEventList\");\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return NonUniformEventList_1.NonUniformEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class SimpleEventDispatcher\r\n * @extends {DispatcherBase<ISimpleEventHandler<TArgs>>}\r\n * @implements {ISimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass SimpleEventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of SimpleEventDispatcher.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatch(args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISimpleEvent<TArgs>} The event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass SimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.SimpleEventList = SimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass SimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new SimpleEventList_1.SimpleEventList());\r\n    }\r\n}\r\nexports.SimpleEventHandlingBase = SimpleEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformSimpleEventList = NonUniformSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return SimpleEventDispatcher_1.SimpleEventDispatcher; } });\r\nconst SimpleEventHandlingBase_1 = require(\"./SimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return SimpleEventHandlingBase_1.SimpleEventHandlingBase; } });\r\nconst NonUniformSimpleEventList_1 = require(\"./NonUniformSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return NonUniformSimpleEventList_1.NonUniformSimpleEventList; } });\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return SimpleEventList_1.SimpleEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n *\r\n * @export\r\n * @class SignalDispatcher\r\n * @extends {DispatcherBase<ISignalHandler>}\r\n * @implements {ISignal}\r\n */\r\nclass SignalDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatch() {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal without waiting for the result.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISignal} The signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SignalDispatcher = SignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n *\r\n * @export\r\n * @class SignalList\r\n * @extends {EventListBase<SignalDispatcher>}\r\n */\r\nclass SignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates an instance of SignalList.\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     *\r\n     * @protected\r\n     * @returns {SignalDispatcher}\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    createDispatcher() {\r\n        return new SignalDispatcher_1.SignalDispatcher();\r\n    }\r\n}\r\nexports.SignalList = SignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalList_1 = require(\"./SignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n *\r\n * @export\r\n * @abstract\r\n * @class SignalHandlingBase\r\n * @extends {HandlingBase<ISignalHandler, SignalDispatcher, SignalList>}\r\n * @implements {ISignalHandling}\r\n */\r\nclass SignalHandlingBase extends ste_core_1.HandlingBase {\r\n    /**\r\n     * Creates an instance of SignalHandlingBase.\r\n     *\r\n     * @memberOf SignalHandlingBase\r\n     */\r\n    constructor() {\r\n        super(new SignalList_1.SignalList());\r\n    }\r\n}\r\nexports.SignalHandlingBase = SignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = void 0;\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return SignalDispatcher_1.SignalDispatcher; } });\r\nconst SignalHandlingBase_1 = require(\"./SignalHandlingBase\");\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return SignalHandlingBase_1.SignalHandlingBase; } });\r\nconst SignalList_1 = require(\"./SignalList\");\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return SignalList_1.SignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class PromiseEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseEventHandler<TSender, TArgs>>}\r\n * @implements {IPromiseEvent<TSender, TArgs>}\r\n * @template TSender\r\n * @template TArgs\r\n */\r\nclass PromiseEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new EventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     * @returns {Promise<IPropagationStatus>} The status.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    async dispatch(sender, args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseEventDispatcher = PromiseEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseEventList = PromiseEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseEventList_1.PromiseEventList());\r\n    }\r\n}\r\nexports.PromiseEventHandlingBase = PromiseEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseEventList = NonUniformPromiseEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return PromiseEventDispatcher_1.PromiseEventDispatcher; } });\r\nconst PromiseEventHandlingBase_1 = require(\"./PromiseEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return PromiseEventHandlingBase_1.PromiseEventHandlingBase; } });\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return PromiseEventList_1.PromiseEventList; } });\r\nconst NonUniformPromiseEventList_1 = require(\"./NonUniformPromiseEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return NonUniformPromiseEventList_1.NonUniformPromiseEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n */\r\nclass PromiseSignalDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SignalDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    async dispatch() {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal threaded.\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSignalDispatcher = PromiseSignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SignalList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSignalDispatcher_1.PromiseSignalDispatcher();\r\n    }\r\n}\r\nexports.PromiseSignalList = PromiseSignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSignalHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSignalList_1.PromiseSignalList());\r\n    }\r\n}\r\nexports.PromiseSignalHandlingBase = PromiseSignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = void 0;\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return PromiseSignalDispatcher_1.PromiseSignalDispatcher; } });\r\nconst PromiseSignalHandlingBase_1 = require(\"./PromiseSignalHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return PromiseSignalHandlingBase_1.PromiseSignalHandlingBase; } });\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return PromiseSignalList_1.PromiseSignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class PromiseSimpleEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseSimpleEventHandler<TArgs>>}\r\n * @implements {IPromiseSimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass PromiseSimpleEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SimpleEventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    async dispatch(args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for it to complete.\r\n     * @param args The argument object.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSimpleEventDispatcher = PromiseSimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = void 0;\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseSimpleEventList = NonUniformPromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseSimpleEventList = PromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSimpleEventList_1.PromiseSimpleEventList());\r\n    }\r\n}\r\nexports.PromiseSimpleEventHandlingBase = PromiseSimpleEventHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = void 0;\r\nconst NonUniformPromiseSimpleEventList_1 = require(\"./NonUniformPromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return NonUniformPromiseSimpleEventList_1.NonUniformPromiseSimpleEventList; } });\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher; } });\r\nconst PromiseSimpleEventHandlingBase_1 = require(\"./PromiseSimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return PromiseSimpleEventHandlingBase_1.PromiseSimpleEventHandlingBase; } });\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return PromiseSimpleEventList_1.PromiseSimpleEventList; } });\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = exports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = exports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = exports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = exports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = exports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return ste_core_1.Subscription; } });\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return ste_core_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return ste_core_1.DispatcherWrapper; } });\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return ste_core_1.EventListBase; } });\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return ste_core_1.EventManagement; } });\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return ste_core_1.DispatchError; } });\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return ste_core_1.PromiseSubscription; } });\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return ste_core_1.PromiseDispatcherBase; } });\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return ste_core_1.HandlingBase; } });\r\nvar ste_events_1 = require(\"ste-events\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return ste_events_1.EventDispatcher; } });\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return ste_events_1.EventHandlingBase; } });\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return ste_events_1.EventList; } });\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return ste_events_1.NonUniformEventList; } });\r\nvar ste_simple_events_1 = require(\"ste-simple-events\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.NonUniformSimpleEventList; } });\r\nvar ste_signals_1 = require(\"ste-signals\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return ste_signals_1.SignalDispatcher; } });\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return ste_signals_1.SignalHandlingBase; } });\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return ste_signals_1.SignalList; } });\r\nvar ste_promise_events_1 = require(\"ste-promise-events\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.NonUniformPromiseEventList; } });\r\nvar ste_promise_signals_1 = require(\"ste-promise-signals\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalList; } });\r\nvar ste_promise_simple_events_1 = require(\"ste-promise-simple-events\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.NonUniformPromiseSimpleEventList; } });\r\n","var e=1e3,r=1001,a=1002,o=1003,p=1004,t=1004,v=1005,x=1005,b=1006,c=1007,d=1007,f=1008,g=1008,h=1009,i=1010,j=1011,k=1012,l=1013,m=1014,n=1015,q=1016,s=1017,u=1018,w=1020,y=1021,z=1022,A=1023,B=1024,C=1025,D=1026,E=1027,F=1028,G=1029,H=1030,I=1031,J=1033,K=33776,L=33777,M=33778,N=33779,O=35840,P=35841,Q=35842,R=35843,S=36196,T=37492,U=37496,V=37808,W=37809,X=37810,Y=37811,Z=37812,$=37813,_=37814,ee=37815,re=37816,ae=37817,oe=37818,pe=37819,te=37820,ve=37821,xe=36492,be=3e3,ce=3001,de=1e4,fe=10001,ge=10002,he=2e4,ie=20001,je=20002,ke=20003,le=20004,me=3e4,ne=300001,qe=4e5,se=400001,ue=400002,we=400003,ye=400004,ze=400005,Ae=5e5,Be=500001,Ce=500002,De=500003;export{y as AlphaFormat,i as ByteType,se as CentimetersUnit,r as ClampToEdgeWrapping,De as CustomProjectionType,D as DepthFormat,E as DepthStencilFormat,ne as FastRender,ye as FeetUnit,n as FloatType,Ce as FrustumProjectionType,de as GIFMediaType,q as HalfFloatType,ze as InchesUnit,l as IntType,fe as JPEGMediaType,be as LinearEncoding,b as LinearFilter,g as LinearMipMapLinearFilter,d as LinearMipMapNearestFilter,f as LinearMipmapLinearFilter,c as LinearMipmapNearestFilter,ie as LinesPrimitive,C as LuminanceAlphaFormat,B as LuminanceFormat,qe as MetersUnit,ue as MillimetersUnit,a as MirroredRepeatWrapping,o as NearestFilter,x as NearestMipMapLinearFilter,p as NearestMipMapNearestFilter,v as NearestMipmapLinearFilter,t as NearestMipmapNearestFilter,Be as OrthoProjectionType,ge as PNGMediaType,Ae as PerspectiveProjectionType,he as PointsPrimitive,me as QualityRender,A as RGBAFormat,J as RGBAIntegerFormat,pe as RGBA_ASTC_10x10_Format,re as RGBA_ASTC_10x5_Format,ae as RGBA_ASTC_10x6_Format,oe as RGBA_ASTC_10x8_Format,te as RGBA_ASTC_12x10_Format,ve as RGBA_ASTC_12x12_Format,V as RGBA_ASTC_4x4_Format,W as RGBA_ASTC_5x4_Format,X as RGBA_ASTC_5x5_Format,Y as RGBA_ASTC_6x5_Format,Z as RGBA_ASTC_6x6_Format,$ as RGBA_ASTC_8x5_Format,_ as RGBA_ASTC_8x6_Format,ee as RGBA_ASTC_8x8_Format,xe as RGBA_BPTC_Format,U as RGBA_ETC2_EAC_Format,R as RGBA_PVRTC_2BPPV1_Format,Q as RGBA_PVRTC_4BPPV1_Format,L as RGBA_S3TC_DXT1_Format,M as RGBA_S3TC_DXT3_Format,N as RGBA_S3TC_DXT5_Format,z as RGBFormat,S as RGB_ETC1_Format,T as RGB_ETC2_Format,P as RGB_PVRTC_2BPPV1_Format,O as RGB_PVRTC_4BPPV1_Format,K as RGB_S3TC_DXT1_Format,H as RGFormat,I as RGIntegerFormat,F as RedFormat,G as RedIntegerFormat,e as RepeatWrapping,j as ShortType,ke as SolidPrimitive,le as SurfacePrimitive,je as TrianglesPrimitive,h as UnsignedByteType,w as UnsignedInt248Type,m as UnsignedIntType,s as UnsignedShort4444Type,u as UnsignedShort5551Type,k as UnsignedShortType,we as YardsUnit,ce as sRGBEncoding};\n//# sourceMappingURL=index.es.map\n","import type {SceneObject} from \"./SceneObject\";\nimport type {Mesh} from \"./Mesh\";\nimport {decompressPositions3} from \"@xeokit/compression\";\nimport {transformPositions3} from \"@xeokit/matrix\";\nimport type {FloatArrayParam} from \"@xeokit/math\";\nimport type {Geometry} from \"./Geometry\";\nimport type {GeometryBucket} from \"./GeometryBucket\";\nimport {LinesPrimitive, TrianglesPrimitive} from \"@xeokit/constants\";\n\n/**\n * The {@link getSceneObjectGeometry} passes an instance of GeometryView to its callback\n * for each {@link GeometryBucket} it visits. The GeometryView provides the SceneObject, Mesh, Geometry and\n * GeometryBucket at the current state of iteration, along with accessors through which the caller can\n * get various resources that the GeometryView lazy-computes on-demand, such as decompressed vertex positions, World-space\n * vertex positons, and decompressed vertex UV coordinates.\n */\nexport interface GeometryView {\n\n    /**\n     * The current {@link SceneObject}.\n     */\n    object: SceneObject;\n\n    /**\n     * The current {@link Mesh}.\n     */\n    mesh: Mesh;\n\n    /**\n     * The current {@link Mesh | Mesh's} position in {@link SceneModel.meshes | SceneObject.meshes}.\n     */\n    meshIndex: number;\n\n    /**\n     * The current {@link Geometry}.\n     */\n    geometry: Geometry;\n\n    /**\n     * The current {@link GeometryBucket}.\n     */\n    geometryBucket: GeometryBucket;\n\n    /**\n     * The current {@link GeometryBucket | GeometryBucket's} position in {@link Geometry.geometryBuckets | Geometry.geometryBuckets }.\n     */\n    geometryBucketIndex: number;\n\n    /**\n     * The total number of {@link GeometryBucket | GeometryBuckets} within the current {@link SceneObject}..\n     */\n    readonly totalGeometryBuckets: number;\n\n    /**\n     * The number of primitives in the current {@link GeometryBucket}.\n     */\n    readonly numPrimitives: number;\n\n    /**\n     * The current 3D vertex positions, dequantized, as 32-bit floats.\n     */\n    readonly positionsDecompressed: FloatArrayParam;\n\n    /**\n     * The current 3D World-space vertex positions, dequantized and world-transformed, as 64-bit floats.\n     */\n    readonly positionsWorld: FloatArrayParam;\n\n    /**\n     * The current vertex UV coordinates, if any, dequantized to 32-bit floats.\n     */\n    readonly uvsDecompressed: FloatArrayParam;\n}\n\nclass GeometryViewImpl {\n\n    object: SceneObject | null;\n    mesh: Mesh | null;\n    meshIndex: number;\n    geometry: Geometry | null;\n    geometryBucket: GeometryBucket | null;\n    geometryBucketIndex: number;\n    #positionsDecompressed: Float32Array | null;\n    #positionsWorld: Float64Array | null;\n\n    constructor() {\n        this.object = null;\n        this.mesh = null;\n        this.meshIndex = 0;\n        this.geometry = null;\n        this.geometryBucket = null;\n        this.geometryBucketIndex = 0;\n        this.#positionsDecompressed = null;\n        this.#positionsWorld = null;\n    }\n\n    get totalGeometryBuckets() {\n        let totalGeometryBuckets = 0;\n        if (this.object) {\n            for (let i = 0, len = this.object.meshes.length; i < len; i++) {\n                totalGeometryBuckets += this.object.meshes[i].geometry.geometryBuckets.length;\n            }\n        }\n        return totalGeometryBuckets;\n    }\n\n    get numPrimitives() {\n        const primitiveType = (<Geometry>this.geometry).primitive;\n        const elementsPerPrimitiveType = (primitiveType === TrianglesPrimitive ? 3 : (primitiveType === LinesPrimitive ? 2 : 1));\n        return (<FloatArrayParam>(<GeometryBucket>this.geometryBucket).indices).length / elementsPerPrimitiveType;\n    }\n\n    get positionsDecompressed(): FloatArrayParam {\n        if (!this.#positionsDecompressed) {\n            this.#positionsDecompressed = new Float32Array((<GeometryBucket>this.geometryBucket).positionsCompressed.length);\n            decompressPositions3((<GeometryBucket>this.geometryBucket).positionsCompressed, (<Geometry>this.geometry).positionsDecompressMatrix, this.#positionsDecompressed);\n        }\n        return this.#positionsDecompressed;\n    }\n\n    get positionsWorld(): FloatArrayParam {\n        if (!this.#positionsWorld) {\n            const positionsDecompressed = this.positionsDecompressed;\n            this.#positionsWorld = new Float64Array(positionsDecompressed.length);\n            transformPositions3(positionsDecompressed, (<Mesh>this.mesh).matrix, this.#positionsWorld);\n        }\n        return this.#positionsWorld;\n    }\n\n    get uvsDecompressed(): FloatArrayParam | null{\n        return null;\n    }\n\n    reset() {\n        this.#positionsDecompressed = null;\n        this.#positionsWorld = null;\n    }\n}\n\nconst geometryView = new GeometryViewImpl();\n\n/**\n * Gets the uncompressed, World-space geometry of each {@link GeometryBucket} in each\n * {@link Geometry} in each {@link Mesh} in a {@link SceneObject}.\n *\n * If the callback returns ````true````, then this method immediately stops iterating and also returns ````true````.\n *\n * @param sceneObject\n * @param withEachGeometry\n */\nexport function getSceneObjectGeometry(sceneObject: SceneObject, withEachGeometry: (geometryView: GeometryView) => boolean): boolean {\n    geometryView.reset();\n    geometryView.object = sceneObject;\n    for (let i = 0, len = sceneObject.meshes.length; i < len; i++) {\n        const mesh = sceneObject.meshes[i];\n        geometryView.mesh = mesh;\n        geometryView.meshIndex = i;\n        const geometry = mesh.geometry;\n        geometryView.geometry = geometry;\n        for (let j = 0, lenj = geometry.geometryBuckets.length; j < lenj; j++) {\n            geometryView.geometryBucket = geometry.geometryBuckets[j];\n            geometryView.geometryBucketIndex = j;\n            if (withEachGeometry(<GeometryView>geometryView)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fcompression.svg)](https://badge.fury.io/js/%40xeokit%2Fcompression)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/compression/badge)](https://www.jsdelivr.com/package/npm/@xeokit/compression)\n * \n * <img style=\"padding:20px\" src=\"media://images/geometry_icon.png\"/>\n *\n * # xeokit Geometry Compression / Decompression Utilities\n *\n * ---\n *\n * ### *Tools for geometry compression and decompression*\n *\n * ---\n *\n * The xeokit Geometry Compression/Decompression Utilities library provides functions used internally within SceneModel.createGeometry implementations to compress geometry. These functions are also provided for users who want to pre-compress their geometry \"offline\" and then use SceneModel.createGeometryCompressed to create compressed geometry directly.\n\n The compression techniques used include simplifying geometry by combining duplicate positions and adjusting indices, generating edge indices for triangle meshes, ignoring normals (as shaders auto-generate them), converting positions to relative-to-center (RTC) coordinates, quantizing positions and UVs as 16-bit unsigned integers, and splitting geometry into buckets to enable indices to use the minimum bits for storage. The bucketing technique was developed for xeokit by Toni Marti with support from Tribia AG.\n\n To use the library, install it using npm install @xeokit/compression. An example usage includes compressing a GeometryParams into a GeometryCompressedParams using the compressGeometryParams function. In this example, the geometry is simple, and only one bucket is needed. However, if the positions array was large enough to require some indices to use more than 16 bits for storage, the bucketing mechanism would split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n\n The resulting GeometryCompressedParams object shows that we have one bucket with vertex positions relative to the origin and quantized to 16-bit integers, duplicate positions removed, and adjusted indices. Additionally, edge indices are generated for the TrianglesPrimitive, and a positionsDecompressMatrix is included to de-quantize the positions within the Viewer.\n\n * This library provides a set of functions that are used internally within\n * {@link @xeokit/scene!SceneModel.createGeometry | SceneModel.createGeometry} implementations to\n * compress geometry. The functions are provided here in case users instead want to pre-compress their geometry \"offline\",\n * and then use {@link @xeokit/scene!SceneModel.createGeometryCompressed | SceneModel.createGeometryCompressed}\n * to create the compressed geometry directly.\n *\n * ### Compression Techniques Used\n *\n * * Simplifies geometry by combining duplicate positions and adjusting indices\n * * Generates edge indices for triangle meshes\n * * Ignores normals (our shaders auto-generate them)\n * * Converts positions to relative-to-center (RTC) coordinates\n * * Quantizes positions and UVs as 16-bit unsigned integers\n * * Splits geometry into {@link @xeokit/scene!GeometryBucketParams | buckets } to enable indices to use the minimum bits for storage\n *\n * ### Aknowledgements\n *\n * * The bucketing technique mentioned above was developed for xeokit by Toni Marti, with support from Tribia AG. Read [the slides](media://pdfs/GPU_RAM_Savings_Toni_Marti_Apr22.pdf) from Toni's presentation at WebGL Meetup 2022.\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/compression\n * ````\n *\n * ## Usage\n *\n * In the example below, we'll use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}.\n *\n * In this example, our geometry is very simple, and our GeometryCompressedParams only gets a single\n * {@link @xeokit/scene!GeometryBucketParams | GeometryBucketParams }. Note that if the\n * {@link @xeokit/scene!GeometryParams.positions | GeometryParams.positions} array was large enough to require\n * some of the indices to use more than 16 bits for storage, then that's when the function's bucketing mechanism would\n * kick in, to split the geometry into smaller buckets, each with smaller indices that index a subset of the positions.\n *\n * ````javascript\n * import {compressGeometryParams} from \"@xeokit/compression\";\n * import {TrianglesPrimitive} from \"@xeokit/constants\";\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [\n *          202, 202, 202, 200, 202, 202,\n *          200, 200, 202, 202, 200, 202,\n *          202, 202, 202, 202, 200, 202,\n *          202, 200, 200, 202, 202, 200,\n *          202, 202, 202, 202, 202, 200,\n *          200, 202, 200, 200, 202, 202,\n *          200, 202, 202, 200, 202, 200,\n *          200, 200, 200, 200, 200, 202,\n *          200, 200, 200, 202, 200, 200,\n *          202, 200, 202, 200, 200, 202,\n *          202, 200, 200, 200, 200, 200,\n *          200, 202, 200, 202, 202, 200\n *      ],\n *      indices: [\n *          0, 1, 2, 0, 2, 3, 4, 5, 6, 4,\n *          6, 7, 8, 9, 10, 8, 10, 11, 12,\n *          13, 14, 12, 14, 15, 16, 17, 18,\n *          16, 18, 19, 20, 21, 22, 20, 22, 23\n *      ]\n *  });\n * ````\n *\n * The value of our new {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams} is shown below.\n *\n * We can see that:\n *\n * * We get one bucket, because we have only a small number of indices\n * * Vertex positions are now relative to ````origin```` and quantized to 16-bit integers\n * * Duplicate positions are removed and indices adjusted\n * * Edge indices generated for our TrianglesPrimitive\n * * A ````positionsDecompressMatrix```` to de-quantize the positions within the Viewer\n *\n * ````javascript\n * {\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      origin: [200,200,200],\n *      positionsDecompressMatrix: [\n *          0.00003052270125906143, 0, 0, 0,\n *          0, 0.00003052270125906143, 0, 0,\n *          0, 0, 0.00003052270125906143, 0,\n *          -1, -1, -1, 1\n *      ],\n *      geometryBuckets: [\n *          {\n *              positionsCompressed: [\n *                  65525, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 0, 65525, 0, 0,\n *                  0, 0\n *              ],\n *              indices: [\n *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2,\n *                  4, 7, 6, 4, 6, 5\n *              ],\n *              edgeIndices: [\n *                  3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7,\n *                  3, 2, 4, 7, 6, 4, 6\n *              ]\n *          }\n *      ]\n * }\n * ````\n *\n * In the next example, we'll again use {@link compressGeometryParams} to compress\n * a {@link @xeokit/scene!GeometryParams | GeometryParams} into a\n * {@link @xeokit/scene!GeometryCompressedParams | GeometryCompressedParams}, which we'll then use to\n * create a compressed geometry within a {@link @xeokit/scene!SceneModel | SceneModel}.\n *\n * ````javascript\n * import {Scene} from \"@xeokit/scene\";\n * import {TrianglesPrimitive} from \"@xeokit/constants\";\n * import {compressGeometryParams} from \"@xeokit/compression\";\n *\n * const scene = new Scene();\n *\n * const sceneModel = scene.createModel({\n *     id: \"myModel\"\n * });\n *\n * const geometryCompressedParams = compressGeometryParams({\n *      id: \"myBoxGeometry\",\n *      primitive: TrianglesPrimitive,\n *      positions: [202, 202, 202, 200, 202, 202, ...],\n *      indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, ...]\n * });\n *\n * sceneModel.createGeometryCompressed(geometryCompressedParams);\n *\n * sceneModel.createMesh({ id: \"myMesh\", geometryId: \"myGeometry\" });\n *\n * sceneModel.createObject({ id: \"myObject1\", meshIds: [\"myMesh\"] });\n * sceneModel.createObject({ id: \"myObject2\", meshIds: [\"myMesh\"] });\n *\n * sceneModel.build();\n * ````\n *\n * @module @xeokit/compression\n */\n\nimport {\n    createMat3,\n    createMat4,\n    createVec3,\n    identityMat3,\n    identityMat4,\n    mulMat3,\n    mulMat4,\n    normalizeVec3,\n    scalingMat3v,\n    scalingMat4v,\n    transformVec3,\n    translationMat3v,\n    translationMat4v\n} from \"@xeokit/matrix\";\n\nimport type {FloatArrayParam} from \"@xeokit/math\";\n\nconst translate = createMat4();\nconst scale = createMat4();\n\n/**\n * Gets the boundary of a flat positions array.\n *\n * @param array\n * @param min\n * @param max\n */\nexport function getPositions3MinMax(array: FloatArrayParam, min?: FloatArrayParam, max?: FloatArrayParam) {\n    let i, j;\n    min = min || new Float64Array(3);\n    max = max || new Float64Array(3);\n    for (i = 0; i < 3; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 3) {\n        for (j = 0; j < 3; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min,\n        max\n    };\n}\n\n/**\n * Creates a de-quantization matrix from a boundary.\n */\nexport function createPositions3DecompressMat4(aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam): FloatArrayParam {\n    positionsDecompressMatrix = positionsDecompressMatrix || createMat4();\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65535;\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsDecompressMatrix;\n}\n\n/**\n * Compresses a flat positions array\n */\nexport function compressPositions3(array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam) {\n    const quantized = new Uint16Array(array.length);\n    var multiplier = new Float32Array([\n        max[0] !== min[0] ? 65535 / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? 65535 / (max[1] - min[1]) : 0,\n        max[2] !== min[2] ? 65535 / (max[2] - min[2]) : 0\n    ]);\n    let i;\n    for (i = 0; i < array.length; i += 3) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n    }\n    identityMat4(translate);\n    translationMat4v(min, translate);\n    identityMat4(scale);\n    scalingMat4v([\n        (max[0] - min[0]) / 65535,\n        (max[1] - min[1]) / 65535,\n        (max[2] - min[2]) / 65535\n    ], scale);\n    const decompressMatrix = mulMat4(translate, scale, identityMat4());\n    return {\n        quantized: quantized,\n        decompressMatrix: decompressMatrix\n    };\n}\n\n/**\n * Compresses a 3D position\n * @param p\n * @param aabb\n * @param q\n */\nexport function compressPoint3(p: FloatArrayParam, aabb: FloatArrayParam, dest: FloatArrayParam = p) {\n    const multiplier = new Float32Array([\n        aabb[3] !== aabb[0] ? 65535 / (aabb[3] - aabb[0]) : 0,\n        aabb[4] !== aabb[1] ? 65535 / (aabb[4] - aabb[1]) : 0,\n        aabb[5] !== aabb[2] ? 65535 / (aabb[5] - aabb[2]) : 0\n    ]);\n    dest[0] = Math.max(0, Math.min(65535, Math.floor((p[0] - aabb[0]) * multiplier[0])));\n    dest[1] = Math.max(0, Math.min(65535, Math.floor((p[1] - aabb[1]) * multiplier[1])));\n    dest[2] = Math.max(0, Math.min(65535, Math.floor((p[2] - aabb[2]) * multiplier[2])));\n    return dest;\n}\n\n/**\n * Decompresses a 3D position\n * @param position\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPoint3(position: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = position): FloatArrayParam {\n    dest[0] = position[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = position[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = position[2] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses an axis-aligned 3D boundary\n * @param aabb\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressAABB3(aabb: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = aabb): FloatArrayParam {\n    dest[0] = aabb[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = aabb[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = aabb[2] * decompressMatrix[10] + decompressMatrix[14];\n    dest[3] = aabb[3] * decompressMatrix[0] + decompressMatrix[12];\n    dest[4] = aabb[4] * decompressMatrix[5] + decompressMatrix[13];\n    dest[5] = aabb[5] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses a flat array of positions\n * @param positions\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPositions3(positions: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: Float32Array = new Float32Array(positions.length)): Float32Array {\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        dest[i + 0] = positions[i + 0] * decompressMatrix[0] + decompressMatrix[12];\n        dest[i + 1] = positions[i + 1] * decompressMatrix[5] + decompressMatrix[13];\n        dest[i + 2] = positions[i + 2] * decompressMatrix[10] + decompressMatrix[14];\n    }\n    return dest;\n}\n\n/**\n * Gets the 2D min/max boundary of a flat array of UV coordinate\n * @param array\n */\nexport function getUVBounds(array: FloatArrayParam): { min: FloatArrayParam, max: FloatArrayParam } {\n    const min = new Float32Array(2);\n    const max = new Float32Array(2);\n    let i, j;\n    for (i = 0; i < 2; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 2) {\n        for (j = 0; j < 2; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\n/**\n * Compresses a flat array of UV coordinates\n */\nexport var compressUVs = (function () {\n    const translate = createMat3();\n    const scale = createMat3();\n    return function (array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam): {\n        quantized: Uint16Array,\n        decompressMatrix: FloatArrayParam | Float64Array\n    } {\n        const quantized = new Uint16Array(array.length);\n        const multiplier = new Float32Array([\n            65535 / (max[0] - min[0]),\n            65535 / (max[1] - min[1])\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 2) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        }\n        identityMat3(translate);\n        translationMat3v(min, translate);\n        identityMat3(scale);\n        scalingMat3v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535\n        ], scale);\n        const decompressMatrix = mulMat3(translate, scale, identityMat3());\n        return {\n            quantized: quantized,\n            decompressMatrix: decompressMatrix\n        };\n    };\n})();\n\n/**\n * Oct-encodes a flat array of normal vectors\n * @param array\n */\nexport function compressNormals(array: FloatArrayParam): Int8Array { // http://jcgt.org/published/0003/02/01/\n\n    // Note: three elements for each encoded normal, in which the last element in each triplet is redundant.\n    // This is to work around a mysterious WebGL issue where 2-element normals just wouldn't work in the shader :/\n\n    const encoded = new Int8Array(array.length);\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < array.length; i += 3) {\n        // Test various combinations of ceil and floor\n        // to minimize rounding errors\n        best = oct = octEncodeNormalFromArray(array, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(array, i, dec);\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        encoded[i] = best[0];\n        encoded[i + 1] = best[1];\n    }\n    return encoded;\n}\n\n/**\n */\nfunction octEncodeNormalFromArray(array: FloatArrayParam, i: number, xfunc: any, yfunc: any): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n/**\n * Dot product of a normal in an array against a candidate decoding\n */\nfunction dot(array: FloatArrayParam, i: number, createVec3: FloatArrayParam): number {\n    return array[i] * createVec3[0] + array[i + 1] * createVec3[1] + array[i + 2] * createVec3[2];\n}\n\n/**\n */\nexport function decompressUV(uv: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(2)) {\n    dest[0] = uv[0] * decompressMatrix[0] + decompressMatrix[6];\n    dest[1] = uv[1] * decompressMatrix[4] + decompressMatrix[7];\n}\n\n/**\n *\n */\nexport function decompressUVs(uvs: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(uvs.length)) {\n    for (let i = 0, len = uvs.length; i < len; i += 3) {\n        dest[i + 0] = uvs[i + 0] * decompressMatrix[0] + decompressMatrix[6];\n        dest[i + 1] = uvs[i + 1] * decompressMatrix[4] + decompressMatrix[7];\n    }\n    return dest;\n}\n\n/**\n *\n */\nexport function decompressNormal(oct: FloatArrayParam, result: FloatArrayParam): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nexport function decompressNormals(octs: string | any[], result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n *\n * @param oct\n * @param result\n */\nfunction octDecodeVec2(oct: Int8Array, result: FloatArrayParam = createVec3()): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nfunction octDecodeVec2s(octs: Int8Array, result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n * @private\n */\nexport function quantizePositions3(positions: FloatArrayParam, aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam) { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const lenPositions = positions.length;\n    const positionsCompressed = new Uint16Array(lenPositions);\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65525;\n    const xMultiplier = maxInt / xwid;\n    const yMultiplier = maxInt / ywid;\n    const zMultiplier = maxInt / zwid;\n    const verify = (num: number) => num >= 0 ? num : 0;\n    for (let i = 0; i < lenPositions; i += 3) {\n        positionsCompressed[i + 0] = Math.floor(verify(positions[i + 0] - xmin) * xMultiplier);\n        positionsCompressed[i + 1] = Math.floor(verify(positions[i + 1] - ymin) * yMultiplier);\n        positionsCompressed[i + 2] = Math.floor(verify(positions[i + 2] - zmin) * zMultiplier);\n    }\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsCompressed;\n}\n\n/**\n * @private\n */\nexport function transformAndOctEncodeNormals(worldNormalMatrix: FloatArrayParam, normals: FloatArrayParam, lenNormals: number, compressedNormals: FloatArrayParam, lenCompressedNormals: number) {\n\n    function dot(p: FloatArrayParam, createVec3: FloatArrayParam) { // Dot product of a normal in an array against a candidate decoding\n        return p[0] * createVec3[0] + p[1] * createVec3[1] + p[2] * createVec3[2];\n    }\n\n    // http://jcgt.org/published/0003/02/01/\n    let oct, dec, best, currentCos, bestCos;\n    let i, ei;\n    let localNormal = new Float32Array([0, 0, 0, 0]);\n    let worldNormal = new Float32Array([0, 0, 0, 0]);\n    for (i = 0; i < lenNormals; i += 3) {\n        localNormal[0] = normals[i];\n        localNormal[1] = normals[i + 1];\n        localNormal[2] = normals[i + 2];\n\n        transformVec3(worldNormalMatrix, localNormal, worldNormal);\n        normalizeVec3(worldNormal, worldNormal);\n\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeVec3(worldNormal, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(worldNormal, dec);\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[lenCompressedNormals + i + 0] = best[0];\n        compressedNormals[lenCompressedNormals + i + 1] = best[1];\n        compressedNormals[lenCompressedNormals + i + 2] = 0.0; // Unused\n    }\n    lenCompressedNormals += lenNormals;\n    return lenCompressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeNormals(normals: FloatArrayParam) { // http://jcgt.org/published/0003/02/01/\n    const lenNormals = normals.length;\n    const compressedNormals = new Int8Array(lenNormals)\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < lenNormals; i += 3) {\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeNormal(normals, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(normals, i, dec);\n        oct = octEncodeNormal(normals, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[i + 0] = best[0];\n        compressedNormals[i + 1] = best[1];\n        compressedNormals[i + 2] = 0.0; // Unused\n    }\n    return compressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeVec3(p: FloatArrayParam, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = p[0] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    let y = p[1] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    if (p[2] < 0) {\n        let tempx = x;\n        let tempy = y;\n        tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n/**\n * @private\n */\nexport function octEncodeNormal(array: FloatArrayParam, i: number, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n","import {GeometryView, getSceneObjectGeometry, SceneObject} from \"@xeokit/scene\";\nimport {\n    INSIDE,\n    INTERSECT,\n    OUTSIDE,\n    setFrustum3,\n    intersectFrustum3AABB3,\n    intersectFrustum3Point3\n} from \"@xeokit/boundaries\";\nimport {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec4, transformPoint4} from \"@xeokit/matrix\";\nimport {KdTree2} from \"./KdTree2\";\nimport {KdVertex2} from \"./KdVertex2\";\n\n/**\n * A k-d tree to accelerate intersection and nearest-neighbour tests on the projected\n * 2D canvas positions of {@link @xeokit/scene!SceneObject} geometry vertices.\n *\n * See {@link \"@xeokit/kd-canvas-verts\"} for usage.\n */\nexport function createKdTree2FromSceneObjectVerts(params: {\n    viewMatrix: FloatArrayParam,\n    projMatrix: FloatArrayParam,\n    canvasBoundary: FloatArrayParam,\n    sceneObjects: SceneObject[]\n}): KdTree2 {\n\n    const kdTree2D = new KdTree2({\n        aabb: params.canvasBoundary\n    });\n\n    const viewMatrix = createMat4(params.viewMatrix);\n    const projMatrix = createMat4(params.projMatrix);\n    const frustum = setFrustum3(viewMatrix, projMatrix);\n    const canvasBoundary = params.canvasBoundary;\n    const sceneObjects = params.sceneObjects;\n\n    if (sceneObjects) {\n        for (let i = 0, len = sceneObjects.length; i < len; i++) {\n            insertSceneObject(sceneObjects[i]);\n        }\n    }\n\n    function insertSceneObject(sceneObject: SceneObject, intersects: number = INTERSECT) {\n        if (intersects !== INSIDE) {\n            intersects = intersectFrustum3AABB3(frustum, sceneObject.aabb);\n        }\n        if (intersects === OUTSIDE) {\n            return;\n        }\n        getSceneObjectGeometry(sceneObject,\n            (geometryView: GeometryView): boolean | undefined => {\n                const positionsWorld = geometryView.positionsWorld;\n                for (let i = 0, len = positionsWorld.length; i < len; i += 3) {\n                    const worldPos = createVec4();\n                    worldPos[0] = positionsWorld[i];\n                    worldPos[1] = positionsWorld[i + 1];\n                    worldPos[2] = positionsWorld[i + 2];\n                    worldPos[3] = 1.0;\n                    if (intersects === INSIDE || intersectFrustum3Point3(frustum, worldPos)) {\n                        insertVertex(sceneObject, worldPos);\n                    }\n                }\n                return false;\n            });\n    }\n\n    function insertVertex(sceneObject: SceneObject, worldPos: FloatArrayParam) {\n        const viewPos = createVec4();\n        const projPos = createVec4();\n        const canvasPos = new Uint16Array(2);\n        transformPoint4(viewMatrix, worldPos, viewPos);\n        transformPoint4(projMatrix, viewPos, projPos);\n        canvasPos[0] = Math.floor((1 + projPos[0] / projPos[3]) * canvasBoundary[2] / 2);\n        canvasPos[1] = Math.floor((1 - projPos[1] / projPos[3]) * canvasBoundary[3] / 2);\n        kdTree2D.insertItem(<KdVertex2>{sceneObject, worldPos, canvasPos}, [canvasPos[0], canvasPos[1], canvasPos[0], canvasPos[1]]);\n    }\n\n    return kdTree2D;\n}\n","import {FloatArrayParam} from \"@xeokit/math\";\nimport {SceneObject} from \"@xeokit/scene\";\nimport {KdTree2} from \"./KdTree2\";\n\n/**\n *\n */\nexport function searchKdTree2ForNearestNeighbor(params: {\n    kdTree: KdTree2,\n    canvasPos: FloatArrayParam\n}): SceneObject[] {\n    const kdTree = params.kdTree;\n    const canvasPos = params.canvasPos;\n    const sceneObjects = [];\n\n//...\n\n    return sceneObjects;\n}\n","import {SceneObject} from \"@xeokit/scene\";\nimport {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\n\n/**\n * TODO\n */\nexport class KdVertex2 {\n    sceneObject: SceneObject;\n    worldPos: FloatArrayParam;\n    canvasPos: IntArrayParam;\n}"],"names":["r","Float64Array","M","n","s","FloatArrayClass","cn","t","mn","tempVec3a","createVec3","tempVec3b","tempMat4a","createMat4","containsAABB2","aabb1","aabb2","FrustumPlane3","this","testVertex","offset","normal","prototype","set","nx","ny","nz","Math","sqrt","Frustum3","planes","kdTreeDimLength","Float32Array","_insertItem","_classPrivateFieldLooseKey","KdTree2","params","Object","defineProperty","value","_insertItem2","root","maxDepth","aabb","slice","insertItem","item","_classPrivateFieldLooseBase","node","depth","items","push","left","right","nodeAABB","dim","aabbLeft","aabbRight","exports","DispatcherWrapper","constructor","dispatcher","_subscribe","fn","subscribe","_unsubscribe","unsubscribe","_one","one","_has","has","_clear","clear","_count","count","_onSubscriptionChange","onSubscriptionChange","sub","unsub","Subscription","handler","isOnce","isExecuted","execute","executeAsync","scope","args","setTimeout","apply","EventManagement","propagationStopped","stopPropagation","SubscriptionChangeEventDispatcher","DispatcherBase","_subscriptions","Array","length","asEvent","createSubscription","triggerSubscriptionChange","some","changes","i","splice","_dispatch","ev","EventManagement_1","nargs","call","cleanup","Subscription_1","indexOf","_wrap","DispatcherWrapper_1","dispatch","arguments","DispatchError","Error","message","super","EventListBase","_events","get","name","event","createDispatcher","remove","HandlingBase","events","PromiseSubscription","async","result","PromiseDispatcherBase","DispatcherBase_1","DispatchError_1","PromiseSubscription_1","ps","enumerable","EventListBase_1","HandlingBase_1","PromiseDispatcherBase_1","EventDispatcher","ste_core_1","sender","dispatchAsync","EventList","EventDispatcher_1","EventHandlingBase","EventList_1","NonUniformEventList","EventHandlingBase_1","NonUniformEventList_1","SimpleEventDispatcher","SimpleEventList","SimpleEventDispatcher_1","SimpleEventHandlingBase","SimpleEventList_1","NonUniformSimpleEventList","SimpleEventHandlingBase_1","NonUniformSimpleEventList_1","SignalDispatcher","SignalList","SignalDispatcher_1","SignalHandlingBase","SignalList_1","SignalHandlingBase_1","PromiseEventDispatcher","_dispatchAsPromise","PromiseEventList","PromiseEventDispatcher_1","PromiseEventHandlingBase","PromiseEventList_1","NonUniformPromiseEventList","PromiseEventHandlingBase_1","NonUniformPromiseEventList_1","PromiseSignalDispatcher","PromiseSignalList","PromiseSignalDispatcher_1","PromiseSignalHandlingBase","PromiseSignalList_1","PromiseSignalHandlingBase_1","PromiseSimpleEventDispatcher","NonUniformPromiseSimpleEventList","PromiseSimpleEventDispatcher_1","PromiseSimpleEventList","PromiseSimpleEventHandlingBase","PromiseSimpleEventList_1","NonUniformPromiseSimpleEventList_1","PromiseSimpleEventHandlingBase_1","ste_events_1","ste_simple_events_1","ste_signals_1","ste_promise_events_1","ste_promise_signals_1","ste_promise_simple_events_1","_positionsDecompressed","_positionsWorld","GeometryViewImpl","object","mesh","meshIndex","geometry","geometryBucket","geometryBucketIndex","writable","reset","key","totalGeometryBuckets","len","meshes","geometryBuckets","primitiveType","primitive","indices","positionsCompressed","positions","decompressMatrix","dest","decompressPositions3","positionsDecompressMatrix","positionsDecompressed","u","a","o","e","c","f","v","h","l","d","q","X","Y","Z","b","g","y","w","transformPositions3","matrix","geometryView","createKdTree2FromSceneObjectVerts","kdTree2D","canvasBoundary","viewMatrix","projMatrix","frustum","viewMat","projMat","m","A","p","F","x","C","k","j","z","B","D","mulMat4","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","setFrustum3","sceneObjects","insertSceneObject","sceneObject","intersects","ret","min","max","bminmax","plane","intersectFrustum3AABB3","withEachGeometry","lenj","getSceneObjectGeometry","positionsWorld","worldPos","createVec4","insertVertex","viewPos","projPos","canvasPos","Uint16Array","transformPoint4","floor","searchKdTree2ForNearestNeighbor","KdVertex2"],"mappings":"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"}