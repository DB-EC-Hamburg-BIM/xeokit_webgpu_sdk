{"version":3,"file":"index.js","sources":["../../math/dist/index.es","../../boundaries/dist/index.es","../src/KdTree2.ts","../../../node_modules/ste-core/dist/dispatching/DispatcherWrapper.js","../../../node_modules/ste-core/dist/events/Subscription.js","../../../node_modules/ste-core/dist/management/EventManagement.js","../../../node_modules/ste-core/dist/dispatching/DispatcherBase.js","../../../node_modules/ste-core/dist/dispatching/DispatchError.js","../../../node_modules/ste-core/dist/dispatching/EventListBase.js","../../../node_modules/ste-core/dist/handling/HandlingBase.js","../../../node_modules/ste-core/dist/events/PromiseSubscription.js","../../../node_modules/ste-core/dist/dispatching/PromiseDispatcherBase.js","../../../node_modules/ste-core/dist/index.js","../../../node_modules/ste-events/dist/EventDispatcher.js","../../../node_modules/ste-events/dist/EventList.js","../../../node_modules/ste-events/dist/EventHandlingBase.js","../../../node_modules/ste-events/dist/NonUniformEventList.js","../../../node_modules/ste-events/dist/index.js","../../../node_modules/ste-simple-events/dist/SimpleEventDispatcher.js","../../../node_modules/ste-simple-events/dist/SimpleEventList.js","../../../node_modules/ste-simple-events/dist/SimpleEventHandlingBase.js","../../../node_modules/ste-simple-events/dist/NonUniformSimpleEventList.js","../../../node_modules/ste-simple-events/dist/index.js","../../../node_modules/ste-signals/dist/SignalDispatcher.js","../../../node_modules/ste-signals/dist/SignalList.js","../../../node_modules/ste-signals/dist/SignalHandlingBase.js","../../../node_modules/ste-signals/dist/index.js","../../../node_modules/ste-promise-events/dist/PromiseEventDispatcher.js","../../../node_modules/ste-promise-events/dist/PromiseEventList.js","../../../node_modules/ste-promise-events/dist/PromiseEventHandlingBase.js","../../../node_modules/ste-promise-events/dist/NonUniformPromiseEventList.js","../../../node_modules/ste-promise-events/dist/index.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalDispatcher.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalList.js","../../../node_modules/ste-promise-signals/dist/PromiseSignalHandlingBase.js","../../../node_modules/ste-promise-signals/dist/index.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventDispatcher.js","../../../node_modules/ste-promise-simple-events/dist/NonUniformPromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventList.js","../../../node_modules/ste-promise-simple-events/dist/PromiseSimpleEventHandlingBase.js","../../../node_modules/ste-promise-simple-events/dist/index.js","../../../node_modules/strongly-typed-events/dist/index.js","../../matrix/src/index.ts","../src/KdVertex2.ts","../src/createKdTree2FromSceneObjectVerts.ts","../src/searchKdTree2ForNearestNeighbor.ts"],"sourcesContent":["var r=Float64Array,n=-Number.MAX_SAFE_INTEGER,t=Number.MAX_SAFE_INTEGER,a=.0174532925,e=57.295779513;function u(r,n,t){return Math.max(n,Math.min(t,r))}function E(n){return new r(n)}export{a as DEGTORAD,r as FloatArrayClass,t as MAX_DOUBLE,n as MIN_DOUBLE,e as RADTODEG,u as clamp,E as newFloatArray};\n//# sourceMappingURL=index.es.map\n","import{createVec3 as t,createMat4 as n,subVec3 as r,lenVec3 as e,createVec2 as o,mulMat4 as i}from\"@xeokit/matrix\";import{newFloatArray as u,MAX_DOUBLE as f,MIN_DOUBLE as a}from\"@xeokit/math\";import{decompressPoint3 as s}from\"@xeokit/compression\";var c=t(),v=t(),l=n();function h(t){return new Float64Array(t||6)}function m(t){return new Int16Array(t||6)}function p(t){return u(t||4)}function x(t){return u(t||32)}function d(t){return u(t||16)}function V(t,n,r,e){return u([t,n,r,e])}function w(t,n,r){var e;void 0===r&&(r=n);var o,i,u,f=n.length,a=t[0],s=t[1],c=t[2],v=t[3],l=t[4],h=t[5],m=t[6],p=t[7],x=t[8],d=t[9],V=t[10],w=t[11],g=t[12],k=t[13],y=t[14],M=t[15];for(e=0;e<f;e+=4)r[e+0]=a*(o=n[e+0])+l*(i=n[e+1])+x*(u=n[e+2])+g,r[e+1]=s*o+h*i+d*u+k,r[e+2]=c*o+m*i+V*u+y,r[e+3]=v*o+p*i+w*u+M;return r}function g(t,n){return t[0]<=n[0]&&n[3]<=t[3]&&t[1]<=n[1]&&t[2]<=n[2]}function k(t,n){return t[0]<=n[0]&&n[3]<=t[3]&&t[1]<=n[1]&&n[4]<=t[4]&&t[2]<=n[2]&&n[5]<=t[5]}var y,M,b,A=(y=u(3),M=u(3),b=u(3),function(t){return y[0]=t[0],y[1]=t[1],y[2]=t[2],M[0]=t[3],M[1]=t[4],M[2]=t[5],r(M,y,b),Math.abs(e(b))}),q=function(){var t=u(3),n=u(3),o=u(3);return function(i,u){t[0]=i[0],t[1]=i[1],t[2]=i[2],n[0]=i[3],n[1]=i[4],n[2]=i[5];var f=r(n,t,o),a=u[0]-i[0],s=i[3]-u[0],c=u[1]-i[1],v=i[4]-u[1],l=u[2]-i[2],h=i[5]-u[2];return f[0]+=a>s?a:s,f[1]+=c>v?c:v,f[2]+=l>h?l:h,Math.abs(e(f))}}();function F(t){return(t[3]-t[0])*(t[4]-t[1])*(t[5]-t[2])}function I(n,r){return void 0===r&&(r=t()),r[0]=(n[0]+n[3])/2,r[1]=(n[1]+n[4])/2,r[2]=(n[2]+n[5])/2,r}function j(t,n){return void 0===n&&(n=o()),n[0]=(t[2]+t[0])/2,n[1]=(t[3]+t[1])/2,n}function z(t){return void 0===t&&(t=h()),t[0]=f,t[1]=f,t[2]=f,t[3]=a,t[4]=a,t[5]=a,t}function B(t){return void 0===t&&(t=m()),t[0]=65535,t[1]=65535,t[2]=65535,t[3]=-65535,t[4]=-65535,t[5]=-65535,t}function C(t,n){return void 0===t&&(t=h()),void 0===n&&(n=x()),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1,n[4]=t[3],n[5]=t[1],n[6]=t[2],n[7]=1,n[8]=t[3],n[9]=t[4],n[10]=t[2],n[11]=1,n[12]=t[0],n[13]=t[4],n[14]=t[2],n[15]=1,n[16]=t[0],n[17]=t[1],n[18]=t[5],n[19]=1,n[20]=t[3],n[21]=t[1],n[22]=t[5],n[23]=1,n[24]=t[3],n[25]=t[4],n[26]=t[5],n[27]=1,n[28]=t[0],n[29]=t[4],n[30]=t[5],n[31]=1,n}function D(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[2]>n[2]&&(t[2]=n[2]),t[3]<n[3]&&(t[3]=n[3]),t[4]<n[4]&&(t[4]=n[4]),t[5]<n[5]&&(t[5]=n[5]),t}function E(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[3]<n[3]&&(t[3]=n[3]),t[4]<n[4]&&(t[4]=n[4]),t}function G(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[2]>n[2]&&(t[2]=n[2]),t[3]<n[0]&&(t[3]=n[0]),t[4]<n[1]&&(t[4]=n[1]),t[5]<n[2]&&(t[5]=n[2]),t}function H(t,n){return t[0]>n[0]&&(t[0]=n[0]),t[1]>n[1]&&(t[1]=n[1]),t[3]<n[0]&&(t[3]=n[0]),t[4]<n[1]&&(t[4]=n[1]),t}function J(t,n){for(var r,e,o,i=0,u=n.length;i<u;i+=3)e=n[i+1],o=n[i+2],t[0]>(r=n[i])&&(t[0]=r),t[1]>e&&(t[1]=e),t[2]>o&&(t[2]=o),t[3]<r&&(t[3]=r),t[4]<e&&(t[4]=e),t[5]<o&&(t[5]=o);return t}function K(t,n){return void 0===n&&(n=x()),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1,n[4]=t[3],n[5]=t[1],n[6]=t[2],n[7]=1,n[8]=t[3],n[9]=t[4],n[10]=t[2],n[11]=1,n[12]=t[0],n[13]=t[4],n[14]=t[2],n[15]=1,n[16]=t[0],n[17]=t[1],n[18]=t[5],n[19]=1,n[20]=t[3],n[21]=t[1],n[22]=t[5],n[23]=1,n[24]=t[3],n[25]=t[4],n[26]=t[5],n[27]=1,n[28]=t[0],n[29]=t[4],n[30]=t[5],n[31]=1,n}var L,N=(L=u(3),function(t,n,r){n=n||h();for(var e,o,i,u=f,c=f,v=f,l=a,m=a,p=a,x=0,d=t.length;x<d;x+=3)r?(L[0]=t[x+0],L[1]=t[x+1],L[2]=t[x+2],s(L,r,L),e=L[0],o=L[1],i=L[2]):(e=t[x+0],o=t[x+1],i=t[x+2]),e<u&&(u=e),o<c&&(c=o),i<v&&(v=i),e>l&&(l=e),o>m&&(m=o),i>p&&(p=i);return n[0]=u,n[1]=c,n[2]=v,n[3]=l,n[4]=m,n[5]=p,n});function O(t,n){void 0===n&&(n=h());for(var r,e,o,i=f,u=f,s=f,c=a,v=a,l=a,m=0,p=t.length;m<p;m+=4)(r=t[m+0])<i&&(i=r),(e=t[m+1])<u&&(u=e),(o=t[m+2])<s&&(s=o),r>c&&(c=r),e>v&&(v=e),o>l&&(l=o);return n[0]=i,n[1]=u,n[2]=s,n[3]=c,n[4]=v,n[5]=l,n}function P(t,n){void 0===n&&(n=h());for(var r,e,o,i=f,u=f,s=f,c=a,v=a,l=a,m=0,p=t.length;m<p;m++)(r=t[m][0])<i&&(i=r),(e=t[m][1])<u&&(u=e),(o=t[m][2])<s&&(s=o),r>c&&(c=r),e>v&&(v=e),o>l&&(l=o);return n[0]=i,n[1]=u,n[2]=s,n[3]=c,n[4]=v,n[5]=l,n}function Q(n,r){void 0===r&&(r=t());for(var e=0,o=0,i=0,u=0,f=n.length;u<f;u+=3)e+=n[u+0],o+=n[u+1],i+=n[u+2];var a=n.length/3;return r[0]=e/a,r[1]=o/a,r[2]=i/a,r}var R=/*#__PURE__*/function(){function n(){this.testVertex=void 0,this.offset=void 0,this.normal=void 0,this.normal=t(),this.offset=0,this.testVertex=t()}return n.prototype.set=function(t,n,r,e){var o=1/Math.sqrt(t*t+n*n+r*r);this.normal[0]=t*o,this.normal[1]=n*o,this.normal[2]=r*o,this.offset=e*o,this.testVertex[0]=this.normal[0]>=0?1:0,this.testVertex[1]=this.normal[1]>=0?1:0,this.testVertex[2]=this.normal[2]>=0?1:0},n}(),S=1,T=2,U=3,W=function(){this.planes=void 0,this.planes=[new R,new R,new R,new R,new R,new R]};function X(t,n,r){var e=i(n,t,l),o=e[0],u=e[1],f=e[2],a=e[3],s=e[4],c=e[5],v=e[6],h=e[7],m=e[8],p=e[9],x=e[10],d=e[11],V=e[12],w=e[13],g=e[14],k=e[15];return(r=r||new W).planes[0].set(a-o,h-s,d-m,k-V),r.planes[1].set(a+o,h+s,d+m,k+V),r.planes[2].set(a-u,h-c,d-p,k-w),r.planes[3].set(a+u,h+c,d+p,k+w),r.planes[4].set(a-f,h-v,d-x,k-g),r.planes[5].set(a+f,h+v,d+x,k+g),r}function Y(t,n){var r=1,e=c,o=v;e[0]=n[0],e[1]=n[1],e[2]=n[2],o[0]=n[3],o[1]=n[4],o[2]=n[5];for(var i=[e,o],u=0;u<6;++u){var f=t.planes[u];if(f.normal[0]*i[f.testVertex[0]][0]+f.normal[1]*i[f.testVertex[1]][1]+f.normal[2]*i[f.testVertex[2]][2]+f.offset<0)return 3;f.normal[0]*i[1-f.testVertex[0]][0]+f.normal[1]*i[1-f.testVertex[1]][1]+f.normal[2]*i[1-f.testVertex[2]][2]+f.offset<0&&(r=2)}return r}function Z(t,n){return 2}function $(t,n,r){return!0}function _(t,n,r,e){return!0}function tt(t,n,r){return!0}function nt(t,n){return!0}function rt(t,n){return!0}function et(t,n,r){return!1}function ot(t,n,r){return!1}function it(t,n){for(var r=t[0],e=t[1],o=t[2],i=t[3],u=t[4],f=t[5],a=0,s=n.length;a<s;a+=3){var c=n[a];if(r<=c&&c<=i){var v=n[a+1];if(e<=v&&v<=u){var l=n[a+2];if(o<=l&&l<=f)return!0}}}return!1}function ut(t,n){return t[0]<=n[0]&&n[0]<=t[3]&&t[1]<=n[1]&&n[1]<=t[4]&&t[2]<=n[2]&&n[2]<=t[5]}function ft(t,n){return t[0]<=n[0]&&n[0]<=t[3]&&t[1]<=n[1]&&n[1]<=t[4]}export{C as AABB3ToOBB3,K as ABB3ToOBB3,W as Frustum3,R as FrustumPlane3,S as INSIDE,T as INTERSECT,O as OBB3ToAABB3,U as OUTSIDE,z as collapseAABB3,B as collapseAABB3Int16,g as containsAABB2,ft as containsAABB2Point2,k as containsAABB3,ut as containsAABB3Point3,p as createAABB2,h as createAABB3,m as createAABB3Int16,d as createOBB2,x as createOBB3,V as createSphere3,E as expandAABB2,H as expandAABB2Point2,D as expandAABB3,G as expandAABB3Point3,J as expandAABB3Points3,j as getAABB2Center,F as getAABB3Area,I as getAABB3Center,A as getAABB3Diag,q as getAABB3DiagPoint,Q as getPositions3Center,ot as intersectAABB3Lines3,it as intersectAABB3Positions3,et as intersectAABB3Triangles3,Z as intersectAABB3s,Y as intersectFrustum3AABB3,tt as intersectFrustum3Lines3,rt as intersectFrustum3Point3,nt as intersectFrustum3Positions3,_ as intersectFrustum3Triangle3,$ as intersectFrustum3Triangles3,P as points3ToAABB3,N as positions3ToAABB3,X as setFrustum3,w as transformOBB3};\n//# sourceMappingURL=index.es.map\n","import {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\nimport {containsAABB2} from \"@xeokit/boundaries\";\n\nconst MAX_KD_TREE_DEPTH = 10; // Increase if greater precision needed\nconst kdTreeDimLength = new Float32Array(2);\n\n/**\n * An item stored in a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdItem2D {\n\n    /**\n     * The item stored in this KdItem2D.\n     */\n    item: any;\n}\n\n/**\n * A 2D k-d tree node.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdNode2D {\n\n    /**\n     * The axis-aligned 2D boundary of this kd-tree node.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * The left KD2Node.\n     */\n    left?: KdNode2D;\n\n    /**\n     * The right KD2Node.\n     */\n    right?: KdNode2D;\n\n    /**\n     * The {@link KdItem2D | KdItem2Ds} stored in this KD2Node.\n     */\n    items?: KdItem2D[];\n}\n\n/**\n * Parameters for creating a 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport interface KdTree2DParams {\n\n    /**\n     * The 2D boundary of all the nodes we'll add to this k-d tree.\n     */\n    aabb: FloatArrayParam;\n\n    /**\n     * Maximum depth of the 2D kd-tree.\n     */\n    maxDepth?: number;\n}\n\n/**\n * A static 2D k-d tree.\n *\n * See {@link \"@xeokit/collision/kdtree2\"} for usage.\n */\nexport class KdTree2 {\n\n    /**\n     * The root node in this k-d tree.\n     */\n    readonly root: KdNode2D;\n\n    /**\n     * The maximum allowed depth of this 2D k-d tree.\n     */\n    readonly maxDepth: number;\n\n    /**\n     * Creates a new 2D k-d tree.\n     *\n     * @param params\n     */\n    constructor(params?: KdTree2DParams) {\n        this.maxDepth = params?.maxDepth || MAX_KD_TREE_DEPTH;\n        this.root = {\n            aabb: params.aabb.slice()\n        };\n    }\n\n    /**\n     * Inserts a bounded item into this 2D k-d tree.\n     *\n     * @param item\n     * @param aabb\n     */\n    insertItem(item: any, aabb: IntArrayParam) {\n        this.#insertItem(this.root, <KdItem2D>{item}, aabb, 1)\n    }\n\n    #insertItem(node: KdNode2D, item: KdItem2D, aabb: IntArrayParam, depth: number) {\n        if (depth >= this.maxDepth) {\n            node.items = node.items || [];\n            node.items.push(item);\n            return;\n        }\n        if (node.left) {\n            if (containsAABB2(node.left.aabb, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (node.right) {\n            if (containsAABB2(node.right.aabb, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        const nodeAABB = node.aabb;\n        kdTreeDimLength[0] = nodeAABB[2] - nodeAABB[0];\n        kdTreeDimLength[1] = nodeAABB[3] - nodeAABB[1];\n        let dim = 0;\n        if (kdTreeDimLength[1] > kdTreeDimLength[dim]) {\n            dim = 1;\n        }\n        if (!node.left) {\n            const aabbLeft = nodeAABB.slice();\n            aabbLeft[dim + 2] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.left = {\n                aabb: aabbLeft\n            };\n            if (containsAABB2(aabbLeft, aabb)) {\n                this.#insertItem(node.left, item, aabb, depth + 1);\n                return;\n            }\n        }\n        if (!node.right) {\n            const aabbRight = nodeAABB.slice();\n            aabbRight[dim] = ((nodeAABB[dim] + nodeAABB[dim + 2]) / 2.0);\n            node.right = {\n                aabb: aabbRight\n            };\n            if (containsAABB2(aabbRight, aabb)) {\n                this.#insertItem(node.right, item, aabb, depth + 1);\n                return;\n            }\n        }\n        node.items = node.items || [];\n        node.items.push(item);\n    }\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatcherWrapper = void 0;\r\n/**\r\n * Hides the implementation of the event dispatcher. Will expose methods that\r\n * are relevent to the event.\r\n *\r\n * @export\r\n * @class DispatcherWrapper\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherWrapper {\r\n    /**\r\n     * Creates an instance of DispatcherWrapper.\r\n     * @param {ISubscribable<TEventHandler>} dispatcher\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    constructor(dispatcher) {\r\n        this._subscribe = (fn) => dispatcher.subscribe(fn);\r\n        this._unsubscribe = (fn) => dispatcher.unsubscribe(fn);\r\n        this._one = (fn) => dispatcher.one(fn);\r\n        this._has = (fn) => dispatcher.has(fn);\r\n        this._clear = () => dispatcher.clear();\r\n        this._count = () => dispatcher.count;\r\n        this._onSubscriptionChange = () => dispatcher.onSubscriptionChange;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get onSubscriptionChange() {\r\n        return this._onSubscriptionChange();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    get count() {\r\n        return this._count();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    subscribe(fn) {\r\n        return this._subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsubscribe(fn) {\r\n        this._unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @returns {() => void} A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    one(fn) {\r\n        return this._one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    has(fn) {\r\n        return this._has(fn);\r\n    }\r\n    /**\r\n     * Clears all the subscriptions.\r\n     *\r\n     * @memberOf DispatcherWrapper\r\n     */\r\n    clear() {\r\n        this._clear();\r\n    }\r\n}\r\nexports.DispatcherWrapper = DispatcherWrapper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Subscription = void 0;\r\n/**\r\n * Stores a handler. Manages execution meta data.\r\n * @class Subscription\r\n * @template TEventHandler\r\n */\r\nclass Subscription {\r\n    /**\r\n     * Creates an instance of Subscription.\r\n     *\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n            }\r\n            else {\r\n                fn.apply(scope, args);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Subscription = Subscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventManagement = void 0;\r\n/**\r\n * Allows the user to interact with the event.\r\n *\r\n * @export\r\n * @class EventManagement\r\n * @implements {IEventManagement}\r\n */\r\nclass EventManagement {\r\n    /**\r\n     * Creates an instance of EventManagement.\r\n     * @param {() => void} unsub An unsubscribe handler.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    constructor(unsub) {\r\n        this.unsub = unsub;\r\n        this.propagationStopped = false;\r\n    }\r\n    /**\r\n     * Stops the propagation of the event.\r\n     * Cannot be used when async dispatch is done.\r\n     *\r\n     * @memberOf EventManagement\r\n     */\r\n    stopPropagation() {\r\n        this.propagationStopped = true;\r\n    }\r\n}\r\nexports.EventManagement = EventManagement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.DispatcherBase = void 0;\r\nconst DispatcherWrapper_1 = require(\"./DispatcherWrapper\");\r\nconst Subscription_1 = require(\"../events/Subscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\n/**\r\n * Base class for implementation of the dispatcher. It facilitates the subscribe\r\n * and unsubscribe methods based on generic handlers. The TEventType specifies\r\n * the type of event that should be exposed. Use the asEvent to expose the\r\n * dispatcher as event.\r\n *\r\n * @export\r\n * @abstract\r\n * @class DispatcherBase\r\n * @implements {ISubscribable<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass DispatcherBase {\r\n    constructor() {\r\n        /**\r\n         * The subscriptions.\r\n         *\r\n         * @protected\r\n         *\r\n         * @memberOf DispatcherBase\r\n         */\r\n        this._subscriptions = new Array();\r\n    }\r\n    /**\r\n     * Returns the number of subscriptions.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get count() {\r\n        return this._subscriptions.length;\r\n    }\r\n    /**\r\n     * Triggered when subscriptions are changed (added or removed).\r\n     *\r\n     * @readonly\r\n     * @type {ISubscribable<SubscriptionChangeEventHandler>}\r\n     * @memberOf DispatcherBase\r\n     */\r\n    get onSubscriptionChange() {\r\n        if (this._onSubscriptionChange == null) {\r\n            this._onSubscriptionChange = new SubscriptionChangeEventDispatcher();\r\n        }\r\n        return this._onSubscriptionChange.asEvent();\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    subscribe(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, false));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    sub(fn) {\r\n        return this.subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     *\r\n     * @param {TEventHandler} fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    one(fn) {\r\n        if (fn) {\r\n            this._subscriptions.push(this.createSubscription(fn, true));\r\n            this.triggerSubscriptionChange();\r\n        }\r\n        return () => {\r\n            this.unsubscribe(fn);\r\n        };\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    has(fn) {\r\n        if (!fn)\r\n            return false;\r\n        return this._subscriptions.some((sub) => sub.handler == fn);\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsubscribe(fn) {\r\n        if (!fn)\r\n            return;\r\n        let changes = false;\r\n        for (let i = 0; i < this._subscriptions.length; i++) {\r\n            if (this._subscriptions[i].handler == fn) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n                break;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     *\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    unsub(fn) {\r\n        this.unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let s = sub;\r\n            s.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n    /**\r\n     * Creates a subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce True if the handler should run only one.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new Subscription_1.Subscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Cleans up subs that ran and should run only once.\r\n     *\r\n     * @protected\r\n     * @param {ISubscription<TEventHandler>} sub The subscription.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    cleanup(sub) {\r\n        let changes = false;\r\n        if (sub.isOnce && sub.isExecuted) {\r\n            let i = this._subscriptions.indexOf(sub);\r\n            if (i > -1) {\r\n                this._subscriptions.splice(i, 1);\r\n                changes = true;\r\n            }\r\n        }\r\n        if (changes) {\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISubscribable<TEventHandler>}\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    asEvent() {\r\n        if (this._wrap == null) {\r\n            this._wrap = new DispatcherWrapper_1.DispatcherWrapper(this);\r\n        }\r\n        return this._wrap;\r\n    }\r\n    /**\r\n     * Clears the subscriptions.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    clear() {\r\n        if (this._subscriptions.length != 0) {\r\n            this._subscriptions.splice(0, this._subscriptions.length);\r\n            this.triggerSubscriptionChange();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers the subscription change event.\r\n     *\r\n     * @private\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    triggerSubscriptionChange() {\r\n        if (this._onSubscriptionChange != null) {\r\n            this._onSubscriptionChange.dispatch(this.count);\r\n        }\r\n    }\r\n}\r\nexports.DispatcherBase = DispatcherBase;\r\n/**\r\n * Dispatcher for subscription changes.\r\n *\r\n * @export\r\n * @class SubscriptionChangeEventDispatcher\r\n * @extends {DispatcherBase<SubscriptionChangeEventHandler>}\r\n */\r\nclass SubscriptionChangeEventDispatcher extends DispatcherBase {\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {number} count The currrent number of subscriptions.\r\n     *\r\n     * @memberOf SubscriptionChangeEventDispatcher\r\n     */\r\n    dispatch(count) {\r\n        this._dispatch(false, this, arguments);\r\n    }\r\n}\r\nexports.SubscriptionChangeEventDispatcher = SubscriptionChangeEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatchError = void 0;\r\n/**\r\n * Indicates an error with dispatching.\r\n *\r\n * @export\r\n * @class DispatchError\r\n * @extends {Error}\r\n */\r\nclass DispatchError extends Error {\r\n    /**\r\n     * Creates an instance of DispatchError.\r\n     * @param {string} message The message.\r\n     *\r\n     * @memberOf DispatchError\r\n     */\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n}\r\nexports.DispatchError = DispatchError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventListBase = void 0;\r\n/**\r\n * Base class for event lists classes. Implements the get and remove.\r\n *\r\n * @export\r\n * @abstract\r\n * @class EventListBaset\r\n * @template TEventDispatcher The type of event dispatcher.\r\n */\r\nclass EventListBase {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name The name of the event.\r\n     * @returns {TEventDispatcher} The disptacher.\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    get(name) {\r\n        let event = this._events[name];\r\n        if (event) {\r\n            return event;\r\n        }\r\n        event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     *\r\n     * @param {string} name\r\n     *\r\n     * @memberOf EventListBase\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n}\r\nexports.EventListBase = EventListBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HandlingBase = void 0;\r\n/**\r\n * Base class that implements event handling. With a an\r\n * event list this base class will expose events that can be\r\n * subscribed to. This will give your class generic events.\r\n *\r\n * @export\r\n * @abstract\r\n * @class HandlingBase\r\n * @template TEventHandler The type of event handler.\r\n * @template TDispatcher The type of dispatcher.\r\n * @template TList The type of event list.\r\n */\r\nclass HandlingBase {\r\n    /**\r\n     * Creates an instance of HandlingBase.\r\n     * @param {TList} events The event list. Used for event management.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    constructor(events) {\r\n        this.events = events;\r\n    }\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    one(name, fn) {\r\n        this.events.get(name).one(fn);\r\n    }\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    has(name, fn) {\r\n        return this.events.get(name).has(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    subscribe(name, fn) {\r\n        this.events.get(name).subscribe(fn);\r\n    }\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    sub(name, fn) {\r\n        this.subscribe(name, fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsubscribe(name, fn) {\r\n        this.events.get(name).unsubscribe(fn);\r\n    }\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param {string} name The name of the event.\r\n     * @param {TEventHandler} fn The event handler.\r\n     *\r\n     * @memberOf HandlingBase\r\n     */\r\n    unsub(name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    }\r\n}\r\nexports.HandlingBase = HandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSubscription = void 0;\r\n/**\r\n * Subscription implementation for events with promises.\r\n *\r\n * @export\r\n * @class PromiseSubscription\r\n * @implements {ISubscription<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseSubscription {\r\n    /**\r\n     * Creates an instance of PromiseSubscription.\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    constructor(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         *\r\n         * @memberOf PromiseSubscription\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     *\r\n     * @memberOf PromiseSubscription\r\n     */\r\n    async execute(executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            //TODO: do we need to cast to any -- seems yuck\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(() => {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n                return;\r\n            }\r\n            let result = fn.apply(scope, args);\r\n            await result;\r\n        }\r\n    }\r\n}\r\nexports.PromiseSubscription = PromiseSubscription;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseDispatcherBase = void 0;\r\nconst PromiseSubscription_1 = require(\"../events/PromiseSubscription\");\r\nconst EventManagement_1 = require(\"../management/EventManagement\");\r\nconst DispatcherBase_1 = require(\"./DispatcherBase\");\r\nconst DispatchError_1 = require(\"./DispatchError\");\r\n/**\r\n * Dispatcher base for dispatchers that use promises. Each promise\r\n * is awaited before the next is dispatched, unless the event is\r\n * dispatched with the executeAsync flag.\r\n *\r\n * @export\r\n * @abstract\r\n * @class PromiseDispatcherBase\r\n * @extends {DispatcherBase<TEventHandler>}\r\n * @template TEventHandler The type of event handler.\r\n */\r\nclass PromiseDispatcherBase extends DispatcherBase_1.DispatcherBase {\r\n    /**\r\n     * The normal dispatch cannot be used in this class.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    _dispatch(executeAsync, scope, args) {\r\n        throw new DispatchError_1.DispatchError(\"_dispatch not supported. Use _dispatchAsPromise.\");\r\n    }\r\n    /**\r\n     * Crates a new subscription.\r\n     *\r\n     * @protected\r\n     * @param {TEventHandler} handler The handler.\r\n     * @param {boolean} isOnce Indicates if the handler should only run once.\r\n     * @returns {ISubscription<TEventHandler>} The subscription.\r\n     *\r\n     * @memberOf PromiseDispatcherBase\r\n     */\r\n    createSubscription(handler, isOnce) {\r\n        return new PromiseSubscription_1.PromiseSubscription(handler, isOnce);\r\n    }\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync `True` if the even should be executed async.\r\n     * @param {*} scope The scope of the event. The scope becomes the `this` for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     * @returns {(IPropagationStatus | null)} The propagation status, or if an `executeAsync` is used `null`.\r\n     *\r\n     * @memberOf DispatcherBase\r\n     */\r\n    async _dispatchAsPromise(executeAsync, scope, args) {\r\n        //execute on a copy because of bug #9\r\n        for (let sub of [...this._subscriptions]) {\r\n            let ev = new EventManagement_1.EventManagement(() => this.unsub(sub.handler));\r\n            let nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            let ps = sub;\r\n            await ps.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return { propagationStopped: true };\r\n            }\r\n        }\r\n        if (executeAsync) {\r\n            return null;\r\n        }\r\n        return { propagationStopped: false };\r\n    }\r\n}\r\nexports.PromiseDispatcherBase = PromiseDispatcherBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubscriptionChangeEventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nconst DispatcherBase_1 = require(\"./dispatching/DispatcherBase\");\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return DispatcherBase_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"SubscriptionChangeEventDispatcher\", { enumerable: true, get: function () { return DispatcherBase_1.SubscriptionChangeEventDispatcher; } });\r\nconst DispatchError_1 = require(\"./dispatching/DispatchError\");\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return DispatchError_1.DispatchError; } });\r\nconst DispatcherWrapper_1 = require(\"./dispatching/DispatcherWrapper\");\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return DispatcherWrapper_1.DispatcherWrapper; } });\r\nconst EventListBase_1 = require(\"./dispatching/EventListBase\");\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return EventListBase_1.EventListBase; } });\r\nconst EventManagement_1 = require(\"./management/EventManagement\");\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return EventManagement_1.EventManagement; } });\r\nconst HandlingBase_1 = require(\"./handling/HandlingBase\");\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return HandlingBase_1.HandlingBase; } });\r\nconst PromiseDispatcherBase_1 = require(\"./dispatching/PromiseDispatcherBase\");\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return PromiseDispatcherBase_1.PromiseDispatcherBase; } });\r\nconst PromiseSubscription_1 = require(\"./events/PromiseSubscription\");\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return PromiseSubscription_1.PromiseSubscription; } });\r\nconst Subscription_1 = require(\"./events/Subscription\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return Subscription_1.Subscription; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class EventDispatcher\r\n * @extends {DispatcherBase<IEventHandler<TSender, TArgs>>}\r\n * @implements {IEvent<TSender, TArgs>}\r\n * @template TSender The sender type.\r\n * @template TArgs The event arguments type.\r\n */\r\nclass EventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of EventDispatcher.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     * @returns {IPropagationStatus} The propagation status to interact with the event\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatch(sender, args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event in an async way. Does not support event interaction.\r\n     *\r\n     * @param {TSender} sender The sender.\r\n     * @param {TArgs} args The arguments.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {IEvent<TSender, TArgs>} The event.\r\n     *\r\n     * @memberOf EventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.EventDispatcher = EventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass EventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.EventList = EventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst EventList_1 = require(\"./EventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass EventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new EventList_1.EventList());\r\n    }\r\n}\r\nexports.EventHandlingBase = EventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new EventDispatcher_1.EventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformEventList = NonUniformEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = void 0;\r\nconst EventDispatcher_1 = require(\"./EventDispatcher\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return EventDispatcher_1.EventDispatcher; } });\r\nconst EventHandlingBase_1 = require(\"./EventHandlingBase\");\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return EventHandlingBase_1.EventHandlingBase; } });\r\nconst EventList_1 = require(\"./EventList\");\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return EventList_1.EventList; } });\r\nconst NonUniformEventList_1 = require(\"./NonUniformEventList\");\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return NonUniformEventList_1.NonUniformEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class SimpleEventDispatcher\r\n * @extends {DispatcherBase<ISimpleEventHandler<TArgs>>}\r\n * @implements {ISimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass SimpleEventDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Creates an instance of SimpleEventDispatcher.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatch(args) {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TArgs} args The arguments object.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISimpleEvent<TArgs>} The event.\r\n     *\r\n     * @memberOf SimpleEventDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass SimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.SimpleEventList = SimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass SimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new SimpleEventList_1.SimpleEventList());\r\n    }\r\n}\r\nexports.SimpleEventHandlingBase = SimpleEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new SimpleEventDispatcher_1.SimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformSimpleEventList = NonUniformSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = void 0;\r\nconst SimpleEventDispatcher_1 = require(\"./SimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return SimpleEventDispatcher_1.SimpleEventDispatcher; } });\r\nconst SimpleEventHandlingBase_1 = require(\"./SimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return SimpleEventHandlingBase_1.SimpleEventHandlingBase; } });\r\nconst NonUniformSimpleEventList_1 = require(\"./NonUniformSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return NonUniformSimpleEventList_1.NonUniformSimpleEventList; } });\r\nconst SimpleEventList_1 = require(\"./SimpleEventList\");\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return SimpleEventList_1.SimpleEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n *\r\n * @export\r\n * @class SignalDispatcher\r\n * @extends {DispatcherBase<ISignalHandler>}\r\n * @implements {ISignal}\r\n */\r\nclass SignalDispatcher extends ste_core_1.DispatcherBase {\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatch() {\r\n        const result = this._dispatch(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal without waiting for the result.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatch(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     *\r\n     * @returns {ISignal} The signal.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.SignalDispatcher = SignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n *\r\n * @export\r\n * @class SignalList\r\n * @extends {EventListBase<SignalDispatcher>}\r\n */\r\nclass SignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates an instance of SignalList.\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     *\r\n     * @protected\r\n     * @returns {SignalDispatcher}\r\n     *\r\n     * @memberOf SignalList\r\n     */\r\n    createDispatcher() {\r\n        return new SignalDispatcher_1.SignalDispatcher();\r\n    }\r\n}\r\nexports.SignalList = SignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst SignalList_1 = require(\"./SignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n *\r\n * @export\r\n * @abstract\r\n * @class SignalHandlingBase\r\n * @extends {HandlingBase<ISignalHandler, SignalDispatcher, SignalList>}\r\n * @implements {ISignalHandling}\r\n */\r\nclass SignalHandlingBase extends ste_core_1.HandlingBase {\r\n    /**\r\n     * Creates an instance of SignalHandlingBase.\r\n     *\r\n     * @memberOf SignalHandlingBase\r\n     */\r\n    constructor() {\r\n        super(new SignalList_1.SignalList());\r\n    }\r\n}\r\nexports.SignalHandlingBase = SignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = void 0;\r\nconst SignalDispatcher_1 = require(\"./SignalDispatcher\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return SignalDispatcher_1.SignalDispatcher; } });\r\nconst SignalHandlingBase_1 = require(\"./SignalHandlingBase\");\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return SignalHandlingBase_1.SignalHandlingBase; } });\r\nconst SignalList_1 = require(\"./SignalList\");\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return SignalList_1.SignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n *\r\n * @export\r\n * @class PromiseEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseEventHandler<TSender, TArgs>>}\r\n * @implements {IPromiseEvent<TSender, TArgs>}\r\n * @template TSender\r\n * @template TArgs\r\n */\r\nclass PromiseEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new EventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     * @returns {Promise<IPropagationStatus>} The status.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    async dispatch(sender, args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for the result.\r\n     *\r\n     * @param {TSender} sender The sender object.\r\n     * @param {TArgs} args The argument object.\r\n     *\r\n     * @memberOf PromiseEventDispatcher\r\n     */\r\n    dispatchAsync(sender, args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseEventDispatcher = PromiseEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseEventList = PromiseEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseEventList_1.PromiseEventList());\r\n    }\r\n}\r\nexports.PromiseEventHandlingBase = PromiseEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseEventDispatcher_1.PromiseEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseEventList = NonUniformPromiseEventList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = void 0;\r\nconst PromiseEventDispatcher_1 = require(\"./PromiseEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return PromiseEventDispatcher_1.PromiseEventDispatcher; } });\r\nconst PromiseEventHandlingBase_1 = require(\"./PromiseEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return PromiseEventHandlingBase_1.PromiseEventHandlingBase; } });\r\nconst PromiseEventList_1 = require(\"./PromiseEventList\");\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return PromiseEventList_1.PromiseEventList; } });\r\nconst NonUniformPromiseEventList_1 = require(\"./NonUniformPromiseEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return NonUniformPromiseEventList_1.NonUniformPromiseEventList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n */\r\nclass PromiseSignalDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SignalDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the signal.\r\n     *\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     *\r\n     * @memberOf SignalDispatcher\r\n     */\r\n    async dispatch() {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the signal threaded.\r\n     */\r\n    dispatchAsync() {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSignalDispatcher = PromiseSignalDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSignalList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SignalList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSignalDispatcher_1.PromiseSignalDispatcher();\r\n    }\r\n}\r\nexports.PromiseSignalList = PromiseSignalList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSignalHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSignalList_1.PromiseSignalList());\r\n    }\r\n}\r\nexports.PromiseSignalHandlingBase = PromiseSignalHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Promise Signals\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = void 0;\r\nconst PromiseSignalDispatcher_1 = require(\"./PromiseSignalDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return PromiseSignalDispatcher_1.PromiseSignalDispatcher; } });\r\nconst PromiseSignalHandlingBase_1 = require(\"./PromiseSignalHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return PromiseSignalHandlingBase_1.PromiseSignalHandlingBase; } });\r\nconst PromiseSignalList_1 = require(\"./PromiseSignalList\");\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return PromiseSignalList_1.PromiseSignalList; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventDispatcher = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n *\r\n * @export\r\n * @class PromiseSimpleEventDispatcher\r\n * @extends {PromiseDispatcherBase<IPromiseSimpleEventHandler<TArgs>>}\r\n * @implements {IPromiseSimpleEvent<TArgs>}\r\n * @template TArgs\r\n */\r\nclass PromiseSimpleEventDispatcher extends ste_core_1.PromiseDispatcherBase {\r\n    /**\r\n     * Creates a new SimpleEventDispatcher instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param args The arguments object.\r\n     * @returns {IPropagationStatus} The status of the dispatch.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    async dispatch(args) {\r\n        const result = await this._dispatchAsPromise(false, this, arguments);\r\n        if (result == null) {\r\n            throw new ste_core_1.DispatchError(\"Got `null` back from dispatch.\");\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Dispatches the event without waiting for it to complete.\r\n     * @param args The argument object.\r\n     * @memberOf PromiseSimpleEventDispatcher\r\n     */\r\n    dispatchAsync(args) {\r\n        this._dispatchAsPromise(true, this, arguments);\r\n    }\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    asEvent() {\r\n        return super.asEvent();\r\n    }\r\n}\r\nexports.PromiseSimpleEventDispatcher = PromiseSimpleEventDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = void 0;\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nclass NonUniformPromiseSimpleEventList {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    get(name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        const event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    }\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    remove(name) {\r\n        delete this._events[name];\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.NonUniformPromiseSimpleEventList = NonUniformPromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventList = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nclass PromiseSimpleEventList extends ste_core_1.EventListBase {\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    createDispatcher() {\r\n        return new PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher();\r\n    }\r\n}\r\nexports.PromiseSimpleEventList = PromiseSimpleEventList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseSimpleEventHandlingBase = void 0;\r\nconst ste_core_1 = require(\"ste-core\");\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nclass PromiseSimpleEventHandlingBase extends ste_core_1.HandlingBase {\r\n    constructor() {\r\n        super(new PromiseSimpleEventList_1.PromiseSimpleEventList());\r\n    }\r\n}\r\nexports.PromiseSimpleEventHandlingBase = PromiseSimpleEventHandlingBase;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = void 0;\r\nconst NonUniformPromiseSimpleEventList_1 = require(\"./NonUniformPromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return NonUniformPromiseSimpleEventList_1.NonUniformPromiseSimpleEventList; } });\r\nconst PromiseSimpleEventDispatcher_1 = require(\"./PromiseSimpleEventDispatcher\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return PromiseSimpleEventDispatcher_1.PromiseSimpleEventDispatcher; } });\r\nconst PromiseSimpleEventHandlingBase_1 = require(\"./PromiseSimpleEventHandlingBase\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return PromiseSimpleEventHandlingBase_1.PromiseSimpleEventHandlingBase; } });\r\nconst PromiseSimpleEventList_1 = require(\"./PromiseSimpleEventList\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return PromiseSimpleEventList_1.PromiseSimpleEventList; } });\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformPromiseSimpleEventList = exports.PromiseSimpleEventList = exports.PromiseSimpleEventHandlingBase = exports.PromiseSimpleEventDispatcher = exports.PromiseSignalList = exports.PromiseSignalHandlingBase = exports.PromiseSignalDispatcher = exports.NonUniformPromiseEventList = exports.PromiseEventList = exports.PromiseEventHandlingBase = exports.PromiseEventDispatcher = exports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = exports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = exports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = exports.HandlingBase = exports.PromiseDispatcherBase = exports.PromiseSubscription = exports.DispatchError = exports.EventManagement = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = exports.Subscription = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return ste_core_1.Subscription; } });\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return ste_core_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return ste_core_1.DispatcherWrapper; } });\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return ste_core_1.EventListBase; } });\r\nObject.defineProperty(exports, \"EventManagement\", { enumerable: true, get: function () { return ste_core_1.EventManagement; } });\r\nObject.defineProperty(exports, \"DispatchError\", { enumerable: true, get: function () { return ste_core_1.DispatchError; } });\r\nObject.defineProperty(exports, \"PromiseSubscription\", { enumerable: true, get: function () { return ste_core_1.PromiseSubscription; } });\r\nObject.defineProperty(exports, \"PromiseDispatcherBase\", { enumerable: true, get: function () { return ste_core_1.PromiseDispatcherBase; } });\r\nObject.defineProperty(exports, \"HandlingBase\", { enumerable: true, get: function () { return ste_core_1.HandlingBase; } });\r\nvar ste_events_1 = require(\"ste-events\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return ste_events_1.EventDispatcher; } });\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return ste_events_1.EventHandlingBase; } });\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return ste_events_1.EventList; } });\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return ste_events_1.NonUniformEventList; } });\r\nvar ste_simple_events_1 = require(\"ste-simple-events\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.NonUniformSimpleEventList; } });\r\nvar ste_signals_1 = require(\"ste-signals\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return ste_signals_1.SignalDispatcher; } });\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return ste_signals_1.SignalHandlingBase; } });\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return ste_signals_1.SignalList; } });\r\nvar ste_promise_events_1 = require(\"ste-promise-events\");\r\nObject.defineProperty(exports, \"PromiseEventDispatcher\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.PromiseEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseEventList\", { enumerable: true, get: function () { return ste_promise_events_1.NonUniformPromiseEventList; } });\r\nvar ste_promise_signals_1 = require(\"ste-promise-signals\");\r\nObject.defineProperty(exports, \"PromiseSignalDispatcher\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSignalHandlingBase\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSignalList\", { enumerable: true, get: function () { return ste_promise_signals_1.PromiseSignalList; } });\r\nvar ste_promise_simple_events_1 = require(\"ste-promise-simple-events\");\r\nObject.defineProperty(exports, \"PromiseSimpleEventDispatcher\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"PromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.PromiseSimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformPromiseSimpleEventList\", { enumerable: true, get: function () { return ste_promise_simple_events_1.NonUniformPromiseSimpleEventList; } });\r\n","/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fmath.svg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:30px; height:140px;\" src=\"media://images/matrix_icon.png\"/>\n *\n * # xeokit Matrix and Vector Math Library\n *\n * ---\n *\n * ### *Math functions for 3D/2D matrices, quaternions and vectors*\n *\n * ---\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/matrix\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as matrix from \"@xeokit/matrix\";\n *\n * //..\n * ````\n *\n * @module @xeokit/matrix\n */\nimport {clamp, DEGTORAD, FloatArrayParam, newFloatArray} from \"@xeokit/math\";\n\n\nconst tempVec4a: FloatArrayParam = createVec4();\nconst tempVec3 = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\nconst tempVec3d = createVec3();\nconst tempVec3e = createVec3();\nconst tempVec4b = createVec4();\n\n/**\n * Returns the dot product of two three-element vectors.\n */\nexport function dotVec3(u: FloatArrayParam, v: FloatArrayParam): number {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2]);\n}\n\n/**\n * Returns a new, uninitialized two-element vector.\n */\nexport function createVec2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values || 2);\n}\n\n/**\n * Returns a new, uninitialized three-element vector.\n */\nexport function createVec3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 3);\n}\n\n/**\n * Returns a new, uninitialized four-element vector.\n */\nexport function createVec4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values || 4);\n}\n\n/**\n * Negates a three-element vector.\n */\nexport function negateVec3(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    return dest;\n}\n\n/**\n * Negates a four-element vector.\n */\nexport function negateVec4(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    dest[3] = -v[3];\n    return dest;\n}\n\n/**\n * Adds one four-element vector to another.\n */\nexport function addVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    dest[3] = u[3] + v[3];\n    return dest;\n}\n\n/**\n * Adds a scalar value to each element of a four-element vector.\n */\nexport function addVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    dest[3] = v[3] + s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a four-element vector by a scalar.\n */\nexport function mulVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    dest[3] = v[3] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a three-element vector by a scalar.\n */\nexport function mulVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a two-element vector by a scalar.\n */\nexport function mulVec2Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    return dest;\n}\n\n/**\n * Adds one three-element vector to another.\n */\nexport function addVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    return dest;\n}\n\n/**\n */\nexport function addVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    return dest;\n}\n\n/**\n * Subtracts one four-element vector from another.\n */\nexport function subVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    dest[3] = u[3] - v[3];\n    return dest;\n}\n\n/**\n * Returns true if the two 3-element vectors are the same.\n */\nexport function compareVec3(v1: FloatArrayParam, v2: FloatArrayParam): boolean {\n    return (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] === v2[2]);\n}\n\n/**\n * Subtracts one three-element vector from another.\n */\nexport function subVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    return dest;\n}\n\n/**\n * Subtracts one two-element vector from another.\n */\nexport function subVec2(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    return dest;\n}\n\n/**\n * Get the geometric mean of the vectors.\n */\nexport function geometricMeanVec2(...vectors: any) {\n    const geometricMean = new Float32Array(vectors[0]);\n    for (let i = 1; i < vectors.length; i++) {\n        geometricMean[0] += vectors[i][0];\n        geometricMean[1] += vectors[i][1];\n    }\n    geometricMean[0] /= vectors.length;\n    geometricMean[1] /= vectors.length;\n    return geometricMean;\n}\n\n/**\n * Subtracts a scalar value from each element of a four-element vector.\n */\nexport function subVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] - s;\n    dest[1] = v[1] - s;\n    dest[2] = v[2] - s;\n    dest[3] = v[3] - s;\n    return dest;\n}\n\n/**\n * Sets each element of a 4-element vector to a scalar value minus the value of that element.\n * @method subScalarVec4\n * @static\n * @param {Array(Number)} v The vector\n * @param s The scalar\n * @param  {Array(Number)} [dest] Destination vector\n * @return {Array(Number)} dest if specified, v otherwise\n */\nexport function subScalarVec4(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s - v[0];\n    dest[1] = s - v[1];\n    dest[2] = s - v[2];\n    dest[3] = s - v[3];\n    return dest;\n}\n\n/**\n * Multiplies one three-element vector by another.\n */\nexport function mulVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] * v[0];\n    dest[1] = u[1] * v[1];\n    dest[2] = u[2] * v[2];\n    dest[3] = u[3] * v[3];\n    return dest;\n}\n\n\n/**\n * Divides one three-element vector by another.\n */\nexport function divVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    return dest;\n}\n\n/**\n * Divides one four-element vector by another.\n */\nexport function divVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    dest[3] = u[3] / v[3];\n    return dest;\n}\n\n/**\n * Divides a scalar by a three-element vector, returning a new vector.\n */\nexport function divScalarVec3(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    return dest;\n}\n\n/**\n * Divides a three-element vector by a scalar.\n */\nexport function divVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    return dest;\n}\n\n/**\n * Divides a four-element vector by a scalar.\n */\nexport function divVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    dest[3] = v[3] / s;\n    return dest;\n}\n\n/**\n * Divides a scalar by a four-element vector, returning a new vector.\n */\nexport function divScalarVec4(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    dest[3] = s / v[3];\n    return dest;\n}\n\n/**\n * Returns the dot product of two four-element vectors.\n */\nexport function dotVec4(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2] + u[3] * v[3]);\n}\n\n/**\n * Returns the cross product of two four-element vectors.\n */\nexport function cross3Vec4(u: FloatArrayParam, v: FloatArrayParam) {\n    const u0 = u[0];\n    const u1 = u[1];\n    const u2 = u[2];\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return [\n        u1 * v2 - u2 * v1,\n        u2 * v0 - u0 * v2,\n        u0 * v1 - u1 * v0,\n        0.0];\n}\n\n/**\n * Returns the cross product of two three-element vectors.\n */\nexport function cross3Vec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    const x = u[0];\n    const y = u[1];\n    const z = u[2];\n    const x2 = v[0];\n    const y2 = v[1];\n    const z2 = v[2];\n    dest[0] = y * z2 - z * y2;\n    dest[1] = z * x2 - x * z2;\n    dest[2] = x * y2 - y * x2;\n    return dest;\n}\n\nexport function sqLenVec4(v: FloatArrayParam) { // TODO\n    return dotVec4(v, v);\n}\n\n/**\n * Returns the length of a four-element vector.\n * @method lenVec4\n * @static\n * @param {Array(Number)} v The vector\n * @return The length\n */\nexport function lenVec4(v: FloatArrayParam) {\n    return Math.sqrt(sqLenVec4(v));\n}\n\n\n/**\n * Returns the dot product of two two-element vectors.\n */\nexport function dotVec2(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1]);\n}\n\n\nexport function sqLenVec3(v: FloatArrayParam) {\n    return dotVec3(v, v);\n}\n\n\nexport function sqLenVec2(v: FloatArrayParam) {\n    return dotVec2(v, v);\n}\n\n/**\n * Returns the length of a three-element vector.\n */\nexport function lenVec3(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec3(v));\n}\n\nexport const distVec3 = ((() => {\n    const vec = createVec3();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec3(subVec3(v, w, vec));\n}))()\n\n/**\n * Returns the length of a two-element vector.\n */\nexport function lenVec2(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec2(v));\n}\n\n/**\n * Linearly interpolates between two 3D vectors.\n */\nexport function lerpVec3(t: number, t1: number, t2: number, p1: FloatArrayParam, p2: FloatArrayParam, dest: any) {\n    const result = dest || createVec3();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = p1[0] + (f * (p2[0] - p1[0]));\n    result[1] = p1[1] + (f * (p2[1] - p1[1]));\n    result[2] = p1[2] + (f * (p2[2] - p1[2]));\n    return result;\n}\n\nexport const distVec2 = ((() => {\n    const vec = createVec2();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec2(subVec2(v, w, vec));\n}))();\n\n/**\n * @method rcpVec3\n * @static\n * @param v createVec3\n * @param dest createVec3 - optional destination\n * @return [] dest if specified, v otherwise\n *\n */\nexport function rcpVec3(v: FloatArrayParam, dest: FloatArrayParam) {\n    return divScalarVec3(1.0, v, dest);\n}\n\n/**\n * Normalizes a four-element vector\n *\n */\nexport function normalizeVec4(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec4(v);\n    return mulVec4Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a three-element vector\n * @method normalizeVec4\n * @static\n */\nexport function normalizeVec3(v: FloatArrayParam, dest?: FloatArrayParam) {\n    const f = 1.0 / lenVec3(v);\n    return mulVec3Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a two-element vector\n */\nexport function normalizeVec2(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec2(v);\n    return mulVec2Scalar(v, f, dest);\n}\n\n/**\n * Gets the angle between two vectors\n */\nexport function angleVec3(v: FloatArrayParam, w: FloatArrayParam) {\n    let theta = dotVec3(v, w) / (Math.sqrt(sqLenVec3(v) * sqLenVec3(w)));\n    theta = theta < -1 ? -1 : (theta > 1 ? 1 : theta);  // Clamp to handle numerical problems\n    return Math.acos(theta);\n}\n\n/**\n * Creates a three-element vector from the rotation part of a sixteen-element matrix.\n */\nexport const vec3FromMat4Scale: Function = ((() => {\n\n    const tempVec3 = createVec3();\n\n    return function (m: FloatArrayParam, dest: FloatArrayParam) {\n\n        tempVec3[0] = m[0];\n        tempVec3[1] = m[1];\n        tempVec3[2] = m[2];\n\n        dest[0] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[4];\n        tempVec3[1] = m[5];\n        tempVec3[2] = m[6];\n\n        dest[1] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[8];\n        tempVec3[1] = m[9];\n        tempVec3[2] = m[10];\n\n        dest[2] = lenVec3(tempVec3);\n\n        return dest;\n    };\n}))();\n\n/**\n * Converts an n-element vector to a JSON-serializable\n * array with values rounded to two decimal places.\n */\nexport function vecToArray(v: FloatArrayParam): FloatArrayParam {\n    v = Array.prototype.slice.call(v);\n    for (let i = 0, len = v.length; i < len; i++) {\n        v[i] = trunc(v[i]);\n    }\n    return v;\n}\n\nfunction trunc(v: number) {\n    return Math.round(v * 100000) / 100000\n}\n\n\n/**\n * Calculates the normal vector of a triangle.\n */\nexport function triangleNormal(a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, normal: FloatArrayParam = createVec3()): FloatArrayParam {\n    const p1x = b[0] - a[0];\n    const p1y = b[1] - a[1];\n    const p1z = b[2] - a[2];\n\n    const p2x = c[0] - a[0];\n    const p2y = c[1] - a[1];\n    const p2z = c[2] - a[2];\n\n    const p3x = p1y * p2z - p1z * p2y;\n    const p3y = p1z * p2x - p1x * p2z;\n    const p3z = p1x * p2y - p1y * p2x;\n\n    const mag = Math.sqrt(p3x * p3x + p3y * p3y + p3z * p3z);\n    if (mag === 0) {\n        normal[0] = 0;\n        normal[1] = 0;\n        normal[2] = 0;\n    } else {\n        normal[0] = p3x / mag;\n        normal[1] = p3y / mag;\n        normal[2] = p3z / mag;\n    }\n\n    return normal\n}\n\n\n/**\n * Returns a new, uninitialized 3x3 matrix.\n */\nexport function createMat3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new newFloatArray(values || 9);\n}\n\n/**\n * Returns a new, uninitialized 4x4 matrix.\n */\nexport function createMat4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\nconst tempMat4a = createMat4();\nconst tempMat4b = createMat4();\n\n/**\n * Returns true if the two 4x4 matrices are the same.\n * @param m1\n * @param m2\n * @returns {boolean}\n */\nexport function compareMat4(m1: FloatArrayParam, m2: FloatArrayParam): boolean {\n    return m1[0] === m2[0] &&\n        m1[1] === m2[1] &&\n        m1[2] === m2[2] &&\n        m1[3] === m2[3] &&\n        m1[4] === m2[4] &&\n        m1[5] === m2[5] &&\n        m1[6] === m2[6] &&\n        m1[7] === m2[7] &&\n        m1[8] === m2[8] &&\n        m1[9] === m2[9] &&\n        m1[10] === m2[10] &&\n        m1[11] === m2[11] &&\n        m1[12] === m2[12] &&\n        m1[13] === m2[13] &&\n        m1[14] === m2[14] &&\n        m1[15] === m2[15];\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function perspectiveMat4(fovyrad: number, aspectratio: number, znear: number, zfar: number, m?: FloatArrayParam): FloatArrayParam {\n    const pmin = [];\n    const pmax = [];\n    pmin[2] = znear;\n    pmax[2] = zfar;\n    pmax[1] = pmin[2] * Math.tan(fovyrad / 2.0);\n    pmin[1] = -pmax[1];\n    pmax[0] = pmax[1] * aspectratio;\n    pmin[0] = -pmax[0];\n    return frustumMat4v(pmin, pmax, m);\n}\n\n/**\n * Returns a 4x4 perspective frustum projection matrix.\n */\nexport function frustumMat4v(fmin: FloatArrayParam, fmax: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = createMat4();\n    }\n    const fmin4 = [fmin[0], fmin[1], fmin[2], 0.0];\n    const fmax4 = [fmax[0], fmax[1], fmax[2], 0.0];\n    addVec4(fmax4, fmin4, tempMat4a);\n    subVec4(fmax4, fmin4, tempMat4b);\n    const t = 2.0 * fmin4[2];\n    const tempMat4b0 = tempMat4b[0];\n    const tempMat4b1 = tempMat4b[1];\n    const tempMat4b2 = tempMat4b[2];\n    m[0] = t / tempMat4b0;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    m[4] = 0.0;\n    m[5] = t / tempMat4b1;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    m[8] = tempMat4a[0] / tempMat4b0;\n    m[9] = tempMat4a[1] / tempMat4b1;\n    m[10] = -tempMat4a[2] / tempMat4b2;\n    m[11] = -1.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -t * fmax4[2] / tempMat4b2;\n    m[15] = 0.0;\n    return m;\n}\n\n/**\n * Returns a 4x4 orthographic projection matrix.\n */\nexport function orthoMat4c(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = 2.0 / rl;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 2.0 / tb;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = -2.0 / fn;\n    dest[11] = 0.0;\n    dest[12] = -(left + right) / rl;\n    dest[13] = -(top + bottom) / tb;\n    dest[14] = -(far + near) / fn;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function frustumMat4(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = (near * 2) / rl;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = (near * 2) / tb;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = (right + left) / rl;\n    dest[9] = (top + bottom) / tb;\n    dest[10] = -(far + near) / fn;\n    dest[11] = -1;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = -(far * near * 2) / fn;\n    dest[15] = 0;\n    return dest;\n}\n\n\n/**\n * Returns a 4x4 identity matrix.\n */\nexport function identityMat4(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = createMat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 1.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = 1.0;\n    dest[11] = 0.0;\n    dest[12] = 0.0;\n    dest[13] = 0.0;\n    dest[14] = 0.0;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 3x3 identity matrix.\n */\nexport function identityMat3(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = createMat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 1.0;\n    dest[5] = 0.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 1.0;\n    return dest;\n}\n\n/**\n * Tests if the given 4x4 matrix is the identity matrix.\n */\nexport function isIdentityMat4(m: FloatArrayParam): boolean {\n    if (m[0] !== 1.0 || m[1] !== 0.0 || m[2] !== 0.0 || m[3] !== 0.0 ||\n        m[4] !== 0.0 || m[5] !== 1.0 || m[6] !== 0.0 || m[7] !== 0.0 ||\n        m[8] !== 0.0 || m[9] !== 0.0 || m[10] !== 1.0 || m[11] !== 0.0 ||\n        m[12] !== 0.0 || m[13] !== 0.0 || m[14] !== 0.0 || m[15] !== 1.0) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Creates a 4x4 rotation matrix.\n */\nexport function rotationMat4v(anglerad: number, axis: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = createMat4();\n    }\n    const ax = normalizeVec4([axis[0], axis[1], axis[2], 0.0], []);\n    const s = Math.sin(anglerad);\n    const c = Math.cos(anglerad);\n    const q = 1.0 - c;\n    const x = ax[0];\n    const y = ax[1];\n    const z = ax[2];\n    let xy;\n    let yz;\n    let zx;\n    let xs;\n    let ys;\n    let zs;\n    xy = x * y;\n    yz = y * z;\n    zx = z * x;\n    xs = x * s;\n    ys = y * s;\n    zs = z * s;\n    m[0] = (q * x * x) + c;\n    m[1] = (q * xy) + zs;\n    m[2] = (q * zx) - ys;\n    m[3] = 0.0;\n    m[4] = (q * xy) - zs;\n    m[5] = (q * y * y) + c;\n    m[6] = (q * yz) + xs;\n    m[7] = 0.0;\n    m[8] = (q * zx) + ys;\n    m[9] = (q * yz) - xs;\n    m[10] = (q * z * z) + c;\n    m[11] = 0.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = 0.0;\n    m[15] = 1.0;\n    return m;\n}\n\n/**\n * Creates a 4x4 'lookat' viewing transform matrix.\n */\nexport function lookAtMat4v(pos: FloatArrayParam, target: FloatArrayParam, up: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = createMat4();\n    }\n    const posx = pos[0];\n    const posy = pos[1];\n    const posz = pos[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const targetx = target[0];\n    const targety = target[1];\n    const targetz = target[2];\n    if (posx === targetx && posy === targety && posz === targetz) {\n        return identityMat4();\n    }\n    let z0;\n    let z1;\n    let z2;\n    let x0;\n    let x1;\n    let x2;\n    let y0;\n    let y1;\n    let y2;\n    let len;\n    //createVec3.direction(eye, center, z);\n    z0 = posx - targetx;\n    z1 = posy - targety;\n    z2 = posz - targetz;\n    // normalize (no check needed for 0 because of early return)\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    //createVec3.normalize(createVec3.cross(up, z, x));\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n    //createVec3.normalize(createVec3.cross(z, x, y));\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n    dest[0] = x0;\n    dest[1] = y0;\n    dest[2] = z0;\n    dest[3] = 0;\n    dest[4] = x1;\n    dest[5] = y1;\n    dest[6] = z1;\n    dest[7] = 0;\n    dest[8] = x2;\n    dest[9] = y2;\n    dest[10] = z2;\n    dest[11] = 0;\n    dest[12] = -(x0 * posx + x1 * posy + x2 * posz);\n    dest[13] = -(y0 * posx + y1 * posy + y2 * posz);\n    dest[14] = -(z0 * posx + z1 * posy + z2 * posz);\n    dest[15] = 1;\n    return dest;\n}\n\n/**\n * Returns the inverse of the given 4x4 matrix.\n */\nexport function inverseMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat;\n    }\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    const invDet = 1 / (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n    dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n    dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n    dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n    dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n    dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n    dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n    dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n    dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n    dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n    dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n    dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n    dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n    dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n    dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n    dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n    dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n    return dest;\n}\n\n/**\n * Transposes the given 4x4 matrix.\n */\nexport function transposeMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m4 = mat[4];\n    const m14 = mat[14];\n    const m8 = mat[8];\n    const m13 = mat[13];\n    const m12 = mat[12];\n    const m9 = mat[9];\n    if (!dest || mat === dest) {\n        const a01 = mat[1];\n        const a02 = mat[2];\n        const a03 = mat[3];\n        const a12 = mat[6];\n        const a13 = mat[7];\n        const a23 = mat[11];\n        mat[1] = m4;\n        mat[2] = m8;\n        mat[3] = m12;\n        mat[4] = a01;\n        mat[6] = m9;\n        mat[7] = m13;\n        mat[8] = a02;\n        mat[9] = a12;\n        mat[11] = m14;\n        mat[12] = a03;\n        mat[13] = a13;\n        mat[14] = a23;\n        return mat;\n    }\n    dest[0] = mat[0];\n    dest[1] = m4;\n    dest[2] = m8;\n    dest[3] = m12;\n    dest[4] = mat[1];\n    dest[5] = mat[5];\n    dest[6] = m9;\n    dest[7] = m13;\n    dest[8] = mat[2];\n    dest[9] = mat[6];\n    dest[10] = mat[10];\n    dest[11] = m14;\n    dest[12] = mat[3];\n    dest[13] = mat[7];\n    dest[14] = mat[11];\n    dest[15] = mat[15];\n    return dest;\n}\n\n/**\n * Multiplies the given 4x4 matrix by the given four-element vector.\n */\nexport function mulMat4v4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = m;\n    }\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n/**\n * Multiplies the two given 4x4 matrix by each other.\n * @method mulMat4\n * @static\n */\nexport function mulMat4(a: FloatArrayParam, b: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = a;\n    }\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b13 = b[7];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b23 = b[11];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n    const b33 = b[15];\n    dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n    dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n    dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n    dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n    dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n    dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n    dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n    dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n    dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n    dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n    dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n    dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n    dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n    dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n    dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n    dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n    return dest;\n}\n\n/**\n * Multiplies the two given 3x3 matrices by each other.\n */\nexport function mulMat3(a: FloatArrayParam, b: FloatArrayParam, dest: FloatArrayParam = newFloatArray(9)) {\n\n    const a11 = a[0];\n    const a12 = a[3];\n    const a13 = a[6];\n    const a21 = a[1];\n    const a22 = a[4];\n    const a23 = a[7];\n    const a31 = a[2];\n    const a32 = a[5];\n    const a33 = a[8];\n    const b11 = b[0];\n    const b12 = b[3];\n    const b13 = b[6];\n    const b21 = b[1];\n    const b22 = b[4];\n    const b23 = b[7];\n    const b31 = b[2];\n    const b32 = b[5];\n    const b33 = b[8];\n\n    dest[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    dest[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    dest[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n    dest[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    dest[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    dest[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n    dest[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    dest[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    dest[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n    return dest;\n}\n\n/**\n * Transforms a three-element position by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint3(m: FloatArrayParam, p: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = p;\n    }\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n    dest[0] = (m[0] * x) + (m[4] * y) + (m[8] * z) + m[12];\n    dest[1] = (m[1] * x) + (m[5] * y) + (m[9] * z) + m[13];\n    dest[2] = (m[2] * x) + (m[6] * y) + (m[10] * z) + m[14];\n    return dest;\n}\n\n/**\n * Transforms a homogeneous coordinate by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint4(m: FloatArrayParam, v: FloatArrayParam, dest: FloatArrayParam) {\n    dest[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\n    dest[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\n    dest[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\n    dest[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\n    return dest;\n}\n\n\n/**\n * Transforms an array of three-element positions by a 4x4 matrix.\n * @method transformPoints3\n * @static\n */\nexport function transformPoints3(m: FloatArrayParam, points: number[][], points2: number[][]) {\n    const result = points2 || [];\n    const len = points.length;\n    let p0;\n    let p1;\n    let p2;\n    let pi;\n\n    // cache values\n    const m0 = m[0];\n\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    let r;\n\n    for (let i = 0; i < len; ++i) {\n\n        // cache values\n        pi = points[i];\n\n        p0 = pi[0];\n        p1 = pi[1];\n        p2 = pi[2];\n\n        r = result[i] || (result[i] = [0, 0, 0]);\n\n        r[0] = (m0 * p0) + (m4 * p1) + (m8 * p2) + m12;\n        r[1] = (m1 * p0) + (m5 * p1) + (m9 * p2) + m13;\n        r[2] = (m2 * p0) + (m6 * p1) + (m10 * p2) + m14;\n        r[3] = (m3 * p0) + (m7 * p1) + (m11 * p2) + m15;\n    }\n\n    result.length = len;\n\n    return result;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions3(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 3) {\n\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n\n    return p2;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions4(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n    let x;\n    let y;\n    let z;\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n    return p2;\n}\n\n/**\n * Transforms a three-element vector by a 4x4 matrix.\n */\nexport function transformVec3(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dest = dest || createVec3();\n    dest[0] = (m[0] * v0) + (m[4] * v1) + (m[8] * v2);\n    dest[1] = (m[1] * v0) + (m[5] * v1) + (m[9] * v2);\n    dest[2] = (m[2] * v0) + (m[6] * v1) + (m[10] * v2);\n    return dest;\n}\n\n/**\n * Transforms a four-element vector by a 4x4 matrix.\n * @method transformVec4\n * @static\n */\nexport function transformVec4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest = dest || createVec4();\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n */\nexport function scaleMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    const x = xyz[0];\n    const y = xyz[1];\n    const z = xyz[2];\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n */\nexport function scalingMat4v(v: FloatArrayParam, m: FloatArrayParam = identityMat4()): FloatArrayParam {\n    m[0] = v[0];\n    m[5] = v[1];\n    m[10] = v[2];\n    return m;\n}\n\n/**\n * Returns a 3x3 scale matrix.\n */\nexport function scalingMat3v(v: FloatArrayParam, m: FloatArrayParam = identityMat3()): FloatArrayParam {\n    m[0] = v[0];\n    m[4] = v[1];\n    return m;\n}\n\n/**\n * Returns a 4x4 scale matrix.\n */\nexport const scalingMat4c = ((() => {\n    const xyz: FloatArrayParam = newFloatArray(3);\n    return (x: number, y: number, z: number, dest?: FloatArrayParam) => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return scalingMat4v(xyz, dest);\n    };\n}))()\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n * @method scaleMat4c\n * @param x\n * @param y\n * @param z\n * @param m\n */\nexport function scaleMat4c(x: number, y: number, z: number, m: FloatArrayParam): FloatArrayParam {\n\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n * Returns 4x4 scale matrix.\n */\nexport function scalingMat4s(s: number): FloatArrayParam {\n    return scalingMat4c(s, s, s);\n}\n\n/**\n * Composes a 4x4 matrix from the given position, quaternion and scale.\n * @param position\n * @param quaternion\n * @param scale\n * @param mat\n */\nexport function composeMat4(\n    position: FloatArrayParam,\n    quaternion: FloatArrayParam,\n    scale: FloatArrayParam,\n    mat: FloatArrayParam = createMat4()): FloatArrayParam {\n    quatToRotationMat4(quaternion, mat);\n    scaleMat4v(scale, mat);\n    translateMat4v(position, mat);\n    return mat;\n}\n\n/**\n * Decomposes a 4x4 matrix into position, quaternion and scale.\n */\nexport const decomposeMat4 = (() => {\n    const vec = createVec3();\n    const matrix = createMat4();\n    return function decompose(mat: FloatArrayParam, position: FloatArrayParam, quaternion: FloatArrayParam, scale: FloatArrayParam) {\n        vec[0] = mat[0];\n        vec[1] = mat[1];\n        vec[2] = mat[2];\n        let sx = lenVec3(vec);\n        vec[0] = mat[4];\n        vec[1] = mat[5];\n        vec[2] = mat[6];\n        const sy = lenVec3(vec);\n        vec[8] = mat[8];\n        vec[9] = mat[9];\n        vec[10] = mat[10];\n        const sz = lenVec3(vec);\n        const det = determinantMat4(mat);\n        if (det < 0) {\n            sx = -sx;\n        }\n        position[0] = mat[12];\n        position[1] = mat[13];\n        position[2] = mat[14];\n        // scale the rotation part\n        // @ts-ignore\n        matrix.set(mat);\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n        matrix[0] *= invSX;\n        matrix[1] *= invSX;\n        matrix[2] *= invSX;\n        matrix[4] *= invSY;\n        matrix[5] *= invSY;\n        matrix[6] *= invSY;\n        matrix[8] *= invSZ;\n        matrix[9] *= invSZ;\n        matrix[10] *= invSZ;\n        mat4ToQuat(matrix, quaternion);\n        scale[0] = sx;\n        scale[1] = sy;\n        scale[2] = sz;\n\n    };\n})();\n\n/**\n * Efficiently post-concatenates a translation to the given matrix.\n */\nexport function translateMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    return translateMat4c(xyz[0], xyz[1], xyz[2], m);\n}\n\n/**\n * Efficiently post-concatenates a translation, given as separate components, to the given matrix.\n */\nexport function translateMat4c(x: number, y: number, z: number, m: FloatArrayParam = identityMat4()) {\n    const m3 = m[3];\n    m[0] += m3 * x;\n    m[1] += m3 * y;\n    m[2] += m3 * z;\n    const m7 = m[7];\n    m[4] += m7 * x;\n    m[5] += m7 * y;\n    m[6] += m7 * z;\n    const m11 = m[11];\n    m[8] += m11 * x;\n    m[9] += m11 * y;\n    m[10] += m11 * z;\n    const m15 = m[15];\n    m[12] += m15 * x;\n    m[13] += m15 * y;\n    m[14] += m15 * z;\n    return m;\n}\n\n/**\n * Creates a new matrix that replaces the translation in the rightmost column of the given\n * affine matrix with the given translation.\n */\nexport function setMat4Translation(m: FloatArrayParam, translation: FloatArrayParam, dest: FloatArrayParam): FloatArrayParam {\n\n    dest[0] = m[0];\n    dest[1] = m[1];\n    dest[2] = m[2];\n    dest[3] = m[3];\n\n    dest[4] = m[4];\n    dest[5] = m[5];\n    dest[6] = m[6];\n    dest[7] = m[7];\n\n    dest[8] = m[8];\n    dest[9] = m[9];\n    dest[10] = m[10];\n    dest[11] = m[11];\n\n    dest[12] = translation[0];\n    dest[13] = translation[1];\n    dest[14] = translation[2];\n    dest[15] = m[15];\n\n    return dest;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat4();\n    m[12] = v[0];\n    m[13] = v[1];\n    m[14] = v[2];\n    return m;\n}\n\n/**\n * Returns 3x3 translation matrix.\n */\nexport function translationMat3v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat3();\n    m[6] = v[0];\n    m[7] = v[1];\n    return m;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport const translationMat4c = ((() => {\n    const xyz = newFloatArray(3);\n    return (x: number, y: number, z: number, dest: FloatArrayParam): FloatArrayParam => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return translationMat4v(xyz, dest);\n    };\n}))();\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4s(s: number, dest: FloatArrayParam) {\n    return translationMat4c(s, s, s, dest);\n}\n\n\n/**\n * Returns the determinant of the given 4x4 matrix.\n */\nexport function determinantMat4(mat: FloatArrayParam): number {\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +\n        a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +\n        a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +\n        a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +\n        a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +\n        a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;\n}\n\n/**\n * Gets Euler angles from a 4x4 matrix.\n *\n * @param {mat The 4x4 matrix.\n * @param order Desired Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param [dest] Destination Euler angles, created by default.\n * @returns  The Euler angles.\n */\nexport function mat4ToEuler(mat: FloatArrayParam, order: string, dest: FloatArrayParam = createVec3()) {\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const m11 = mat[0];\n    const m12 = mat[4];\n    const m13 = mat[8];\n    const m21 = mat[1];\n    const m22 = mat[5];\n    const m23 = mat[9];\n    const m31 = mat[2];\n    const m32 = mat[6];\n    const m33 = mat[10];\n    if (order === 'XYZ') {\n        dest[1] = Math.asin(clamp(m13, -1, 1));\n        if (Math.abs(m13) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[2] = Math.atan2(-m12, m11);\n        } else {\n            dest[0] = Math.atan2(m32, m22);\n            dest[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        dest[0] = Math.asin(-clamp(m23, -1, 1));\n        if (Math.abs(m23) < 0.99999) {\n            dest[1] = Math.atan2(m13, m33);\n            dest[2] = Math.atan2(m21, m22);\n        } else {\n            dest[1] = Math.atan2(-m31, m11);\n            dest[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        dest[0] = Math.asin(clamp(m32, -1, 1));\n        if (Math.abs(m32) < 0.99999) {\n            dest[1] = Math.atan2(-m31, m33);\n            dest[2] = Math.atan2(-m12, m22);\n        } else {\n            dest[1] = 0;\n            dest[2] = Math.atan2(m21, m11);\n        }\n    } else if (order === 'ZYX') {\n        dest[1] = Math.asin(-clamp(m31, -1, 1));\n        if (Math.abs(m31) < 0.99999) {\n            dest[0] = Math.atan2(m32, m33);\n            dest[2] = Math.atan2(m21, m11);\n        } else {\n            dest[0] = 0;\n            dest[2] = Math.atan2(-m12, m22);\n        }\n    } else if (order === 'YZX') {\n        dest[2] = Math.asin(clamp(m21, -1, 1));\n        if (Math.abs(m21) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m22);\n            dest[1] = Math.atan2(-m31, m11);\n        } else {\n            dest[0] = 0;\n            dest[1] = Math.atan2(m13, m33);\n        }\n    } else if (order === 'XZY') {\n        dest[2] = Math.asin(-clamp(m12, -1, 1));\n        if (Math.abs(m12) < 0.99999) {\n            dest[0] = Math.atan2(m32, m22);\n            dest[1] = Math.atan2(m13, m11);\n        } else {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[1] = 0;\n        }\n    }\n    return dest;\n}\n\n/**\n * Linearly interpolates between two 4x4 matrices.\n */\nexport function lerpMat4(t: number, t1: number, t2: number, m1: FloatArrayParam, m2: FloatArrayParam, dest?: FloatArrayParam) {\n    const result = dest || createMat4();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = m1[0] + (f * (m2[0] - m1[0]));\n    result[1] = m1[1] + (f * (m2[1] - m1[1]));\n    result[2] = m1[2] + (f * (m2[2] - m1[2]));\n    result[3] = m1[3] + (f * (m2[3] - m1[3]));\n    result[4] = m1[4] + (f * (m2[4] - m1[4]));\n    result[5] = m1[5] + (f * (m2[5] - m1[5]));\n    result[6] = m1[6] + (f * (m2[6] - m1[6]));\n    result[7] = m1[7] + (f * (m2[7] - m1[7]));\n    result[8] = m1[8] + (f * (m2[8] - m1[8]));\n    result[9] = m1[9] + (f * (m2[9] - m1[9]));\n    result[10] = m1[10] + (f * (m2[10] - m1[10]));\n    result[11] = m1[11] + (f * (m2[11] - m1[11]));\n    result[12] = m1[12] + (f * (m2[12] - m1[12]));\n    result[13] = m1[13] + (f * (m2[13] - m1[13]));\n    result[14] = m1[14] + (f * (m2[14] - m1[14]));\n    result[15] = m1[15] + (f * (m2[15] - m1[15]));\n    return result;\n}\n\n\n/**\n * Craetes an identity quaternion.\n * @param dest Optional quaternion to initialize\n * @returns New quaternion\n */\nexport function identityQuat(\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    dest[0] = 0.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 1.0;\n    return dest;\n}\n\n/**\n * Initializes a quaternion from Euler angles.\n *\n * @param  euler The Euler angles.\n * @param  order Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param  [dest] Destination quaternion, created by default.\n * @returns  The quaternion.\n */\nexport function eulerToQuat(\n    euler: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n    const a = (euler[0] * DEGTORAD) / 2;\n    const b = (euler[1] * DEGTORAD) / 2;\n    const c = (euler[2] * DEGTORAD) / 2;\n\n    const c1 = Math.cos(a);\n    const c2 = Math.cos(b);\n    const c3 = Math.cos(c);\n    const s1 = Math.sin(a);\n    const s2 = Math.sin(b);\n    const s3 = Math.sin(c);\n\n    if (order === \"XYZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"YXZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"ZXY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"ZYX\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"YZX\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"XZY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return dest;\n}\n\n/**\n * Encodes rotation from a matrix into a quaternion.\n * @param m The matrix\n * @param dest The quaternion\n */\nexport function mat4ToQuat(\n    m: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const m11 = m[0];\n    const m12 = m[4];\n    const m13 = m[8];\n    const m21 = m[1];\n    const m22 = m[5];\n    const m23 = m[9];\n    const m31 = m[2];\n    const m32 = m[6];\n    const m33 = m[10];\n    let s;\n\n    const trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n\n        dest[3] = 0.25 / s;\n        dest[0] = (m32 - m23) * s;\n        dest[1] = (m13 - m31) * s;\n        dest[2] = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n        dest[3] = (m32 - m23) / s;\n        dest[0] = 0.25 * s;\n        dest[1] = (m12 + m21) / s;\n        dest[2] = (m13 + m31) / s;\n    } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n        dest[3] = (m13 - m31) / s;\n        dest[0] = (m12 + m21) / s;\n        dest[1] = 0.25 * s;\n        dest[2] = (m23 + m32) / s;\n    } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n        dest[3] = (m21 - m12) / s;\n        dest[0] = (m13 + m31) / s;\n        dest[1] = (m23 + m32) / s;\n        dest[2] = 0.25 * s;\n    }\n\n    return dest;\n}\n\n/**\n *\n * @param u\n * @param v\n * @param dest\n */\nexport function vec3PairToQuat(\n    u: FloatArrayParam,\n    v: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const norm_u_norm_v = Math.sqrt(dotVec3(u, u) * dotVec3(v, v));\n    let real_part = norm_u_norm_v + dotVec3(u, v);\n\n    if (real_part < 0.00000001 * norm_u_norm_v) {\n        // If u and v are exactly opposite, rotate 180 degrees\n        // around an arbitrary orthogonal axis. Axis normalisation\n        // can happen later, when we normalise the quaternion.\n\n        real_part = 0.0;\n\n        if (Math.abs(u[0]) > Math.abs(u[2])) {\n            dest[0] = -u[1];\n            dest[1] = u[0];\n            dest[2] = 0;\n        } else {\n            dest[0] = 0;\n            dest[1] = -u[2];\n            dest[2] = u[1];\n        }\n    } else {\n        // Otherwise, build quaternion the standard way.\n        cross3Vec3(u, v, dest);\n    }\n\n    dest[3] = real_part;\n\n    return normalizeQuat(dest);\n}\n\n/**\n * Converts an angle-axis rotation representation into a quaternion\n * @param angleAxis\n * @param dest\n */\nexport function angleAxisToQuaternion(\n    angleAxis: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const halfAngle = angleAxis[3] / 2.0;\n    const fsin = Math.sin(halfAngle);\n    dest[0] = fsin * angleAxis[0];\n    dest[1] = fsin * angleAxis[1];\n    dest[2] = fsin * angleAxis[2];\n    dest[3] = Math.cos(halfAngle);\n    return dest;\n}\n\n/**\n * Converts a quaternion to Euler angles\n * @param q\n * @param order\n * @param dest\n */\nexport function quatToEuler(\n    q: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = createVec3()\n) {\n    quatToRotationMat4(q, tempMat4a);\n    mat4ToEuler(tempMat4a, order, dest);\n    return dest;\n}\n\n/**\n * Multiples a pair of quaternions\n * @param p\n * @param q\n * @param dest\n */\nexport function mulQuats(\n    p: FloatArrayParam,\n    q: FloatArrayParam,\n    dest: FloatArrayParam = createVec4()\n): FloatArrayParam {\n    const p0 = p[0];\n    const p1 = p[1];\n    const p2 = p[2];\n    const p3 = p[3];\n    const q0 = q[0];\n    const q1 = q[1];\n    const q2 = q[2];\n    const q3 = q[3];\n    dest[0] = p3 * q0 + p0 * q3 + p1 * q2 - p2 * q1;\n    dest[1] = p3 * q1 + p1 * q3 + p2 * q0 - p0 * q2;\n    dest[2] = p3 * q2 + p2 * q3 + p0 * q1 - p1 * q0;\n    dest[3] = p3 * q3 - p0 * q0 - p1 * q1 - p2 * q2;\n    return dest;\n}\n\n/**\n *\n * @param q\n * @param vec\n * @param dest\n */\nexport function vec3ApplyQuat(\n    q: FloatArrayParam,\n    vec: FloatArrayParam,\n    dest: FloatArrayParam = createVec3()\n): FloatArrayParam {\n    const x = vec[0];\n    const y = vec[1];\n    const z = vec[2];\n\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n\n    // calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n\n    dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a matrix.\n * @param q\n * @param dest\n */\nexport function quatToMat4(\n    q: FloatArrayParam,\n    dest?: FloatArrayParam\n): FloatArrayParam {\n    dest = identityMat4(dest);\n\n    const q0 = q[0]; //x\n    const q1 = q[1]; //y\n    const q2 = q[2]; //z\n    const q3 = q[3]; //w\n\n    const tx = 2.0 * q0;\n    const ty = 2.0 * q1;\n    const tz = 2.0 * q2;\n\n    const twx = tx * q3;\n    const twy = ty * q3;\n    const twz = tz * q3;\n\n    const txx = tx * q0;\n    const txy = ty * q0;\n    const txz = tz * q0;\n\n    const tyy = ty * q1;\n    const tyz = tz * q1;\n    const tzz = tz * q2;\n\n    dest[0] = 1.0 - (tyy + tzz);\n    dest[1] = txy + twz;\n    dest[2] = txz - twy;\n\n    dest[4] = txy - twz;\n    dest[5] = 1.0 - (txx + tzz);\n    dest[6] = tyz + twx;\n\n    dest[8] = txz + twy;\n    dest[9] = tyz - twx;\n\n    dest[10] = 1.0 - (txx + tyy);\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a rotation matrix.\n * @param q\n * @param m\n */\nexport function quatToRotationMat4(\n    q: FloatArrayParam,\n    m: FloatArrayParam\n): FloatArrayParam {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n\n    m[0] = 1 - (yy + zz);\n    m[4] = xy - wz;\n    m[8] = xz + wy;\n\n    m[1] = xy + wz;\n    m[5] = 1 - (xx + zz);\n    m[9] = yz - wx;\n\n    m[2] = xz - wy;\n    m[6] = yz + wx;\n    m[10] = 1 - (xx + yy);\n\n    // last column\n    m[3] = 0;\n    m[7] = 0;\n    m[11] = 0;\n\n    // bottom row\n    m[12] = 0;\n    m[13] = 0;\n    m[14] = 0;\n    m[15] = 1;\n\n    return m;\n}\n\n/**\n * Normalizes a quaternion\n * @param q\n * @param dest\n * @returns The normalized quaternion\n */\nexport function normalizeQuat(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n): FloatArrayParam {\n    const len = lenVec4([q[0], q[1], q[2], q[3]]);\n    dest[0] = q[0] / len;\n    dest[1] = q[1] / len;\n    dest[2] = q[2] / len;\n    dest[3] = q[3] / len;\n    return dest;\n}\n\n/**\n * Gets the conjugate of a quaternion.\n * @param q\n * @param dest\n * @returns The conjugate of the quaternion\n */\nexport function conjugateQuat(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n) {\n    dest[0] = -q[0];\n    dest[1] = -q[1];\n    dest[2] = -q[2];\n    dest[3] = q[3];\n    return dest;\n}\n\n/**\n * Gets the inverse of a quaternion.\n * @param q\n * @param dest\n * @returns The inverse quaternion\n */\nexport function inverseQuat(q: FloatArrayParam, dest: FloatArrayParam) {\n    return normalizeQuat(conjugateQuat(q, dest));\n}\n\n/**\n * Converts a quaternion to angle-axis representation.\n * @param q\n * @param angleAxis\n * @returns The angle-axis rotation\n */\nexport function quatToAngleAxis(\n    q: FloatArrayParam,\n    angleAxis: FloatArrayParam = createVec4()\n) {\n    q = normalizeQuat(q, tempVec4a);\n    const q3 = q[3];\n    const angle = 2 * Math.acos(q3);\n    const s = Math.sqrt(1 - q3 * q3);\n    if (s < 0.001) {\n        // test to avoid divide by zero, s is always positive due to sqrt\n        angleAxis[0] = q[0];\n        angleAxis[1] = q[1];\n        angleAxis[2] = q[2];\n    } else {\n        angleAxis[0] = q[0] / s;\n        angleAxis[1] = q[1] / s;\n        angleAxis[2] = q[2] / s;\n    }\n    angleAxis[3] = angle; // * 57.295779579;\n    return angleAxis;\n}\n\n\n/**\n * Finds the intersection of a 3D ray with a 3D triangle.\n */\nexport function rayTriangleIntersect(origin: FloatArrayParam, dir: FloatArrayParam, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, isect: FloatArrayParam): FloatArrayParam | null {\n    isect = isect || createVec3();\n    const EPSILON = 0.000001;\n    const edge1 = subVec3(b, a, tempVec3);\n    const edge2 = subVec3(c, a, tempVec3b);\n    const pvec = cross3Vec3(dir, edge2, tempVec3c);\n    const det = dotVec3(edge1, pvec);\n    if (det < EPSILON) {\n        return null;\n    }\n    const tvec = subVec3(origin, a, tempVec3d);\n    const u = dotVec3(tvec, pvec);\n    if (u < 0 || u > det) {\n        return null;\n    }\n    const qvec = cross3Vec3(tvec, edge1, tempVec3e);\n    const v = dotVec3(dir, qvec);\n    if (v < 0 || u + v > det) {\n        return null;\n    }\n    const t = dotVec3(edge2, qvec) / det;\n    isect[0] = origin[0] + t * dir[0];\n    isect[1] = origin[1] + t * dir[1];\n    isect[2] = origin[2] + t * dir[2];\n    return isect;\n}\n\n/**\n Transforms a ray by a matrix.\n @param matrix 4x4 matrix\n @param rayOrigin The ray origin\n @param rayDir The ray direction\n @param rayOriginDest The transformed ray origin\n @param rayDirDest The transformed ray direction\n */\nexport function transformRay(matrix: FloatArrayParam, rayOrigin: FloatArrayParam, rayDir: FloatArrayParam, rayOriginDest: FloatArrayParam, rayDirDest: FloatArrayParam) {\n    tempVec4a[0] = rayOrigin[0];\n    tempVec4a[1] = rayOrigin[1];\n    tempVec4a[2] = rayOrigin[2];\n    tempVec4a[3] = 1;\n    transformVec4(matrix, tempVec4a, tempVec4b);\n    rayOriginDest[0] = tempVec4b[0];\n    rayOriginDest[1] = tempVec4b[1];\n    rayOriginDest[2] = tempVec4b[2];\n    tempVec4a[0] = rayDir[0];\n    tempVec4a[1] = rayDir[1];\n    tempVec4a[2] = rayDir[2];\n    transformVec3(matrix, tempVec4a, tempVec4b);\n    normalizeVec3(tempVec4b);\n    rayDirDest[0] = tempVec4b[0];\n    rayDirDest[1] = tempVec4b[1];\n    rayDirDest[2] = tempVec4b[2];\n}","import {SceneObject} from \"@xeokit/scene\";\nimport {FloatArrayParam, IntArrayParam} from \"@xeokit/math\";\n\n/**\n * TODO\n */\nexport class KdVertex2 {\n    sceneObject: SceneObject;\n    worldPos: FloatArrayParam;\n    canvasPos: IntArrayParam;\n}","import {GeometryView, getSceneObjectGeometry, SceneObject} from \"@xeokit/scene\";\nimport {\n    INSIDE,\n    INTERSECT,\n    OUTSIDE,\n    setFrustum3,\n    intersectFrustum3AABB3,\n    intersectFrustum3Point3\n} from \"@xeokit/boundaries\";\nimport {FloatArrayParam} from \"@xeokit/math\";\nimport {createMat4, createVec4, transformPoint4} from \"@xeokit/matrix\";\nimport {KdTree2} from \"./KdTree2\";\nimport {KdVertex2} from \"./KdVertex2\";\n\n/**\n * A k-d tree to accelerate intersection and nearest-neighbour tests on the projected\n * 2D canvas positions of {@link @xeokit/scene!SceneObject} geometry vertices.\n *\n * See {@link \"@xeokit/kd-canvas-verts\"} for usage.\n */\nexport function createKdTree2FromSceneObjectVerts(params: {\n    viewMatrix: FloatArrayParam,\n    projMatrix: FloatArrayParam,\n    canvasBoundary: FloatArrayParam,\n    sceneObjects: SceneObject[]\n}): KdTree2 {\n\n    const kdTree2D = new KdTree2({\n        aabb: params.canvasBoundary\n    });\n\n    const viewMatrix = createMat4(params.viewMatrix);\n    const projMatrix = createMat4(params.projMatrix);\n    const frustum = setFrustum3(viewMatrix, projMatrix);\n    const canvasBoundary = params.canvasBoundary;\n    const sceneObjects = params.sceneObjects;\n\n    if (sceneObjects) {\n        for (let i = 0, len = sceneObjects.length; i < len; i++) {\n            insertSceneObject(sceneObjects[i]);\n        }\n    }\n\n    function insertSceneObject(sceneObject: SceneObject, intersects: number = INTERSECT) {\n        if (intersects !== INSIDE) {\n            intersects = intersectFrustum3AABB3(frustum, sceneObject.aabb);\n        }\n        if (intersects === OUTSIDE) {\n            return;\n        }\n        getSceneObjectGeometry(sceneObject,\n            (geometryView: GeometryView): boolean | undefined => {\n                const positionsWorld = geometryView.positionsWorld;\n                for (let i = 0, len = positionsWorld.length; i < len; i += 3) {\n                    const worldPos = createVec4();\n                    worldPos[0] = positionsWorld[i];\n                    worldPos[1] = positionsWorld[i + 1];\n                    worldPos[2] = positionsWorld[i + 2];\n                    worldPos[3] = 1.0;\n                    if (intersects === INSIDE || intersectFrustum3Point3(frustum, worldPos)) {\n                        insertVertex(sceneObject, worldPos);\n                    }\n                }\n                return false;\n            });\n    }\n\n    function insertVertex(sceneObject: SceneObject, worldPos: FloatArrayParam) {\n        const viewPos = createVec4();\n        const projPos = createVec4();\n        const canvasPos = new Uint16Array(2);\n        transformPoint4(viewMatrix, worldPos, viewPos);\n        transformPoint4(projMatrix, viewPos, projPos);\n        canvasPos[0] = Math.floor((1 + projPos[0] / projPos[3]) * canvasBoundary[2] / 2);\n        canvasPos[1] = Math.floor((1 - projPos[1] / projPos[3]) * canvasBoundary[3] / 2);\n        kdTree2D.insertItem(<KdVertex2>{sceneObject, worldPos, canvasPos}, [canvasPos[0], canvasPos[1], canvasPos[0], canvasPos[1]]);\n    }\n\n    return kdTree2D;\n}\n","import {FloatArrayParam} from \"@xeokit/math\";\nimport {SceneObject} from \"@xeokit/scene\";\nimport {KdTree2} from \"./KdTree2\";\n\n/**\n *\n */\nexport function searchKdTree2ForNearestNeighbor(params: {\n    kdTree: KdTree2,\n    canvasPos: FloatArrayParam\n}): SceneObject[] {\n    const kdTree = params.kdTree;\n    const canvasPos = params.canvasPos;\n    const sceneObjects = [];\n\n//...\n\n    return sceneObjects;\n}\n"],"names":["r","Float64Array","c","t","createVec3","v","l","n","createMat4","g","R","testVertex","offset","normal","this","prototype","set","e","o","Math","sqrt","W","planes","kdTreeDimLength","Float32Array","_insertItem","_classPrivateFieldLooseKey","KdTree2","params","Object","defineProperty","value","_insertItem2","root","maxDepth","aabb","slice","insertItem","item","_classPrivateFieldLooseBase","node","depth","items","push","left","containsAABB2","right","nodeAABB","dim","aabbLeft","aabbRight","exports","DispatcherWrapper","constructor","dispatcher","_subscribe","fn","subscribe","_unsubscribe","unsubscribe","_one","one","_has","has","_clear","clear","_count","count","_onSubscriptionChange","onSubscriptionChange","sub","unsub","Subscription","handler","isOnce","isExecuted","execute","executeAsync","scope","args","setTimeout","apply","EventManagement","propagationStopped","stopPropagation","SubscriptionChangeEventDispatcher","DispatcherBase","_subscriptions","Array","length","asEvent","createSubscription","triggerSubscriptionChange","some","changes","i","splice","_dispatch","ev","EventManagement_1","nargs","call","cleanup","Subscription_1","indexOf","_wrap","DispatcherWrapper_1","dispatch","arguments","DispatchError","Error","message","super","EventListBase","_events","get","name","event","createDispatcher","remove","HandlingBase","events","PromiseSubscription","async","result","PromiseDispatcherBase","DispatcherBase_1","DispatchError_1","PromiseSubscription_1","ps","enumerable","EventListBase_1","HandlingBase_1","PromiseDispatcherBase_1","EventDispatcher","ste_core_1","sender","dispatchAsync","EventList","EventDispatcher_1","EventHandlingBase","EventList_1","NonUniformEventList","EventHandlingBase_1","NonUniformEventList_1","SimpleEventDispatcher","SimpleEventList","SimpleEventDispatcher_1","SimpleEventHandlingBase","SimpleEventList_1","NonUniformSimpleEventList","SimpleEventHandlingBase_1","NonUniformSimpleEventList_1","SignalDispatcher","SignalList","SignalDispatcher_1","SignalHandlingBase","SignalList_1","SignalHandlingBase_1","PromiseEventDispatcher","_dispatchAsPromise","PromiseEventList","PromiseEventDispatcher_1","PromiseEventHandlingBase","PromiseEventList_1","NonUniformPromiseEventList","PromiseEventHandlingBase_1","NonUniformPromiseEventList_1","PromiseSignalDispatcher","PromiseSignalList","PromiseSignalDispatcher_1","PromiseSignalHandlingBase","PromiseSignalList_1","PromiseSignalHandlingBase_1","PromiseSimpleEventDispatcher","NonUniformPromiseSimpleEventList","PromiseSimpleEventDispatcher_1","PromiseSimpleEventList","PromiseSimpleEventHandlingBase","PromiseSimpleEventList_1","NonUniformPromiseSimpleEventList_1","PromiseSimpleEventHandlingBase_1","ste_events_1","ste_simple_events_1","ste_signals_1","ste_promise_events_1","ste_promise_signals_1","ste_promise_simple_events_1","createVec4","values","FloatArrayClass","transformPoint4","m","dest","KdVertex2","sceneObject","worldPos","canvasPos","kdTree2D","canvasBoundary","viewMatrix","projMatrix","frustum","u","f","a","s","h","p","x","d","V","w","k","setFrustum3","sceneObjects","len","insertSceneObject","intersects","intersectFrustum3AABB3","getSceneObjectGeometry","geometryView","positionsWorld","insertVertex","viewPos","projPos","Uint16Array","floor"],"mappings":"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"}