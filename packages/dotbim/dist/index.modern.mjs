import{SDKError as e}from"@xeokit/core";function t(t,d={rotateX:!1}){if(t.sceneModel.destroyed)throw new Error("SceneModel already destroyed");if(t.sceneModel.built)throw new e("SceneModel already built");if(t.dataModel){if(t.dataModel.destroyed)throw new e("DataModel already destroyed");if(t.dataModel.built)throw new e("DataModel already built")}return new Promise(function(e,d){!function(e){const t=e.data,d=t.meshes;for(let t=0,o=d.length;t<o;t++){const o=d[t];e.sceneModel.createGeometry({id:o.mesh_id,positions:o.coordinates,indices:o.indices})}const o=t.elements;for(let t=0,d=o.length;t<d;t++){const d=o[t],a=d.guid;if(e.sceneModel){const o=`${a}-mesh-${t}`;e.sceneModel.createMesh({id:o,geometryId:d.mesh_id,baseColor:d.color}),e.sceneModel.createObject({id:a,meshIds:[o]})}e.dataModel&&e.dataModel.createObject({id:d.guid,type:d.type})}}({data:t.data,sceneModel:t.sceneModel,dataModel:t.dataModel,nextId:0}),e()})}export{t as loadDotBIM};
//# sourceMappingURL=index.modern.mjs.map
