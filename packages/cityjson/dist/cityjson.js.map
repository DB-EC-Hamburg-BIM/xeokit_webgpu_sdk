{"version":3,"file":"cityjson.js","sources":["../../matrix/dist/index.es","../src/earcut.js","../../constants/dist/index.es","../../basictypes/dist/index.es","../../cityjsontypes_1_1_3/dist/index.es","../src/loadCityJSON.ts"],"sourcesContent":["import{newFloatArray as n,clamp as t,DEGTORAD as r}from\"@xeokit/math\";var u=s(),a=M(),o=M(),i=M(),e=M(),c=M(),f=s();function v(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function h(n){return new FloatArrayClass(n||2)}function M(n){return new Float64Array(n||3)}function s(n){return new FloatArrayClass(n||4)}function l(n,t){return t||(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t}function d(n,t){return t||(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t}function q(n,t,r){return r||(r=n),r[0]=n[0]+t[0],r[1]=n[1]+t[1],r[2]=n[2]+t[2],r[3]=n[3]+t[3],r}function X(n,t,r){return r||(r=n),r[0]=n[0]+t,r[1]=n[1]+t,r[2]=n[2]+t,r[3]=n[3]+t,r}function Y(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r[2]=n[2]*t,r[3]=n[3]*t,r}function Z(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r[2]=n[2]*t,r}function b(n,t,r){return r||(r=n),r[0]=n[0]*t,r[1]=n[1]*t,r}function g(n,t,r){return r||(r=n),r[0]=n[0]+t[0],r[1]=n[1]+t[1],r[2]=n[2]+t[2],r}function y(n,t,r){return r||(r=n),r[0]=n[0]+t,r[1]=n[1]+t,r[2]=n[2]+t,r}function w(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r[2]=n[2]-t[2],r[3]=n[3]-t[3],r}function A(n,t){return n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2]}function p(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r[2]=n[2]-t[2],r}function F(n,t,r){return r||(r=n),r[0]=n[0]-t[0],r[1]=n[1]-t[1],r}function m(){for(var n=[].slice.call(arguments),t=new Float32Array(n[0]),r=1;r<n.length;r++)t[0]+=n[r][0],t[1]+=n[r][1];return t[0]/=n.length,t[1]/=n.length,t}function x(n,t,r){return r||(r=n),r[0]=n[0]-t,r[1]=n[1]-t,r[2]=n[2]-t,r[3]=n[3]-t,r}function C(n,t,r){return r||(r=n),r[0]=t-n[0],r[1]=t-n[1],r[2]=t-n[2],r[3]=t-n[3],r}function k(n,t,r){return r||(r=n),r[0]=n[0]*t[0],r[1]=n[1]*t[1],r[2]=n[2]*t[2],r[3]=n[3]*t[3],r}function j(n,t,r){return r||(r=n),r[0]=n[0]/t[0],r[1]=n[1]/t[1],r[2]=n[2]/t[2],r}function z(n,t,r){return r||(r=n),r[0]=n[0]/t[0],r[1]=n[1]/t[1],r[2]=n[2]/t[2],r[3]=n[3]/t[3],r}function B(n,t,r){return r||(r=t),r[0]=n/t[0],r[1]=n/t[1],r[2]=n/t[2],r}function D(n,t,r){return r||(r=n),r[0]=n[0]/t,r[1]=n[1]/t,r[2]=n[2]/t,r}function E(n,t,r){return r||(r=n),r[0]=n[0]/t,r[1]=n[1]/t,r[2]=n[2]/t,r[3]=n[3]/t,r}function G(n,t,r){return r||(r=t),r[0]=n/t[0],r[1]=n/t[1],r[2]=n/t[2],r[3]=n/t[3],r}function H(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function I(n,t){var r=n[0],u=n[1],a=n[2],o=t[0],i=t[1],e=t[2];return[u*e-a*i,a*o-r*e,r*i-u*o,0]}function J(n,t,r){r||(r=n);var u=n[0],a=n[1],o=n[2],i=t[0],e=t[1],c=t[2];return r[0]=a*c-o*e,r[1]=o*i-u*c,r[2]=u*e-a*i,r}function K(n){return H(n,n)}function L(n){return Math.sqrt(K(n))}function N(n,t){return n[0]*t[0]+n[1]*t[1]}function O(n){return v(n,n)}function P(n){return N(n,n)}function Q(n){return Math.sqrt(O(n))}var R,S=(R=M(),function(n,t){return Q(p(n,t,R))});function T(n){return Math.sqrt(P(n))}function U(n,t,r,u,a,o){var i=o||M(),e=(n-t)/(r-t);return i[0]=u[0]+e*(a[0]-u[0]),i[1]=u[1]+e*(a[1]-u[1]),i[2]=u[2]+e*(a[2]-u[2]),i}var V=function(){var n=h();return function(t,r){return T(F(t,r,n))}}();function W(n,t){return B(1,n,t)}function $(n,t){return Y(n,1/L(n),t)}function _(n,t){return Z(n,1/Q(n),t)}function nn(n,t){return b(n,1/T(n),t)}function tn(n,t){var r=v(n,t)/Math.sqrt(O(n)*O(t));return r=r<-1?-1:r>1?1:r,Math.acos(r)}var rn=function(){var n=M();return function(t,r){return n[0]=t[0],n[1]=t[1],n[2]=t[2],r[0]=Q(n),n[0]=t[4],n[1]=t[5],n[2]=t[6],r[1]=Q(n),n[0]=t[8],n[1]=t[9],n[2]=t[10],r[2]=Q(n),r}}();function un(n){for(var t=0,r=(n=Array.prototype.slice.call(n)).length;t<r;t++)n[t]=an(n[t]);return n}function an(n){return Math.round(1e5*n)/1e5}function on(n,t,r,u){void 0===u&&(u=M());var a=t[0]-n[0],o=t[1]-n[1],i=t[2]-n[2],e=r[0]-n[0],c=r[1]-n[1],f=r[2]-n[2],v=o*f-i*c,h=i*e-a*f,s=a*c-o*e,l=Math.sqrt(v*v+h*h+s*s);return 0===l?(u[0]=0,u[1]=0,u[2]=0):(u[0]=v/l,u[1]=h/l,u[2]=s/l),u}function en(t){return new n(t||9)}function cn(t){return n(t||16)}var fn=cn(),vn=cn();function hn(n,t){return n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2]&&n[3]===t[3]&&n[4]===t[4]&&n[5]===t[5]&&n[6]===t[6]&&n[7]===t[7]&&n[8]===t[8]&&n[9]===t[9]&&n[10]===t[10]&&n[11]===t[11]&&n[12]===t[12]&&n[13]===t[13]&&n[14]===t[14]&&n[15]===t[15]}function Mn(n,t,r,u,a){var o=[],i=[];return o[2]=r,i[2]=u,i[1]=o[2]*Math.tan(n/2),o[1]=-i[1],i[0]=i[1]*t,o[0]=-i[0],sn(o,i,a)}function sn(n,t,r){r||(r=cn());var u=[n[0],n[1],n[2],0],a=[t[0],t[1],t[2],0];q(a,u,fn),w(a,u,vn);var o=2*u[2],i=vn[0],e=vn[1],c=vn[2];return r[0]=o/i,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=o/e,r[6]=0,r[7]=0,r[8]=fn[0]/i,r[9]=fn[1]/e,r[10]=-fn[2]/c,r[11]=-1,r[12]=0,r[13]=0,r[14]=-o*a[2]/c,r[15]=0,r}function ln(n,t,r,u,a,o,i){i||(i=cn());var e=t-n,c=u-r,f=o-a;return i[0]=2/e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2/c,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-2/f,i[11]=0,i[12]=-(n+t)/e,i[13]=-(u+r)/c,i[14]=-(o+a)/f,i[15]=1,i}function dn(n,t,r,u,a,o,i){i||(i=cn());var e=t-n,c=u-r,f=o-a;return i[0]=2*a/e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=2*a/c,i[6]=0,i[7]=0,i[8]=(t+n)/e,i[9]=(u+r)/c,i[10]=-(o+a)/f,i[11]=-1,i[12]=0,i[13]=0,i[14]=-o*a*2/f,i[15]=0,i}function qn(n){return n||(n=cn()),n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function Xn(n){return n||(n=cn()),n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n}function Yn(n){return 1===n[0]&&0===n[1]&&0===n[2]&&0===n[3]&&0===n[4]&&1===n[5]&&0===n[6]&&0===n[7]&&0===n[8]&&0===n[9]&&1===n[10]&&0===n[11]&&0===n[12]&&0===n[13]&&0===n[14]&&1===n[15]}function Zn(n,t,r){r||(r=cn());var u,a,o,i,e,c,f=$([t[0],t[1],t[2],0],[]),v=Math.sin(n),h=Math.cos(n),M=1-h,s=f[0],l=f[1],d=f[2];return u=s*l,a=l*d,o=d*s,i=s*v,e=l*v,c=d*v,r[0]=M*s*s+h,r[1]=M*u+c,r[2]=M*o-e,r[3]=0,r[4]=M*u-c,r[5]=M*l*l+h,r[6]=M*a+i,r[7]=0,r[8]=M*o+e,r[9]=M*a-i,r[10]=M*d*d+h,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}function bn(n,t,r,u){u||(u=cn());var a,o,i,e,c,f,v,h,M,s,l=n[0],d=n[1],q=n[2],X=r[0],Y=r[1],Z=r[2],b=t[0],g=t[1],y=t[2];return l===b&&d===g&&q===y?qn():(a=l-b,o=d-g,i=q-y,e=Y*(i*=s=1/Math.sqrt(a*a+o*o+i*i))-Z*(o*=s),c=Z*(a*=s)-X*i,f=X*o-Y*a,(s=Math.sqrt(e*e+c*c+f*f))?(e*=s=1/s,c*=s,f*=s):(e=0,c=0,f=0),v=o*f-i*c,h=i*e-a*f,M=a*c-o*e,(s=Math.sqrt(v*v+h*h+M*M))?(v*=s=1/s,h*=s,M*=s):(v=0,h=0,M=0),u[0]=e,u[1]=v,u[2]=a,u[3]=0,u[4]=c,u[5]=h,u[6]=o,u[7]=0,u[8]=f,u[9]=M,u[10]=i,u[11]=0,u[12]=-(e*l+c*d+f*q),u[13]=-(v*l+h*d+M*q),u[14]=-(a*l+o*d+i*q),u[15]=1,u)}function gn(n,t){t||(t=n);var r=n[0],u=n[1],a=n[2],o=n[3],i=n[4],e=n[5],c=n[6],f=n[7],v=n[8],h=n[9],M=n[10],s=n[11],l=n[12],d=n[13],q=n[14],X=n[15],Y=r*e-u*i,Z=r*c-a*i,b=r*f-o*i,g=u*c-a*e,y=u*f-o*e,w=a*f-o*c,A=v*d-h*l,p=v*q-M*l,F=v*X-s*l,m=h*q-M*d,x=h*X-s*d,C=M*X-s*q,k=1/(Y*C-Z*x+b*m+g*F-y*p+w*A);return t[0]=(e*C-c*x+f*m)*k,t[1]=(-u*C+a*x-o*m)*k,t[2]=(d*w-q*y+X*g)*k,t[3]=(-h*w+M*y-s*g)*k,t[4]=(-i*C+c*F-f*p)*k,t[5]=(r*C-a*F+o*p)*k,t[6]=(-l*w+q*b-X*Z)*k,t[7]=(v*w-M*b+s*Z)*k,t[8]=(i*x-e*F+f*A)*k,t[9]=(-r*x+u*F-o*A)*k,t[10]=(l*y-d*b+X*Y)*k,t[11]=(-v*y+h*b-s*Y)*k,t[12]=(-i*m+e*p-c*A)*k,t[13]=(r*m-u*p+a*A)*k,t[14]=(-l*g+d*Z-q*Y)*k,t[15]=(v*g-h*Z+M*Y)*k,t}function yn(n,t){var r=n[4],u=n[14],a=n[8],o=n[13],i=n[12],e=n[9];if(!t||n===t){var c=n[1],f=n[2],v=n[3],h=n[6],M=n[7],s=n[11];return n[1]=r,n[2]=a,n[3]=i,n[4]=c,n[6]=e,n[7]=o,n[8]=f,n[9]=h,n[11]=u,n[12]=v,n[13]=M,n[14]=s,n}return t[0]=n[0],t[1]=r,t[2]=a,t[3]=i,t[4]=n[1],t[5]=n[5],t[6]=e,t[7]=o,t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=u,t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15],t}function wn(n,t,r){r||(r=n);var u=t[0],a=t[1],o=t[2],i=t[3];return r[0]=n[0]*u+n[4]*a+n[8]*o+n[12]*i,r[1]=n[1]*u+n[5]*a+n[9]*o+n[13]*i,r[2]=n[2]*u+n[6]*a+n[10]*o+n[14]*i,r[3]=n[3]*u+n[7]*a+n[11]*o+n[15]*i,r}function An(n,t,r){r||(r=n);var u=n[0],a=n[1],o=n[2],i=n[3],e=n[4],c=n[5],f=n[6],v=n[7],h=n[8],M=n[9],s=n[10],l=n[11],d=n[12],q=n[13],X=n[14],Y=n[15],Z=t[0],b=t[1],g=t[2],y=t[3],w=t[4],A=t[5],p=t[6],F=t[7],m=t[8],x=t[9],C=t[10],k=t[11],j=t[12],z=t[13],B=t[14],D=t[15];return r[0]=Z*u+b*e+g*h+y*d,r[1]=Z*a+b*c+g*M+y*q,r[2]=Z*o+b*f+g*s+y*X,r[3]=Z*i+b*v+g*l+y*Y,r[4]=w*u+A*e+p*h+F*d,r[5]=w*a+A*c+p*M+F*q,r[6]=w*o+A*f+p*s+F*X,r[7]=w*i+A*v+p*l+F*Y,r[8]=m*u+x*e+C*h+k*d,r[9]=m*a+x*c+C*M+k*q,r[10]=m*o+x*f+C*s+k*X,r[11]=m*i+x*v+C*l+k*Y,r[12]=j*u+z*e+B*h+D*d,r[13]=j*a+z*c+B*M+D*q,r[14]=j*o+z*f+B*s+D*X,r[15]=j*i+z*v+B*l+D*Y,r}function pn(t,r,u){void 0===u&&(u=n(9));var a=t[0],o=t[3],i=t[6],e=t[1],c=t[4],f=t[7],v=t[2],h=t[5],M=t[8],s=r[0],l=r[3],d=r[6],q=r[1],X=r[4],Y=r[7],Z=r[2],b=r[5],g=r[8];return u[0]=a*s+o*q+i*Z,u[3]=a*l+o*X+i*b,u[6]=a*d+o*Y+i*g,u[1]=e*s+c*q+f*Z,u[4]=e*l+c*X+f*b,u[7]=e*d+c*Y+f*g,u[2]=v*s+h*q+M*Z,u[5]=v*l+h*X+M*b,u[8]=v*d+h*Y+M*g,u}function Fn(n,t,r){r||(r=t);var u=t[0],a=t[1],o=t[2];return r[0]=n[0]*u+n[4]*a+n[8]*o+n[12],r[1]=n[1]*u+n[5]*a+n[9]*o+n[13],r[2]=n[2]*u+n[6]*a+n[10]*o+n[14],r}function mn(n,t,r){return r[0]=n[0]*t[0]+n[4]*t[1]+n[8]*t[2]+n[12]*t[3],r[1]=n[1]*t[0]+n[5]*t[1]+n[9]*t[2]+n[13]*t[3],r[2]=n[2]*t[0]+n[6]*t[1]+n[10]*t[2]+n[14]*t[3],r[3]=n[3]*t[0]+n[7]*t[1]+n[11]*t[2]+n[15]*t[3],r}function xn(n,t,r){for(var u,a,o,i,e,c=r||[],f=t.length,v=n[0],h=n[1],M=n[2],s=n[3],l=n[4],d=n[5],q=n[6],X=n[7],Y=n[8],Z=n[9],b=n[10],g=n[11],y=n[12],w=n[13],A=n[14],p=n[15],F=0;F<f;++F)u=(i=t[F])[0],a=i[1],o=i[2],(e=c[F]||(c[F]=[0,0,0]))[0]=v*u+l*a+Y*o+y,e[1]=h*u+d*a+Z*o+w,e[2]=M*u+q*a+b*o+A,e[3]=s*u+X*a+g*o+p;return c.length=f,c}function Cn(n,t,r){var u;r||(r=t);var a,o,i,e=t.length,c=n[0],f=n[1],v=n[2],h=n[3],M=n[4],s=n[5],l=n[6],d=n[7],q=n[8],X=n[9],Y=n[10],Z=n[11],b=n[12],g=n[13],y=n[14],w=n[15];for(u=0;u<e;u+=3)r[u+0]=c*(a=t[u+0])+M*(o=t[u+1])+q*(i=t[u+2])+b,r[u+1]=f*a+s*o+X*i+g,r[u+2]=v*a+l*o+Y*i+y,r[u+3]=h*a+d*o+Z*i+w;return r}function kn(n,t,r){var u;r||(r=t);var a,o,i,e=t.length,c=n[0],f=n[1],v=n[2],h=n[3],M=n[4],s=n[5],l=n[6],d=n[7],q=n[8],X=n[9],Y=n[10],Z=n[11],b=n[12],g=n[13],y=n[14],w=n[15];for(u=0;u<e;u+=4)r[u+0]=c*(a=t[u+0])+M*(o=t[u+1])+q*(i=t[u+2])+b,r[u+1]=f*a+s*o+X*i+g,r[u+2]=v*a+l*o+Y*i+y,r[u+3]=h*a+d*o+Z*i+w;return r}function jn(n,t,r){var u=t[0],a=t[1],o=t[2];return(r=r||M())[0]=n[0]*u+n[4]*a+n[8]*o,r[1]=n[1]*u+n[5]*a+n[9]*o,r[2]=n[2]*u+n[6]*a+n[10]*o,r}function zn(n,t,r){var u=t[0],a=t[1],o=t[2],i=t[3];return(r=r||s())[0]=n[0]*u+n[4]*a+n[8]*o+n[12]*i,r[1]=n[1]*u+n[5]*a+n[9]*o+n[13]*i,r[2]=n[2]*u+n[6]*a+n[10]*o+n[14]*i,r[3]=n[3]*u+n[7]*a+n[11]*o+n[15]*i,r}function Bn(n,t){void 0===t&&(t=qn());var r=n[0],u=n[1],a=n[2];return t[0]*=r,t[4]*=u,t[8]*=a,t[1]*=r,t[5]*=u,t[9]*=a,t[2]*=r,t[6]*=u,t[10]*=a,t[3]*=r,t[7]*=u,t[11]*=a,t}function Dn(n,t){return void 0===t&&(t=qn()),t[0]=n[0],t[5]=n[1],t[10]=n[2],t}function En(n,t){return void 0===t&&(t=Xn()),t[0]=n[0],t[4]=n[1],t}var Gn,Hn=(Gn=n(3),function(n,t,r,u){return Gn[0]=n,Gn[1]=t,Gn[2]=r,Dn(Gn,u)});function In(n,t,r,u){return u[0]*=n,u[4]*=t,u[8]*=r,u[1]*=n,u[5]*=t,u[9]*=r,u[2]*=n,u[6]*=t,u[10]*=r,u[3]*=n,u[7]*=t,u[11]*=r,u}function Jn(n){return Hn(n,n,n)}function Kn(n,t,r,u){return void 0===u&&(u=cn()),et(t,u),Bn(r,u),Nn(n,u),u}var Ln=function(){var n=M(),t=cn();return function(r,u,a,o){n[0]=r[0],n[1]=r[1],n[2]=r[2];var i=Q(n);n[0]=r[4],n[1]=r[5],n[2]=r[6];var e=Q(n);n[8]=r[8],n[9]=r[9],n[10]=r[10];var c=Q(n);Un(r)<0&&(i=-i),u[0]=r[12],u[1]=r[13],u[2]=r[14],t.set(r);var f=1/i,v=1/e,h=1/c;t[0]*=f,t[1]*=f,t[2]*=f,t[4]*=v,t[5]*=v,t[6]*=v,t[8]*=h,t[9]*=h,t[10]*=h,nt(t,a),o[0]=i,o[1]=e,o[2]=c}}();function Nn(n,t){return void 0===t&&(t=qn()),On(n[0],n[1],n[2],t)}function On(n,t,r,u){void 0===u&&(u=qn());var a=u[3];u[0]+=a*n,u[1]+=a*t,u[2]+=a*r;var o=u[7];u[4]+=o*n,u[5]+=o*t,u[6]+=o*r;var i=u[11];u[8]+=i*n,u[9]+=i*t,u[10]+=i*r;var e=u[15];return u[12]+=e*n,u[13]+=e*t,u[14]+=e*r,u}function Pn(n,t,r){return r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=t[0],r[13]=t[1],r[14]=t[2],r[15]=n[15],r}function Qn(n,t){var r=t||qn();return r[12]=n[0],r[13]=n[1],r[14]=n[2],r}function Rn(n,t){var r=t||Xn();return r[6]=n[0],r[7]=n[1],r}var Sn=function(){var t=n(3);return function(n,r,u,a){return t[0]=n,t[1]=r,t[2]=u,Qn(t,a)}}();function Tn(n,t){return Sn(n,n,n,t)}function Un(n){var t=n[0],r=n[1],u=n[2],a=n[3],o=n[4],i=n[5],e=n[6],c=n[7],f=n[8],v=n[9],h=n[10],M=n[11],s=n[12],l=n[13],d=n[14],q=n[15];return s*v*e*a-f*l*e*a-s*i*h*a+o*l*h*a+f*i*d*a-o*v*d*a-s*v*u*c+f*l*u*c+s*r*h*c-t*l*h*c-f*r*d*c+t*v*d*c+s*i*u*M-o*l*u*M-s*r*e*M+t*l*e*M+o*r*d*M-t*i*d*M-f*i*u*q+o*v*u*q+f*r*e*q-t*v*e*q-o*r*h*q+t*i*h*q}function Vn(n,r,u){void 0===u&&(u=M());var a=n[0],o=n[4],i=n[8],e=n[1],c=n[5],f=n[9],v=n[2],h=n[6],s=n[10];return\"XYZ\"===r?(u[1]=Math.asin(t(i,-1,1)),Math.abs(i)<.99999?(u[0]=Math.atan2(-f,s),u[2]=Math.atan2(-o,a)):(u[0]=Math.atan2(h,c),u[2]=0)):\"YXZ\"===r?(u[0]=Math.asin(-t(f,-1,1)),Math.abs(f)<.99999?(u[1]=Math.atan2(i,s),u[2]=Math.atan2(e,c)):(u[1]=Math.atan2(-v,a),u[2]=0)):\"ZXY\"===r?(u[0]=Math.asin(t(h,-1,1)),Math.abs(h)<.99999?(u[1]=Math.atan2(-v,s),u[2]=Math.atan2(-o,c)):(u[1]=0,u[2]=Math.atan2(e,a))):\"ZYX\"===r?(u[1]=Math.asin(-t(v,-1,1)),Math.abs(v)<.99999?(u[0]=Math.atan2(h,s),u[2]=Math.atan2(e,a)):(u[0]=0,u[2]=Math.atan2(-o,c))):\"YZX\"===r?(u[2]=Math.asin(t(e,-1,1)),Math.abs(e)<.99999?(u[0]=Math.atan2(-f,c),u[1]=Math.atan2(-v,a)):(u[0]=0,u[1]=Math.atan2(i,s))):\"XZY\"===r&&(u[2]=Math.asin(-t(o,-1,1)),Math.abs(o)<.99999?(u[0]=Math.atan2(h,c),u[1]=Math.atan2(i,a)):(u[0]=Math.atan2(-f,s),u[1]=0)),u}function Wn(n,t,r,u,a,o){var i=o||cn(),e=(n-t)/(r-t);return i[0]=u[0]+e*(a[0]-u[0]),i[1]=u[1]+e*(a[1]-u[1]),i[2]=u[2]+e*(a[2]-u[2]),i[3]=u[3]+e*(a[3]-u[3]),i[4]=u[4]+e*(a[4]-u[4]),i[5]=u[5]+e*(a[5]-u[5]),i[6]=u[6]+e*(a[6]-u[6]),i[7]=u[7]+e*(a[7]-u[7]),i[8]=u[8]+e*(a[8]-u[8]),i[9]=u[9]+e*(a[9]-u[9]),i[10]=u[10]+e*(a[10]-u[10]),i[11]=u[11]+e*(a[11]-u[11]),i[12]=u[12]+e*(a[12]-u[12]),i[13]=u[13]+e*(a[13]-u[13]),i[14]=u[14]+e*(a[14]-u[14]),i[15]=u[15]+e*(a[15]-u[15]),i}function $n(n){return void 0===n&&(n=s()),n[0]=0,n[1]=0,n[2]=0,n[3]=1,n}function _n(n,t,u){void 0===u&&(u=s());var a=n[0]*r/2,o=n[1]*r/2,i=n[2]*r/2,e=Math.cos(a),c=Math.cos(o),f=Math.cos(i),v=Math.sin(a),h=Math.sin(o),M=Math.sin(i);return\"XYZ\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f-v*h*M):\"YXZ\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f+v*h*M):\"ZXY\"===t?(u[0]=v*c*f-e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f-v*h*M):\"ZYX\"===t?(u[0]=v*c*f-e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f+v*h*M):\"YZX\"===t?(u[0]=v*c*f+e*h*M,u[1]=e*h*f+v*c*M,u[2]=e*c*M-v*h*f,u[3]=e*c*f-v*h*M):\"XZY\"===t&&(u[0]=v*c*f-e*h*M,u[1]=e*h*f-v*c*M,u[2]=e*c*M+v*h*f,u[3]=e*c*f+v*h*M),u}function nt(n,t){void 0===t&&(t=s());var r,u=n[0],a=n[4],o=n[8],i=n[1],e=n[5],c=n[9],f=n[2],v=n[6],h=n[10],M=u+e+h;return M>0?(r=.5/Math.sqrt(M+1),t[3]=.25/r,t[0]=(v-c)*r,t[1]=(o-f)*r,t[2]=(i-a)*r):u>e&&u>h?(r=2*Math.sqrt(1+u-e-h),t[3]=(v-c)/r,t[0]=.25*r,t[1]=(a+i)/r,t[2]=(o+f)/r):e>h?(r=2*Math.sqrt(1+e-u-h),t[3]=(o-f)/r,t[0]=(a+i)/r,t[1]=.25*r,t[2]=(c+v)/r):(r=2*Math.sqrt(1+h-u-e),t[3]=(i-a)/r,t[0]=(o+f)/r,t[1]=(c+v)/r,t[2]=.25*r),t}function tt(n,t,r){void 0===r&&(r=s());var u=Math.sqrt(v(n,n)*v(t,t)),a=u+v(n,t);return a<1e-8*u?(a=0,Math.abs(n[0])>Math.abs(n[2])?(r[0]=-n[1],r[1]=n[0],r[2]=0):(r[0]=0,r[1]=-n[2],r[2]=n[1])):J(n,t,r),r[3]=a,ct(r)}function rt(n,t){void 0===t&&(t=s());var r=n[3]/2,u=Math.sin(r);return t[0]=u*n[0],t[1]=u*n[1],t[2]=u*n[2],t[3]=Math.cos(r),t}function ut(n,t,r){return void 0===r&&(r=M()),et(n,fn),Vn(fn,t,r),r}function at(n,t,r){void 0===r&&(r=s());var u=n[0],a=n[1],o=n[2],i=n[3],e=t[0],c=t[1],f=t[2],v=t[3];return r[0]=i*e+u*v+a*f-o*c,r[1]=i*c+a*v+o*e-u*f,r[2]=i*f+o*v+u*c-a*e,r[3]=i*v-u*e-a*c-o*f,r}function ot(n,t,r){void 0===r&&(r=M());var u=t[0],a=t[1],o=t[2],i=n[0],e=n[1],c=n[2],f=n[3],v=f*u+e*o-c*a,h=f*a+c*u-i*o,s=f*o+i*a-e*u,l=-i*u-e*a-c*o;return r[0]=v*f+l*-i+h*-c-s*-e,r[1]=h*f+l*-e+s*-i-v*-c,r[2]=s*f+l*-c+v*-e-h*-i,r}function it(n,t){t=qn(t);var r=n[0],u=n[1],a=n[2],o=n[3],i=2*r,e=2*u,c=2*a,f=i*o,v=e*o,h=c*o,M=i*r,s=e*r,l=c*r,d=e*u,q=c*u,X=c*a;return t[0]=1-(d+X),t[1]=s+h,t[2]=l-v,t[4]=s-h,t[5]=1-(M+X),t[6]=q+f,t[8]=l+v,t[9]=q-f,t[10]=1-(M+d),t}function et(n,t){var r=n[0],u=n[1],a=n[2],o=n[3],i=r+r,e=u+u,c=a+a,f=r*i,v=r*e,h=r*c,M=u*e,s=u*c,l=a*c,d=o*i,q=o*e,X=o*c;return t[0]=1-(M+l),t[4]=v-X,t[8]=h+q,t[1]=v+X,t[5]=1-(f+l),t[9]=s-d,t[2]=h-q,t[6]=s+d,t[10]=1-(f+M),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function ct(n,t){void 0===t&&(t=n);var r=L([n[0],n[1],n[2],n[3]]);return t[0]=n[0]/r,t[1]=n[1]/r,t[2]=n[2]/r,t[3]=n[3]/r,t}function ft(n,t){return void 0===t&&(t=n),t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t}function vt(n,t){return ct(ft(n,t))}function ht(n,t){void 0===t&&(t=s());var r=(n=ct(n,u))[3],a=2*Math.acos(r),o=Math.sqrt(1-r*r);return o<.001?(t[0]=n[0],t[1]=n[1],t[2]=n[2]):(t[0]=n[0]/o,t[1]=n[1]/o,t[2]=n[2]/o),t[3]=a,t}function Mt(n,t,r,u,f,h){h=h||M();var s=p(u,r,a),l=p(f,r,o),d=J(t,l,i),q=v(s,d);if(q<1e-6)return null;var X=p(n,r,e),Y=v(X,d);if(Y<0||Y>q)return null;var Z=J(X,s,c),b=v(t,Z);if(b<0||Y+b>q)return null;var g=v(l,Z)/q;return h[0]=n[0]+g*t[0],h[1]=n[1]+g*t[1],h[2]=n[2]+g*t[2],h}function st(n,t,r,a,o){u[0]=t[0],u[1]=t[1],u[2]=t[2],u[3]=1,zn(n,u,f),a[0]=f[0],a[1]=f[1],a[2]=f[2],u[0]=r[0],u[1]=r[1],u[2]=r[2],jn(n,u,f),_(f),o[0]=f[0],o[1]=f[1],o[2]=f[2]}export{g as addVec3,y as addVec3Scalar,q as addVec4,X as addVec4Scalar,rt as angleAxisToQuaternion,tn as angleVec3,hn as compareMat4,A as compareVec3,Kn as composeMat4,ft as conjugateQuat,en as createMat3,cn as createMat4,h as createVec2,M as createVec3,s as createVec4,J as cross3Vec3,I as cross3Vec4,Ln as decomposeMat4,Un as determinantMat4,V as distVec2,S as distVec3,B as divScalarVec3,G as divScalarVec4,j as divVec3,D as divVec3Scalar,z as divVec4,E as divVec4Scalar,N as dotVec2,v as dotVec3,H as dotVec4,_n as eulerToQuat,dn as frustumMat4,sn as frustumMat4v,m as geometricMeanVec2,Xn as identityMat3,qn as identityMat4,$n as identityQuat,gn as inverseMat4,vt as inverseQuat,Yn as isIdentityMat4,T as lenVec2,Q as lenVec3,L as lenVec4,Wn as lerpMat4,U as lerpVec3,bn as lookAtMat4v,Vn as mat4ToEuler,nt as mat4ToQuat,pn as mulMat3,An as mulMat4,wn as mulMat4v4,at as mulQuats,b as mulVec2Scalar,Z as mulVec3Scalar,k as mulVec4,Y as mulVec4Scalar,l as negateVec3,d as negateVec4,ct as normalizeQuat,nn as normalizeVec2,_ as normalizeVec3,$ as normalizeVec4,ln as orthoMat4c,Mn as perspectiveMat4,ht as quatToAngleAxis,ut as quatToEuler,it as quatToMat4,et as quatToRotationMat4,Mt as rayTriangleIntersect,W as rcpVec3,Zn as rotationMat4v,In as scaleMat4c,Bn as scaleMat4v,En as scalingMat3v,Hn as scalingMat4c,Jn as scalingMat4s,Dn as scalingMat4v,Pn as setMat4Translation,P as sqLenVec2,O as sqLenVec3,K as sqLenVec4,C as subScalarVec4,F as subVec2,p as subVec3,w as subVec4,x as subVec4Scalar,Fn as transformPoint3,mn as transformPoint4,xn as transformPoints3,Cn as transformPositions3,kn as transformPositions4,st as transformRay,jn as transformVec3,zn as transformVec4,On as translateMat4c,Nn as translateMat4v,Rn as translationMat3v,Sn as translationMat4c,Tn as translationMat4s,Qn as translationMat4v,yn as transposeMat4,on as triangleNormal,ot as vec3ApplyQuat,rn as vec3FromMat4Scale,tt as vec3PairToQuat,un as vecToArray};\n//# sourceMappingURL=index.es.map\n","/** @private */\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n        (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n        (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n        (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n            intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n            (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\nexport {earcut};","var e=1e3,r=1001,a=1002,o=1003,p=1004,t=1004,v=1005,x=1005,b=1006,c=1007,d=1007,f=1008,g=1008,h=1009,i=1010,j=1011,k=1012,l=1013,m=1014,n=1015,q=1016,s=1017,u=1018,w=1020,y=1021,z=1022,A=1023,B=1024,C=1025,D=1026,E=1027,F=1028,G=1029,H=1030,I=1031,J=1033,K=33776,L=33777,M=33778,N=33779,O=35840,P=35841,Q=35842,R=35843,S=36196,T=37492,U=37496,V=37808,W=37809,X=37810,Y=37811,Z=37812,$=37813,_=37814,ee=37815,re=37816,ae=37817,oe=37818,pe=37819,te=37820,ve=37821,xe=36492,be=3e3,ce=3001,de=1e4,fe=10001,ge=10002,he=2e4,ie=20001,je=20002,ke=20003,le=20004,me=3e4,ne=300001,qe=4e5,se=400001,ue=400002,we=400003,ye=400004,ze=400005,Ae=5e5,Be=500001,Ce=500002,De=500003;export{y as AlphaFormat,i as ByteType,se as CentimetersUnit,r as ClampToEdgeWrapping,De as CustomProjectionType,D as DepthFormat,E as DepthStencilFormat,ne as FastRender,ye as FeetUnit,n as FloatType,Ce as FrustumProjectionType,de as GIFMediaType,q as HalfFloatType,ze as InchesUnit,l as IntType,fe as JPEGMediaType,be as LinearEncoding,b as LinearFilter,g as LinearMipMapLinearFilter,d as LinearMipMapNearestFilter,f as LinearMipmapLinearFilter,c as LinearMipmapNearestFilter,ie as LinesPrimitive,C as LuminanceAlphaFormat,B as LuminanceFormat,qe as MetersUnit,ue as MillimetersUnit,a as MirroredRepeatWrapping,o as NearestFilter,x as NearestMipMapLinearFilter,p as NearestMipMapNearestFilter,v as NearestMipmapLinearFilter,t as NearestMipmapNearestFilter,Be as OrthoProjectionType,ge as PNGMediaType,Ae as PerspectiveProjectionType,he as PointsPrimitive,me as QualityRender,A as RGBAFormat,J as RGBAIntegerFormat,pe as RGBA_ASTC_10x10_Format,re as RGBA_ASTC_10x5_Format,ae as RGBA_ASTC_10x6_Format,oe as RGBA_ASTC_10x8_Format,te as RGBA_ASTC_12x10_Format,ve as RGBA_ASTC_12x12_Format,V as RGBA_ASTC_4x4_Format,W as RGBA_ASTC_5x4_Format,X as RGBA_ASTC_5x5_Format,Y as RGBA_ASTC_6x5_Format,Z as RGBA_ASTC_6x6_Format,$ as RGBA_ASTC_8x5_Format,_ as RGBA_ASTC_8x6_Format,ee as RGBA_ASTC_8x8_Format,xe as RGBA_BPTC_Format,U as RGBA_ETC2_EAC_Format,R as RGBA_PVRTC_2BPPV1_Format,Q as RGBA_PVRTC_4BPPV1_Format,L as RGBA_S3TC_DXT1_Format,M as RGBA_S3TC_DXT3_Format,N as RGBA_S3TC_DXT5_Format,z as RGBFormat,S as RGB_ETC1_Format,T as RGB_ETC2_Format,P as RGB_PVRTC_2BPPV1_Format,O as RGB_PVRTC_4BPPV1_Format,K as RGB_S3TC_DXT1_Format,H as RGFormat,I as RGIntegerFormat,F as RedFormat,G as RedIntegerFormat,e as RepeatWrapping,j as ShortType,ke as SolidPrimitive,le as SurfacePrimitive,je as TrianglesPrimitive,h as UnsignedByteType,w as UnsignedInt248Type,m as UnsignedIntType,s as UnsignedShort4444Type,u as UnsignedShort5551Type,k as UnsignedShortType,we as YardsUnit,ce as sRGBEncoding};\n//# sourceMappingURL=index.es.map\n","var i,a=1e3,t=1001,e=((i={})[1e3]=\"BasicEntity\",i[1001]=\"BasicAggregation\",i),g={BasicEntity:1e3,BasicAggregation:1001};export{t as BasicAggregation,a as BasicEntity,g as typeCodes,e as typeNames};\n//# sourceMappingURL=index.es.map\n","var n,i=2001,e=2e3,t=2001,r=2002,l=2003,u=2004,a=2005,o=2006,d=2007,g=2008,B=2009,s=2010,T=2011,y=2012,c=2013,C=2014,R=2015,m=2016,I=2017,v=2018,F=2019,P=2020,S=2021,p=2022,w=2023,O=2024,E=2025,b=2026,j=2027,U=2028,W=2029,f=2030,h=2031,q=((n={})[2e3]=\"Bridge\",n[2001]=\"BridgePart\",n[2002]=\"BridgeInstallation\",n[2003]=\"BridgeConstructiveElement\",n[2004]=\"BridgeRoom\",n[2005]=\"BridgeFurniture\",n[2006]=\"Building\",n[2007]=\"BuildingPart\",n[2008]=\"BuildingInstallation\",n[2009]=\"BuildingConstructiveElement\",n[2010]=\"BuildingFurniture\",n[2011]=\"BuildingStorey\",n[2012]=\"BuildingRoom\",n[2013]=\"BuildingUnit\",n[2014]=\"CityFurniture\",n[2015]=\"CityObjectGroup\",n[2016]=\"LandUse\",n[2017]=\"OtherConstruction\",n[2018]=\"PlantCover\",n[2019]=\"SolitaryVegetationObject\",n[2020]=\"TINRelief\",n[2021]=\"TransportationSquare\",n[2022]=\"Railway\",n[w]=\"Road\",n[2024]=\"Tunnel\",n[2025]=\"TunnelPart\",n[2026]=\"TunnelInstallation\",n[2027]=\"TunnelInstallation\",n[2028]=\"TunnelHollowSpace\",n[2029]=\"TunnelFurniture\",n[2030]=\"WaterBody\",n[2031]=\"Waterway\",n),G={Bridge:2e3,BridgePart:2001,BridgeInstallation:2002,BridgeConstructiveElement:2003,BridgeRoom:2004,BridgeFurniture:2005,Building:2006,BuildingPart:2007,BuildingInstallation:2008,BuildingConstructiveElement:2009,BuildingFurniture:2010,BuildingStorey:2011,BuildingRoom:2012,BuildingUnit:2013,CityFurniture:2014,CityObjectGroup:2015,LandUse:2016,OtherConstruction:2017,PlantCover:2018,SolitaryVegetationObject:2019,TINRelief:2020,TransportationSquare:2021,Railway:2022,Road:w,Tunnel:2024,TunnelPart:2025,TunnelInstallation:b,TunnelConstructiveElement:b,TunnelHollowSpace:2028,TunnelFurniture:2029,WaterBody:2030,Waterway:2031};export{i as BasicAggregation,e as Bridge,l as BridgeConstructiveElement,a as BridgeFurniture,r as BridgeInstallation,t as BridgePart,u as BridgeRoom,o as Building,B as BuildingConstructiveElement,s as BuildingFurniture,g as BuildingInstallation,d as BuildingPart,y as BuildingRoom,T as BuildingStorey,c as BuildingUnit,C as CityFurniture,R as CityObjectGroup,m as LandUse,I as OtherConstruction,v as PlantCover,p as Railway,w as Road,F as SolitaryVegetationObject,P as TINRelief,S as TransportationSquare,O as Tunnel,j as TunnelConstructiveElement,W as TunnelFurniture,U as TunnelHollowSpace,b as TunnelInstallation,E as TunnelPart,f as WaterBody,h as Waterway,G as typeCodes,q as typeNames};\n//# sourceMappingURL=index.es.map\n","import {\n    createVec2,\n    createVec3,\n    cross3Vec3,\n    dotVec3,\n    lenVec3,\n    mulVec3Scalar,\n    normalizeVec3,\n    subVec3\n} from \"@xeokit/matrix\";\nimport type {SceneModel} from \"@xeokit/scene\";\nimport type {DataModel} from \"@xeokit/data\";\n// @ts-ignore\nimport {earcut} from './earcut';\nimport {TrianglesPrimitive} from \"@xeokit/constants\";\nimport {BasicAggregation} from \"@xeokit/basictypes\";\nimport {typeCodes} from \"@xeokit/cityjsontypes_1_1_3\";\nimport {SDKError} from \"@xeokit/core\";\n\nconst tempVec2a = createVec2();\nconst tempVec3a = createVec3();\nconst tempVec3b = createVec3();\nconst tempVec3c = createVec3();\n\n/**\n * Loads CityJSON into a {@link @xeokit/scene!SceneModel | SceneModel} and/or a {@link @xeokit/data!DataModel | DataModel}.\n *\n * * Expects {@link @xeokit/scene!SceneModel.built | SceneModel.built} and {@link @xeokit/scene!SceneModel.destroyed | SceneModel.destroyed} to be ````false````\n * * Does not call {@link @xeokit/scene!SceneModel.build | SceneModel.build} - we call that ourselves, when we have finished building the SceneModel\n *\n * See {@link \"@xeokit/cityjson\"} for usage.\n *\n * @param params - Loading parameters.\n * @param params.fileData - CityJSON file data.\n * @param params.sceneModel - SceneModel to load into.\n * @param params.dataModel - DataModel to load into.\n * @param options - CityJSON loading options\n * @param options.rotateX - True to rotate the model about the X-axis. Default is false.\n * @returns {@link @xeokit/core!SDKError} If the SceneModel has already been destroyed.\n * @returns {@link @xeokit/core!SDKError} If the SceneModel has already been built.\n * @returns {@link @xeokit/core!SDKError} If the DataModel has already been destroyed.\n * @returns {@link @xeokit/core!SDKError} If the DataModel has already been built.\n * @returns {Promise} Resolves when CityJSON has been loaded into the SceneModel and/or DataModel.\n */\nexport function loadCityJSON(params: {\n                                 fileData: any,\n                                 sceneModel: SceneModel,\n                                 dataModel?: DataModel\n                             },\n                             options: {\n                                 rotateX?: boolean;\n                             } = {\n                                 rotateX: false\n                             }): Promise<any> {\n    if (params.sceneModel) {\n        if (params.sceneModel.destroyed) {\n            throw new SDKError(\"SceneModel already destroyed\");\n        }\n        if (params.sceneModel.built) {\n            throw new SDKError(\"SceneModel already built\");\n        }\n    }\n    if (params.dataModel) {\n        if (params.dataModel.destroyed) {\n            throw new SDKError(\"DataModel already destroyed\");\n        }\n        if (params.dataModel.built) {\n            throw new SDKError(\"DataModel already built\");\n        }\n    }\n    return new Promise<void>(function (resolve, reject) {\n        const fileData = params.fileData;\n        const ctx = {\n            fileData,\n            vertices: (fileData.transform && params.sceneModel)\n                ? transformVertices(fileData.vertices, fileData.transform, options.rotateX)\n                : fileData.vertices,\n            sceneModel: params.sceneModel,\n            dataModel: params.dataModel,\n            nextId: 0\n        };\n        parseCityJSON(ctx);\n        resolve();\n    });\n}\n\nfunction transformVertices(vertices: any, transform: any, rotateX: boolean) {\n    const transformedVertices = [];\n    const scale = transform.scale || createVec3([1, 1, 1]);\n    const translate = transform.translate || createVec3([0, 0, 0]);\n    for (let i = 0, j = 0; i < vertices.length; i++, j += 3) {\n        const x = (vertices[i][0] * scale[0]) + translate[0];\n        const y = (vertices[i][1] * scale[1]) + translate[1];\n        const z = (vertices[i][2] * scale[2]) + translate[2];\n        if (rotateX) {\n            transformedVertices.push([x, z, y]);\n        } else {\n            transformedVertices.push([x, y, z]);\n        }\n    }\n    return transformedVertices;\n}\n\nfunction parseCityJSON(ctx: any) {\n    const fileData = ctx.fileData;\n    const cityObjects = fileData.CityObjects;\n    for (const objectId in cityObjects) {\n        parseCityObject(ctx, cityObjects[objectId], objectId);\n    }\n    if (ctx.dataModel) {\n        for (const objectId in cityObjects) {\n            parseRelationship(ctx, cityObjects[objectId], objectId);\n        }\n    }\n}\n\nfunction parseCityObject(ctx: any, cityObject: any, objectId: any) {\n    if (ctx.dataModel) {\n        ctx.dataModel.createObject({\n            id: objectId,\n            name: cityObject.type + \" : \" + objectId,\n            type: typeCodes[cityObject.type] | 0,\n            parent: cityObject.parents ? cityObject.parents[0] : null\n        });\n    }\n    if (ctx.sceneModel) {\n        if (!(cityObject.geometry && cityObject.geometry.length > 0)) {\n            return;\n        }\n        const meshIds: string | any[] = [];\n        for (let i = 0, len = cityObject.geometry.length; i < len; i++) {\n            const geometry = cityObject.geometry[i];\n            let objectMaterial;\n            let surfaceMaterials;\n            const appearance = ctx.fileData.appearance;\n            if (appearance) {\n                const materials = appearance.materials;\n                if (materials) {\n                    const geometryMaterial = geometry.material;\n                    if (geometryMaterial) {\n                        const themeIds = Object.keys(geometryMaterial);\n                        if (themeIds.length > 0) {\n                            const themeId = themeIds[0];\n                            const theme = geometryMaterial[themeId];\n                            if (theme.value !== undefined) {\n                                objectMaterial = materials[theme.value];\n                            } else {\n                                const values = theme.values;\n                                if (values) {\n                                    surfaceMaterials = [];\n                                    for (let j = 0, lenj = values.length; j < lenj; j++) {\n                                        const value = values[i];\n                                        const surfaceMaterial = materials[value];\n                                        surfaceMaterials.push(surfaceMaterial);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (surfaceMaterials) {\n                parseGeometrySurfacesWithOwnMaterials(ctx, geometry, surfaceMaterials, meshIds);\n            } else {\n                parseGeometrySurfacesWithSharedMaterial(ctx, geometry, objectMaterial, meshIds);\n            }\n        }\n        if (meshIds.length > 0) {\n            ctx.sceneModel.createObject({\n                id: objectId,\n                meshIds: meshIds\n            });\n        }\n    }\n}\n\nfunction parseRelationship(ctx: any, cityObject: any, objectId: any) {\n    if (cityObject.parents) {\n        ctx.dataModel.createRelationship({\n            relatingObjectId: cityObject.parents[0],\n            relatedObjectId: objectId,\n            type: BasicAggregation\n        });\n    }\n}\n\nfunction parseGeometrySurfacesWithOwnMaterials(ctx: any, geometry: any, surfaceMaterials: any, meshIds: any) {\n    const geomType = geometry.type;\n    switch (geomType) {\n        case \"MultiPoint\":\n            break;\n        case \"MultiLineString\":\n            break;\n        case \"MultiSurface\":\n        case \"CompositeSurface\":\n            const surfaces = geometry.boundaries;\n            parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n            break;\n        case \"Solid\":\n            const shells = geometry.boundaries;\n            for (let j = 0; j < shells.length; j++) {\n                const surfaces = shells[j];\n                parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n            }\n            break;\n        case \"MultiSolid\":\n        case \"CompositeSolid\":\n            const solids = geometry.boundaries;\n            for (let j = 0; j < solids.length; j++) {\n                for (let k = 0; k < solids[j].length; k++) {\n                    const surfaces = solids[j][k];\n                    parseSurfacesWithOwnMaterials(ctx, surfaceMaterials, surfaces, meshIds);\n                }\n            }\n            break;\n        case \"GeometryInstance\":\n            break;\n    }\n}\n\nfunction parseSurfacesWithOwnMaterials(ctx: any, surfaceMaterials: any, surfaces: any, meshIds: any) {\n    const vertices = ctx.vertices;\n    const sceneModel = ctx.sceneModel;\n    for (let i = 0; i < surfaces.length; i++) {\n        const surface = surfaces[i];\n        const surfaceMaterial = surfaceMaterials[i] || {diffuseColor: [0.8, 0.8, 0.8], transparency: 1.0};\n        const face = [];\n        const holes = [];\n        const sharedIndices:any[] = [];\n        const geometryCfg:any = {\n            positions: [],\n            indices: []\n        };\n        for (let j = 0; j < surface.length; j++) {\n            if (face.length > 0) {\n                holes.push(face.length);\n            }\n            const newFace = extractLocalIndices(ctx, surface[j], sharedIndices, geometryCfg);\n            face.push(...newFace);\n        }\n        if (face.length === 3) { // Triangle\n            geometryCfg.indices.push(face[0]);\n            geometryCfg.indices.push(face[1]);\n            geometryCfg.indices.push(face[2]);\n        } else if (face.length > 3) { // Polygon\n            // Prepare to triangulate\n            const pList = [];\n            for (let k = 0; k < face.length; k++) {\n                pList.push({\n                    x: vertices[sharedIndices[face[k]]][0],\n                    y: vertices[sharedIndices[face[k]]][1],\n                    z: vertices[sharedIndices[face[k]]][2]\n                });\n            }\n            const normal = getNormalOfPositions(pList, createVec3());\n            // Convert to 2D\n            let pv = [];\n            for (let k = 0; k < pList.length; k++) {\n                to2D(pList[k], normal, tempVec2a);\n                pv.unshift(tempVec2a[0]);\n                pv.unshift(tempVec2a[1]);\n            }\n            // Triangulate\n            const tr = earcut(pv, holes, 2);\n            // Create triangles\n            for (let k = 0; k < tr.length; k += 3) {\n                geometryCfg.indices.unshift(face[tr[k]]);\n                geometryCfg.indices.unshift(face[tr[k + 1]]);\n                geometryCfg.indices.unshift(face[tr[k + 2]]);\n            }\n        }\n        const geometryId = \"\" + ctx.nextId++;\n        sceneModel.createGeometry({\n            id: geometryId,\n            primitive: TrianglesPrimitive,\n            positions: geometryCfg.positions,\n            indices: geometryCfg.indices\n        });\n        const meshId = \"\" + ctx.nextId++;\n        sceneModel.createMesh({\n            id: meshId,\n            geometryId,\n            color: (surfaceMaterial && surfaceMaterial.diffuseColor) ? surfaceMaterial.diffuseColor : [0.8, 0.8, 0.8],\n            opacity: (surfaceMaterial && surfaceMaterial.transparency !== undefined) ? (1.0 - surfaceMaterial.transparency) : 1.0\n        });\n        meshIds.push(meshId);\n    }\n}\n\nfunction parseGeometrySurfacesWithSharedMaterial(ctx: any, geometry: any, objectMaterial: any, meshIds: any) {\n    const sceneModel = ctx.sceneModel;\n    const sharedIndices :any= [];\n    const geometryCfg :any= {\n        positions: [],\n        indices: []\n    };\n    const geomType = geometry.type;\n    switch (geomType) {\n        case \"MultiPoint\":\n            break;\n        case \"MultiLineString\":\n            break;\n        case \"MultiSurface\":\n        case \"CompositeSurface\":\n            const surfaces = geometry.boundaries;\n            parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n            break;\n        case \"Solid\":\n            const shells = geometry.boundaries;\n            for (let j = 0; j < shells.length; j++) {\n                const surfaces = shells[j];\n                parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n            }\n            break;\n        case \"MultiSolid\":\n        case \"CompositeSolid\":\n            const solids = geometry.boundaries;\n            for (let j = 0; j < solids.length; j++) {\n                for (let k = 0; k < solids[j].length; k++) {\n                    const surfaces = solids[j][k];\n                    parseSurfacesWithSharedMaterial(ctx, surfaces, sharedIndices, geometryCfg);\n                }\n            }\n            break;\n        case \"GeometryInstance\":\n            break;\n    }\n    if (geometryCfg.positions.length > 0 && geometryCfg.indices.length > 0) {\n        const geometryId = \"\" + ctx.nextId++;\n        sceneModel.createGeometry({\n            id: geometryId,\n            primitive: TrianglesPrimitive,\n            positions: geometryCfg.positions,\n            indices: geometryCfg.indices\n        });\n        const meshId = \"\" + ctx.nextId++;\n        sceneModel.createMesh({\n            id: meshId,\n            geometryId,\n            color: (objectMaterial && objectMaterial.diffuseColor) ? objectMaterial.diffuseColor : [0.8, 0.8, 0.8],\n            opacity: 1.0\n        });\n        meshIds.push(meshId);\n    }\n}\n\nfunction parseSurfacesWithSharedMaterial(ctx: any, surfaces: any, sharedIndices: any, primitiveCfg: any) {\n    const vertices = ctx.vertices;\n    for (let i = 0; i < surfaces.length; i++) {\n        let boundary = [];\n        let holes = [];\n        for (let j = 0; j < surfaces[i].length; j++) {\n            if (boundary.length > 0) {\n                holes.push(boundary.length);\n            }\n            const newBoundary = extractLocalIndices(ctx, surfaces[i][j], sharedIndices, primitiveCfg);\n            boundary.push(...newBoundary);\n        }\n        if (boundary.length === 3) { // Triangle\n            primitiveCfg.indices.push(boundary[0]);\n            primitiveCfg.indices.push(boundary[1]);\n            primitiveCfg.indices.push(boundary[2]);\n        } else if (boundary.length > 3) { // Polygon\n            let pList = [];\n            for (let k = 0; k < boundary.length; k++) {\n                pList.push({\n                    x: vertices[sharedIndices[boundary[k]]][0],\n                    y: vertices[sharedIndices[boundary[k]]][1],\n                    z: vertices[sharedIndices[boundary[k]]][2]\n                });\n            }\n            const normal = getNormalOfPositions(pList, createVec3());\n            let pv = [];\n            for (let k = 0; k < pList.length; k++) {\n                to2D(pList[k], normal, tempVec2a);\n                pv.unshift(tempVec2a[0]);\n                pv.unshift(tempVec2a[1]);\n            }\n            const tr = earcut(pv, holes, 2);\n            for (let k = 0; k < tr.length; k += 3) {\n                primitiveCfg.indices.unshift(boundary[tr[k]]);\n                primitiveCfg.indices.unshift(boundary[tr[k + 1]]);\n                primitiveCfg.indices.unshift(boundary[tr[k + 2]]);\n            }\n        }\n    }\n}\n\nfunction extractLocalIndices(ctx: any, boundary: any, sharedIndices: any, geometryCfg: any) {\n    const vertices = ctx.vertices;\n    const newBoundary = []\n    for (let i = 0, len = boundary.length; i < len; i++) {\n        const index = boundary[i];\n        if (sharedIndices.includes(index)) {\n            const vertexIndex = sharedIndices.indexOf(index);\n            newBoundary.push(vertexIndex);\n        } else {\n            geometryCfg.positions.push(vertices[index][0]);\n            geometryCfg.positions.push(vertices[index][1]);\n            geometryCfg.positions.push(vertices[index][2]);\n            newBoundary.push(sharedIndices.length);\n            sharedIndices.push(index);\n        }\n    }\n    return newBoundary\n}\n\nfunction getNormalOfPositions(positions: any, normal: any) {\n    for (let i = 0; i < positions.length; i++) {\n        let nexti = i + 1;\n        if (nexti === positions.length) {\n            nexti = 0;\n        }\n        normal[0] += ((positions[i].y - positions[nexti].y) * (positions[i].z + positions[nexti].z));\n        normal[1] += ((positions[i].z - positions[nexti].z) * (positions[i].x + positions[nexti].x));\n        normal[2] += ((positions[i].x - positions[nexti].x) * (positions[i].y + positions[nexti].y));\n    }\n    return normalizeVec3(normal);\n}\n\nfunction to2D(_p: any, _n: any, re: any) {\n    const p = tempVec3a;\n    const n = tempVec3b;\n    const x3 = tempVec3c;\n    p[0] = _p.x;\n    p[1] = _p.y;\n    p[2] = _p.z;\n    n[0] = _n.x;\n    n[1] = _n.y;\n    n[2] = _n.z;\n    x3[0] = 1.1;\n    x3[1] = 1.1;\n    x3[2] = 1.1;\n    const dist = lenVec3(subVec3(x3, n));\n    if (dist < 0.01) {\n        x3[0] += 1.0;\n        x3[1] += 2.0;\n        x3[2] += 3.0;\n    }\n    const dot = dotVec3(x3, n);\n    const tmp2 = mulVec3Scalar(n, dot, createVec3());\n    x3[0] -= tmp2[0];\n    x3[1] -= tmp2[1];\n    x3[2] -= tmp2[2];\n    normalizeVec3(x3);\n    const y3 = cross3Vec3(n, x3, createVec3());\n    const x = dotVec3(p, x3);\n    const y = dotVec3(p, y3);\n    re[0] = x;\n    re[1] = y;\n}"],"names":["v","n","t","h","FloatArrayClass","M","Float64Array","s","Z","r","Q","Math","sqrt","O","_","cn","earcut","data","holeIndices","dim","minX","minY","maxX","maxY","x","y","invSize","hasHoles","length","outerLen","outerNode","linkedList","triangles","next","prev","i","len","list","queue","steiner","push","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","max","earcutLinked","start","end","clockwise","last","signedArea","insertNode","equals","removeNode","again","p","area","ear","pass","z","zOrder","prevZ","nextZ","q","e","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","a","b","c","pointInTriangle","maxTX","maxTY","minZ","maxZ","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","m","hx","hy","qx","Infinity","tan","mx","my","tanMin","abs","sectorContainsSector","findHoleBridge","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","inside","middleInside","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","this","sum","j","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","d","je","G","Bridge","BridgePart","BridgeInstallation","BridgeConstructiveElement","BridgeRoom","BridgeFurniture","Building","BuildingPart","BuildingInstallation","BuildingConstructiveElement","BuildingFurniture","BuildingStorey","BuildingRoom","BuildingUnit","CityFurniture","CityObjectGroup","LandUse","OtherConstruction","PlantCover","SolitaryVegetationObject","TINRelief","TransportationSquare","Railway","Road","Tunnel","TunnelPart","TunnelInstallation","TunnelConstructiveElement","TunnelHollowSpace","TunnelFurniture","WaterBody","Waterway","tempVec2a","createVec2","tempVec3a","createVec3","tempVec3b","tempVec3c","transformVertices","transform","rotateX","transformedVertices","scale","translate","parseCityObject","ctx","cityObject","objectId","dataModel","createObject","id","name","type","typeCodes","parent","parents","sceneModel","geometry","meshIds","objectMaterial","surfaceMaterials","appearance","fileData","materials","geometryMaterial","material","themeIds","Object","keys","theme","undefined","value","values","lenj","parseGeometrySurfacesWithOwnMaterials","parseGeometrySurfacesWithSharedMaterial","parseRelationship","createRelationship","relatingObjectId","relatedObjectId","parseSurfacesWithOwnMaterials","boundaries","shells","solids","k","surfaces","surface","surfaceMaterial","diffuseColor","transparency","face","sharedIndices","geometryCfg","positions","indices","newFace","extractLocalIndices","apply","pList","normal","getNormalOfPositions","pv","to2D","unshift","tr","geometryId","nextId","createGeometry","primitive","TrianglesPrimitive","meshId","createMesh","color","opacity","parseSurfacesWithSharedMaterial","primitiveCfg","boundary","newBoundary","index","includes","vertexIndex","indexOf","nexti","normalizeVec3","_p","_n","re","x3","dist","lenVec3","subVec3","tmp2","mulVec3Scalar","dotVec3","y3","u","o","cross3Vec3","params","options","destroyed","SDKError","built","Promise","resolve","reject","cityObjects","CityObjects","parseCityJSON"],"mappings":"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"}