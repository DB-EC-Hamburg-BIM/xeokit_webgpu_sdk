{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * [![npm version](https://badge.fury.io/js/%40xeokit%2Fmath.svg)](https://badge.fury.io/js/%40xeokit%2Fmath)\n * [![](https://data.jsdelivr.com/v1/package/npm/@xeokit/badge)](https://www.jsdelivr.com/package/npm/@xeokit/math)\n *\n * <img style=\"padding:0px; padding-top:20px; padding-bottom:30px; height:140px;\" src=\"media://images/math_icon.png\"/>\n *\n * # xeokit Core Math Utilities\n *\n * ---\n *\n * ### *Basic math types and constants*\n *\n * ---\n *\n * ## Installation\n *\n * ````bash\n * npm install @xeokit/math\n * ````\n *\n * ## Usage\n *\n * ````javascript\n * import * as math from \"@xeokit/math\";\n *\n * //..\n * ````\n *\n * @module @xeokit/math\n */\n\n/**\n * An array of floating-point numbers.\n */\nexport type FloatArrayParam = (Uint8Array | Int8Array | Uint16Array | Uint32Array | Int16Array | Float32Array | Float64Array | number[]);\n\n/**\n * An array of integer numbers.\n */\nexport type IntArrayParam = (Uint32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | number[]);\n\nconst doublePrecision = true;\n\nexport const FloatArrayClass = doublePrecision ? Float64Array : Float32Array;\n\n/**\n * Minimum safe double-precision value.\n */\nexport const MIN_DOUBLE: number = -Number.MAX_SAFE_INTEGER;\n\n/**\n * Maximum safe double-precision value.\n */\nexport const MAX_DOUBLE: number = Number.MAX_SAFE_INTEGER;\n\n/**\n * The number of radiians in a degree (0.0174532925).\n */\nexport const DEGTORAD: number = 0.0174532925;\n\n/**\n * The number of degrees in a radian.\n */\nexport const RADTODEG: number = 57.295779513;\n\n/**\n * Clamps a value to the given range.\n * @param value Value to clamp.\n * @param  min Lower bound.\n * @param max Upper bound.\n * @returns  Clamped result.\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Creates a new {@link FloatArrayParam}.\n */\nexport function newFloatArray(values?: number | FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values);\n}\n\n"],"names":["FloatArrayClass","Float64Array","MIN_DOUBLE","Number","MAX_SAFE_INTEGER","MAX_DOUBLE","value","min","max","Math","values"],"mappings":"8NA2Ca,IAAAA,EAAoCC,aAKpCC,GAAsBC,OAAOC,iBAK7BC,EAAqBF,OAAOC,4BAKT,yEAKA,qBAShB,SAAME,EAAeC,EAAaC,GAC9C,OAAOC,KAAKD,IAAID,EAAKE,KAAKF,IAAIC,EAAKF,GACvC,kBAKgB,SAAcI,GAE1B,WAAWV,EAAgBU,EAC/B"}