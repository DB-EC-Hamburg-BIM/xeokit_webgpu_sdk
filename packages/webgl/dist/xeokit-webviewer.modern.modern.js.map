{"version":3,"file":"xeokit-webviewer.modern.modern.js","sources":["../src/viewer/EventEmitter.ts","../src/viewer/localization/LocaleService.ts","../src/viewer/math/math.ts","../src/viewer/math/vector.ts","../src/viewer/math/matrix.ts","../src/viewer/math/frustum.ts","../src/viewer/math/ray.ts","../src/viewer/constants.ts","../src/viewer/math/compression/lib/calculateUniquePositions.ts","../src/viewer/math/compression/lib/rebucketPositions.ts","../src/viewer/math/geometry/buildEdgeIndices.ts","../src/viewer/math/compression/compression.ts","../src/viewer/math/boundaries.ts","../src/viewer/math/rtc.ts","../src/viewer/utils/Map.ts","../src/viewer/utils/Queue.ts","../src/viewer/utils/utils.ts","../src/viewer/utils/LoadingManager.ts","../src/viewer/utils/Loader.ts","../src/viewer/utils/WorkerPool.ts","../src/viewer/utils/FileLoader.ts","../src/viewer/math/geometry/buildVectorTextGeometry.ts","../src/viewer/math/geometry/buildBoxGeometry.ts","../src/viewer/math/geometry/buildBoxLinesGeometry.ts","../src/viewer/math/geometry/buildCylinderGeometry.ts","../src/viewer/math/geometry/buildGridGeometry.ts","../src/viewer/math/geometry/buildPlaneGeometry.ts","../src/viewer/math/geometry/buildSphereGeometry.ts","../src/viewer/math/geometry/buildTorusGeometry.ts","../src/viewer/math/curves.ts","../src/viewer/scheduler.ts","../src/viewer/Component.ts","../src/viewer/scene/Tile.ts","../src/viewer/scene/Tiles.ts","../src/viewer/scene/Scene.ts","../src/viewer/scene/Transform.ts","../src/viewer/data/Property.ts","../src/viewer/data/PropertySet.ts","../src/viewer/data/Relationship.ts","../src/viewer/data/DataObject.ts","../src/viewer/data/DataModel.ts","../src/viewer/data/Data.ts","../src/viewer/view/camera/Perspective.ts","../src/viewer/view/camera/Ortho.ts","../src/viewer/view/camera/Frustum.ts","../src/viewer/view/camera/CustomProjection.ts","../src/viewer/view/camera/RTCViewMat.ts","../src/viewer/view/camera/Camera.ts","../src/viewer/view/camera/CameraFlightAnimation.ts","../src/viewer/view/Canvas.ts","../src/viewer/view/CameraControl/lib/controllers/PanController.ts","../src/viewer/view/CameraControl/lib/controllers/PivotController.ts","../src/viewer/view/CameraControl/lib/controllers/PickController.ts","../src/viewer/keycodes.ts","../src/viewer/view/CameraControl/lib/handlers/MousePanRotateDollyHandler.ts","../src/viewer/view/CameraControl/lib/handlers/KeyboardAxisViewHandler.ts","../src/viewer/view/CameraControl/lib/handlers/MousePickHandler.ts","../src/viewer/view/CameraControl/lib/handlers/KeyboardPanRotateDollyHandler.ts","../src/viewer/view/CameraControl/lib/CameraUpdater.ts","../src/viewer/view/CameraControl/lib/handlers/MouseMiscHandler.ts","../src/viewer/view/CameraControl/lib/handlers/TouchPanRotateAndDollyHandler.ts","../src/viewer/view/CameraControl/lib/handlers/TouchPickHandler.ts","../src/viewer/view/CameraControl/CameraControl.ts","../src/viewer/view/ViewObject.ts","../src/viewer/view/Metriqs.ts","../src/viewer/view/SectionPlane.ts","../src/viewer/view/materials/EmphasisMaterial.ts","../src/viewer/view/materials/EdgeMaterial.ts","../src/viewer/view/materials/PointsMaterial.ts","../src/viewer/view/PickResult.ts","../src/viewer/view/SAO.ts","../src/viewer/view/materials/LinesMaterial.ts","../src/viewer/view/ViewLayer.ts","../src/viewer/view/View.ts","../src/webgl/WebGLSceneModel/RENDER_PASSES.ts","../src/webgl/lib/WEBGL_INFO.ts","../src/webgl/RenderContext.ts","../src/webgl/lib/getExtension.ts","../src/webgl/lib/convertConstant.ts","../src/webgl/lib/Texture2D.ts","../src/webgl/WebGLSceneModel/float16.ts","../src/webgl/WebGLSceneModel/DataTextureSet.ts","../src/webgl/lib/DataTexture.ts","../src/webgl/WebGLSceneModel/DataTextureFactory.ts","../src/webgl/WebGLSceneModel/SCENE_OBJECT_FLAGS.ts","../src/webgl/WebGLSceneModel/MeshCounts.ts","../src/webgl/WebGLSceneModel/Layer.ts","../src/webgl/WebGLSceneModel/Mesh.ts","../src/webgl/WebGLSceneModel/TextureSet.ts","../src/webgl/WebGLSceneModel/Texture.ts","../src/webgl/WebGLSceneModel/WebGLSceneObject.ts","../src/webgl/WebGLSceneModel/WebGLSceneModel.ts","../src/webgl/lib/Shader.ts","../src/webgl/lib/Sampler.ts","../src/webgl/lib/Attribute.ts","../src/webgl/lib/Program.ts","../src/webgl/layerRenderers/LayerRenderer.ts","../src/webgl/layerRenderers/FastColorTrianglesRenderer.ts","../src/webgl/WebGLRenderer.ts","../src/viewer/WebViewer.ts","../src/viewer/view/lights/AmbientLight.ts","../src/viewer/view/lights/DirLight.ts","../src/viewer/view/lights/PointLight.ts","../src/viewer/view/mementos/CameraMemento.ts","../src/viewer/view/mementos/ModelMemento.ts","../src/viewer/view/mementos/ViewObjectsMemento.ts","../src/viewer/textureTranscoders/KTX2TextureTranscoder/KTX2TextureTranscoder.ts","../src/viewer/Plugin.ts"],"sourcesContent":["import type {IEvent} from \"strongly-typed-events\";\n\n/**\n * Event emitter.\n *\n * @typeParam TSender - Type of the event sender\n * @typeParam TArgs - Type of the event argument\n */\nexport class EventEmitter<TSender, TArgs> {\n\n    #ievent: any;\n\n    constructor(ievent: IEvent<TSender, TArgs>) {\n        this.#ievent = ievent;\n    }\n\n    /**\n     * Returns the number of subscriptions.\n     */\n    get count() : number {\n        return this.#ievent.count;\n    }\n    /**\n     * Subscribe to the event.\n     *\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns Function that unsubscribes the event handler from the event.\n     */\n    subscribe(func: (a: TSender, b: TArgs) => void): () => void {\n        return this.#ievent.asEvent().subscribe(func);\n    }\n\n    /**\n     * @private\n     * @param sender\n     * @param args\n     */\n    dispatch(sender: TSender, args: TArgs): void {\n        this.#ievent.dispatch(sender, args);\n    }\n\n    /**\n     * Subscribe to the event.\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns A function that unsubscribes the event handler from the event.\n     */\n    sub(func: (a: TSender, b: TArgs) => void): () => void {\n        return this.#ievent.asEvent().sub(func);\n    }\n    /**\n     * Unsubscribe from the event.\n     * @param func The event handler that will be unsubsribed from the event.\n     */\n    unsubscribe(func: (a: TSender, b: TArgs) => void): void {\n        this.#ievent.asEvent().unsubscribe(func);\n    }\n\n    /**\n     * Unsubscribe from the event.\n     * @param func The event handler that will be unsubsribed from the event.\n     */\n    unsub(func: (a: TSender, b: TArgs) => void): void {\n        this.#ievent.asEvent().unsub(func);\n    }\n\n    /**\n     * Subscribes to the event only once.\n     * @param func The event handler that is called when the event is dispatched.\n     * @returns A function that unsubscribes the event handler from the event.\n     */\n    one(func: (a: TSender, b: TArgs) => void): () => void {\n       return this.#ievent.asEvent().one(func);\n    }\n\n    /**\n     * Checks if the event has a subscription for the specified handler.\n     * @param func The event handler.\n     */\n    has(func: (a: TSender, b: TArgs) => void): boolean {\n        return this.#ievent.asEvent().has(func);\n    }\n\n    /**\n     * Clears all the subscriptions.\n     */\n    clear(): void {\n        this.#ievent.asEvent().clear();\n    }\n}","\nimport {EventEmitter} from \"../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\n/**\n The localization service for a {@link WebViewer}.\n\n ## Summary\n\n * A container of string translations (\"messages\") for various locales.\n * A {@link WebViewer} has its own default LocaleService at {@link WebViewer.localeService}.\n * We can replace that with our own LocaleService implementation via the WebViewer's constructor.\n * WebViewer plugins that need localized translations will attempt to get them for the currently active locale from the LocaleService.\n * Whenever we switch the LocaleService to a different locale, plugins will automatically refresh their translations for that locale.\n\n ## Usage\n\n In the example below, we'll create a {@link WebViewer} that uses an {@link WebIFCLoaderPlugin} to load an IFC model, and a\n {@link TreeViewPlugin}, which shows a camera navigation cube in the corner of the canvas.\n\n We'll also configure our WebViewer with our own LocaleService instance, configured with English, Māori and French\n translations for our TreeViewPlugin.\n\n We could instead have just used the WebViewer's default LocaleService, but this example demonstrates how we might\n configure the WebViewer our own custom LocaleService subclass.\n\n The translations fetched by our TreeViewPlugin will be:\n\n * \"NavCube.front\"\n * \"NavCube.back\"\n * \"NavCube.top\"\n * \"NavCube.bottom\"\n * \"NavCube.left\"\n * \"NavCube.right\"\n\n <br>\n These are paths that resolve to our translations for the currently active locale, and are hard-coded within\n the TreeViewPlugin.\n\n For example, if  the LocaleService's locale is set to \"fr\", then the path \"NavCube.back\" will drill down\n into ````messages->fr->NavCube->front```` and fetch \"Arrière\".\n\n If we didn't provide that particular translation in our LocaleService, or any translations for that locale,\n then the TreeViewPlugin will just fall back on its own default hard-coded translation, which in this case is \"BACK\".\n\n [[Run example](https://xeokit.github.io/xeokit-sdk/examples/#localization_NavCubePlugin)]\n\n ````javascript\n import {WebViewer, LocaleService, TreeViewPlugin, WebIFCLoaderPlugin} from \"xeokit-viewer.es.js\";\n\n const viewer = new WebViewer({\n      localeService: new LocaleService({\n          messages: {\n              \"en\": { // English\n                  \"NavCube\": {\n                      \"front\": \"Front\",\n                      \"back\": \"Back\",\n                      \"top\": \"Top\",\n                      \"bottom\": \"Bottom\",\n                      \"left\": \"Left\",\n                      \"right\": \"Right\"\n                  }\n              },\n              \"mi\": { // Māori\n                  \"NavCube\": {\n                      \"front\": \"Mua\",\n                      \"back\": \"Tuarā\",\n                      \"top\": \"Runga\",\n                      \"bottom\": \"Raro\",\n                      \"left\": \"Mauī\",\n                      \"right\": \"Tika\"\n                  }\n              },\n              \"fr\": { // Francais\n                  \"NavCube\": {\n                      \"front\": \"Avant\",\n                      \"back\": \"Arrière\",\n                      \"top\": \"Supérieur\",\n                      \"bottom\": \"Inférieur\",\n                      \"left\": \"Gauche\",\n                      \"right\": \"Droit\"\n                  }\n              }\n          },\n          locale: \"en\"\n      })\n  });\n\n const view = new View(viewer, {\n     canvasId: \"myCanvas\"\n });\n\n view.camera.eye = [-3.93, 2.85, 27.01];\n view.camera.look = [4.40, 3.72, 8.89];\n view.camera.up = [-0.01, 0.99, 0.03];\n\n const navCubePlugin = new TreeViewPlugin(viewer, {\n      canvasID: \"myNavCubeCanvas\",\n      view: view\n  });\n\n const ifcLoader = new WebIFCLoaderPlugin(viewer);\n\n const model = ifcLoader.load({\n     id: \"myModel\",\n     src: \"./models/ifc/Duplex.ifc\"\n });\n ````\n\n We can dynamically switch our WebViewer to a different locale at any time, which will update the text on the\n faces of our NavCube:\n\n ````javascript\n viewer.localeService.locale = \"mi\"; // Switch to Māori\n ````\n\n We can load new translations at any time:\n\n ````javascript\n viewer.localeService.loadMessages({\n     \"jp\": { // Japanese\n         \"NavCube\": {\n             \"front\": \"前部\",\n             \"back\": \"裏\",\n             \"top\": \"上\",\n             \"bottom\": \"底\",\n             \"left\": \"左\",\n             \"right\": \"右\"\n         }\n     }\n });\n ````\n\n And we can clear the translations if needed:\n\n ````javascript\n viewer.localeService.clearMessages();\n ````\n\n We can get an \"updated\" event from the LocaleService whenever we switch locales or load messages, which is useful\n for triggering UI elements to refresh themselves with updated translations. Internally, our {@link TreeViewPlugin}\n subscribes to this event, fetching new strings for itself via {@link LocaleService.translate} each time the\n event is fired.\n\n ````javascript\n viewer.localeService.on(\"updated\", () => {\n     console.log( viewer.localeService.translate(\"NavCube.left\") );\n });\n ````\n */\nclass LocaleService {\n\n    #messages: { [key: string]: any };\n    #locales: string[];\n    #locale: string = \"en\";\n\n    /**\n     * Emits an event each time the locale translations have updated.\n     *\n     * @event\n     */\n    readonly onUpdated: EventEmitter<LocaleService, string>;\n\n    /**\n     * Constructs a LocaleService.\n     *\n     * @param cfg LocaleService configuration\n     * @param cfg.messages Set of locale translations\n     * @param cfg.locale Initial locale\n     */\n    constructor(cfg = {\n        messages: {},\n        locale: \"\"\n    }) {\n        this.messages = cfg.messages;\n        this.locale = cfg.locale;\n\n        this.onUpdated = new EventEmitter(new EventDispatcher<LocaleService, string>());\n    }\n\n    /**\n     * Replaces the current set of locale translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * Does not change the current locale.\n     *\n     * ## Usage\n     *\n     * ````javascript\n     * viewer.localeService.setMessages({\n     *     messages: {\n     *         \"en\": { // English\n     *             \"NavCube\": {\n     *                 \"front\": \"Front\",\n     *                 \"back\": \"Back\",\n     *                 \"top\": \"Top\",\n     *                 \"bottom\": \"Bottom\",\n     *                 \"left\": \"Left\",\n     *                 \"right\": \"Right\"\n     *             }\n     *         },\n     *         \"mi\": { // Māori\n     *             \"NavCube\": {\n     *                 \"front\": \"Mua\",\n     *                 \"back\": \"Tuarā\",\n     *                 \"top\": \"Runga\",\n     *                 \"bottom\": \"Raro\",\n     *                 \"left\": \"Mauī\",\n     *                 \"right\": \"Tika\"\n     *             }\n     *         }\n     *    }\n     * });\n     * ````\n     *\n     * @param messages The new translations.\n     */\n    set messages(messages: { [key: string]: any }) {\n        this.#messages = messages || {};\n        this.#locales = Object.keys(this.#messages);\n        this.onUpdated.dispatch(this, this.#locale);\n    }\n\n    /**\n     * Loads a new set of locale translations, adding them to the existing translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * Does not change the current locale.\n     *\n     * ## Usage\n     *\n     * ````javascript\n     * viewer.localeService.loadMessages({\n     *     \"jp\": { // Japanese\n     *         \"NavCube\": {\n     *             \"front\": \"前部\",\n     *             \"back\": \"裏\",\n     *             \"top\": \"上\",\n     *             \"bottom\": \"底\",\n     *             \"left\": \"左\",\n     *             \"right\": \"右\"\n     *         }\n     *     }\n     * });\n     * ````\n     *\n     * @param messages The new translations.\n     */\n    loadMessages(messages: { [key: string]: any } = {}) {\n        for (let locale in messages) {\n            this.#messages[locale] = messages[locale];\n        }\n        this.messages = this.#messages;\n    }\n\n    /**\n     * Clears all locale translations.\n     *\n     * * Fires an \"updated\" event when done.\n     * * Does not change the current locale.\n     * * Automatically refreshes any plugins that depend on the translations, which will cause those\n     * plugins to fall back on their internal hard-coded text values, since this method removes all\n     * our translations.\n     */\n    clearMessages() {\n        this.messages = {};\n    }\n\n    /**\n     * Gets the list of available locales.\n     *\n     * These are derived from the currently configured set of translations.\n     *\n     * @returns The list of available locales.\n     */\n    get locales(): string[] {\n        return this.#locales;\n    }\n\n    /**\n     * Sets the current locale.\n     *\n     * * Fires an \"updated\" event when done.\n     * * The given locale does not need to be in the list of available locales returned by {@link LocaleService.locales}, since\n     * this method assumes that you may want to load the locales at a later point.\n     * * Automatically refreshes any plugins that depend on the translations.\n     * * We can then get translations for the locale, if translations have been loaded for it, via {@link LocaleService.translate} and {@link LocaleService.translatePlurals}.\n     *\n     * @param locale The new current locale.\n     */\n    set locale(locale: string) {\n        locale = locale || \"de\";\n        if (this.#locale === locale) {\n            return;\n        }\n        this.#locale = locale;\n        this.onUpdated.dispatch(this, this.#locale);\n    }\n\n    /**\n     * Gets the current locale.\n     *\n     * @returns {String} The current locale.\n     */\n    get locale(): string {\n        return this.#locale;\n    }\n\n    /**\n     * Translates the given string according to the current locale.\n     *\n     * Returns null if no translation can be found.\n     *\n     * @param msg String to translate.\n     * @param args Extra parameters.\n     * @returns  Translated string if found, else null.\n     */\n    translate(msg: string, args?: any): string | null {\n        const localeMessages = this.#messages[this.#locale];\n        if (!localeMessages) {\n            return null;\n        }\n        const localeMessage = resolvePath(msg, localeMessages);\n        if (localeMessage) {\n            if (args) {\n                return vsprintf(localeMessage, args);\n            }\n            return localeMessage;\n        }\n        return null;\n    }\n\n    /**\n     * Translates the given phrase according to the current locale.\n     *\n     * Returns null if no translation can be found.\n     *\n     * @param msg Phrase to translate.\n     * @param count The plural number.\n     * @param [args] Extra parameters.\n     * @returns String|null Translated string if found, else null.\n     */\n    translatePlurals(msg: string, count: number, args: any): string | null {\n        const localeMessages = this.#messages[this.#locale];\n        if (!localeMessages) {\n            return null;\n        }\n        let localeMessage = resolvePath(msg, localeMessages);\n        count = parseInt(\"\" + count, 10);\n        if (count === 0) {\n            localeMessage = localeMessage.zero;\n        } else {\n            localeMessage = (count > 1) ? localeMessage.other : localeMessage.one;\n        }\n        if (!localeMessage) {\n            return null;\n        }\n        localeMessage = vsprintf(localeMessage, [count]);\n        if (args) {\n            localeMessage = vsprintf(localeMessage, args);\n        }\n        return localeMessage;\n    }\n}\n\nfunction resolvePath(key: string, json: any) {\n    if (json[key]) {\n        return json[key];\n    }\n    const parts = key.split(\".\");\n    let obj = json;\n    for (let i = 0, len = parts.length; obj && (i < len); i++) {\n        const part = parts[i];\n        obj = obj[part];\n    }\n    return obj;\n}\n\nfunction vsprintf(msg: string, args: any = []) {\n    return msg.replace(/\\{\\{|\\}\\}|\\{(\\d+)\\}/g, function (m, n) {\n        if (m === \"{{\") {\n            return \"{\";\n        }\n        if (m === \"}}\") {\n            return \"}\";\n        }\n        return args[n];\n    });\n}\n\nexport {LocaleService};","/**\n * An array of floating-point numbers.\n */\nexport type FloatArrayParam = (Uint8Array | Int8Array| Uint16Array | Uint32Array | Int16Array | Float32Array | Float64Array | number[]);\n\n/**\n * An array of integer numbers.\n */\nexport type IntArrayParam = (Uint32Array| Uint8Array | Int8Array| Uint16Array | Int16Array | number[]);\n\nconst doublePrecision = true;\n\nexport const FloatArrayClass = doublePrecision ? Float64Array : Float32Array;\n\n/**\n * Minimum safe double-precision value.\n */\nexport const MIN_DOUBLE: number = -Number.MAX_SAFE_INTEGER;\n\n/**\n * Maximum safe double-precision value.\n */\nexport const MAX_DOUBLE: number = Number.MAX_SAFE_INTEGER;\n\n/**\n * The number of radiians in a degree (0.0174532925).\n */\nexport const DEGTORAD: number = 0.0174532925;\n\n/**\n * The number of degrees in a radian.\n */\nexport const RADTODEG: number = 57.295779513;\n\n/**\n * Clamps a value to the given range.\n * @param value Value to clamp.\n * @param  min Lower bound.\n * @param max Upper bound.\n * @returns  Clamped result.\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Creates a new {@link FloatArrayParam}.\n */\nexport function newFloatArray(values?: number | FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values);\n}\n\n","import {FloatArrayParam, FloatArrayClass} from \"./math\";\n\n/**\n * Returns the dot product of two three-element vectors.\n */\nexport function dotVec3(u: FloatArrayParam, v: FloatArrayParam): number {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2]);\n}\n\n/**\n * Returns a new, uninitialized two-element vector.\n */\nexport function vec2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values || 2);\n}\n\n/**\n * Returns a new, uninitialized three-element vector.\n */\nexport function vec3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 3);\n}\n\n/**\n * Returns a new, uninitialized four-element vector.\n */\nexport function vec4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new FloatArrayClass(values || 4);\n}\n\n/**\n * Negates a three-element vector.\n */\nexport function negateVec3(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    return dest;\n}\n\n/**\n * Negates a four-element vector.\n */\nexport function negateVec4(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = -v[0];\n    dest[1] = -v[1];\n    dest[2] = -v[2];\n    dest[3] = -v[3];\n    return dest;\n}\n\n/**\n * Adds one four-element vector to another.\n */\nexport function addVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    dest[3] = u[3] + v[3];\n    return dest;\n}\n\n/**\n * Adds a scalar value to each element of a four-element vector.\n */\nexport function addVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    dest[3] = v[3] + s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a four-element vector by a scalar.\n */\nexport function mulVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    dest[3] = v[3] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a three-element vector by a scalar.\n */\nexport function mulVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    dest[2] = v[2] * s;\n    return dest;\n}\n\n/**\n * Multiplies each element of a two-element vector by a scalar.\n */\nexport function mulVec2Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] * s;\n    dest[1] = v[1] * s;\n    return dest;\n}\n\n/**\n * Adds one three-element vector to another.\n */\nexport function addVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] + v[0];\n    dest[1] = u[1] + v[1];\n    dest[2] = u[2] + v[2];\n    return dest;\n}\n\n/**\n */\nexport function addVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] + s;\n    dest[1] = v[1] + s;\n    dest[2] = v[2] + s;\n    return dest;\n}\n\n/**\n * Subtracts one four-element vector from another.\n */\nexport function subVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    dest[3] = u[3] - v[3];\n    return dest;\n}\n\n/**\n * Returns true if the two 3-element vectors are the same.\n */\nexport function compareVec3(v1: FloatArrayParam, v2: FloatArrayParam): boolean {\n    return (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] === v2[2]);\n}\n\n/**\n * Subtracts one three-element vector from another.\n */\nexport function subVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    dest[2] = u[2] - v[2];\n    return dest;\n}\n\n/**\n * Subtracts one two-element vector from another.\n */\nexport function subVec2(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] - v[0];\n    dest[1] = u[1] - v[1];\n    return dest;\n}\n\n/**\n * Get the geometric mean of the vectors.\n */\nexport function geometricMeanVec2(...vectors: any) {\n    const geometricMean = new Float32Array(vectors[0]);\n    for (let i = 1; i < vectors.length; i++) {\n        geometricMean[0] += vectors[i][0];\n        geometricMean[1] += vectors[i][1];\n    }\n    geometricMean[0] /= vectors.length;\n    geometricMean[1] /= vectors.length;\n    return geometricMean;\n}\n\n/**\n * Subtracts a scalar value from each element of a four-element vector.\n */\nexport function subVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] - s;\n    dest[1] = v[1] - s;\n    dest[2] = v[2] - s;\n    dest[3] = v[3] - s;\n    return dest;\n}\n\n/**\n * Sets each element of a 4-element vector to a scalar value minus the value of that element.\n * @method subScalarVec4\n * @static\n * @param {Array(Number)} v The vector\n * @param s The scalar\n * @param  {Array(Number)} [dest] Destination vector\n * @return {Array(Number)} dest if specified, v otherwise\n */\nexport function subScalarVec4(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s - v[0];\n    dest[1] = s - v[1];\n    dest[2] = s - v[2];\n    dest[3] = s - v[3];\n    return dest;\n}\n\n/**\n * Multiplies one three-element vector by another.\n */\nexport function mulVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] * v[0];\n    dest[1] = u[1] * v[1];\n    dest[2] = u[2] * v[2];\n    dest[3] = u[3] * v[3];\n    return dest;\n}\n\n\n/**\n * Divides one three-element vector by another.\n */\nexport function divVec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    return dest;\n}\n\n/**\n * Divides one four-element vector by another.\n */\nexport function divVec4(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    dest[0] = u[0] / v[0];\n    dest[1] = u[1] / v[1];\n    dest[2] = u[2] / v[2];\n    dest[3] = u[3] / v[3];\n    return dest;\n}\n\n/**\n * Divides a scalar by a three-element vector, returning a new vector.\n */\nexport function divScalarVec3(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    return dest;\n}\n\n/**\n * Divides a three-element vector by a scalar.\n */\nexport function divVec3Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    return dest;\n}\n\n/**\n * Divides a four-element vector by a scalar.\n */\nexport function divVec4Scalar(v: FloatArrayParam, s: number, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = v[0] / s;\n    dest[1] = v[1] / s;\n    dest[2] = v[2] / s;\n    dest[3] = v[3] / s;\n    return dest;\n}\n\n/**\n * Divides a scalar by a four-element vector, returning a new vector.\n */\nexport function divScalarVec4(s: number, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = v;\n    }\n    dest[0] = s / v[0];\n    dest[1] = s / v[1];\n    dest[2] = s / v[2];\n    dest[3] = s / v[3];\n    return dest;\n}\n\n/**\n * Returns the dot product of two four-element vectors.\n */\nexport function dotVec4(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2] + u[3] * v[3]);\n}\n\n/**\n * Returns the cross product of two four-element vectors.\n */\nexport function cross3Vec4(u: FloatArrayParam, v: FloatArrayParam) {\n    const u0 = u[0];\n    const u1 = u[1];\n    const u2 = u[2];\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return [\n        u1 * v2 - u2 * v1,\n        u2 * v0 - u0 * v2,\n        u0 * v1 - u1 * v0,\n        0.0];\n}\n\n/**\n * Returns the cross product of two three-element vectors.\n */\nexport function cross3Vec3(u: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = u;\n    }\n    const x = u[0];\n    const y = u[1];\n    const z = u[2];\n    const x2 = v[0];\n    const y2 = v[1];\n    const z2 = v[2];\n    dest[0] = y * z2 - z * y2;\n    dest[1] = z * x2 - x * z2;\n    dest[2] = x * y2 - y * x2;\n    return dest;\n}\n\nexport function sqLenVec4(v: FloatArrayParam) { // TODO\n    return dotVec4(v, v);\n}\n\n/**\n * Returns the length of a four-element vector.\n * @method lenVec4\n * @static\n * @param {Array(Number)} v The vector\n * @return The length\n */\nexport function lenVec4(v: FloatArrayParam) {\n    return Math.sqrt(sqLenVec4(v));\n}\n\n\n/**\n * Returns the dot product of two two-element vectors.\n */\nexport function dotVec2(u: FloatArrayParam, v: FloatArrayParam) {\n    return (u[0] * v[0] + u[1] * v[1]);\n}\n\n\nexport function sqLenVec3(v: FloatArrayParam) {\n    return dotVec3(v, v);\n}\n\n\nexport function sqLenVec2(v: FloatArrayParam) {\n    return dotVec2(v, v);\n}\n\n/**\n * Returns the length of a three-element vector.\n */\nexport function lenVec3(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec3(v));\n}\n\nexport const distVec3 = ((() => {\n    const vec = vec3();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec3(subVec3(v, w, vec));\n}))()\n\n/**\n * Returns the length of a two-element vector.\n */\nexport function lenVec2(v: FloatArrayParam): number {\n    return Math.sqrt(sqLenVec2(v));\n}\n\n/**\n * Linearly interpolates between two 3D vectors.\n */\nexport function lerpVec3(t: number, t1: number, t2: number, p1: FloatArrayParam, p2: FloatArrayParam, dest: any) {\n    const result = dest || vec3();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = p1[0] + (f * (p2[0] - p1[0]));\n    result[1] = p1[1] + (f * (p2[1] - p1[1]));\n    result[2] = p1[2] + (f * (p2[2] - p1[2]));\n    return result;\n}\n\nexport const distVec2 = ((() => {\n    const vec = vec2();\n    return (v: FloatArrayParam, w: FloatArrayParam) => lenVec2(subVec2(v, w, vec));\n}))();\n\n/**\n * @method rcpVec3\n * @static\n * @param v vec3\n * @param dest vec3 - optional destination\n * @return [] dest if specified, v otherwise\n *\n */\nexport function rcpVec3(v: FloatArrayParam, dest: FloatArrayParam) {\n    return divScalarVec3(1.0, v, dest);\n}\n\n/**\n * Normalizes a four-element vector\n *\n */\nexport function normalizeVec4(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec4(v);\n    return mulVec4Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a three-element vector\n * @method normalizeVec4\n * @static\n */\nexport function normalizeVec3(v: FloatArrayParam, dest?: FloatArrayParam) {\n    const f = 1.0 / lenVec3(v);\n    return mulVec3Scalar(v, f, dest);\n}\n\n/**\n * Normalizes a two-element vector\n */\nexport function normalizeVec2(v: FloatArrayParam, dest: FloatArrayParam) {\n    const f = 1.0 / lenVec2(v);\n    return mulVec2Scalar(v, f, dest);\n}\n\n/**\n * Gets the angle between two vectors\n */\nexport function angleVec3(v: FloatArrayParam, w: FloatArrayParam) {\n    let theta = dotVec3(v, w) / (Math.sqrt(sqLenVec3(v) * sqLenVec3(w)));\n    theta = theta < -1 ? -1 : (theta > 1 ? 1 : theta);  // Clamp to handle numerical problems\n    return Math.acos(theta);\n}\n\n/**\n * Creates a three-element vector from the rotation part of a sixteen-element matrix.\n */\nexport const vec3FromMat4Scale: Function = ((() => {\n\n    const tempVec3 = vec3();\n\n    return function (m: FloatArrayParam, dest: FloatArrayParam) {\n\n        tempVec3[0] = m[0];\n        tempVec3[1] = m[1];\n        tempVec3[2] = m[2];\n\n        dest[0] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[4];\n        tempVec3[1] = m[5];\n        tempVec3[2] = m[6];\n\n        dest[1] = lenVec3(tempVec3);\n\n        tempVec3[0] = m[8];\n        tempVec3[1] = m[9];\n        tempVec3[2] = m[10];\n\n        dest[2] = lenVec3(tempVec3);\n\n        return dest;\n    };\n}))();\n\n/**\n * Converts an n-element vector to a JSON-serializable\n * array with values rounded to two decimal places.\n */\nexport function vecToArray(v: FloatArrayParam): FloatArrayParam {\n    v = Array.prototype.slice.call(v);\n    for (let i = 0, len = v.length; i < len; i++) {\n        v[i] = trunc(v[i]);\n    }\n    return v;\n}\n\nfunction trunc(v: number) {\n    return Math.round(v * 100000) / 100000\n}\n\n\n/**\n * Calculates the normal vector of a triangle.\n */\nexport function triangleNormal(a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, normal: FloatArrayParam = vec3()): FloatArrayParam {\n    const p1x = b[0] - a[0];\n    const p1y = b[1] - a[1];\n    const p1z = b[2] - a[2];\n\n    const p2x = c[0] - a[0];\n    const p2y = c[1] - a[1];\n    const p2z = c[2] - a[2];\n\n    const p3x = p1y * p2z - p1z * p2y;\n    const p3y = p1z * p2x - p1x * p2z;\n    const p3z = p1x * p2y - p1y * p2x;\n\n    const mag = Math.sqrt(p3x * p3x + p3y * p3y + p3z * p3z);\n    if (mag === 0) {\n        normal[0] = 0;\n        normal[1] = 0;\n        normal[2] = 0;\n    } else {\n        normal[0] = p3x / mag;\n        normal[1] = p3y / mag;\n        normal[2] = p3z / mag;\n    }\n\n    return normal\n}","import {clamp, DEGTORAD, FloatArrayParam, newFloatArray} from \"./math\";\nimport {addVec4, cross3Vec3, dotVec3, lenVec3, lenVec4, normalizeVec4, subVec4, vec3, vec4} from \"./vector\";\n\nconst tempVec4a: FloatArrayParam = vec4();\n\n/**\n * Returns a new, uninitialized 3x3 matrix.\n */\nexport function mat3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return new newFloatArray(values || 9);\n}\n\n/**\n * Returns a new, uninitialized 4x4 matrix.\n */\nexport function mat4(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\nconst tempMat4a = mat4();\nconst tempMat4b = mat4();\n\n/**\n * Returns true if the two 4x4 matrices are the same.\n * @param m1\n * @param m2\n * @returns {boolean}\n */\nexport function compareMat4(m1: FloatArrayParam, m2: FloatArrayParam): boolean {\n    return m1[0] === m2[0] &&\n        m1[1] === m2[1] &&\n        m1[2] === m2[2] &&\n        m1[3] === m2[3] &&\n        m1[4] === m2[4] &&\n        m1[5] === m2[5] &&\n        m1[6] === m2[6] &&\n        m1[7] === m2[7] &&\n        m1[8] === m2[8] &&\n        m1[9] === m2[9] &&\n        m1[10] === m2[10] &&\n        m1[11] === m2[11] &&\n        m1[12] === m2[12] &&\n        m1[13] === m2[13] &&\n        m1[14] === m2[14] &&\n        m1[15] === m2[15];\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function perspectiveMat4(fovyrad: number, aspectratio: number, znear: number, zfar: number, m?: FloatArrayParam): FloatArrayParam {\n    const pmin = [];\n    const pmax = [];\n    pmin[2] = znear;\n    pmax[2] = zfar;\n    pmax[1] = pmin[2] * Math.tan(fovyrad / 2.0);\n    pmin[1] = -pmax[1];\n    pmax[0] = pmax[1] * aspectratio;\n    pmin[0] = -pmax[0];\n    return frustumMat4v(pmin, pmax, m);\n}\n\n/**\n * Returns a 4x4 perspective frustum projection matrix.\n */\nexport function frustumMat4v(fmin: FloatArrayParam, fmax: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = mat4();\n    }\n    const fmin4 = [fmin[0], fmin[1], fmin[2], 0.0];\n    const fmax4 = [fmax[0], fmax[1], fmax[2], 0.0];\n    addVec4(fmax4, fmin4, tempMat4a);\n    subVec4(fmax4, fmin4, tempMat4b);\n    const t = 2.0 * fmin4[2];\n    const tempMat4b0 = tempMat4b[0];\n    const tempMat4b1 = tempMat4b[1];\n    const tempMat4b2 = tempMat4b[2];\n    m[0] = t / tempMat4b0;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    m[4] = 0.0;\n    m[5] = t / tempMat4b1;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    m[8] = tempMat4a[0] / tempMat4b0;\n    m[9] = tempMat4a[1] / tempMat4b1;\n    m[10] = -tempMat4a[2] / tempMat4b2;\n    m[11] = -1.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -t * fmax4[2] / tempMat4b2;\n    m[15] = 0.0;\n    return m;\n}\n\n/**\n * Returns a 4x4 orthographic projection matrix.\n */\nexport function orthoMat4c(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = 2.0 / rl;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 2.0 / tb;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = -2.0 / fn;\n    dest[11] = 0.0;\n    dest[12] = -(left + right) / rl;\n    dest[13] = -(top + bottom) / tb;\n    dest[14] = -(far + near) / fn;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 4x4 perspective projection matrix.\n */\nexport function frustumMat4(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n    dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat4();\n    }\n    const rl = (right - left);\n    const tb = (top - bottom);\n    const fn = (far - near);\n    dest[0] = (near * 2) / rl;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = (near * 2) / tb;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = (right + left) / rl;\n    dest[9] = (top + bottom) / tb;\n    dest[10] = -(far + near) / fn;\n    dest[11] = -1;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = -(far * near * 2) / fn;\n    dest[15] = 0;\n    return dest;\n}\n\n\n/**\n * Returns a 4x4 identity matrix.\n */\nexport function identityMat4(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = mat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 0.0;\n    dest[5] = 1.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 0.0;\n    dest[9] = 0.0;\n    dest[10] = 1.0;\n    dest[11] = 0.0;\n    dest[12] = 0.0;\n    dest[13] = 0.0;\n    dest[14] = 0.0;\n    dest[15] = 1.0;\n    return dest;\n}\n\n/**\n * Returns a 3x3 identity matrix.\n */\nexport function identityMat3(dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = mat4();\n    }\n    dest[0] = 1.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 0.0;\n    dest[4] = 1.0;\n    dest[5] = 0.0;\n    dest[6] = 0.0;\n    dest[7] = 0.0;\n    dest[8] = 1.0;\n    return dest;\n}\n\n/**\n * Tests if the given 4x4 matrix is the identity matrix.\n */\nexport function isIdentityMat4(m: FloatArrayParam): boolean {\n    if (m[0] !== 1.0 || m[1] !== 0.0 || m[2] !== 0.0 || m[3] !== 0.0 ||\n        m[4] !== 0.0 || m[5] !== 1.0 || m[6] !== 0.0 || m[7] !== 0.0 ||\n        m[8] !== 0.0 || m[9] !== 0.0 || m[10] !== 1.0 || m[11] !== 0.0 ||\n        m[12] !== 0.0 || m[13] !== 0.0 || m[14] !== 0.0 || m[15] !== 1.0) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Creates a 4x4 rotation matrix.\n */\nexport function rotationMat4v(anglerad: number, axis: FloatArrayParam, m?: FloatArrayParam): FloatArrayParam {\n    if (!m) {\n        m = mat4();\n    }\n    const ax = normalizeVec4([axis[0], axis[1], axis[2], 0.0], []);\n    const s = Math.sin(anglerad);\n    const c = Math.cos(anglerad);\n    const q = 1.0 - c;\n    const x = ax[0];\n    const y = ax[1];\n    const z = ax[2];\n    let xy;\n    let yz;\n    let zx;\n    let xs;\n    let ys;\n    let zs;\n    xy = x * y;\n    yz = y * z;\n    zx = z * x;\n    xs = x * s;\n    ys = y * s;\n    zs = z * s;\n    m[0] = (q * x * x) + c;\n    m[1] = (q * xy) + zs;\n    m[2] = (q * zx) - ys;\n    m[3] = 0.0;\n    m[4] = (q * xy) - zs;\n    m[5] = (q * y * y) + c;\n    m[6] = (q * yz) + xs;\n    m[7] = 0.0;\n    m[8] = (q * zx) + ys;\n    m[9] = (q * yz) - xs;\n    m[10] = (q * z * z) + c;\n    m[11] = 0.0;\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = 0.0;\n    m[15] = 1.0;\n    return m;\n}\n\n/**\n * Creates a 4x4 'lookat' viewing transform matrix.\n */\nexport function lookAtMat4v(pos: FloatArrayParam, target: FloatArrayParam, up: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat4();\n    }\n    const posx = pos[0];\n    const posy = pos[1];\n    const posz = pos[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const targetx = target[0];\n    const targety = target[1];\n    const targetz = target[2];\n    if (posx === targetx && posy === targety && posz === targetz) {\n        return identityMat4();\n    }\n    let z0;\n    let z1;\n    let z2;\n    let x0;\n    let x1;\n    let x2;\n    let y0;\n    let y1;\n    let y2;\n    let len;\n    //vec3.direction(eye, center, z);\n    z0 = posx - targetx;\n    z1 = posy - targety;\n    z2 = posz - targetz;\n    // normalize (no check needed for 0 because of early return)\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    //vec3.normalize(vec3.cross(up, z, x));\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n    //vec3.normalize(vec3.cross(z, x, y));\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n    dest[0] = x0;\n    dest[1] = y0;\n    dest[2] = z0;\n    dest[3] = 0;\n    dest[4] = x1;\n    dest[5] = y1;\n    dest[6] = z1;\n    dest[7] = 0;\n    dest[8] = x2;\n    dest[9] = y2;\n    dest[10] = z2;\n    dest[11] = 0;\n    dest[12] = -(x0 * posx + x1 * posy + x2 * posz);\n    dest[13] = -(y0 * posx + y1 * posy + y2 * posz);\n    dest[14] = -(z0 * posx + z1 * posy + z2 * posz);\n    dest[15] = 1;\n    return dest;\n}\n\n/**\n * Returns the inverse of the given 4x4 matrix.\n */\nexport function inverseMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = mat;\n    }\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    const invDet = 1 / (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n    dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n    dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n    dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n    dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n    dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n    dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n    dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n    dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n    dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n    dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n    dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n    dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n    dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n    dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n    dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n    dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n    return dest;\n}\n\n/**\n * Transposes the given 4x4 matrix.\n */\nexport function transposeMat4(mat: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m4 = mat[4];\n    const m14 = mat[14];\n    const m8 = mat[8];\n    const m13 = mat[13];\n    const m12 = mat[12];\n    const m9 = mat[9];\n    if (!dest || mat === dest) {\n        const a01 = mat[1];\n        const a02 = mat[2];\n        const a03 = mat[3];\n        const a12 = mat[6];\n        const a13 = mat[7];\n        const a23 = mat[11];\n        mat[1] = m4;\n        mat[2] = m8;\n        mat[3] = m12;\n        mat[4] = a01;\n        mat[6] = m9;\n        mat[7] = m13;\n        mat[8] = a02;\n        mat[9] = a12;\n        mat[11] = m14;\n        mat[12] = a03;\n        mat[13] = a13;\n        mat[14] = a23;\n        return mat;\n    }\n    dest[0] = mat[0];\n    dest[1] = m4;\n    dest[2] = m8;\n    dest[3] = m12;\n    dest[4] = mat[1];\n    dest[5] = mat[5];\n    dest[6] = m9;\n    dest[7] = m13;\n    dest[8] = mat[2];\n    dest[9] = mat[6];\n    dest[10] = mat[10];\n    dest[11] = m14;\n    dest[12] = mat[3];\n    dest[13] = mat[7];\n    dest[14] = mat[11];\n    dest[15] = mat[15];\n    return dest;\n}\n\n/**\n * Multiplies the given 4x4 matrix by the given four-element vector.\n */\nexport function mulMat4v4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = m;\n    }\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n/**\n * Multiplies the two given 4x4 matrix by each other.\n * @method mulMat4\n * @static\n */\nexport function mulMat4(a: FloatArrayParam, b: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    if (!dest) {\n        dest = a;\n    }\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b13 = b[7];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b23 = b[11];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n    const b33 = b[15];\n    dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n    dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n    dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n    dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n    dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n    dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n    dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n    dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n    dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n    dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n    dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n    dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n    dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n    dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n    dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n    dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n    return dest;\n}\n\n/**\n * Multiplies the two given 3x3 matrices by each other.\n */\nexport function mulMat3(a: FloatArrayParam, b: FloatArrayParam, dest: FloatArrayParam = newFloatArray(9)) {\n\n    const a11 = a[0];\n    const a12 = a[3];\n    const a13 = a[6];\n    const a21 = a[1];\n    const a22 = a[4];\n    const a23 = a[7];\n    const a31 = a[2];\n    const a32 = a[5];\n    const a33 = a[8];\n    const b11 = b[0];\n    const b12 = b[3];\n    const b13 = b[6];\n    const b21 = b[1];\n    const b22 = b[4];\n    const b23 = b[7];\n    const b31 = b[2];\n    const b32 = b[5];\n    const b33 = b[8];\n\n    dest[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    dest[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    dest[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n    dest[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    dest[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    dest[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n    dest[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    dest[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    dest[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n    return dest;\n}\n\n/**\n * Transforms a three-element position by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint3(m: FloatArrayParam, p: FloatArrayParam, dest?: FloatArrayParam) {\n    if (!dest) {\n        dest = p;\n    }\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n    dest[0] = (m[0] * x) + (m[4] * y) + (m[8] * z) + m[12];\n    dest[1] = (m[1] * x) + (m[5] * y) + (m[9] * z) + m[13];\n    dest[2] = (m[2] * x) + (m[6] * y) + (m[10] * z) + m[14];\n    return dest;\n}\n\n/**\n * Transforms a homogeneous coordinate by a 4x4 matrix.\n * @method transformPoint3\n * @static\n */\nexport function transformPoint4(m: FloatArrayParam, v: FloatArrayParam, dest: FloatArrayParam) {\n    dest[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\n    dest[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\n    dest[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\n    dest[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\n    return dest;\n}\n\n\n/**\n * Transforms an array of three-element positions by a 4x4 matrix.\n * @method transformPoints3\n * @static\n */\nexport function transformPoints3(m: FloatArrayParam, points: number[][], points2: number[][]) {\n    const result = points2 || [];\n    const len = points.length;\n    let p0;\n    let p1;\n    let p2;\n    let pi;\n\n    // cache values\n    const m0 = m[0];\n\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    let r;\n\n    for (let i = 0; i < len; ++i) {\n\n        // cache values\n        pi = points[i];\n\n        p0 = pi[0];\n        p1 = pi[1];\n        p2 = pi[2];\n\n        r = result[i] || (result[i] = [0, 0, 0]);\n\n        r[0] = (m0 * p0) + (m4 * p1) + (m8 * p2) + m12;\n        r[1] = (m1 * p0) + (m5 * p1) + (m9 * p2) + m13;\n        r[2] = (m2 * p0) + (m6 * p1) + (m10 * p2) + m14;\n        r[3] = (m3 * p0) + (m7 * p1) + (m11 * p2) + m15;\n    }\n\n    result.length = len;\n\n    return result;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions3(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 3) {\n\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n\n    return p2;\n}\n\n/**\n * Transforms an array of positions by a 4x4 matrix.\n */\nexport function transformPositions4(m: FloatArrayParam, p: FloatArrayParam, p2?: FloatArrayParam) {\n    if (!p2) {\n        p2 = p;\n    }\n    let i;\n    const len = p.length;\n    let x;\n    let y;\n    let z;\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n        p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n        p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n        p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n        p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n    }\n    return p2;\n}\n\n/**\n * Transforms a three-element vector by a 4x4 matrix.\n */\nexport function transformVec3(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dest = dest || vec3();\n    dest[0] = (m[0] * v0) + (m[4] * v1) + (m[8] * v2);\n    dest[1] = (m[1] * v0) + (m[5] * v1) + (m[9] * v2);\n    dest[2] = (m[2] * v0) + (m[6] * v1) + (m[10] * v2);\n    return dest;\n}\n\n/**\n * Transforms a four-element vector by a 4x4 matrix.\n * @method transformVec4\n * @static\n */\nexport function transformVec4(m: FloatArrayParam, v: FloatArrayParam, dest?: FloatArrayParam) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    dest = dest || vec4();\n    dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n    dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n    dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n    dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n    return dest;\n}\n\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n */\nexport function scaleMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    const x = xyz[0];\n    const y = xyz[1];\n    const z = xyz[2];\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n */\nexport function scalingMat4v(v: FloatArrayParam, m: FloatArrayParam = identityMat4()): FloatArrayParam {\n    m[0] = v[0];\n    m[5] = v[1];\n    m[10] = v[2];\n    return m;\n}\n\n/**\n * Returns a 3x3 scale matrix.\n */\nexport function scalingMat3v(v: FloatArrayParam, m: FloatArrayParam = identityMat3()): FloatArrayParam {\n    m[0] = v[0];\n    m[4] = v[1];\n    return m;\n}\n\n/**\n * Returns a 4x4 scale matrix.\n */\nexport const scalingMat4c = ((() => {\n    const xyz: FloatArrayParam = newFloatArray(3);\n    return (x: number, y: number, z: number, dest?: FloatArrayParam) => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return scalingMat4v(xyz, dest);\n    };\n}))()\n\n/**\n * Efficiently post-concatenates a scaling to the given matrix.\n * @method scaleMat4c\n * @param x\n * @param y\n * @param z\n * @param m\n */\nexport function scaleMat4c(x: number, y: number, z: number, m: FloatArrayParam): FloatArrayParam {\n\n    m[0] *= x;\n    m[4] *= y;\n    m[8] *= z;\n\n    m[1] *= x;\n    m[5] *= y;\n    m[9] *= z;\n\n    m[2] *= x;\n    m[6] *= y;\n    m[10] *= z;\n\n    m[3] *= x;\n    m[7] *= y;\n    m[11] *= z;\n    return m;\n}\n\n/**\n * Returns 4x4 scale matrix.\n */\nexport function scalingMat4s(s: number): FloatArrayParam {\n    return scalingMat4c(s, s, s);\n}\n\n/**\n * Composes a 4x4 matrix from the given position, quaternion and scale.\n * @param position\n * @param quaternion\n * @param scale\n * @param mat\n */\nexport function composeMat4(\n    position: FloatArrayParam,\n    quaternion: FloatArrayParam,\n    scale: FloatArrayParam,\n    mat: FloatArrayParam = mat4()): FloatArrayParam {\n    quaternionToRotationMat4(quaternion, mat);\n    scaleMat4v(scale, mat);\n    translateMat4v(position, mat);\n    return mat;\n}\n\n/**\n * Decomposes a 4x4 matrix into position, quaternion and scale.\n */\nexport const decomposeMat4 = (() => {\n    const vec = vec3();\n    const matrix = mat4();\n    return function decompose(mat: FloatArrayParam, position: FloatArrayParam, quaternion: FloatArrayParam, scale: FloatArrayParam)  {\n        vec[0] = mat[0];\n        vec[1] = mat[1];\n        vec[2] = mat[2];\n        let sx = lenVec3(vec);\n        vec[0] = mat[4];\n        vec[1] = mat[5];\n        vec[2] = mat[6];\n        const sy = lenVec3(vec);\n        vec[8] = mat[8];\n        vec[9] = mat[9];\n        vec[10] = mat[10];\n        const sz = lenVec3(vec);\n        const det = determinantMat4(mat);\n        if (det < 0) {\n            sx = -sx;\n        }\n        position[0] = mat[12];\n        position[1] = mat[13];\n        position[2] = mat[14];\n        // scale the rotation part\n        // @ts-ignore\n        matrix.set(mat);\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n        matrix[0] *= invSX;\n        matrix[1] *= invSX;\n        matrix[2] *= invSX;\n        matrix[4] *= invSY;\n        matrix[5] *= invSY;\n        matrix[6] *= invSY;\n        matrix[8] *= invSZ;\n        matrix[9] *= invSZ;\n        matrix[10] *= invSZ;\n        mat4ToQuaternion(matrix, quaternion);\n        scale[0] = sx;\n        scale[1] = sy;\n        scale[2] = sz;\n\n    };\n})();\n\n/**\n * Efficiently post-concatenates a translation to the given matrix.\n */\nexport function translateMat4v(xyz: FloatArrayParam, m: FloatArrayParam = identityMat4()) {\n    return translateMat4c(xyz[0], xyz[1], xyz[2], m);\n}\n\n/**\n * Efficiently post-concatenates a translation, given as separate components, to the given matrix.\n */\nexport function translateMat4c(x: number, y: number, z: number, m: FloatArrayParam = identityMat4()) {\n    const m3 = m[3];\n    m[0] += m3 * x;\n    m[1] += m3 * y;\n    m[2] += m3 * z;\n    const m7 = m[7];\n    m[4] += m7 * x;\n    m[5] += m7 * y;\n    m[6] += m7 * z;\n    const m11 = m[11];\n    m[8] += m11 * x;\n    m[9] += m11 * y;\n    m[10] += m11 * z;\n    const m15 = m[15];\n    m[12] += m15 * x;\n    m[13] += m15 * y;\n    m[14] += m15 * z;\n    return m;\n}\n\n/**\n * Creates a new matrix that replaces the translation in the rightmost column of the given\n * affine matrix with the given translation.\n */\nexport function setMat4Translation(m: FloatArrayParam, translation: FloatArrayParam, dest: FloatArrayParam): FloatArrayParam {\n\n    dest[0] = m[0];\n    dest[1] = m[1];\n    dest[2] = m[2];\n    dest[3] = m[3];\n\n    dest[4] = m[4];\n    dest[5] = m[5];\n    dest[6] = m[6];\n    dest[7] = m[7];\n\n    dest[8] = m[8];\n    dest[9] = m[9];\n    dest[10] = m[10];\n    dest[11] = m[11];\n\n    dest[12] = translation[0];\n    dest[13] = translation[1];\n    dest[14] = translation[2];\n    dest[15] = m[15];\n\n    return dest;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat4();\n    m[12] = v[0];\n    m[13] = v[1];\n    m[14] = v[2];\n    return m;\n}\n\n/**\n * Returns 3x3 translation matrix.\n */\nexport function translationMat3v(v: FloatArrayParam, dest?: FloatArrayParam): FloatArrayParam {\n    const m = dest || identityMat3();\n    m[6] = v[0];\n    m[7] = v[1];\n    return m;\n}\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport const translationMat4c = ((() => {\n    const xyz = newFloatArray(3);\n    return (x: number, y: number, z: number, dest: FloatArrayParam): FloatArrayParam => {\n        xyz[0] = x;\n        xyz[1] = y;\n        xyz[2] = z;\n        return translationMat4v(xyz, dest);\n    };\n}))();\n\n/**\n * Returns 4x4 translation matrix.\n */\nexport function translationMat4s(s: number, dest: FloatArrayParam) {\n    return translationMat4c(s, s, s, dest);\n}\n\n\n/**\n * Returns the determinant of the given 4x4 matrix.\n */\nexport function determinantMat4(mat: FloatArrayParam): number {\n    const a00 = mat[0];\n    const a01 = mat[1];\n    const a02 = mat[2];\n    const a03 = mat[3];\n    const a10 = mat[4];\n    const a11 = mat[5];\n    const a12 = mat[6];\n    const a13 = mat[7];\n    const a20 = mat[8];\n    const a21 = mat[9];\n    const a22 = mat[10];\n    const a23 = mat[11];\n    const a30 = mat[12];\n    const a31 = mat[13];\n    const a32 = mat[14];\n    const a33 = mat[15];\n    return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +\n        a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +\n        a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +\n        a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +\n        a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +\n        a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;\n}\n\n/**\n * Gets Euler angles from a 4x4 matrix.\n *\n * @param {mat The 4x4 matrix.\n * @param order Desired Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param [dest] Destination Euler angles, created by default.\n * @returns  The Euler angles.\n */\nexport function mat4ToEuler(mat: FloatArrayParam, order: string, dest: FloatArrayParam = vec3()) {\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const m11 = mat[0];\n    const m12 = mat[4];\n    const m13 = mat[8];\n    const m21 = mat[1];\n    const m22 = mat[5];\n    const m23 = mat[9];\n    const m31 = mat[2];\n    const m32 = mat[6];\n    const m33 = mat[10];\n    if (order === 'XYZ') {\n        dest[1] = Math.asin(clamp(m13, -1, 1));\n        if (Math.abs(m13) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[2] = Math.atan2(-m12, m11);\n        } else {\n            dest[0] = Math.atan2(m32, m22);\n            dest[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        dest[0] = Math.asin(-clamp(m23, -1, 1));\n        if (Math.abs(m23) < 0.99999) {\n            dest[1] = Math.atan2(m13, m33);\n            dest[2] = Math.atan2(m21, m22);\n        } else {\n            dest[1] = Math.atan2(-m31, m11);\n            dest[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        dest[0] = Math.asin(clamp(m32, -1, 1));\n        if (Math.abs(m32) < 0.99999) {\n            dest[1] = Math.atan2(-m31, m33);\n            dest[2] = Math.atan2(-m12, m22);\n        } else {\n            dest[1] = 0;\n            dest[2] = Math.atan2(m21, m11);\n        }\n    } else if (order === 'ZYX') {\n        dest[1] = Math.asin(-clamp(m31, -1, 1));\n        if (Math.abs(m31) < 0.99999) {\n            dest[0] = Math.atan2(m32, m33);\n            dest[2] = Math.atan2(m21, m11);\n        } else {\n            dest[0] = 0;\n            dest[2] = Math.atan2(-m12, m22);\n        }\n    } else if (order === 'YZX') {\n        dest[2] = Math.asin(clamp(m21, -1, 1));\n        if (Math.abs(m21) < 0.99999) {\n            dest[0] = Math.atan2(-m23, m22);\n            dest[1] = Math.atan2(-m31, m11);\n        } else {\n            dest[0] = 0;\n            dest[1] = Math.atan2(m13, m33);\n        }\n    } else if (order === 'XZY') {\n        dest[2] = Math.asin(-clamp(m12, -1, 1));\n        if (Math.abs(m12) < 0.99999) {\n            dest[0] = Math.atan2(m32, m22);\n            dest[1] = Math.atan2(m13, m11);\n        } else {\n            dest[0] = Math.atan2(-m23, m33);\n            dest[1] = 0;\n        }\n    }\n    return dest;\n}\n\n/**\n * Linearly interpolates between two 4x4 matrices.\n */\nexport function lerpMat4(t: number, t1: number, t2: number, m1: FloatArrayParam, m2: FloatArrayParam, dest?: FloatArrayParam) {\n    const result = dest || mat4();\n    const f = (t - t1) / (t2 - t1);\n    result[0] = m1[0] + (f * (m2[0] - m1[0]));\n    result[1] = m1[1] + (f * (m2[1] - m1[1]));\n    result[2] = m1[2] + (f * (m2[2] - m1[2]));\n    result[3] = m1[3] + (f * (m2[3] - m1[3]));\n    result[4] = m1[4] + (f * (m2[4] - m1[4]));\n    result[5] = m1[5] + (f * (m2[5] - m1[5]));\n    result[6] = m1[6] + (f * (m2[6] - m1[6]));\n    result[7] = m1[7] + (f * (m2[7] - m1[7]));\n    result[8] = m1[8] + (f * (m2[8] - m1[8]));\n    result[9] = m1[9] + (f * (m2[9] - m1[9]));\n    result[10] = m1[10] + (f * (m2[10] - m1[10]));\n    result[11] = m1[11] + (f * (m2[11] - m1[11]));\n    result[12] = m1[12] + (f * (m2[12] - m1[12]));\n    result[13] = m1[13] + (f * (m2[13] - m1[13]));\n    result[14] = m1[14] + (f * (m2[14] - m1[14]));\n    result[15] = m1[15] + (f * (m2[15] - m1[15]));\n    return result;\n}\n\n\n/**\n * Craetes an identity quaternion.\n * @param dest Optional quaternion to initialize\n * @returns New quaternion\n */\nexport function identityQuaternion(\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    dest[0] = 0.0;\n    dest[1] = 0.0;\n    dest[2] = 0.0;\n    dest[3] = 1.0;\n    return dest;\n}\n\n/**\n * Initializes a quaternion from Euler angles.\n *\n * @param  euler The Euler angles.\n * @param  order Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n * @param  [dest] Destination quaternion, created by default.\n * @returns  The quaternion.\n */\nexport function eulerToQuaternion(\n    euler: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n    const a = (euler[0] * DEGTORAD) / 2;\n    const b = (euler[1] * DEGTORAD) / 2;\n    const c = (euler[2] * DEGTORAD) / 2;\n\n    const c1 = Math.cos(a);\n    const c2 = Math.cos(b);\n    const c3 = Math.cos(c);\n    const s1 = Math.sin(a);\n    const s2 = Math.sin(b);\n    const s3 = Math.sin(c);\n\n    if (order === \"XYZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"YXZ\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"ZXY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"ZYX\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === \"YZX\") {\n        dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === \"XZY\") {\n        dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n        dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n        dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n        dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return dest;\n}\n\n/**\n * Encodes rotation from a matrix into a quaternion.\n * @param m The matrix\n * @param dest The quaternion\n */\nexport function mat4ToQuaternion(\n    m: FloatArrayParam,\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const m11 = m[0];\n    const m12 = m[4];\n    const m13 = m[8];\n    const m21 = m[1];\n    const m22 = m[5];\n    const m23 = m[9];\n    const m31 = m[2];\n    const m32 = m[6];\n    const m33 = m[10];\n    let s;\n\n    const trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n\n        dest[3] = 0.25 / s;\n        dest[0] = (m32 - m23) * s;\n        dest[1] = (m13 - m31) * s;\n        dest[2] = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n        dest[3] = (m32 - m23) / s;\n        dest[0] = 0.25 * s;\n        dest[1] = (m12 + m21) / s;\n        dest[2] = (m13 + m31) / s;\n    } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n        dest[3] = (m13 - m31) / s;\n        dest[0] = (m12 + m21) / s;\n        dest[1] = 0.25 * s;\n        dest[2] = (m23 + m32) / s;\n    } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n        dest[3] = (m21 - m12) / s;\n        dest[0] = (m13 + m31) / s;\n        dest[1] = (m23 + m32) / s;\n        dest[2] = 0.25 * s;\n    }\n\n    return dest;\n}\n\n/**\n *\n * @param u\n * @param v\n * @param dest\n */\nexport function vec3PairToQuaternion(\n    u: FloatArrayParam,\n    v: FloatArrayParam,\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    const norm_u_norm_v = Math.sqrt(dotVec3(u, u) * dotVec3(v, v));\n    let real_part = norm_u_norm_v + dotVec3(u, v);\n\n    if (real_part < 0.00000001 * norm_u_norm_v) {\n        // If u and v are exactly opposite, rotate 180 degrees\n        // around an arbitrary orthogonal axis. Axis normalisation\n        // can happen later, when we normalise the quaternion.\n\n        real_part = 0.0;\n\n        if (Math.abs(u[0]) > Math.abs(u[2])) {\n            dest[0] = -u[1];\n            dest[1] = u[0];\n            dest[2] = 0;\n        } else {\n            dest[0] = 0;\n            dest[1] = -u[2];\n            dest[2] = u[1];\n        }\n    } else {\n        // Otherwise, build quaternion the standard way.\n        cross3Vec3(u, v, dest);\n    }\n\n    dest[3] = real_part;\n\n    return normalizeQuaternion(dest);\n}\n\n/**\n * Converts an angle-axis rotation representation into a quaternion\n * @param angleAxis\n * @param dest\n */\nexport function angleAxisToQuaternion(\n    angleAxis: FloatArrayParam,\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    const halfAngle = angleAxis[3] / 2.0;\n    const fsin = Math.sin(halfAngle);\n    dest[0] = fsin * angleAxis[0];\n    dest[1] = fsin * angleAxis[1];\n    dest[2] = fsin * angleAxis[2];\n    dest[3] = Math.cos(halfAngle);\n    return dest;\n}\n\n/**\n * Converts a quaternion to Euler angles\n * @param q\n * @param order\n * @param dest\n */\nexport function quaternionToEuler(\n    q: FloatArrayParam,\n    order: string,\n    dest: FloatArrayParam = vec3()\n) {\n    quaternionToRotationMat4(q, tempMat4a);\n    mat4ToEuler(tempMat4a, order, dest);\n    return dest;\n}\n\n/**\n * Multiples a pair of quaternions\n * @param p\n * @param q\n * @param dest\n */\nexport function mulQuaternions(\n    p: FloatArrayParam,\n    q: FloatArrayParam,\n    dest: FloatArrayParam = vec4()\n): FloatArrayParam {\n    const p0 = p[0];\n    const p1 = p[1];\n    const p2 = p[2];\n    const p3 = p[3];\n    const q0 = q[0];\n    const q1 = q[1];\n    const q2 = q[2];\n    const q3 = q[3];\n    dest[0] = p3 * q0 + p0 * q3 + p1 * q2 - p2 * q1;\n    dest[1] = p3 * q1 + p1 * q3 + p2 * q0 - p0 * q2;\n    dest[2] = p3 * q2 + p2 * q3 + p0 * q1 - p1 * q0;\n    dest[3] = p3 * q3 - p0 * q0 - p1 * q1 - p2 * q2;\n    return dest;\n}\n\n/**\n *\n * @param q\n * @param vec\n * @param dest\n */\nexport function vec3ApplyQuaternion(\n    q: FloatArrayParam,\n    vec: FloatArrayParam,\n    dest: FloatArrayParam = vec3()\n): FloatArrayParam {\n    const x = vec[0];\n    const y = vec[1];\n    const z = vec[2];\n\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n\n    // calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n\n    dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a matrix.\n * @param q\n * @param dest\n */\nexport function quaternionToMat4(\n    q: FloatArrayParam,\n    dest: FloatArrayParam\n): FloatArrayParam {\n    dest = identityMat4(dest);\n\n    const q0 = q[0]; //x\n    const q1 = q[1]; //y\n    const q2 = q[2]; //z\n    const q3 = q[3]; //w\n\n    const tx = 2.0 * q0;\n    const ty = 2.0 * q1;\n    const tz = 2.0 * q2;\n\n    const twx = tx * q3;\n    const twy = ty * q3;\n    const twz = tz * q3;\n\n    const txx = tx * q0;\n    const txy = ty * q0;\n    const txz = tz * q0;\n\n    const tyy = ty * q1;\n    const tyz = tz * q1;\n    const tzz = tz * q2;\n\n    dest[0] = 1.0 - (tyy + tzz);\n    dest[1] = txy + twz;\n    dest[2] = txz - twy;\n\n    dest[4] = txy - twz;\n    dest[5] = 1.0 - (txx + tzz);\n    dest[6] = tyz + twx;\n\n    dest[8] = txz + twy;\n    dest[9] = tyz - twx;\n\n    dest[10] = 1.0 - (txx + tyy);\n\n    return dest;\n}\n\n/**\n * Converts a quaternion into a rotation matrix.\n * @param q\n * @param m\n */\nexport function quaternionToRotationMat4(\n    q: FloatArrayParam,\n    m: FloatArrayParam\n): FloatArrayParam {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n\n    m[0] = 1 - (yy + zz);\n    m[4] = xy - wz;\n    m[8] = xz + wy;\n\n    m[1] = xy + wz;\n    m[5] = 1 - (xx + zz);\n    m[9] = yz - wx;\n\n    m[2] = xz - wy;\n    m[6] = yz + wx;\n    m[10] = 1 - (xx + yy);\n\n    // last column\n    m[3] = 0;\n    m[7] = 0;\n    m[11] = 0;\n\n    // bottom row\n    m[12] = 0;\n    m[13] = 0;\n    m[14] = 0;\n    m[15] = 1;\n\n    return m;\n}\n\n/**\n * Normalizes a quaternion\n * @param q\n * @param dest\n * @returns The normalized quaternion\n */\nexport function normalizeQuaternion(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n): FloatArrayParam {\n    const len = lenVec4([q[0], q[1], q[2], q[3]]);\n    dest[0] = q[0] / len;\n    dest[1] = q[1] / len;\n    dest[2] = q[2] / len;\n    dest[3] = q[3] / len;\n    return dest;\n}\n\n/**\n * Gets the conjugate of a quaternion.\n * @param q\n * @param dest\n * @returns The conjugate of the quaternion\n */\nexport function conjugateQuaternion(\n    q: FloatArrayParam,\n    dest: FloatArrayParam = q\n) {\n    dest[0] = -q[0];\n    dest[1] = -q[1];\n    dest[2] = -q[2];\n    dest[3] = q[3];\n    return dest;\n}\n\n/**\n * Gets the inverse of a quaternion.\n * @param q\n * @param dest\n * @returns The inverse quaternion\n */\nexport function inverseQuaternion(q: FloatArrayParam, dest: FloatArrayParam) {\n    return normalizeQuaternion(conjugateQuaternion(q, dest));\n}\n\n/**\n * Converts a quaternion to angle-axis representation.\n * @param q\n * @param angleAxis\n * @returns The angle-axis rotation\n */\nexport function quaternionToAngleAxis(\n    q: FloatArrayParam,\n    angleAxis: FloatArrayParam = vec4()\n) {\n    q = normalizeQuaternion(q, tempVec4a);\n    const q3 = q[3];\n    const angle = 2 * Math.acos(q3);\n    const s = Math.sqrt(1 - q3 * q3);\n    if (s < 0.001) {\n        // test to avoid divide by zero, s is always positive due to sqrt\n        angleAxis[0] = q[0];\n        angleAxis[1] = q[1];\n        angleAxis[2] = q[2];\n    } else {\n        angleAxis[0] = q[0] / s;\n        angleAxis[1] = q[1] / s;\n        angleAxis[2] = q[2] / s;\n    }\n    angleAxis[3] = angle; // * 57.295779579;\n    return angleAxis;\n}\n","import {mat4, mulMat4} from \"./matrix\";\nimport {vec3} from \"./vector\";\nimport type {FloatArrayParam} from \"./math\";\n\nconst tempVec3a = vec3();\nconst tempVec3b = vec3();\nconst tempMat4a = mat4();\n\n/**\n * A plane within a {@link Frustum}.\n */\nclass FrustumPlane {\n\n    public testVertex: FloatArrayParam;\n    public offset: number;\n    public normal: FloatArrayParam;\n\n    /**\n     * Creates a new frustum plane.\n     */\n    constructor() {\n        this.normal = vec3();\n        this.offset = 0;\n        this.testVertex = vec3();\n    }\n\n    /**\n     * Sets the position and direction of the frustum plane.\n     * @param nx\n     * @param ny\n     * @param nz\n     * @param offset\n     */\n    set(nx: number, ny: number, nz: number, offset: number) {\n        const s = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n        this.normal[0] = nx * s;\n        this.normal[1] = ny * s;\n        this.normal[2] = nz * s;\n        this.offset = offset * s;\n        this.testVertex[0] = (this.normal[0] >= 0.0) ? 1 : 0;\n        this.testVertex[1] = (this.normal[1] >= 0.0) ? 1 : 0;\n        this.testVertex[2] = (this.normal[2] >= 0.0) ? 1 : 0;\n    }\n}\n\n/**\n * A frustum defined as six planes.\n */\nclass Frustum {\n\n    /**\n     * The six planes that comprise the frustum boundary.\n     */\n    public planes: FrustumPlane[];\n\n    /**\n     *\n     */\n    static INSIDE: number = 0;\n    static INTERSECT: number = 1;\n    static OUTSIDE: number = 2;\n\n    /**\n     * Creates a new Frustum\n     */\n    constructor() {\n        this.planes = [\n            new FrustumPlane(), new FrustumPlane(), new FrustumPlane(),\n            new FrustumPlane(), new FrustumPlane(), new FrustumPlane()\n        ];\n    }\n}\n\n/**\n * Sets the extents of a frustum to the World-space volume defined by view and projection matrices.\n * @param frustum\n * @param viewMat\n * @param projMat\n */\nexport function setFrustum(frustum:Frustum, viewMat:FloatArrayParam, projMat:FloatArrayParam) {\n    const m = mulMat4(projMat, viewMat, tempMat4a);\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n    frustum.planes[0].set(m3 - m0, m7 - m4, m11 - m8, m15 - m12);\n    frustum.planes[1].set(m3 + m0, m7 + m4, m11 + m8, m15 + m12);\n    frustum.planes[2].set(m3 - m1, m7 - m5, m11 - m9, m15 - m13);\n    frustum.planes[3].set(m3 + m1, m7 + m5, m11 + m9, m15 + m13);\n    frustum.planes[4].set(m3 - m2, m7 - m6, m11 - m10, m15 - m14);\n    frustum.planes[5].set(m3 + m2, m7 + m6, m11 + m10, m15 + m14);\n}\n\n/**\n * Tests for intersection between a frustum and an axis-aligned 3D boundary.\n * @param frustum\n * @param aabb\n */\nexport function frustumIntersectsAABB3(frustum:Frustum, aabb:FloatArrayParam):number {\n    let ret = Frustum.INSIDE;\n    const min = tempVec3a;\n    const max = tempVec3b;\n    min[0] = aabb[0];\n    min[1] = aabb[1];\n    min[2] = aabb[2];\n    max[0] = aabb[3];\n    max[1] = aabb[4];\n    max[2] = aabb[5];\n    const bminmax = [min, max];\n    for (let i = 0; i < 6; ++i) {\n        const plane = frustum.planes[i];\n        if (((plane.normal[0] * bminmax[plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            return Frustum.OUTSIDE;\n        }\n        if (((plane.normal[0] * bminmax[1 - plane.testVertex[0]][0]) +\n            (plane.normal[1] * bminmax[1 - plane.testVertex[1]][1]) +\n            (plane.normal[2] * bminmax[1 - plane.testVertex[2]][2]) +\n            (plane.offset)) < 0.0) {\n            ret = Frustum.INTERSECT;\n        }\n    }\n    return ret;\n}\n","import type {FloatArrayParam} from \"./math\";\nimport {cross3Vec3, dotVec3, normalizeVec3, subVec3, vec3, vec4} from \"./vector\";\nimport {transformVec3, transformVec4} from \"./matrix\";\n\nconst tempVec3 = vec3();\nconst tempVec3b = vec3();\nconst tempVec3c = vec3();\nconst tempVec3d = vec3();\nconst tempVec3e = vec3();\n\nconst tempVec4a = vec4();\nconst tempVec4b = vec4();\n\n/**\n * Finds the intersection of a 3D ray with a 3D triangle.\n */\nexport function rayTriangleIntersect(origin: FloatArrayParam, dir: FloatArrayParam, a: FloatArrayParam, b: FloatArrayParam, c: FloatArrayParam, isect: FloatArrayParam): FloatArrayParam|null {\n    isect = isect || vec3();\n    const EPSILON = 0.000001;\n    const edge1 = subVec3(b, a, tempVec3);\n    const edge2 = subVec3(c, a, tempVec3b);\n    const pvec = cross3Vec3(dir, edge2, tempVec3c);\n    const det = dotVec3(edge1, pvec);\n    if (det < EPSILON) {\n        return null;\n    }\n    const tvec = subVec3(origin, a, tempVec3d);\n    const u = dotVec3(tvec, pvec);\n    if (u < 0 || u > det) {\n        return null;\n    }\n    const qvec = cross3Vec3(tvec, edge1, tempVec3e);\n    const v = dotVec3(dir, qvec);\n    if (v < 0 || u + v > det) {\n        return null;\n    }\n    const t = dotVec3(edge2, qvec) / det;\n    isect[0] = origin[0] + t * dir[0];\n    isect[1] = origin[1] + t * dir[1];\n    isect[2] = origin[2] + t * dir[2];\n    return isect;\n}\n\n/**\n Transforms a ray by a matrix.\n @param matrix 4x4 matrix\n @param rayOrigin The ray origin\n @param rayDir The ray direction\n @param rayOriginDest The transformed ray origin\n @param rayDirDest The transformed ray direction\n */\nexport function transformRay(matrix: FloatArrayParam, rayOrigin: FloatArrayParam, rayDir: FloatArrayParam, rayOriginDest: FloatArrayParam, rayDirDest: FloatArrayParam) {\n    tempVec4a[0] = rayOrigin[0];\n    tempVec4a[1] = rayOrigin[1];\n    tempVec4a[2] = rayOrigin[2];\n    tempVec4a[3] = 1;\n    transformVec4(matrix, tempVec4a, tempVec4b);\n    rayOriginDest[0] = tempVec4b[0];\n    rayOriginDest[1] = tempVec4b[1];\n    rayOriginDest[2] = tempVec4b[2];\n    tempVec4a[0] = rayDir[0];\n    tempVec4a[1] = rayDir[1];\n    tempVec4a[2] = rayDir[2];\n    transformVec3(matrix, tempVec4a, tempVec4b);\n    normalizeVec3(tempVec4b);\n    rayDirDest[0] = tempVec4b[0];\n    rayDirDest[1] = tempVec4b[1];\n    rayDirDest[2] = tempVec4b[2];\n}","/**\n * Texture wrapping mode in which the texture repeats to infinity.\n */\nexport const RepeatWrapping = 1000;\n\n/**\n * Texture wrapping mode in which the last pixel of the texture stretches to the edge of the mesh.\n */\nexport const ClampToEdgeWrapping = 1001;\n\n/**\n * Texture wrapping mode in which the texture repeats to infinity, mirroring on each repeat.\n */\nexport const MirroredRepeatWrapping = 1002;\n\n/**\n * Texture magnification and minification filter that returns the nearest texel to the given sample coordinates.\n */\nexport const NearestFilter = 1003;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and returns the nearest texel to the given sample coordinates.\n */\nexport const NearestMipMapNearestFilter = 1004;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured\n * and returns the nearest texel to the given sample coordinates.\n */\nexport const NearestMipmapNearestFilter = 1004;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\n * and returns the nearest texel to the center of the pixel at the given sample coordinates.\n */\nexport const NearestMipmapLinearFilter = 1005;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\n * and returns the nearest texel to the center of the pixel at the given sample coordinates.\n */\nexport const NearestMipMapLinearFilter = 1005;\n\n/**\n * Texture magnification and minification filter that returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearFilter = 1006;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\n * returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearMipmapNearestFilter = 1007;\n\n/**\n * Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\n * returns the weighted average of the four nearest texels to the given sample coordinates.\n */\nexport const LinearMipMapNearestFilter = 1007;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\n * finds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\n * weighted average of those two values.\n */\nexport const LinearMipmapLinearFilter = 1008;\n\n/**\n * Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\n * finds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\n * weighted average of those two values.\n */\nexport const LinearMipMapLinearFilter = 1008;\n\n/**\n * Unsigned 8-bit integer type.\n */\nexport const UnsignedByteType = 1009;\n\n/**\n * Signed 8-bit integer type.\n */\nexport const ByteType = 1010;\n\n/**\n * Signed 16-bit integer type.\n */\nexport const ShortType = 1011;\n\n/**\n * Unsigned 16-bit integer type.\n */\nexport const UnsignedShortType = 1012;\n\n/**\n * Signed 32-bit integer type.\n */\nexport const IntType = 1013;\n\n/**\n * Unsigned 32-bit integer type.\n */\nexport const UnsignedIntType = 1014;\n\n/**\n * Signed 32-bit floating-point type.\n */\nexport const FloatType = 1015;\n\n/**\n * Signed 16-bit half-precision floating-point type.\n */\nexport const HalfFloatType = 1016;\n\n/**\n * Texture packing mode in which each ````RGBA```` channel is packed into 4 bits, for a combined total of 16 bits.\n */\nexport const UnsignedShort4444Type = 1017;\n\n/**\n * Texture packing mode in which the ````RGB```` channels are each packed into 5 bits, and the ````A```` channel is packed into 1 bit, for a combined total of 16 bits.\n */\nexport const UnsignedShort5551Type = 1018;\n\n/**\n * Unsigned integer type for 24-bit depth texture data.\n */\nexport const UnsignedInt248Type = 1020;\n\n/**\n * Texture sampling mode that discards the ````RGBA```` components and just reads the ````A```` component.\n */\nexport const AlphaFormat = 1021;\n\n/**\n * Texture sampling mode that discards the ````A```` component and reads the ````RGB```` components.\n */\nexport const RGBFormat = 1022;\n\n/**\n * Texture sampling mode that reads the ````RGBA```` components.\n */\nexport const RGBAFormat = 1023;\n\n/**\n * Texture sampling mode that reads each ````RGB```` texture component as a luminance value, converted to a float and clamped\n * to ````[0,1]````, while always reading the ````A```` channel as ````1.0````.\n */\nexport const LuminanceFormat = 1024;\n\n/**\n * Texture sampling mode that reads each of the ````RGBA```` texture components as a luminance/alpha value, converted to a float and clamped to ````[0,1]````.\n */\nexport const LuminanceAlphaFormat = 1025;\n\n/**\n * Texture sampling mode that reads each element as a single depth value, converts it to a float and clamps to ````[0,1]````.\n */\nexport const DepthFormat = 1026;\n\n/**\n * Texture sampling mode that\n */\nexport const DepthStencilFormat = 1027;\n\n/**\n * Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component.\n */\nexport const RedFormat = 1028;\n\n/**\n * Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component, as an integer instead of as a float.\n */\nexport const RedIntegerFormat = 1029;\n\n/**\n * Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components.\n */\nexport const RGFormat = 1030;\n\n/**\n * Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components, as integers instead of floats.\n */\nexport const RGIntegerFormat = 1031;\n\n/**\n * Texture sampling mode that reads the ````RGBA```` components as integers instead of floats.\n */\nexport const RGBAIntegerFormat = 1033;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT1 compressed</a> ````RGB```` image.\n */\nexport const RGB_S3TC_DXT1_Format = 33776;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT1 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT1_Format = 33777;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT3 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT3_Format = 33778;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/S3_Texture_Compression\">DXT5 compressed</a> ````RGBA```` image.\n */\nexport const RGBA_S3TC_DXT5_Format = 33779;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGB```` compression in 4-bit mode and one block for each 4×4 pixels.\n */\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGB```` compression in 2-bit mode and one block for each 8×4 pixels.\n */\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGBA```` compression in 4-bit mode and one block for each 4×4 pixels.\n */\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\n\n/**\n * Texture format mode in which the texture is formatted as a <a href=\"https://en.wikipedia.org/wiki/PVRTC\">PVRTC compressed</a>\n * image, with ````RGBA```` compression in 2-bit mode and one block for each 8×4 pixels.\n */\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc1/\">ETC1 compressed</a>\n * ````RGB```` image.\n */\nexport const RGB_ETC1_Format = 36196;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc2/\">ETC2 compressed</a>\n * ````RGB```` image.\n */\nexport const RGB_ETC2_Format = 37492;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc2/\">ETC2 compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ETC2_EAC_Format = 37496;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_4x4_Format = 37808;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_5x4_Format = 37809;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_5x5_Format = 37810;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_6x5_Format = 37811;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_6x6_Format = 37812;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x5_Format = 37813;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x6_Format = 37814;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_8x8_Format = 37815;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x5_Format = 37816;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x6_Format = 37817;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x8_Format = 37818;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_10x10_Format = 37819;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_12x10_Format = 37820;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\">ATSC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_ASTC_12x12_Format = 37821;\n\n/**\n * Texture format mode in which the texture is formatted as an <a href=\"https://www.khronos.org/opengl/wiki/BPTC_Texture_Compression\">BPTC compressed</a>\n * ````RGBA```` image.\n */\nexport const RGBA_BPTC_Format = 36492;\n\n/**\n * Texture encoding mode in which the texture image is in linear color space.\n */\nexport const LinearEncoding = 3000;\n\n/**\n * Texture encoding mode in which the texture image is in sRGB color space.\n */\nexport const sRGBEncoding = 3001;\n\n/**\n * Media type for GIF images.\n */\nexport const GIFMediaType = 10000;\n\n/**\n * Media type for JPEG images.\n */\nexport const JPEGMediaType = 10001;\n\n/**\n * Media type for PNG images.\n */\nexport const PNGMediaType = 10002;\n\n/**\n * Points primitive type.\n */\nexport const PointsPrimitive = 20000;\n\n/**\n * Line segments primitive type.\n */\nexport const LinesPrimitive = 20001;\n\n/**\n * Non-closed triangle mesh primitive type.\n *\n * > Since we are able to look inside non-closed surfaces and see their backfaces, these primitive types are always\n * rendered with backfaces enabled.\n */\nexport const TrianglesPrimitive = 20002;\n\n/**\n * Closed triangle mesh primitive type.\n *\n * Since we normally can't see the backfaces inside closed surfaces, these primitive types are normally rendered\n * with backfaces disabled, for extra performance.\n */\nexport const SolidPrimitive = 20003;\n\n/**\n * Non-closed triangle mesh primitive type.\n *\n * Since we are able to look inside non-closed surfaces and see their backfaces, these primitive types are always\n * rendered with backfaces enabled.\n */\nexport const SurfacePrimitive = 20004;\n\n/**\n * Quality rendering mode.\n */\nexport const QualityRender = 30000;\n\n/**\n * Fast rendering mode.\n */\nexport const FastRender = 300001;\n\n/**\n * Meters unit of measurement.\n */\nexport const MetersUnit = 400000;\n\n/**\n * Centimeters unit of measurement.\n */\nexport const CentimetersUnit = 400001;\n\n/**\n * Millimeters unit of measurement.\n */\nexport const MillimetersUnit = 400002;\n\n/**\n * Yards unit of measurement.\n */\nexport const YardsUnit = 400003;\n\n/**\n * Feet unit of measurement.\n */\nexport const FeetUnit = 400004;\n\n/**\n * Inches unit of measurement.\n */\nexport const InchesUnit = 400005;\n\n/**\n * Perspective projection type.\n */\nexport const PerspectiveProjectionType = 500000;\n\n/**\n * Orthographic projection type.\n */\nexport const OrthoProjectionType = 500001;\n\n/**\n * Frustum projection type.\n */\nexport const FrustumProjectionType = 500002;\n\n/**\n * Custom projection type.\n */\nexport const CustomProjectionType = 500003;\n\n","/**\n * @author https://github.com/tmarti, with support from https://tribia.com/\n * @license MIT\n *\n * This file takes a geometry given by { positions, indices }, and returns\n * equivalent { positions, indices } arrays but which only contain unique\n * positions.\n *\n * The time is O(N logN) with the number of positions due to a pre-sorting\n * step, but is much more GC-friendly and actually faster than the classic O(N)\n * approach based in keeping a hash-based LUT to identify unique positions.\n */\nlet comparePositions: any = null;\n\n\n/**\n * This function obtains unique positions in the provided object\n * .positions array and calculates an index mapping, which is then\n * applied to the provided object .indices and .edgeindices.\n *\n * The input object items are not modified, and instead new set\n * of positions, indices and edgeIndices with the applied optimization\n * are returned.\n *\n * The algorithm, instead of being based in a hash-like LUT for\n * identifying unique positions, is based in pre-sorting the input\n * positions...\n *\n * (it's possible to define a _\"consistent ordering\"_ for the positions\n *  as positions are quantized and thus not suffer from float number\n *  comparison artifacts)\n *\n * ... so same positions are adjacent in the sorted array, and then\n * it's easy to scan linearly the sorted array. During the linear run,\n * we will know that we found a different position because the comparison\n * function will return != 0 between current and previous element.\n *\n * During this linear traversal of the array, a `unique counter` is used\n * in order to calculate the mapping between original indices and unique\n * indices.\n *\n * @param {*} mesh The input mesh to process, with `positions`, `indices` and `edgeIndices` keys.\n *\n * @returns An array with 3 elements: 0 => the uniquified positions; 1 and 2 => the remapped edges and edgeIndices arrays\n */\nexport function uniquifyPositions(mesh: any) {\n\n    let positionsCompressed = mesh.positionsCompressed;\n    let indices = mesh.indices;\n    let edgeIndices = mesh.edgeIndices;\n\n    setMaxNumberOfPositions(positionsCompressed.length / 3);\n\n    let seq = seqInit.slice(0, positionsCompressed.length / 3);\n    let remappings = seqInit.slice(0, positionsCompressed.length / 3);\n\n    comparePositions = positionsCompressed;\n\n    seq.sort(compareVertex);\n\n    let uniqueIdx = 0\n\n    remappings[seq[0]] = 0;\n\n    for (let i = 1, len = seq.length; i < len; i++) {\n        if (0 != compareVertex(seq[i], seq[i - 1])) {\n            uniqueIdx++;\n        }\n\n        remappings[seq[i]] = uniqueIdx;\n    }\n\n    const numUniquePositions = uniqueIdx + 1;\n\n    const uniquePositionsCompressed = new Uint16Array(numUniquePositions * 3);\n\n    uniqueIdx = 0\n\n    uniquePositionsCompressed [uniqueIdx * 3 + 0] = positionsCompressed [seq[0] * 3 + 0];\n    uniquePositionsCompressed [uniqueIdx * 3 + 1] = positionsCompressed [seq[0] * 3 + 1];\n    uniquePositionsCompressed [uniqueIdx * 3 + 2] = positionsCompressed [seq[0] * 3 + 2];\n\n    for (let i = 1, len = seq.length; i < len; i++) {\n        if (0 !== compareVertex(seq[i], seq[i - 1])) {\n            uniqueIdx++;\n\n            uniquePositionsCompressed [uniqueIdx * 3 + 0] = positionsCompressed [seq[i] * 3 + 0];\n            uniquePositionsCompressed [uniqueIdx * 3 + 1] = positionsCompressed [seq[i] * 3 + 1];\n            uniquePositionsCompressed [uniqueIdx * 3 + 2] = positionsCompressed [seq[i] * 3 + 2];\n        }\n\n        remappings[seq[i]] = uniqueIdx;\n    }\n\n    comparePositions = null;\n\n    let uniqueIndices = new Uint32Array(indices.length);\n\n    for (let i = 0, len = indices.length; i < len; i++) {\n        uniqueIndices[i] = remappings [\n            indices[i]\n            ];\n    }\n\n    let uniqueEdgeIndices;\n\n    if (edgeIndices) {\n        uniqueEdgeIndices = new Uint32Array(edgeIndices.length);\n        for (let i = 0, len = edgeIndices.length; i < len; i++) {\n            uniqueEdgeIndices[i] = remappings [edgeIndices[i]];\n        }\n    }\n    return [\n        uniquePositionsCompressed,\n        uniqueIndices,\n        uniqueEdgeIndices\n    ];\n}\n\n\nfunction compareVertex(a: any, b: any) {\n    let res;\n\n    for (let i = 0; i < 3; i++) {\n        if (0 != (res = comparePositions[a * 3 + i] - comparePositions[b * 3 + i])) {\n            return res;\n        }\n    }\n\n    return 0;\n};\n\nlet seqInit: any = null;\n\nfunction setMaxNumberOfPositions(maxPositions: any) {\n    if (seqInit !== null && seqInit.length >= maxPositions) {\n        return;\n    }\n\n    seqInit = new Uint32Array(maxPositions);\n\n    for (let i = 0; i < maxPositions; i++) {\n        seqInit[i] = i;\n    }\n}\n\n","/**\n * @author https://github.com/tmarti, with support from https://tribia.com/\n * @license MIT\n **/\n\nimport {GeometryParams} from \"../../../index\";\nimport type {IntArrayParam} from \"../../math\";\n\nconst MAX_RE_BUCKET_FAN_OUT = 8;\n\nlet bucketsForIndices: any = null;\n\nexport function rebucketPositions(\n    mesh: {\n        positionsCompressed: IntArrayParam,\n        indices: IntArrayParam,\n        edgeIndices: IntArrayParam,\n    },\n    bitsPerBucket: any,\n    checkResult = false): {\n    positionsCompressed: IntArrayParam,\n    indices: IntArrayParam,\n    edgeIndices: IntArrayParam\n}[] {\n\n    const positionsCompressed = (mesh.positionsCompressed || []);\n    const indices = preSortIndices(mesh.indices || [], bitsPerBucket);\n    const edgeIndices: any = [];//preSortEdgeIndices(mesh.edgeIndices || []);\n\n    /**\n     * Code adapted from https://stackoverflow.com/questions/22697936/binary-search-in-javascript\n     */\n    function edgeSearch(el0: any, el1: any) {\n        if (el0 > el1) {\n            let tmp = el0;\n            el0 = el1;\n            el1 = tmp;\n        }\n\n        function compare_fn(a: any, b: any) {\n            if (a != el0) {\n                return el0 - a;\n            }\n\n            if (b != el1) {\n                return el1 - b;\n            }\n\n            return 0;\n        }\n\n        var m = 0;\n        var n = (edgeIndices.length >> 1) - 1;\n        while (m <= n) {\n            var k = (n + m) >> 1;\n            var cmp = compare_fn(edgeIndices[k * 2], edgeIndices[k * 2 + 1]);\n            if (cmp > 0) {\n                m = k + 1;\n            } else if (cmp < 0) {\n                n = k - 1;\n            } else {\n                return k;\n                /**\n                 * Flat array of compressed integer vertex colors.\n                 *\n                 * Alternative to {@link GeometryParams.colorsCompressed}.\n                 *\n                 * Ignored when {@link GeometryParams.geometryId} is defined.\n                 */\n            }\n        }\n        return -m - 1;\n    }\n\n    // console.log (edgeIndices);\n\n    // throw (e);\n\n    // console.log (`${mesh.edgeIndices.length / 2} edge indices`);\n    // console.log (`${edgeIndices.length / 2} edge indices sorted`);\n\n    const alreadyOutputEdgeIndices = new Int32Array(edgeIndices.length / 2);\n    alreadyOutputEdgeIndices.fill(0);\n\n    const numPositions = positionsCompressed.length / 3;\n\n    if (numPositions > ((1 << bitsPerBucket) * MAX_RE_BUCKET_FAN_OUT)) {\n        return [mesh];\n    }\n\n    const bucketIndicesRemap = new Int32Array(numPositions);\n    bucketIndicesRemap.fill(-1);\n\n    const buckets: any = [];\n\n    function addEmptyBucket() {\n        bucketIndicesRemap.fill(-1);\n\n        let newBucket: any = {\n            positionsCompressed: [],\n            indices: [],\n            edgeIndices: [],\n            maxNumPositions: (1 << bitsPerBucket) - bitsPerBucket,\n            numPositions: 0,\n            bucketNumber: buckets.length\n        };\n\n        buckets.push(newBucket);\n\n        return newBucket;\n    }\n\n    let currentBucket = addEmptyBucket();\n\n    // let currentBucket = 0;\n\n    let retVal = 0;\n\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        let additonalPositionsInBucket = 0;\n\n        const ii0 = indices[i];\n        const ii1 = indices[i + 1];\n        const ii2 = indices[i + 2];\n\n        if (bucketIndicesRemap[ii0] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if (bucketIndicesRemap[ii1] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if (bucketIndicesRemap[ii2] == -1) {\n            additonalPositionsInBucket++;\n        }\n\n        if ((additonalPositionsInBucket + currentBucket.numPositions) > currentBucket.maxNumPositions) {\n            currentBucket = addEmptyBucket();\n        }\n\n        if (currentBucket.bucketNumber > MAX_RE_BUCKET_FAN_OUT) {\n            return [mesh];\n        }\n\n        if (bucketIndicesRemap[ii0] == -1) {\n            bucketIndicesRemap[ii0] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii0 * 3 + 2]);\n        }\n\n        if (bucketIndicesRemap[ii1] == -1) {\n            bucketIndicesRemap[ii1] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii1 * 3 + 2]);\n        }\n\n        if (bucketIndicesRemap[ii2] == -1) {\n            bucketIndicesRemap[ii2] = currentBucket.numPositions++;\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3 + 1]);\n            currentBucket.positionsCompressed.push(positionsCompressed[ii2 * 3 + 2]);\n        }\n\n        currentBucket.indices.push(bucketIndicesRemap[ii0]);\n        currentBucket.indices.push(bucketIndicesRemap[ii1]);\n        currentBucket.indices.push(bucketIndicesRemap[ii2]);\n\n        // Check possible edge1\n        let edgeIndex;\n\n        if ((edgeIndex = edgeSearch(ii0, ii1)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n\n        if ((edgeIndex = edgeSearch(ii0, ii2)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n\n        if ((edgeIndex = edgeSearch(ii1, ii2)) >= 0) {\n            if (alreadyOutputEdgeIndices[edgeIndex] == 0) {\n                alreadyOutputEdgeIndices[edgeIndex] = 1;\n\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2]]);\n                currentBucket.edgeIndices.push(bucketIndicesRemap[edgeIndices[edgeIndex * 2 + 1]]);\n            }\n        }\n    }\n\n    const prevBytesPerIndex = bitsPerBucket / 8 * 2;\n    const newBytesPerIndex = bitsPerBucket / 8;\n\n    const originalSize = positionsCompressed.length * 2 + (indices.length + edgeIndices.length) * prevBytesPerIndex;\n\n    let newSize = 0;\n    let newPositions = -positionsCompressed.length / 3;\n\n    buckets.forEach((bucket: any) => {\n        newSize += bucket.positionsCompressed.length * 2 + (bucket.indices.length + bucket.edgeIndices.length) * newBytesPerIndex;\n        newPositions += bucket.positionsCompressed.length / 3;\n    });\n\n    if (newSize > originalSize) {\n        return [mesh];\n    }\n\n    // console.log (\"added positions \" + newPositions + \", buckets: \" + buckets.length);\n\n    if (checkResult) {\n        doCheckResult(buckets, mesh);\n    }\n\n    // return [ mesh ];\n\n    return buckets;\n}\n\nfunction compareBuckets(a: any, b: any) {\n    let aa = a * 3;\n    let bb = b * 3;\n    let aa1, aa2, aa3, bb1, bb2, bb3;\n    const minBucketA = Math.min(\n        aa1 = bucketsForIndices[aa],\n        aa2 = bucketsForIndices[aa + 1],\n        aa3 = bucketsForIndices[aa + 2]\n    );\n    const minBucketB = Math.min(\n        bb1 = bucketsForIndices[bb],\n        bb2 = bucketsForIndices[bb + 1],\n        bb3 = bucketsForIndices[bb + 2]\n    );\n    if (minBucketA != minBucketB) {\n        return minBucketA - minBucketB;\n    }\n    const maxBucketA = Math.max(\n        aa1,\n        aa2,\n        aa3,\n    );\n    const maxBucketB = Math.max(\n        bb1,\n        bb2,\n        bb3,\n    );\n    if (maxBucketA != maxBucketB) {\n        return maxBucketA - maxBucketB;\n    }\n    return 0;\n}\n\nfunction preSortIndices(indices: any, bitsPerBucket: any) {\n    let seq = new Int32Array(indices.length / 3);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        seq[i] = i;\n    }\n    bucketsForIndices = new Int32Array(indices.length);\n    for (let i = 0, len = indices.length; i < len; i++) {\n        bucketsForIndices[i] = indices[i] >> bitsPerBucket;\n    }\n    seq.sort(compareBuckets);\n    const sortedIndices = new Int32Array(indices.length);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        sortedIndices[i * 3 + 0] = indices[seq[i] * 3 + 0];\n        sortedIndices[i * 3 + 1] = indices[seq[i] * 3 + 1];\n        sortedIndices[i * 3 + 2] = indices[seq[i] * 3 + 2];\n    }\n    return sortedIndices;\n}\n\nlet compareEdgeIndices: any = null;\n\nfunction compareIndices(a: any, b: any) {\n    let retVal = compareEdgeIndices[a * 2] - compareEdgeIndices[b * 2];\n    if (retVal != 0) {\n        return retVal;\n    }\n    return compareEdgeIndices[a * 2 + 1] - compareEdgeIndices[b * 2 + 1];\n}\n\nfunction preSortEdgeIndices(edgeIndices: any): any {\n    if ((edgeIndices || []).length == 0) {\n        return [];\n    }\n    let seq = new Int32Array(edgeIndices.length / 2);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        seq[i] = i;\n    }\n    for (let i = 0, j = 0, len = edgeIndices.length; i < len; i += 2) {\n        if (edgeIndices[i] > edgeIndices[i + 1]) {\n            let tmp = edgeIndices[i];\n            edgeIndices[i] = edgeIndices[i + 1];\n            edgeIndices[i + 1] = tmp;\n        }\n    }\n    compareEdgeIndices = new Int32Array(edgeIndices);\n    seq.sort(compareIndices);\n    const sortedEdgeIndices = new Int32Array(edgeIndices.length);\n    for (let i = 0, len = seq.length; i < len; i++) {\n        sortedEdgeIndices[i * 2 + 0] = edgeIndices[seq[i] * 2 + 0];\n        sortedEdgeIndices[i * 2 + 1] = edgeIndices[seq[i] * 2 + 1];\n    }\n    return sortedEdgeIndices;\n}\n\n\nfunction unbucket(buckets: any) {\n    let positionsCompressed: any = [];\n    let indices: any = [];\n    let edgeIndices: any = [];\n\n    let positionsBase = 0;\n\n    buckets.forEach((bucket: any) => {\n        bucket.positionsCompressed.forEach((coord: any) => {\n            positionsCompressed.push(coord);\n        });\n\n        bucket.indices.forEach((index: any) => {\n            indices.push(index + positionsBase);\n        });\n\n        bucket.edgeIndices.forEach((edgeIndex: any) => {\n            edgeIndices.push(edgeIndex + positionsBase);\n        });\n\n        positionsBase += positionsCompressed.length / 3;\n    });\n\n    return {\n        positionsCompressed,\n        indices,\n        edgeIndices\n    };\n}\n\nfunction doCheckResult(buckets: any, mesh: any) {\n    const meshDict: any = {};\n    const edgesDict: any = {};\n\n    let edgeIndicesCount = 0;\n\n    buckets.forEach((bucket: any) => {\n        let indices = bucket.indices;\n        let edgeIndices = bucket.edgeIndices;\n        let positionsCompressed = bucket.positionsCompressed;\n\n        for (var i = 0, len = indices.length; i < len; i += 3) {\n            var key = positionsCompressed[indices[i] * 3] + \"_\" + positionsCompressed[indices[i] * 3 + 1] + \"_\" + positionsCompressed[indices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 1] * 3] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 2] * 3] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 2];\n\n            meshDict[key] = true;\n        }\n\n        edgeIndicesCount += bucket.edgeIndices.length / 2;\n\n        for (var i = 0, len = edgeIndices.length; i < len; i += 2) {\n            var key = positionsCompressed[edgeIndices[i] * 3] + \"_\" + positionsCompressed[edgeIndices[i] * 3 + 1] + \"_\" + positionsCompressed[edgeIndices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[edgeIndices[i + 1] * 3] + \"_\" + positionsCompressed[edgeIndices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[edgeIndices[i + 1] * 3 + 2] + \"/\";\n\n            edgesDict[key] = true;\n        }\n    });\n\n    {\n        let indices = mesh.indices;\n        let edgeIndices = mesh.edgeIndices;\n        let positionsCompressed = mesh.positionsCompressed;\n\n        for (var i = 0, len = indices.length; i < len; i += 3) {\n            var key = positionsCompressed[indices[i] * 3] + \"_\" + positionsCompressed[indices[i] * 3 + 1] + \"_\" + positionsCompressed[indices[i] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 1] * 3] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 1] * 3 + 2] + \"/\" +\n                positionsCompressed[indices[i + 2] * 3] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 1] + \"_\" + positionsCompressed[indices[i + 2] * 3 + 2];\n\n            if (!(key in meshDict)) {\n                console.log(\"Not found \" + key);\n                throw \"Ohhhh!\";\n            }\n        }\n\n        //  for (var i = 0, len = edgeIndices.length; i < len; i+=2)\n        //  {\n        //      var key = positionsCompressed[edgeIndices[i]*3] + \"_\" + positionsCompressed[edgeIndices[i]*3+1] + \"_\" + positionsCompressed[edgeIndices[i]*3+2] + \"/\" +\n        //                positionsCompressed[edgeIndices[i+1]*3] + \"_\" + positionsCompressed[edgeIndices[i+1]*3+1] + \"_\" + positionsCompressed[edgeIndices[i+1]*3+2] + \"/\";\n\n        //      if (!(key in edgesDict)) {\n        //          var key2 = edgeIndices[i] + \"_\" + edgeIndices[i+1];\n\n        //          console.log (\"   - Not found \" + key);\n        //          console.log (\"   - Not found \" + key2);\n        //         //  throw \"Ohhhh2!\";\n        //      }\n        //  }\n    }\n}\n\n","import {DEGTORAD, FloatArrayParam, IntArrayParam} from \"../math\";\nimport {decompressPosition} from \"../compression/index\";\nimport {cross3Vec3, dotVec3, normalizeVec3, subVec3, vec3} from \"../vector\";\n\nconst uniquePositions: number[] = [];\nconst indicesLookup: number[] = [];\nconst indicesReverseLookup: number[] = [];\nconst weldedIndices: number[] = [];\n\n// TODO: Optimize with caching, but need to cater to both compressed and uncompressed positions\n\nconst faces: { normal: number[]; }[] = [];\nlet numFaces = 0;\nconst compa = new Uint16Array(3);\nconst compb = new Uint16Array(3);\nconst compc = new Uint16Array(3);\nconst a = vec3();\nconst b = vec3();\nconst c = vec3();\nconst cb = vec3();\nconst ab = vec3();\nconst cross = vec3();\nconst normal = vec3();\n\nfunction weldVertices(positions: FloatArrayParam, indices: IntArrayParam) {\n    const positionsMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n    let vx;\n    let vy;\n    let vz;\n    let key;\n    const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n    const precision = Math.pow(10, precisionPoints);\n    let i;\n    let len;\n    let lenUniquePositions = 0;\n    for (i = 0, len = positions.length; i < len; i += 3) {\n        vx = positions[i];\n        vy = positions[i + 1];\n        vz = positions[i + 2];\n        key = Math.round(vx * precision) + '_' + Math.round(vy * precision) + '_' + Math.round(vz * precision);\n        // @ts-ignore\n        if (positionsMap[key] === undefined) {\n            // @ts-ignore\n            positionsMap[key] = lenUniquePositions / 3;\n            uniquePositions[lenUniquePositions++] = vx;\n            uniquePositions[lenUniquePositions++] = vy;\n            uniquePositions[lenUniquePositions++] = vz;\n        }\n        // @ts-ignore\n        indicesLookup[i / 3] = positionsMap[key];\n    }\n    for (i = 0, len = indices.length; i < len; i++) {\n        weldedIndices[i] = indicesLookup[indices[i]];\n        indicesReverseLookup[weldedIndices[i]] = indices[i];\n    }\n}\n\nfunction buildFaces(numIndices: number, positionsDecompressMatrix: FloatArrayParam) {\n    numFaces = 0;\n    for (let i = 0, len = numIndices; i < len; i += 3) {\n        const ia = ((weldedIndices[i]) * 3);\n        const ib = ((weldedIndices[i + 1]) * 3);\n        const ic = ((weldedIndices[i + 2]) * 3);\n        if (positionsDecompressMatrix) {\n            compa[0] = uniquePositions[ia];\n            compa[1] = uniquePositions[ia + 1];\n            compa[2] = uniquePositions[ia + 2];\n            compb[0] = uniquePositions[ib];\n            compb[1] = uniquePositions[ib + 1];\n            compb[2] = uniquePositions[ib + 2];\n            compc[0] = uniquePositions[ic];\n            compc[1] = uniquePositions[ic + 1];\n            compc[2] = uniquePositions[ic + 2];\n            // Decode\n            decompressPosition(compa, positionsDecompressMatrix, a);\n            decompressPosition(compb, positionsDecompressMatrix, b);\n            decompressPosition(compc, positionsDecompressMatrix, c);\n        } else {\n            a[0] = uniquePositions[ia];\n            a[1] = uniquePositions[ia + 1];\n            a[2] = uniquePositions[ia + 2];\n            b[0] = uniquePositions[ib];\n            b[1] = uniquePositions[ib + 1];\n            b[2] = uniquePositions[ib + 2];\n            c[0] = uniquePositions[ic];\n            c[1] = uniquePositions[ic + 1];\n            c[2] = uniquePositions[ic + 2];\n        }\n        subVec3(c, b, cb);\n        subVec3(a, b, ab);\n        cross3Vec3(cb, ab, cross);\n        normalizeVec3(cross, normal);\n        // @ts-ignore\n        const face = faces[numFaces] || (faces[numFaces] = {normal: vec3()});\n        face.normal[0] = normal[0];\n        face.normal[1] = normal[1];\n        face.normal[2] = normal[2];\n        numFaces++;\n    }\n}\n\n\n/**\n * Builds edge connectivity indices from a 3D triangle mesh given as vertex positions and triangle indices\n */\nexport function buildEdgeIndices(\n    positions: FloatArrayParam,\n    indices: IntArrayParam,\n    positionsDecompressMatrix: FloatArrayParam,\n    edgeThreshold: number): IntArrayParam {\n\n    weldVertices(positions, indices);\n    buildFaces(indices.length, positionsDecompressMatrix);\n\n    const edgeIndices = [];\n    const thresholdDot = Math.cos(DEGTORAD * edgeThreshold);\n    const edges = {};\n\n    let edge1;\n    let edge2;\n    let index1;\n    let index2;\n    let key;\n    let largeIndex = false;\n    let edge;\n    let normal1;\n    let normal2;\n    let dot;\n    let ia;\n    let ib;\n\n    for (let i = 0, len = indices.length; i < len; i += 3) {\n        const faceIndex = i / 3;\n        for (let j = 0; j < 3; j++) {\n            edge1 = weldedIndices[i + j];\n            edge2 = weldedIndices[i + ((j + 1) % 3)];\n            index1 = Math.min(edge1, edge2);\n            index2 = Math.max(edge1, edge2);\n            key = index1 + \",\" + index2;\n            // @ts-ignore\n            if (edges[key] === undefined) {\n                // @ts-ignore\n                edges[key] = {\n                    index1: index1,\n                    index2: index2,\n                    face1: faceIndex,\n                    face2: undefined\n                };\n            } else {\n                // @ts-ignore\n                edges[key].face2 = faceIndex;\n            }\n        }\n    }\n\n    for (key in edges) {\n        // @ts-ignore\n        edge = edges[key];\n        // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n        if (edge.face2 !== undefined) {\n            normal1 = faces[edge.face1].normal;\n            normal2 = faces[edge.face2].normal;\n            dot = dotVec3(normal1, normal2);\n            if (dot > thresholdDot) {\n                continue;\n            }\n        }\n        ia = indicesReverseLookup[edge.index1];\n        ib = indicesReverseLookup[edge.index2];\n        if (!largeIndex && ia > 65535 || ib > 65535) {\n            largeIndex = true;\n        }\n        edgeIndices.push(ia);\n        edgeIndices.push(ib);\n    }\n\n    return (largeIndex) ? new Uint32Array(edgeIndices) : new Uint16Array(edgeIndices);\n}","import type {FloatArrayParam} from \"../math\";\nimport {\n    identityMat3,\n    identityMat4,\n    mat3,\n    mat4,\n    mulMat3,\n    mulMat4,\n    scalingMat3v,\n    scalingMat4v,\n    transformVec3,\n    translationMat3v,\n    translationMat4v\n} from \"../matrix\";\nimport {normalizeVec3, vec3} from \"../vector\";\nimport {SolidPrimitive, SurfacePrimitive, TrianglesPrimitive} from \"../../constants\";\nimport type {GeometryParams, GeometryCompressedParams} from \"../../../viewer/scene/index\";\n\nimport {uniquifyPositions} from \"./lib/calculateUniquePositions\";\nimport {rebucketPositions} from \"./lib/rebucketPositions\";\nimport {collapseAABB3, expandAABB3Points3, getPositionsCenter} from \"../boundaries\";\nimport {buildEdgeIndices} from \"../geometry/buildEdgeIndices\";\nimport * as constants from \"../../constants\";\n\n\nconst translate: FloatArrayParam = mat4();\nconst scale: FloatArrayParam = mat4();\n\nconst tempVec3 = vec3();\nconst tempVec3b = vec3();\n\n/**\n * Compresses {@link GeometryParams} into {@link GeometryCompressedParams}.\n *\n * * Simplifies geometry by combining duplicate positions and adjusting indices\n * * Generates edge indices for triangle meshes\n * * Ignores normals (our shaders auto-generate them)\n * * Converts positions to relative-to-center (RTC) coordinates\n * * Quantizes positions and UVs as 16-bit unsigned integers\n * * Splits geometry into {@link GeometryBucketParams | buckets } to enable indices to use the minimum bits for storage\n *\n * The GeometryCompressedParams can then be given to {@link SceneModel.createGeometryCompressed}.\n *\n * #### Special Consideration for SolidPrimitive\n *\n * Note that if {@link GeometryParams.primitive} is {@link constants.SolidPrimitive} and {@link GeometryCompressedParams.geometryBuckets}\n * contains more than one {@link GeometryBucketParams}, then {@link GeometryCompressedParams.primitive} will become\n * {@link constants.SurfacePrimitive}, in the assumption that bucketing has split open a closed (solid) triangle mesh, which\n * can therefore no longer be treated as a solid.\n *\n * ### Example 1: Compressing parameters for a small geometry\n *\n * The example below demonstrates compression of {@link GeometryParams} for a simple geometry that only requires a\n * single {@link GeometryBucketParams | bucket }.\n *\n * Note that if the {@link GeometryParams.positions} array was large enough to require some indices to use more than 16 bits\n * for storage, then that's when the bucketing would kick in, to split the mesh into smaller buckets, each with smaller\n * indices that index a subset of the positions.\n *\n * ````javascript\n * import {math, constants} from \"@xeokit/webviewer\";\n *\n * const compressedGeometry = math.compression.compressGeometry({\n *      id: \"myBoxGeometry\",\n *      primitive: constants.TrianglesPrimitive,\n *      positions: [\n *          202, 202, 202, 200, 202, 202,\n *          200, 200, 202, 202, 200, 202,\n *          202, 202, 202, 202, 200, 202,\n *          202, 200, 200, 202, 202, 200,\n *          202, 202, 202, 202, 202, 200,\n *          200, 202, 200, 200, 202, 202,\n *          200, 202, 202, 200, 202, 200,\n *          200, 200, 200, 200, 200, 202,\n *          200, 200, 200, 202, 200, 200,\n *          202, 200, 202, 200, 200, 202,\n *          202, 200, 200, 200, 200, 200,\n *          200, 202, 200, 202, 202, 200\n *      ],\n *      indices: [\n *          0, 1, 2, 0, 2, 3, 4, 5, 6, 4,\n *          6, 7, 8, 9, 10, 8, 10, 11, 12,\n *          13, 14, 12, 14, 15, 16, 17, 18,\n *          16, 18, 19, 20, 21, 22, 20, 22, 23\n *      ]\n *  });\n * ````\n *\n * The value of ````compressedGeometry```` is:\n *\n * ````javascript\n * {\n *      id: \"myBoxGeometry\",\n *      primitive: constants.TrianglesPrimitive,\n *      origin: [200,200,200],\n *      positionsDecompressMatrix: [\n *          0.00003052270125906143, 0, 0, 0,\n *          0, 0.00003052270125906143, 0, 0,\n *          0, 0, 0.00003052270125906143, 0,\n *          -1, -1, -1, 1\n *      ],\n *      geometryBuckets: [\n *          {\n *              positionsCompressed: [\n *                  65525, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 65525, 65525,\n *                  0, 0, 65525, 65525, 0, 0, 65525, 0, 0,\n *                  0, 0\n *              ],\n *              indices: [\n *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2,\n *                  4, 7, 6, 4, 6, 5\n *              ],\n *              edgeIndices: [\n *                  3, 4, 0, 4, 5, 0, 5, 6,\n *                  0, 6, 1, 1, 6, 7, 1, 7,\n *                  3, 2, 4, 7, 6, 4, 6\n *              ]\n *          }\n *      ]\n * }\n * ````\n *\n * @param geometryParams Uncompressed geometry params.\n * @returns Compressed geometry params.\n */\nexport function compressGeometryParams(geometryParams: GeometryParams): GeometryCompressedParams {\n    const positionsDecompressMatrix = mat4();\n    const rtcPositions = new Float32Array(geometryParams.positions.length);\n    worldToRTCPositions(geometryParams.positions, geometryParams.origin, rtcPositions, tempVec3);\n    const aabb = collapseAABB3();\n    expandAABB3Points3(aabb, rtcPositions);\n    const positionsCompressed = quantizePositions(rtcPositions, aabb, positionsDecompressMatrix);\n    const edgeIndices = (geometryParams.primitive === SolidPrimitive || geometryParams.primitive === SurfacePrimitive || geometryParams.primitive === TrianglesPrimitive) && geometryParams.indices\n        ? buildEdgeIndices(positionsCompressed, geometryParams.indices, positionsDecompressMatrix, geometryParams.edgeThreshold || 10)\n        : null;\n    let uniquePositionsCompressed, uniqueIndices, uniqueEdgeIndices;\n    [\n        uniquePositionsCompressed,\n        uniqueIndices,\n        uniqueEdgeIndices\n    ] = uniquifyPositions({\n        positionsCompressed,\n        uvs: geometryParams.uvs,\n        indices: geometryParams.indices,\n        edgeIndices: edgeIndices\n    });\n    // @ts-ignore\n    const numUniquePositions = uniquePositionsCompressed.length / 3;\n    const geometryBuckets = rebucketPositions({\n        // @ts-ignore\n        positionsCompressed: uniquePositionsCompressed,\n        // @ts-ignore\n        indices: uniqueIndices,\n        // @ts-ignore\n        edgeIndices: uniqueEdgeIndices,\n    }, (numUniquePositions > (1 << 16)) ? 16 : 8);\n    return {\n        id: geometryParams.id,\n        primitive: (geometryParams.primitive === constants.SolidPrimitive && geometryBuckets.length > 1) // Assume that closed triangle mesh is decomposed into open surfaces\n            ? constants.TrianglesPrimitive\n            : geometryParams.primitive,\n        origin: tempVec3,\n        aabb,\n        positionsDecompressMatrix,\n        uvsDecompressMatrix: undefined,\n        geometryBuckets\n    };\n}\n\nfunction worldToRTCPositions(worldPositions: FloatArrayParam, origin: FloatArrayParam, rtcPositions: FloatArrayParam, rtcCenter: FloatArrayParam, cellSize = 200): boolean {\n    const center = getPositionsCenter(worldPositions, tempVec3b);\n    if (origin) {\n        center[0] += origin[0];\n        center[1] += origin[1];\n        center[2] += origin[2];\n    }\n    const rtcCenterX = Math.round(center[0] / cellSize) * cellSize;\n    const rtcCenterY = Math.round(center[1] / cellSize) * cellSize;\n    const rtcCenterZ = Math.round(center[2] / cellSize) * cellSize;\n    for (let i = 0, len = worldPositions.length; i < len; i += 3) {\n        rtcPositions[i + 0] = worldPositions[i + 0] - rtcCenterX;\n        rtcPositions[i + 1] = worldPositions[i + 1] - rtcCenterY;\n        rtcPositions[i + 2] = worldPositions[i + 2] - rtcCenterZ;\n    }\n    rtcCenter[0] = rtcCenterX;\n    rtcCenter[1] = rtcCenterY;\n    rtcCenter[2] = rtcCenterZ;\n    const rtcNeeded = (rtcCenter[0] !== 0 || rtcCenter[1] !== 0 || rtcCenter[2] !== 0);\n    return rtcNeeded;\n}\n\n/**\n * Gets the boundary of a flat positions array.\n *\n * @param array\n * @param min\n * @param max\n */\nexport function getPositionsBounds(array: FloatArrayParam, min?: FloatArrayParam, max?: FloatArrayParam) {\n    let i, j;\n    min = min || new Float64Array(3);\n    max = max || new Float64Array(3);\n    for (i = 0; i < 3; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 3) {\n        for (j = 0; j < 3; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min,\n        max\n    };\n}\n\n/**\n * Creates a de-quantization matrix from a boundary.\n */\nexport function createPositionsDecompressMatrix(aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam): FloatArrayParam {\n    positionsDecompressMatrix = positionsDecompressMatrix || mat4();\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65535;\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsDecompressMatrix;\n}\n\n/**\n * Compresses a flat positions array\n */\nexport function compressPositions(array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam) {\n    const quantized = new Uint16Array(array.length);\n    var multiplier = new Float32Array([\n        max[0] !== min[0] ? 65535 / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? 65535 / (max[1] - min[1]) : 0,\n        max[2] !== min[2] ? 65535 / (max[2] - min[2]) : 0\n    ]);\n    let i;\n    for (i = 0; i < array.length; i += 3) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n    }\n    identityMat4(translate);\n    translationMat4v(min, translate);\n    identityMat4(scale);\n    scalingMat4v([\n        (max[0] - min[0]) / 65535,\n        (max[1] - min[1]) / 65535,\n        (max[2] - min[2]) / 65535\n    ], scale);\n    const decompressMatrix = mulMat4(translate, scale, identityMat4());\n    return {\n        quantized: quantized,\n        decompressMatrix: decompressMatrix\n    };\n}\n\n/**\n * Decompresses a 3D position\n * @param position\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPosition(position: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = position): FloatArrayParam {\n    dest[0] = position[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = position[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = position[2] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses an axis-aligned 3D boundary\n * @param aabb\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressAABB(aabb: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: FloatArrayParam = aabb): FloatArrayParam {\n    dest[0] = aabb[0] * decompressMatrix[0] + decompressMatrix[12];\n    dest[1] = aabb[1] * decompressMatrix[5] + decompressMatrix[13];\n    dest[2] = aabb[2] * decompressMatrix[10] + decompressMatrix[14];\n    dest[3] = aabb[3] * decompressMatrix[0] + decompressMatrix[12];\n    dest[4] = aabb[4] * decompressMatrix[5] + decompressMatrix[13];\n    dest[5] = aabb[5] * decompressMatrix[10] + decompressMatrix[14];\n    return dest;\n}\n\n/**\n * Decompresses a flat array of positions\n * @param positions\n * @param decompressMatrix\n * @param dest\n */\nexport function decompressPositions(positions: FloatArrayParam, decompressMatrix: FloatArrayParam, dest: Float32Array = new Float32Array(positions.length)): Float32Array {\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        dest[i + 0] = positions[i + 0] * decompressMatrix[0] + decompressMatrix[12];\n        dest[i + 1] = positions[i + 1] * decompressMatrix[5] + decompressMatrix[13];\n        dest[i + 2] = positions[i + 2] * decompressMatrix[10] + decompressMatrix[14];\n    }\n    return dest;\n}\n\n/**\n * Gets the 2D min/max boundary of a flat array of UV coordinate\n * @param array\n */\nexport function getUVBounds(array: FloatArrayParam): { min: FloatArrayParam, max: FloatArrayParam } {\n    const min = new Float32Array(2);\n    const max = new Float32Array(2);\n    let i, j;\n    for (i = 0; i < 2; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 2) {\n        for (j = 0; j < 2; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\n/**\n * Compresses a flat array of UV coordinates\n */\nexport var compressUVs = (function () {\n    const translate = mat3();\n    const scale = mat3();\n    return function (array: FloatArrayParam, min: FloatArrayParam, max: FloatArrayParam): {\n        quantized: Uint16Array,\n        decompressMatrix: FloatArrayParam | Float64Array\n    } {\n        const quantized = new Uint16Array(array.length);\n        const multiplier = new Float32Array([\n            65535 / (max[0] - min[0]),\n            65535 / (max[1] - min[1])\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 2) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        }\n        identityMat3(translate);\n        translationMat3v(min, translate);\n        identityMat3(scale);\n        scalingMat3v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535\n        ], scale);\n        const decompressMatrix = mulMat3(translate, scale, identityMat3());\n        return {\n            quantized: quantized,\n            decompressMatrix: decompressMatrix\n        };\n    };\n})();\n\n/**\n * Oct-encodes a flat array of normal vectors\n * @param array\n */\nexport function compressNormals(array: FloatArrayParam): Int8Array { // http://jcgt.org/published/0003/02/01/\n\n    // Note: three elements for each encoded normal, in which the last element in each triplet is redundant.\n    // This is to work around a mysterious WebGL issue where 2-element normals just wouldn't work in the shader :/\n\n    const encoded = new Int8Array(array.length);\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < array.length; i += 3) {\n        // Test various combinations of ceil and floor\n        // to minimize rounding errors\n        best = oct = octEncodeNormalFromArray(array, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(array, i, dec);\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormalFromArray(array, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        encoded[i] = best[0];\n        encoded[i + 1] = best[1];\n    }\n    return encoded;\n}\n\n/**\n */\nfunction octEncodeNormalFromArray(array: FloatArrayParam, i: number, xfunc: any, yfunc: any): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n/**\n * Dot product of a normal in an array against a candidate decoding\n */\nfunction dot(array: FloatArrayParam, i: number, vec3: FloatArrayParam): number {\n    return array[i] * vec3[0] + array[i + 1] * vec3[1] + array[i + 2] * vec3[2];\n}\n\n/**\n */\nexport function decompressUV(uv: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(2)) {\n    dest[0] = uv[0] * decompressMatrix[0] + decompressMatrix[6];\n    dest[1] = uv[1] * decompressMatrix[4] + decompressMatrix[7];\n}\n\n/**\n *\n */\nexport function decompressUVs(uvs: FloatArrayParam, decompressMatrix: FloatArrayParam, dest = new Float32Array(uvs.length)) {\n    for (let i = 0, len = uvs.length; i < len; i += 3) {\n        dest[i + 0] = uvs[i + 0] * decompressMatrix[0] + decompressMatrix[6];\n        dest[i + 1] = uvs[i + 1] * decompressMatrix[4] + decompressMatrix[7];\n    }\n    return dest;\n}\n\n/**\n *\n */\nexport function decompressNormal(oct: FloatArrayParam, result: FloatArrayParam): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nexport function decompressNormals(octs: string | any[], result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n *\n * @param oct\n * @param result\n */\nfunction octDecodeVec2(oct: Int8Array, result: FloatArrayParam = vec3()): FloatArrayParam {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n *\n */\nfunction octDecodeVec2s(octs: Int8Array, result: FloatArrayParam): FloatArrayParam {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n * @private\n */\nexport function quantizePositions(positions: FloatArrayParam, aabb: FloatArrayParam, positionsDecompressMatrix: FloatArrayParam) { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const lenPositions = positions.length;\n    const positionsCompressed = new Uint16Array(lenPositions);\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    const maxInt = 65525;\n    const xMultiplier = maxInt / xwid;\n    const yMultiplier = maxInt / ywid;\n    const zMultiplier = maxInt / zwid;\n    const verify = (num: number) => num >= 0 ? num : 0;\n    for (let i = 0; i < lenPositions; i += 3) {\n        positionsCompressed[i + 0] = Math.floor(verify(positions[i + 0] - xmin) * xMultiplier);\n        positionsCompressed[i + 1] = Math.floor(verify(positions[i + 1] - ymin) * yMultiplier);\n        positionsCompressed[i + 2] = Math.floor(verify(positions[i + 2] - zmin) * zMultiplier);\n    }\n    identityMat4(translate);\n    translationMat4v(aabb, translate);\n    identityMat4(scale);\n    scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    mulMat4(translate, scale, positionsDecompressMatrix);\n    return positionsCompressed;\n}\n\n/**\n * @private\n */\nexport function transformAndOctEncodeNormals(worldNormalMatrix: FloatArrayParam, normals: FloatArrayParam, lenNormals: number, compressedNormals: FloatArrayParam, lenCompressedNormals: number) {\n\n    function dot(p: FloatArrayParam, vec3: FloatArrayParam) { // Dot product of a normal in an array against a candidate decoding\n        return p[0] * vec3[0] + p[1] * vec3[1] + p[2] * vec3[2];\n    }\n\n    // http://jcgt.org/published/0003/02/01/\n    let oct, dec, best, currentCos, bestCos;\n    let i, ei;\n    let localNormal = new Float32Array([0, 0, 0, 0]);\n    let worldNormal = new Float32Array([0, 0, 0, 0]);\n    for (i = 0; i < lenNormals; i += 3) {\n        localNormal[0] = normals[i];\n        localNormal[1] = normals[i + 1];\n        localNormal[2] = normals[i + 2];\n\n        transformVec3(worldNormalMatrix, localNormal, worldNormal);\n        normalizeVec3(worldNormal, worldNormal);\n\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeVec3(worldNormal, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(worldNormal, dec);\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[lenCompressedNormals + i + 0] = best[0];\n        compressedNormals[lenCompressedNormals + i + 1] = best[1];\n        compressedNormals[lenCompressedNormals + i + 2] = 0.0; // Unused\n    }\n    lenCompressedNormals += lenNormals;\n    return lenCompressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeNormals(normals: FloatArrayParam) { // http://jcgt.org/published/0003/02/01/\n    const lenNormals = normals.length;\n    const compressedNormals = new Int8Array(lenNormals)\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < lenNormals; i += 3) {\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeNormal(normals, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(normals, i, dec);\n        oct = octEncodeNormal(normals, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[i + 0] = best[0];\n        compressedNormals[i + 1] = best[1];\n        compressedNormals[i + 2] = 0.0; // Unused\n    }\n    return compressedNormals;\n}\n\n/**\n * @private\n */\nexport function octEncodeVec3(p: FloatArrayParam, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = p[0] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    let y = p[1] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    if (p[2] < 0) {\n        let tempx = x;\n        let tempy = y;\n        tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n/**\n * @private\n */\nexport function octEncodeNormal(array: FloatArrayParam, i: number, xfunc: string, yfunc: string): Int8Array { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    // @ts-ignore\n    return new Int8Array([Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)), Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))]);\n}\n\n\n","import {FloatArrayParam, MAX_DOUBLE, MIN_DOUBLE, newFloatArray} from \"./math\";\nimport {lenVec3, subVec3, vec2, vec3} from \"./vector\";\nimport {decompressPosition} from \"./compression/index\";\n\n/**\n * Returns a new, uninitialized 3D axis-aligned bounding box.\n */\nexport function AABB3(values?: FloatArrayParam): Float64Array {\n    // @ts-ignore\n    return new Float64Array(values || 6);\n}\n\n/**\n * Returns a new, uninitialized 2D axis-aligned bounding box.\n */\nexport function AABB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 4);\n}\n\n/**\n * Returns a new, uninitialized 3D oriented bounding box (OBB).\n */\nexport function OBB3(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 32);\n}\n\n/**\n * Returns a new, uninitialized 2D oriented bounding box (OBB).\n */\nexport function OBB2(values?: FloatArrayParam): FloatArrayParam {\n    // @ts-ignore\n    return newFloatArray(values || 16);\n}\n\n/** Returns a new 3D bounding sphere */\nexport function Sphere3(\n    x: number,\n    y: number,\n    z: number,\n    r: number\n): FloatArrayParam {\n    return newFloatArray([x, y, z, r]);\n}\n\n/**\n * Transforms an OBB3 by a 4x4 matrix.\n */\nexport function transformOBB3(\n    m: FloatArrayParam,\n    p: FloatArrayParam,\n    p2: FloatArrayParam = p\n): FloatArrayParam {\n    let i;\n    const len = p.length;\n\n    let x;\n    let y;\n    let z;\n\n    const m0 = m[0];\n    const m1 = m[1];\n    const m2 = m[2];\n    const m3 = m[3];\n    const m4 = m[4];\n    const m5 = m[5];\n    const m6 = m[6];\n    const m7 = m[7];\n    const m8 = m[8];\n    const m9 = m[9];\n    const m10 = m[10];\n    const m11 = m[11];\n    const m12 = m[12];\n    const m13 = m[13];\n    const m14 = m[14];\n    const m15 = m[15];\n\n    for (i = 0; i < len; i += 4) {\n        x = p[i + 0];\n        y = p[i + 1];\n        z = p[i + 2];\n\n        p2[i + 0] = m0 * x + m4 * y + m8 * z + m12;\n        p2[i + 1] = m1 * x + m5 * y + m9 * z + m13;\n        p2[i + 2] = m2 * x + m6 * y + m10 * z + m14;\n        p2[i + 3] = m3 * x + m7 * y + m11 * z + m15;\n    }\n\n    return p2;\n}\n\n/** Returns true if the first AABB contains the second AABB.\n */\nexport function containsAABB3(\n    aabb1: FloatArrayParam,\n    aabb2: FloatArrayParam\n): boolean {\n    const result =\n        aabb1[0] <= aabb2[0] &&\n        aabb2[3] <= aabb1[3] &&\n        aabb1[1] <= aabb2[1] &&\n        aabb2[4] <= aabb1[4] &&\n        aabb1[2] <= aabb2[2] &&\n        aabb2[5] <= aabb1[5];\n    return result;\n}\n\n/**\n * Gets the diagonal size of an AABB3 given as minima and maxima.\n */\nexport const getAABB3Diag: Function = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n    return (aabb: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n        subVec3(max, min, tempVec3);\n        return Math.abs(lenVec3(tempVec3));\n    };\n})();\n\n/**\n * Get a diagonal boundary size that is symmetrical about the given point.\n */\nexport const getAABB3DiagPoint = (() => {\n    const min = newFloatArray(3);\n    const max = newFloatArray(3);\n    const tempVec3 = newFloatArray(3);\n\n    return (aabb: FloatArrayParam, p: FloatArrayParam): number => {\n        min[0] = aabb[0];\n        min[1] = aabb[1];\n        min[2] = aabb[2];\n\n        max[0] = aabb[3];\n        max[1] = aabb[4];\n        max[2] = aabb[5];\n\n        const diagVec = subVec3(max, min, tempVec3);\n\n        const xneg = p[0] - aabb[0];\n        const xpos = aabb[3] - p[0];\n        const yneg = p[1] - aabb[1];\n        const ypos = aabb[4] - p[1];\n        const zneg = p[2] - aabb[2];\n        const zpos = aabb[5] - p[2];\n\n        diagVec[0] += xneg > xpos ? xneg : xpos;\n        diagVec[1] += yneg > ypos ? yneg : ypos;\n        diagVec[2] += zneg > zpos ? zneg : zpos;\n\n        return Math.abs(lenVec3(diagVec));\n    };\n})();\n\n/**\n * Gets the area of an AABB.\n */\nexport function getAABB3Area(aabb: FloatArrayParam): number {\n    const width = aabb[3] - aabb[0];\n    const height = aabb[4] - aabb[1];\n    const depth = aabb[5] - aabb[2];\n    return width * height * depth;\n}\n\n/**\n * Gets the center of an AABB.\n */\nexport function getAABB3Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = vec3()\n): FloatArrayParam {\n    dest[0] = (aabb[0] + aabb[3]) / 2;\n    dest[1] = (aabb[1] + aabb[4]) / 2;\n    dest[2] = (aabb[2] + aabb[5]) / 2;\n    return dest;\n}\n\n/**\n * Gets the center of a 2D AABB.\n */\nexport function getAABB2Center(\n    aabb: FloatArrayParam,\n    dest: FloatArrayParam = vec2()\n): FloatArrayParam {\n    dest[0] = (aabb[2] + aabb[0]) / 2;\n    dest[1] = (aabb[3] + aabb[1]) / 2;\n    return dest;\n}\n\n/**\n * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n * Creates new AABB if none supplied.\n */\nexport function collapseAABB3(aabb: FloatArrayParam = AABB3()): FloatArrayParam {\n    aabb[0] = MAX_DOUBLE;\n    aabb[1] = MAX_DOUBLE;\n    aabb[2] = MAX_DOUBLE;\n    aabb[3] = MIN_DOUBLE;\n    aabb[4] = MIN_DOUBLE;\n    aabb[5] = MIN_DOUBLE;\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n *\n * @private\n */\nexport function AABB3ToOBB3(aabb: FloatArrayParam = AABB3(), obb = OBB3()): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Expands the first axis-aligned 3D boundary to enclose the second, if required.\n */\nexport function expandAABB3(aabb1: FloatArrayParam, aabb2: FloatArrayParam) {\n    if (aabb1[0] > aabb2[0]) {\n        aabb1[0] = aabb2[0];\n    }\n    if (aabb1[1] > aabb2[1]) {\n        aabb1[1] = aabb2[1];\n    }\n    if (aabb1[2] > aabb2[2]) {\n        aabb1[2] = aabb2[2];\n    }\n    if (aabb1[3] < aabb2[3]) {\n        aabb1[3] = aabb2[3];\n    }\n    if (aabb1[4] < aabb2[4]) {\n        aabb1[4] = aabb2[4];\n    }\n    if (aabb1[5] < aabb2[5]) {\n        aabb1[5] = aabb2[5];\n    }\n    return aabb1;\n}\n\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given point, if needed.\n */\nexport function expandAABB3Point3(aabb: FloatArrayParam, p: FloatArrayParam) {\n\n    if (aabb[0] > p[0]) {\n        aabb[0] = p[0];\n    }\n\n    if (aabb[1] > p[1]) {\n        aabb[1] = p[1];\n    }\n\n    if (aabb[2] > p[2]) {\n        aabb[2] = p[2];\n    }\n\n    if (aabb[3] < p[0]) {\n        aabb[3] = p[0];\n    }\n\n    if (aabb[4] < p[1]) {\n        aabb[4] = p[1];\n    }\n\n    if (aabb[5] < p[2]) {\n        aabb[5] = p[2];\n    }\n\n    return aabb;\n}\n\n/**\n * Expands an axis-aligned 3D boundary to enclose the given points, if needed.\n */\nexport function expandAABB3Points3(aabb: FloatArrayParam, positions: FloatArrayParam): FloatArrayParam {\n    var x;\n    var y;\n    var z;\n    for (var i = 0, len = positions.length; i < len; i += 3) {\n        x = positions[i];\n        y = positions[i + 1];\n        z = positions[i + 2];\n        if (aabb[0] > x) {\n            aabb[0] = x;\n        }\n        if (aabb[1] > y) {\n            aabb[1] = y;\n        }\n        if (aabb[2] > z) {\n            aabb[2] = z;\n        }\n        if (aabb[3] < x) {\n            aabb[3] = x;\n        }\n        if (aabb[4] < y) {\n            aabb[4] = y;\n        }\n        if (aabb[5] < z) {\n            aabb[5] = z;\n        }\n    }\n    return aabb;\n}\n\n/**\n * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n * an array of eight 3D positions, one for each corner of the boundary.\n */\nexport function ABB3ToOBB3(\n    aabb: FloatArrayParam,\n    obb: FloatArrayParam = OBB3()\n): FloatArrayParam {\n    obb[0] = aabb[0];\n    obb[1] = aabb[1];\n    obb[2] = aabb[2];\n    obb[3] = 1;\n\n    obb[4] = aabb[3];\n    obb[5] = aabb[1];\n    obb[6] = aabb[2];\n    obb[7] = 1;\n\n    obb[8] = aabb[3];\n    obb[9] = aabb[4];\n    obb[10] = aabb[2];\n    obb[11] = 1;\n\n    obb[12] = aabb[0];\n    obb[13] = aabb[4];\n    obb[14] = aabb[2];\n    obb[15] = 1;\n\n    obb[16] = aabb[0];\n    obb[17] = aabb[1];\n    obb[18] = aabb[5];\n    obb[19] = 1;\n\n    obb[20] = aabb[3];\n    obb[21] = aabb[1];\n    obb[22] = aabb[5];\n    obb[23] = 1;\n\n    obb[24] = aabb[3];\n    obb[25] = aabb[4];\n    obb[26] = aabb[5];\n    obb[27] = 1;\n\n    obb[28] = aabb[0];\n    obb[29] = aabb[4];\n    obb[30] = aabb[5];\n    obb[31] = 1;\n\n    return obb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport const positions3ToAABB3 = (() => {\n    const p = newFloatArray(3);\n\n    return (\n        positions: FloatArrayParam,\n        aabb: FloatArrayParam,\n        positionsDecompressMatrix: FloatArrayParam\n    ): FloatArrayParam => {\n        aabb = aabb || AABB3();\n\n        let xmin = MAX_DOUBLE;\n        let ymin = MAX_DOUBLE;\n        let zmin = MAX_DOUBLE;\n        let xmax = MIN_DOUBLE;\n        let ymax = MIN_DOUBLE;\n        let zmax = MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = positions.length; i < len; i += 3) {\n            if (positionsDecompressMatrix) {\n                p[0] = positions[i + 0];\n                p[1] = positions[i + 1];\n                p[2] = positions[i + 2];\n\n                decompressPosition(p, positionsDecompressMatrix, p);\n\n                x = p[0];\n                y = p[1];\n                z = p[2];\n            } else {\n                x = positions[i + 0];\n                y = positions[i + 1];\n                z = positions[i + 2];\n            }\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    };\n})();\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n */\nexport function OBB3ToAABB3(\n    obb: FloatArrayParam,\n    aabb: FloatArrayParam = AABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = obb.length; i < len; i += 4) {\n        x = obb[i + 0];\n        y = obb[i + 1];\n        z = obb[i + 2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.\n */\nexport function points3ToAABB3(\n    points: number[][],\n    aabb: FloatArrayParam = AABB3()\n): FloatArrayParam {\n    let xmin = MAX_DOUBLE;\n    let ymin = MAX_DOUBLE;\n    let zmin = MAX_DOUBLE;\n    let xmax = MIN_DOUBLE;\n    let ymax = MIN_DOUBLE;\n    let zmax = MIN_DOUBLE;\n\n    let x;\n    let y;\n    let z;\n\n    for (let i = 0, len = points.length; i < len; i++) {\n        x = points[i][0];\n        y = points[i][1];\n        z = points[i][2];\n\n        if (x < xmin) {\n            xmin = x;\n        }\n\n        if (y < ymin) {\n            ymin = y;\n        }\n\n        if (z < zmin) {\n            zmin = z;\n        }\n\n        if (x > xmax) {\n            xmax = x;\n        }\n\n        if (y > ymax) {\n            ymax = y;\n        }\n\n        if (z > zmax) {\n            zmax = z;\n        }\n    }\n\n    aabb[0] = xmin;\n    aabb[1] = ymin;\n    aabb[2] = zmin;\n    aabb[3] = xmax;\n    aabb[4] = ymax;\n    aabb[5] = zmax;\n\n    return aabb;\n}\n\n/**\n * Gets the 3D center of the given flat array of 3D positions.\n */\nexport function getPositionsCenter(\n    positions: FloatArrayParam,\n    center: FloatArrayParam = vec3()\n): FloatArrayParam {\n    let xCenter = 0;\n    let yCenter = 0;\n    let zCenter = 0;\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        xCenter += positions[i + 0];\n        yCenter += positions[i + 1];\n        zCenter += positions[i + 2];\n    }\n    const numPositions = positions.length / 3;\n    center[0] = xCenter / numPositions;\n    center[1] = yCenter / numPositions;\n    center[2] = zCenter / numPositions;\n    return center;\n}\n","import {dotVec3, mulVec3Scalar, normalizeVec3, vec3} from \"./vector\";\nimport {setMat4Translation, transformVec4} from \"./matrix\";\nimport type {FloatArrayParam} from \"./math\";\nimport {getPositionsCenter} from \"./boundaries\";\n\nconst tempVec3a = vec3();\n\n/**\n * Given a view matrix and a relative-to-center (RTC) coordinate origin, returns a view matrix\n * to transform RTC coordinates to View-space.\n */\nexport const createRTCViewMat = (function () {\n\n    const tempMat = new Float32Array(16);\n    const rtcCenterWorld = new Float64Array(4);\n    const rtcCenterView = new Float64Array(4);\n\n    return function (viewMat: FloatArrayParam, rtcCenter: FloatArrayParam, rtcViewMat: FloatArrayParam = tempMat) {\n        rtcCenterWorld[0] = rtcCenter[0];\n        rtcCenterWorld[1] = rtcCenter[1];\n        rtcCenterWorld[2] = rtcCenter[2];\n        rtcCenterWorld[3] = 1;\n        transformVec4(viewMat, rtcCenterWorld, rtcCenterView);\n        setMat4Translation(viewMat, rtcCenterView, rtcViewMat);\n        return rtcViewMat;\n    }\n}());\n\n/**\n * Converts a World-space 3D position to RTC.\n *\n * Given a double-precision World-space position, returns a double-precision relative-to-center (RTC) center pos\n * and a single-precision offset fom that center.\n *\n * @param worldPos The World-space position.\n * @param rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param rtcPos Single-precision offset fom that center.\n */\nexport function worldToRTCPos(worldPos: FloatArrayParam, rtcCenter: FloatArrayParam, rtcPos: FloatArrayParam) {\n\n    const xHigh = Float32Array.from([worldPos[0]])[0];\n    const xLow = worldPos[0] - xHigh;\n\n    const yHigh = Float32Array.from([worldPos[1]])[0];\n    const yLow = worldPos[1] - yHigh;\n\n    const zHigh = Float32Array.from([worldPos[2]])[0];\n    const zLow = worldPos[2] - zHigh;\n\n    rtcCenter[0] = xHigh;\n    rtcCenter[1] = yHigh;\n    rtcCenter[2] = zHigh;\n\n    rtcPos[0] = xLow;\n    rtcPos[1] = yLow;\n    rtcPos[2] = zLow;\n}\n\n/**\n * Converts a flat array of double-precision positions to RTC positions.\n *\n * Returns the RTC positions, along with a computed RTC center for those positions.\n *\n * When computing the RTC position, this function uses a modulus operation to ensure that, whenever possible,\n * identical RTC positions are reused for different positions arrays.\n *\n * @param worldPositions Flat array of World-space 3D positions.\n * @param rtcPositions Outputs the computed flat array of 3D RTC positions.\n * @param rtcCenter Outputs the computed double-precision relative-to-center (RTC) center pos.\n * @param [cellSize=200] The size of each coordinate cell within the RTC coordinate system.\n * @returns ````True```` if the positions actually needed conversion to RTC, else ````false````. When\n * ````false````, we can safely ignore the data returned in ````rtcPositions```` and ````rtcCenter````,\n * since ````rtcCenter```` will equal ````[0,0,0]````, and ````rtcPositions```` will contain identical values to ````positions````.\n */\nexport function worldToRTCPositions(worldPositions: FloatArrayParam, rtcPositions: FloatArrayParam, rtcCenter: FloatArrayParam, cellSize = 200): boolean {\n\n    const center = getPositionsCenter(worldPositions, tempVec3a);\n\n    const rtcCenterX = Math.round(center[0] / cellSize) * cellSize;\n    const rtcCenterY = Math.round(center[1] / cellSize) * cellSize;\n    const rtcCenterZ = Math.round(center[2] / cellSize) * cellSize;\n\n    for (let i = 0, len = worldPositions.length; i < len; i += 3) {\n        rtcPositions[i + 0] = worldPositions[i + 0] - rtcCenterX;\n        rtcPositions[i + 1] = worldPositions[i + 1] - rtcCenterY;\n        rtcPositions[i + 2] = worldPositions[i + 2] - rtcCenterZ;\n    }\n\n    rtcCenter[0] = rtcCenterX;\n    rtcCenter[1] = rtcCenterY;\n    rtcCenter[2] = rtcCenterZ;\n\n    const rtcNeeded = (rtcCenter[0] !== 0 || rtcCenter[1] !== 0 || rtcCenter[2] !== 0);\n\n    return rtcNeeded;\n}\n\n/**\n * Converts an RTC 3D position to World-space.\n *\n * @param rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param rtcPos Single-precision offset fom that center.\n * @param worldPos The World-space position.\n */\nexport function rtcToWorldPos(rtcCenter: FloatArrayParam, rtcPos: FloatArrayParam, worldPos: FloatArrayParam): FloatArrayParam {\n    worldPos[0] = rtcCenter[0] + rtcPos[0];\n    worldPos[1] = rtcCenter[1] + rtcPos[1];\n    worldPos[2] = rtcCenter[2] + rtcPos[2];\n    return worldPos;\n}\n\n/**\n * Given a 3D plane defined by distance from origin and direction, and an RTC center position,\n * return a plane position that is relative to the RTC center.\n *\n * @param dist\n * @param dir\n * @param rtcCenter\n * @param rtcPlanePos\n * @returns {*}\n */\nexport function getPlaneRTCPos(dist: number, dir: FloatArrayParam, rtcCenter: FloatArrayParam, rtcPlanePos: FloatArrayParam) {\n    const rtcCenterToPlaneDist = dotVec3(dir, rtcCenter) + dist;\n    const dirNormalized = normalizeVec3(dir, tempVec3a);\n    mulVec3Scalar(dirNormalized, -rtcCenterToPlaneDist, rtcPlanePos);\n    return rtcPlanePos;\n}\n\n","/** @private */\nclass Map {\n     readonly #items: any[];\n     #lastUniqueId: number;\n\n    constructor(items:any, baseId?:any) {\n        this.#items = items || [];\n        this.#lastUniqueId = (baseId || 0) + 1;\n    }\n\n    /**\n     * Usage:\n     *\n     * id = myMap.addItem(\"foo\") // ID internally generated\n     * id = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"\n     */\n    addItem() {\n        let item;\n        if (arguments.length === 2) {\n            const id = arguments[0];\n            item = arguments[1];\n            if (this.#items[id]) { // Won't happen if given ID is string\n                throw \"ID clash: '\" + id + \"'\";\n            }\n            this.#items[id] = item;\n            return id;\n\n        } else {\n            item = arguments[0] || {};\n            while (true) {\n                const findId = this.#lastUniqueId++;\n                if (!this.#items[findId]) {\n                    this.#items[findId] = item;\n                    return findId;\n                }\n            }\n        }\n    }\n\n    removeItem(id:any) {\n        const item = this.#items[id];\n        delete this.#items[id];\n        return item;\n    }\n}\n\nexport {Map};\n","export class Queue {\n    private _head: any[];\n    private _headLength: number;\n    private _tail: any[];\n    private _index: number;\n    private _length: number;\n\n    constructor() {\n\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    shift() {\n        if (this._index >= this._headLength) {\n            const t = this._head;\n            t.length = 0;\n            this._head = this._tail;\n            this._tail = t;\n            this._index = 0;\n            this._headLength = this._head.length;\n            if (!this._headLength) {\n                return;\n            }\n        }\n        const value = this._head[this._index];\n        if (this._index < 0) {\n            delete this._head[this._index++];\n        }\n        else {\n            this._head[this._index++] = undefined;\n        }\n        this._length--;\n        return value;\n    }\n\n    push(item: any) {\n        this._length++;\n        this._tail.push(item);\n        return this;\n    };\n\n    unshift(item: any) {\n        this._head[--this._index] = item;\n        this._length++;\n        return this;\n    }\n\n    clear() {\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n}\n","export function clone(ob: any) {\n    return JSON.parse(JSON.stringify(ob));\n}\n\nconst guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n    const li = [];\n    // @ts-ignore\n    const st = a[0].charCodeAt(0);\n    const en = st + a[1];\n    for (let i = st; i < en; ++i) {\n        li.push(i);\n    }\n    return String.fromCharCode.apply(null, li);\n}).join(\"\");\n\n\nexport function b64(v: number, len: number) {\n    const r = (!len || len === 4) ? [0, 6, 12, 18] : [0, 6];\n    return r.map(function (i) {\n            return guidChars.substr(parseInt(String(v / (1 << i))) % 64, 1)\n        }\n    ).reverse().join(\"\");\n}\n\nexport function compressGuid(g: string) {\n    const bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n        return parseInt(g.substr(i, 2), 16);\n    });\n    return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n        return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2], 4);\n    }).join(\"\");\n}\n\nexport function findNodeOfType(m: any, t: any) {\n    const li: any[] = [];\n    const _ = function (n: { type: any; children: any; }) {\n        if (n.type === t) li.push(n);\n        (n.children || []).forEach(function (c: { type: any; children: any; }) {\n            _(c);\n        });\n    };\n    _(m);\n    return li;\n}\n\n/**\n */\nexport function timeout(dt: number) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, dt);\n    });\n}\n\nexport function httpRequest(args: { method: string; url: string; }) {\n    return new Promise(function (resolve, reject) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(args.method || \"GET\", args.url, true);\n        xhr.onload = function (e) {\n            console.log(args.url, xhr.readyState, xhr.status);\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.responseXML);\n                } else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.send(null);\n    });\n}\n\nexport const queryString = function () {\n    // This function is anonymous, is executed immediately and\n    // the return value is assigned to QueryString!\n    const query_string = {};\n    const query = window.location.search.substring(1);\n    const vars = query.split(\"&\");\n    for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split(\"=\");\n        // If first entry with this name\n        // @ts-ignore\n        if (typeof query_string[pair[0]] === \"undefined\") {\n            // @ts-ignore\n            query_string[pair[0]] = decodeURIComponent(pair[1]);\n            // If second entry with this name\n        } else { // @ts-ignore\n            if (typeof query_string[pair[0]] === \"string\") {\n                // @ts-ignore\n                query_string[pair[0]] = [query_string[pair[0]], decodeURIComponent(pair[1])];\n                // If third or later entry with this name\n            } else {\n                // @ts-ignore\n                query_string[pair[0]].push(decodeURIComponent(pair[1]));\n            }\n        }\n    }\n    return query_string;\n}();\n\nexport function loadJSON(url: string,\n                         ok: {\n                             (arg0: any): void;\n                             (_value: any): any;\n                         },\n                         err: {\n                             (arg0: string | ProgressEvent<XMLHttpRequestEventTarget>): void;\n                             (_value: any): any;\n                         }) {\n    // Avoid checking ok and err on each use.\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n\n    const request = new XMLHttpRequest();\n    request.overrideMimeType(\"application/json\");\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n        // @ts-ignore\n        const response = event.target.response;\n        if (this.status === 200) {\n            let json;\n            try {\n                json = JSON.parse(response);\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n            ok(json);\n        } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('loadFile: HTTP Status 0 received.');\n            try {\n                ok(JSON.parse(response));\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n        } else {\n            err(event);\n        }\n    }, false);\n\n    request.addEventListener('error', function (event) {\n        err(event);\n    }, false);\n    request.send(null);\n}\n\nexport function loadArraybuffer(url: string, ok: { (arg0: ArrayBuffer): void; (_value: any): any; }, err: { (arg0: string): void; (_value: any): any; }) {\n    // Check for data: URI\n    // @ts-ignore\n    const defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = url.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        let data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (let i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\n/**\n Tests if the given object is an array\n */\nexport function isArray(value: any) {\n    return value && !(value.propertyIsEnumerable('length')) && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n Tests if the given value is a string\n */\nexport function isString(value: any) {\n    return (typeof value === 'string' || value instanceof String);\n}\n\n/**\n Tests if the given value is a number\n */\nexport function isNumeric(value: any) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n Tests if the given value is an ID\n */\nexport function isID(value: any) {\n    return isString(value) || isNumeric(value);\n}\n\n/**\n Tests if the given value is a function\n */\nexport function isFunction(value: any) {\n    return (typeof value === \"function\");\n}\n\n/**\n Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.\n */\nexport function isObject(value: { constructor: Function; }) {\n    const objectConstructor = {}.constructor;\n    return (!!value && value.constructor === objectConstructor);\n}\n\n/** Returns a shallow copy\n */\nexport function copy(o: any) {\n    return apply(o, {});\n}\n\n/** Add properties of o to o2, overwriting them on o2 if already there\n */\nexport function apply(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            o2[name] = o[name];\n        }\n    }\n    return o2;\n}\n\n/**\n Add non-null/defined properties of o to o2\n */\nexport function apply2(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o[name] !== undefined && o[name] !== null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Add properties of o to o2 where undefined or null on o2\n */\nexport function applyIf(o: any, o2: any) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o2[name] === undefined || o2[name] === null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Returns true if the given map is empty.\n */\nexport function isEmptyObject(obj: any) {\n    for (const name in obj) {\n        if (obj.hasOwnProperty(name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n Returns the given ID as a string, in quotes if the ID was a string to begin with.\n This is useful for logging IDs.\n */\nexport function inQuotes(id: any) {\n    return isNumeric(id) ? (`${id}`) : (`'${id}'`);\n}\n\n/**\n Returns the concatenation of two typed arrays.\n */\nexport function concat(a: any, b: any) {\n    const c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * Returns a new UUID.\n */\nexport const createUUID = ((() => {\n    const lut: any[] = [];\n    for (let i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n    }\n    return () => {\n        const d0 = Math.random() * 0xffffffff | 0;\n        const d1 = Math.random() * 0xffffffff | 0;\n        const d2 = Math.random() * 0xffffffff | 0;\n        const d3 = Math.random() * 0xffffffff | 0;\n        return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n    };\n}))();","class LoadingManager {\n    private isLoading: boolean;\n    private itemsLoaded: number;\n    private itemsTotal: number;\n    private urlModifier: undefined;\n    private handlers: any[];\n    private onStart: Function|undefined;\n    private onLoad: Function;\n    private onProgress: Function;\n    private onError: Function;\n\n    constructor(onLoad: Function, onProgress: Function, onError: Function) {\n\n        this.isLoading = false;\n        this.itemsLoaded = 0;\n        this.itemsTotal = 0;\n        this.urlModifier = undefined;\n        this.handlers = [];\n\n        this.onStart = undefined;\n        this.onLoad = onLoad;\n        this.onProgress = onProgress;\n        this.onError = onError;\n    }\n\n    itemStart(url: any) {\n        this.itemsTotal++;\n        if (this.isLoading === false) {\n            if (this.onStart !== undefined) {\n                this.onStart(url, this.itemsLoaded, this.itemsTotal);\n            }\n        }\n        this.isLoading = true;\n    }\n\n    itemEnd(url: any) {\n        this.itemsLoaded++;\n        if (this.onProgress !== undefined) {\n            this.onProgress(url, this.itemsLoaded, this.itemsTotal);\n        }\n        if (this.itemsLoaded === this.itemsTotal) {\n            this.isLoading = false;\n            if (this.onLoad !== undefined) {\n                this.onLoad();\n            }\n        }\n    }\n\n    itemError(url: any) {\n        if (this.onError !== undefined) {\n            this.onError(url);\n        }\n    }\n\n    resolveURL(url: any) {\n        if (this.urlModifier) {\n            // @ts-ignore\n            return this.urlModifier(url);\n        }\n        return url;\n    }\n\n    setURLModifier(transform: any) {\n        this.urlModifier = transform;\n        return this;\n    }\n\n    addHandler(regex: any, loader: any) {\n        this.handlers.push(regex, loader);\n        return this;\n    }\n\n    removeHandler(regex: any) {\n        const index = this.handlers.indexOf(regex);\n        if (index !== -1) {\n            this.handlers.splice(index, 2);\n        }\n        return this;\n    }\n\n    getHandler(file: any) {\n        for (let i = 0, l = this.handlers.length; i < l; i += 2) {\n            const regex = this.handlers[i];\n            const loader = this.handlers[i + 1];\n            if (regex.global) regex.lastIndex = 0; // see #17920\n            if (regex.test(file)) {\n                return loader;\n            }\n        }\n        return null;\n    }\n}\n\n// @ts-ignore\nconst DefaultLoadingManager = new LoadingManager();\n\nexport {DefaultLoadingManager, LoadingManager};\n","import {DefaultLoadingManager, LoadingManager} from './LoadingManager';\n\nclass Loader {\n     manager: LoadingManager;\n     crossOrigin: string;\n     withCredentials: boolean;\n     path: string;\n     resourcePath: string;\n     requestHeader: {};\n\n    constructor(manager: LoadingManager | undefined) {\n\n        this.manager = (manager !== undefined) ? manager : DefaultLoadingManager;\n\n        this.crossOrigin = 'anonymous';\n        this.withCredentials = false;\n        this.path = '';\n        this.resourcePath = '';\n        this.requestHeader = {};\n    }\n\n    load(url: string, onLoad: Function, onProgress: Function, onError: Function) {\n    }\n\n    loadAsync(url: string, onProgress: Function) {\n        const scope = this;\n        return new Promise(function (resolve, reject) {\n            // @ts-ignore\n            scope.load(url, resolve, onProgress, reject);\n        });\n    }\n\n    parse( /* data */) {\n    }\n\n    setCrossOrigin(crossOrigin: string) {\n        this.crossOrigin = crossOrigin;\n        return this;\n    }\n\n    setWithCredentials(value: boolean) {\n        this.withCredentials = value;\n        return this;\n    }\n\n    setPath(path: string) {\n        this.path = path;\n        return this;\n    }\n\n    setResourcePath(resourcePath: string) {\n        this.resourcePath = resourcePath;\n        return this;\n    }\n\n    setRequestHeader(requestHeader: {}) {\n        this.requestHeader = requestHeader;\n        return this;\n    }\n}\n\nexport {Loader};\n","/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nexport class WorkerPool {\n    private pool: number;\n    private queue: any[];\n    private workers: any[];\n    private workersResolve: any[];\n    private workerStatus: number;\n    private workerCreator: any;\n\n    constructor(pool = 4) {\n        this.pool = pool;\n        this.queue = [];\n        this.workers = [];\n        this.workersResolve = [];\n        this.workerStatus = 0;\n    }\n\n    _initWorker(workerId: number) {\n        if (!this.workers[workerId]) {\n            const worker = this.workerCreator();\n            worker.addEventListener('message', this._onMessage.bind(this, workerId));\n            this.workers[workerId] = worker;\n        }\n    }\n\n    _getIdleWorker() {\n        for (let i = 0; i < this.pool; i++)\n            if (!(this.workerStatus & (1 << i))) return i;\n        return -1;\n    }\n\n    _onMessage(workerId: number, msg: string) {\n        const resolve = this.workersResolve[workerId];\n        resolve && resolve(msg);\n        if (this.queue.length) {\n            const {resolve, msg, transfer} = this.queue.shift();\n            this.workersResolve[workerId] = resolve;\n            this.workers[workerId].postMessage(msg, transfer);\n        } else {\n            this.workerStatus ^= 1 << workerId;\n        }\n    }\n\n    setWorkerCreator(workerCreator: any) {\n        this.workerCreator = workerCreator;\n    }\n\n    setWorkerLimit(pool: number) {\n        this.pool = pool;\n    }\n\n    postMessage(msg: any, transfer: any) {\n        return new Promise((resolve) => {\n            const workerId = this._getIdleWorker();\n            if (workerId !== -1) {\n                this._initWorker(workerId);\n                this.workerStatus |= 1 << workerId;\n                this.workersResolve[workerId] = resolve;\n                this.workers[workerId].postMessage(msg, transfer);\n            } else {\n                this.queue.push({resolve, msg, transfer});\n            }\n        });\n    }\n\n    destroy() {\n\n        this.workers.forEach((worker) => worker.terminate());\n        this.workersResolve.length = 0;\n        this.workers.length = 0;\n        this.queue.length = 0;\n        this.workerStatus = 0;\n\n    }\n\n}\n","import {Cache} from './Cache';\nimport {Loader} from './Loader';\nimport type {LoadingManager} from \"./LoadingManager\";\n\nconst loading : {[key:string]:any} = {};\n\nclass FileLoader extends Loader {\n\n    mimeType: string;\n    responseType: string;\n\n    constructor(manager?: LoadingManager) {\n        super(manager);\n    }\n\n    load(url:string, onLoad:Function, onProgress:Function, onError:Function) {\n        if (url === undefined) {\n            url = '';\n        }\n        if (this.path !== undefined) {\n            url = this.path + url;\n        }\n        url = this.manager.resolveURL(url);\n        const cached = Cache.get(url);\n        if (cached !== undefined) {\n            this.manager.itemStart(url);\n            setTimeout(() => {\n                if (onLoad) {\n                    onLoad(cached);\n                }\n                this.manager.itemEnd(url);\n            }, 0);\n            return cached;\n        }\n        if (loading[url] !== undefined) {\n            loading[url].push({onLoad, onProgress, onError});\n            return;\n        }\n        loading[url] = [];\n        loading[url].push({onLoad, onProgress, onError});\n        const req = new Request(url, {\n            headers: new Headers(this.requestHeader),\n            credentials: this.withCredentials ? 'include' : 'same-origin'\n        });\n        const mimeType = this.mimeType;\n        const responseType = this.responseType;\n        fetch(req).then(response => {\n            if (response.status === 200 || response.status === 0) {\n                // Some browsers return HTTP Status 0 when using non-http protocol\n                // e.g. 'file://' or 'data://'. Handle as success.\n                if (response.status === 0) {\n                    console.warn('FileLoader: HTTP Status 0 received.');\n                }\n                // @ts-ignore\n                if (typeof ReadableStream === 'undefined' || response.body.getReader === undefined) {\n                    return response;\n                }\n                const callbacks = loading[url];\n                // @ts-ignore\n                const reader = response.body.getReader();\n                const contentLength = response.headers.get('Content-Length');\n                const total = contentLength ? parseInt(contentLength) : 0;\n                const lengthComputable = total !== 0;\n                let loaded = 0;\n                const stream = new ReadableStream({\n                    start(controller) {\n                        readData();\n\n                        function readData() {\n                            reader.read().then(({done, value}) => {\n                                if (done) {\n                                    controller.close();\n                                } else {\n                                    // @ts-ignore\n                                    loaded += value.byteLength;\n                                    const event = new ProgressEvent('progress', {lengthComputable, loaded, total});\n                                    for (let i = 0, il = callbacks.length; i < il; i++) {\n                                        const callback = callbacks[i];\n                                        if (callback.onProgress) {\n                                            callback.onProgress(event);\n                                        }\n                                    }\n                                    controller.enqueue(value);\n                                    readData();\n                                }\n                            });\n                        }\n                    }\n                });\n                return new Response(stream);\n            } else {\n                throw Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n            }\n        }).then(response => {\n            switch (responseType) {\n                case 'arraybuffer':\n                    return response.arrayBuffer();\n                case 'blob':\n                    return response.blob();\n                case 'document':\n                    return response.text()\n                        .then(text => {\n                            const parser = new DOMParser();\n                            // @ts-ignore\n                            return parser.parseFromString(text, mimeType);\n                        });\n                case 'json':\n                    return response.json();\n                default:\n                    if (mimeType === undefined) {\n                        return response.text();\n                    } else {\n                        // sniff encoding\n                        const re = /charset=\"?([^;\"\\s]*)\"?/i;\n                        const exec = re.exec(mimeType);\n                        const label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n                        const decoder = new TextDecoder(label);\n                        return response.arrayBuffer().then(ab => decoder.decode(ab));\n                    }\n            }\n        }).then(data => {\n            // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n            Cache.add(url, data);\n            const callbacks = loading[url];\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onLoad) {\n                    callback.onLoad(data);\n                }\n            }\n        }).catch(err => {\n            // Abort errors and other errors are handled the same\n            const callbacks = loading[url];\n            if (callbacks === undefined) {\n                // When onLoad was called and url was deleted in `loading`\n                this.manager.itemError(url);\n                throw err;\n\n            }\n            delete loading[url];\n            for (let i = 0, il = callbacks.length; i < il; i++) {\n                const callback = callbacks[i];\n                if (callback.onError) {\n                    callback.onError(err);\n                }\n            }\n            this.manager.itemError(url);\n        }).finally(() => {\n            this.manager.itemEnd(url);\n        });\n        this.manager.itemStart(url);\n    }\n\n    setResponseType(value: string) {\n        this.responseType = value;\n        return this;\n    }\n\n    setMimeType(value: string) {\n        this.mimeType = value;\n        return this;\n    }\n}\n\n\nexport {FileLoader};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n\nconst letters = {\n    // @ts-ignore\n    ' ': {width: 16, points: []},\n    '!': {\n        width: 10, points: [\n            [5, 21],\n            [5, 7],\n            [-1, -1],\n            [5, 2],\n            [4, 1],\n            [5, 0],\n            [6, 1],\n            [5, 2]\n        ]\n    },\n    '\"': {\n        width: 16, points: [\n            [4, 21],\n            [4, 14],\n            [-1, -1],\n            [12, 21],\n            [12, 14]\n        ]\n    },\n    '#': {\n        width: 21, points: [\n            [11, 25],\n            [4, -7],\n            [-1, -1],\n            [17, 25],\n            [10, -7],\n            [-1, -1],\n            [4, 12],\n            [18, 12],\n            [-1, -1],\n            [3, 6],\n            [17, 6]\n        ]\n    },\n    '$': {\n        width: 20, points: [\n            [8, 25],\n            [8, -4],\n            [-1, -1],\n            [12, 25],\n            [12, -4],\n            [-1, -1],\n            [17, 18],\n            [15, 20],\n            [12, 21],\n            [8, 21],\n            [5, 20],\n            [3, 18],\n            [3, 16],\n            [4, 14],\n            [5, 13],\n            [7, 12],\n            [13, 10],\n            [15, 9],\n            [16, 8],\n            [17, 6],\n            [17, 3],\n            [15, 1],\n            [12, 0],\n            [8, 0],\n            [5, 1],\n            [3, 3]\n        ]\n    },\n    '%': {\n        width: 24, points: [\n            [21, 21],\n            [3, 0],\n            [-1, -1],\n            [8, 21],\n            [10, 19],\n            [10, 17],\n            [9, 15],\n            [7, 14],\n            [5, 14],\n            [3, 16],\n            [3, 18],\n            [4, 20],\n            [6, 21],\n            [8, 21],\n            [10, 20],\n            [13, 19],\n            [16, 19],\n            [19, 20],\n            [21, 21],\n            [-1, -1],\n            [17, 7],\n            [15, 6],\n            [14, 4],\n            [14, 2],\n            [16, 0],\n            [18, 0],\n            [20, 1],\n            [21, 3],\n            [21, 5],\n            [19, 7],\n            [17, 7]\n        ]\n    },\n    '&': {\n        width: 26, points: [\n            [23, 12],\n            [23, 13],\n            [22, 14],\n            [21, 14],\n            [20, 13],\n            [19, 11],\n            [17, 6],\n            [15, 3],\n            [13, 1],\n            [11, 0],\n            [7, 0],\n            [5, 1],\n            [4, 2],\n            [3, 4],\n            [3, 6],\n            [4, 8],\n            [5, 9],\n            [12, 13],\n            [13, 14],\n            [14, 16],\n            [14, 18],\n            [13, 20],\n            [11, 21],\n            [9, 20],\n            [8, 18],\n            [8, 16],\n            [9, 13],\n            [11, 10],\n            [16, 3],\n            [18, 1],\n            [20, 0],\n            [22, 0],\n            [23, 1],\n            [23, 2]\n        ]\n    },\n    '\\'': {\n        width: 10, points: [\n            [5, 19],\n            [4, 20],\n            [5, 21],\n            [6, 20],\n            [6, 18],\n            [5, 16],\n            [4, 15]\n        ]\n    },\n    '(': {\n        width: 14, points: [\n            [11, 25],\n            [9, 23],\n            [7, 20],\n            [5, 16],\n            [4, 11],\n            [4, 7],\n            [5, 2],\n            [7, -2],\n            [9, -5],\n            [11, -7]\n        ]\n    },\n    ')': {\n        width: 14, points: [\n            [3, 25],\n            [5, 23],\n            [7, 20],\n            [9, 16],\n            [10, 11],\n            [10, 7],\n            [9, 2],\n            [7, -2],\n            [5, -5],\n            [3, -7]\n        ]\n    },\n    '*': {\n        width: 16, points: [\n            [8, 21],\n            [8, 9],\n            [-1, -1],\n            [3, 18],\n            [13, 12],\n            [-1, -1],\n            [13, 18],\n            [3, 12]\n        ]\n    },\n    '+': {\n        width: 26, points: [\n            [13, 18],\n            [13, 0],\n            [-1, -1],\n            [4, 9],\n            [22, 9]\n        ]\n    },\n    ',': {\n        width: 10, points: [\n            [6, 1],\n            [5, 0],\n            [4, 1],\n            [5, 2],\n            [6, 1],\n            [6, -1],\n            [5, -3],\n            [4, -4]\n        ]\n    },\n    '-': {\n        width: 26, points: [\n            [4, 9],\n            [22, 9]\n        ]\n    },\n    '.': {\n        width: 10, points: [\n            [5, 2],\n            [4, 1],\n            [5, 0],\n            [6, 1],\n            [5, 2]\n        ]\n    },\n    '/': {\n        width: 22, points: [\n            [20, 25],\n            [2, -7]\n        ]\n    },\n    '0': {\n        width: 20, points: [\n            [9, 21],\n            [6, 20],\n            [4, 17],\n            [3, 12],\n            [3, 9],\n            [4, 4],\n            [6, 1],\n            [9, 0],\n            [11, 0],\n            [14, 1],\n            [16, 4],\n            [17, 9],\n            [17, 12],\n            [16, 17],\n            [14, 20],\n            [11, 21],\n            [9, 21]\n        ]\n    },\n    '1': {\n        width: 20, points: [\n            [6, 17],\n            [8, 18],\n            [11, 21],\n            [11, 0]\n        ]\n    },\n    '2': {\n        width: 20, points: [\n            [4, 16],\n            [4, 17],\n            [5, 19],\n            [6, 20],\n            [8, 21],\n            [12, 21],\n            [14, 20],\n            [15, 19],\n            [16, 17],\n            [16, 15],\n            [15, 13],\n            [13, 10],\n            [3, 0],\n            [17, 0]\n        ]\n    },\n    '3': {\n        width: 20, points: [\n            [5, 21],\n            [16, 21],\n            [10, 13],\n            [13, 13],\n            [15, 12],\n            [16, 11],\n            [17, 8],\n            [17, 6],\n            [16, 3],\n            [14, 1],\n            [11, 0],\n            [8, 0],\n            [5, 1],\n            [4, 2],\n            [3, 4]\n        ]\n    },\n    '4': {\n        width: 20, points: [\n            [13, 21],\n            [3, 7],\n            [18, 7],\n            [-1, -1],\n            [13, 21],\n            [13, 0]\n        ]\n    },\n    '5': {\n        width: 20, points: [\n            [15, 21],\n            [5, 21],\n            [4, 12],\n            [5, 13],\n            [8, 14],\n            [11, 14],\n            [14, 13],\n            [16, 11],\n            [17, 8],\n            [17, 6],\n            [16, 3],\n            [14, 1],\n            [11, 0],\n            [8, 0],\n            [5, 1],\n            [4, 2],\n            [3, 4]\n        ]\n    },\n    '6': {\n        width: 20, points: [\n            [16, 18],\n            [15, 20],\n            [12, 21],\n            [10, 21],\n            [7, 20],\n            [5, 17],\n            [4, 12],\n            [4, 7],\n            [5, 3],\n            [7, 1],\n            [10, 0],\n            [11, 0],\n            [14, 1],\n            [16, 3],\n            [17, 6],\n            [17, 7],\n            [16, 10],\n            [14, 12],\n            [11, 13],\n            [10, 13],\n            [7, 12],\n            [5, 10],\n            [4, 7]\n        ]\n    },\n    '7': {\n        width: 20, points: [\n            [17, 21],\n            [7, 0],\n            [-1, -1],\n            [3, 21],\n            [17, 21]\n        ]\n    },\n    '8': {\n        width: 20, points: [\n            [8, 21],\n            [5, 20],\n            [4, 18],\n            [4, 16],\n            [5, 14],\n            [7, 13],\n            [11, 12],\n            [14, 11],\n            [16, 9],\n            [17, 7],\n            [17, 4],\n            [16, 2],\n            [15, 1],\n            [12, 0],\n            [8, 0],\n            [5, 1],\n            [4, 2],\n            [3, 4],\n            [3, 7],\n            [4, 9],\n            [6, 11],\n            [9, 12],\n            [13, 13],\n            [15, 14],\n            [16, 16],\n            [16, 18],\n            [15, 20],\n            [12, 21],\n            [8, 21]\n        ]\n    },\n    '9': {\n        width: 20, points: [\n            [16, 14],\n            [15, 11],\n            [13, 9],\n            [10, 8],\n            [9, 8],\n            [6, 9],\n            [4, 11],\n            [3, 14],\n            [3, 15],\n            [4, 18],\n            [6, 20],\n            [9, 21],\n            [10, 21],\n            [13, 20],\n            [15, 18],\n            [16, 14],\n            [16, 9],\n            [15, 4],\n            [13, 1],\n            [10, 0],\n            [8, 0],\n            [5, 1],\n            [4, 3]\n        ]\n    },\n    ':': {\n        width: 10, points: [\n            [5, 14],\n            [4, 13],\n            [5, 12],\n            [6, 13],\n            [5, 14],\n            [-1, -1],\n            [5, 2],\n            [4, 1],\n            [5, 0],\n            [6, 1],\n            [5, 2]\n        ]\n    },\n    ';': {\n        width: 10, points: [\n            [5, 14],\n            [4, 13],\n            [5, 12],\n            [6, 13],\n            [5, 14],\n            [-1, -1],\n            [6, 1],\n            [5, 0],\n            [4, 1],\n            [5, 2],\n            [6, 1],\n            [6, -1],\n            [5, -3],\n            [4, -4]\n        ]\n    },\n    '<': {\n        width: 24, points: [\n            [20, 18],\n            [4, 9],\n            [20, 0]\n        ]\n    },\n    '=': {\n        width: 26, points: [\n            [4, 12],\n            [22, 12],\n            [-1, -1],\n            [4, 6],\n            [22, 6]\n        ]\n    },\n    '>': {\n        width: 24, points: [\n            [4, 18],\n            [20, 9],\n            [4, 0]\n        ]\n    },\n    '?': {\n        width: 18, points: [\n            [3, 16],\n            [3, 17],\n            [4, 19],\n            [5, 20],\n            [7, 21],\n            [11, 21],\n            [13, 20],\n            [14, 19],\n            [15, 17],\n            [15, 15],\n            [14, 13],\n            [13, 12],\n            [9, 10],\n            [9, 7],\n            [-1, -1],\n            [9, 2],\n            [8, 1],\n            [9, 0],\n            [10, 1],\n            [9, 2]\n        ]\n    },\n    '@': {\n        width: 27, points: [\n            [18, 13],\n            [17, 15],\n            [15, 16],\n            [12, 16],\n            [10, 15],\n            [9, 14],\n            [8, 11],\n            [8, 8],\n            [9, 6],\n            [11, 5],\n            [14, 5],\n            [16, 6],\n            [17, 8],\n            [-1, -1],\n            [12, 16],\n            [10, 14],\n            [9, 11],\n            [9, 8],\n            [10, 6],\n            [11, 5],\n            [-1, -1],\n            [18, 16],\n            [17, 8],\n            [17, 6],\n            [19, 5],\n            [21, 5],\n            [23, 7],\n            [24, 10],\n            [24, 12],\n            [23, 15],\n            [22, 17],\n            [20, 19],\n            [18, 20],\n            [15, 21],\n            [12, 21],\n            [9, 20],\n            [7, 19],\n            [5, 17],\n            [4, 15],\n            [3, 12],\n            [3, 9],\n            [4, 6],\n            [5, 4],\n            [7, 2],\n            [9, 1],\n            [12, 0],\n            [15, 0],\n            [18, 1],\n            [20, 2],\n            [21, 3],\n            [-1, -1],\n            [19, 16],\n            [18, 8],\n            [18, 6],\n            [19, 5]\n        ]\n    },\n    'A': {\n        width: 18, points: [\n            [9, 21],\n            [1, 0],\n            [-1, -1],\n            [9, 21],\n            [17, 0],\n            [-1, -1],\n            [4, 7],\n            [14, 7]\n        ]\n    },\n    'B': {\n        width: 21, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [13, 21],\n            [16, 20],\n            [17, 19],\n            [18, 17],\n            [18, 15],\n            [17, 13],\n            [16, 12],\n            [13, 11],\n            [-1, -1],\n            [4, 11],\n            [13, 11],\n            [16, 10],\n            [17, 9],\n            [18, 7],\n            [18, 4],\n            [17, 2],\n            [16, 1],\n            [13, 0],\n            [4, 0]\n        ]\n    },\n    'C': {\n        width: 21, points: [\n            [18, 16],\n            [17, 18],\n            [15, 20],\n            [13, 21],\n            [9, 21],\n            [7, 20],\n            [5, 18],\n            [4, 16],\n            [3, 13],\n            [3, 8],\n            [4, 5],\n            [5, 3],\n            [7, 1],\n            [9, 0],\n            [13, 0],\n            [15, 1],\n            [17, 3],\n            [18, 5]\n        ]\n    },\n    'D': {\n        width: 21, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [11, 21],\n            [14, 20],\n            [16, 18],\n            [17, 16],\n            [18, 13],\n            [18, 8],\n            [17, 5],\n            [16, 3],\n            [14, 1],\n            [11, 0],\n            [4, 0]\n        ]\n    },\n    'E': {\n        width: 19, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [17, 21],\n            [-1, -1],\n            [4, 11],\n            [12, 11],\n            [-1, -1],\n            [4, 0],\n            [17, 0]\n        ]\n    },\n    'F': {\n        width: 18, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [17, 21],\n            [-1, -1],\n            [4, 11],\n            [12, 11]\n        ]\n    },\n    'G': {\n        width: 21, points: [\n            [18, 16],\n            [17, 18],\n            [15, 20],\n            [13, 21],\n            [9, 21],\n            [7, 20],\n            [5, 18],\n            [4, 16],\n            [3, 13],\n            [3, 8],\n            [4, 5],\n            [5, 3],\n            [7, 1],\n            [9, 0],\n            [13, 0],\n            [15, 1],\n            [17, 3],\n            [18, 5],\n            [18, 8],\n            [-1, -1],\n            [13, 8],\n            [18, 8]\n        ]\n    },\n    'H': {\n        width: 22, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [18, 21],\n            [18, 0],\n            [-1, -1],\n            [4, 11],\n            [18, 11]\n        ]\n    },\n    'I': {\n        width: 8, points: [\n            [4, 21],\n            [4, 0]\n        ]\n    },\n    'J': {\n        width: 16, points: [\n            [12, 21],\n            [12, 5],\n            [11, 2],\n            [10, 1],\n            [8, 0],\n            [6, 0],\n            [4, 1],\n            [3, 2],\n            [2, 5],\n            [2, 7]\n        ]\n    },\n    'K': {\n        width: 21, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [18, 21],\n            [4, 7],\n            [-1, -1],\n            [9, 12],\n            [18, 0]\n        ]\n    },\n    'L': {\n        width: 17, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 0],\n            [16, 0]\n        ]\n    },\n    'M': {\n        width: 24, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [12, 0],\n            [-1, -1],\n            [20, 21],\n            [12, 0],\n            [-1, -1],\n            [20, 21],\n            [20, 0]\n        ]\n    },\n    'N': {\n        width: 22, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [18, 0],\n            [-1, -1],\n            [18, 21],\n            [18, 0]\n        ]\n    },\n    'O': {\n        width: 22, points: [\n            [9, 21],\n            [7, 20],\n            [5, 18],\n            [4, 16],\n            [3, 13],\n            [3, 8],\n            [4, 5],\n            [5, 3],\n            [7, 1],\n            [9, 0],\n            [13, 0],\n            [15, 1],\n            [17, 3],\n            [18, 5],\n            [19, 8],\n            [19, 13],\n            [18, 16],\n            [17, 18],\n            [15, 20],\n            [13, 21],\n            [9, 21]\n        ]\n    },\n    'P': {\n        width: 21, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [13, 21],\n            [16, 20],\n            [17, 19],\n            [18, 17],\n            [18, 14],\n            [17, 12],\n            [16, 11],\n            [13, 10],\n            [4, 10]\n        ]\n    },\n    'Q': {\n        width: 22, points: [\n            [9, 21],\n            [7, 20],\n            [5, 18],\n            [4, 16],\n            [3, 13],\n            [3, 8],\n            [4, 5],\n            [5, 3],\n            [7, 1],\n            [9, 0],\n            [13, 0],\n            [15, 1],\n            [17, 3],\n            [18, 5],\n            [19, 8],\n            [19, 13],\n            [18, 16],\n            [17, 18],\n            [15, 20],\n            [13, 21],\n            [9, 21],\n            [-1, -1],\n            [12, 4],\n            [18, -2]\n        ]\n    },\n    'R': {\n        width: 21, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 21],\n            [13, 21],\n            [16, 20],\n            [17, 19],\n            [18, 17],\n            [18, 15],\n            [17, 13],\n            [16, 12],\n            [13, 11],\n            [4, 11],\n            [-1, -1],\n            [11, 11],\n            [18, 0]\n        ]\n    },\n    'S': {\n        width: 20, points: [\n            [17, 18],\n            [15, 20],\n            [12, 21],\n            [8, 21],\n            [5, 20],\n            [3, 18],\n            [3, 16],\n            [4, 14],\n            [5, 13],\n            [7, 12],\n            [13, 10],\n            [15, 9],\n            [16, 8],\n            [17, 6],\n            [17, 3],\n            [15, 1],\n            [12, 0],\n            [8, 0],\n            [5, 1],\n            [3, 3]\n        ]\n    },\n    'T': {\n        width: 16, points: [\n            [8, 21],\n            [8, 0],\n            [-1, -1],\n            [1, 21],\n            [15, 21]\n        ]\n    },\n    'U': {\n        width: 22, points: [\n            [4, 21],\n            [4, 6],\n            [5, 3],\n            [7, 1],\n            [10, 0],\n            [12, 0],\n            [15, 1],\n            [17, 3],\n            [18, 6],\n            [18, 21]\n        ]\n    },\n    'V': {\n        width: 18, points: [\n            [1, 21],\n            [9, 0],\n            [-1, -1],\n            [17, 21],\n            [9, 0]\n        ]\n    },\n    'W': {\n        width: 24, points: [\n            [2, 21],\n            [7, 0],\n            [-1, -1],\n            [12, 21],\n            [7, 0],\n            [-1, -1],\n            [12, 21],\n            [17, 0],\n            [-1, -1],\n            [22, 21],\n            [17, 0]\n        ]\n    },\n    'X': {\n        width: 20, points: [\n            [3, 21],\n            [17, 0],\n            [-1, -1],\n            [17, 21],\n            [3, 0]\n        ]\n    },\n    'Y': {\n        width: 18, points: [\n            [1, 21],\n            [9, 11],\n            [9, 0],\n            [-1, -1],\n            [17, 21],\n            [9, 11]\n        ]\n    },\n    'Z': {\n        width: 20, points: [\n            [17, 21],\n            [3, 0],\n            [-1, -1],\n            [3, 21],\n            [17, 21],\n            [-1, -1],\n            [3, 0],\n            [17, 0]\n        ]\n    },\n    '[': {\n        width: 14, points: [\n            [4, 25],\n            [4, -7],\n            [-1, -1],\n            [5, 25],\n            [5, -7],\n            [-1, -1],\n            [4, 25],\n            [11, 25],\n            [-1, -1],\n            [4, -7],\n            [11, -7]\n        ]\n    },\n    '\\\\': {\n        width: 14, points: [\n            [0, 21],\n            [14, -3]\n        ]\n    },\n    ']': {\n        width: 14, points: [\n            [9, 25],\n            [9, -7],\n            [-1, -1],\n            [10, 25],\n            [10, -7],\n            [-1, -1],\n            [3, 25],\n            [10, 25],\n            [-1, -1],\n            [3, -7],\n            [10, -7]\n        ]\n    },\n    '^': {\n        width: 16, points: [\n            [6, 15],\n            [8, 18],\n            [10, 15],\n            [-1, -1],\n            [3, 12],\n            [8, 17],\n            [13, 12],\n            [-1, -1],\n            [8, 17],\n            [8, 0]\n        ]\n    },\n    '_': {\n        width: 16, points: [\n            [0, -2],\n            [16, -2]\n        ]\n    },\n    '`': {\n        width: 10, points: [\n            [6, 21],\n            [5, 20],\n            [4, 18],\n            [4, 16],\n            [5, 15],\n            [6, 16],\n            [5, 17]\n        ]\n    },\n    'a': {\n        width: 19, points: [\n            [15, 14],\n            [15, 0],\n            [-1, -1],\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'b': {\n        width: 19, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 11],\n            [6, 13],\n            [8, 14],\n            [11, 14],\n            [13, 13],\n            [15, 11],\n            [16, 8],\n            [16, 6],\n            [15, 3],\n            [13, 1],\n            [11, 0],\n            [8, 0],\n            [6, 1],\n            [4, 3]\n        ]\n    },\n    'c': {\n        width: 18, points: [\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'd': {\n        width: 19, points: [\n            [15, 21],\n            [15, 0],\n            [-1, -1],\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'e': {\n        width: 18, points: [\n            [3, 8],\n            [15, 8],\n            [15, 10],\n            [14, 12],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'f': {\n        width: 12, points: [\n            [10, 21],\n            [8, 21],\n            [6, 20],\n            [5, 17],\n            [5, 0],\n            [-1, -1],\n            [2, 14],\n            [9, 14]\n        ]\n    },\n    'g': {\n        width: 19, points: [\n            [15, 14],\n            [15, -2],\n            [14, -5],\n            [13, -6],\n            [11, -7],\n            [8, -7],\n            [6, -6],\n            [-1, -1],\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'h': {\n        width: 19, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [4, 10],\n            [7, 13],\n            [9, 14],\n            [12, 14],\n            [14, 13],\n            [15, 10],\n            [15, 0]\n        ]\n    },\n    'i': {\n        width: 8, points: [\n            [3, 21],\n            [4, 20],\n            [5, 21],\n            [4, 22],\n            [3, 21],\n            [-1, -1],\n            [4, 14],\n            [4, 0]\n        ]\n    },\n    'j': {\n        width: 10, points: [\n            [5, 21],\n            [6, 20],\n            [7, 21],\n            [6, 22],\n            [5, 21],\n            [-1, -1],\n            [6, 14],\n            [6, -3],\n            [5, -6],\n            [3, -7],\n            [1, -7]\n        ]\n    },\n    'k': {\n        width: 17, points: [\n            [4, 21],\n            [4, 0],\n            [-1, -1],\n            [14, 14],\n            [4, 4],\n            [-1, -1],\n            [8, 8],\n            [15, 0]\n        ]\n    },\n    'l': {\n        width: 8, points: [\n            [4, 21],\n            [4, 0]\n        ]\n    },\n    'm': {\n        width: 30, points: [\n            [4, 14],\n            [4, 0],\n            [-1, -1],\n            [4, 10],\n            [7, 13],\n            [9, 14],\n            [12, 14],\n            [14, 13],\n            [15, 10],\n            [15, 0],\n            [-1, -1],\n            [15, 10],\n            [18, 13],\n            [20, 14],\n            [23, 14],\n            [25, 13],\n            [26, 10],\n            [26, 0]\n        ]\n    },\n    'n': {\n        width: 19, points: [\n            [4, 14],\n            [4, 0],\n            [-1, -1],\n            [4, 10],\n            [7, 13],\n            [9, 14],\n            [12, 14],\n            [14, 13],\n            [15, 10],\n            [15, 0]\n        ]\n    },\n    'o': {\n        width: 19, points: [\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3],\n            [16, 6],\n            [16, 8],\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14]\n        ]\n    },\n    'p': {\n        width: 19, points: [\n            [4, 14],\n            [4, -7],\n            [-1, -1],\n            [4, 11],\n            [6, 13],\n            [8, 14],\n            [11, 14],\n            [13, 13],\n            [15, 11],\n            [16, 8],\n            [16, 6],\n            [15, 3],\n            [13, 1],\n            [11, 0],\n            [8, 0],\n            [6, 1],\n            [4, 3]\n        ]\n    },\n    'q': {\n        width: 19, points: [\n            [15, 14],\n            [15, -7],\n            [-1, -1],\n            [15, 11],\n            [13, 13],\n            [11, 14],\n            [8, 14],\n            [6, 13],\n            [4, 11],\n            [3, 8],\n            [3, 6],\n            [4, 3],\n            [6, 1],\n            [8, 0],\n            [11, 0],\n            [13, 1],\n            [15, 3]\n        ]\n    },\n    'r': {\n        width: 13, points: [\n            [4, 14],\n            [4, 0],\n            [-1, -1],\n            [4, 8],\n            [5, 11],\n            [7, 13],\n            [9, 14],\n            [12, 14]\n        ]\n    },\n    's': {\n        width: 17, points: [\n            [14, 11],\n            [13, 13],\n            [10, 14],\n            [7, 14],\n            [4, 13],\n            [3, 11],\n            [4, 9],\n            [6, 8],\n            [11, 7],\n            [13, 6],\n            [14, 4],\n            [14, 3],\n            [13, 1],\n            [10, 0],\n            [7, 0],\n            [4, 1],\n            [3, 3]\n        ]\n    },\n    't': {\n        width: 12, points: [\n            [5, 21],\n            [5, 4],\n            [6, 1],\n            [8, 0],\n            [10, 0],\n            [-1, -1],\n            [2, 14],\n            [9, 14]\n        ]\n    },\n    'u': {\n        width: 19, points: [\n            [4, 14],\n            [4, 4],\n            [5, 1],\n            [7, 0],\n            [10, 0],\n            [12, 1],\n            [15, 4],\n            [-1, -1],\n            [15, 14],\n            [15, 0]\n        ]\n    },\n    'v': {\n        width: 16, points: [\n            [2, 14],\n            [8, 0],\n            [-1, -1],\n            [14, 14],\n            [8, 0]\n        ]\n    },\n    'w': {\n        width: 22, points: [\n            [3, 14],\n            [7, 0],\n            [-1, -1],\n            [11, 14],\n            [7, 0],\n            [-1, -1],\n            [11, 14],\n            [15, 0],\n            [-1, -1],\n            [19, 14],\n            [15, 0]\n        ]\n    },\n    'x': {\n        width: 17, points: [\n            [3, 14],\n            [14, 0],\n            [-1, -1],\n            [14, 14],\n            [3, 0]\n        ]\n    },\n    'y': {\n        width: 16, points: [\n            [2, 14],\n            [8, 0],\n            [-1, -1],\n            [14, 14],\n            [8, 0],\n            [6, -4],\n            [4, -6],\n            [2, -7],\n            [1, -7]\n        ]\n    },\n    'z': {\n        width: 17, points: [\n            [14, 14],\n            [3, 0],\n            [-1, -1],\n            [3, 14],\n            [14, 14],\n            [-1, -1],\n            [3, 0],\n            [14, 0]\n        ]\n    },\n    '{': {\n        width: 14, points: [\n            [9, 25],\n            [7, 24],\n            [6, 23],\n            [5, 21],\n            [5, 19],\n            [6, 17],\n            [7, 16],\n            [8, 14],\n            [8, 12],\n            [6, 10],\n            [-1, -1],\n            [7, 24],\n            [6, 22],\n            [6, 20],\n            [7, 18],\n            [8, 17],\n            [9, 15],\n            [9, 13],\n            [8, 11],\n            [4, 9],\n            [8, 7],\n            [9, 5],\n            [9, 3],\n            [8, 1],\n            [7, 0],\n            [6, -2],\n            [6, -4],\n            [7, -6],\n            [-1, -1],\n            [6, 8],\n            [8, 6],\n            [8, 4],\n            [7, 2],\n            [6, 1],\n            [5, -1],\n            [5, -3],\n            [6, -5],\n            [7, -6],\n            [9, -7]\n        ]\n    },\n    '|': {\n        width: 8, points: [\n            [4, 25],\n            [4, -7]\n        ]\n    },\n    '}': {\n        width: 14, points: [\n            [5, 25],\n            [7, 24],\n            [8, 23],\n            [9, 21],\n            [9, 19],\n            [8, 17],\n            [7, 16],\n            [6, 14],\n            [6, 12],\n            [8, 10],\n            [-1, -1],\n            [7, 24],\n            [8, 22],\n            [8, 20],\n            [7, 18],\n            [6, 17],\n            [5, 15],\n            [5, 13],\n            [6, 11],\n            [10, 9],\n            [6, 7],\n            [5, 5],\n            [5, 3],\n            [6, 1],\n            [7, 0],\n            [8, -2],\n            [8, -4],\n            [7, -6],\n            [-1, -1],\n            [8, 8],\n            [6, 6],\n            [6, 4],\n            [7, 2],\n            [8, 1],\n            [9, -1],\n            [9, -3],\n            [8, -5],\n            [7, -6],\n            [5, -7]\n        ]\n    },\n    '~': {\n        width: 24, points: [\n            [3, 6],\n            [3, 8],\n            [4, 11],\n            [6, 12],\n            [8, 12],\n            [10, 11],\n            [14, 8],\n            [16, 7],\n            [18, 7],\n            [20, 8],\n            [21, 10],\n            [-1, -1],\n            [3, 8],\n            [4, 10],\n            [6, 11],\n            [8, 11],\n            [10, 10],\n            [14, 7],\n            [16, 6],\n            [18, 6],\n            [20, 7],\n            [21, 10],\n            [21, 12]\n        ]\n    }\n};\n\n/**\n * Creates wireframe vector text {@link Geometry}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with vector text {@link ReadableGeometry} :\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildVectorTextGeometry)]\n *\n * ````javascript\n *\n * import {WebViewer, Mesh, buildVectorTextGeometry, ReadableGeometry, PhongMaterial} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 100];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildVectorTextGeometry({\n *          origin: [0,0,0],\n *          text: \"On the other side of the screen, it all looked so easy\"\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildVectorTextGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.origin] 3D point indicating the top left corner.\n * @param [cfg.size=1] Size of each character.\n * @param [cfg.text=\"\"] The text.\n * @returns {Object} Configuration for a {@link Geometry} subtype.\n */\nfunction buildVectorTextGeometry(cfg: {\n    size: number;\n    origin: number[];\n    text: string\n} = {\n    origin: [0, 0, 0],\n    size: 1,\n    text: \"\"\n}): GeometryArrays  {\n\n    var origin = cfg.origin || [0, 0, 0];\n    var xOrigin = origin[0];\n    var yOrigin = origin[1];\n    var zOrigin = origin[2];\n    var size = cfg.size || 1;\n\n    var positions = [];\n    var indices = [];\n    var text = cfg.text;\n    if (utils.isNumeric(text)) {\n        text = \"\" + text;\n    }\n    var lines = (text || \"\").split(\"\\n\");\n    var countVerts = 0;\n    var y = 0;\n    var x;\n    var str;\n    var len;\n    var c;\n    var mag = 1.0 / 25.0;\n    var penUp;\n    var p1;\n    var p2;\n    var needLine;\n    var pointsLen;\n    var a;\n\n    for (var iLine = 0; iLine < lines.length; iLine++) {\n\n        x = 0;\n        str = lines[iLine];\n        len = str.length;\n\n        for (var i = 0; i < len; i++) {\n\n            // @ts-ignore\n            c = letters[str.charAt(i)];\n\n            if (c === '\\n') {\n                //alert(\"newline\");\n            }\n\n            if (!c) {\n                continue;\n            }\n\n            penUp = 1;\n            p1 = -1;\n            p2 = -1;\n            needLine = false;\n\n            pointsLen = c.points.length;\n\n            for (var j = 0; j < pointsLen; j++) {\n                a = c.points[j];\n\n                if (a[0] === -1 && a[1] === -1) {\n                    penUp = 1;\n                    needLine = false;\n                    continue;\n                }\n\n                positions.push((x + (a[0] * size) * mag) + xOrigin);\n                positions.push((y + (a[1] * size) * mag) + yOrigin);\n                positions.push(0 + zOrigin);\n\n                if (p1 === -1) {\n                    p1 = countVerts;\n                } else if (p2 === -1) {\n                    p2 = countVerts;\n                } else {\n                    p1 = p2;\n                    p2 = countVerts;\n                }\n                countVerts++;\n\n                if (penUp) {\n                    penUp = false;\n\n                } else {\n                    indices.push(p1);\n                    indices.push(p2);\n                }\n\n                needLine = true;\n            }\n            x += c.width * mag * size;\n\n        }\n        y -= 35 * mag * size;\n    }\n\n    return utils.apply(cfg, {\n        primitive: \"lines\",\n        positions: positions,\n        indices: indices\n    });\n}\n\n\nexport {buildVectorTextGeometry}\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates box-shaped geometry arrays.\n *\n * ## Usage\n *\n * In the example below we'll create a {@link Mesh} with a box-shaped {@link GeometryBucketHandle}.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildBoxGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildBoxGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *         canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new GeometryBucketHandle(viewer.scene, buildBoxGeometry({\n *         center: [0,0,0],\n *         xSize: 1,  // Half-size on each axis\n *         ySize: 1,\n *         zSize: 1\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildBoxGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.xSize=1.0]  Half-size on the X-axis.\n * @param [cfg.ySize=1.0]  Half-size on the Y-axis.\n * @param [cfg.zSize=1.0]  Half-size on the Z-axis.\n * @returns {Object} GeometryBucketHandle arrays.\n */\nfunction buildBoxGeometry(cfg: {\n    center?: number[],\n    ySize?: number,\n    xSize?: number,\n    zSize?: number\n} = {\n    center: [0, 0, 0],\n    xSize: 1,\n    ySize: 1,\n    zSize: 1\n}): GeometryArrays {\n\n    let xSize = cfg.xSize || 1;\n    if (xSize < 0) {\n        console.error(\"negative xSize not allowed - will invert\");\n        xSize *= -1;\n    }\n\n    let ySize = cfg.ySize || 1;\n    if (ySize < 0) {\n        console.error(\"negative ySize not allowed - will invert\");\n        ySize *= -1;\n    }\n\n    let zSize = cfg.zSize || 1;\n    if (zSize < 0) {\n        console.error(\"negative zSize not allowed - will invert\");\n        zSize *= -1;\n    }\n\n    const center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const xmin = -xSize + centerX;\n    const ymin = -ySize + centerY;\n    const zmin = -zSize + centerZ;\n    const xmax = xSize + centerX;\n    const ymax = ySize + centerY;\n    const zmax = zSize + centerZ;\n\n    return utils.apply(cfg, {\n\n        // The vertices - eight for our cube, each\n        // one spanning three array elements for X,Y and Z\n        positions: [\n\n            // v0-v1-v2-v3 front\n            xmax, ymax, zmax,\n            xmin, ymax, zmax,\n            xmin, ymin, zmax,\n            xmax, ymin, zmax,\n\n            // v0-v3-v4-v1 right\n            xmax, ymax, zmax,\n            xmax, ymin, zmax,\n            xmax, ymin, zmin,\n            xmax, ymax, zmin,\n\n            // v0-v1-v6-v1 top\n            xmax, ymax, zmax,\n            xmax, ymax, zmin,\n            xmin, ymax, zmin,\n            xmin, ymax, zmax,\n\n            // v1-v6-v7-v2 left\n            xmin, ymax, zmax,\n            xmin, ymax, zmin,\n            xmin, ymin, zmin,\n            xmin, ymin, zmax,\n\n            // v7-v4-v3-v2 bottom\n            xmin, ymin, zmin,\n            xmax, ymin, zmin,\n            xmax, ymin, zmax,\n            xmin, ymin, zmax,\n\n            // v4-v7-v6-v1 back\n            xmax, ymin, zmin,\n            xmin, ymin, zmin,\n            xmin, ymax, zmin,\n            xmax, ymax, zmin\n        ],\n\n        // Normal vectors, one for each vertex\n        normals: [\n\n            // v0-v1-v2-v3 front\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n\n            // v0-v3-v4-v5 right\n            1, 0, 0,\n            1, 0, 0,\n            1, 0, 0,\n            1, 0, 0,\n\n            // v0-v5-v6-v1 top\n            0, 1, 0,\n            0, 1, 0,\n            0, 1, 0,\n            0, 1, 0,\n\n            // v1-v6-v7-v2 left\n            -1, 0, 0,\n            -1, 0, 0,\n            -1, 0, 0,\n            -1, 0, 0,\n\n            // v7-v4-v3-v2 bottom\n            0, -1, 0,\n            0, -1, 0,\n            0, -1, 0,\n            0, -1, 0,\n\n            // v4-v7-v6-v5 back\n            0, 0, -1,\n            0, 0, -1,\n            0, 0, -1,\n            0, 0, -1\n        ],\n\n        // UV coords\n        uv: [\n\n            // v0-v1-v2-v3 front\n            1, 0,\n            0, 0,\n            0, 1,\n            1, 1,\n\n            // v0-v3-v4-v1 right\n            0, 0,\n            0, 1,\n            1, 1,\n            1, 0,\n\n            // v0-v1-v6-v1 top\n            1, 1,\n            1, 0,\n            0, 0,\n            0, 1,\n\n            // v1-v6-v7-v2 left\n            1, 0,\n            0, 0,\n            0, 1,\n            1, 1,\n\n            // v7-v4-v3-v2 bottom\n            0, 1,\n            1, 1,\n            1, 0,\n            0, 0,\n\n            // v4-v7-v6-v1 back\n            0, 1,\n            1, 1,\n            1, 0,\n            0, 0\n        ],\n\n        // Indices - these organise the\n        // positions and uv texture coordinates\n        // into geometric primitives in accordance\n        // with the \"primitive\" parameter,\n        // in this case a set of three indices\n        // for each triangle.\n        //\n        // Note that each triangle is specified\n        // in counter-clockwise winding order.\n        //\n        // You can specify them in clockwise\n        // order if you configure the Modes\n        // node's frontFace flag as \"cw\", instead of\n        // the default \"ccw\".\n        indices: [\n            0, 1, 2,\n            0, 2, 3,\n            // front\n            4, 5, 6,\n            4, 6, 7,\n            // right\n            8, 9, 10,\n            8, 10, 11,\n            // top\n            12, 13, 14,\n            12, 14, 15,\n            // left\n            16, 17, 18,\n            16, 18, 19,\n            // bottom\n            20, 21, 22,\n            20, 22, 23\n        ]\n    });\n}\n\nexport {buildBoxGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates a box-shaped lines {@link Geometry}.\n *\n * ## Usage\n *\n * In the example below we'll create a {@link Mesh} with a box-shaped {@link ReadableGeometry} that has lines primitives.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildBoxLinesGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildBoxLinesGeometry, ReadableGeometry, PhongMaterial} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *         canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildBoxLinesGeometry({\n *         center: [0,0,0],\n *         xSize: 1,  // Half-size on each axis\n *         ySize: 1,\n *         zSize: 1\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         emissive: [0,1,0]\n *      })\n * });\n * ````\n *\n * @function buildBoxLinesGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.xSize=1.0]  Half-size on the X-axis.\n * @param [cfg.ySize=1.0]  Half-size on the Y-axis.\n * @param [cfg.zSize=1.0]  Half-size on the Z-axis.\n * @returns {Object} Configuration for a {@link Geometry} subtype.\n */\nfunction buildBoxLinesGeometry(cfg: {\n    center?: (number[] | Float32Array | Float64Array),\n    ySize?: number,\n    xSize?: number,\n    zSize?: number\n} = {\n    center: [0, 0, 0],\n    xSize: 1,\n    ySize: 1,\n    zSize: 1\n}): GeometryArrays {\n\n    let xSize = cfg.xSize || 1;\n    if (xSize < 0) {\n        console.error(\"negative xSize not allowed - will invert\");\n        xSize *= -1;\n    }\n\n    let ySize = cfg.ySize || 1;\n    if (ySize < 0) {\n        console.error(\"negative ySize not allowed - will invert\");\n        ySize *= -1;\n    }\n\n    let zSize = cfg.zSize || 1;\n    if (zSize < 0) {\n        console.error(\"negative zSize not allowed - will invert\");\n        zSize *= -1;\n    }\n\n    const center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const xmin = -xSize + centerX;\n    const ymin = -ySize + centerY;\n    const zmin = -zSize + centerZ;\n    const xmax = xSize + centerX;\n    const ymax = ySize + centerY;\n    const zmax = zSize + centerZ;\n\n    return utils.apply(cfg, {\n        primitive: \"lines\",\n        positions: [\n            xmin, ymin, zmin,\n            xmin, ymin, zmax,\n            xmin, ymax, zmin,\n            xmin, ymax, zmax,\n            xmax, ymin, zmin,\n            xmax, ymin, zmax,\n            xmax, ymax, zmin,\n            xmax, ymax, zmax\n        ],\n        indices: [\n            0, 1,\n            1, 3,\n            3, 2,\n            2, 0,\n            4, 5,\n            5, 7,\n            7, 6,\n            6, 4,\n            0, 4,\n            1, 5,\n            2, 6,\n            3, 7\n        ]\n    });\n}\n\nexport {buildBoxLinesGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates a cylinder-shaped {@link GeometryBucketHandle}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a cylinder-shaped {@link GeometryBucketHandle} :\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildCylinderGeometry)]\n *\n * ````javascript\n *\n * import {WebViewer, Mesh, buildCylinderGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n *  });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildCylinderGeometry({\n *          center: [0,0,0],\n *          radiusTop: 2.0,\n *          radiusBottom: 2.0,\n *          height: 5.0,\n *          radialSegments: 20,\n *          heightSegments: 1,\n *          openEnded: false\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildCylinderGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID for the {@link GeometryBucketHandle}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.radiusTop=1]  Radius of top.\n * @param [cfg.radiusBottom=1]  Radius of bottom.\n * @param [cfg.height=1] Height.\n * @param [cfg.radialSegments=60]  Number of horizontal segments.\n * @param [cfg.heightSegments=1]  Number of vertical segments.\n * @param [cfg.openEnded=false]  Whether or not the cylinder has solid caps on the ends.\n * @returns {Object} Configuration for a {@link GeometryBucketHandle} subtype.\n */\nfunction buildCylinderGeometry(cfg: {\n    radiusBottom: number;\n    center: (number[] | Float32Array | Float64Array);\n    radialSegments: number;\n    heightSegments: number;\n    openEnded: boolean;\n    radiusTop: number;\n    height: number\n} = {\n    radiusTop: 0,\n    radiusBottom: 0,\n    height: 0,\n    radialSegments: 0,\n    heightSegments: 0,\n    openEnded: false,\n    center: [0, 0, 0]\n}): GeometryArrays  {\n\n    let radiusTop = cfg.radiusTop || 1;\n    if (radiusTop < 0) {\n        console.error(\"negative radiusTop not allowed - will invert\");\n        radiusTop *= -1;\n    }\n\n    let radiusBottom = cfg.radiusBottom || 1;\n    if (radiusBottom < 0) {\n        console.error(\"negative radiusBottom not allowed - will invert\");\n        radiusBottom *= -1;\n    }\n\n    let height = cfg.height || 1;\n    if (height < 0) {\n        console.error(\"negative height not allowed - will invert\");\n        height *= -1;\n    }\n\n    let radialSegments = cfg.radialSegments || 32;\n    if (radialSegments < 0) {\n        console.error(\"negative radialSegments not allowed - will invert\");\n        radialSegments *= -1;\n    }\n    if (radialSegments < 3) {\n        radialSegments = 3;\n    }\n\n    let heightSegments = cfg.heightSegments || 1;\n    if (heightSegments < 0) {\n        console.error(\"negative heightSegments not allowed - will invert\");\n        heightSegments *= -1;\n    }\n    if (heightSegments < 1) {\n        heightSegments = 1;\n    }\n\n    const openEnded = cfg.openEnded;\n\n    let center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const heightHalf = height / 2;\n    const heightLength = height / heightSegments;\n    const radialAngle = (2.0 * Math.PI / radialSegments);\n    const radialLength = 1.0 / radialSegments;\n    //var nextRadius = this._radiusBottom;\n    const radiusChange = (radiusTop - radiusBottom) / heightSegments;\n\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    let h;\n    let i;\n\n    let x;\n    let z;\n\n    let currentRadius;\n    let currentHeight;\n\n    let first;\n    let second;\n\n    let startIndex;\n    let tu;\n    let tv;\n\n    // create vertices\n    const normalY = (90.0 - (Math.atan(height / (radiusBottom - radiusTop))) * 180 / Math.PI) / 90.0;\n\n    for (h = 0; h <= heightSegments; h++) {\n        currentRadius = radiusTop - h * radiusChange;\n        currentHeight = heightHalf - h * heightLength;\n\n        for (i = 0; i <= radialSegments; i++) {\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n\n            normals.push(currentRadius * x);\n            normals.push(normalY); //todo\n            normals.push(currentRadius * z);\n\n            uvs.push((i * radialLength));\n            uvs.push(h * 1 / heightSegments);\n\n            positions.push((currentRadius * x) + centerX);\n            positions.push((currentHeight) + centerY);\n            positions.push((currentRadius * z) + centerZ);\n        }\n    }\n\n    // create faces\n    for (h = 0; h < heightSegments; h++) {\n        for (i = 0; i <= radialSegments; i++) {\n\n            first = h * (radialSegments + 1) + i;\n            second = first + radialSegments;\n\n            indices.push(first);\n            indices.push(second);\n            indices.push(second + 1);\n\n            indices.push(first);\n            indices.push(second + 1);\n            indices.push(first + 1);\n        }\n    }\n\n    // create top cap\n    if (!openEnded && radiusTop > 0) {\n        startIndex = (positions.length / 3);\n\n        // top center\n        normals.push(0.0);\n        normals.push(1.0);\n        normals.push(0.0);\n\n        uvs.push(0.5);\n        uvs.push(0.5);\n\n        positions.push(0 + centerX);\n        positions.push(heightHalf + centerY);\n        positions.push(0 + centerZ);\n\n        // top triangle fan\n        for (i = 0; i <= radialSegments; i++) {\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n            tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;\n            tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;\n\n            normals.push(radiusTop * x);\n            normals.push(1.0);\n            normals.push(radiusTop * z);\n\n            uvs.push(tu);\n            uvs.push(tv);\n\n            positions.push((radiusTop * x) + centerX);\n            positions.push((heightHalf) + centerY);\n            positions.push((radiusTop * z) + centerZ);\n        }\n\n        for (i = 0; i < radialSegments; i++) {\n            first = startIndex + 1 + i;\n\n            indices.push(first);\n            indices.push(first + 1);\n            indices.push(startIndex);\n        }\n    }\n\n    // create bottom cap\n    if (!openEnded && radiusBottom > 0) {\n\n        startIndex = (positions.length / 3);\n\n        // top center\n        normals.push(0.0);\n        normals.push(-1.0);\n        normals.push(0.0);\n\n        uvs.push(0.5);\n        uvs.push(0.5);\n\n        positions.push(0 + centerX);\n        positions.push(0 - heightHalf + centerY);\n        positions.push(0 + centerZ);\n\n        // top triangle fan\n        for (i = 0; i <= radialSegments; i++) {\n\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n\n            tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;\n            tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;\n\n            normals.push(radiusBottom * x);\n            normals.push(-1.0);\n            normals.push(radiusBottom * z);\n\n            uvs.push(tu);\n            uvs.push(tv);\n\n            positions.push((radiusBottom * x) + centerX);\n            positions.push((0 - heightHalf) + centerY);\n            positions.push((radiusBottom * z) + centerZ);\n        }\n\n        for (i = 0; i < radialSegments; i++) {\n            first = startIndex + 1 + i;\n            indices.push(startIndex);\n            indices.push(first + 1);\n            indices.push(first);\n        }\n    }\n\n    return utils.apply(cfg, {\n        positions: positions,\n        normals: normals,\n        uv: uvs,\n        indices: indices\n    });\n}\n\n\nexport {buildCylinderGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates a grid-shaped {@link GeometryBucketHandle}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a GridGeometry and a {@link PhongMaterial}:\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildGridGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildGridGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new GeometryBucketHandle(viewer.scene, buildGridGeometry({\n *          size: 1000,\n *          divisions: 500\n *      })),\n *      material: new PhongMaterial(viewer.scene, {\n *          color: [0.0, 0.0, 0.0],\n *          emissive: [0.4, 0.4, 0.4]\n *      }),\n *      position: [0, -1.6, 0]\n * });\n * ````\n *\n * @function buildGridGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID for the {@link GeometryBucketHandle}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.size=1] Dimension on the X and Z-axis.\n * @param [cfg.divisions=1] Number of divisions on X and Z axis..\n * @returns {Object} Configuration for a {@link GeometryBucketHandle} subtype.\n */\nfunction buildGridGeometry(cfg = {\n    size: 1,\n    divisions: 1\n}): GeometryArrays  {\n\n    let size = cfg.size || 1;\n    if (size < 0) {\n        console.error(\"negative size not allowed - will invert\");\n        size *= -1;\n    }\n\n    let divisions = cfg.divisions || 1;\n    if (divisions < 0) {\n        console.error(\"negative divisions not allowed - will invert\");\n        divisions *= -1;\n    }\n    if (divisions < 1) {\n        divisions = 1;\n    }\n\n    size = size || 10;\n    divisions = divisions || 10;\n\n    const step = size / divisions;\n    const halfSize = size / 2;\n\n    const positions = [];\n    const indices = [];\n    let l = 0;\n\n    for (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\n        positions.push(-halfSize);\n        positions.push(0);\n        positions.push(k);\n\n        positions.push(halfSize);\n        positions.push(0);\n        positions.push(k);\n\n        positions.push(k);\n        positions.push(0);\n        positions.push(-halfSize);\n\n        positions.push(k);\n        positions.push(0);\n        positions.push(halfSize);\n\n        indices.push(l++);\n        indices.push(l++);\n        indices.push(l++);\n        indices.push(l++);\n    }\n\n    return utils.apply(cfg, {\n        primitive: \"lines\",\n        positions: positions,\n        indices: indices\n    });\n}\n\n\nexport {buildGridGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates a plane-shaped {@link GeometryBucketHandle}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a PlaneGeometry and a {@link PhongMaterial} with diffuse {@link Texture}:\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildPlaneGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildPlaneGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n\n * new Mesh(viewer.scene, {\n *      geometry: new GeometryBucketHandle(viewer.scene, buildPlaneGeometry({\n *          center: [0,0,0],\n *          xSize: 2,\n *          zSize: 2,\n *          xSegments: 10,\n *          zSegments: 10\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          })\n *      })\n *  });\n * ````\n *\n * @function buildPlaneGeometry\n * @param cfg Configs\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.id] Optional ID for the {@link GeometryBucketHandle}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.xSize=1] Dimension on the X-axis.\n * @param [cfg.zSize=1] Dimension on the Z-axis.\n * @param [cfg.xSegments=1] Number of segments on the X-axis.\n * @param [cfg.zSegments=1] Number of segments on the Z-axis.\n * @returns {Object} Configuration for a {@link GeometryBucketHandle} subtype.\n */\nfunction buildPlaneGeometry(cfg = {\n    xSize: 0,\n    zSize: 0, xSegments: 1,\n    center: [0, 0, 0]\n\n}): GeometryArrays  {\n\n    let xSize = cfg.xSize || 1;\n    if (xSize < 0) {\n        console.error(\"negative xSize not allowed - will invert\");\n        xSize *= -1;\n    }\n\n    let zSize = cfg.zSize || 1;\n    if (zSize < 0) {\n        console.error(\"negative zSize not allowed - will invert\");\n        zSize *= -1;\n    }\n\n    let xSegments = cfg.xSegments || 1;\n    if (xSegments < 0) {\n        console.error(\"negative xSegments not allowed - will invert\");\n        xSegments *= -1;\n    }\n    if (xSegments < 1) {\n        xSegments = 1;\n    }\n\n    let zSegments = cfg.xSegments || 1;\n    if (zSegments < 0) {\n        console.error(\"negative zSegments not allowed - will invert\");\n        zSegments *= -1;\n    }\n    if (zSegments < 1) {\n        zSegments = 1;\n    }\n\n    const center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const halfWidth = xSize / 2;\n    const halfHeight = zSize / 2;\n\n    const planeX = Math.floor(xSegments) || 1;\n    const planeZ = Math.floor(zSegments) || 1;\n\n    const planeX1 = planeX + 1;\n    const planeZ1 = planeZ + 1;\n\n    const segmentWidth = xSize / planeX;\n    const segmentHeight = zSize / planeZ;\n\n    const positions = new Float32Array(planeX1 * planeZ1 * 3);\n    const normals = new Float32Array(planeX1 * planeZ1 * 3);\n    const uvs = new Float32Array(planeX1 * planeZ1 * 2);\n\n    let offset = 0;\n    let offset2 = 0;\n\n    let iz;\n    let ix;\n    let x;\n    let a;\n    let b;\n    let c;\n    let d;\n\n    for (iz = 0; iz < planeZ1; iz++) {\n\n        const z = iz * segmentHeight - halfHeight;\n\n        for (ix = 0; ix < planeX1; ix++) {\n\n            x = ix * segmentWidth - halfWidth;\n\n            positions[offset] = x + centerX;\n            positions[offset + 1] = centerY;\n            positions[offset + 2] = -z + centerZ;\n\n            normals[offset + 2] = -1;\n\n            uvs[offset2] = (ix) / planeX;\n            uvs[offset2 + 1] = ((planeZ - iz) / planeZ);\n\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n\n    offset = 0;\n\n    const indices = new ((positions.length / 3) > 65535 ? Uint32Array : Uint16Array)(planeX * planeZ * 6);\n\n    for (iz = 0; iz < planeZ; iz++) {\n\n        for (ix = 0; ix < planeX; ix++) {\n\n            a = ix + planeX1 * iz;\n            b = ix + planeX1 * (iz + 1);\n            c = (ix + 1) + planeX1 * (iz + 1);\n            d = (ix + 1) + planeX1 * iz;\n\n            indices[offset] = d;\n            indices[offset + 1] = b;\n            indices[offset + 2] = a;\n\n            indices[offset + 3] = d;\n            indices[offset + 4] = c;\n            indices[offset + 5] = b;\n\n            offset += 6;\n        }\n    }\n\n    return utils.apply(cfg, {\n        positions: positions,\n        normals: normals,\n        uv: uvs,\n        indices: indices\n    });\n}\n\nexport {buildPlaneGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\n\n/**\n * Creates a sphere-shaped {@link GeometryBucketHandle}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a sphere-shaped {@link GeometryBucketHandle} :\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildSphereGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildSphereGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new GeometryBucketHandle(viewer.scene, buildSphereGeometry({\n *          center: [0,0,0],\n *          radius: 1.5,\n *          heightSegments: 60,\n *          widthSegments: 60\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildSphereGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID for the {@link GeometryBucketHandle}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center]  3D point indicating the center position.\n * @param [cfg.radius=1]  Radius.\n * @param [cfg.heightSegments=24] Number of latitudinal bands.\n * @param  {Number} [cfg.widthSegments=18] Number of longitudinal bands.\n * @returns {Object} Configuration for a {@link GeometryBucketHandle} subtype.\n */\nfunction buildSphereGeometry(cfg: {\n    center: number[];\n    heightSegments: number;\n    radius: number;\n    widthSegments: number\n} = {\n    heightSegments: 18,\n    widthSegments: 18,\n    radius: 1,\n    center: [0, 0, 0]\n}) : GeometryArrays {\n\n    const centerX = cfg.center ? cfg.center[0] : 0;\n    const centerY = cfg.center ? cfg.center[1] : 0;\n    const centerZ = cfg.center ? cfg.center[2] : 0;\n\n    let radius = cfg.radius || 1;\n    if (radius < 0) {\n        console.error(\"negative radius not allowed - will invert\");\n        radius *= -1;\n    }\n\n    let heightSegments = cfg.heightSegments || 18;\n    if (heightSegments < 0) {\n        console.error(\"negative heightSegments not allowed - will invert\");\n        heightSegments *= -1;\n    }\n    heightSegments = Math.floor(heightSegments);\n    if (heightSegments < 18) {\n        heightSegments = 18;\n    }\n\n    let widthSegments = cfg.widthSegments || 18;\n    if (widthSegments < 0) {\n        console.error(\"negative widthSegments not allowed - will invert\");\n        widthSegments *= -1;\n    }\n    widthSegments = Math.floor(widthSegments);\n    if (widthSegments < 18) {\n        widthSegments = 18;\n    }\n\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    let i;\n    let j;\n\n    let theta;\n    let sinTheta;\n    let cosTheta;\n\n    let phi;\n    let sinPhi;\n    let cosPhi;\n\n    let x;\n    let y;\n    let z;\n\n    let u;\n    let v;\n\n    let first;\n    let second;\n\n    for (i = 0; i <= heightSegments; i++) {\n\n        theta = i * Math.PI / heightSegments;\n        sinTheta = Math.sin(theta);\n        cosTheta = Math.cos(theta);\n\n        for (j = 0; j <= widthSegments; j++) {\n\n            phi = j * 2 * Math.PI / widthSegments;\n            sinPhi = Math.sin(phi);\n            cosPhi = Math.cos(phi);\n\n            x = cosPhi * sinTheta;\n            y = cosTheta;\n            z = sinPhi * sinTheta;\n            u = 1.0 - j / widthSegments;\n            v = i / heightSegments;\n\n            normals.push(x);\n            normals.push(y);\n            normals.push(z);\n\n            uvs.push(u);\n            uvs.push(v);\n\n            positions.push(centerX + radius * x);\n            positions.push(centerY + radius * y);\n            positions.push(centerZ + radius * z);\n        }\n    }\n\n    for (i = 0; i < heightSegments; i++) {\n        for (j = 0; j < widthSegments; j++) {\n\n            first = (i * (widthSegments + 1)) + j;\n            second = first + widthSegments + 1;\n\n            indices.push(first + 1);\n            indices.push(second + 1);\n            indices.push(second);\n            indices.push(first + 1);\n            indices.push(second);\n            indices.push(first);\n        }\n    }\n\n    return utils.apply(cfg, {\n        positions: positions,\n        normals: normals,\n        uv: uvs,\n        indices: indices\n    });\n}\n\nexport {buildSphereGeometry};\n","import * as utils from '../../utils/index';\nimport type {GeometryArrays} from \"./GeometryArrays\";\nimport {normalizeVec3, subVec3} from \"../vector\";\n\n/**\n * Creates a torus-shaped {@link GeometryBucketHandle}.\n *\n * ## Usage\n * Creating a {@link Mesh} with a torus-shaped {@link GeometryBucketHandle} :\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildTorusGeometry)]\n *\n * ````javascript\n * import {WebViewer, Mesh, buildTorusGeometry, GeometryBucketHandle, PhongMaterial, Texture} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new GeometryBucketHandle(viewer.scene, buildTorusGeometry({\n *          center: [0,0,0],\n *          radius: 1.0,\n *          tube: 0.5,\n *          radialSegments: 32,\n *          tubeSegments: 24,\n *          arc: Math.PI * 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildTorusGeometry\n * @param cfg Configs\n * @param [cfg.id] Optional ID for the {@link GeometryBucketHandle}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param [cfg.center] 3D point indicating the center position.\n * @param [cfg.radius=1] The overall radius.\n * @param [cfg.tube=0.3] The tube radius.\n * @param [cfg.radialSegments=32] The number of radial segments.\n * @param [cfg.tubeSegments=24] The number of tubular segments.\n * @param [cfg.arc=Math.PI*0.5] The length of the arc in radians, where Math.PI*2 is a closed torus.\n * @returns {Object} Configuration for a {@link GeometryBucketHandle} subtype.\n */\nfunction buildTorusGeometry(cfg: {\n    tube?: number;\n    arc?: number;\n    center?: number[];\n    radialSegments?: number;\n    radius?: number;\n    tubeSegments?: number\n} = {\n    radius: 0,\n    tube: 0,\n    radialSegments: 0,\n    tubeSegments: 0,\n    arc: 0,\n    center: [0, 0, 0]\n}) : GeometryArrays {\n\n    let radius = cfg.radius || 1;\n    if (radius < 0) {\n        console.error(\"negative radius not allowed - will invert\");\n        radius *= -1;\n    }\n    radius *= 0.5;\n\n    let tube = cfg.tube || 0.3;\n    if (tube < 0) {\n        console.error(\"negative tube not allowed - will invert\");\n        tube *= -1;\n    }\n\n    let radialSegments = cfg.radialSegments || 32;\n    if (radialSegments < 0) {\n        console.error(\"negative radialSegments not allowed - will invert\");\n        radialSegments *= -1;\n    }\n    if (radialSegments < 4) {\n        radialSegments = 4;\n    }\n\n    let tubeSegments = cfg.tubeSegments || 24;\n    if (tubeSegments < 0) {\n        console.error(\"negative tubeSegments not allowed - will invert\");\n        tubeSegments *= -1;\n    }\n    if (tubeSegments < 4) {\n        tubeSegments = 4;\n    }\n\n    let arc = cfg.arc || Math.PI * 2;\n    if (arc < 0) {\n        console.warn(\"negative arc not allowed - will invert\");\n        arc *= -1;\n    }\n    if (arc > 360) {\n        arc = 360;\n    }\n\n    const center = cfg.center;\n    let centerX = center ? center[0] : 0;\n    let centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    let u;\n    let v;\n    let x;\n    let y;\n    let z;\n    let vec;\n\n    let i;\n    let j;\n\n    for (j = 0; j <= tubeSegments; j++) {\n        for (i = 0; i <= radialSegments; i++) {\n\n            u = i / radialSegments * arc;\n            v = 0.785398 + (j / tubeSegments * Math.PI * 2);\n\n            centerX = radius * Math.cos(u);\n            centerY = radius * Math.sin(u);\n\n            x = (radius + tube * Math.cos(v)) * Math.cos(u);\n            y = (radius + tube * Math.cos(v)) * Math.sin(u);\n            z = tube * Math.sin(v);\n\n            positions.push(x + centerX);\n            positions.push(y + centerY);\n            positions.push(z + centerZ);\n\n            uvs.push(1 - (i / radialSegments));\n            uvs.push((j / tubeSegments));\n\n            vec = normalizeVec3(subVec3([x, y, z], [centerX, centerY, centerZ], []), []);\n\n            normals.push(vec[0]);\n            normals.push(vec[1]);\n            normals.push(vec[2]);\n        }\n    }\n\n    let a;\n    let b;\n    let c;\n    let d;\n\n    for (j = 1; j <= tubeSegments; j++) {\n        for (i = 1; i <= radialSegments; i++) {\n\n            a = (radialSegments + 1) * j + i - 1;\n            b = (radialSegments + 1) * (j - 1) + i - 1;\n            c = (radialSegments + 1) * (j - 1) + i;\n            d = (radialSegments + 1) * j + i;\n\n            indices.push(a);\n            indices.push(b);\n            indices.push(c);\n\n            indices.push(c);\n            indices.push(d);\n            indices.push(a);\n        }\n    }\n\n    return utils.apply(cfg, {\n        positions: positions,\n        normals: normals,\n        uv: uvs,\n        indices: indices\n    });\n}\n\nexport {buildTorusGeometry};\n","export function tangentQuadraticBezier(t: number, p0: number, p1: number, p2: number): number {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n}\n\nexport function tangentQuadraticBezier3(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    return -3 * p0 * (1 - t) * (1 - t) +\n        3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\n        6 * t * p2 * (1 - t) - 3 * t * t * p2 +\n        3 * t * t * p3;\n}\n\nexport function tangentSpline(t: number) {\n    const h00 = 6 * t * t - 6 * t;\n    const h10 = 3 * t * t - 4 * t + 1;\n    const h01 = -6 * t * t + 6 * t;\n    const h11 = 3 * t * t - 2 * t;\n    return h00 + h10 + h01 + h11;\n}\n\nexport function catmullRomInterpolate(p0: number, p1: number, p2: number, p3: number, t: number): number {\n    const v0 = (p2 - p0) * 0.5;\n    const v1 = (p3 - p1) * 0.5;\n    const t2 = t * t;\n    const t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\n// Bezier Curve formulii from http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n// Quad Bezier Functions\n\nexport function b2p0(t: number, p: number): number {\n    const k = 1 - t;\n    return k * k * p;\n\n}\n\nexport function b2p1(t: number, p: number): number {\n    return 2 * (1 - t) * t * p;\n}\n\nexport function b2p2(t: number, p: number): number {\n    return t * t * p;\n}\n\nexport function b2(this: any, t: number, p0: number, p1: number, p2: number): number {\n    return this.b2p0(t, p0) + this.b2p1(t, p1) + this.b2p2(t, p2);\n}\n\n// Cubic Bezier Functions\n\nexport function b3p0(t: number, p: number): number {\n    const k = 1 - t;\n    return k * k * k * p;\n}\n\nexport function b3p1(t: number, p: number): number {\n    const k = 1 - t;\n    return 3 * k * k * t * p;\n}\n\nexport function b3p2(t: number, p: number): number {\n    const k = 1 - t;\n    return 3 * k * t * t * p;\n}\n\nexport function b3p3(t: number, p: number) {\n    return t * t * t * p;\n}\n\nexport function b3(this: any, t: number, p0: number, p1: number, p2: number, p3: number) {\n    return this.b3p0(t, p0) + this.b3p1(t, p1) + this.b3p2(t, p2) + this.b3p3(t, p3);\n}","import * as utils from './utils/index';\nimport {stats} from './stats';\nimport type {WebViewer} from \"./WebViewer\";\nimport {Map} from \"./utils/Map\";\n\nexport interface TickEvent {\n    viewerId: string;\n    time: number;\n    startTime: number;\n    prevTime: number;\n    deltaTime: number;\n}\n\nconst tickEvent: TickEvent = {\n    viewerId: \"\",\n    time: 0,\n    startTime: 0,\n    prevTime: 0,\n    deltaTime: 0\n};\n\nclass Scheduler {\n\n    public readonly viewers: { [key: string]: WebViewer };\n\n    #viewersRenderInfo: { [key: string]: any } = {};\n\n    // @ts-ignore\n    #viewerIDMap: Map = new Map(); // Ensures unique viewer IDs\n    #taskQueue: utils.Queue = new utils.Queue(); // Task queue, which is pumped on each frame; tasks are pushed to it with calls to xeokit.schedule\n    #taskBudget: number = 10; // Millisecs we're allowed to spend on tasks in each frame\n    #lastTime: number = 0;\n    #elapsedTime: number = 0;\n\n    /**\n     * @private\n     */\n    constructor() {\n\n        this.viewers = {};\n\n        const frame = () => {\n            const time = Date.now();\n            if (this.#lastTime > 0) {\n                this.#elapsedTime = time - this.#lastTime;\n            }\n            this.#runTasks(time);\n            this.#fireTickEvents(time);\n            this.#renderViewers();\n            this.#lastTime = time;\n\n            requestAnimationFrame(frame);\n        };\n\n        requestAnimationFrame(frame);\n    }\n\n    #runTasks(time: number) {\n        const tasksRun = this.#runTasksUntil(time + this.#taskBudget);\n        const tasksScheduled = this.getNumTasks();\n        stats.frame.tasksRun = tasksRun;\n        stats.frame.tasksScheduled = tasksScheduled;\n        stats.frame.tasksBudget = this.#taskBudget;\n    }\n\n    #runTasksUntil(until: number = -1) {\n        let time = (new Date()).getTime();\n        let tasksRun = 0;\n        while (this.#taskQueue.length > 0 && (until < 0 || time < until)) {\n            const callback = this.#taskQueue.shift();\n            const scope = this.#taskQueue.shift();\n            if (scope) {\n                callback.call(scope);\n            } else {\n                callback();\n            }\n            time = (new Date()).getTime();\n            tasksRun++;\n        }\n        return tasksRun;\n    }\n\n    #fireTickEvents(time: number) {\n        tickEvent.time = time;\n        for (let id in scheduler.viewers) {\n            if (this.viewers.hasOwnProperty(id)) {\n                const viewer = this.viewers[id];\n                tickEvent.viewerId = id;\n                tickEvent.startTime = viewer.startTime;\n                tickEvent.deltaTime = tickEvent.prevTime != null ? tickEvent.time - tickEvent.prevTime : 0;\n                viewer.onTick.dispatch(viewer, tickEvent);\n            }\n        }\n        tickEvent.prevTime = time;\n    }\n\n    #renderViewers() {\n        for (let id in this.viewers) {\n            if (this.viewers.hasOwnProperty(id)) {\n                const viewer = this.viewers[id];\n                let renderInfo = this.#viewersRenderInfo[id];\n                if (!renderInfo) {\n                    renderInfo = this.#viewersRenderInfo[id] = {}; // FIXME\n                }\n\n\n                // const ticksPerOcclusionTest = viewer.ticksPerOcclusionTest;\n                // if (renderInfo.ticksPerOcclusionTest !== ticksPerOcclusionTest) {\n                //     renderInfo.ticksPerOcclusionTest = ticksPerOcclusionTest;\n                //     renderInfo.renderCountdown = ticksPerOcclusionTest;\n                // }\n                // if (--viewer.occlusionTestCountdown <= 0) {\n                //     viewer.doOcclusionTest();\n                //     viewer.occlusionTestCountdown = ticksPerOcclusionTest;\n                // }\n                //\n                // ticksPerRender = viewer.ticksPerRender;\n                // if (renderInfo.ticksPerRender !== ticksPerRender) {\n                //     renderInfo.ticksPerRender = ticksPerRender;\n                //     renderInfo.renderCountdown = ticksPerRender;\n                // }\n                // if (--renderInfo.renderCountdown === 0) {\n                    viewer.render({});\n                //     renderInfo.renderCountdown = ticksPerRender;\n                // }\n            }\n        }\n    }\n\n    registerViewer(viewer: WebViewer) {\n        if (viewer.id) {\n            if (this.viewers[viewer.id]) {\n                console.error(`[ERROR] WebViewer ${utils.inQuotes(viewer.id)} already exists`);\n                return;\n            }\n        } else { // Auto-generated ID\n            // @ts-ignore\n            // noinspection JSConstantReassignment\n            viewer.id = this.#viewerIDMap.addItem({});\n        }\n        this.viewers[viewer.id] = viewer;\n        // const ticksPerOcclusionTest = viewer.ticksPerOcclusionTest;\n        // const ticksPerRender = viewer.ticksPerRender;\n        this.#viewersRenderInfo[viewer.id] = {\n            // ticksPerOcclusionTest: ticksPerOcclusionTest,\n            // ticksPerRender: ticksPerRender,\n            // renderCountdown: ticksPerRender\n        };\n        stats.components.viewers++;\n    }\n\n    deregisterViewer(viewer:WebViewer) {\n        if (!this.viewers[viewer.id]) {\n            return;\n        }\n        this.#viewerIDMap.removeItem(viewer.id);\n        delete this.viewers[viewer.id];\n        delete this.#viewersRenderInfo[viewer.id];\n        stats.components.viewers--;\n    }\n\n    scheduleTask(callback: Function, scope: any) {\n        this.#taskQueue.push(callback);\n        this.#taskQueue.push(scope);\n    }\n\n    getNumTasks() {\n        return this.#taskQueue.length;\n    }\n}\n\nconst scheduler = new Scheduler();\n\nexport {scheduler};","import {scheduler} from \"./scheduler\";\nimport * as utils from './utils/index';\nimport {WebViewer} from \"./WebViewer\";\nimport {EventEmitter} from \"./EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\n/**\n The base class for xeokit {@link WebViewer} components.\n\n ## Summary\n\n - Has logging methods\n - Optionally manages lifecycle of owned Components\n */\nexport class Component {\n\n    /**\n     The WebViewer to which this Component belongs.\n     */\n    public readonly viewer: WebViewer;\n\n    /**\n     ID of this Component, unique within the {@link WebViewer}.\n     */\n    public id: string;\n\n    /**\n     True once this Component has been destroyed.\n\n     Don't use this Component if this is ````true````.\n     */\n    protected destroyed: boolean;\n\n    protected dirty: boolean;\n\n    readonly #owner?: Component;\n\n    #ownedComponents: null | { [key: string]: Component };\n\n    /**\n     * Emits an event when the {@link Component} has been destroyed.\n     *\n     * @event\n     */\n    onDestroyed: EventEmitter<Component, null>;\n\n    /**\n     Creates a new component.\n\n     @param owner - An optional owner component; when the owner is destroyed, this component will be automatically destroyed also.\n     @param cfg - Component configuration\n     @param cfg.id - Optional ID for the component\n     */\n    constructor(owner: null | Component, cfg: { id?: string, [key: string]: any } = {}) {\n        if (this instanceof WebViewer) {\n            this.viewer = this;\n            this.#owner = undefined;\n        } else {\n            if (owner instanceof WebViewer) {\n                this.viewer = owner;\n            } else if (owner instanceof Component) {\n                this.viewer = owner.viewer;\n            } else {\n                throw \"Invalid Component constructor argument: 'owner' must be a Component\"\n            }\n            this.#owner = owner;\n        }\n        this.id = cfg.id || utils.createUUID();\n        this.destroyed = false;\n        this.#ownedComponents = null; // // Components created with #create - lazy-instantiated\n        this.dirty = false; // True when #update will be called on next tick\n        if (owner) {\n            owner.#own(this);\n        }\n        this.onDestroyed = new EventEmitter(new EventDispatcher<Component, null>())\n    }\n\n    /**\n     Logs a console debugging message for this component.\n\n     The console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n\n     Also fires the message as a \"log\" event on the parent {@link WebViewer}.\n\n     @param message - The message to log\n     @protected\n     */\n    log(message: string): void {\n        message = `[LOG] ${this.#prefixMessageWithID(message)}`;\n        window.console.log(message);\n        //  this.viewer.events.fire(\"log\", message);\n    }\n\n    /**\n     Logs a warning for this component to the JavaScript console.\n\n     The console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n\n     Also fires the message as a \"warn\" event on the parent {@link WebViewer}.\n\n     @param message - The warning message to log\n     @protected\n     */\n    warn(message: string): void {\n        message = `[WARN] ${this.#prefixMessageWithID(message)}`;\n        window.console.warn(message);\n        //  this.viewer.events.fire(\"warn\", message);\n    }\n\n    /**\n     Logs an error for this component to the JavaScript console.\n\n     The console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\n     Also fires the message as an \"error\" event on the {@link WebViewer}.\n\n     @param message The error message to log\n     @protected\n     */\n    error(message: string): void {\n        message = `[ERROR] ${this.#prefixMessageWithID(message)}`;\n        window.console.error(message);\n        //   this.viewer.events.fire(\"error\", message);\n    }\n\n    /**\n     @private\n     */\n    cleanIfDirty(): void {\n        if (this.dirty) {\n            this.dirty = false;\n            this.clean();\n        }\n    }\n\n    /**\n     @private\n     */\n    clean(): void {\n    }\n\n    /**\n     Destroys this component.\n\n     Also destroys any components owned by this one.\n\n     Sets {@link Component.destroyed} ````true````.\n\n     @private\n\n     */\n    destroy(): void {\n        if (this.destroyed) {\n            return;\n        }\n        this.onDestroyed.dispatch(this, null);\n        this.onDestroyed.clear();\n        this.destroyed = true;\n        if (this.#ownedComponents) {\n            for (let id in this.#ownedComponents) {\n                if (this.#ownedComponents.hasOwnProperty(id)) {\n                    const component = this.#ownedComponents[id];\n                    component.destroy();\n                    delete this.#ownedComponents[id];\n                }\n            }\n        }\n        this.#ownedComponents = null;\n        this.dirty = false;\n    }\n\n    protected setDirty(): void {\n        if (this.dirty) {\n            return;\n        }\n        scheduler.scheduleTask(this.cleanIfDirty, this);\n        this.dirty = true;\n    }\n\n    #prefixMessageWithID(message: string): string {\n        return ` [${this.constructor.name} \"${utils.inQuotes(this.id)}\"]: ${message}`;\n    }\n\n    #own(component: Component) {\n        if (!this.#ownedComponents) {\n            this.#ownedComponents = {};\n        }\n        if (!this.#ownedComponents[component.id]) {\n            this.#ownedComponents[component.id] = component;\n        }\n        component.onDestroyed.one(() => {\n            // @ts-ignore\n            delete this.#ownedComponents[component.id];\n        });\n    }\n}\n\n\n","import type {FloatArrayParam} from \"../math/math\";\nimport {collapseAABB3} from \"../math/boundaries\";\nimport type {SceneObject} from \"./SceneObject\";\nimport type {SceneModel} from \"./SceneModel\";\nimport type {Tiles} from \"./Tiles\";\n\n/**\n * A tile within the {@link WebViewer}'s relative-to-center (RTC) World-space 3D coordinate system.\n *\n * * Stored in {@link Tiles.tiles}.\n * * Created and destroyed automatically as {@link SceneModel|SceneModels} are created and destroyed.\n */\nexport class Tile {\n\n    /**\n     * ID of this Tile.\n     */\n    public readonly id: string;\n\n    /**\n     * The {@link Tiles} this Tile belongs to.\n     */\n    public readonly tiles: Tiles;\n\n    /**\n     * The 3D World-space center of this tile.\n     */\n    public readonly origin: FloatArrayParam;\n\n    /**\n     * The 3D axis-aligned World-space boundary of this tile.\n     */\n    public readonly aabb: FloatArrayParam;\n\n    /**\n     * The {@link SceneModel|SceneModels} in this tile.\n     */\n    public readonly sceneModels: { [key: string]: SceneModel }\n\n    /**\n     * The {@link SceneObject|SceneObjects} in this tile.\n     */\n    public readonly sceneObjects: { [key: string]: SceneObject }\n\n    /**\n     * The number of {@link SceneObject|SceneObjects} in this tile.\n     */\n    // public numContainedSceneObjects: number;\n    //\n    // public numSceneModels: number;\n\n    public useCount: number;\n\n\n    /**\n     * @private\n     */\n    constructor(tiles: Tiles, id: string, origin: FloatArrayParam) {\n        this.id = id;\n        this.tiles = tiles;\n        this.aabb = collapseAABB3();\n        this.origin = new Float64Array(origin);\n        this.useCount = 0;\n        this.sceneModels = {};\n        this.sceneObjects = {};\n\n    }\n\n    registerSceneObject(sceneObject: SceneObject) {\n        const sceneModel = sceneObject.model;\n        if (!this.sceneModels[sceneModel.id]) {\n            sceneModel.onDestroyed.one( () => {\n                delete this.sceneModels[sceneModel.id];\n              //  this.numSceneModels--;\n            });\n        }\n    }\n\n    release() {\n        this.tiles.putTile(this);\n    }\n}","import type {FloatArrayParam} from \"../math/math\";\nimport {Component} from \"../Component\";\nimport type {Scene} from \"./Scene\";\nimport {Tile} from \"./Tile\";\n\n/**\n * The {@link Tile|Tiles} within a {@link Scene}.\n *\n * * Located at {@link Scene.tiles}\n * * Contains {@link Tile|Tiles}\n */\nclass Tiles extends Component {\n\n    /**\n     * The owner Scene.\n     */\n    readonly scene: Scene;\n\n    /** The {@link Tile|Tiles}.\n     */\n    public readonly tiles: {[key: string]: Tile };\n\n    /**\n     * @private\n     * @param scene\n     */\n    constructor(scene: Scene) {\n        super(scene);\n        this.scene = scene;\n        this.tiles = {};\n    }\n\n    /**\n     * Gets a Tile for the given coordinate origin.\n     *\n     * Make sure to release it with {@link putTile} when you no longer need it.\n     *\n     * @param origin The coordinate origin.\n     * @returns A Tile for the origin.\n     */\n    getTile(origin: FloatArrayParam): Tile {\n        const id = `${origin[0]}-${origin[1]}-${origin[2]}`;\n        let tile = this.tiles[id];\n        if (!tile) {\n            tile = new Tile(this, id, origin);\n            this.tiles[id] = tile;\n        }\n        tile.useCount++;\n        return tile;\n    }\n\n    /**\n     * Releases an RTC view matrix.\n     *\n     * @param tile The RTC view matrix.\n     */\n    putTile(tile: Tile): void {\n        tile.useCount--;\n        if (tile.useCount <= 0) {\n            delete this.tiles[tile.id];\n        }\n    }\n}\n\nexport {Tiles};","import * as math from '../math/index';\n\nimport {Component} from '../Component';\nimport type {WebViewer} from \"../WebViewer\";\nimport type {SceneObject} from \"./SceneObject\";\nimport type {SceneModel} from \"./SceneModel\";\nimport {createUUID} from \"../utils/index\";\nimport type {SceneModelParams} from \"./SceneModelParams\";\nimport {Tiles} from \"./Tiles\";\nimport {EventEmitter} from \"./../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\n/**\n * Contains the geometric representations of the models in a {@link WebViewer}.\n *\n * ## Features\n *\n * * Multiple models\n * * Compressed, double-precision geometry\n * * Triangle, line and point primitives\n * * KTX2 compressed textures\n * * Transform hierarchies\n * * Moveable objects\n * * Object boundary tracking\n * * Physically-based materials\n *\n * ## Quickstart\n *\n * * Located at {@link WebViewer.scene}\n * * Create {@link SceneModel|SceneModels} with {@link Scene.createModel}\n * * Create {@link SceneObject|SceneObjects} with {@link SceneModel.createObject}\n * * Create reusable geometries with {@link SceneModel.createGeometry}\n * * Create reusable textures with {@link SceneModel.createTexture} and {@link SceneModel.createTextureSet}\n * * Create transform hierarchies with {@link SceneModel.createTransform}\n * * Track object boundaries with {@link Scene.aabb}, {@link SceneModel.aabb} and {@link SceneObject.aabb}\n * * When built, be sure to finalize each SceneModel with {@link SceneModel.build}\n * * When no longer needed, be sure to destroy each SceneModel with {@link SceneModel.destroy}\n *\n * <br>\n *\n * ## Examples\n *\n * ### Example 1. Creating a SceneModel from Uncompressed Geometry\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *    id: \"myViewer\"\n * });\n *\n * myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas\"\n * });\n *\n * myViewer.scene.onModelCreated.subscribe((scene, sceneModel)=>{\n *      console.log(`SceneModel ${sceneModel.id} created`);\n * });\n *\n * myViewer.scene.onModelDestroyed.subscribe((scene, sceneModel)=>{\n *      console.log(`SceneModel ${sceneModel.id} destroyed`);\n * });\n *\n * const mySceneModel = myViewer.scene.createModel({\n *    id: \"myModel\"\n * });\n *\n * mySceneModel.createGeometry({\n *     id: \"myBoxGeometry\",\n *     primitive: constants.TrianglesPrimitive,\n *     positions: [\n *         1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1\n *     ],\n *     indices: [\n *         0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n *     ]\n * });\n *\n * mySceneModel.createMesh({\n *    id: \"myMesh\",\n *    geometryId: \"myGeometry\"\n * });\n *\n * mySceneModel.createObject({\n *    id: \"myObject\",\n *    meshIds: [\"myMesh\"]\n * });\n *\n * mySceneModel.build();\n * ````\n *\n * ### Example 2. Creating a SceneModel from Pre-Compressed Geometry\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *    id: \"myViewer\"\n * });\n *\n * myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas\"\n * });\n *\n * const mySceneModel = myViewer.scene.createModel({\n *    id: \"myModel\"\n * });\n *\n * mySceneModel.createGeometryCompressed({\n *      id: \"myBoxGeometry\",\n *      primitive: constants.TrianglesPrimitive,\n *      positionsDecompressMatrix: [\n *          0.00003052270125906143, 0, 0, 0,\n *          0, 0.00003052270125906143, 0, 0,\n *          0, 0, 0.00003052270125906143, 0,\n *          -1, -1, -1, 1\n *      ],\n *      geometryBuckets: [\n *          {\n *              positionsCompressed: [\n *                  65525, 65525, 65525, 0, 65525, 65525, 0, 0, 65525, 65525, 0, 65525, 65525, 0, 0, 65525, 65525, 0, 0, 65525, 0, 0, 0, 0\n *              ],\n *              indices: [\n *                  0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6, 0, 6, 1, 1, 6, 7, 1, 7, 2, 7, 4, 3, 7, 3, 2, 4, 7, 6, 4, 6, 5\n *              ]\n *          }\n *      ]\n * });\n *\n * mySceneModel.createMesh({\n *    id: \"myMesh\",\n *    geometryId: \"myGeometry\"\n * });\n *\n * mySceneModel.createObject({\n *    id: \"myObject\",\n *    meshIds: [\"myMesh\"]\n * });\n *\n * mySceneModel.build();\n * ````\n *\n * ### Example 3. Creating a SceneModel with a JPEG Texture\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *    id: \"myViewer\"\n * });\n *\n * const mySceneModel = myViewer.scene.createModel({\n *    id: \"myModel\"\n * });\n *\n * mySceneModel.createGeometry({\n *     id: \"myBoxGeometry\",\n *     primitive: constants.TrianglesPrimitive,\n *     positions: [\n *         1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1\n *     ],\n *     indices: [\n *         0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n *     ]\n * });\n *\n * mySceneGeometry.createTexture({\n *      id: \"myColorTexture\",\n *      src: \"myColorTexture.jpeg\",\n *      preloadColor: [1,0,0,1],\n *      encoding: constants.LinearEncoding,\n *      flipY: false,\n *      magFilter: constants.LinearFiler,\n *      minFilter: constants.LinearFiler,\n *      wrapR: constants.ClampToEdgeWrapping,\n *      wrapS: constants.ClampToEdgeWrapping,\n *      wrapT: constants.ClampToEdgeWrapping,\n * });\n *\n * mySceneModel.createTextureSet({\n *      id: \"myTextureSet\",\n *      colorTextureId: \"myColorTexture\"\n * });\n *\n * mySceneModel.createMesh({\n *    id: \"myMesh\",\n *    geometryId: \"myGeometry\",\n *    textureSetId: \"myTextureSet\",\n * });\n *\n * mySceneModel.createObject({\n *    id: \"myObject\",\n *    meshIds: [\"myMesh\"]\n * });\n *\n * mySceneModel.build();\n * ````\n */\nexport class Scene extends Component {\n\n    /**\n     * The {@link WebViewer} this Scene belongs to.\n     */\n    declare readonly viewer: WebViewer;\n\n    /**\n     * The {@link Tiles} in this Scene.\n     */\n    readonly tiles: Tiles;\n\n    /**\n     * The {@link SceneModel|SceneModels} in this Scene.\n     */\n    readonly models: { [key: string]: SceneModel };\n\n    /**\n     * The {@link SceneObject|SceneObjects} in this Scene.\n     */\n    readonly objects: { [key: string]: SceneObject };\n\n    /**\n     * Emits an event each time a {@link SceneModel} is created.\n     *\n     * {@link Scene.aabb} and {@link Scene.center} may have updated values after this event.\n     *\n     * @event\n     */\n    readonly onModelCreated: EventEmitter<Scene, SceneModel>;\n\n    /**\n     * Emits an event each time a {@link SceneModel} is destroyed.\n     *\n     * {@link Scene.aabb} and {@link Scene.center} may have updated values after this event.\n     *\n     * @event\n     */\n    readonly onModelDestroyed: EventEmitter<Scene, SceneModel>;\n\n    #center: Float64Array;\n    #aabb: Float64Array;\n    #aabbDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(viewer: WebViewer, params = {}) {\n\n        super(null, params);\n\n        this.#center = math.vec3();\n        this.#aabb = math.boundaries.AABB3();\n        this.#aabbDirty = true;\n\n        this.viewer = viewer;\n        this.tiles = new Tiles(this);\n        this.models = {};\n        this.objects = {};\n\n        this.onModelCreated = new EventEmitter(new EventDispatcher<Scene, SceneModel>());\n        this.onModelDestroyed = new EventEmitter(new EventDispatcher<Scene, SceneModel>());\n    }\n\n    /**\n     * Gets the World-space 3D center of this Scene.\n     */\n    get center(): Float64Array {\n        if (this.#aabbDirty) {\n            const aabb = this.aabb; // Lazy-build\n            this.#center[0] = (aabb[0] + aabb[3]) / 2;\n            this.#center[1] = (aabb[1] + aabb[4]) / 2;\n            this.#center[2] = (aabb[2] + aabb[5]) / 2;\n        }\n        return this.#center;\n    }\n\n    /**\n     * Gets the World-space axis-aligned 3D boundary (AABB) of this Scene.\n     *\n     * The AABB encompases the boundaries of all {@link SceneModel} s currently in {@link Scene.models}, and  is\n     * represented by a six-element Float64Array containing the min/max extents of the axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * When the Scene has no content, the boundary will be an inverted shape, ie. ````[-100,-100,-100,100,100,100]````.\n     */\n    get aabb(): Float64Array {\n        if (this.#aabbDirty) {\n            let xmin = math.MAX_DOUBLE;\n            let ymin = math.MAX_DOUBLE;\n            let zmin = math.MAX_DOUBLE;\n            let xmax = math.MIN_DOUBLE;\n            let ymax = math.MIN_DOUBLE;\n            let zmax = math.MIN_DOUBLE;\n            let aabb;\n            const objects = this.objects;\n            let valid = false;\n            for (const objectId in objects) {\n                if (objects.hasOwnProperty(objectId)) {\n                    const object = objects[objectId];\n                    // if (object.collidable === false) {\n                    //     continue;\n                    // }\n                    aabb = object.aabb;\n                    if (aabb[0] < xmin) {\n                        xmin = aabb[0];\n                    }\n                    if (aabb[1] < ymin) {\n                        ymin = aabb[1];\n                    }\n                    if (aabb[2] < zmin) {\n                        zmin = aabb[2];\n                    }\n                    if (aabb[3] > xmax) {\n                        xmax = aabb[3];\n                    }\n                    if (aabb[4] > ymax) {\n                        ymax = aabb[4];\n                    }\n                    if (aabb[5] > zmax) {\n                        zmax = aabb[5];\n                    }\n                    valid = true;\n                }\n            }\n            if (!valid) {\n                xmin = -100;\n                ymin = -100;\n                zmin = -100;\n                xmax = 100;\n                ymax = 100;\n                zmax = 100;\n            }\n            this.#aabb[0] = xmin;\n            this.#aabb[1] = ymin;\n            this.#aabb[2] = zmin;\n            this.#aabb[3] = xmax;\n            this.#aabb[4] = ymax;\n            this.#aabb[5] = zmax;\n            this.#aabbDirty = false;\n        }\n        return this.#aabb;\n    }\n\n    /**\n     * Creates a new {@link SceneModel} within this Scene.\n     *\n     * The SceneModel represents a new model within the Scene and provides an interface through which\n     * we can then build geometry and materials within it.\n     *\n     * When we've finished building our SceneModel, we then call {@link SceneModel.build}, which causes it to\n     * immediately begin rendering within all the {@link View|Views} we created previously with {@link WebViewer.createView}.\n     *\n     * As that happens, each {@link View} automatically gets a {@link ViewObject} for each of the SceneModel's {@link SceneObject|SceneObjects}, to\n     * independently represent that SceneObject's visual state in that View.\n     *\n     * When we've finished with the SceneModel, we destroy it using {@link SceneModel.destroy}. That will automatically remove its\n     * ViewObjects from all our existing Views.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const mySceneModel = myViewer.scene.createModel({\n     *    id: \"myModel\"\n     * });\n     * ````\n     *\n     * @param params SceneModel configuration\n     */\n    createModel(params: SceneModelParams): SceneModel | undefined {\n        this.log(`Creating SceneModel : ${params.id}`);\n        if (this.viewer.viewList.length === 0) {\n            throw \"Please create a View with WebViewer.createView() before creating a SceneModel\";\n        }\n        params.id = params.id || createUUID();\n        if (this.models[params.id]) {\n            this.error(`SceneModel with this ID already exists, or is under construction: \"${params.id}\"`);\n            return;\n        }\n        const sceneModel = this.viewer.renderer.createModel(params);\n        this.models[sceneModel.id] = sceneModel;\n        sceneModel.onBuilt.one(() => {\n            this.#registerSceneObjects(sceneModel);\n            this.onModelCreated.dispatch(this, sceneModel);\n        });\n        sceneModel.onDestroyed.one(() => {\n            delete this.models[sceneModel.id];\n            this.#deregisterSceneObjects(sceneModel);\n            this.onModelDestroyed.dispatch(this, sceneModel);\n        });\n        return sceneModel;\n    }\n\n    /**\n     * Destroys all {@link SceneModel|SceneModels} in this Scene.\n     *\n     * This invalidates all SceneModels created previously with {@link Scene.createModel}.\n     */\n    clear() {\n        for (let id in this.models) {\n            this.models[id].destroy();\n        }\n    }\n\n    /**\n     * @private\n     */\n    setAABBDirty() {\n        if (!this.#aabbDirty) {\n            this.#aabbDirty = true;\n            //this.events.fire(\"aabb\", true);\n        }\n    }\n\n    #registerSceneObjects(sceneModel: SceneModel) {\n        const objects = sceneModel.objects;\n        for (let id in objects) {\n            const sceneObject = objects[id];\n            this.objects[sceneObject.id] = sceneObject;\n        }\n        this.#aabbDirty = true;\n    }\n\n    #deregisterSceneObjects(sceneModel: SceneModel) {\n        const objects = sceneModel.objects;\n        for (let id in objects) {\n            const sceneObject = objects[id];\n            delete this.objects[sceneObject.id];\n        }\n        this.#aabbDirty = true;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        for (const modelId in this.models) {\n            if (this.models.hasOwnProperty(modelId)) {\n                const sceneModel = this.models[modelId];\n                sceneModel.destroy();\n            }\n        }\n        super.destroy();\n        this.onModelCreated.clear();\n        this.onModelDestroyed.clear();\n    }\n}\n\n\n","import {Component} from \"../Component\";\nimport type {SceneModel} from \"./SceneModel\";\n\n/**\n * A transformation within a {@link SceneModel}.\n *\n * * Created with {@link SceneModel.createTransform}\n */\nexport class Transform {\n\n    constructor(params: { sceneModel: SceneModel, parent?: Transform }) {\n     //   super(params.sceneModel);\n    }\n}","import type {PropertySet} from \"./PropertySet\";\nimport type {PropertyParams} from \"./PropertyParams\";\n\n/**\n * A property in a {@link PropertySet}.\n *\n * See {@link Data} for usage examples.\n *\n * ## Summary\n *\n * * Belongs to a {@link PropertySet}\n * * Registered by {@link Property.id} in {@link PropertySet.properties}\n * * Created with {@link PropertySet.createProperty}\n */\nclass Property {\n\n    /**\n     * The PropertySet to which this Property belongs.\n     */\n    public readonly propertySet: PropertySet;\n\n    /**\n     * The name of this property.\n     */\n    public readonly name: string;\n\n    /**\n     * The value of this property.\n     */\n    public readonly value: any;\n\n    /**\n     * The type of this property.\n     */\n    public readonly type?: string | number;\n\n    /**\n     * The type of this property's value.\n     */\n    public readonly valueType?: string | number;\n\n    /**\n     * Informative text to explain the property.\n     */\n    public readonly description?: string;\n\n    /**\n     * @private\n     * @ignore\n     */\n    constructor(\n        propertySet: PropertySet,\n        propertyCfg: PropertyParams) {\n        this.propertySet = propertySet;\n        this.name = propertyCfg.name;\n        this.type = propertyCfg.type\n        this.value = propertyCfg.value\n        this.valueType = propertyCfg.valueType;\n        this.description = propertyCfg.description;\n    }\n}\n\nexport {Property};","import {Property} from \"./Property\";\nimport type {DataModel} from \"./DataModel\";\nimport type {PropertyParams} from \"./PropertyParams\";\nimport type {PropertySetParams} from \"./PropertySetParams\";\n\n/**\n * A set of {@link Property|Properties} in a {@link DataModel}.\n *\n * See {@link Data} for usage examples.\n *\n * ## Summary\n *\n * * Belongs to a {@link DataModel}\n * * Registered by {@link PropertySet.id} in {@link DataModel.propertySets}\n * * Created with {@link Data.createPropertySet} or {@link DataModel.createPropertySet}\n * * Has {@link Property} components in {@link PropertySet.properties}\n */\nclass PropertySet {\n\n    /**\n     * The DataModel to which this PropertySet belongs.\n     */\n    public readonly dataModel: DataModel;\n\n    /**\n     * Unique ID.\n     *\n     * PropertySet instances are registered by this ID in {@link Data#propertySets} and {@link DataModel#propertySets}.\n     */\n    public readonly id: string;\n\n    /**\n     * ID of the corresponding object within the originating system, if any.\n     */\n    public readonly originalSystemId?: string;\n\n    /**\n     * Human-readable name of this PropertySet.\n     */\n    public readonly name: string;\n\n    /**\n     * Type of this PropertySet.\n     */\n    public readonly type: string;\n\n    /**\n     * Properties within this PropertySet.\n     */\n    public readonly properties: Property[];\n\n    /**\n     * @private\n     * @ignore\n     */\n    constructor(\n        dataModel: DataModel,\n        propertySetCfg: PropertySetParams) {\n        this.dataModel = dataModel;\n        this.id = propertySetCfg.id;\n        this.originalSystemId = propertySetCfg.originalSystemId;\n        this.name = propertySetCfg.name;\n        this.type = propertySetCfg.type;\n        this.properties = [];\n        if (propertySetCfg.properties) {\n            for (let i = 0, len = propertySetCfg.properties.length; i < len; i++) {\n                this.createProperty(propertySetCfg.properties[i]);\n            }\n        }\n    }\n\n    /**\n     * Creates a Property within this PropertySet.\n     * @param propertyCfg\n     */\n    createProperty(propertyCfg: PropertyParams): Property {\n        const property = new Property(this, propertyCfg);\n        this.properties.push(property);\n        return property;\n    }\n}\n\nexport {PropertySet};","import type {DataObject} from \"./DataObject\";\n\n/**\n * A one-to-one relationship between two {@link DataObject|DataObjects}.\n *\n * See {@link Data} for usage examples.\n *\n * ## Summary\n *\n * * {@link Relationship.type} indicates the type of the relationship\n * * {@link Relationship.relating} the relating DataObject\n * * {@link Relationship.related} the related DataObject\n */\nexport class Relationship {\n\n    /**\n     * The type of this Relationship.\n     *\n     * This can be any value that identifies the Relationship type within your DataModel.\n     */\n    readonly type: number;\n\n    /**\n     * The relating {@link DataObject} in this Relationship.\n     *\n     * This Relationship will be stored by {@link DataObject.type} in the DataObject's {@link DataObject.related} attribute.\n     */\n    readonly relating: DataObject;\n\n    /**\n     * The related {@link DataObject} in this Relationship.\n     *\n     * This Relationship will be stored by {@link DataObject.type} in the DataObject's {@link DataObject.relating} attribute.\n     */\n    readonly related: DataObject;\n\n    /**\n     * @private\n     * @ignore\n     */\n    constructor(type: number, relating: DataObject, related: DataObject) {\n        this.type = type;\n        this.relating = relating;\n        this.related = related;\n    }\n}\n","import type {PropertySet} from \"./PropertySet\";\nimport type {DataModel} from \"./DataModel\";\nimport {Relationship} from \"./Relationship\";\n\n/**\n *  An object in a {@link DataModel}.\n *\n *  See {@link Data} for usage examples.\n *\n *  ## Summary\n *\n *  * Created with {@link DataModel.createObject}\n *  * Stored in {@link Data.objects} and {@link DataModel.objects}\n */\nexport class DataObject {\n\n    /**\n     * Model metadata.\n     */\n    public models: DataModel[];\n\n    /**\n     * Globally-unique ID.\n     *\n     * DataObjects are stored by ID in {@link Data.objects} and {@link DataModel.objects}.\n     */\n    public readonly id: string;\n\n    /**\n     * Human-readable name.\n     */\n    public readonly name?: string;\n\n    /**\n     * DataObject's type.\n     */\n    public readonly type: number;\n\n    /**\n     * {@link PropertySet|PropertySets} used by this DataObject.\n     */\n    public readonly propertySets?: PropertySet[];\n\n    /**\n     * The {@link Relationship|Relations} in which this DataObject is the {@link Relationship.relating} participant.\n     *\n     * Each DataObject is mapped here by {@link Relationship.type} and sub-mapped by {@link Relationship.relating}.\n     */\n    public readonly relating: {\n        [key: number]: Relationship[]\n    };\n\n    /**\n     * The {@link Relationship|Relations} in which this DataObject is the {@link Relationship.related} participant.\n     *\n     * Each DataObject is mapped here by {@link Relationship.type} and sub-mapped by {@link Relationship.related}.\n     */\n    public readonly related: {\n        [key: number]: Relationship[]\n    };\n\n    // /**\n    //  * IDs of one or more {@link SceneObject|SceneObjects} / {@link ViewObject|ViewObjects} that represent this DataObject.\n    //  *\n    //  * Only DataObjects that represent some physical object, such as a wall or a roof, will have a representation.\n    //  */\n    // public readonly representation: string[] | null;\n\n    /**\n     * @private\n     */\n    constructor(\n        model: DataModel,\n        id: string,\n        name: string,\n        type: number,\n        propertySets?: PropertySet[]) {\n\n        this.models = [model];\n        this.id = id;\n        this.name = name;\n        this.type = type;\n        this.propertySets = propertySets || [];\n        this.related = {};\n        this.relating = {};\n    //    this.representation = null;\n    }\n\n    /**\n     * Creates a {@link Relationship} with another {@link DataObject}.\n     *\n     * @param relationType The relationship type\n     * @param relatedObjectId ID of the related DataObject.\n     */\n    createRelation(relationType: number, relatedObjectId: string) {\n        const relatedObject = this.models[0].data.objects[relatedObjectId];\n        if (!relatedObject) {\n            console.error(`[createRelation] DataObject not found: ${relatedObjectId}`);\n            return;\n        }\n        const relation = new Relationship(relationType, this, relatedObject);\n        relatedObject.relating[relationType].push(relation);\n        this.related[relationType].push(relation);\n    }\n}\n","import {Component} from \"../Component\";\nimport type {Data} from \"./Data\";\nimport {PropertySet} from \"./PropertySet\";\nimport {DataObject} from \"./DataObject\";\nimport type {DataModelParams} from \"./DataModelParams\";\nimport type {DataObjectParams} from \"./DataObjectParams\";\nimport type {PropertySetParams} from \"./PropertySetParams\";\nimport {EventEmitter} from \"../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {Relationship} from \"./Relationship\";\nimport type {RelationshipParams} from \"./RelationshipParams\";\n\n/**\n * A buildable entity-relationship semantic data model, stored in {@link Data}.\n *\n * See {@link Data} for usage examples.\n *\n * ## Summary\n *\n *  * A DataModel is a generic entity-relationship graph of {@link DataObject|DataObjects}, {@link PropertySet|PropertySets} and {@link Relationship|Relationships}\n *  * Can be used for IFC and all other schemas that are expressable as an ER graph\n *  * Created with {@link Data.createModel}\n *  * Stored in {@link Data.models}\n *\n */\nclass DataModel extends Component {\n\n    /**\n     * The data to which this DataModel belongs.\n     */\n    public readonly data: Data;\n\n    /**\n     * Unique ID of this DataModel.\n     *\n     * MetaModels are registered by ID in {@link Data.models}.\n     */\n    declare public readonly id: string;\n\n    /**\n     * The project ID, if available.\n     */\n    public readonly projectId?: string | number;\n\n    /**\n     * The revision ID, if available.\n     *\n     * Will be undefined if not available.\n     */\n    public readonly revisionId?: string | number;\n\n    /**\n     * The model author, if available.\n     *\n     * Will be undefined if not available.\n     */\n    public readonly author?: string;\n\n    /**\n     * The date the model was created, if available.\n     *\n     * Will be undefined if not available.\n     */\n    public readonly createdAt?: string;\n\n    /**\n     * The application that created the model, if available.\n     *\n     * Will be undefined if not available.\n     */\n    public readonly creatingApplication?: string;\n\n    /**\n     * The model schema version, if available.\n     *\n     * Will be undefined if not available.\n     */\n    public readonly schema?: string;\n\n    /**\n     * The {@link PropertySet|PropertySets} in this DataModel, mapped to {@link PropertySet.id}.\n     */\n    public readonly propertySets: { [key: string]: PropertySet };\n\n    /**\n     * The root {@link DataObject} in this DataModel's composition hierarchy.\n     */\n    public rootDataObject: null | DataObject;\n\n    /**\n     * The {@link DataObject|DataObjects} in this DataModel, mapped to {@link DataObject.id}.\n     */\n    public objects: { [key: string]: DataObject };\n\n    /**\n     * The root {@link DataObject|DataObjects} in this DataModel, mapped to {@link DataObject.id}.\n     */\n    public rootObjects: { [key: string]: DataObject };\n\n    /**\n     * The {@link DataObject|DataObjects} in this DataModel, mapped to {@link DataObject.type}, sub-mapped to {@link DataObject.id}.\n     */\n    public objectsByType: { [key: string]: { [key: string]: DataObject } };\n\n    /**\n     * The count of each type of {@link DataObject} in this DataModel, mapped to {@link DataObject.type}.\n     */\n    public typeCounts: { [key: string]: number };\n\n    /**\n     * Emits an event when the {@link DataModel} has been built.\n     *\n     * @event\n     */\n    readonly onBuilt: EventEmitter<DataModel, null>;\n\n    #built: boolean;\n    #destroyed: boolean;\n\n    /**\n     * @private\n     */\n    constructor(\n        data: Data,\n        id: string,\n        dataModelParams: DataModelParams,\n        options?: {\n            includeTypes?: string[],\n            excludeTypes?: string[],\n            globalizeObjectIds?: boolean\n        }) {\n\n        super(data);\n\n        this.data = data;\n\n        this.id = id;\n        this.projectId = dataModelParams.projectId || \"\";\n        this.revisionId = dataModelParams.revisionId || \"\";\n        this.author = dataModelParams.author || \"\";\n        this.createdAt = dataModelParams.createdAt || \"\";\n        this.creatingApplication = dataModelParams.creatingApplication || \"\";\n        this.schema = dataModelParams.schema || \"\";\n        this.propertySets = {};\n        this.objects = {};\n        this.objectsByType = {};\n        this.typeCounts = {};\n        this.rootDataObject = null;\n        this.#built = false;\n        this.#destroyed = false;\n\n        if (dataModelParams.propertySets) {\n\n            // TODO: global property sets\n\n            for (let i = 0, len = dataModelParams.propertySets.length; i < len; i++) {\n                this.createPropertySet(dataModelParams.propertySets[i]);\n            }\n        }\n\n        if (dataModelParams.objects) {\n            for (let i = 0, len = dataModelParams.objects.length; i < len; i++) {\n                this.createObject(dataModelParams.objects[i]);\n            }\n            // for (let i = 0, len = dataModelParams.objects.length; i < len; i++) {\n            //     const dataObjectParams = dataModelParams.objects[i];\n            //     const dataObject = this.objects[dataObjectParams.id];\n            //     if (dataObject) {\n            //         if (dataObjectParams.parentId) {\n            //             const parentDataObject = this.objects[dataObjectParams.parentId];\n            //             if (parentDataObject) {\n            //                 dataObject.parent = parentDataObject;\n            //                 parentDataObject.objects.push(dataObject);\n            //             } else {\n            //                 this.rootDataObject = dataObject; // FIXME\n            //             }\n            //         } else {\n            //             this.rootDataObject = dataObject; // FIXME\n            //         }\n            //     }\n            // }\n        }\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<DataModel, null>());\n    }\n\n    /**\n     * Creates a {@link PropertySet} within this DataModel.\n     *\n     * @param propertySetCfg\n     */\n    createPropertySet(propertySetCfg: PropertySetParams): null | PropertySet {\n        if (this.#destroyed) {\n            return null;\n        }\n        const propertySet = new PropertySet(this, propertySetCfg);\n        this.propertySets[propertySetCfg.id] = propertySet;\n        return propertySet;\n    }\n\n    /**\n     * Creates a {@link DataObject} in this DataModel.\n     *\n     * Each DataObject has a globally-unique ID in {@link DataObject.id}, with which it's registered\n     * in {@link Data.objects} and {@link DataModel.objects}.\n     *\n     * If {@link DataObjectParams.id} matches a DataObject that\n     * already exists (ie. already created for a different DataModel), then this method will reuse that DataObject for this DataModel,\n     * and will ignore any other {@link DataObjectParams} parameters that we provide. This makes the assumption that each\n     * value of {@link DataObjectParams.id} is associated with a single value for {@link DataObjectParams.type}\n     * and {@link DataObjectParams.name}. This aligns well with IFC, in which wewe never have two elements with the same\n     * ID but different types or names.\n     *\n     * Each DataObject automatically gets destroyed whenever all the {@link DataModel|DataModels} that share\n     * it have been destroyed.\n     *\n     * We can attach our DataObject as child of an existing parent DataObject. To do that, we provide the ID of the parent\n     * in {@link DataObjectParams.parentId}. Following the reuse mechanism just described, the parent is allowed to be a\n     * DataObject that we created in a different DataModel. If the parent does not exist yet, then our new DataObject will\n     * automatically become the parent's child when the parent is created later.\n     *\n     * @param dataObjectParams\n     */\n    createObject(dataObjectParams: DataObjectParams): null | DataObject {\n        if (this.#destroyed) {\n            return null;\n        }\n        const id = dataObjectParams.id;\n        const type = dataObjectParams.type;\n        let dataObject = this.data.objects[id];\n        if (!dataObject) {\n            const propertySets = [];\n            if (dataObjectParams.propertySetIds) {\n                for (let i = 0, len = dataObjectParams.propertySetIds.length; i < len; i++) {\n                    const propertySetId = dataObjectParams.propertySetIds[i];\n                    const propertySet = this.propertySets[propertySetId];\n                    if (!propertySet) {\n                        console.error(`PropertySet not found: \"${propertySetId}\"`);\n                    } else {\n                        propertySets.push(propertySet);\n                    }\n                }\n            }\n            dataObject = new DataObject(this, id, dataObjectParams.name, dataObjectParams.type, propertySets);\n            this.data.objects[id] = dataObject;\n            if (!this.data.objectsByType[type]) {\n                this.data.objectsByType[type] = {};\n            }\n            this.data.objectsByType[type][id] = dataObject;\n            this.data.typeCounts[type] = (this.data.typeCounts[type] === undefined) ? 1 : this.data.typeCounts[type] + 1;\n            dataObject.models.push(this);\n            if (dataObjectParams.relations) {\n                for (let relationType in dataObjectParams.relations) {\n                    if (!dataObject.relating[relationType]) {\n                        dataObject.relating[relationType] = [];\n                    }\n                    const relatedObjectIds = dataObjectParams.relations[relationType];\n                    for (let j = 0, lenj = relatedObjectIds.length; j < lenj; j++) {\n                        const relatedObjectId = relatedObjectIds[j];\n                        const relatedObject = this.data.objects[relatedObjectId];\n                        if (!relatedObject) {\n                            this.error(`[createObject] Can't create Relationship - DataObject not found: ${relatedObjectId}`);\n                        } else {\n                            // @ts-ignore\n                            const relation = new Relationship(relationType, this, relatedObject);\n                            relatedObject.relating[relationType].push(relation);\n                            dataObject.related[relationType].push(relation);\n                        }\n                    }\n                }\n            }\n            this.data.onObjectCreated.dispatch(this.data, dataObject);\n        } else {\n            this.objects[id] = dataObject;\n            if (!this.objectsByType[type]) {\n                this.objectsByType[type] = {};\n            }\n            this.objectsByType[type][id] = dataObject;\n            this.typeCounts[type] = (this.typeCounts[type] === undefined) ? 1 : this.typeCounts[type] + 1;\n            dataObject.models.push(this);\n        }\n        return dataObject;\n    }\n\n    /**\n     * Creates a {@link Relationship} between two {@link DataObject|DataObjects}.\n     *\n     * @param relationshipParams\n     */\n    createRelationship(relationshipParams: RelationshipParams) {\n        const relatingObject = this.data.objects[relationshipParams.relatingObjectId];\n        if (!relatingObject) {\n            this.error(`[createRelation] DataObject not found: ${relationshipParams.relatingObjectId}`);\n            return;\n        }\n        const relatedObject = this.data.objects[relationshipParams.relatedObjectId];\n        if (!relatedObject) {\n            this.error(`[createRelation] DataObject not found: ${relationshipParams.relatedObjectId}`);\n            return;\n        }\n        const relation = new Relationship(relationshipParams.relationType, relatingObject, relatedObject);\n        relatedObject.relating[relationshipParams.relationType].push(relation);\n        relatingObject.related[relationshipParams.relationType].push(relation);\n    }\n\n    /**\n     * Builds this DataModel, readying it for use.\n     */\n    build() {\n        if (this.destroyed) {\n            this.log(\"DataModel already destroyed\");\n            return;\n        }\n        if (this.#built) {\n            this.log(\"DataModel already built\");\n            return;\n        }\n        this.#built = true;\n        this.onBuilt.dispatch(this, null);\n    }\n\n    /**\n     * Destroys this DataModel.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (let id in this.objects) {\n            const dataObject = this.objects[id];\n            if (dataObject.models.length > 1) {\n                this.#removeFromModels(dataObject);\n            } else {\n                delete this.data.objects[id];\n                const type = dataObject.type;\n                if ((--this.data.typeCounts[type]) === 0) {\n                    delete this.data.typeCounts[type];\n                    delete this.data.objectsByType[type];\n                    this.data.onObjectDestroyed.dispatch(this.data, dataObject);\n                    for (let type in dataObject.relating) {\n                        const relations = dataObject.relating[type];\n                        for (let i = 0, len = relations.length; i < len; i++) {\n                            const relation = relations[i];\n                            const related = relation.related;\n                            const list = related.relating[type];\n                            for (let j = 0, k = 0, lenj = list.length; j < lenj; j++) {\n                                if (list[k].relating === dataObject) {\n                                    // Splice j from related.relating[type]\n                                    list[j] = list[j]\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // if (dataObject.parent) {\n            //     const objects = dataObject.parent.objects;\n            //     objects.length--;\n            //     let f = false;\n            //     for (let i = 0, len = objects.length; i < len; i++) {\n            //         if (f || (f = objects[i] === dataObject)) {\n            //             objects[i] = objects[i + 1];\n            //         }\n            //     }\n            // }\n        }\n        this.#destroyed = true;\n        this.onBuilt.clear();\n        super.destroy();\n    }\n\n    #removeFromModels(dataObject: DataObject) {\n        for (let i = 0, len = dataObject.models.length; i < len; i++) {\n            if (dataObject.models[i] === this) {\n                dataObject.models = dataObject.models.splice(i, 1);\n                break;\n            }\n        }\n    }\n}\n\nexport {DataModel};","import {Component} from \"../Component\";\nimport {DataModel} from \"./DataModel\";\nimport type {DataObject} from \"./DataObject\";\nimport type {PropertySet} from \"./PropertySet\";\nimport type {WebViewer} from \"../WebViewer\";\nimport type {DataModelParams} from \"./DataModelParams\";\nimport {createUUID} from \"../utils/index\";\nimport {EventEmitter} from \"../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {SearchParams} from \"./SearchParams\";\n\n\n/**\n * Contains semantic data for the models in a {@link WebViewer}.\n *\n * ## Features\n *\n * * Generic entity-relationship graph\n * * Supports multiple, federated data models\n * * Supports any schema that's expressable as an ER graph\n * * Supports IFC models\n * * Graph traversals to query objects\n *\n * ## Quickstart\n *\n * * Located at {@link WebViewer.data}\n * * Create {@link DataModel|DataModels} with {@link Data.createModel}\n * * Create {@link DataObject|DataObjects} with {@link DataModel.createObject}\n * * Create {@link PropertySet|PropertySets} with {@link DataModel.createPropertySet}\n * * Create {@link Relationship|Relationships} with {@link DataModel.createRelationship}\n * * Query with {@link Data.searchDataObjects}\n * * When built, be sure to finalize each DataModel with {@link DataModel.build}\n * * When no longer needed, be sure to destroy each DataModel with {@link DataModel.destroy}\n *\n * <br>\n *\n * ## Examples\n *\n * ### Example 1. Creating a DataModel from a JSON object\n *\n * In this example, we'll create a {@link DataModel} from a JSON object which conforms to the schema defined by\n * {@link DataModelParams}.\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *   id: \"myViewer\"\n * });\n * \n * const mySchema = {\n *     FURNITURE_TYPE: 0,\n *     AGGREGATES_REL: 1\n * };\n *\n * const myDataModel = myViewer.data.createModel({\n *\n *     id: \"myTableModel\",\n *\n *     projectId: \"024120003\",\n *     revisionId: \"902344223\",\n *     author: \"xeolabs\",\n *     createdAt: \"Jan 26 2022\",\n *     creatingApplication: \"WebStorm\",\n *     schema: \"ifc4\",\n *\n *     objects: [\n *         {\n *             id: \"table\",\n *             type: mySchema.FURNITURE_TYPE,\n *             name: \"Table\",\n *             propertySetIds: [\"tablePropertySet\"]\n *         },\n *         {\n *             id: \"redLeg\",\n *             name: \"Red table Leg\",\n *             type: mySchema.FURNITURE_TYPE,\n *             propertySetIds: [\"tableLegPropertySet\"]\n *         },\n *         {\n *             id: \"greenLeg\",\n *             name: \"Green table leg\",\n *             type: mySchema.FURNITURE_TYPE,\n *             propertySetIds: [\"tableLegPropertySet\"]\n *         },\n *         {\n *             id: \"blueLeg\",\n *             name: \"Blue table leg\",\n *             type: mySchema.FURNITURE_TYPE,\n *             propertySetIds: [\"tableLegPropertySet\"]\n *         },\n *         {\n *             id: \"yellowLeg\",\n *             name: \"Yellow table leg\",\n *             type: mySchema.FURNITURE_TYPE,\n *             propertySetIds: [\"tableLegPropertySet\"]\n *         },\n *         {\n *             id: \"tableTop\",\n *             name: \"Purple table top\",\n *             type: mySchema.FURNITURE_TYPE,\n *             propertySetIds: [\"tableTopPropertySet\"]\n *         }\n *     ],\n *\n *     relationships: [\n *         {\n *             type: mySchema.AGGREGATES_REL,\n *             relating: \"table\",\n *             related: \"tableTop\"\n *         },\n *         {\n *             type: mySchema.AGGREGATES_REL,\n *             relating: \"tableTop\",\n *             related: \"redLeg\"\n *         },\n *         {\n *             type: mySchema.AGGREGATES_REL,\n *             relating: \"tableTop\",\n *             related: \"greenLeg\"\n *         },\n *         {\n *             type: mySchema.AGGREGATES_REL,\n *             relating: \"tableTop\",\n *             related: \"blueLeg\"\n *         },\n *         {\n *             type: mySchema.AGGREGATES_REL,\n *             relating: \"tableTop\",\n *             related: \"yellowLeg\"\n *         }\n *     ],\n *\n *     propertySets: [\n *         {\n *             id: \"tablePropertySet\",\n *             originalSystemId: \"tablePropertySet\",\n *             name: \"Table properties\",\n *             type: \"\",\n *             properties: [\n *                 {\n *                     name: \"Weight\",\n *                     value: 5,\n *                     type: \"\",\n *                     valueType: \"\",\n *                     description: \"Weight of the thing\"\n *                 },\n *                 {\n *                     name: \"Height\",\n *                     value: 12,\n *                     type: \"\",\n *                     valueType: \"\",\n *                     description: \"Height of the thing\"\n *                 }\n *             ]\n *         },\n *         {\n *             id: \"legPropertySet\",\n *             originalSystemId: \"legPropertySet\",\n *             name: \"Table leg properties\",\n *             type: \"\",\n *             properties: [\n *                 {\n *                     name: \"Weight\",\n *                     value: 5,\n *                     type: \"\",\n *                     valueType: \"\",\n *                     description: \"Weight of the thing\"\n *                 },\n *                 {\n *                     name: \"Height\",\n *                     value: 12,\n *                     type: \"\",\n *                     valueType: \"\",\n *                     description: \"Height of the thing\"\n *                 }\n *             ]\n *         }\n *     ]\n * });\n * ````\n *\n * ### Example 2. Creating a DataModel using builder methods\n *\n * In our second example, we'll create another {@link DataModel}, this time instantiating the {@link PropertySet},\n * {@link Property}, {@link DataObject} and {@link Relationship} components ourselves, using the DataModel's builder methods.\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *   id: \"myViewer\"\n * });\n *\n * const view = myViewer.createView({\n *      canvas: myCanvas\n * });\n *\n * const mySchema = {\n *     FURNITURE_TYPE: 0,\n *     AGGREGATES_REL: 1\n * };\n *\n * const myDataModel = myViewer.data.createModel({\n *     id: \"myTableModel\",\n *     projectId: \"024120003\",\n *     revisionId: \"902344223\",\n *     author: \"xeolabs\",\n *     createdAt: \"Jan 26 2022\",\n *     creatingApplication: \"WebStorm\",\n *     schema: \"ifc4\"\n * });\n *\n * const tablePropertySet = myDataModel.createPropertySet({\n *     id: \"tablePropertySet\",\n *     name: \"Table properties\",\n *     type: \"\"\n * });\n *\n * tablePropertySet.createProperty({\n *     name: \"Weight\",\n *     value: 5,\n *     type: \"\",\n *     valueType: \"\",\n *     description: \"Weight of the thing\"\n * });\n *\n * tablePropertySet.createProperty({\n *     name: \"Height\",\n *     value: 12,\n *     type: \"\",\n *     valueType: \"\",\n *     description: \"Height of the thing\"\n * });\n *\n * const legPropertySet = myDataModel.createPropertySet({\n *     id: \"legPropertySet\",\n *     name: \"Table leg properties\",\n *     type: \"\"\n * });\n *\n * legPropertySet.createProperty({\n *     name: \"Weight\",\n *     value: 5,\n *     type: \"\",\n *     valueType: \"\",\n *     description: \"Weight of the thing\"\n * });\n *\n * legPropertySet.createProperty({\n *     name: \"Height\",\n *     value: 12,\n *     type: \"\",\n *     valueType: \"\",\n *     description: \"Height of the thing\"\n * });\n *\n * myDataModel.createObject({\n *     id: \"table\",\n *     type: \"furniture\",\n *     name: \"Table\",\n *     propertySetIds: [\"tablePropertySet\"]\n * });\n *\n * myDataModel.createObject({\n *     id: \"redLeg\",\n *     name: \"Red table Leg\",\n *     type: \"leg\",\n *     propertySetIds: [\"tableLegPropertySet\"]\n * });\n *\n * myDataModel.createObject({\n *     id: \"greenLeg\",\n *     name: \"Green table leg\",\n *     type: \"leg\",\n *     propertySetIds: [\"tableLegPropertySet\"]\n * });\n *\n * myDataModel.createObject({\n *     id: \"blueLeg\",\n *     name: \"Blue table leg\",\n *     type: \"leg\",\n *     propertySetIds: [\"tableLegPropertySet\"]\n * });\n *\n * myDataModel.createObject({\n *     id: \"yellowLeg\",\n *     name: \"Yellow table leg\",\n *     type: \"leg\",\n *     propertySetIds: [\"tableLegPropertySet\"]\n * });\n *\n * myDataModel.createObject({\n *     id: \"tableTop\",\n *     name: \"Purple table top\",\n *     type: \"surface\",\n *     propertySetIds: [\"tableTopPropertySet\"]\n * });\n *\n * myDataModel.createRelationship({\n *     type: mySchema.AGGREGATES_REL,\n *     relating: \"table\",\n *     related: \"tableTop\"\n * });\n *\n * myDataModel.createRelationship({\n *     type: mySchema.AGGREGATES_REL,\n *     relating: \"tableTop\",\n *     related: \"redLeg\"\n * });\n *\n * myDataModel.createRelationship({\n *     type: mySchema.AGGREGATES_REL,\n *     relating: \"tableTop\",\n *     related: \"greenLeg\"\n * });\n *\n * myDataModel.createRelationship({\n *     type: mySchema.AGGREGATES_REL,\n *     relating: \"tableTop\",\n *     related: \"blueLeg\"\n * });\n *\n * myDataModel.createRelationship({\n *     type: mySchema.AGGREGATES_REL,\n *     relating: \"tableTop\",\n *     related: \"yellowLeg\"\n * });\n * ````\n *\n * ### Example 3. Querying DataObjects\n *\n * In our third example, we'll extend our previous example to use the {@link Data.searchDataObjects} method to\n * traverse our data graph and fetch the IDs of the {@link DataObject|DataObjects} we find on that path.\n *\n * One example of where we use this method is to query the aggregation hierarchy of the DataObjects for building\n * a tree view of an IFC element hierarchy.\n *\n * ````javascript\n * const objectIds = [];\n *\n * myViewer.data.searchDataObjects({\n *     startObjectId: \"table\",\n *     includeObjects: [mySchema.FURNITURE_TYPE],\n *     includeRelated: [mySchema.AGGREGATES_REL],\n *     objectIds\n * });\n *\n * // objectIds == [\"table\", \"tableTop\", \"redLeg\", \"greenLeg\", \"blueLeg\", \"yellowLeg\"];\n *\n * view.setObjectsHighlighted(objectIds, true);\n * ````\n *\n * * ### Example 4. Traversing DataObjects\n *\n * TODO\n *\n * ````javascript\n * const table = myViewer.data.objects[\"table\"];\n *\n * const relations = table.related[mySchema.AGGREGATES_REL];\n *\n * for (let i = 0, len = relations.length; i < len; i++) {\n *\n *      const relation = relations[i];\n *      const dataObject = relation.related;\n *      const viewObject = view.objects[dataObject.id];\n *\n *      if (viewObject) {\n *          viewObject.highlighted = true;\n *      }\n * }\n * ````\n *\n * ### Example 5. Handling data events\n *\n * TODO\n *\n *\n */\nexport class Data extends Component {\n\n    /**\n     * The {@link WebViewer} to which this Data belongs.\n     *\n     * The Data is located at {@link WebViewer.data}.\n     */\n    declare public readonly viewer: WebViewer;\n\n    /**\n     * Emits an event each time a {@link DataModel} is created.\n     *\n     * @event\n     */\n    readonly onModelCreated: EventEmitter<Data, DataModel>;\n\n    /**\n     * Emits an event each time a {@link DataModel} is destroyed.\n     *\n     * @event\n     */\n    readonly onModelDestroyed: EventEmitter<Data, DataModel>;\n\n    /**\n     * Emits an event each time a {@link DataObject} is created.\n     *\n     * @event\n     */\n    readonly onObjectCreated: EventEmitter<Data, DataObject>;\n\n    /**\n     * Emits an event each time a {@link DataObject} is destroyed.\n     *\n     * @event\n     */\n    readonly onObjectDestroyed: EventEmitter<Data, DataObject>;\n\n    /**\n     * The {@link DataModel|DataModels} belonging to this Data, each keyed to its {@link DataModel.id}.\n     */\n    public readonly models: { [key: string]: DataModel };\n\n    /**\n     * The {@link PropertySet|PropertySets} belonging to this Data, each keyed to its {@link PropertySet.id}.\n     */\n    public readonly propertySets: { [key: string]: PropertySet };\n\n    /**\n     * All {@link DataObject|DataObjects} belonging to this Data, each keyed to its {@link DataObject.id}.\n     */\n    public readonly objects: { [key: string]: DataObject };\n\n    /**\n     * The root {@link DataObject|DataObjects} belonging to this Data, each keyed to its {@link DataObject.id}.\n     *\n     * Root DataObjects are those with {@link DataObject.parent} set to ````null````.\n     */\n    public readonly rootObjects: { [key: string]: DataObject };\n\n    /**\n     * The {@link DataObject|DataObjects} belonging to this Data, each map keyed to {@link DataObject.type}, containing {@link DataObject|DataObjects} keyed to {@link DataObject.id}.\n     */\n    public readonly objectsByType: { [key: string]: { [key: string]: DataObject } };\n\n    /**\n     * Tracks number of {@link DataObject|DataObjects} of each type.\n     */\n    readonly typeCounts: { [key: string]: number };\n\n    /**\n     * @private\n     */\n    constructor(viewer: WebViewer) {\n\n        super(null, {});\n\n        this.viewer = viewer;\n        this.models = {};\n        this.propertySets = {};\n        this.objects = {};\n        this.rootObjects = {};\n        this.objectsByType = {};\n        this.typeCounts = {};\n\n        this.onModelCreated = new EventEmitter(new EventDispatcher<Data, DataModel>());\n        this.onModelDestroyed = new EventEmitter(new EventDispatcher<Data, DataModel>());\n        this.onObjectCreated = new EventEmitter(new EventDispatcher<Data, DataObject>());\n        this.onObjectDestroyed = new EventEmitter(new EventDispatcher<Data, DataObject>());\n    }\n\n    /**\n     * Creates a {@link DataModel} in this Data.\n     *\n     * @param  dataModelParams Data for the {@link DataModel}.\n     * @param [options] Options for creating the {@link DataModel}.\n     * @param [options.includeRelating] When provided, only create {@link DataObject|DataObjects} with types in this list.\n     * @param  [options.excludeRelating] When provided, never create {@link DataObject|DataObjects} with types in this list.\n     * @param [options.globalizeObjectIds=false] Whether to globalize each {@link DataObject.id}. Set this ````true```` when you need to load multiple instances of the same meta model, to avoid ID clashes between the meta objects in the different instances.\n     * @returns The new DataModel.\n     * @see {@link Scene.createModel}\n     */\n    createModel(\n        dataModelParams: DataModelParams,\n        options?: {\n            includeRelating?: string[],\n            excludeRelating?: string[],\n            globalizeObjectIds?: boolean\n        }\n    ): DataModel {\n        let id = dataModelParams.id || createUUID();\n        if (this.models[id]) {\n            this.error(`DataModel with ID \"${id}\" already exists - will randomly-generate ID`);\n            id = createUUID();\n        }\n        const dataModel = new DataModel(this, id, dataModelParams, options);\n        this.models[dataModel.id] = dataModel;\n        dataModel.onDestroyed.one(() => { // DataModel#destroy() called\n            delete this.models[dataModel.id];\n            this.onModelDestroyed.dispatch(this, dataModel);\n        });\n        this.onModelCreated.dispatch(this, dataModel);\n        return dataModel;\n    }\n\n    /**\n     * Gets the {@link DataObject.id}s of the {@link DataObject|DataObjects} that have the given {@link DataObject.type}.\n     *\n     * @param type The type.\n     * @returns Array of {@link DataObject.id}s.\n     */\n    getObjectIdsByType(type: string) {\n        const objects = this.objectsByType[type];\n        return objects ? Object.keys(objects) : [];\n    }\n\n    /**\n     * Finds {@link DataObject|DataObjects} using a customized depth-first traversal.\n     *\n     * Usually we use this method to recursively find DataObjects of specific {@link DataObject.type|types} within\n     * a hierarchy.\n     *\n     * See {@link Data} for usage examples.\n     *\n     * @param searchParams\n     */\n    searchDataObjects(searchParams: SearchParams) {\n\n        const includeObjects = (searchParams.includeObjects && searchParams.includeObjects.length > 0) ? arrayToMap(searchParams.includeObjects) : null;\n        const excludeObjects = (searchParams.excludeObjects && searchParams.excludeObjects.length > 0) ? arrayToMap(searchParams.excludeObjects) : null;\n\n        const includeRelating = (searchParams.includeRelating && searchParams.includeRelating.length > 0) ? arrayToMap(searchParams.includeRelating) : null;\n        const excludeRelating = (searchParams.excludeRelating && searchParams.excludeRelating.length > 0) ? arrayToMap(searchParams.excludeRelating) : null;\n\n        function visit(dataObject: DataObject) {\n            if (!dataObject) {\n                return;\n            }\n            let includeObject = true;\n            // @ts-ignore\n            if (excludeObjects && excludeObjects[dataObject.type]) {\n                includeObject = false;\n            } else { // @ts-ignore\n                if (includeObjects && (!includeObjects[dataObject.type])) {\n                    includeObject = false;\n                }\n            }\n            if (includeObject) {\n                if (searchParams.resultObjectIds) {\n                    searchParams.resultObjectIds.push(dataObject.id);\n                } else if (searchParams.resultObjects) {\n                    searchParams.resultObjects.push(dataObject);\n                } else if (searchParams.resultCallback) {\n                    if (searchParams.resultCallback(dataObject)) {\n                        return;\n                    }\n                }\n            }\n            // const relations = dataObject.related[searchParams.type];\n            // if (relations) {\n            //     for (let i = 0, len = relations.length; i < len; i++) {\n            //         let includeRelation = true;\n            //         // @ts-ignore\n            //         if (excludeRelating && excludeRelating[dataObject.type]) {\n            //             includeRelation = false;\n            //         } else { // @ts-ignore\n            //             if (includeRelating && (!includeRelating[dataObject.type])) {\n            //                 includeRelation = false;\n            //             }\n            //         }\n            //         if (includeRelation) {\n            //             visit(relations[i].related);\n            //         }\n            //     }\n            // }\n        }\n\n        if (searchParams.startObjectId) {\n            const startObject = this.objects[searchParams.startObjectId];\n            if (startObject) {\n                visit(startObject);\n            }\n        } else if (searchParams.startObject) {\n            if (searchParams.startObject) {\n                visit(searchParams.startObject);\n            }\n        } else {\n            for (let id in this.rootObjects) {\n                visit(this.rootObjects[id]);\n            }\n        }\n    }\n\n    /**\n     * @private\n     */\n    destroy(): void {\n        this.onModelCreated.clear();\n        this.onModelDestroyed.clear();\n        super.destroy();\n    }\n}\n\nfunction arrayToMap(array: any[]): { [key: string]: any } {\n    const map: { [key: string]: any } = {};\n    for (let i = 0, len = array.length; i < len; i++) {\n        map[array[i]] = true;\n    }\n    return map;\n}\n\n","import * as math from '../../math/index';\nimport {Component} from '../../Component';\nimport type {Camera} from \"./Camera\";\nimport {EventEmitter} from \"./../../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {PerspectiveProjectionType} from \"../../constants\";\n\n/**\n * Perspective projection configuration for a {@link Camera}.\n *\n * ## Summary\n *\n * * Located at {@link Camera.perspective}.\n * * Implicitly sets the left, right, top, bottom frustum planes using {@link Perspective.fov}.\n * * {@link Perspective.near} and {@link Perspective.far} specify the distances to the clipping planes.\n * * {@link Perspective.onProjMatrix} will fire an event whenever {@link Perspective.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nclass Perspective extends Component {\n\n    /**\n     * The Camera this Perspective belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link Perspective.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<Perspective, math.FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = PerspectiveProjectionType;\n\n    #state: {\n        far: number;\n        near: number;\n        fov: number;\n        fovAxis: string;\n        projMatrix: math.FloatArrayParam;\n        inverseProjMatrix: math.FloatArrayParam;\n        transposedProjMatrix: math.FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n    #onCanvasBoundary: any;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        fov?: number,\n        fovAxis?: string,\n        near?: number,\n        far?: number\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            near: cfg.near || 0.1,\n            far: cfg.far || 2000.0,\n            fov: cfg.fov || 60.0,\n            fovAxis: cfg.fovAxis || \"min\",\n            projMatrix: math.mat4(),\n            inverseProjMatrix: math.mat4(),\n            transposedProjMatrix: math.mat4()\n        };\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.#onCanvasBoundary = this.camera.view.canvas.onBoundary.subscribe( () => {\n            this.setDirty();\n        });\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<Perspective, math.FloatArrayParam>());\n    }\n\n    /**\n     * Gets the Perspective's field-of-view angle (FOV).\n     *\n     * Default value is ````60.0````.\n     *\n     * @returns {Number} Current field-of-view.\n     */\n    get fov(): number {\n        return this.#state.fov;\n    }\n\n    /**\n     * Sets the Perspective's field-of-view angle (FOV).\n     *\n     * Default value is ````60.0````.\n     *\n     * @param value New field-of-view.\n     */\n    set fov(value: number) {\n        if (value === this.#state.fov) {\n            return;\n        }\n        this.#state.fov = value;\n        this.setDirty();\n     }\n\n    /**\n     * Gets the Perspective's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis.\n     *\n     * Default value is ````\"min\"````.\n     *\n     * @returns {String} The current FOV axis value.\n     */\n    get fovAxis(): string {\n        return this.#state.fovAxis;\n    }\n\n    /**\n     * Sets the Perspective's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis. \n     *\n     * Default value ````\"min\"````.\n     *\n     * @param value New FOV axis value.\n     */\n    set fovAxis(value: string) {\n        value = value || \"min\";\n        if (this.#state.fovAxis === value) {\n            return;\n        }\n        if (value !== \"x\" && value !== \"y\" && value !== \"min\") {\n            this.error(\"Unsupported value for 'fovAxis': \" + value + \" - defaulting to 'min'\");\n            value = \"min\";\n        }\n        this.#state.fovAxis = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Perspective's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @returns The Perspective's near plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the Perspective's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New Perspective near plane position.\n     */\n    set near(value: number) {\n        if (this.#state.near === value) {\n            return;\n        }\n        this.#state.near = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of this Perspective's far plane on the positive View-space Z-axis.\n     *\n     * @return {Number} The Perspective's far plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of this Perspective's far plane on the positive View-space Z-axis.\n     *\n     * @param value New Perspective far plane position.\n     */\n    set far(value: number) {\n        if (this.#state.far === value) {\n            return;\n        }\n        this.#state.far = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the Perspective's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns  The Perspective's projection matrix.\n     */\n    get projMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Perspective.projMatrix}.\n     *\n     * @returns  The inverse of {@link Perspective.projMatrix}.\n     */\n    get inverseProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            math.inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Perspective.projMatrix}.\n     *\n     * @returns  The transpose of {@link Perspective.projMatrix}.\n     */\n    get transposedProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            math.transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n        const boundary = this.camera.view.canvas.boundary;\n        const aspect = boundary[WIDTH_INDEX] / boundary[HEIGHT_INDEX];\n        const fovAxis = this.#state.fovAxis;\n        let fov = this.#state.fov;\n        if (fovAxis === \"x\" || (fovAxis === \"min\" && aspect < 1) || (fovAxis === \"max\" && aspect > 1)) {\n            fov = fov / aspect;\n        }\n        fov = Math.min(fov, 120);\n        math.perspectiveMat4(fov * (Math.PI / 180.0), aspect, this.#state.near, this.#state.far, this.#state.projMatrix);\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates and Screen-space depth, using this Perspective projection.\n     *\n     * @param canvasPos Inputs 2D Canvas-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos: math.FloatArrayParam, screenZ: number, screenPos: math.FloatArrayParam, viewPos: math.FloatArrayParam, worldPos: math.FloatArrayParam): math.FloatArrayParam {\n\n        const canvas = this.camera.view.canvas.canvas;\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.camera.view.canvas.onBoundary.unsubscribe(this.#onCanvasBoundary);\n        this.onProjMatrix.clear();\n    }\n}\n\nexport {Perspective};","import {Component} from '../../Component';\nimport type {Camera} from \"./Camera\";\nimport * as math from '../../math/index';\nimport {EventEmitter} from \"../../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {OrthoProjectionType} from \"../../constants\";\n\n/**\n * Orthographic projection configuration for a {@link Camera}.\n *\n * * Located at {@link Camera.ortho}.\n * * Works like Blender's orthographic projection, where the positions of the left, right, top and bottom planes are implicitly\n * indicated with a single {@link Ortho.scale} property, which causes the frustum to be symmetrical on X and Y axis, large enough to\n * contain the number of units given by {@link Ortho.scale}.\n * * {@link Ortho.near} and {@link Ortho.far} indicated the distances to the clipping planes.\n * * {@link Ortho.onProjMatrix} will fire an event whenever {@link Ortho.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nclass Ortho extends Component {\n\n    /**\n     * The Camera this Ortho belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link Ortho.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<Ortho, math.FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = OrthoProjectionType;\n\n    #state: {\n        far: number;\n        near: number;\n        scale: number;\n        projMatrix: math.FloatArrayParam;\n        inverseProjMatrix: math.FloatArrayParam;\n        transposedProjMatrix: math.FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n    #onCanvasBoundary: any;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        far?: number;\n        near?: number;\n        scale?: number;\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            near: cfg.near || 0.1,\n            far: cfg.far || 2000.0,\n            scale: cfg.scale || 1.0,\n            projMatrix: math.mat4(),\n            inverseProjMatrix: math.mat4(),\n            transposedProjMatrix: math.mat4()\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<Ortho, math.FloatArrayParam>());\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.#onCanvasBoundary = this.camera.view.canvas.onBoundary.subscribe( () => {\n            this.setDirty();\n        });\n    }\n\n    /**\n     * Gets scale factor for this Ortho's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Default value is ````1.0````\n     *\n     * returns New Ortho scale value.\n     */\n    get scale(): number {\n        return this.#state.scale;\n    }\n\n    /**\n     * Sets scale factor for this Ortho's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Default value is ````1.0````\n     * @param value New scale value.\n     */\n    set scale(value: number) {\n        if (value <= 0) {\n            value = 0.01;\n        }\n        this.#state.scale = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Ortho's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * returns New Ortho near plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the Ortho's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New Ortho near plane position.\n     */\n    set near(value: number) {\n        if (this.#state.near === value) {\n            return;\n        }\n        this.#state.near = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Ortho's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * returns New far ortho plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of the Ortho's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````2000.0````.\n     *\n     * @param value New far ortho plane position.\n     */\n    set far(value: number) {\n        if (this.#state.far === value) {\n            return;\n        }\n        this.#state.far = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the Ortho's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns  The Ortho's projection matrix.\n     */\n    get projMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Ortho.projMatrix}.\n     *\n     * @returns  The inverse of {@link Ortho.projMatrix}.\n     */\n    get inverseProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            math.inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Ortho.projMatrix}.\n     *\n     * @returns  The transpose of {@link Ortho.projMatrix}.\n     */\n    get transposedProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            math.transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n\n        const view = this.camera.view;\n        const scale = this.#state.scale;\n        const halfSize = 0.5 * scale;\n\n        const boundary = view.canvas.boundary;\n        const boundaryWidth = boundary[WIDTH_INDEX];\n        const boundaryHeight = boundary[HEIGHT_INDEX];\n        const aspect = boundaryWidth / boundaryHeight;\n\n        let left;\n        let right;\n        let top;\n        let bottom;\n\n        if (boundaryWidth > boundaryHeight) {\n            left = -halfSize;\n            right = halfSize;\n            top = halfSize / aspect;\n            bottom = -halfSize / aspect;\n\n        } else {\n            left = -halfSize * aspect;\n            right = halfSize * aspect;\n            top = halfSize;\n            bottom = -halfSize;\n        }\n\n        math.orthoMat4c(left, right, bottom, top, this.#state.near, this.#state.far, this.#state.projMatrix);\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n\n        this.camera.view.redraw();\n\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this Ortho projection.\n     *\n     * @param canvasPos Inputs 2D Canvas-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: math.FloatArrayParam,\n        screenZ: number,\n        screenPos: math.FloatArrayParam,\n        viewPos: math.FloatArrayParam,\n        worldPos: math.FloatArrayParam): math.FloatArrayParam {\n\n        const canvas = this.camera.view.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.camera.view.canvas.onBoundary.unsubscribe(this.#onCanvasBoundary);\n        this.onProjMatrix.clear();\n    }\n}\n\nexport {Ortho};","import {Component} from '../../Component';\nimport type {Camera} from \"./Camera\";\nimport * as math from '../../math/index';\nimport {EventEmitter} from \"../../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {FrustumProjectionType} from \"../../constants\";\n\n/**\n *  Frustum-based perspective projection configuration for a {@link Camera}.\n *\n * * Located at {@link Camera#frustum}.\n * * Allows to explicitly set the positions of the left, right, top, bottom, near and far planes, which is useful for asymmetrical view volumes, such as for stereo viewing.\n * * {@link Frustum#near} and {@link Frustum#far} specify the distances to the clipping planes.\n * * {@link Frustum.onProjMatrix} will fire an event whenever {@link Frustum.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nclass Frustum extends Component {\n\n    /**\n     * The Camera this Frustum belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link Frustum.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<Frustum, math.FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = FrustumProjectionType;\n\n    #state: {\n        far: number;\n        near: number;\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n        projMatrix: math.FloatArrayParam;\n        inverseProjMatrix: math.FloatArrayParam;\n        transposedProjMatrix: math.FloatArrayParam;\n    };\n\n    #inverseMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        far?: number;\n        near?: number;\n        top?: number;\n        bottom?: number;\n        right?: number;\n        left?: number;\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            projMatrix: math.mat4(),\n            inverseProjMatrix: math.mat4(),\n            transposedProjMatrix: math.mat4(),\n            near: 0.1,\n            far: 10000.0,\n            left: (cfg.left !== undefined && cfg.left !== null) ? cfg.left : -1.0,\n            right: (cfg.right !== undefined && cfg.right !== null) ? cfg.right : 1.0,\n            bottom: (cfg.bottom !== undefined && cfg.bottom !== null) ? cfg.bottom : -1.0,\n            top: (cfg.top !== undefined && cfg.top !== null) ? cfg.top : 1.0\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<Frustum, math.FloatArrayParam>());\n\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n    }\n\n    /**\n     * Gets the position of the Frustum's left plane on the View-space X-axis.\n     *\n     * @return {Number} Left frustum plane position.\n     */\n    get left(): number {\n        return this.#state.left;\n    }\n\n    /**\n     * Sets the position of the Frustum's left plane on the View-space X-axis.\n     *\n     * @param value New left frustum plane position.\n     */\n    set left(value: number) {\n        this.#state.left = value;\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Frustum's right plane on the View-space X-axis.\n     *\n     * @return {Number} Right frustum plane position.\n     */\n    get right(): number {\n        return this.#state.right;\n    }\n\n    /**\n     * Sets the position of the Frustum's right plane on the View-space X-axis.\n     *\n     * @param value New right frustum plane position.\n     */\n    set right(value: number) {\n        this.#state.right = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Frustum's top plane on the View-space Y-axis.\n     *\n     * @return {Number} Top frustum plane position.\n     */\n    get top(): number {\n        return this.#state.top;\n    }\n\n    /**\n     * Sets the position of the Frustum's top plane on the View-space Y-axis.\n     *\n     * @param value New top frustum plane position.\n     */\n    set top(value: number) {\n        this.#state.top = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Frustum's bottom plane on the View-space Y-axis.\n     *\n     * @return {Number} Bottom frustum plane position.\n     */\n    get bottom(): number {\n        return this.#state.bottom;\n    }\n\n    /**\n     * Sets the position of the Frustum's bottom plane on the View-space Y-axis.\n     *\n     * @param value New bottom frustum plane position.\n     */\n    set bottom(value: number) {\n        this.#state.bottom = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Frustum's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @return {Number} Near frustum plane position.\n     */\n    get near(): number {\n        return this.#state.near;\n    }\n\n    /**\n     * Sets the position of the Frustum's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param value New Frustum near plane position.\n     */\n    set near(value: number) {\n        this.#state.near = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the position of the Frustum's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @return {Number} Far frustum plane position.\n     */\n    get far(): number {\n        return this.#state.far;\n    }\n\n    /**\n     * Sets the position of the Frustum's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @param value New far frustum plane position.\n     */\n    set far(value: number) {\n        this.#state.far = value\n        this.setDirty();\n    }\n\n    /**\n     * Gets the Frustum's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns The Frustum's projection matrix\n     */\n    get projMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Frustum.projMatrix}.\n     *\n     * @returns  The inverse orthographic projection projMatrix.\n     */\n    get inverseProjMatrix(): math.FloatArrayParam  {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseMatrixDirty) {\n            math.inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Frustum.projMatrix}.\n     *\n     * @returns The transpose of {@link Frustum.projMatrix}.\n     */\n    get transposedProjMatrix(): math.FloatArrayParam  {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            math.transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * @private\n     */\n    clean() {\n        math.frustumMat4(this.#state.left, this.#state.right, this.#state.bottom, this.#state.top, this.#state.near, this.#state.far, this.#state.projMatrix);\n        this.#inverseMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this Frustum projection.\n     *\n     * @param canvasPos Inputs 2D Canvas-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: math.FloatArrayParam,\n        screenZ: number,\n        screenPos: math.FloatArrayParam,\n        viewPos: math.FloatArrayParam,\n        worldPos: math.FloatArrayParam): math.FloatArrayParam {\n\n        const canvas = this.camera.view.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.onProjMatrix.clear();\n    }\n}\n\nexport {Frustum};","import * as math from '../../math/index';\nimport {Component} from '../../Component';\nimport type {Camera} from \"./Camera\";\nimport {EventEmitter} from \"./../../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {CustomProjectionType} from \"../../constants\";\n\n/**\n * Configures a custom projection for a {@link Camera}.\n *\n * * Located at {@link Camera.customProjection}.\n * * {@link CustomProjection.onProjMatrix} will fire an event whenever {@link CustomProjection.projMatrix} updates, which indicates that one or more other properties have updated.\n */\nclass CustomProjection extends Component {\n\n    /**\n     * The Camera this CustomProjection belongs to.\n     */\n    public readonly camera: Camera;\n\n    /**\n     * Emits an event each time {@link CustomProjection.projMatrix} updates.\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<CustomProjection, math.FloatArrayParam>;\n\n    /**\n     * The type of this projection.\n     */\n    static readonly type: number = CustomProjectionType;\n    \n    #state: {\n        projMatrix: math.FloatArrayParam;\n        transposedProjMatrix: math.FloatArrayParam;\n        inverseProjMatrix: math.FloatArrayParam\n    };\n\n    #inverseProjMatrixDirty: boolean;\n    #transposedProjMatrixDirty: boolean;\n\n    /**\n     * @private\n     */\n    constructor(camera: Camera, cfg: {\n        projMatrix?: math.FloatArrayParam\n    } = {}) {\n\n        super(camera, cfg);\n\n        this.camera = camera;\n\n        this.#state = {\n            projMatrix: math.mat4(cfg.projMatrix || math.identityMat4()),\n            inverseProjMatrix: math.mat4(),\n            transposedProjMatrix: math.mat4()\n        };\n\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<CustomProjection, math.FloatArrayParam>());\n\n        this.#inverseProjMatrixDirty = true;\n        this.#transposedProjMatrixDirty = false;\n    }\n\n    /**\n     * Gets the CustomProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @return  New value for the CustomProjection's matrix.\n     */\n    get projMatrix(): math.FloatArrayParam {\n        return this.#state.projMatrix;\n    }\n\n    /**\n     * Sets the CustomProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @param projMatrix New value for the CustomProjection's matrix.\n     */\n    set projMatrix(projMatrix: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#state.projMatrix.set(projMatrix);\n        this.#inverseProjMatrixDirty = true;\n        this.#transposedProjMatrixDirty = true;\n        this.setDirty();\n        this.camera.view.redraw();\n        this.onProjMatrix.dispatch(this, this.#state.projMatrix);\n    }\n\n    /**\n     * Gets the inverse of {@link CustomProjection.projMatrix}.\n     *\n     * @returns The inverse of {@link CustomProjection.projMatrix}.\n     */\n    get inverseProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#inverseProjMatrixDirty) {\n            math.inverseMat4(this.#state.projMatrix, this.#state.inverseProjMatrix);\n            this.#inverseProjMatrixDirty = false;\n        }\n        return this.#state.inverseProjMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link CustomProjection.projMatrix}.\n     *\n     * @returns The transpose of {@link CustomProjection.projMatrix}.\n     */\n    get transposedProjMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        if (this.#transposedProjMatrixDirty) {\n            math.transposeMat4(this.#state.projMatrix, this.#state.transposedProjMatrix);\n            this.#transposedProjMatrixDirty = false;\n        }\n        return this.#state.transposedProjMatrix;\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this CustomProjection.\n     *\n     * @param canvasPos Inputs 2D Canvas-space coordinates.\n     * @param screenZ Inputs Screen-space Z coordinate.\n     * @param screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param viewPos Outputs un-projected 3D View-space coordinates.\n     * @param worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(\n        canvasPos: math.FloatArrayParam,\n        screenZ: number,\n        screenPos: math.FloatArrayParam,\n        viewPos: math.FloatArrayParam,\n        worldPos: math.FloatArrayParam) {\n        const canvas = this.camera.view.canvas.canvas;\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n        math.mulMat4v4(this.inverseProjMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this.onProjMatrix.clear();\n    }\n}\n\nexport {CustomProjection};","import type {FloatArrayParam} from \"../../math/index\";\nimport * as math from \"../../math/index\";\nimport {createRTCViewMat} from \"../../math/rtc\";\nimport type {Camera} from \"./Camera\";\n\n/**\n * Viewing matrix for a 3D relative-to-center (RTC) coordinate system origin.\n *\n * These aree normally only used internally, within {@link Renderer} implementations.\n *\n * These are created and destroyed by {@link Camera.getRTCViewMat} and {@link Camera.putRTCViewMat}.\n *\n * This class provides a version of {@link Camera.viewMatrix} that's dynamically adjusted\n * for a given RTC coordinate origin, that special shaders will use to render objects within\n * that RTC coordinate system. We use this technique to emulate double precision rendering on\n * single precision GPUs.\n *\n * {@link RTCViewMat.origin} indicates the origin of a 3D relative-to-center (RTC) coordinate\n * system. RTCViewMat dynamically calculates {@link RTCViewMat.viewMatrix} from {@link Camera.viewMatrix}, to provide a\n * viewing transform matrix that the shaders will use to render objects whose vertex coordinates are relative\n * to that RTC origin.\n */\nexport class RTCViewMat {\n\n    /**\n     * ID of this RTC coordinate system.\n     */\n    readonly id: string;\n\n    /**\n     * The Camera.\n     */\n    readonly camera: Camera;\n\n    /**\n     * The origin of this RTC coordinate system.\n     */\n    readonly origin: Float64Array;\n\n    /**\n     * @private\n     */\n    useCount: number;\n\n    /**\n     * @private\n     */\n    dirty: boolean;\n\n    #viewMatrix: FloatArrayParam;\n\n    /**\n     * @private\n     * @param camera\n     * @param id\n     * @param origin\n     */\n    constructor(camera: Camera, id: string, origin: FloatArrayParam) {\n        this.camera = camera;\n        this.id = id;\n        this.origin = new Float64Array(origin);\n        this.#viewMatrix = math.mat4();\n        this.useCount = 0;\n        this.dirty = true;\n    }\n\n    /**\n     * Gets the view matrix for this RTC coordinate system.\n     */\n    get viewMatrix(): FloatArrayParam {\n        if (this.dirty) {\n            createRTCViewMat(this.camera.viewMatrix, this.origin, this.#viewMatrix);\n            this.dirty = false;\n        }\n        return this.#viewMatrix;\n    }\n\n    /**\n     * Releases this RTCViewMat.\n     *\n     * Equivalent to calling {@link Camera.putRTCViewMat}.\n     */\n    release(): void {\n        this.camera.putRTCViewMat(this);\n    }\n}\n","import * as math from '../../math/index';\nimport {Component} from '../../Component';\nimport {Perspective} from './Perspective';\nimport {Ortho} from './Ortho';\nimport {Frustum} from './Frustum';\nimport {CustomProjection} from './CustomProjection';\nimport type {View} from \"../View\";\nimport type {FloatArrayParam} from \"../../math/index\";\nimport {RTCViewMat} from \"./RTCViewMat\";\nimport {EventEmitter} from \"../../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {\n    CustomProjectionType,\n    FrustumProjectionType,\n    OrthoProjectionType,\n    PerspectiveProjectionType\n} from \"../../constants\";\n\n\nconst tempVec3 = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\nconst tempVec3d = math.vec3();\nconst tempVec3e = math.vec3();\nconst tempVec3f = math.vec3();\nconst tempMat = math.mat4();\nconst tempMatb = math.mat4();\nconst eyeLookVec = math.vec3();\nconst eyeLookVecNorm = math.vec3();\nconst eyeLookOffset = math.vec3();\nconst offsetEye = math.vec3();\n\n\n/**\n * Controls the viewpoint and projection for a {@link View}.\n *\n * ## Summary\n *\n * * Located at {@link View.camera}\n * * Views are located at {@link WebViewer.views}\n * * Controls camera viewing and projection transforms\n * * Provides methods to pan, zoom and orbit\n * * Dynamically configurable World-space axis\n * * Has {@link Perspective}, {@link Ortho} and {@link Frustum} and {@link CustomProjection}, which you can dynamically switch between\n * * Switchable gimbal lock\n * * Can be flown to look at targets using the View's {@link CameraFlightAnimation}\n * * Can be animated along a path using a {@link CameraPathAnimation}\n *\n * ## Getting a View's Camera\n *\n * Let's create a {@link WebViewer} with a single {@link View}, from which we'll get a Camera:\n *\n * ````javascript\n * import {WebViewer} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer();\n *\n * const view = new View(viewer, {\n *      canvasId: \"myCanvas1\"\n * });\n *\n * const camera = view.camera;\n * ````\n *\n * ## Setting the Camera Position\n *\n * Get and set the Camera's absolute position:\n *\n * ````javascript\n * camera.eye = [-10,0,0];\n * camera.look = [-10,0,0];\n * camera.up = [0,1,0];\n * ````\n *\n * ## Camera View and Projection Matrices\n *\n * The Camera's *view matrix* transforms coordinates from World-space to View-space:\n *\n * ````javascript\n * var viewMatrix = camera.viewMatrix;\n * var viewNormalMatrix = camera.normalMatrix;\n * ````\n *\n * The Camera's *view normal matrix* transforms normal vectors from World-space to View-space:\n *\n * ````javascript\n * var viewNormalMatrix = camera.normalMatrix;\n * ````\n *\n * {@link Camera.onViewMatrix} fires whenever {@link Camera.viewMatrix} and {@link Camera.viewNormalMatrix} update:\n *\n * ````javascript\n * camera.onViewMatrix.subscribe((camera, matrix) => { ... });\n * ````\n *\n * ## Rotating the Camera\n *\n * Orbiting the {@link Camera.look} position:\n *\n * ````javascript\n * camera.orbitYaw(20.0);\n * camera.orbitPitch(10.0);\n * ````\n *\n * Perform a *first-person* rotation, in which we rotate {@link Camera.look} and {@link Camera.up} about {@link Camera.eye}:\n *\n * ````javascript\n * camera.yaw(5.0);\n * camera.pitch(-10.0);\n * ````\n *\n * ## Panning the Camera\n *\n * Pan along the Camera's local axis (ie. left/right, up/down, forward/backward):\n *\n * ````javascript\n * camera.pan([-20, 0, 10]);\n * ````\n *\n * ## Zooming the Camera\n *\n * Zoom to vary distance between {@link Camera.eye} and {@link Camera.look}:\n *\n * ````javascript\n * camera.zoom(-5); // Move five units closer\n * ````\n *\n * Get the current distance between {@link Camera.eye} and {@link Camera.look}:\n *\n * ````javascript\n * var distance = camera.eyeLookDist;\n * ````\n *\n * ## Projection\n *\n * The Camera has a Component to manage each projection type, which are: {@link Perspective}, {@link Ortho}\n * and {@link Frustum} and {@link CustomProjection}.\n *\n * You can configure those components at any time, regardless of which is currently active:\n *\n * The Camera has a {@link Perspective} to manage perspective\n * ````javascript\n *\n * // Set some properties on Perspective\n * camera.perspective.near = 0.4;\n * camera.perspective.fov = 45;\n *\n * // Set some properties on Ortho\n * camera.ortho.near = 0.8;\n * camera.ortho.far = 1000;\n *\n * // Set some properties on Frustum\n * camera.frustum.left = -1.0;\n * camera.frustum.right = 1.0;\n * camera.frustum.far = 1000.0;\n *\n * // Set the matrix property on CustomProjection\n * camera.customProjection.projMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n *\n * // Switch between the projection types\n * camera.projection = PerspectiveProjectionType; // Switch to perspective\n * camera.projection = \"frustum\"; // Switch to frustum\n * camera.projection = OrthoProjectionType; // Switch to ortho\n * camera.projection = \"customProjection\"; // Switch to custom\n * ````\n *\n * Camera provides the projection matrix for the currently active projection in {@link Camera.projMatrix}.\n *\n * Get the projection matrix:\n *\n * ````javascript\n * var projMatrix = camera.projMatrix;\n * ````\n *\n * Listen for projection matrix updates:\n *\n * ````javascript\n * camera.onProjMatrix((camera, matrix) => { ... });\n * ````\n *\n * ## Configuring World up direction\n *\n * We can dynamically configure the directions of the World-space coordinate system.\n *\n * Setting the +Y axis as World \"up\", +X as right and -Z as forwards (convention in some modeling software):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0,    // Right\n *     0, 1, 0,    // Up\n *     0, 0,-1     // Forward\n * ];\n * ````\n *\n * Setting the +Z axis as World \"up\", +X as right and -Y as \"up\" (convention in most CAD and BIM viewers):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0, // Right\n *     0, 0, 1, // Up\n *     0,-1, 0  // Forward\n * ];\n * ````\n *\n * The Camera has read-only convenience properties that provide each axis individually:\n *\n * ````javascript\n * var worldRight = camera.worldRight;\n * var worldForward = camera.worldForward;\n * var worldUp = camera.worldUp;\n * ````\n *\n * ## Gimbal locking\n *\n * By default, the Camera locks yaw rotation to pivot about the World-space \"up\" axis. We can dynamically lock and unlock that at any time:\n *\n * ````javascript\n * camera.gimbalLock = false; // Yaw rotation now happens about Camera's local Y-axis\n * camera.gimbalLock = true; // Yaw rotation now happens about World's \"up\" axis\n * ````\n *\n * See: <a href=\"https://en.wikipedia.org/wiki/Gimbal_lock\">https://en.wikipedia.org/wiki/Gimbal_lock</a>\n */\nclass Camera extends Component {\n\n    /**\n     * The View to which this Camera belongs.\n     *\n     * @property view\n     * @type {View}\n     * @final\n     */\n    public readonly view: View;\n\n    readonly #state: {\n        deviceMatrix: math.FloatArrayParam,\n        viewNormalMatrix: math.FloatArrayParam,\n        hasDeviceMatrix: boolean,\n        viewMatrix: math.FloatArrayParam,\n        inverseViewMatrix: math.FloatArrayParam,\n        eye: math.FloatArrayParam,\n        look: math.FloatArrayParam,\n        up: math.FloatArrayParam,\n        worldAxis: math.FloatArrayParam,\n        worldUp: math.FloatArrayParam,\n        worldRight: math.FloatArrayParam,\n        worldForward: math.FloatArrayParam,\n        gimbalLock: boolean,\n        constrainPitch: boolean,\n        projectionType: number\n    };\n\n    /**\n     * The perspective projection.\n     *\n     * The Camera uses this while {@link Camera.projection} equals {@link PerspectiveProjectionType}.\n     */\n    public readonly perspective: Perspective;\n\n    /**\n     * The orthographic projection.\n     *\n     * The Camera uses this while {@link Camera.projection} equals {@link OrthoProjectionType}.\n     */\n    public readonly ortho: Ortho;\n\n    /**\n     * The frustum projection.\n     *\n     * The Camera uses this while {@link Camera.projection} equals {@link FrustumProjectionType}.\n     */\n    public readonly frustum: Frustum;\n\n    /**\n     * The custom projection.\n     *\n     * The Camera uses this while {@link Camera.projection} equals {@link CustomProjectionType}.\n     */\n    public readonly customProjection: CustomProjection;\n\n    #activeProjection: Perspective | Ortho | Frustum | CustomProjection;\n\n    /**\n     * View matrices for relative-to-center (RTC) coordinate system origins.\n     *\n     * Created and destroyed with {@link Camera.getRTCViewMat} and {@link Camera.putRTCViewMat}.\n     */\n    public readonly rtcViewMats: { [key: string]: RTCViewMat };\n\n    /**\n     * Emits an event each time {@link Camera.projection} updates.\n     *\n     * ````javascript\n     * myView.camera.onProjType.subscribe((camera, projType) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onProjType: EventEmitter<Camera, number>;\n\n    /**\n     * Emits an event each time {@link Camera.viewMatrix} updates.\n     *\n     * ````javascript\n     * myView.camera.onViewMatrix.subscribe((camera, viewMatrix) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onViewMatrix: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link Camera.projMatrix} updates.\n     *\n     * ````javascript\n     * myView.camera.onProjMatrix.subscribe((camera, projMatrix) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onProjMatrix: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link Camera.worldAxis} updates.\n     *\n     * ````javascript\n     * myView.camera.onWorldAxis.subscribe((camera, worldAxis) => { ... });\n     * ````\n     *\n     * @event\n     */\n    readonly onWorldAxis: EventEmitter<Camera, FloatArrayParam>;\n\n    /**\n     * @private\n     */\n    constructor(view: View, cfg: {\n        eye?: math.FloatArrayParam;\n        look?: math.FloatArrayParam,\n        up?: math.FloatArrayParam;\n        deviceMatrix?: math.FloatArrayParam;\n        gimbalLock?: boolean;\n        worldAxis?: math.FloatArrayParam;\n        constrainPitch?: boolean;\n        projectionType?: number\n    } = {}) {\n\n        super(view, cfg);\n\n        this.onProjType = new EventEmitter(new EventDispatcher<Camera, number>());\n        this.onViewMatrix = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n        this.onProjMatrix = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n        this.onWorldAxis = new EventEmitter(new EventDispatcher<Camera, FloatArrayParam>());\n\n        this.view = view;\n\n        this.#state = {\n            eye: math.vec3(cfg.eye || [0, 0, 10]),\n            look: math.vec3(cfg.look || [0, 0, 0]),\n            up: math.vec3(cfg.up || [0, 1, 0]),\n            worldUp: math.vec3([0, 1, 0]),\n            worldRight: math.vec3([1, 0, 0]),\n            worldForward: math.vec3([0, 0, -1]),\n            worldAxis: new Float32Array(cfg.worldAxis || [1, 0, 0, 0, 1, 0, 0, 0, 1]),\n            gimbalLock: cfg.gimbalLock !== false,\n            constrainPitch: cfg.constrainPitch === true,\n            projectionType: cfg.projectionType || PerspectiveProjectionType,\n            deviceMatrix: cfg.deviceMatrix ? math.mat4(cfg.deviceMatrix) : math.identityMat4(),\n            hasDeviceMatrix: !!cfg.deviceMatrix,\n            viewMatrix: math.mat4(),\n            viewNormalMatrix: math.mat4(),\n            inverseViewMatrix: math.mat4()\n        };\n\n        this.rtcViewMats = {};\n\n        this.perspective = new Perspective(this);\n        this.ortho = new Ortho(this);\n        this.frustum = new Frustum(this);\n        this.customProjection = new CustomProjection(this);\n\n        this.#activeProjection = this.perspective;\n\n        this.perspective.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === PerspectiveProjectionType) {\n                this.onProjMatrix.dispatch(this, this.perspective.projMatrix);\n            }\n        });\n\n        this.ortho.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === OrthoProjectionType) {\n                this.onProjMatrix.dispatch(this, this.ortho.projMatrix);\n            }\n        });\n\n        this.frustum.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === FrustumProjectionType) {\n                this.onProjMatrix.dispatch(this, this.frustum.projMatrix);\n            }\n        });\n\n        this.customProjection.onProjMatrix.subscribe(() => {\n            if (this.#state.projectionType === CustomProjectionType) {\n                this.onProjMatrix.dispatch(this, this.customProjection.projMatrix);\n            }\n        });\n    }\n\n\n    /**\n     * Gets the currently active projection for this Camera.\n     *\n     * The currently active project is selected with {@link Camera.projection}.\n     *\n     * @returns {Perspective|Ortho|Frustum|CustomProjection} The currently active projection is active.\n     */\n    get project(): Perspective | Ortho | Frustum | CustomProjection {\n        return this.#activeProjection;\n    }\n\n    /**\n     * Gets the position of the Camera's eye.\n     *\n     * Default vale is ````[0,0,10]````.\n     *\n     * @type {Number[]} New eye position.\n     */\n    get eye(): math.FloatArrayParam {\n        return this.#state.eye;\n    }\n\n    /**\n     * Sets the position of the Camera's eye.\n     *\n     * Default value is ````[0,0,10]````.\n     *\n     * @emits \"eye\" event on change, with the value of this property.\n     * @type {Number[]} New eye position.\n     */\n    set eye(eye: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#state.eye.set(eye);\n        this.setDirty(); // Ensure matrix built on next \"tick\"\n    }\n\n    /**\n     * Gets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @returns {Number[]} Camera look position.\n     */\n    get look(): math.FloatArrayParam {\n        return this.#state.look;\n    }\n\n    /**\n     * Sets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @param look Camera look position.\n     */\n    set look(look: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#state.look.set(look);\n        this.setDirty(); // Ensure matrix built on next \"tick\"\n    }\n\n    /**\n     * Gets the direction of this Camera's {@link Camera.up} vector.\n     *\n     * @returns {Number[]} Direction of \"up\".\n     */\n    get up(): math.FloatArrayParam {\n        return this.#state.up;\n    }\n\n    /**\n     * Sets the direction of this Camera's {@link Camera.up} vector.\n     *\n     * @param up Direction of \"up\".\n     */\n    set up(up: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#state.up.set(up);\n        this.setDirty();\n    }\n\n    /**\n     * Gets the direction of World-space \"up\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[0,1,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldUp(): math.FloatArrayParam {\n        return this.#state.worldUp;\n    }\n\n    /**\n     * Gets the direction of World-space \"right\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[1,0,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldRight(): math.FloatArrayParam {\n        return this.#state.worldRight;\n    }\n\n    /**\n     * Gets the direction of World-space \"forwards\".\n     *\n     * This is set by {@link Camera.worldAxis}.\n     *\n     * Default value is ````[0,0,1]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldForward(): math.FloatArrayParam {\n        return this.#state.worldForward;\n    }\n\n    /**\n     * Gets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera.up} and {@link Camera.worldUp} is less than one degree.\n     *\n     * Default value is ````false````.\n     *\n     * @returns {Boolean} ````true```` if pitch rotation is currently constrained.\n     */\n    get constrainPitch(): boolean {\n        return this.#state.constrainPitch;\n    }\n\n    /**\n     * Sets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera.up} and {@link Camera.worldUp} is less than one degree.\n     *\n     * Default value is ````false````.\n     *\n     * @param value Set ````true```` to contrain pitch rotation.\n     */\n    set constrainPitch(value: boolean) {\n        this.#state.constrainPitch = value;\n    }\n\n    /**\n     * Gets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * @returns {Boolean} Returns ````true```` if gimbal is locked.\n     */\n    get gimbalLock(): boolean {\n        return this.#state.gimbalLock;\n    }\n\n    /**\n     * Sets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * @params {Boolean} gimbalLock Set true to lock gimbal.\n     */\n    set gimbalLock(value: boolean) {\n        this.#state.gimbalLock = value;\n    }\n\n    /**\n     * Gets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @returns {Number[]} The current World coordinate axis.\n     */\n    get worldAxis(): math.FloatArrayParam {\n        return this.#state.worldAxis;\n    }\n\n    /**\n     * Sets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @param axis The new Wworld coordinate axis.\n     */\n    set worldAxis(axis: math.FloatArrayParam) {\n        const state = this.#state;\n        // @ts-ignore\n        state.worldAxis.set(axis);\n        state.worldRight[0] = state.worldAxis[0];\n        state.worldRight[1] = state.worldAxis[1];\n        state.worldRight[2] = state.worldAxis[2];\n        state.worldUp[0] = state.worldAxis[3];\n        state.worldUp[1] = state.worldAxis[4];\n        state.worldUp[2] = state.worldAxis[5];\n        state.worldForward[0] = state.worldAxis[6];\n        state.worldForward[1] = state.worldAxis[7];\n        state.worldForward[2] = state.worldAxis[8];\n        this.onWorldAxis.dispatch(this, state.worldAxis);\n    }\n\n    /**\n     * Gets an optional matrix to premultiply into {@link Camera.projMatrix} matrix.\n     *\n     * @returns {Number[]} The matrix.\n     */\n    get deviceMatrix(): math.FloatArrayParam {\n        // @ts-ignore\n        return this.#state.deviceMatrix;\n    }\n\n    /**\n     * Sets an optional matrix to premultiply into {@link Camera.projMatrix} matrix.\n     *\n     * This is intended to be used for stereo rendering with WebVR etc.\n     *\n     * @param matrix The matrix.\n     */\n    set deviceMatrix(matrix: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#state.deviceMatrix.set(matrix || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.#state.hasDeviceMatrix = !!matrix;\n        this.setDirty();\n    }\n\n    /**\n     * Gets if the World-space X-axis is \"up\".\n     * @returns {boolean}\n     */\n    get xUp(): boolean {\n        return this.#state.worldUp[0] > this.#state.worldUp[1] && this.#state.worldUp[0] > this.#state.worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Y-axis is \"up\".\n     * @returns {boolean}\n     */\n    get yUp(): boolean {\n        return this.#state.worldUp[1] > this.#state.worldUp[0] && this.#state.worldUp[1] > this.#state.worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Z-axis is \"up\".\n     * @returns {boolean}\n     */\n    get zUp(): boolean {\n        return this.#state.worldUp[2] > this.#state.worldUp[0] && this.#state.worldUp[2] > this.#state.worldUp[1];\n    }\n\n    /**\n     * Gets distance from {@link Camera.look} to {@link Camera.eye}.\n     *\n     * @returns {Number} The distance.\n     */\n    get eyeLookDist(): number {\n        return math.lenVec3(math.subVec3(this.#state.look, this.#state.eye, tempVec3));\n    }\n\n    /**\n     * Gets the Camera's viewing transformation matrix.\n     *\n     * @returns {Number[]} The viewing transform matrix.\n     */\n    get viewMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.viewMatrix;\n    }\n\n    /**\n     * The Camera's viewing normal transformation matrix.\n     *\n     * @returns {Number[]} The viewing normal transform matrix.\n     */\n    get viewNormalMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.viewNormalMatrix;\n    }\n\n    /**\n     * Gets the inverse of the Camera's viewing transform matrix.\n     *\n     * This has the same value as {@link Camera.viewNormalMatrix}.\n     *\n     * @returns {Number[]} The inverse viewing transform matrix.\n     */\n    get inverseViewMatrix(): math.FloatArrayParam {\n        if (this.dirty) {\n            this.cleanIfDirty();\n        }\n        return this.#state.inverseViewMatrix;\n    }\n\n    /**\n     * Gets the Camera's projection transformation projMatrix.\n     *\n     * @returns {Number[]} The projection matrix.\n     */\n    get projMatrix(): math.FloatArrayParam {\n        // @ts-ignore\n        return this[this.projection].projMatrix;\n    }\n\n    /**\n     * Gets the active projection type.\n     *\n     * Possible values are ````PerspectiveProjectionType````, ````OrthoProjectionType````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````PerspectiveProjectionType````.\n     *\n     * @returns {number} Identifies the active projection type.\n     */\n    get projection(): number {\n        return this.#state.projectionType;\n    }\n\n    /**\n     * Sets the active projection type.\n     *\n     * Accepted values are ````PerspectiveProjectionType````, ````OrthoProjectionType````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````PerspectiveProjectionType````.\n     *\n     * @param value Identifies the active projection type.\n     */\n    set projection(value: number | undefined) {\n        value = value || PerspectiveProjectionType;\n        if (this.#state.projectionType === value) {\n            return;\n        }\n        if (value === PerspectiveProjectionType) {\n            this.#activeProjection = this.perspective;\n        } else if (value === OrthoProjectionType) {\n            this.#activeProjection = this.ortho;\n        } else if (value === FrustumProjectionType) {\n            this.#activeProjection = this.frustum;\n        } else if (value === CustomProjectionType) {\n            this.#activeProjection = this.customProjection;\n        } else {\n            this.error(\"Unsupported value for 'projection': \" + value + \" defaulting to PerspectiveProjectionType\");\n            this.#activeProjection = this.perspective;\n            value = PerspectiveProjectionType;\n        }\n        this.#activeProjection.clean();\n        this.#state.projectionType = value;\n        this.view.redraw();\n        this.clean(); // Need to rebuild lookat matrix with full eye, look & up\n        this.onProjType.dispatch(this, this.#state.projectionType);\n        this.onProjMatrix.dispatch(this, this.#activeProjection.projMatrix);\n    }\n\n    clean() {\n        const state = this.#state;\n        // In ortho mode, build the view matrix with an eye position that's translated\n        // well back from look, so that the front sectionPlane plane doesn't unexpectedly cut\n        // the front off the view (not a problem with perspective, since objects close enough\n        // to be clipped by the front plane are usually too big to see anything of their cross-sections).\n        let eye;\n        if (this.projection === OrthoProjectionType) {\n            math.subVec3(this.#state.eye, this.#state.look, eyeLookVec);\n            math.normalizeVec3(eyeLookVec, eyeLookVecNorm);\n            math.mulVec3Scalar(eyeLookVecNorm, 1000.0, eyeLookOffset);\n            math.addVec3(this.#state.look, eyeLookOffset, offsetEye);\n            eye = offsetEye;\n        } else {\n            eye = this.#state.eye;\n        }\n        if (state.hasDeviceMatrix) {\n            math.lookAtMat4v(eye, this.#state.look, this.#state.up, tempMatb);\n            math.mulMat4(state.deviceMatrix, tempMatb, state.viewMatrix);\n        } else {\n            math.lookAtMat4v(eye, this.#state.look, this.#state.up, state.viewMatrix);\n        }\n        math.inverseMat4(this.#state.viewMatrix, this.#state.inverseViewMatrix);\n        math.transposeMat4(this.#state.inverseViewMatrix, this.#state.viewNormalMatrix);\n        this.#invalidateRTCViewMatrices();\n        this.view.redraw();\n        this.onViewMatrix.dispatch(this, this.#state.viewMatrix);\n    }\n\n    /**\n     * Rotates {@link Camera.eye} about {@link Camera.look}, around the {@link Camera.up} vector\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    orbitYaw(angleInc: number) {\n        let lookEyeVec = math.subVec3(this.#state.eye, this.#state.look, tempVec3);\n        math.rotationMat4v(angleInc * 0.0174532925, this.#state.gimbalLock ? this.#state.worldUp : this.#state.up, tempMat);\n        lookEyeVec = math.transformPoint3(tempMat, lookEyeVec, tempVec3b);\n        this.eye = math.addVec3(this.#state.look, lookEyeVec, tempVec3c); // Set eye position as 'look' plus 'eye' vector\n        this.up = math.transformPoint3(tempMat, this.#state.up, tempVec3d); // Rotate 'up' vector\n    }\n\n    /**\n     * Rotates {@link Camera.eye} about {@link Camera.look} around the right axis (orthogonal to {@link Camera.up} and \"look\").\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    orbitPitch(angleInc: number) {\n        if (this.#state.constrainPitch) {\n            angleInc = math.dotVec3(this.#state.up, this.#state.worldUp) / math.DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let eye2 = math.subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const left = math.cross3Vec3(math.normalizeVec3(eye2, tempVec3b), math.normalizeVec3(this.#state.up, tempVec3c));\n        math.rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        eye2 = math.transformPoint3(tempMat, eye2, tempVec3d);\n        this.up = math.transformPoint3(tempMat, this.#state.up, tempVec3e);\n        this.eye = math.addVec3(eye2, this.#state.look, tempVec3f);\n    }\n\n    /**\n     * Rotates {@link Camera.look} about {@link Camera.eye}, around the {@link Camera.up} vector.\n     *\n     * @param angleInc Angle of rotation in degrees\n     */\n    yaw(angleInc: number) {\n        let look2 = math.subVec3(this.#state.look, this.#state.eye, tempVec3);\n        math.rotationMat4v(angleInc * 0.0174532925, this.#state.gimbalLock ? this.#state.worldUp : this.#state.up, tempMat);\n        look2 = math.transformPoint3(tempMat, look2, tempVec3b);\n        this.look = math.addVec3(look2, this.#state.eye, tempVec3c);\n        if (this.#state.gimbalLock) {\n            this.up = math.transformPoint3(tempMat, this.#state.up, tempVec3d);\n        }\n    }\n\n    /**\n     * Rotates {@link Camera.look} about {@link Camera.eye}, around the right axis (orthogonal to {@link Camera.up} and \"look\").\n\n     * @param angleInc Angle of rotation in degrees\n     */\n    pitch(angleInc: number) {\n        if (this.#state.constrainPitch) {\n            angleInc = math.dotVec3(this.#state.up, this.#state.worldUp) / math.DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let look2 = math.subVec3(this.#state.look, this.#state.eye, tempVec3);\n        const left = math.cross3Vec3(math.normalizeVec3(look2, tempVec3b), math.normalizeVec3(this.#state.up, tempVec3c));\n        math.rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        this.up = math.transformPoint3(tempMat, this.#state.up, tempVec3f);\n        look2 = math.transformPoint3(tempMat, look2, tempVec3d);\n        this.look = math.addVec3(look2, this.#state.eye, tempVec3e);\n    }\n\n    /**\n     * Pans the Camera along its local X, Y and Z axis.\n     *\n     * @param pan The pan vector\n     */\n    pan(pan: math.FloatArrayParam) {\n        const eye2 = math.subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const vec = [0, 0, 0];\n        let v;\n        if (pan[0] !== 0) {\n            const left = math.cross3Vec3(math.normalizeVec3(eye2, []), math.normalizeVec3(this.#state.up, tempVec3b));\n            v = math.mulVec3Scalar(left, pan[0]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[1] !== 0) {\n            v = math.mulVec3Scalar(math.normalizeVec3(this.#state.up, tempVec3c), pan[1]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[2] !== 0) {\n            v = math.mulVec3Scalar(math.normalizeVec3(eye2, tempVec3d), pan[2]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        this.eye = math.addVec3(this.#state.eye, vec, tempVec3e);\n        this.look = math.addVec3(this.#state.look, vec, tempVec3f);\n    }\n\n    /**\n     * Increments/decrements the Camera's zoom factor, which is the distance between {@link Camera.eye} and {@link Camera.look}.\n     *\n     * @param delta Zoom factor increment.\n     */\n    zoom(delta: number) {\n        const vec = math.subVec3(this.#state.eye, this.#state.look, tempVec3);\n        const lenLook = Math.abs(math.lenVec3(vec));\n        const newLenLook = Math.abs(lenLook + delta);\n        if (newLenLook < 0.5) {\n            return;\n        }\n        const dir = math.normalizeVec3(vec, tempVec3c);\n        this.eye = math.addVec3(this.#state.look, math.mulVec3Scalar(dir, newLenLook), tempVec3d);\n    }\n\n    #invalidateRTCViewMatrices(): void {\n        Object.values(this.rtcViewMats).forEach((rtcViewMat) => {\n            rtcViewMat.dirty = true;\n        });\n    }\n\n    /**\n     * Gets an RTC view matrix for the given relative-to-center (RTC) coordinate system origin.\n     *\n     * The RTCViewMat returned by this method will provide a dynamically-synchronized\n     * version of {@link Camera.viewMatrix} for the given RTC origin. Whenever {@link Camera.viewMatrix}\n     * updates, {@link RTCViewMat.viewMatrix} will update also.\n     *\n     * Make sure to release it with {@link putRTCViewMat} or {@link RTCViewMat.release} when you no longer need it.\n     *\n     * @param origin The RTC coordinate origin.\n     * @returns An RTC view matrix for the given RTC coordinate origin.\n     */\n    getRTCViewMat(origin: FloatArrayParam): RTCViewMat {\n        const id = `${origin[0]}_${origin[1]}_${origin[2]}`;\n        let rtcViewMat = this.rtcViewMats[id];\n        if (!rtcViewMat) {\n            rtcViewMat = new RTCViewMat(this, id, origin);\n            this.rtcViewMats[id] = rtcViewMat;\n        }\n        rtcViewMat.useCount++;\n        return rtcViewMat;\n    }\n\n    /**\n     * Releases an RTC view matrix.\n     *\n     * @param rtcViewMat The RTC view matrix.\n     */\n    putRTCViewMat(rtcViewMat: RTCViewMat): void {\n        rtcViewMat.useCount--;\n        if (rtcViewMat.useCount <= 0) {\n            delete this.rtcViewMats[rtcViewMat.id];\n        }\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this.onProjType.clear();\n        this.onViewMatrix.clear();\n        this.onProjMatrix.clear();\n        this.onWorldAxis.clear();\n    }\n}\n\nexport {Camera};\n","import * as math from '../../math/index';\nimport {scheduler} from '../../scheduler';\nimport {Component} from '../../Component';\nimport type {View} from \"../View\";\nimport type {Camera} from \"./Camera\";\nimport {CustomProjectionType, OrthoProjectionType, PerspectiveProjectionType} from \"../../constants\";\nimport {EventDispatcher, IEvent} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./../../EventEmitter\";\n\nconst tempVec3 = math.vec3();\nconst newLook = math.vec3();\nconst newEye = math.vec3();\nconst newUp = math.vec3();\nconst newLookEyeVec = math.vec3();\n\n/**\n * Animates its {@link View|View's} {@link Camera} to look at specified objects, boundaries or locations.\n *\n * ## Summary\n *\n * * Belongs to a {@link View}, and is located at {@link View.cameraFlight}\n * * Controls the View's {@link Camera}, which is located at {@link View.camera}\n * * Navigates the Camera to look at a {@link SceneModel}, {@link SceneObject} or boundary\n * * Navigates the Camera to an explicit position given as ````eye````, ````look```` and ````up```` vectors\n * * Jumps or flies the Camera\n * * Smoothly transitions between projections\n */\nclass CameraFlightAnimation extends Component {\n\n    /**\n     * The View that owns this CameraFlightAnimation.\n     */\n    public readonly view: View;\n\n    /**\n     * The Camera controlled by this CameraFlightAnimation.\n     */\n    public readonly camera: Camera;\n\n    #duration: number;\n    #look1: math.FloatArrayParam;\n    #eye1: math.FloatArrayParam;\n    #up1: math.FloatArrayParam;\n    #look2: math.FloatArrayParam;\n    #eye2: math.FloatArrayParam;\n    #up2: math.FloatArrayParam;\n    #orthoScale1: number;\n    #orthoScale2: number;\n    #fit: boolean;\n    #trail: boolean;\n    #flying: boolean;\n    #flyEyeLookUp: boolean;\n    #flyingEye: boolean;\n    #flyingLook: boolean;\n    #callback: any;\n    #callbackScope: any;\n    #time1: number | null;\n    #time2: number | null;\n    easing: boolean;\n    #flyingEyeLookUp: boolean;\n    #fitFOV: number;\n    #projection2: number;\n    #projMatrix1: math.FloatArrayParam;\n    #projMatrix2: math.FloatArrayParam;\n\n\n    /**\n     * Emits an event each time the animation starts.\n     *\n     * @event\n     */\n    readonly onStarted: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     * Emits an event each time the animation stops.\n     *\n     * @event\n     */\n    readonly onStopped: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     * Emits an event each time the animation stops.\n     *\n     * @event\n     */\n    readonly onCancelled: EventEmitter<CameraFlightAnimation, null>;\n\n    /**\n     @private\n     */\n    constructor(view: View, cfg?: {\n        duration: number\n    }) {\n\n        super(view, cfg);\n\n        this.view = view;\n        this.camera = view.camera;\n\n        this.#look1 = math.vec3();\n        this.#eye1 = math.vec3();\n        this.#up1 = math.vec3();\n        this.#look2 = math.vec3();\n        this.#eye2 = math.vec3();\n        this.#up2 = math.vec3();\n        this.#orthoScale1 = 1;\n        this.#orthoScale2 = 1;\n        this.#flying = false;\n        this.#flyEyeLookUp = false;\n        this.#flyingEye = false;\n        this.#flyingLook = false;\n        this.#callback = null;\n        this.#callbackScope = null;\n        this.#time1 = null;\n        this.#time2 = null;\n        this.easing = true;\n        this.#trail = false;\n        this.#fit = true;\n        this.#duration = 500;\n\n        this.onStarted = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n        this.onStopped = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n        this.onCancelled = new EventEmitter(new EventDispatcher<CameraFlightAnimation, null>());\n    }\n\n    /**\n     * Flies the {@link Camera} to a target.\n     *\n     *  * When the target is a boundary, the {@link Camera} will fly towards the target and stop when the target fills most of the canvas.\n     *  * When the target is an explicit {@link Camera} position, given as ````eye````, ````look```` and ````up````, then CameraFlightAnimation will interpolate the {@link Camera} to that target and stop there.\n     *\n     * @param {Object|Component} [params=Scene] Either a parameters object or a {@link Component} subtype that has\n     * an AABB. Defaults to the {@link Scene}, which causes the {@link Camera} to fit the Scene in view.\n     * @param [params.arc=0] Factor in range ````[0..1]```` indicating how much the {@link Camera.eye} position\n     * will swing away from its {@link Camera.look} position as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to. Defaults to the entire {@link Scene}.\n     * @param [params.aabb] World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param [params.eye] Position to fly the eye position to.\n     * @param [params.look] Position to fly the look position to.\n     * @param [params.up] Position to fly the up vector to.\n     * @param [params.projection] Projection type to transition into as we fly. Can be any of the values of {@link Camera.projection}.\n     * @param [params.fit=true] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation.fit}.\n     * @param [params.fitFOV] How much of field-of-view, in degrees, that a target {@link SceneObject} or its AABB should\n     * fill the canvas on arrival. Overrides {@link CameraFlightAnimation.fitFOV}.\n     * @param [params.duration] Flight duration in seconds.  Overrides {@link CameraFlightAnimation.duration}.\n     * @param [params.orthoScale] Animate the Camera's orthographic scale to this target value. See {@link Ortho.scale}.\n     * @param {Function} [callback] Callback fired on arrival.\n     * @param {Object} [scope] Optional scope for callback.\n     */\n    flyTo(params: {\n              projection?: number;\n              orthoScale?: number;\n              aabb?: math.FloatArrayParam;\n              length?: number;\n              eye?: math.FloatArrayParam;\n              look?: math.FloatArrayParam;\n              up?: math.FloatArrayParam;\n              poi?: math.FloatArrayParam;\n              fitFOV?: number;\n              duration?: number;\n          } = {},\n          callback: {\n              (): void; call: (arg0: any) => void;\n          }) {\n\n        if (this.#flying) {\n            this.stop();\n        }\n\n        this.#flying = false;\n        this.#flyingEye = false;\n        this.#flyingLook = false;\n        this.#flyingEyeLookUp = false;\n\n        this.#callback = callback;\n\n        const camera = this.camera;\n        const flyToProjection = (!!params.projection) && (params.projection !== camera.projection);\n\n        this.#eye1[0] = camera.eye[0];\n        this.#eye1[1] = camera.eye[1];\n        this.#eye1[2] = camera.eye[2];\n\n        this.#look1[0] = camera.look[0];\n        this.#look1[1] = camera.look[1];\n        this.#look1[2] = camera.look[2];\n\n        this.#up1[0] = camera.up[0];\n        this.#up1[1] = camera.up[1];\n        this.#up1[2] = camera.up[2];\n\n        this.#orthoScale1 = camera.ortho.scale;\n        this.#orthoScale2 = params.orthoScale || this.#orthoScale1;\n\n        let aabb: math.FloatArrayParam;\n        let eye: math.FloatArrayParam;\n        let look: math.FloatArrayParam;\n        let up: math.FloatArrayParam;\n\n        if (params.aabb) {\n            aabb = params.aabb;\n\n        } else if ((params.eye && params.look) || params.up) {\n            // @ts-ignore\n            eye = params.eye;\n            // @ts-ignore\n            look = params.look;\n            // @ts-ignore\n            up = params.up;\n\n        } else if (params.eye) {\n            eye = params.eye;\n\n        } else if (params.look) {\n            look = params.look;\n\n        } else {\n            if (!flyToProjection) {\n                aabb = this.viewer.scene.aabb;\n            }\n        }\n\n        const poi = params.poi;\n        // @ts-ignore\n        if (aabb) {\n\n            if (aabb[3] < aabb[0] || aabb[4] < aabb[1] || aabb[5] < aabb[2]) { // Don't fly to an inverted boundary\n                return;\n            }\n\n            if (aabb[3] === aabb[0] && aabb[4] === aabb[1] && aabb[5] === aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            aabb = aabb.slice();\n            const aabbCenter = math.boundaries.getAABB3Center(aabb);\n\n            this.#look2 = poi || aabbCenter;\n\n            const eyeLookVec = math.subVec3(this.#eye1, this.#look1, tempVec3);\n            const eyeLookVecNorm = math.normalizeVec3(eyeLookVec);\n            const diag = poi ? math.boundaries.getAABB3DiagPoint(aabb, poi) : math.boundaries.getAABB3Diag(aabb);\n            const fitFOV = params.fitFOV || this.#fitFOV;\n            const sca = Math.abs(diag / Math.tan(fitFOV * math.DEGTORAD));\n\n            this.#orthoScale2 = diag * 1.1;\n\n            this.#eye2[0] = this.#look2[0] + (eyeLookVecNorm[0] * sca);\n            this.#eye2[1] = this.#look2[1] + (eyeLookVecNorm[1] * sca);\n            this.#eye2[2] = this.#look2[2] + (eyeLookVecNorm[2] * sca);\n\n            this.#up2[0] = this.#up1[0];\n            this.#up2[1] = this.#up1[1];\n            this.#up2[2] = this.#up1[2];\n\n            this.#flyingEyeLookUp = true;\n\n            // @ts-ignore\n        } else if (eye || look || up) {\n            // @ts-ignore\n            this.#flyingEyeLookUp = !!eye && !!look && !!up;\n            // @ts-ignore\n            this.#flyingEye = !!eye && !look;\n            // @ts-ignore\n            this.#flyingLook = !!look && !eye;\n            // @ts-ignore\n            if (eye) {\n                this.#eye2[0] = eye[0];\n                this.#eye2[1] = eye[1];\n                this.#eye2[2] = eye[2];\n            }\n            // @ts-ignore\n            if (look) {\n                this.#look2[0] = look[0];\n                this.#look2[1] = look[1];\n                this.#look2[2] = look[2];\n            }\n            // @ts-ignore\n            if (up) {\n                this.#up2[0] = up[0];\n                this.#up2[1] = up[1];\n                this.#up2[2] = up[2];\n            }\n        }\n\n        if (flyToProjection) {\n\n            if (params.projection === OrthoProjectionType && camera.projection !== OrthoProjectionType) {\n                this.#projection2 = OrthoProjectionType;\n                this.#projMatrix1 = camera.projMatrix.slice();\n                this.#projMatrix2 = camera.ortho.projMatrix.slice();\n                camera.projection = CustomProjectionType;\n            }\n\n            if (params.projection === PerspectiveProjectionType && camera.projection !== PerspectiveProjectionType) {\n                this.#projection2 = PerspectiveProjectionType;\n                this.#projMatrix1 = camera.projMatrix.slice();\n                this.#projMatrix2 = camera.perspective.projMatrix.slice();\n                camera.projection = CustomProjectionType;\n            }\n        } else {\n            // @ts-ignore\n            this.#projection2 = null;\n        }\n\n        this.onStarted.dispatch(this, null);\n\n        this.#time1 = Date.now();\n        this.#time2 = this.#time1 + (params.duration ? params.duration * 1000 : this.#duration);\n\n        this.#flying = true; // False as soon as we stop\n\n        scheduler.scheduleTask(this.#update, this);\n    }\n\n    /**\n     * Jumps the {@link View}'s {@link Camera} to the given target.\n     *\n     * * When the target is a boundary, this CameraFlightAnimation will position the {@link Camera} at where the target fills most of the canvas.\n     * * When the target is an explicit {@link Camera} position, given as ````eye````, ````look```` and ````up```` vectors, then this CameraFlightAnimation will jump the {@link Camera} to that target.\n     *\n     * @param {*|Component} params  Either a parameters object or a {@link Component} subtype that has a World-space AABB.\n     * @param [params.arc=0]  Factor in range [0..1] indicating how much the {@link Camera.eye} will swing away from its {@link Camera.look} as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to.\n     * @param [params.aabb]  World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param [params.eye] Position to fly the eye position to.\n     * @param [params.look]  Position to fly the look position to.\n     * @param [params.up] Position to fly the up vector to.\n     * @param [params.projection] Projection type to transition into. Can be any of the values of {@link Camera.projection}.\n     * @param [params.fitFOV] How much of field-of-view, in degrees, that a target {@link SceneObject} or its AABB should fill the canvas on arrival. Overrides {@link CameraFlightAnimation.fitFOV}.\n     * @param [params.fit] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation.fit}.\n     */\n    jumpTo(params: any) {\n        this.#jumpTo(params);\n    }\n\n    #jumpTo(params: any) {\n\n        if (this.#flying) {\n            this.stop();\n        }\n\n        const camera = this.camera;\n\n        let aabb: math.FloatArrayParam;\n        let newEye: math.FloatArrayParam;\n        let newLook: math.FloatArrayParam;\n        let newUp: math.FloatArrayParam;\n\n        if (params.aabb) { // Boundary3D\n            aabb = params.aabb;\n        } else if (params.eye || params.look || params.up) { // Camera pose\n            newEye = params.eye;\n            newLook = params.look;\n            newUp = params.up;\n        } else {\n            aabb = this.viewer.scene.aabb;\n        }\n\n        const poi = params.poi;\n        // @ts-ignore\n        if (aabb) {\n\n            if (aabb[3] <= aabb[0] || aabb[4] <= aabb[1] || aabb[5] <= aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            const diag = poi ? math.boundaries.getAABB3DiagPoint(aabb, poi) : math.boundaries.getAABB3Diag(aabb);\n            // @ts-ignore\n            newLook = poi || math.boundaries.getAABB3Center(aabb, newLook);\n\n            if (this.#trail) {\n                math.subVec3(camera.look, newLook, newLookEyeVec);\n            } else {\n                math.subVec3(camera.eye, camera.look, newLookEyeVec);\n            }\n\n            math.normalizeVec3(newLookEyeVec);\n            let dist;\n            const fit = (params.fit !== undefined) ? params.fit : this.#fit;\n\n            if (fit) {\n                dist = Math.abs((diag) / Math.tan((params.fitFOV || this.#fitFOV) * math.DEGTORAD));\n\n            } else {\n                dist = math.lenVec3(math.subVec3(camera.eye, camera.look, tempVec3));\n            }\n\n            math.mulVec3Scalar(newLookEyeVec, dist);\n\n            camera.eye = math.addVec3(newLook, newLookEyeVec, tempVec3);\n            camera.look = newLook;\n\n            this.camera.ortho.scale = diag * 1.1;\n            // @ts-ignore\n        } else if (newEye || newLook || newUp) {\n            // @ts-ignore\n            if (newEye) {\n                camera.eye = newEye;\n            } // @ts-ignore\n            if (newLook) {\n                camera.look = newLook;\n            } // @ts-ignore\n            if (newUp) {\n                camera.up = newUp;\n            }\n        }\n\n        if (params.projection) {\n            camera.projection = params.projection;\n        }\n    }\n\n    #update() {\n        if (!this.#flying) {\n            return;\n        }\n        const time = Date.now();\n        // @ts-ignore\n        let t = (time - this.#time1) / (this.#time2 - this.#time1);\n        const stopping = (t >= 1);\n\n        if (t > 1) {\n            t = 1;\n        }\n\n        const tFlight = this.easing ? CameraFlightAnimation.#ease(t, 0, 1, 1) : t;\n        const camera = this.camera;\n\n        if (this.#flyingEye || this.#flyingLook) {\n\n            if (this.#flyingEye) {\n                math.subVec3(camera.eye, camera.look, newLookEyeVec);\n                camera.eye = math.lerpVec3(tFlight, 0, 1, this.#eye1, this.#eye2, newEye);\n                camera.look = math.subVec3(newEye, newLookEyeVec, newLook);\n            } else if (this.#flyingLook) {\n                camera.look = math.lerpVec3(tFlight, 0, 1, this.#look1, this.#look2, newLook);\n                camera.up = math.lerpVec3(tFlight, 0, 1, this.#up1, this.#up2, newUp);\n            }\n\n        } else if (this.#flyingEyeLookUp) {\n\n            camera.eye = math.lerpVec3(tFlight, 0, 1, this.#eye1, this.#eye2, newEye);\n            camera.look = math.lerpVec3(tFlight, 0, 1, this.#look1, this.#look2, newLook);\n            camera.up = math.lerpVec3(tFlight, 0, 1, this.#up1, this.#up2, newUp);\n        }\n\n        if (this.#projection2) {\n            const tProj = (this.#projection2 === OrthoProjectionType) ? CameraFlightAnimation.#easeOutExpo(t, 0, 1, 1) : CameraFlightAnimation.#easeInCubic(t, 0, 1, 1);\n            camera.customProjection.projMatrix = math.lerpMat4(tProj, 0, 1, this.#projMatrix1, this.#projMatrix2);\n\n        } else {\n            camera.ortho.scale = this.#orthoScale1 + (t * (this.#orthoScale2 - this.#orthoScale1));\n        }\n\n        if (stopping) {\n            camera.ortho.scale = this.#orthoScale2;\n            this.stop();\n            return;\n        }\n        scheduler.scheduleTask(this.#update, this); // Keep flying\n    }\n\n    static #ease(t: number, b: number, c: number, d: number) { // Quadratic easing out - decelerating to zero velocity http://gizma.com/easing\n        t /= d;\n        return -c * t * (t - 2) + b;\n    }\n\n    static #easeInCubic(t: number, b: number, c: number, d: number) {\n        t /= d;\n        return c * t * t * t + b;\n    }\n\n    static #easeOutExpo(t: number, b: number, c: number, d: number) {\n        return c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n\n    /**\n     * Stops an earlier {@link CameraFlightAnimation.flyTo}, fires arrival callback, then \"stopped\" event.\n     */\n    stop() {\n        if (!this.#flying) {\n            return;\n        }\n        this.#flying = false;\n        this.#time1 = null;\n        this.#time2 = null;\n        if (this.#projection2) {\n            this.camera.projection = this.#projection2;\n        }\n        const callback = this.#callback;\n        if (callback) {\n            this.#callback = null;\n            callback();\n        }\n        this.onStopped.dispatch(this, null);\n    }\n\n    /**\n     * Cancels a flight in progress, without calling the arrival callback.\n     */\n    cancel() {\n        if (!this.#flying) {\n            return;\n        }\n        this.#flying = false;\n        this.#time1 = null;\n        this.#time2 = null;\n        if (this.#callback) {\n            this.#callback = null;\n        }\n        this.onCancelled.dispatch(this, null);\n    }\n\n    /**\n     * Sets the flight duration in seconds.\n     *\n     * Stops any flight currently in progress.\n     *\n     * Default value is ````0.5````.\n     */\n    set duration(value: number) {\n        this.#duration = value ? (value * 1000.0) : 500;\n        this.stop();\n    }\n\n    /**\n     * Gets the flight duration in seconds.\n     *\n     * Default value is ````0.5````.\n     */\n    get duration(): number {\n        return this.#duration / 1000.0;\n    }\n\n    /**\n     * When flying to a {@link SceneModel}, {@link SceneObject} or boundary, indicates if the CameraFlightAnimation always adjusts\n     * the distance of {@link Camera.eye} from {@link Camera.look} to ensure that the target always fits in view.\n     *\n     * When false, the eye will remain fixed at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     */\n    set fit(value: boolean) {\n        this.#fit = value;\n    }\n\n    /**\n     * When flying to a {@link SceneModel}, {@link SceneObject} or boundary, indicates if the CameraFlightAnimation always adjusts\n     * the distance of {@link Camera.eye} from {@link Camera.look} to ensure that the target always fits in view.\n     *\n     * When false, the eye will remain fixed at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     */\n    get fit(): boolean {\n        return this.#fit;\n    }\n\n    /**\n     * Sets how much of the perspective field-of-view, in degrees, that a target {@link SceneObject.aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation.flyTo} or {@link CameraFlightAnimation.jumpTo}.\n     *\n     * Default value is ````45````.\n     */\n    set fitFOV(value: number) {\n        this.#fitFOV = value;\n    }\n\n    /**\n     * Gets how much of the perspective field-of-view, in degrees, that a target {@link SceneObject.aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation.flyTo} or {@link CameraFlightAnimation.jumpTo}.\n     *\n     * Default value is ````45````.\n     */\n    get fitFOV(): number {\n        return this.#fitFOV;\n    }\n\n    /**\n     * Indicates if this CameraFlightAnimation will orient the {@link Camera}\n     * in the direction that it is flying.\n     *\n     * Default value is ````false````.\n     */\n    set trail(value: boolean) {\n        this.#trail = value;\n    }\n\n    /**\n     * Indicates if this CameraFlightAnimation will orient the {@link Camera}\n     * in the direction that it is flying.\n     *\n     * Default value is ````false````.\n     */\n    get trail(): boolean {\n        return this.#trail;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        this.stop();\n        super.destroy();\n        this.onStarted.clear();\n        this.onStopped.clear();\n        this.onCancelled.clear();\n    }\n}\n\nexport {CameraFlightAnimation};\n","import * as math from '../math/index';\nimport {Component} from '../Component';\nimport type {View} from \"./View\";\nimport {EventEmitter} from \"../EventEmitter\";\nimport type {IntArrayParam} from \"../math/index\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\n/**\n * Manages the HTML canvas belonging to a {@link View}.\n */\nclass Canvas extends Component {\n\n    /**\n     * The View to which this Canvas belongs.\n     */\n    public readonly view: View;\n\n    /**\n     * The HTML canvas.\n     */\n    public canvas: HTMLCanvasElement;\n\n    /**\n     * Indicates if this Canvas is transparent.\n     */\n    public readonly transparent: boolean;\n\n    /**\n     * Boundary of the Canvas in absolute browser window coordinates.\n     * Format is ````[xmin, ymin, xwidth, ywidth]````.\n     */\n    public readonly boundary: number[];\n\n    #onTick: () => void;\n\n    #backgroundColor: math.FloatArrayParam;\n    #backgroundColorFromAmbientLight: boolean;\n    #resolutionScale: number;\n\n    /**\n     * Emits an event each time the canvas boundary changes.\n     *\n     * @event\n     */\n    readonly onBoundary: EventEmitter<Canvas, IntArrayParam>;\n\n    /**\n     * @private\n     */\n    constructor(view: View, cfg: { canvas: HTMLCanvasElement; backgroundColor: any[] | undefined; backgroundColorFromAmbientLight: boolean; premultipliedAlpha: boolean; transparent: boolean }) {\n\n        super(view, cfg);\n\n        this.onBoundary = new EventEmitter(new EventDispatcher<Canvas, IntArrayParam>());\n\n        this.#resolutionScale = 1;\n        this.#backgroundColor = math.vec3([\n            cfg.backgroundColor ? cfg.backgroundColor[0] : 1,\n            cfg.backgroundColor ? cfg.backgroundColor[1] : 1,\n            cfg.backgroundColor ? cfg.backgroundColor[2] : 1]);\n        this.#backgroundColorFromAmbientLight = !!cfg.backgroundColorFromAmbientLight;\n\n        this.view = view;\n        this.canvas = cfg.canvas;\n        this.transparent = !!cfg.transparent;\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.boundary = [\n            this.canvas.offsetLeft, this.canvas.offsetTop,\n            this.canvas.clientWidth, this.canvas.clientHeight\n        ];\n\n        // Publish canvas size and position changes on each scene tick\n\n        let lastWindowWidth = 0;\n        let lastWindowHeight = 0;\n        let lastCanvasWidth = 0;\n        let lastCanvasHeight = 0;\n        let lastCanvasOffsetLeft = 0;\n        let lastCanvasOffsetTop = 0;\n        let lastParent: null | HTMLElement = null;\n\n        let lastResolutionScale: null | number = null;\n\n        this.#onTick = view.viewer.onTick.subscribe(() => {\n\n            const canvas = this.canvas;\n            const newResolutionScale = (this.#resolutionScale !== lastResolutionScale);\n            const newWindowSize = (window.innerWidth !== lastWindowWidth || window.innerHeight !== lastWindowHeight);\n            const newCanvasSize = (canvas.clientWidth !== lastCanvasWidth || canvas.clientHeight !== lastCanvasHeight);\n            const newCanvasPos = (canvas.offsetLeft !== lastCanvasOffsetLeft || canvas.offsetTop !== lastCanvasOffsetTop);\n            const parent = canvas.parentElement;\n            const newParent = (parent !== lastParent);\n\n            if (newResolutionScale || newWindowSize || newCanvasSize || newCanvasPos || newParent) {\n                //   this._spinner._adjustPosition();\n                if (newResolutionScale || newCanvasSize || newCanvasPos) {\n                    const newWidth = canvas.clientWidth;\n                    const newHeight = canvas.clientHeight;\n                    if (newResolutionScale || newCanvasSize) {\n                        canvas.width = Math.round(canvas.clientWidth * this.#resolutionScale);\n                        canvas.height = Math.round(canvas.clientHeight * this.#resolutionScale);\n                    }\n                    const boundary = this.boundary;\n                    boundary[0] = canvas.offsetLeft;\n                    boundary[1] = canvas.offsetTop;\n                    boundary[2] = newWidth;\n                    boundary[3] = newHeight;\n                    if (!newResolutionScale || newCanvasSize) {\n                        this.onBoundary.dispatch(this, boundary);\n                    }\n                    lastCanvasWidth = newWidth;\n                    lastCanvasHeight = newHeight;\n                }\n\n                if (newResolutionScale) {\n                    lastResolutionScale = this.#resolutionScale;\n                }\n                if (newWindowSize) {\n                    lastWindowWidth = window.innerWidth;\n                    lastWindowHeight = window.innerHeight;\n                }\n                if (newCanvasPos) {\n                    lastCanvasOffsetLeft = canvas.offsetLeft;\n                    lastCanvasOffsetTop = canvas.offsetTop;\n                }\n                lastParent = parent;\n            }\n        });\n    }\n\n    /**\n     * Gets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     */\n    get backgroundColor(): math.FloatArrayParam {\n        return this.#backgroundColor;\n    }\n\n    /**\n     * Sets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     */\n    set backgroundColor(value: math.FloatArrayParam) {\n        if (value) {\n            this.#backgroundColor[0] = value[0];\n            this.#backgroundColor[1] = value[1];\n            this.#backgroundColor[2] = value[2];\n        } else {\n            this.#backgroundColor[0] = 1.0;\n            this.#backgroundColor[1] = 1.0;\n            this.#backgroundColor[2] = 1.0;\n        }\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether the canvas clear color will be derived from {@link AmbientLight} or {@link Canvas#backgroundColor}\n     * when {@link Canvas#transparent} is ```true```.\n     *\n     * When {@link Canvas#transparent} is ```true``` and this is ````true````, then the canvas clear color will\n     * be taken from the {@link Scene}'s ambient light color.\n     *\n     * When {@link Canvas#transparent} is ```true``` and this is ````false````, then the canvas clear color will\n     * be taken from {@link Canvas#backgroundColor}.\n     *\n     * Default value is ````true````.\n     */\n    get backgroundColorFromAmbientLight(): boolean {\n        return this.#backgroundColorFromAmbientLight;\n    }\n\n    /**\n     * Sets if the canvas background color is derived from an {@link AmbientLight}.\n     *\n     * This only has effect when the canvas is not transparent. When not enabled, the background color\n     * will be the canvas element's HTML/CSS background color.\n     *\n     * Default value is ````true````.\n     */\n    set backgroundColorFromAmbientLight(backgroundColorFromAmbientLight: boolean) {\n        this.#backgroundColorFromAmbientLight = (backgroundColorFromAmbientLight !== false);\n    }\n\n    /**\n     * Gets the scale of the canvas back buffer relative to the CSS-defined size of the canvas.\n     *\n     * This is a common way to trade off rendering quality for speed. If the canvas size is defined in CSS, then\n     * setting this to a value between ````[0..1]```` (eg ````0.5````) will render into a smaller back buffer, giving\n     * a performance boost.\n     *\n     * @returns  The resolution scale.\n     */\n    get resolutionScale(): number {\n        return this.#resolutionScale;\n    }\n\n    /**\n     * Sets the scale of the canvas back buffer relative to the CSS-defined size of the canvas.\n     *\n     * This is a common way to trade off rendering quality for speed. If the canvas size is defined in CSS, then\n     * setting this to a value between ````[0..1]```` (eg ````0.5````) will render into a smaller back buffer, giving\n     * a performance boost.\n     *\n     * @param resolutionScale The resolution scale.\n     */\n    set resolutionScale(resolutionScale: number) {\n        resolutionScale = resolutionScale || 1.0;\n        if (resolutionScale === this.#resolutionScale) {\n            return;\n        }\n        this.#resolutionScale = resolutionScale;\n        const canvas = this.canvas;\n        canvas.width = Math.round(canvas.clientWidth * this.#resolutionScale);\n        canvas.height = Math.round(canvas.clientHeight * this.#resolutionScale);\n        this.view.redraw();\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        this.view.viewer.onTick.unsubscribe(this.#onTick);\n        super.destroy();\n    }\n}\n\nexport {Canvas};","import * as math from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport type {CameraControl} from \"../../CameraControl\";\nimport {OrthoProjectionType, PerspectiveProjectionType} from \"../../../../constants\";\n\nconst screenPos = math.vec4();\nconst viewPos = math.vec4();\n\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\n\nconst tempVec4a = math.vec4();\nconst tempVec4b = math.vec4();\nconst tempVec4c = math.vec4();\n\n/**\n * @private\n */\nclass PanController {\n\n    private view: View;\n\n    constructor(cameraControl: CameraControl) {\n        this.view = cameraControl.view;\n    }\n\n    /**\n     * Dollys the Camera towards the given target 2D canvas position.\n     *\n     * When the target's corresponding World-space position is also provided, then this function will also test if we've\n     * dollied past the target, and will return ````true```` if that's the case.\n     *\n     * @param [optionalTargetWorldPos] Optional world position of the target\n     * @param targetCanvasPos Canvas position of the target\n     * @param dollyDelta Amount to dolly\n     * @return True if optionalTargetWorldPos was given, and we've dollied past that position.\n     */\n    dollyToCanvasPos(optionalTargetWorldPos: any, targetCanvasPos: any, dollyDelta: number) {\n\n        let dolliedThroughSurface = false;\n\n        const camera = this.view.camera;\n\n        if (optionalTargetWorldPos) {\n            const eyeToWorldPosVec = math.subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n            const eyeWorldPosDist = math.lenVec3(eyeToWorldPosVec);\n            dolliedThroughSurface = (eyeWorldPosDist < dollyDelta);\n        }\n\n        if (camera.projection === PerspectiveProjectionType) {\n\n            camera.ortho.scale = camera.ortho.scale - dollyDelta;\n\n            const unprojectedWorldPos = this.#unproject(targetCanvasPos, tempVec4a);\n            const offset = math.subVec3(unprojectedWorldPos, camera.eye, tempVec4c);\n            const moveVec = math.mulVec3Scalar(math.normalizeVec3(offset), -dollyDelta, []);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n\n            if (optionalTargetWorldPos) {\n\n                // Subtle UX tweak - if we have a target World position, then set camera eye->look distance to\n                // the same distance as from eye->target. This just gives us a better position for look,\n                // if we subsequently orbit eye about look, so that we don't orbit a position that's\n                // suddenly a lot closer than the point we pivoted about on the surface of the last object\n                // that we click-drag-pivoted on.\n\n                const eyeTargetVec = math.subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n                const lenEyeTargetVec = math.lenVec3(eyeTargetVec);\n                const eyeLookVec = math.mulVec3Scalar(math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3b)), lenEyeTargetVec);\n                camera.look = [camera.eye[0] + eyeLookVec[0], camera.eye[1] + eyeLookVec[1], camera.eye[2] + eyeLookVec[2]];\n            }\n\n        } else if (camera.projection === OrthoProjectionType) {\n\n            // - set ortho scale, getting the unprojected targetCanvasPos before and after, get that difference in a vector;\n            // - get the vector in which we're dollying;\n            // - add both vectors to camera eye and look.\n\n            const worldPos1 = this.#unproject(targetCanvasPos, tempVec4a);\n\n            camera.ortho.scale = camera.ortho.scale - dollyDelta;\n            camera.ortho.clean(); // HACK\n\n            const worldPos2 = this.#unproject(targetCanvasPos, tempVec4b);\n            const offset = math.subVec3(worldPos2, worldPos1, tempVec4c);\n            const eyeLookMoveVec = math.mulVec3Scalar(math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3a)), -dollyDelta, tempVec3b);\n            const moveVec = math.addVec3(offset, eyeLookMoveVec, tempVec3c);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n        }\n\n        return dolliedThroughSurface;\n    }\n\n    #unproject(canvasPos: math.FloatArrayParam, worldPos: math.FloatArrayParam) {\n\n        const camera = this.view.camera;\n        const transposedProjectMat = camera.project.transposedProjMatrix;\n        // @ts-ignore\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        // @ts-ignore\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = math.dotVec4(D, Pt3) / math.dotVec4(D, Pt4);\n\n        camera.project.unproject(canvasPos, screenZ, screenPos, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    destroy() {\n    }\n}\n\nexport {PanController};","import * as math from \"../../../../math/index\";\nimport type {FloatArrayParam} from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport type {CameraControl} from \"../../CameraControl\";\n\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\n\nconst tempVec4a = math.vec4();\nconst tempVec4b = math.vec4();\nconst tempVec4c = math.vec4();\n\n/**\n * @private\n */\nclass PivotController {\n\n    #view: View;\n    #configs: any;\n    #pivotWorldPos: FloatArrayParam;\n    #cameraOffset: FloatArrayParam;\n    #azimuth: number;\n    #polar: number;\n    #radius: number;\n    #pivotPosSet: boolean;\n    #pivoting: boolean;\n    #shown: boolean;\n    #pivotViewPos: FloatArrayParam;\n    #pivotProjPos: FloatArrayParam;\n    #pivotCanvasPos: FloatArrayParam;\n    #cameraDirty: boolean;\n    #onViewMatrix: any;\n    #onProjMatrix: any;\n    #onTick: any;\n    #hideTimeout: any;\n    #pivotElement: any;\n\n    /**\n     * @private\n     */\n    constructor(cameraControl: CameraControl, configs: any) {\n\n        this.#view = cameraControl.view;\n        this.#configs = configs;\n        this.#pivotWorldPos = math.vec3();\n        this.#cameraOffset = math.vec3();\n        this.#azimuth = 0;\n        this.#polar = 0;\n        this.#radius = 0;\n        this.#pivotPosSet = false; // Initially false, true as soon as #pivotWorldPos has been set to some value\n        this.#pivoting = false; // True while pivoting\n        this.#shown = false;\n        this.#pivotViewPos = math.vec4();\n        this.#pivotProjPos = math.vec4();\n        this.#pivotCanvasPos = math.vec2();\n        this.#cameraDirty = true;\n\n        this.#onViewMatrix = this.#view.camera.onViewMatrix.subscribe(() => {\n            this.#cameraDirty = true;\n        });\n\n        this.#onProjMatrix = this.#view.camera.onProjMatrix.subscribe(() => {\n            this.#cameraDirty = true;\n        });\n\n        this.#onTick = this.#view.viewer.onTick.subscribe(() => {\n            this.updatePivotElement();\n        });\n    }\n\n    updatePivotElement() {\n        const camera = this.#view.camera;\n        const canvas = this.#view.canvas;\n        if (this.#pivoting && this.#cameraDirty) {\n            math.transformPoint3(camera.viewMatrix, this.getPivotPos(), this.#pivotViewPos);\n            this.#pivotViewPos[3] = 1;\n            math.transformPoint4(camera.projMatrix, this.#pivotViewPos, this.#pivotProjPos);\n            const canvasAABB = canvas.boundary;\n            const canvasWidth = canvasAABB[2];\n            const canvasHeight = canvasAABB[3];\n            this.#pivotCanvasPos[0] = Math.floor((1 + this.#pivotProjPos[0] / this.#pivotProjPos[3]) * canvasWidth / 2);\n            this.#pivotCanvasPos[1] = Math.floor((1 - this.#pivotProjPos[1] / this.#pivotProjPos[3]) * canvasHeight / 2);\n            const canvasElem = canvas.canvas;\n            const canvasBoundingRect = canvasElem.getBoundingClientRect();\n            if (this.#pivotElement) {\n                this.#pivotElement.style.left = (Math.floor(canvasBoundingRect.left + this.#pivotCanvasPos[0]) - (this.#pivotElement.clientWidth / 2) + window.scrollX) + \"px\";\n                this.#pivotElement.style.top = (Math.floor(canvasBoundingRect.top + this.#pivotCanvasPos[1]) - (this.#pivotElement.clientHeight / 2) + window.scrollY) + \"px\";\n            }\n            this.#cameraDirty = false;\n        }\n    }\n\n    /**\n     * Sets the HTML DOM element that will represent the pivot position.\n     *\n     * @param pivotElement\n     */\n    setPivotElement(pivotElement: HTMLElement) {\n        this.#pivotElement = pivotElement;\n    }\n\n    /**\n     * Begins pivoting.\n     */\n    startPivot() {\n        if (this.#cameraLookingDownwards()) {\n            this.#pivoting = false;\n            return false;\n        }\n        const camera = this.#view.camera;\n        let lookat = math.lookAtMat4v(camera.eye, camera.look, camera.worldUp);\n        math.transformPoint3(lookat, this.getPivotPos(), this.#cameraOffset);\n        const pivotPos = this.getPivotPos();\n        this.#cameraOffset[2] += math.distVec3(camera.eye, pivotPos);\n        lookat = math.inverseMat4(lookat);\n        const offset = math.transformVec3(lookat, this.#cameraOffset);\n        const diff = math.vec3();\n        math.subVec3(camera.eye, pivotPos, diff);\n        math.addVec3(diff, offset);\n        if (camera.zUp) {\n            const t = diff[1];\n            diff[1] = diff[2];\n            diff[2] = t;\n        }\n        this.#radius = math.lenVec3(diff);\n        this.#polar = Math.acos(diff[1] / this.#radius);\n        this.#azimuth = Math.atan2(diff[0], diff[2]);\n        this.#pivoting = true;\n    }\n\n    /**\n     * Returns true if we are currently pivoting.\n     *\n     * @returns {boolean}\n     */\n    getPivoting(): boolean {\n        return this.#pivoting;\n    }\n\n    /**\n     * Sets a 3D World-space position to pivot about.\n     *\n     * @param worldPos The new World-space pivot position.\n     */\n    setPivotPos(worldPos: math.FloatArrayParam) {\n        // @ts-ignore\n        this.#pivotWorldPos.set(worldPos);\n        this.#pivotPosSet = true;\n    }\n\n    /**\n     * Sets the pivot position to the 3D projection of the given 2D canvas coordinates on a sphere centered\n     * at the viewpoint. The radius of the sphere is configured via {@link CameraControl#smartPivot}.\n     *\n     * @param canvasPos\n     */\n    setCanvasPivotPos(canvasPos: math.FloatArrayParam) {\n        const camera = this.#view.camera;\n        const pivotShereRadius = Math.abs(math.distVec3(this.#view.viewer.scene.center, camera.eye));\n        const transposedProjectMat = camera.project.transposedProjMatrix;\n        // @ts-ignore\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        // @ts-ignore\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = math.dotVec4(D, Pt3) / math.dotVec4(D, Pt4);\n        const worldPos = tempVec4a;\n        camera.project.unproject(canvasPos, screenZ, tempVec4b, tempVec4c, worldPos);\n        const eyeWorldPosVec = math.normalizeVec3(math.subVec3(worldPos, camera.eye, tempVec3a));\n        const posOnSphere = math.addVec3(camera.eye, math.mulVec3Scalar(eyeWorldPosVec, pivotShereRadius, tempVec3b), tempVec3c);\n        this.setPivotPos(posOnSphere);\n    }\n\n    /**\n     * Gets the current position we're pivoting about.\n     * @returns {Number[]} The current World-space pivot position.\n     */\n    getPivotPos() {\n        return (this.#pivotPosSet) ? this.#pivotWorldPos : this.#view.camera.look; // Avoid pivoting about [0,0,0] by default\n    }\n\n    /**\n     * Continues to pivot.\n     *\n     * @param yawInc Yaw rotation increment.\n     * @param pitchInc Pitch rotation increment.\n     */\n    continuePivot(yawInc: number, pitchInc: number) {\n        if (!this.#pivoting) {\n            return;\n        }\n        if (yawInc === 0 && pitchInc === 0) {\n            return;\n        }\n        const camera = this.#view.camera;\n        let dx = -yawInc;\n        const dy = -pitchInc;\n        if (camera.worldUp[2] === 1) {\n            dx = -dx;\n        }\n        this.#azimuth += -dx * .01;\n        this.#polar += dy * .01;\n        this.#polar = math.clamp(this.#polar, .001, Math.PI - .001);\n        const pos = [\n            this.#radius * Math.sin(this.#polar) * Math.sin(this.#azimuth),\n            this.#radius * Math.cos(this.#polar),\n            this.#radius * Math.sin(this.#polar) * Math.cos(this.#azimuth)\n        ];\n        if (camera.worldUp[2] === 1) {\n            const t = pos[1];\n            pos[1] = pos[2];\n            pos[2] = t;\n        }\n        // Preserve the eye->look distance, since in xeokit \"look\" is the point-of-interest, not the direction vector.\n        const eyeLookLen = math.lenVec3(math.subVec3(camera.look, camera.eye, math.vec3()));\n        const pivotPos = this.getPivotPos();\n        math.addVec3(pos, pivotPos);\n        let lookat = math.lookAtMat4v(pos, pivotPos, camera.worldUp);\n        lookat = math.inverseMat4(lookat);\n        const offset = math.transformVec3(lookat, this.#cameraOffset);\n        lookat[12] -= offset[0];\n        lookat[13] -= offset[1];\n        lookat[14] -= offset[2];\n        const zAxis = [lookat[8], lookat[9], lookat[10]];\n        camera.eye = [lookat[12], lookat[13], lookat[14]];\n        math.subVec3(camera.eye, math.mulVec3Scalar(zAxis, eyeLookLen), camera.look);\n        camera.up = [lookat[4], lookat[5], lookat[6]];\n        this.showPivot();\n    }\n\n    /**\n     * Shows the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    showPivot() {\n        if (this.#shown) {\n            return;\n        }\n        if (this.#hideTimeout !== null) {\n            window.clearTimeout(this.#hideTimeout);\n            this.#hideTimeout = null;\n        }\n        if (this.#pivotElement) {\n            this.updatePivotElement();\n            this.#pivotElement.style.visibility = \"visible\";\n            this.#shown = true;\n            this.#hideTimeout = window.setTimeout(() => {\n                this.hidePivot();\n            }, 1000);\n        }\n    }\n\n    /**\n     * Hides the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    hidePivot() {\n        if (!this.#shown) {\n            return;\n        }\n        if (this.#hideTimeout !== null) {\n            window.clearTimeout(this.#hideTimeout);\n            this.#hideTimeout = null;\n        }\n        if (this.#pivotElement) {\n            this.#pivotElement.style.visibility = \"hidden\";\n        }\n        this.#shown = false;\n    }\n\n    /**\n     * Finishes pivoting.\n     */\n    endPivot() {\n        this.#pivoting = false;\n    }\n\n    destroy() {\n        this.#view.camera.onViewMatrix.unsubscribe(this.#onViewMatrix);\n        this.#view.camera.onProjMatrix.unsubscribe(this.#onProjMatrix);\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n\n    #cameraLookingDownwards() { // Returns true if angle between camera viewing direction and World-space \"up\" axis is too small\n        const camera = this.#view.camera;\n        const forwardAxis = math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3a));\n        const rightAxis = math.cross3Vec3(forwardAxis, camera.worldUp, tempVec3b);\n        let rightAxisLen = math.sqLenVec3(rightAxis);\n        return (rightAxisLen <= 0.0001);\n    }\n}\n\nexport {PivotController};","import * as math from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport type {CameraControl} from \"../../CameraControl\";\n\n/**\n * @private\n */\nclass PickController {\n\n    /**\n     * Set true to schedule picking of an Entity.\n     */\n    schedulePickEntity: boolean;\n\n    /**\n     * Set true to schedule picking of a position on teh surface of an Entity.\n     */\n    schedulePickSurface: boolean;\n\n    /**\n     * The canvas position at which to do the next scheduled pick.\n     */\n    pickCursorPos: any;\n\n    /**\n     * Will be true after picking to indicate that something was picked.\n     */\n    picked: boolean;\n\n    /**\n     * Will be true after picking to indicate that a position on the surface of an Entity was picked.\n     */\n    pickedSurface: boolean;\n\n    /**\n     * Will hold the PickResult after after picking.\n     */\n    pickResult: any;\n    #view: View;\n    #cameraControl: CameraControl;\n    #config: any;\n    #lastPickedEntityId: any;\n    #needFireEvents: boolean;\n\n    constructor(cameraControl: CameraControl, configs: any) {\n        this.#view = cameraControl.view;\n        this.#cameraControl = cameraControl;\n        this.#view.canvas.canvas.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n        this.#config = configs;\n        this.schedulePickEntity = false;\n        this.schedulePickSurface = false;\n        this.pickCursorPos = math.vec2();\n        this.picked = false;\n        this.pickedSurface = false;\n        this.pickResult = null;\n        this.#lastPickedEntityId = null;\n        this.#needFireEvents = false;\n    }\n\n    /**\n     * Immediately attempts a pick, if scheduled.\n     */\n    update() {\n\n        if (!this.#config.pointerEnabled) {\n            return;\n        }\n\n        if (!this.schedulePickEntity && !this.schedulePickSurface) {\n            return;\n        }\n\n        this.picked = false;\n        this.pickedSurface = false;\n        this.#needFireEvents = false;\n\n        const hasHoverSurfaceSubs = (this.#cameraControl.onHoverSurface.count > 0);\n\n        if (this.schedulePickSurface) {\n            // @ts-ignore\n            if (this.pickResult && this.pickResult.worldPos) {\n                const pickResultCanvasPos = this.pickResult.canvasPos;\n                if (pickResultCanvasPos[0] === this.pickCursorPos[0] && pickResultCanvasPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = true;\n                    this.#needFireEvents = hasHoverSurfaceSubs;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        if (this.schedulePickEntity) {\n            if (this.pickResult) {\n                const pickResultCanvasPos = this.pickResult.canvasPos;\n                if (pickResultCanvasPos[0] === this.pickCursorPos[0] && pickResultCanvasPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = false;\n                    this.#needFireEvents = false;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        // if (this.schedulePickSurface) {\n        //\n        //     this.pickResult = this.#view.pick({\n        //         pickSurface: true,\n        //         pickSurfaceNormal: false,\n        //         canvasPos: this.pickCursorPos\n        //     });\n        //\n        //     if (this.pickResult) {\n        //         this.picked = true;\n        //         this.pickedSurface = true;\n        //         this.#needFireEvents = true;\n        //     }\n        //\n        // } else { // schedulePickEntity == true\n        //\n        //     this.pickResult = this.#view.pick({\n        //         canvasPos: this.pickCursorPos\n        //     });\n        //\n        //     if (this.pickResult) {\n        //         this.picked = true;\n        //         this.pickedSurface = false;\n        //         this.#needFireEvents = true;\n        //     }\n        // }\n\n        this.schedulePickEntity = false;\n        this.schedulePickSurface = false;\n    }\n\n    fireEvents() {\n\n        if (!this.#needFireEvents) {\n            return;\n        }\n\n        if (this.picked && this.pickResult && this.pickResult.entity) {\n\n            const pickedEntityId = this.pickResult.entity.id;\n\n            if (this.#lastPickedEntityId !== pickedEntityId) {\n\n                if (this.#lastPickedEntityId !== undefined && this.#lastPickedEntityId !== null) {\n                    this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, {\n                        entity: this.#view.objects[this.#lastPickedEntityId]\n                    });\n                }\n\n                this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, this.pickResult);\n                this.#lastPickedEntityId = pickedEntityId;\n            }\n\n            this.#cameraControl.onHover.dispatch(this.#cameraControl,  this.pickResult);\n\n            if (this.pickResult.worldPos) {\n                this.pickedSurface = true;\n                this.#cameraControl.onHoverSurface.dispatch(this.#cameraControl, this.pickResult);\n            }\n\n        } else {\n\n            if (this.#lastPickedEntityId !== undefined && this.#lastPickedEntityId !== null) {\n                this.#cameraControl.onHoverOut.dispatch(this.#cameraControl, {\n                    entity: this.#view.objects[this.#lastPickedEntityId]\n                });\n                this.#lastPickedEntityId = undefined;\n            }\n\n            this.#cameraControl.onHoverOff.dispatch(this.#cameraControl, {\n                canvasPos: this.pickCursorPos\n            });\n        }\n\n        this.pickResult = null;\n\n        this.#needFireEvents = false;\n    }\n\n    destroy() {\n    }\n}\n\nexport {PickController};\n","/**\n * Code for the BACKSPACE key.\n */\nexport const KEY_BACKSPACE: number = 8;\n\n/**\n * Code for the TAB key.\n */\nexport const KEY_TAB: number = 9;\n\n/**\n * Code for the ENTER key.\n */\nexport const KEY_ENTER: number = 13;\n\n/**\n * Code for the SHIFT key.\n */\nexport const KEY_SHIFT: number = 16;\n\n/**\n * Code for the CTRL key.\n */\nexport const KEY_CTRL: number = 17;\n\n/**\n * Code for the ALT key.\n */\nexport const KEY_ALT: number = 18;\n\n/**\n * Code for the PAUSE_BREAK key.\n */\nexport const KEY_PAUSE_BREAK: number = 19;\n\n/**\n * Code for the CAPS_LOCK key.\n */\nexport const KEY_CAPS_LOCK: number = 20;\n\n/**\n * Code for the ESCAPE key.\n */\nexport const KEY_ESCAPE: number = 27;\n\n/**\n * Code for the PAGE_UP key.\n */\nexport const KEY_PAGE_UP: number = 33;\n\n/**\n * Code for the PAGE_DOWN key.\n */\nexport const KEY_PAGE_DOWN: number = 34;\n\n/**\n * Code for the END key.\n */\nexport const KEY_END: number = 35;\n\n/**\n * Code for the HOME key.\n */\nexport const KEY_HOME: number = 36;\n\n/**\n * Code for the LEFT_ARROW key.\n */\nexport const KEY_LEFT_ARROW: number = 37;\n\n/**\n * Code for the UP_ARROW key.\n\n */\nexport const KEY_UP_ARROW: number = 38;\n\n/**\n * Code for the RIGHT_ARROW key.\n */\nexport const KEY_RIGHT_ARROW: number = 39;\n\n/**\n * Code for the DOWN_ARROW key.\n */\nexport const KEY_DOWN_ARROW: number = 40;\n\n/**\n * Code for the INSERT key.\n */\nexport const KEY_INSERT: number = 45;\n\n/**\n * Code for the DELETE key.\n */\nexport const KEY_DELETE: number = 46;\n\n/**\n * Code for the 0 key.\n */\nexport const KEY_NUM_0: number = 48;\n\n/**\n * Code for the 1 key.\n */\nexport const KEY_NUM_1: number = 49;\n\n/**\n * Code for the 2 key.\n */\nexport const KEY_NUM_2: number = 50;\n\n/**\n * Code for the 3 key.\n */\nexport const KEY_NUM_3: number = 51;\n\n/**\n * Code for the 4 key.\n */\nexport const KEY_NUM_4: number = 52;\n\n/**\n * Code for the 5 key.\n */\nexport const KEY_NUM_5: number = 53;\n\n/**\n * Code for the 6 key.\n */\nexport const KEY_NUM_6: number = 54;\n\n/**\n * Code for the 7 key.\n */\nexport const KEY_NUM_7: number = 55;\n\n/**\n * Code for the 8 key.\n */\nexport const KEY_NUM_8: number = 56;\n\n/**\n * Code for the 9 key.\n */\nexport const KEY_NUM_9: number = 57;\n\n/**\n * Code for the A key.\n */\nexport const KEY_A: number = 65;\n\n/**\n * Code for the B key.\n */\nexport const KEY_B: number = 66;\n\n/**\n * Code for the C key.\n */\nexport const KEY_C: number = 67;\n\n/**\n * Code for the D key.\n */\nexport const KEY_D: number = 68;\n\n/**\n * Code for the E key.\n */\nexport const KEY_E: number = 69;\n\n/**\n * Code for the F key.\n */\nexport const KEY_F: number = 70;\n\n/**\n * Code for the G key.\n */\nexport const KEY_G: number = 71;\n\n/**\n * Code for the H key.\n */\nexport const KEY_H: number = 72;\n\n/**\n * Code for the I key.\n */\nexport const KEY_I: number = 73;\n\n/**\n * Code for the J key.\n */\nexport const KEY_J: number = 74;\n\n/**\n * Code for the K key.\n */\nexport const KEY_K: number = 75;\n\n/**\n * Code for the L key.\n */\nexport const KEY_L: number = 76;\n\n/**\n * Code for the M key.\n */\nexport const KEY_M: number = 77;\n\n/**\n * Code for the N key.\n */\nexport const KEY_N: number = 78;\n\n/**\n * Code for the O key.\n */\nexport const KEY_O: number = 79;\n\n/**\n * Code for the P key.\n */\nexport const KEY_P: number = 80;\n\n/**\n * Code for the Q key.\n */\nexport const KEY_Q: number = 81;\n\n/**\n * Code for the R key.\n */\nexport const KEY_R: number = 82;\n\n/**\n * Code for the S key.\n */\nexport const KEY_S: number = 83;\n\n/**\n * Code for the T key.\n */\nexport const KEY_T: number = 84;\n\n/**\n * Code for the U key.\n */\nexport const KEY_U: number = 85;\n\n/**\n * Code for the V key.\n */\nexport const KEY_V: number = 86;\n\n/**\n * Code for the W key.\n */\nexport const KEY_W: number = 87;\n\n/**\n * Code for the X key.\n */\nexport const KEY_X: number = 88;\n\n/**\n * Code for the Y key.\n */\nexport const KEY_Y: number = 89;\n\n/**\n * Code for the Z key.\n */\nexport const KEY_Z: number = 90;\n\n/**\n * Code for the LEFT_WINDOW key.\n */\nexport const KEY_LEFT_WINDOW: number = 91;\n\n/**\n * Code for the RIGHT_WINDOW key.\n */\nexport const KEY_RIGHT_WINDOW: number = 92;\n\n/**\n * Code for the SELECT key.\n */\nexport const KEY_SELECT_KEY: number = 93;\n\n/**\n * Code for the number pad 0 key.\n */\nexport const KEY_NUMPAD_0: number = 96;\n\n/**\n * Code for the number pad 1 key.\n */\nexport const KEY_NUMPAD_1: number = 97;\n\n/**\n * Code for the number pad 2 key.\n */\nexport const KEY_NUMPAD_2: number = 98;\n\n/**\n * Code for the number pad 3 key.\n */\nexport const KEY_NUMPAD_3: number = 99;\n\n/**\n * Code for the number pad 4 key.\n */\nexport const KEY_NUMPAD_4: number = 100;\n\n/**\n * Code for the number pad 5 key.\n */\nexport const KEY_NUMPAD_5: number = 101;\n\n/**\n * Code for the number pad 6 key.\n */\nexport const KEY_NUMPAD_6: number = 102;\n\n/**\n * Code for the number pad 7 key.\n */\nexport const KEY_NUMPAD_7: number = 103;\n\n/**\n * Code for the number pad 8 key.\n */\nexport const KEY_NUMPAD_8: number = 104;\n\n/**\n * Code for the number pad 9 key.\n */\nexport const KEY_NUMPAD_9: number = 105;\n\n/**\n * Code for the MULTIPLY key.\n */\nexport const KEY_MULTIPLY: number = 106;\n\n/**\n * Code for the ADD key.\n */\nexport const KEY_ADD: number = 107;\n\n/**\n * Code for the SUBTRACT key.\n */\nexport const KEY_SUBTRACT: number = 109;\n\n/**\n * Code for the DECIMAL POINT key.\n */\nexport const KEY_DECIMAL_POINT: number = 110;\n\n/**\n * Code for the DIVIDE key.\n */\nexport const KEY_DIVIDE: number = 111;\n\n/**\n * Code for the F1 key.\n */\nexport const KEY_F1: number = 112;\n\n/**\n * Code for the F2 key.\n */\nexport const KEY_F2: number = 113;\n\n/**\n * Code for the F3 key.\n */\nexport const KEY_F3: number = 114;\n\n/**\n * Code for the F4 key.\n */\nexport const KEY_F4: number = 115;\n\n/**\n * Code for the F5 key.\n */\nexport const KEY_F5: number = 116;\n\n/**\n * Code for the F6 key.\n */\nexport const KEY_F6: number = 117;\n\n/**\n * Code for the F7 key.\n */\nexport const KEY_F7: number = 118;\n\n/**\n * Code for the F8 key.\n */\nexport const KEY_F8: number = 119;\n\n/**\n * Code for the F9 key.\n */\nexport const KEY_F9: number = 120;\n\n/**\n * Code for the F10 key.\n */\nexport const KEY_F10: number = 121;\n\n/**\n * Code for the F11 key.\n */\nexport const KEY_F11: number = 122;\n\n/**\n * Code for the F12 key.\n */\nexport const KEY_F12: number = 123;\n\n/**\n * Code for the NUM_LOCK key.\n */\nexport const KEY_NUM_LOCK: number = 144;\n\n/**\n * Code for the SCROLL_LOCK key.\n */\nexport const KEY_SCROLL_LOCK: number = 145;\n\n/**\n * Code for the SEMI_COLON key.\n */\nexport const KEY_SEMI_COLON: number = 186;\n\n/**\n * Code for the EQUAL_SIGN key.\n */\nexport const KEY_EQUAL_SIGN: number = 187;\n\n/**\n * Code for the COMMA key.\n */\nexport const KEY_COMMA: number = 188;\n\n/**\n * Code for the DASH key.\n */\nexport const KEY_DASH: number = 189;\n\n/**\n * Code for the PERIOD key.\n */\nexport const KEY_PERIOD: number = 190;\n\n/**\n * Code for the FORWARD_SLASH key.\n */\nexport const KEY_FORWARD_SLASH: number = 191;\n\n/**\n * Code for the GRAVE_ACCENT key.\n */\nexport const KEY_GRAVE_ACCENT: number = 192;\n\n/**\n * Code for the OPEN_BRACKET key.\n */\nexport const KEY_OPEN_BRACKET: number = 219;\n\n/**\n * Code for the BACK_SLASH key.\n */\nexport const KEY_BACK_SLASH: number = 220;\n\n/**\n * Code for the CLOSE_BRACKET key.\n */\nexport const KEY_CLOSE_BRACKET: number = 221;\n\n/**\n * Code for the SINGLE_QUOTE key.\n */\nexport const KEY_SINGLE_QUOTE: number = 222;\n\n/**\n * Code for the SPACE key.\n */\nexport const KEY_SPACE: number = 32;","import * as math from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport {PerspectiveProjectionType} from \"../../../../constants\";\nimport * as keycodes from \"../../../../keycodes\";\n\nconst canvasPos = math.vec2();\n\n/**\n * @private\n */\nexport class MousePanRotateDollyHandler {\n\n    #view: View;\n\n    #documentKeyDownHandler: (e: any) => void;\n    #documentKeyUpHandler: (e: any) => void;\n    #mouseDownHandler: (e: any) => void;\n    #documentMouseMoveHandler: () => void;\n    #canvasMouseMoveHandler: (e: any) => void;\n    #documentMouseUpHandler: (e: any) => void;\n    #mouseUpHandler: (e: any) => void;\n    #mouseEnterHandler: (e: any) => void;\n    #mouseWheelHandler: (e: { deltaY: number; preventDefault: () => void }) => void;\n\n    constructor(components:any, controllers:any, configs:any, states:any, updates:any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n\n        let lastX = 0;\n        let lastY = 0;\n        let lastXDown = 0;\n        let lastYDown = 0;\n        let xRotateDelta = 0;\n        let yRotateDelta = 0;\n\n        let mouseDownLeft: boolean;\n        let mouseDownMiddle: boolean;\n        let mouseDownRight: boolean;\n\n        let mouseDownPicked = false;\n        const pickedWorldPos = new Float64Array(3);\n\n        let mouseMovedOnCanvasSinceLastWheel = true;\n\n        const canvas = this.#view.canvas.canvas;\n\n        const keyDown: any[] = [];\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = true;\n        });\n\n        document.addEventListener(\"keyup\", this.#documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = false;\n        });\n\n        function setMousedownState(pick = true) {\n            canvas.style.cursor = \"move\";\n            setMousedownPositions();\n            if (pick) {\n                setMousedownPick();\n            }\n        }\n\n        function setMousedownPositions() {\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n            lastX = states.pointerCanvasPos[0];\n            lastY = states.pointerCanvasPos[1];\n            lastXDown = states.pointerCanvasPos[0];\n            lastYDown = states.pointerCanvasPos[1];\n        }\n\n        function setMousedownPick() {\n            pickController.pickCursorPos = states.pointerCanvasPos;\n            pickController.schedulePickSurface = true;\n            pickController.update();\n            if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n                mouseDownPicked = true;\n                pickedWorldPos.set(pickController.pickResult.worldPos);\n            } else {\n                mouseDownPicked = false;\n            }\n        }\n\n        canvas.addEventListener(\"mousedown\", this.#mouseDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 1: // Left button\n                    if (keyDown[keycodes.KEY_SHIFT] || configs.planView) {\n                        mouseDownLeft = true;\n                        setMousedownState();\n                    } else {\n                        mouseDownLeft = true;\n                        setMousedownState(false);\n                    }\n                    break;\n                case 2: // Middle/both buttons\n                    mouseDownMiddle = true;\n                    setMousedownState();\n                    break;\n                case 3: // Right button\n                    mouseDownRight = true;\n                    if (configs.panRightClick) {\n                        setMousedownState();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        document.addEventListener(\"mousemove\", this.#documentMouseMoveHandler = () => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n                return;\n            }\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = this.#view.canvas.boundary;\n            const canvasWidth = canvasBoundary[0];\n            const canvasHeight = canvasBoundary[1];\n            const x = states.pointerCanvasPos[0];\n            const y = states.pointerCanvasPos[1];\n\n            const panning = keyDown[keycodes.KEY_SHIFT] || configs.planView || (!configs.panRightClick && mouseDownMiddle) || (configs.panRightClick && mouseDownRight);\n\n            if (panning) {\n\n                const xPanDelta = (x - lastX);\n                const yPanDelta = (y - lastY);\n\n                const camera = this.#view.camera;\n\n                // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                if (camera.projection === PerspectiveProjectionType) {\n\n                    const depth = Math.abs(mouseDownPicked ? math.lenVec3(math.subVec3(pickedWorldPos, this.#view.camera.eye, [])) : this.#view.camera.eyeLookDist);\n                    const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                    updates.panDeltaX += (1.5 * xPanDelta * targetDistance / canvasHeight);\n                    updates.panDeltaY += (1.5 * yPanDelta * targetDistance / canvasHeight);\n\n                } else {\n\n                    updates.panDeltaX += 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight);\n                    updates.panDeltaY += 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight);\n                }\n\n            } else if (mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n\n                if (!configs.planView) { // No rotating in plan-view mode\n\n                    if (configs.firstPerson) {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * configs.dragRotationRate / 2;\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate / 4);\n\n                    } else {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * (configs.dragRotationRate * 1.5);\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate * 1.5);\n                    }\n                }\n            }\n\n            lastX = x;\n            lastY = y;\n        });\n\n        canvas.addEventListener(\"mousemove\", this.#canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            mouseMovedOnCanvasSinceLastWheel = true;\n        });\n\n        document.addEventListener(\"mouseup\", this.#documentMouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 1: // Left button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 2: // Middle/both buttons\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 3: // Right button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        canvas.addEventListener(\"mouseup\", this.#mouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 3: // Right button\n                    getCanvasPosFromEvent(e, canvasPos);\n                    const x = canvasPos[0];\n                    const y = canvasPos[1];\n                    if (Math.abs(x - lastXDown) < 3 && Math.abs(y - lastYDown) < 3) {\n                        controllers.cameraControl.events.fire(\"rightClick\", { // For context menus\n                            pagePos: [Math.round(e.pageX), Math.round(e.pageY)],\n                            canvasPos: canvasPos,\n                            event: e\n                        }, true);\n                    }\n                    break;\n                default:\n                    break;\n            }\n            canvas.style.removeProperty(\"cursor\");\n        });\n\n        canvas.addEventListener(\"mouseenter\", this.#mouseEnterHandler = () => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        const maxElapsed = 1 / 20;\n        const minElapsed = 1 / 60;\n\n        let secsNowLast: number|null = null;\n\n        canvas.addEventListener(\"wheel\", this.#mouseWheelHandler = (e: { deltaY: number; preventDefault: () => void; }) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            const secsNow = performance.now() / 1000.0;\n            let secsElapsed = (secsNowLast !== null) ? (secsNow - secsNowLast) : 0;\n            secsNowLast = secsNow;\n            if (secsElapsed > maxElapsed) {\n                secsElapsed = maxElapsed;\n            }\n            if (secsElapsed < minElapsed) {\n                secsElapsed = minElapsed;\n            }\n            const delta = Math.max(-1, Math.min(1, -e.deltaY * 40));\n            if (delta === 0) {\n                return;\n            }\n            const normalizedDelta = delta / Math.abs(delta);\n            updates.dollyDelta += -normalizedDelta * secsElapsed * configs.mouseWheelDollyRate;\n\n            if (mouseMovedOnCanvasSinceLastWheel) {\n                states.followPointerDirty = true;\n                mouseMovedOnCanvasSinceLastWheel = false;\n            }\n\n            e.preventDefault();\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        const canvas = this.#view.canvas.canvas;\n\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this.#documentKeyUpHandler);\n        canvas.removeEventListener(\"mousedown\", this.#mouseDownHandler);\n        document.removeEventListener(\"mousemove\", this.#documentMouseMoveHandler);\n        canvas.removeEventListener(\"mousemove\", this.#canvasMouseMoveHandler);\n        document.removeEventListener(\"mouseup\", this.#documentMouseUpHandler);\n        canvas.removeEventListener(\"mouseup\", this.#mouseUpHandler);\n        canvas.removeEventListener(\"mouseenter\", this.#mouseEnterHandler);\n        canvas.removeEventListener(\"wheel\", this.#mouseWheelHandler);\n    }\n}\n\nconst getCanvasPosFromEvent = function (event:any, canvasPos:any) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n\n","import * as math from \"../../../../math/index\";\n\nconst center = math.vec3();\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\nconst tempVec3d = math.vec3();\n\nconst tempCameraTarget = {\n    eye: new Float64Array(3),\n    look: new Float64Array(3),\n    up: new Float64Array(3),\n    orthoScale: 1\n};\n\n/**\n * @private\n */\nclass KeyboardAxisViewHandler {\n\n    #documentKeyDownHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        const view = components.view;\n        const camera = components.camera;\n        const cameraControl = controllers.cameraControl;\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const axisViewRight = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_RIGHT);\n            const axisViewBack = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BACK);\n            const axisViewLeft = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_LEFT);\n            const axisViewFront = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_FRONT);\n            const axisViewTop = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_TOP);\n            const axisViewBottom = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BOTTOM);\n\n            if ((!axisViewRight) && (!axisViewBack) && (!axisViewLeft) && (!axisViewFront) && (!axisViewTop) && (!axisViewBottom)) {\n                return;\n            }\n\n            const aabb = view.aabb;\n            const diag = math.boundaries.getAABB3Diag(aabb);\n\n            math.boundaries.getAABB3Center(aabb, center);\n\n            const perspectiveDist = Math.abs(diag / Math.tan(controllers.cameraFlight.fitFOV * math.DEGTORAD));\n            const orthoScale = diag * 1.1;\n\n            tempCameraTarget.orthoScale = orthoScale;\n\n            if (axisViewRight) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldRight, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewBack) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldForward, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewLeft) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldRight, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewFront) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldForward, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewTop) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldUp, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(math.normalizeVec3(math.mulVec3Scalar(camera.worldForward, 1, tempVec3b), tempVec3c));\n\n            } else if (axisViewBottom) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldUp, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(math.normalizeVec3(math.mulVec3Scalar(camera.worldForward, -1, tempVec3b)));\n            }\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n                controllers.pivotController.setPivotPos(center);\n            }\n\n            if (controllers.cameraFlight.duration > 0) {\n                controllers.cameraFlight.flyTo(tempCameraTarget, () => {\n                    if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                        controllers.pivotController.showPivot();\n                    }\n                });\n\n            } else {\n                controllers.cameraFlight.jumpTo(tempCameraTarget);\n                if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                    controllers.pivotController.showPivot();\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n    }\n}\n\nexport {KeyboardAxisViewHandler};","import * as math from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport type {PickResult} from \"../../../PickResult\";\n\n/**\n * @private\n */\nclass MousePickHandler {\n\n    #view: View;\n    #clicks: number;\n    #timeout: any;\n    #lastPickedEntityId: any;\n    #canvasMouseMoveHandler: (e: any) => void;\n    #canvasMouseDownHandler: (e: any) => void;\n    #documentMouseUpHandler: (e: any) => void;\n    #canvasMouseUpHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const cameraControl = controllers.cameraControl;\n\n        this.#clicks = 0;\n        this.#timeout = null;\n        this.#lastPickedEntityId = null;\n\n        let leftDown = false;\n        let rightDown = false;\n\n        const canvas = this.#view.canvas.canvas;\n\n        const flyCameraTo = (pickResult?: PickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = pickResult && pickResult.viewObject\n                ? pickResult.viewObject.sceneObject.aabb\n                : this.#view.viewer.scene.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = this.#view.camera;\n                const diff = math.subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    // look: pos,\n                    // eye: xeokit.math.addVec3(pos, diff, []),\n                    // up: camera.up,\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvas.addEventListener(\"mousemove\", this.#canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (leftDown || rightDown) {\n                return;\n            }\n\n            const hoverSubs = cameraControl.events.hasSubs(\"hover\");\n            const hoverOutSubs = cameraControl.events.hasSubs(\"hoverOut\");\n            const hoverOffSubs = cameraControl.events.hasSubs(\"hoverOff\");\n            const hoverSurfaceSubs = cameraControl.events.hasSubs(\"hoverSurface\");\n\n            if (hoverSubs || hoverOutSubs || hoverOffSubs || hoverSurfaceSubs) {\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickEntity = true;\n                pickController.schedulePickSurface = hoverSurfaceSubs;\n\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    const pickedEntityId = pickController.pickResult.entity.id;\n\n                    if (this.#lastPickedEntityId !== pickedEntityId) {\n\n                        if (this.#lastPickedEntityId !== undefined) {\n\n                            cameraControl.events.fire(\"hoverOut\", { // Hovered off an entity\n                                entity: this.#view.objects[this.#lastPickedEntityId]\n                            }, true);\n                        }\n\n                        cameraControl.events.fire(\"hoverEnter\", pickController.pickResult, true); // Hovering over a new entity\n\n                        this.#lastPickedEntityId = pickedEntityId;\n                    }\n\n                    cameraControl.events.fire(\"hover\", pickController.pickResult, true);\n\n                    if (pickController.pickResult.worldPos) { // Hovering the surface of an entity\n                        cameraControl.events.fire(\"hoverSurface\", pickController.pickResult, true);\n                    }\n\n                } else {\n\n                    if (this.#lastPickedEntityId !== undefined) {\n\n                        cameraControl.events.fire(\"hoverOut\", { // Hovered off an entity\n                            entity: this.#view.objects[this.#lastPickedEntityId]\n                        }, true);\n\n                        this.#lastPickedEntityId = undefined;\n                    }\n\n                    cameraControl.events.fire(\"hoverOff\", { // Not hovering on any entity\n                        canvasPos: pickController.pickCursorPos\n                    }, true);\n                }\n            }\n        });\n\n        canvas.addEventListener('mousedown', this.#canvasMouseDownHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = true;\n            }\n\n            if (e.which === 3) {\n                rightDown = true;\n            }\n\n            const leftButtonDown = (e.which === 1);\n\n            if (!leftButtonDown) {\n                return;\n            }\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            // Left mouse button down to start pivoting\n\n            states.mouseDownClientX = e.clientX;\n            states.mouseDownClientY = e.clientY;\n            states.mouseDownCursorX = states.pointerCanvasPos[0];\n            states.mouseDownCursorY = states.pointerCanvasPos[1];\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickSurface = true;\n\n                pickController.update();\n\n                if (e.which === 1) {// Left button\n                    const pickResult = pickController.pickResult;\n                    if (pickResult && pickResult.worldPos) {\n                        pivotController.setPivotPos(pickResult.worldPos);\n                        pivotController.startPivot();\n                    } else {\n                        if (configs.smartPivot) {\n                            pivotController.setCanvasPivotPos(states.pointerCanvasPos);\n                        } else {\n                            pivotController.setPivotPos(this.#view.camera.look);\n                        }\n                        pivotController.startPivot();\n                    }\n                }\n            }\n        });\n\n        document.addEventListener('mouseup', this.#documentMouseUpHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = false;\n            }\n\n            if (e.which === 3) {\n                rightDown = false;\n            }\n        });\n\n        canvas.addEventListener('mouseup', this.#canvasMouseUpHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const leftButtonUp = (e.which === 1);\n\n            if (!leftButtonUp) {\n                return;\n            }\n\n            // Left mouse button up to possibly pick or double-pick\n\n            pivotController.hidePivot();\n\n            if (Math.abs(e.clientX - states.mouseDownClientX) > 3 || Math.abs(e.clientY - states.mouseDownClientY) > 3) {\n                return;\n            }\n\n            const pickedSubs = cameraControl.events.hasSubs(\"picked\");\n            const pickedNothingSubs = cameraControl.events.hasSubs(\"pickedNothing\");\n            const pickedSurfaceSubs = cameraControl.events.hasSubs(\"pickedSurface\");\n            const doublePickedSubs = cameraControl.events.hasSubs(\"doublePicked\");\n            const doublePickedSurfaceSubs = cameraControl.events.hasSubs(\"doublePickedSurface\");\n            const doublePickedNothingSubs = cameraControl.events.hasSubs(\"doublePickedNothing\");\n\n            if ((!configs.doublePickFlyTo) &&\n                (!doublePickedSubs) &&\n                (!doublePickedSurfaceSubs) &&\n                (!doublePickedNothingSubs)) {\n\n                //  Avoid the single/double click differentiation timeout\n\n                if (pickedSubs || pickedNothingSubs || pickedSurfaceSubs) {\n\n                    pickController.pickCursorPos = states.pointerCanvasPos;\n                    pickController.schedulePickEntity = true;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.events.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n                            cameraControl.events.fire(\"pickedSurface\", pickController.pickResult, true);\n                        }\n                    } else {\n                        cameraControl.events.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerCanvasPos\n                        }, true);\n                    }\n                }\n\n                this.#clicks = 0;\n\n                return;\n            }\n\n            this.#clicks++;\n\n            if (this.#clicks === 1) { // First click\n\n                this.#timeout = setTimeout(() => {\n\n                    pickController.pickCursorPos = states.pointerCanvasPos;\n                    pickController.schedulePickEntity = configs.doublePickFlyTo;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.events.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n\n                            cameraControl.events.fire(\"pickedSurface\", pickController.pickResult, true);\n\n                            if ((!configs.firstPerson) && configs.followPointer) {\n                                controllers.pivotController.setPivotPos(pickController.pickResult.worldPos);\n                                if (controllers.pivotController.startPivot()) {\n                                    controllers.pivotController.showPivot();\n                                }\n                            }\n                        }\n                    } else {\n                        cameraControl.events.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerCanvasPos\n                        }, true);\n                    }\n\n                    this.#clicks = 0;\n\n                }, 250);  // FIXME: Too short for track pads\n\n            } else { // Second click\n\n                if (this.#timeout !== null) {\n                    window.clearTimeout(this.#timeout);\n                    this.#timeout = null;\n                }\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickEntity = configs.doublePickFlyTo || doublePickedSubs || doublePickedSurfaceSubs;\n                pickController.schedulePickSurface = pickController.schedulePickEntity && doublePickedSurfaceSubs;\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    cameraControl.events.fire(\"doublePicked\", pickController.pickResult, true);\n\n                    if (pickController.pickedSurface) {\n                        cameraControl.onDoublePickedSurface.dispatch( pickController.pickResult, true);\n                    }\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo(pickController.pickResult);\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const pickedEntityAABB = pickController.pickResult.entity.aabb;\n                            const pickedEntityCenterPos = math.boundaries.getAABB3Center(pickedEntityAABB);\n\n                            controllers.pivotController.setPivotPos(pickedEntityCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n\n                } else {\n\n                    cameraControl.events.fire(\"doublePickedNothing\", {\n                        canvasPos: states.pointerCanvasPos\n                    }, true);\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo();\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const viewAABB = this.#view.viewer.scene.aabb;\n                            const viewCenterPos = math.boundaries.getAABB3Center(viewAABB);\n\n                            controllers.pivotController.setPivotPos(viewCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n                this.#clicks = 0;\n            }\n        }, false);\n    }\n\n    reset() {\n        this.#clicks = 0;\n        this.#lastPickedEntityId = null;\n        if (this.#timeout) {\n            window.clearTimeout(this.#timeout);\n            this.#timeout = null;\n        }\n    }\n\n    destroy() {\n        const canvas = this.#view.canvas.canvas;\n        canvas.removeEventListener(\"mousemove\", this.#canvasMouseMoveHandler);\n        canvas.removeEventListener(\"mousedown\", this.#canvasMouseDownHandler);\n        document.removeEventListener(\"mouseup\", this.#documentMouseUpHandler);\n        canvas.removeEventListener(\"mouseup\", this.#canvasMouseUpHandler);\n        if (this.#timeout) {\n            window.clearTimeout(this.#timeout);\n            this.#timeout = null;\n        }\n    }\n}\n\n\nexport {MousePickHandler};","import type {View} from \"../../../View\";\nimport * as keycodes from \"../../../../keycodes\";\n\n/**\n * @private\n */\nclass KeyboardPanRotateDollyHandler {\n\n    #view: View;\n    #documentMouseMoveHandler: () => void;\n    #documentKeyDownHandler: (e: any) => void;\n    #documentKeyUpHandler: (e: any) => void;\n    #onTick: any;\n\n    ///////////////////\n  // >>> FIX constructor sigs\n    /////////////////////\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const keyDownMap: any[] = [];\n        const canvas = components.view.canvas.canvas;\n\n        let mouseMovedSinceLastKeyboardDolly = true;\n\n        document.addEventListener(\"mousemove\", this.#documentMouseMoveHandler = () => {\n            mouseMovedSinceLastKeyboardDolly = true;\n        });\n\n        document.addEventListener(\"keydown\", this.#documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = true;\n            if (keyCode === keycodes.KEY_SHIFT) {\n                canvas.style.cursor = \"move\";\n            }\n        });\n\n        document.addEventListener(\"keyup\", this.#documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = false;\n            if (keyCode === keycodes.KEY_SHIFT) {\n                canvas.style.cursor = null;\n            }\n        });\n\n        this.#onTick = components.view.viewer.events.on(\"tick\", (e: { deltaTime: number; }) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!configs.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const cameraControl = controllers.cameraControl;\n            const elapsedSecs = (e.deltaTime / 1000.0);\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard rotation\n            //-------------------------------------------------------------------------------------------------\n\n            if (!configs.planView) {\n\n                const rotateYPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_POS, keyDownMap);\n                const rotateYNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_NEG, keyDownMap);\n                const rotateXPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_POS, keyDownMap);\n                const rotateXNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_NEG, keyDownMap);\n\n                const orbitDelta = elapsedSecs * configs.keyboardRotationRate;\n\n                if (rotateYPos || rotateYNeg || rotateXPos || rotateXNeg) {\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n\n                    if (rotateYPos) {\n                        updates.rotateDeltaY += orbitDelta;\n\n                    } else if (rotateYNeg) {\n                        updates.rotateDeltaY -= orbitDelta;\n                    }\n\n                    if (rotateXPos) {\n                        updates.rotateDeltaX += orbitDelta;\n\n                    } else if (rotateXNeg) {\n                        updates.rotateDeltaX -= orbitDelta;\n                    }\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                }\n            }\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard panning\n            //-------------------------------------------------------------------------------------------------\n\n            if (!keyDownMap[keycodes.KEY_CTRL] && !keyDownMap[keycodes.KEY_ALT]) {\n\n                const dollyBackwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_BACKWARDS, keyDownMap);\n                const dollyForwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_FORWARDS, keyDownMap);\n\n                if (dollyBackwards || dollyForwards) {\n\n                    const dollyDelta = elapsedSecs * configs.keyboardDollyRate;\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                    if (dollyForwards) {\n                        updates.dollyDelta -= dollyDelta;\n                    } else if (dollyBackwards) {\n                        updates.dollyDelta += dollyDelta;\n                    }\n\n                    if (mouseMovedSinceLastKeyboardDolly) {\n                        states.followPointerDirty = true;\n                        mouseMovedSinceLastKeyboardDolly = false;\n                    }\n                }\n            }\n\n            const panForwards = cameraControl._isKeyDownForAction(cameraControl.PAN_FORWARDS, keyDownMap);\n            const panBackwards = cameraControl._isKeyDownForAction(cameraControl.PAN_BACKWARDS, keyDownMap);\n            const panLeft = cameraControl._isKeyDownForAction(cameraControl.PAN_LEFT, keyDownMap);\n            const panRight = cameraControl._isKeyDownForAction(cameraControl.PAN_RIGHT, keyDownMap);\n            const panUp = cameraControl._isKeyDownForAction(cameraControl.PAN_UP, keyDownMap);\n            const panDown = cameraControl._isKeyDownForAction(cameraControl.PAN_DOWN, keyDownMap);\n\n            const panDelta = (keyDownMap[keycodes.KEY_ALT] ? 0.3 : 1.0) * elapsedSecs * configs.keyboardPanRate; // ALT for slower pan rate\n\n            if (panForwards || panBackwards || panLeft || panRight || panUp || panDown) {\n\n                if ((!configs.firstPerson) && configs.followPointer) {\n                    controllers.pivotController.startPivot();\n                }\n\n                if (panDown) {\n                    updates.panDeltaY += panDelta;\n\n                } else if (panUp) {\n                    updates.panDeltaY += -panDelta;\n                }\n\n                if (panRight) {\n                    updates.panDeltaX += -panDelta;\n\n                } else if (panLeft) {\n                    updates.panDeltaX += panDelta;\n                }\n\n                if (panBackwards) {\n                    updates.panDeltaZ += panDelta;\n\n                } else if (panForwards) {\n                    updates.panDeltaZ += -panDelta;\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n\n        document.removeEventListener(\"mousemove\", this.#documentMouseMoveHandler);\n        document.removeEventListener(\"keydown\", this.#documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this.#documentKeyUpHandler);\n    }\n}\n\nexport {KeyboardPanRotateDollyHandler};","import * as math from \"../../../math/index\";\nimport type {View} from \"../../View\";\n\nconst SCALE_DOLLY_EACH_FRAME = 1; // Recalculate dolly speed for eye->target distance on each Nth frame\nconst EPSILON = 0.001;\nconst tempVec3 = math.vec3();\n\n/**\n * Handles camera updates on each \"tick\" that were scheduled by the various controllers.\n *\n * @private\n */\nclass CameraUpdater {\n\n    #onTick: any;\n    #view: View;\n\n    constructor(view: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = view;\n\n        const camera = view.camera;\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const panController = controllers.panController;\n\n        let countDown = SCALE_DOLLY_EACH_FRAME; // Decrements on each tick\n        let dollyDistFactor = 1.0; // Calculated when countDown is zero\n        let followPointerWorldPos: any = null; // Holds the pointer's World position when configs.followPointer is true\n\n        this.#onTick = view.viewer.onTick.subscribe(() => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            let cursorType = \"default\";\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly decay\n            //------------------------------------------------------------------------------------  ----------------------\n\n            if (Math.abs(updates.dollyDelta) < EPSILON) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation decay\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.rotateDeltaX) < EPSILON) {\n                updates.rotateDeltaX = 0;\n            }\n\n            if (Math.abs(updates.rotateDeltaY) < EPSILON) {\n                updates.rotateDeltaY = 0;\n            }\n\n            if (updates.rotateDeltaX !== 0 || updates.rotateDeltaY !== 0) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly speed eye->look scaling\n            //\n            // If pointer is over an object, then dolly speed is proportional to the distance to that object.\n            //\n            // If pointer is not over an object, then dolly speed is proportional to the distance to the last\n            // object the pointer was over. This is so that we can dolly to structures that may have gaps through\n            // which empty background shows, that the pointer may inadvertently be over. In these cases, we don't\n            // want dolly speed wildly varying depending on how accurately the user avoids the gaps with the pointer.\n            //----------------------------------------------------------------------------------------------------------\n\n            if (configs.followPointer) {\n\n                if (--countDown <= 0) {\n\n                    countDown = SCALE_DOLLY_EACH_FRAME;\n\n                    if (updates.dollyDelta !== 0) {\n                        if (updates.rotateDeltaY === 0 && updates.rotateDeltaX === 0) {\n\n                            if (configs.followPointer && states.followPointerDirty) {\n\n                                pickController.pickCursorPos = states.pointerCanvasPos;\n                                pickController.schedulePickSurface = true;\n                                pickController.update();\n\n                                if (pickController.pickResult && pickController.pickResult.worldPos) {\n                                    followPointerWorldPos = pickController.pickResult.worldPos;\n\n                                } else {\n                                    dollyDistFactor = 1.0;\n                                    followPointerWorldPos = null;\n                                }\n\n                                states.followPointerDirty = false;\n                            }\n                        }\n\n                        if (followPointerWorldPos) {\n                            const dist = Math.abs(math.lenVec3(math.subVec3(followPointerWorldPos, view.camera.eye, tempVec3)));\n                            dollyDistFactor = dist / configs.dollyProximityThreshold;\n                        }\n\n                        if (dollyDistFactor < configs.dollyMinSpeed) {\n                            dollyDistFactor = configs.dollyMinSpeed;\n                        }\n                    }\n                }\n            }\n\n            const dollyDeltaForDist = (updates.dollyDelta * dollyDistFactor);\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation\n            //----------------------------------------------------------------------------------------------------------\n\n            if (updates.rotateDeltaY !== 0 || updates.rotateDeltaX !== 0) {\n\n                if ((!configs.firstPerson) && configs.followPointer && pivotController.getPivoting()) {\n                    pivotController.continuePivot(updates.rotateDeltaY, updates.rotateDeltaX);\n                    pivotController.showPivot();\n\n                } else {\n\n                    if (updates.rotateDeltaX !== 0) {\n                        if (configs.firstPerson) {\n                            camera.pitch(-updates.rotateDeltaX);\n                        } else {\n                            camera.orbitPitch(updates.rotateDeltaX);\n                        }\n                    }\n\n                    if (updates.rotateDeltaY !== 0) {\n                        if (configs.firstPerson) {\n                            camera.yaw(updates.rotateDeltaY);\n                        } else {\n                            camera.orbitYaw(updates.rotateDeltaY);\n                        }\n                    }\n                }\n\n                updates.rotateDeltaX *= configs.rotationInertia;\n                updates.rotateDeltaY *= configs.rotationInertia;\n\n                cursorType = \"grabbing\";\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Panning\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.panDeltaX) < EPSILON) {\n                updates.panDeltaX = 0;\n            }\n\n            if (Math.abs(updates.panDeltaY) < EPSILON) {\n                updates.panDeltaY = 0;\n            }\n\n            if (Math.abs(updates.panDeltaZ) < EPSILON) {\n                updates.panDeltaZ = 0;\n            }\n\n            if (updates.panDeltaX !== 0 || updates.panDeltaY !== 0 || updates.panDeltaZ !== 0) {\n\n                const vec = math.vec3();\n\n                vec[0] = updates.panDeltaX;\n                vec[1] = updates.panDeltaY;\n                vec[2] = updates.panDeltaZ;\n\n                let verticalEye;\n                let verticalLook;\n\n                if (configs.constrainVertical) {\n\n                    if (camera.xUp) {\n                        verticalEye = camera.eye[0];\n                        verticalLook = camera.look[0];\n                    } else if (camera.yUp) {\n                        verticalEye = camera.eye[1];\n                        verticalLook = camera.look[1];\n                    } else if (camera.zUp) {\n                        verticalEye = camera.eye[2];\n                        verticalLook = camera.look[2];\n                    }\n\n                    camera.pan(vec);\n\n                    const eye = camera.eye;\n                    const look = camera.look;\n\n                    if (camera.xUp) {\n                        eye[0] = verticalEye;\n                        look[0] = verticalLook;\n                    } else if (camera.yUp) {\n                        eye[1] = verticalEye;\n                        look[1] = verticalLook;\n                    } else if (camera.zUp) {\n                        eye[2] = verticalEye;\n                        look[2] = verticalLook;\n                    }\n\n                    camera.eye = eye;\n                    camera.look = look;\n\n                } else {\n                    camera.pan(vec);\n                }\n\n                cursorType = \"grabbing\";\n            }\n\n            updates.panDeltaX *= configs.panInertia;\n            updates.panDeltaY *= configs.panInertia;\n            updates.panDeltaZ *= configs.panInertia;\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dollying\n            //----------------------------------------------------------------------------------------------------------\n\n            if (dollyDeltaForDist !== 0) {\n\n                if (dollyDeltaForDist < 0) {\n                    cursorType = \"zoom-in\";\n                } else {\n                    cursorType = \"zoom-out\";\n                }\n\n                if (configs.firstPerson) {\n\n                    let verticalEye;\n                    let verticalLook;\n\n                    if (configs.constrainVertical) {\n                        if (camera.xUp) {\n                            verticalEye = camera.eye[0];\n                            verticalLook = camera.look[0];\n                        } else if (camera.yUp) {\n                            verticalEye = camera.eye[1];\n                            verticalLook = camera.look[1];\n                        } else if (camera.zUp) {\n                            verticalEye = camera.eye[2];\n                            verticalLook = camera.look[2];\n                        }\n                    }\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.pan([0, 0, dollyDeltaForDist]);\n                        camera.ortho.scale = camera.ortho.scale - dollyDeltaForDist;\n                    }\n\n                    if (configs.constrainVertical) {\n                        const eye = camera.eye;\n                        const look = camera.look;\n                        if (camera.xUp) {\n                            eye[0] = verticalEye;\n                            look[0] = verticalLook;\n                        } else if (camera.yUp) {\n                            eye[1] = verticalEye;\n                            look[1] = verticalLook;\n                        } else if (camera.zUp) {\n                            eye[2] = verticalEye;\n                            look[2] = verticalLook;\n                        }\n                        camera.eye = eye;\n                        camera.look = look;\n                    }\n\n                } else if (configs.planView) {\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.ortho.scale = camera.ortho.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n\n                } else { // Orbiting\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.ortho.scale = camera.ortho.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n                }\n\n                updates.dollyDelta *= configs.dollyInertia;\n            }\n\n            pickController.fireEvents();\n\n            document.body.style.cursor = cursorType;\n        });\n    }\n\n    destroy() {\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n}\n\nexport {CameraUpdater};","import type {View} from \"../../../View\";\n\n/**\n * @private\n */\nclass MouseMiscHandler {\n    #view: View;\n    #mouseEnterHandler: any;\n    #mouseMoveHandler: any;\n    #mouseLeaveHandler: any;\n    #mouseDownHandler: any;\n    #mouseUpHandler: any;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const canvas = this.#view.canvas.canvas;\n\n        canvas.addEventListener(\"mouseenter\", this.#mouseEnterHandler = () => {\n            states.mouseover = true;\n        });\n\n        canvas.addEventListener(\"mouseleave\", this.#mouseLeaveHandler = () => {\n            states.mouseover = false;\n            // @ts-ignore\n            canvas.style.cursor = null;\n        });\n\n        document.addEventListener(\"mousemove\", this.#mouseMoveHandler = (e: any) => {\n            getCanvasPosFromEvent(e, canvas, states.pointerCanvasPos);\n        });\n\n        canvas.addEventListener(\"mousedown\", this.#mouseDownHandler = (e: Event) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            getCanvasPosFromEvent(e, canvas, states.pointerCanvasPos);\n            states.mouseover = true;\n        });\n\n        canvas.addEventListener(\"mouseup\",\n            this.#mouseUpHandler = (e:Event) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        const canvas = this.#view.canvas.canvas;\n        document.removeEventListener(\"mousemove\", this.#mouseMoveHandler);\n        canvas.removeEventListener(\"mouseenter\", this.#mouseEnterHandler);\n        canvas.removeEventListener(\"mouseleave\", this.#mouseLeaveHandler);\n        canvas.removeEventListener(\"mousedown\", this.#mouseDownHandler);\n        canvas.removeEventListener(\"mouseup\", this.#mouseUpHandler);\n    }\n}\n\nfunction getCanvasPosFromEvent(event: any, canvas: any, canvasPos: number[]) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        const {x, y} = canvas.getBoundingClientRect();\n        canvasPos[0] = event.clientX - x;\n        canvasPos[1] = event.clientY - y;\n    }\n    return canvasPos;\n}\n\nexport {MouseMiscHandler};\n","import * as math from \"../../../../math/index\";\nimport type {View} from \"../../../View\";\nimport {PerspectiveProjectionType} from \"../../../../constants\";\n\n\nconst getCanvasPosFromEvent = function (event:any, canvasPos:any) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n/**\n * @private\n */\nclass TouchPanRotateAndDollyHandler {\n    #view: View;\n    #onTick: any;\n    #canvasTouchStartHandler: (event: any) => void;\n    #canvasTouchMoveHandler: (event: any) => void;\n\n    constructor(components:any, controllers:any, configs:any, states:any, updates:any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n\n        const tapStartCanvasPos = math.vec2();\n        const tapCanvasPos0 = math.vec2();\n        const tapCanvasPos1 = math.vec2();\n        const touch0Vec = math.vec2();\n\n        const lastCanvasTouchPosList: any[] = [];\n        const canvas = this.#view.canvas.canvas;\n\n        let numTouches = 0;\n        let tapStartTime = -1;\n        let waitForTick = false;\n\n        this.#onTick = this.#view.viewer.onTick.subscribe(() => {\n            waitForTick = false;\n        });\n\n        canvas.addEventListener(\"touchstart\", this.#canvasTouchStartHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.preventDefault();\n\n            const touches = event.touches;\n            const changedTouches = event.changedTouches;\n\n            states.touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n\n                tapStartTime = states.touchStartTime;\n\n                getCanvasPosFromEvent(touches[0], tapStartCanvasPos);\n\n                if (configs.followPointer) {\n\n                    pickController.pickCursorPos = tapStartCanvasPos;\n                    pickController.schedulePickSurface = true;\n                    pickController.update();\n\n                    if (!configs.planView) {\n\n                        if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n\n                            pivotController.setPivotPos(pickController.pickResult.worldPos);\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n\n                        } else {\n\n                            if (configs.smartPivot) {\n                                pivotController.setCanvasPivotPos(states.pointerCanvasPos);\n                            } else {\n                                pivotController.setPivotPos(this.#view.camera.look);\n                            }\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (lastCanvasTouchPosList.length < touches.length) {\n                lastCanvasTouchPosList.push(math.vec2());\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n\n            numTouches = touches.length;\n        });\n\n        canvas.addEventListener(\"touchmove\", this.#canvasTouchMoveHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            if (waitForTick) {\n                // Limit changes detection to one per frame\n                return;\n            }\n\n            waitForTick = true;\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = this.#view.canvas.boundary;\n            const canvasWidth = canvasBoundary[0];\n            const canvasHeight = canvasBoundary[1];\n\n            const touches = event.touches;\n\n            if (event.touches.length !== numTouches) {\n                // Two fingers were pressed, then one of them is removed\n                // We don't want to rotate in this case (weird behavior)\n                return;\n            }\n\n            if (numTouches === 1) {\n\n                getCanvasPosFromEvent(touches[0], tapCanvasPos0);\n\n                //-----------------------------------------------------------------------------------------------\n                // Drag rotation\n                //-----------------------------------------------------------------------------------------------\n\n                math.subVec2(tapCanvasPos0, lastCanvasTouchPosList[0], touch0Vec);\n\n                const xPanDelta = touch0Vec[0];\n                const yPanDelta = touch0Vec[1];\n\n                if (states.longTouchTimeout !== null && (Math.abs(xPanDelta) > configs.longTapRadius || Math.abs(yPanDelta) > configs.longTapRadius)) {\n                    clearTimeout(states.longTouchTimeout);\n                    states.longTouchTimeout = null;\n                }\n\n                if (configs.planView) { // No rotating in plan-view mode\n\n                    const camera = this.#view.camera;\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projection === PerspectiveProjectionType) {\n\n                        const touchPicked = false;\n                        const pickedWorldPos = [0, 0, 0];\n\n                        const depth = Math.abs(touchPicked ? math.lenVec3(math.subVec3(pickedWorldPos, this.#view.camera.eye, [])) : this.#view.camera.eyeLookDist);\n                        const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX += (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX += 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n\n                } else {\n                    updates.rotateDeltaY -= (xPanDelta / canvasWidth) * (configs.dragRotationRate * 1.0); // Full horizontal rotation\n                    updates.rotateDeltaX += (yPanDelta / canvasHeight) * (configs.dragRotationRate * 1.5); // Half vertical rotation\n                }\n\n            } else if (numTouches === 2) {\n\n                const touch0 = touches[0];\n                const touch1 = touches[1];\n\n                getCanvasPosFromEvent(touch0, tapCanvasPos0);\n                getCanvasPosFromEvent(touch1, tapCanvasPos1);\n\n                const lastMiddleTouch = math.geometricMeanVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n                const currentMiddleTouch = math.geometricMeanVec2(tapCanvasPos0, tapCanvasPos1);\n\n                const touchDelta = math.vec2();\n\n                math.subVec2(lastMiddleTouch, currentMiddleTouch, touchDelta);\n\n                const xPanDelta = touchDelta[0];\n                const yPanDelta = touchDelta[1];\n\n                const camera = this.#view.camera;\n\n                // Dollying\n\n                const d1 = math.distVec2([touch0.pageX, touch0.pageY], [touch1.pageX, touch1.pageY]);\n                const d2 = math.distVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n\n                const dollyDelta = (d2 - d1) * configs.touchDollyRate;\n\n                updates.dollyDelta = dollyDelta;\n\n                if (Math.abs(dollyDelta) < 1.0) {\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projection === PerspectiveProjectionType) {\n                        const pickedWorldPos = pickController.pickResult ? pickController.pickResult.worldPos : this.#view.viewer.scene.center;\n\n                        const depth = Math.abs(math.lenVec3(math.subVec3(pickedWorldPos, this.#view.camera.eye, [])));\n                        const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX -= (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX -= 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n                }\n\n\n                states.pointerCanvasPos = currentMiddleTouch;\n            }\n\n            for (let i = 0; i < numTouches; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        const canvas = this.#view.canvas.canvas;\n        canvas.removeEventListener(\"touchstart\", this.#canvasTouchStartHandler);\n        canvas.removeEventListener(\"touchmove\", this.#canvasTouchMoveHandler);\n        this.#view.viewer.onTick.unsubscribe(this.#onTick);\n    }\n}\n\nexport {TouchPanRotateAndDollyHandler};\n","import * as math from \"../../../../math/index\";\nimport type {PickResult} from \"../../../PickResult\";\n\nconst TAP_INTERVAL = 150;\nconst DBL_TAP_INTERVAL = 325;\nconst TAP_DISTANCE_THRESHOLD = 4;\n\n/**\n * @private\n */\nclass TouchPickHandler {\n    #view: any;\n    private _canvasTouchStartHandler: (e: any) => void;\n    private _canvasTouchEndHandler: (e: any) => void;\n\n    constructor(components: any, controllers: any, configs: any, states: any, updates: any) {\n\n        this.#view = components.view;\n\n        const pickController = controllers.pickController;\n        const cameraControl = controllers.cameraControl;\n\n        let touchStartTime;\n        const activeTouches: any[] = [];\n        const tapStartPos = new Float32Array(2);\n        let tapStartTime = -1;\n        let lastTapTime = -1;\n\n        const canvas = this.#view.canvas.canvas;\n\n        const flyCameraTo = (pickResult?: PickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = (pickResult && pickResult.viewObject) ? pickResult.viewObject.sceneObject.aabb : this.#view.scene.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = this.#view.camera;\n                const diff = math.subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvas.addEventListener(\"touchstart\", this._canvasTouchStartHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (states.longTouchTimeout !== null) {\n                clearTimeout(states.longTouchTimeout);\n                states.longTouchTimeout = null;\n            }\n\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n                tapStartTime = touchStartTime;\n                tapStartPos[0] = touches[0].pageX;\n                tapStartPos[1] = touches[0].pageY;\n\n                const rightClickClientX = touches[0].clientX;\n                const rightClickClientY = touches[0].clientY;\n\n                const rightClickPageX = touches[0].pageX;\n                const rightClickPageY = touches[0].pageY;\n\n                states.longTouchTimeout = setTimeout(() => {\n                    controllers.cameraControl.onRightClick.dispatch(cameraControl, { // For context menus\n                        pagePos: [Math.round(rightClickPageX), Math.round(rightClickPageY)],\n                        canvasPos: [Math.round(rightClickClientX), Math.round(rightClickClientY)],\n                        event: e\n                    });\n\n                    states.longTouchTimeout = null;\n                }, configs.longTapTimeout);\n\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (activeTouches.length < touches.length) {\n                activeTouches.push(new Float32Array(2))\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            activeTouches.length = touches.length;\n\n        }, {passive: true});\n\n\n        canvas.addEventListener(\"touchend\", this._canvasTouchEndHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const currentTime = Date.now();\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            const pickedSurfaceSubs = cameraControl.events.hasSubs(\"pickedSurface\");\n\n            if (states.longTouchTimeout !== null) {\n                clearTimeout(states.longTouchTimeout);\n                states.longTouchTimeout = null;\n            }\n\n            // process tap\n\n            if (touches.length === 0 && changedTouches.length === 1) {\n\n                if (tapStartTime > -1 && currentTime - tapStartTime < TAP_INTERVAL) {\n\n                    if (lastTapTime > -1 && tapStartTime - lastTapTime < DBL_TAP_INTERVAL) {\n\n                        // Double-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.onDoublePickedSurface.dispatch(cameraControl, pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.onPickedSurface.dispatch(cameraControl, pickController.pickResult);\n                            }\n\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo(pickController.pickResult);\n                            }\n                        } else {\n                            cameraControl.onDoublePickedNothing.dispatch(cameraControl, null);\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo();\n                            }\n                        }\n\n                        lastTapTime = -1;\n\n                    } else if (math.distVec2(activeTouches[0], tapStartPos) < TAP_DISTANCE_THRESHOLD) {\n\n                        // Single-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.onPicked.dispatch(cameraControl, pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.onPickedSurface.dispatch(cameraControl,  pickController.pickResult);\n                            }\n\n                        } else {\n                            cameraControl.onPickedNothing.dispatch(cameraControl) ;\n                        }\n\n                        lastTapTime = currentTime;\n                    }\n\n                    tapStartTime = -1\n                }\n            }\n\n            activeTouches.length = touches.length;\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            e.stopPropagation();\n\n        }, {passive: true});\n\n    }\n\n    reset() {\n        // TODO\n        // tapStartTime = -1;\n        // lastTapTime = -1;\n\n    }\n\n    destroy() {\n        const canvas = this.#view.canvas.canvas;\n        canvas.removeEventListener(\"touchstart\", this._canvasTouchStartHandler);\n        canvas.removeEventListener(\"touchend\", this._canvasTouchEndHandler);\n    }\n}\n\n\nexport {TouchPickHandler};","import {Component} from '../../Component';\n\nimport {CameraFlightAnimation} from '../camera/CameraFlightAnimation';\nimport {PanController} from \"./lib/controllers/PanController\";\nimport {PivotController} from \"./lib/controllers/PivotController\";\nimport {PickController} from \"./lib/controllers/PickController\";\nimport {MousePanRotateDollyHandler} from \"./lib/handlers/MousePanRotateDollyHandler\";\nimport {KeyboardAxisViewHandler} from \"./lib/handlers/KeyboardAxisViewHandler\";\nimport {MousePickHandler} from \"./lib/handlers/MousePickHandler\";\nimport {KeyboardPanRotateDollyHandler} from \"./lib/handlers/KeyboardPanRotateDollyHandler\";\nimport {CameraUpdater} from \"./lib/CameraUpdater\";\nimport {MouseMiscHandler} from \"./lib/handlers/MouseMiscHandler\";\nimport {TouchPanRotateAndDollyHandler} from \"./lib/handlers/TouchPanRotateAndDollyHandler\";\nimport {TouchPickHandler} from \"./lib/handlers/TouchPickHandler\";\nimport {EventDispatcher, IEvent} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./../../EventEmitter\";\n\nimport * as utils from \"../../utils/index\";\nimport * as math from \"../../math/index\";\nimport type {View} from \"../View\";\nimport type {Canvas} from \"../Canvas\";\nimport type {Camera} from \"../camera/index\";\nimport type {Scene} from \"../../scene/Scene\";\nimport type {PickResult} from \"../PickResult\";\n\nimport * as keycodes from \"../../keycodes\";\n\n\nclass HoverEvent {\n}\n\n/**\n * Controls a {@link Camera} with user input.\n *\n * ## Summary\n *\n * * Controls the {@link Camera} belonging to its {@link View}\n * * Reads touch, mouse and keyboard input\n * * Located at {@link View.cameraControl}\n * * Three navigation modes: \"orbit\", \"firstPerson\" and \"planView\"\n * * Dynamic key mapping\n * * Smart-pivot\n * * Move-to-pointer\n * * Distance-scaled rate of movement\n * * Inertia\n */\nexport class CameraControl extends Component {\n\n    /**\n     * Identifies the *leftwards panning* action, in which the {@link Camera} moves leftwards along its local axis.\n     */\n    public static readonly PAN_LEFT: number = 0;\n\n    /**\n     * Identifies the *rightwards panning* action, in which the {@link Camera} moves rightwards along its local axis.\n     */\n    public static readonly PAN_RIGHT: number = 1;\n\n    /**\n     * Identifies the *upwards panning* action, in which the {@link Camera} moves upwards along its local vertical axis.\n     */\n    public static readonly PAN_UP: number = 2;\n\n    /**\n     * Identifies the *downwards panning* action, in which the {@link Camera} moves downwards along its local vertical axis.\n     */\n    public static readonly PAN_DOWN: number = 3;\n\n    /**\n     * Identifies the *forwards panning* action, in which the {@link Camera} advances forwards along its current view direction.\n     */\n    public static readonly PAN_FORWARDS: number = 4;\n\n    /**\n     * Identifies the *backwards panning* action, in which the {@link Camera} retreats backwards along its current view direction.\n     */\n    public static readonly PAN_BACKWARDS: number = 5;\n\n    /**\n     * Identifies the *positive-rotation-about-X-axis* action.\n     */\n    public static readonly ROTATE_X_POS: number = 6;\n\n    /**\n     * Identifies the *negative-rotation-about-X-axis* action.\n     */\n    public static readonly ROTATE_X_NEG: number = 7;\n\n    /**\n     * Identifies the *positive-rotation-about-Y-axis* action.\n     */\n    public static readonly ROTATE_Y_POS: number = 8;\n\n    /**\n     * Identifies the *negative-rotation-about-Y-axis* action.\n     */\n    public static readonly ROTATE_Y_NEG: number = 9;\n\n    /**\n     * Identifies the *dolly forwards* action.\n     */\n    public static readonly DOLLY_FORWARDS: number = 10;\n\n    /**\n     * Identifies the *dolly backwards* action.\n     */\n    public static readonly DOLLY_BACKWARDS: number = 11;\n\n    /**\n     * Identifies the *axis-view-right* action.\n     */\n    public static readonly AXIS_VIEW_RIGHT: number = 12;\n\n    /**\n     * Identifies the *axis-view-back* action.\n     */\n    public static readonly AXIS_VIEW_BACK: number = 13;\n\n    /**\n     * Identifies the *axis-view-left* action.\n     */\n    public static readonly AXIS_VIEW_LEFT: number = 14;\n\n    /**\n     * Identifies the *axis-view-front* action.\n     */\n    public static readonly AXIS_VIEW_FRONT: number = 15;\n\n    /**\n     * Identifies the *axis-view-top* action.\n     */\n    public static readonly AXIS_VIEW_TOP: number = 16;\n\n    /**\n     * Identifies the *axis-view-bottom* action.\n     */\n    public static readonly AXIS_VIEW_BOTTOM: number = 17;\n\n    /**\n     * The View that owns this CameraControl.\n     */\n    public readonly view: View;\n\n    /**\n     * The Canvas where this CameraContol listens for input.\n     */\n    public readonly canvas: Canvas;\n\n    /**\n     * The Camera this CameraControl controls.\n     */\n    public readonly camera: Camera;\n\n    readonly #components: {\n        view: View;\n        canvas: Canvas;\n        camera: Camera;\n    };\n\n    readonly #configs: {\n        rotationInertia: number;\n        mouseWheelDollyRate: number;\n        keyboardPanRate: number;\n        touchPanRate: number;\n        pointerEnabled: boolean;\n        dollyProximityThreshold: number;\n        keyboardRotationRate: number;\n        planView: boolean;\n        keyboardLayout: string;\n        constrainVertical: boolean;\n        touchDollyRate: number;\n        dragRotationRate: number;\n        firstPerson: boolean;\n        active: boolean;\n        longTapRadius: number;\n        dollyMinSpeed: number;\n        panInertia: number;\n        followPointer: boolean;\n        showPivot: boolean;\n        navMode: string;\n        longTapTimeout: number;\n        keyboardDollyRate: number;\n        dollyInertia: number;\n        panRightClick: boolean;\n        smartPivot: boolean;\n        doublePickFlyTo: boolean;\n        keyboardEnabled: boolean;\n        keyMap: { [key: number]: any };\n    };\n\n    readonly #states: {\n        mouseDownCursorX: number;\n        tapStartTime: number;\n        lastTapTime: number;\n        mouseover: boolean;\n        mouseDownCursorY: number;\n        pointerCanvasPos: any;\n        activeTouches: any[];\n        tapStartPos: any;\n        longTouchTimeout: null;\n        followPointerDirty: boolean;\n        mouseDownClientX: number;\n        mouseDownClientY: number;\n        touchStartTime: null;\n        altDown: boolean ;\n        ctrlDown: boolean;\n        keyDown: boolean[];\n        shiftDown: boolean|undefined;\n    };\n\n    readonly #updates: {\n        panDeltaZ: number;\n        panDeltaY: number;\n        panDeltaX: number;\n        rotateDeltaX: number;\n        dollyDelta: number;\n        rotateDeltaY: number\n    };\n\n    readonly #controllers: {\n        pickController: PickController;\n        cameraControl: CameraControl;\n        pivotController: PivotController;\n        cameraFlight: CameraFlightAnimation; panController: PanController\n    };\n\n    readonly #handlers: (\n        MouseMiscHandler |\n        TouchPanRotateAndDollyHandler |\n        MousePanRotateDollyHandler |\n        KeyboardAxisViewHandler |\n        MousePickHandler | TouchPickHandler | KeyboardPanRotateDollyHandler)[];\n\n    readonly #cameraUpdater: CameraUpdater;\n\n\n\n    /**\n     * Event fired when we right-click.\n     *\n     * @event\n     */\n    readonly onRightClick: EventEmitter<CameraControl, any>;\n\n    /**\n     * Event fired when the pointer moves while over a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHover: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves while over a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverSurface: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves while over empty space.\n     *\n     * @event\n     */\n    readonly onHoverOff: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves onto a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverEnter: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when the pointer moves off a {@link ViewObject}.\n     *\n     * @event\n     */\n    readonly onHoverOut: EventEmitter<CameraControl, HoverEvent>;\n\n    /**\n     * Event fired when a {@link ViewObject} is picked.\n     *\n     * @event\n     */\n    readonly onPicked: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is picked.\n     *\n     * @event\n     */\n    readonly onPickedSurface: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is picked.\n     *\n     * @event\n     */\n    readonly onPickedNothing: EventEmitter<CameraControl, null>;\n\n    /**\n     * Event fired when a surface is double-picked.\n     *\n     * @event\n     */\n    readonly onDoublePickedSurface: EventEmitter<CameraControl, PickResult>;\n\n    /**\n     * Event fired when empty space is double-picked.\n     *\n     * @event\n     */\n    readonly onDoublePickedNothing: EventEmitter<CameraControl, PickResult>;\n\n\n    /**\n     * @private\n     */\n    constructor(view: View, canvas: Canvas, camera: Camera, cfg: {\n        mouseWheelDollyRate?: number;\n        keyboardDollyRate?: number;\n        panInertia?: number;\n        dollyMinSpeed?: number;\n        dollyProximityThreshold?: number;\n        dollyInertia?: number;\n        touchDollyRate?: number;\n        dragRotationRate?: number;\n        keyboardRotationRate?: number;\n        touchPanRate?: number;\n        keyboardPanRate?: number;\n        rotationInertia?: number;\n        followPointer?: boolean;\n        active?: boolean;\n        panRightClick?: boolean;\n        keyMap?: {};\n        keyboardLayout?: any;\n        constrainVertical?: boolean;\n        planView?: any;\n        navMode?: string;\n        doublePickFlyTo?: boolean;\n        keyboardEnabled?: boolean;\n    }) {\n\n        super(view, cfg);\n\n        this.view = view;\n        this.canvas = canvas;\n        this.camera = camera;\n\n        canvas.canvas.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n\n        this.#components = {\n            view,\n            canvas,\n            camera\n        }\n\n        this.#configs = {\n            longTapTimeout: 600, // Millisecs\n            longTapRadius: 5, // Pixels\n            active: true,\n            keyboardLayout: \"qwerty\",\n            navMode: \"orbit\",\n            planView: false,\n            firstPerson: false,\n            followPointer: true,\n            doublePickFlyTo: true,\n            panRightClick: true,\n            showPivot: false,\n            pointerEnabled: true,\n            constrainVertical: false,\n            smartPivot: false,\n            dragRotationRate: 360.0,\n            keyboardRotationRate: 90.0,\n            rotationInertia: 0.0,\n            keyboardPanRate: 1.0,\n            touchPanRate: 1.0,\n            panInertia: 0.5,\n            keyboardDollyRate: 10,\n            mouseWheelDollyRate: 100,\n            touchDollyRate: 0.2,\n            dollyInertia: 0,\n            dollyProximityThreshold: 30.0,\n            dollyMinSpeed: 0.04,\n            keyboardEnabled: true,\n            keyMap: {}\n        };\n\n        this.#states = {\n            pointerCanvasPos: math.vec2(),\n            mouseover: false,\n            followPointerDirty: true,\n            mouseDownClientX: 0,\n            mouseDownClientY: 0,\n            mouseDownCursorX: 0,\n            mouseDownCursorY: 0,\n            touchStartTime: null,\n            activeTouches: [],\n            tapStartPos: math.vec2(),\n            tapStartTime: -1,\n            lastTapTime: -1,\n            longTouchTimeout: null,\n            altDown: false ,\n            ctrlDown: false,\n            keyDown: [],\n            shiftDown: false,\n        };\n\n        this.#updates = {\n            rotateDeltaX: 0,\n            rotateDeltaY: 0,\n            panDeltaX: 0,\n            panDeltaY: 0,\n            panDeltaZ: 0,\n            dollyDelta: 0\n        };\n\n        this.#controllers = {\n            cameraControl: this,\n            pickController: new PickController(this, this.#configs),\n            pivotController: new PivotController(this, this.#configs),\n            panController: new PanController(this),\n            cameraFlight: new CameraFlightAnimation(this.view, {\n                duration: 0.5\n            })\n        };\n\n        this.#handlers = [\n            new MouseMiscHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new TouchPanRotateAndDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new MousePanRotateDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new KeyboardAxisViewHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new MousePickHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new TouchPickHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates),\n            new KeyboardPanRotateDollyHandler(this.#components, this.#controllers, this.#configs, this.#states, this.#updates)\n        ];\n\n        // Applies scheduled updates to the Camera on each Scene \"tick\" event\n\n        this.#cameraUpdater = new CameraUpdater(this, this.#controllers, this.#configs, this.#states, this.#updates);\n\n        this.onHover = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverOff = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverEnter = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n        this.onHoverOut = new EventEmitter(new EventDispatcher<CameraControl, HoverEvent>());\n\n        // Set initial user configurations\n\n        this.navMode = cfg.navMode;\n        this.constrainVertical = cfg.constrainVertical;\n        this.keyMap = cfg.keyMap;\n        this.doublePickFlyTo = cfg.doublePickFlyTo;\n        this.panRightClick = cfg.panRightClick;\n        this.active = cfg.active;\n        this.followPointer = cfg.followPointer;\n        this.rotationInertia = cfg.rotationInertia;\n        this.keyboardPanRate = cfg.keyboardPanRate;\n        this.touchPanRate = cfg.touchPanRate;\n        this.keyboardRotationRate = cfg.keyboardRotationRate;\n        this.dragRotationRate = cfg.dragRotationRate;\n        this.touchDollyRate = cfg.touchDollyRate;\n        this.dollyInertia = cfg.dollyInertia;\n        this.dollyProximityThreshold = cfg.dollyProximityThreshold;\n        this.dollyMinSpeed = cfg.dollyMinSpeed;\n        this.panInertia = cfg.panInertia;\n        this.pointerEnabled = true;\n        this.keyboardDollyRate = cfg.keyboardDollyRate;\n        this.mouseWheelDollyRate = cfg.mouseWheelDollyRate;\n        this.keyboardEnabled = cfg.keyboardEnabled;\n    }\n\n    /**\n     * Gets custom mappings of keys to {@link CameraControl} actions.\n     *\n     * @returns Current key mappings.\n     */\n    get keyMap(): { [key: number]: number } {\n        return this.#configs.keyMap;\n    }\n\n    /**\n     * Sets custom mappings of keys to ````CameraControl```` actions.\n     *\n     * See class docs for usage.\n     *\n     * @param value Either a set of new key mappings, or a string to select a keyboard layout,\n     * which causes ````CameraControl```` to use the default key mappings for that layout.\n     */\n    set keyMap(value: { [key: number]: number } | string | undefined) {\n        value = value || \"qwerty\";\n        if (utils.isString(value)) {\n            const keyMap: { [key: number]: any } = {};\n\n            switch (value) {\n\n                default:\n                    this.error(\"Unsupported value for 'keyMap': \" + value + \" defaulting to 'qwerty'\");\n                // Intentional fall-through to \"qwerty\"\n                case \"qwerty\":\n                    keyMap[CameraControl.PAN_LEFT] = [keycodes.KEY_A];\n                    keyMap[CameraControl.PAN_RIGHT] = [keycodes.KEY_D];\n                    keyMap[CameraControl.PAN_UP] = [keycodes.KEY_Z];\n                    keyMap[CameraControl.PAN_DOWN] = [keycodes.KEY_X];\n                    keyMap[CameraControl.PAN_BACKWARDS] = [];\n                    keyMap[CameraControl.PAN_FORWARDS] = [];\n                    keyMap[CameraControl.DOLLY_FORWARDS] = [keycodes.KEY_W, keycodes.KEY_ADD];\n                    keyMap[CameraControl.DOLLY_BACKWARDS] = [keycodes.KEY_S, keycodes.KEY_SUBTRACT];\n                    keyMap[CameraControl.ROTATE_X_POS] = [keycodes.KEY_DOWN_ARROW];\n                    keyMap[CameraControl.ROTATE_X_NEG] = [keycodes.KEY_UP_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_POS] = [keycodes.KEY_Q, keycodes.KEY_LEFT_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_NEG] = [keycodes.KEY_E, keycodes.KEY_RIGHT_ARROW];\n                    keyMap[CameraControl.AXIS_VIEW_RIGHT] = [keycodes.KEY_NUM_1];\n                    keyMap[CameraControl.AXIS_VIEW_BACK] = [keycodes.KEY_NUM_2];\n                    keyMap[CameraControl.AXIS_VIEW_LEFT] = [keycodes.KEY_NUM_3];\n                    keyMap[CameraControl.AXIS_VIEW_FRONT] = [keycodes.KEY_NUM_4];\n                    keyMap[CameraControl.AXIS_VIEW_TOP] = [keycodes.KEY_NUM_5];\n                    keyMap[CameraControl.AXIS_VIEW_BOTTOM] = [keycodes.KEY_NUM_6];\n                    break;\n\n                case \"azerty\":\n                    keyMap[CameraControl.PAN_LEFT] = [keycodes.KEY_Q];\n                    keyMap[CameraControl.PAN_RIGHT] = [keycodes.KEY_D];\n                    keyMap[CameraControl.PAN_UP] = [keycodes.KEY_W];\n                    keyMap[CameraControl.PAN_DOWN] = [keycodes.KEY_X];\n                    keyMap[CameraControl.PAN_BACKWARDS] = [];\n                    keyMap[CameraControl.PAN_FORWARDS] = [];\n                    keyMap[CameraControl.DOLLY_FORWARDS] = [keycodes.KEY_Z, keycodes.KEY_ADD];\n                    keyMap[CameraControl.DOLLY_BACKWARDS] = [keycodes.KEY_S, keycodes.KEY_SUBTRACT];\n                    keyMap[CameraControl.ROTATE_X_POS] = [keycodes.KEY_DOWN_ARROW];\n                    keyMap[CameraControl.ROTATE_X_NEG] = [keycodes.KEY_UP_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_POS] = [keycodes.KEY_A, keycodes.KEY_LEFT_ARROW];\n                    keyMap[CameraControl.ROTATE_Y_NEG] = [keycodes.KEY_E, keycodes.KEY_RIGHT_ARROW];\n                    keyMap[CameraControl.AXIS_VIEW_RIGHT] = [keycodes.KEY_NUM_1];\n                    keyMap[CameraControl.AXIS_VIEW_BACK] = [keycodes.KEY_NUM_2];\n                    keyMap[CameraControl.AXIS_VIEW_LEFT] = [keycodes.KEY_NUM_3];\n                    keyMap[CameraControl.AXIS_VIEW_FRONT] = [keycodes.KEY_NUM_4];\n                    keyMap[CameraControl.AXIS_VIEW_TOP] = [keycodes.KEY_NUM_5];\n                    keyMap[CameraControl.AXIS_VIEW_BOTTOM] = [keycodes.KEY_NUM_6];\n                    break;\n            }\n\n            this.#configs.keyMap = keyMap;\n        } else {\n            const keyMap = value;\n            this.#configs.keyMap = keyMap;\n        }\n    }\n\n    /**\n     * Sets the HTMl element to represent the pivot point when {@link CameraControl.followPointer} is true.\n     *\n     * See class comments for an example.\n     *\n     * @param  element HTML element representing the pivot point.\n     */\n    set pivotElement(element: HTMLElement) {\n        this.#controllers.pivotController.setPivotElement(element);\n    }\n\n    /**\n     * Gets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @returns ````true```` if this ````CameraControl```` is active.\n     */\n    get active(): boolean {\n        return this.#configs.active;\n    }\n\n    /**\n     *  Sets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @param value Set ````true```` to activate this ````CameraControl````.\n     */\n    set active(value: boolean | undefined) {\n        this.#configs.active = value !== false;\n    }\n\n    /**\n     * Gets the current navigation mode.\n     *\n     * @returns {String} The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    get navMode(): string {\n        return this.#configs.navMode;\n    }\n\n    /**\n     * Sets the current navigation mode.\n     *\n     * Accepted values are:\n     *\n     * * \"orbit\" - rotation orbits about the current target or pivot point,\n     * * \"firstPerson\" - rotation is about the current eye position,\n     * * \"planView\" - rotation is disabled.\n     *\n     * See class comments for more info.\n     *\n     * @param navMode The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    set navMode(navMode: string | undefined) {\n        navMode = navMode || \"orbit\";\n        if (navMode !== \"firstPerson\" && navMode !== \"orbit\" && navMode !== \"planView\") {\n            this.error(\"Unsupported value for navMode: \" + navMode + \" - supported values are 'orbit', 'firstPerson' and 'planView' - defaulting to 'orbit'\");\n            navMode = \"orbit\";\n        }\n        this.#configs.firstPerson = (navMode === \"firstPerson\");\n        this.#configs.planView = (navMode === \"planView\");\n        if (this.#configs.firstPerson || this.#configs.planView) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n        this.#configs.navMode = navMode;\n    }\n\n    /**\n     * Gets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is desirable when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without interfering with the {@link Camera}.\n     *\n     * @returns {Boolean} Returns ````true```` if mouse and touch input is enabled.\n     */\n    get pointerEnabled(): boolean {\n        return this.#configs.pointerEnabled;\n    }\n\n    /**\n     * Sets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is useful when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without disturbing the {@link Camera}.\n     *\n     * @param value Set ````true```` to enable mouse and touch input.\n     */\n    set pointerEnabled(value: boolean) {\n        this.#reset();\n        this.#configs.pointerEnabled = !!value;\n    }\n\n    /**\n     * Sets whether the {@link Camera} follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @returns {Boolean} Returns ````true```` if the Camera follows the pointer.\n     */\n    get followPointer(): boolean {\n        return this.#configs.followPointer;\n    }\n\n    /**\n     * Sets whether the {@link Camera} follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @param value Set ````true```` to enable the Camera to follow the pointer.\n     */\n    set followPointer(value: boolean | undefined) {\n        this.#configs.followPointer = (value !== false);\n    }\n\n    /**\n     * Gets the current World-space 3D pivot position.\n     *\n     * Only applies when {@link CameraControl.followPointer} is ````true````.\n     *\n     * @return {Number[]} worldPos The current World-space 3D pivot position.\n     */\n    get pivotPos(): math.FloatArrayParam {\n        return this.#controllers.pivotController.getPivotPos();\n    }\n\n    /**\n     * Sets the current World-space 3D target position.\n     *\n     * Only applies when {@link CameraControl.followPointer} is ````true````.\n     *\n     * @param worldPos The new World-space 3D target position.\n     */\n    set pivotPos(worldPos: math.FloatArrayParam) {\n        this.#controllers.pivotController.setPivotPos(worldPos);\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get dollyToPointer(): boolean {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        return this.followPointer;\n    }\n\n    /**\n     * @deprecated\n     * @param value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set dollyToPointer(value: boolean) {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        this.followPointer = value;\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get panToPointer(): boolean {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n        return false;\n    }\n\n    /**\n     * @deprecated\n     * @param value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set panToPointer(value: boolean) {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if plan-view mode is enabled.\n     * @deprecated\n     */\n    get planView(): boolean {\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n        return this.#configs.planView;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @param value Set ````true```` to enable plan-view mode.\n     * @deprecated\n     */\n    set planView(value: boolean) {\n        this.#configs.planView = !!value;\n        this.#configs.firstPerson = false;\n        if (this.#configs.planView) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera.eye} rotates about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if first-person mode is enabled.\n     * @deprecated\n     */\n    get firstPerson(): boolean {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        return this.#configs.firstPerson;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera.eye} rotates about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl.navMode} instead.\n     *\n     * @param value Set ````true```` to enable first-person mode.\n     * @deprecated\n     */\n    set firstPerson(value: boolean) {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        this.#configs.firstPerson = !!value;\n        this.#configs.planView = false;\n        if (this.#configs.firstPerson) {\n            this.#controllers.pivotController.hidePivot();\n            this.#controllers.pivotController.endPivot();\n        }\n    }\n\n    /**\n     * Gets whether to vertically constrain the {@link Camera} position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera.eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl.navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} ````true```` when Camera is vertically constrained.\n     */\n    get constrainVertical(): boolean {\n        return this.#configs.constrainVertical;\n    }\n\n    /**\n     * Sets whether to vertically constrain the {@link Camera} position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera.eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl.navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @param value Set ````true```` to vertically constrain the Camera.\n     */\n    set constrainVertical(value: boolean | undefined) {\n        this.#configs.constrainVertical = !!value;\n    }\n\n    /**\n     * Gets whether double-picking an {@link Entity} causes the {@link Camera} to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when double-pick-fly-to mode is enabled.\n     */\n    get doublePickFlyTo(): boolean {\n        return this.#configs.doublePickFlyTo;\n    }\n\n    /**\n     * Sets whether double-picking an {@link Entity} causes the {@link Camera} to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @param value Set ````true```` to enable double-pick-fly-to mode.\n     */\n    set doublePickFlyTo(value: boolean | undefined) {\n        this.#configs.doublePickFlyTo = value !== false;\n    }\n\n    /**\n     * Gets whether right-clicking pans the {@link Camera}.\n     *\n     * Default is ````true````.\n     *\n     * @returns {Boolean} Returns ````false```` when pan on right-click is disabled.\n     */\n    get panRightClick(): boolean {\n        return this.#configs.panRightClick;\n    }\n\n    /**\n     * Sets whether either right-clicking (true) or middle-clicking (false) pans the {@link Camera}.\n     *\n     * Default is ````true````.\n     *\n     * @param value Set ````false```` to disable pan on right-click.\n     */\n    set panRightClick(value: boolean | undefined) {\n        this.#configs.panRightClick = value !== false;\n    }\n\n    /**\n     * Gets the rotation inertia factor.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl.navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @returns {Number} The inertia factor.\n     */\n    get rotationInertia(): number {\n        return this.#configs.rotationInertia;\n    }\n\n    /**\n     * Sets a factor in range ````[0..1]```` indicating how much the {@link Camera} keeps moving after you finish rotating it.\n     *\n     * A value of ````0.0```` causes it to immediately stop, ````0.5```` causes its movement to decay 50% on each tick,\n     * while ````1.0```` causes no decay, allowing it continue moving, by the current rate of rotation.\n     *\n     * You may choose an inertia of zero when you want be able to precisely rotate the Camera,\n     * without interference from inertia. Zero inertia can also mean that less frames are rendered while\n     * you are rotating the Camera.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl.navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @param rotationInertia New inertial factor.\n     */\n    set rotationInertia(rotationInertia: number | undefined) {\n        this.#configs.rotationInertia = (rotationInertia !== undefined && rotationInertia !== null) ? rotationInertia : 0.0;\n    }\n\n    /**\n     * Gets how fast the {@link Camera} pans on touch panning\n     *\n     * Default is ````1.0````.\n     *\n     * @returns {Number} The current touch pan rate.\n     */\n    get touchPanRate(): number {\n        return this.#configs.touchPanRate;\n    }\n\n    /**\n     * Sets how fast the camera pans on touch panning\n     *\n     * @param touchPanRate The new touch pan rate.\n     */\n    set touchPanRate(touchPanRate: number | undefined) {\n        this.#configs.touchPanRate = (touchPanRate !== null && touchPanRate !== undefined) ? touchPanRate : 1.0;\n    }\n\n    /**\n     * Gets how much the {@link Camera} pans each second with keyboard input.\n     *\n     * Default is ````5.0````.\n     *\n     * @returns {Number} The current keyboard pan rate.\n     */\n    get keyboardPanRate(): number {\n        return this.#configs.keyboardPanRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} pans each second with keyboard input.\n     *\n     * Default is ````5.0````, to pan the Camera ````5.0```` World-space units every second that\n     * a panning key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * panning.\n     *\n     * Panning direction is aligned to our Camera's orientation. When we pan horizontally, we pan\n     * to our left and right, when we pan vertically, we pan upwards and downwards, and when we pan forwards\n     * and backwards, we pan along the direction the Camera is pointing.\n     *\n     * Unlike dollying when {@link followPointer} is ````true````, panning does not follow the pointer.\n     *\n     * @param keyboardPanRate The new keyboard pan rate.\n     */\n    set keyboardPanRate(keyboardPanRate: number | undefined) {\n        this.#configs.keyboardPanRate = (keyboardPanRate !== null && keyboardPanRate !== undefined) ? keyboardPanRate : 5.0;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link Camera} rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````.\n     *\n     * @returns {Number} The current keyboard rotation rate.\n     */\n    get keyboardRotationRate(): number {\n        return this.#configs.keyboardRotationRate;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link Camera} rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````, to rotate/orbit the Camera ````90.0```` degrees every second that\n     * a rotation key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * rotation/orbit.\n     *\n     * @param keyboardRotationRate The new keyboard rotation rate.\n     */\n    set keyboardRotationRate(keyboardRotationRate: number | undefined) {\n        this.#configs.keyboardRotationRate = (keyboardRotationRate !== null && keyboardRotationRate !== undefined) ? keyboardRotationRate : 90.0;\n    }\n\n    /**\n     * Gets the current drag rotation rate.\n     *\n     * Default is ````360.0````.\n     *\n     * @returns {Number} The current drag rotation rate.\n     */\n    get dragRotationRate(): number {\n        return this.#configs.dragRotationRate;\n    }\n\n    /**\n     * Sets the current drag rotation rate.\n     *\n     * This configures how many degrees the {@link Camera} rotates/orbits for a full sweep of the canvas by mouse or touch dragging.\n     *\n     * For example, a value of ````360.0```` indicates that the ````Camera```` rotates/orbits ````360.0```` degrees horizontally\n     * when we sweep the entire width of the canvas.\n     *\n     * ````CameraControl```` makes vertical rotation half as sensitive as horizontal rotation, so that we don't tend to\n     * flip upside-down. Therefore, a value of ````360.0```` rotates/orbits the ````Camera```` through ````180.0```` degrees\n     * vertically when we sweep the entire height of the canvas.\n     *\n     * Default is ````360.0````.\n     *\n     * @param dragRotationRate The new drag rotation rate.\n     */\n    set dragRotationRate(dragRotationRate: number | undefined) {\n        this.#configs.dragRotationRate = (dragRotationRate !== null && dragRotationRate !== undefined) ? dragRotationRate : 360.0;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second with keyboard input.\n     *\n     * Default is ````15.0````.\n     *\n     * @returns {Number} The current keyboard dolly rate.\n     */\n    get keyboardDollyRate(): number {\n        return this.#configs.keyboardDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys each second with keyboard input.\n     *\n     * Default is ````15.0````, to dolly the {@link Camera} ````15.0```` World-space units per second while we hold down\n     * the ````+```` and ````-```` keys.\n     *\n     * @param keyboardDollyRate The new keyboard dolly rate.\n     */\n    set keyboardDollyRate(keyboardDollyRate: number | undefined) {\n        this.#configs.keyboardDollyRate = (keyboardDollyRate !== null && keyboardDollyRate !== undefined) ? keyboardDollyRate : 15.0;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second with touch input.\n     *\n     * Default is ````0.2````.\n     *\n     * @returns {Number} The current touch dolly rate.\n     */\n    get touchDollyRate(): number {\n        return this.#configs.touchDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys with touch input.\n     *\n     * Default is ````0.2````\n     *\n     * @param touchDollyRate The new touch dolly rate.\n     */\n    set touchDollyRate(touchDollyRate: number | undefined) {\n        this.#configs.touchDollyRate = (touchDollyRate !== null && touchDollyRate !== undefined) ? touchDollyRate : 0.2;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````.\n     *\n     * @returns {Number} The current mouseWheel dolly rate.\n     */\n    get mouseWheelDollyRate(): number {\n        return this.#configs.mouseWheelDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````, to dolly the {@link Camera} ````10.0```` World-space units per second as we spin\n     * the mouse wheel.\n     *\n     * @param mouseWheelDollyRate The new mouse wheel dolly rate.\n     */\n    set mouseWheelDollyRate(mouseWheelDollyRate: number | undefined) {\n        this.#configs.mouseWheelDollyRate = (mouseWheelDollyRate !== null && mouseWheelDollyRate !== undefined) ? mouseWheelDollyRate : 100.0;\n    }\n\n    /**\n     * Gets the dolly inertia factor.\n     *\n     * Default is ````0````.\n     *\n     * @returns {Number} The current dolly inertia factor.\n     */\n    get dollyInertia(): number {\n        return this.#configs.dollyInertia;\n    }\n\n    /**\n     * Sets the dolly inertia factor.\n     *\n     * This factor configures how much the {@link Camera} keeps moving after you finish dollying it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes dollying to immediately stop,\n     * ````0.5```` causes dollying to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows dollying\n     * to continue until further input stops it.\n     *\n     * You might set ````dollyInertia```` to zero when you want be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders less frames while dollying the Camera,\n     * which can improve rendering performance.\n     *\n     * Default is ````0````.\n     *\n     * @param dollyInertia New dolly inertia factor.\n     */\n    set dollyInertia(dollyInertia: number | undefined) {\n        this.#configs.dollyInertia = (dollyInertia !== undefined && dollyInertia !== null) ? dollyInertia : 0;\n    }\n\n    /**\n     * Gets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @returns {Number} The current dolly proximity threshold.\n     */\n    get dollyProximityThreshold(): number {\n        return this.#configs.dollyProximityThreshold;\n    }\n\n    /**\n     * Sets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @param dollyProximityThreshold New dolly proximity threshold.\n     */\n    set dollyProximityThreshold(dollyProximityThreshold: number | undefined) {\n        this.#configs.dollyProximityThreshold = (dollyProximityThreshold !== undefined && dollyProximityThreshold !== null) ? dollyProximityThreshold : 35.0;\n    }\n\n    /**\n     * Gets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @returns {Number} The current minimum dolly speed.\n     */\n    get dollyMinSpeed(): number {\n        return this.#configs.dollyMinSpeed;\n    }\n\n    /**\n     * Sets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @param dollyMinSpeed New dolly minimum speed.\n     */\n    set dollyMinSpeed(dollyMinSpeed: number | undefined) {\n        this.#configs.dollyMinSpeed = (dollyMinSpeed !== undefined && dollyMinSpeed !== null) ? dollyMinSpeed : 0.04;\n    }\n\n    /**\n     * Gets the pan inertia factor.\n     *\n     * Default is ````0.5````.\n     *\n     * @returns {Number} The current pan inertia factor.\n     */\n    get panInertia(): number {\n        return this.#configs.panInertia;\n    }\n\n    /**\n     * Sets the pan inertia factor.\n     *\n     * This factor configures how much the {@link Camera} keeps moving after you finish panning it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes panning to immediately stop,\n     * ````0.5```` causes panning to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows panning\n     * to continue until further input stops it.\n     *\n     * You might set ````panInertia```` to zero when you want be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders less frames while panning the Camera,\n     * wich can improve rendering performance.\n     *\n     * Default is ````0.5````.\n     *\n     * @param panInertia New pan inertia factor.\n     */\n    set panInertia(panInertia: number | undefined) {\n        this.#configs.panInertia = (panInertia !== undefined && panInertia !== null) ? panInertia : 0.5;\n    }\n\n    /**\n     * Gets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @returns {String} The current keyboard layout.\n     */\n    get keyboardLayout(): string {\n        return this.#configs.keyboardLayout;\n    }\n\n    /**\n     * Sets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @param value Selects the keyboard layout.\n     */\n    set keyboardLayout(value: string | undefined) {\n        // this.warn(\"keyboardLayout property is deprecated - use keyMap property instead\");\n        value = value || \"qwerty\";\n        if (value !== \"qwerty\" && value !== \"azerty\") {\n            this.error(\"Unsupported value for keyboardLayout - defaulting to 'qwerty'\");\n            value = \"qwerty\";\n        }\n        this.#configs.keyboardLayout = value;\n        this.keyMap = this.#configs.keyboardLayout;\n    }\n\n    /**\n     * Gets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera.eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when pivoting by default about the selected point on the virtual sphere, or ````false```` when pivoting by default about {@link Camera.look}.\n     */\n    get smartPivot(): boolean {\n        return this.#configs.smartPivot;\n    }\n\n    /**\n     * Sets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera.eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera.look}.\n     *\n     * Default is ````false````.\n     *\n     * @param enabled Set ````true```` to pivot by default about the selected point on the virtual sphere, or ````false```` to pivot by default about {@link Camera.look}.\n     */\n    set smartPivot(enabled: boolean | undefined) {\n        this.#configs.smartPivot = (enabled !== false);\n    }\n\n    /**\n     * Gets whether keyboard input is enabled.\n     */\n    get keyboardEnabled(): boolean {\n        return this.#configs.keyboardEnabled;\n    }\n\n    /**\n     * Sets whether keyboard input is enabled.\n     */\n    set keyboardEnabled(enabled: boolean | undefined) {\n        this.#configs.keyboardEnabled = (enabled !== false);\n    }\n\n    /**\n     * Returns true if any keys configured for the given action are down.\n     * @param action\n     * @param keyDownMap\n     * @private\n     */\n    _isKeyDownForAction(action: number, keyDownMap: { [key: number]: boolean }) {\n        const keys = this.#configs.keyMap[action];\n        if (!keys) {\n            return false;\n        }\n        if (!keyDownMap) {\n            keyDownMap = this.#states.keyDown;\n        }\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const key = keys[i];\n            if (keyDownMap[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    #reset() {\n        for (let i = 0, len = this.#handlers.length; i < len; i++) {\n            const handler = this.#handlers[i];\n            if (handler.reset) {\n                handler.reset();\n            }\n        }\n\n        this.#updates.panDeltaX = 0;\n        this.#updates.panDeltaY = 0;\n        this.#updates.rotateDeltaX = 0;\n        this.#updates.rotateDeltaY = 0;\n        this.#updates.dollyDelta = 0;\n    }\n\n    /**\n     * Destroys this ````CameraControl````.\n     * @private\n     */\n    destroy() {\n        this.#destroyHandlers();\n        this.#destroyControllers();\n        this.#cameraUpdater.destroy();\n        this.onHover.clear();\n        this.onHoverOff.clear();\n        this.onHoverEnter.clear();\n        this.onHoverOut.clear();\n        super.destroy();\n    }\n\n    #destroyHandlers() {\n        for (let i = 0, len = this.#handlers.length; i < len; i++) {\n            const handler = this.#handlers[i];\n            if (handler.destroy) {\n                handler.destroy();\n            }\n        }\n    }\n\n    #destroyControllers() {\n        for (let key in this.#controllers) {\n            // @ts-ignore\n            const controller = this.#controllers[key];\n            if (controller.destroy) {\n                controller.destroy();\n            }\n        }\n    }\n}\n\n\n","\nimport type {ViewLayer} from \"./ViewLayer\";\nimport type {SceneObject} from \"../scene/index\";\nimport type * as math from '../math/index';\nimport {FloatArrayParam} from \"../math/index\";\n\n/**\n * Represents the visual state of a {@link SceneObject} in a {@link View}.\n *\n * ## Summary\n *\n * * Stored in {@link View.objects} and {@link ViewLayer.objects}\n * * WebViewer automatically creates one of these in each existing {@link View} for each {@link SceneObject} created\n * * {@link SceneObject.viewLayerId} determines which of the View's {@link ViewLayer|ViewLayers} to put the ViewObject in\n *\n * ## Overview\n *\n * Every View automatically maintains within itself a ViewObject for each {@link SceneObject} that exists in the {@link WebViewer|WebViewer's} {@link Scene}.\n *\n * Whenever we create a SceneObject, each View will automatically create a corresponding ViewObject within itself. When\n * we destroy a SceneObject, each View will automatically destroy its corresponding ViewObject. The ViewObjects in a View\n * are therefore a manifest of the SceneObjects in the Scene.\n *\n * {@link ViewLayer}.\n */\nclass ViewObject {\n\n    /**\n     * Unique ID of this ViewObject within {@link ViewLayer.objects}.\n     */\n    public readonly id: string;\n\n    /**\n     * The ViewLayer to which this ViewObject belongs.\n     */\n    public readonly layer: ViewLayer;\n\n    /**\n     * The corresponding {@link SceneObject}.\n     */\n    public readonly sceneObject: SceneObject;\n\n    #state: {\n        visible: boolean | null,\n        culled: boolean | null,\n        pickable: boolean | null,\n        clippable: boolean | null,\n        collidable: boolean | null,\n        xrayed: boolean | null,\n        selected: boolean | null,\n        highlighted: boolean | null,\n        edges: boolean | null,\n        colorize: Float32Array,\n        colorized: boolean | null,\n        opacityUpdated: boolean\n    };\n\n    /**\n     * @private\n     */\n    constructor(layer: ViewLayer, sceneObject: SceneObject, options: {\n        opacity?: number;\n        colorize?: number[];\n        selected?: boolean;\n        highlighted?: boolean;\n        xrayed?: boolean;\n        edges?: boolean;\n        collidable?: boolean;\n        clippable?: boolean;\n        pickable?: boolean;\n        culled?: boolean;\n        visible?: boolean;\n    } = {}) {\n\n        this.id = sceneObject.id;\n        this.layer = layer;\n        this.sceneObject = sceneObject;\n\n        this.#state = {\n            visible: null,\n            culled: null,\n            pickable: null,\n            clippable: null,\n            collidable: null,\n            xrayed: null,\n            selected: null,\n            highlighted: null,\n            edges: null,\n            colorize: new Float32Array(4),\n            colorized: false,\n            opacityUpdated: false\n        };\n\n        // Initialize properties like below so that we also\n        // update their counters on the ViewLayer\n\n        this.visible = options.visible !== false;\n        this.xrayed = !!options.xrayed;\n        this.edges = !!options.edges;\n        this.culled = !!options.culled;\n        this.pickable = options.pickable !== false;\n        this.clippable = options.clippable !== false;\n        this.collidable = options.collidable !== false;\n        this.highlighted = !!options.highlighted;\n        this.selected = !!options.selected;\n        this.colorize = options.colorize;\n        this.opacity = options.opacity;\n    }\n\n    /**\n     * Gets if this ViewObject is visible.\n     *\n     * * When {@link ViewObject.visible} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.visibleViewObjects}.\n     * * Each ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsVisible} to batch-update the visibility of ViewObjects, which fires a single event for the batch.\n     */\n    get visible(): boolean {\n        return <boolean>this.#state.visible;\n    }\n\n    /**\n     * Sets if this ViewObject is visible.\n     *\n     * * When {@link ViewObject.visible} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.visibleViewObjects}.\n     * * Each ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Fires an \"objectVisibility\" event on associated {@link ViewLayer}s.\n     * * Use {@link ViewLayer.setObjectsVisible} to batch-update the visibility of ViewObjects, which fires a single event for the batch.\n     */\n    set visible(visible: boolean) {\n        if (visible === this.#state.visible) {\n            return;\n        }\n        this.#state.visible = visible;\n        this.sceneObject.setVisible(this.layer.view.viewIndex, visible);\n        this.layer.objectVisibilityUpdated(this, visible, true);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is X-rayed.\n     *\n     * * When {@link ViewObject.xrayed} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.xrayedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsXRayed} to batch-update the X-rayed state of ViewObjects.\n     */\n    get xrayed(): boolean {\n        return <boolean>this.#state.xrayed;\n    }\n\n    /**\n     * Sets if this ViewObject is X-rayed.\n     *\n     * * When {@link ViewObject.xrayed} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.xrayedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsXRayed} to batch-update the X-rayed state of ViewObjects.\n     */\n    set xrayed(xrayed: boolean) {\n        if (this.#state.xrayed === xrayed) {\n            return;\n        }\n        this.#state.xrayed = xrayed;\n        this.sceneObject.setXRayed(this.layer.view.viewIndex, xrayed);\n        this.layer.objectXRayedUpdated(this, xrayed);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject shows edges.\n     */\n    get edges(): boolean {\n        return <boolean>this.#state.edges;\n    }\n\n    /**\n     * Sets if this ViewObject shows edges.\n     */\n    set edges(edges: boolean) {\n        if (this.#state.edges === edges) {\n            return;\n        }\n        this.#state.edges = edges;\n        this.sceneObject.setEdges(this.layer.view.viewIndex, edges);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is highlighted.\n     *\n     * * When {@link ViewObject.highlighted} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.highlightedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsHighlighted} to batch-update the highlighted state of ViewObjects.\n     */\n    get highlighted(): boolean {\n        return <boolean>this.#state.highlighted;\n    }\n\n    /**\n     * Sets if this ViewObject is highlighted.\n     *\n     * * When {@link ViewObject.highlighted} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.highlightedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsHighlighted} to batch-update the highlighted state of ViewObjects.\n     */\n    set highlighted(highlighted: boolean) {\n        if (highlighted === this.#state.highlighted) {\n            return;\n        }\n        this.#state.highlighted = highlighted;\n        this.sceneObject.setHighlighted(this.layer.view.viewIndex, highlighted);\n        this.layer.objectHighlightedUpdated(this, highlighted);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is selected.\n     *\n     * * When {@link ViewObject.selected} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.selectedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsSelected} to batch-update the selected state of ViewObjects.\n     */\n    get selected(): boolean {\n        return <boolean>this.#state.selected;\n    }\n\n    /**\n     * Sets if this ViewObject is selected.\n     *\n     * * When {@link ViewObject.selected} is ````true```` the ViewObject will be registered by {@link ViewObject.id} in {@link ViewLayer.selectedViewObjects}.\n     * * Use {@link ViewLayer.setObjectsSelected} to batch-update the selected state of ViewObjects.\n     */\n    set selected(selected: boolean) {\n        if (selected === this.#state.selected) {\n            return;\n        }\n        this.#state.selected = selected;\n        this.sceneObject.setSelected(this.layer.view.viewIndex, selected);\n        this.layer.objectSelectedUpdated(this, selected);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is culled.\n     *\n     * * The ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsCulled} to batch-update the culled state of ViewObjects.\n     */\n    get culled(): boolean {\n        return <boolean>this.#state.culled;\n    }\n\n    /**\n     * Sets if this ViewObject is culled.\n     *\n     * * The ViewObject is only rendered when {@link ViewObject.visible} is ````true```` and {@link ViewObject.culled} is ````false````.\n     * * Use {@link ViewLayer.setObjectsCulled} to batch-update the culled state of ViewObjects.\n     */\n    set culled(culled: boolean) {\n        if (culled === this.#state.culled) {\n            return;\n        }\n        this.#state.culled = culled;\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is clippable.\n     *\n     * * Clipping is done by the {@link SectionPlane}s in {@link ViewLayer.sectionPlanes}.\n     * * Use {@link ViewLayer.setObjectsClippable} to batch-update the clippable state of ViewObjects.\n     */\n    get clippable(): boolean {\n        return <boolean>this.#state.clippable;\n    }\n\n    /**\n     * Sets if this ViewObject is clippable.\n     *\n     * * Clipping is done by the {@link SectionPlane}s in {@link ViewLayer.sectionPlanes}.\n     * * Use {@link ViewLayer.setObjectsClippable} to batch-update the clippable state of ViewObjects.\n     */\n    set clippable(value: boolean) {\n        if (value === this.#state.clippable) {\n            return;\n        }\n        this.#state.clippable = value;\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets if this ViewObject is included in boundary calculations.\n     *\n     * * When ````true````, the 3D World boundaries returned by {@link ViewLayer.aabb} and {@link ViewLayer.getAABB} will include this ViewObject's boundary.\n     * * The ViewObject's 3D boundary is held in {@link SceneObject.aabb}.\n     * * Use {@link ViewLayer.setObjectsCollidable} to batch-update the collidable state of ViewObjects.\n     */\n    get collidable(): boolean {\n        return <boolean>this.#state.collidable;\n    }\n\n    /**\n     * Sets if this ViewObject included in boundary calculations.\n     *\n     * * When ````true````, the 3D World boundaries returned by {@link ViewLayer.aabb} and {@link ViewLayer.getAABB} will include this ViewObject's boundary.\n     * * The ViewObject's 3D boundary is held in {@link SceneObject.aabb}.\n     * * Use {@link ViewLayer.setObjectsCollidable} to batch-update the collidable state of ViewObjects.\n     */\n    set collidable(value: boolean) {\n        if (value === this.#state.collidable) {\n            return;\n        }\n        this.#state.collidable = value;\n        // this._setAABBDirty();\n        // this.layer._aabbDirty = true;\n\n    }\n\n    /**\n     * Gets if this ViewObject is pickable.\n     *\n     * * Picking is done with {@link ViewLayer.pick}.\n     * * Use {@link ViewLayer.setObjectsPickable} to batch-update the pickable state of ViewObjects.\n     */\n    get pickable(): boolean {\n        return <boolean>this.#state.pickable;\n    }\n\n    /**\n     * Sets if this ViewObject is pickable.\n     *\n     * * Picking is done with {@link ViewLayer.pick}.\n     * * Use {@link ViewLayer.setObjectsPickable} to batch-update the pickable state of ViewObjects.\n     */\n    set pickable(pickable: boolean) {\n        if (this.#state.pickable === pickable) {\n            return;\n        }\n        this.#state.pickable = pickable;\n        // No need to trigger a render;\n        // state is only used when picking\n    }\n\n    /**\n     * Gets the RGB colorize color for this ViewObject.\n     *\n     * * Multiplies by rendered fragment colors.\n     * * Each element of the color is in range ````[0..1]````.\n     * * Use {@link ViewLayer.setObjectsColorized} to batch-update the colorized state of ViewObjects.\n     */\n    get colorize(): Float32Array {\n        return <Float32Array>this.#state.colorize;\n    }\n\n    /**\n     * Sets the RGB colorize color for this ViewObject.\n     *\n     * * Multiplies by rendered fragment colors.\n     * * Each element of the color is in range ````[0..1]````.\n     * * Set to ````null```` or ````undefined```` to reset the colorize color to its default value of ````[1,1,1]````.\n     * * Use {@link ViewLayer.setObjectsColorized} to batch-update the colorized state of ViewObjects.\n     */\n    set colorize(value: math.FloatArrayParam | undefined | null) {\n        let colorize = this.#state.colorize;\n        if (value) {\n            colorize[0] = value[0];\n            colorize[1] = value[1];\n            colorize[2] = value[2];\n        } else {\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        this.#state.colorized = (!!value);\n        this.layer.objectColorizeUpdated(this, this.#state.colorized);\n        this.layer.redraw();\n    }\n\n    /**\n     * Gets the opacity factor for this ViewObject.\n     *\n     * * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     * * Use {@link ViewLayer.setObjectsOpacity} to batch-update the opacities of ViewObjects.\n     */\n    get opacity(): number {\n        return this.#state.colorize[3];\n    }\n\n    /**\n     * Sets the opacity factor for this ViewObject.\n     *\n     * * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     * * Set to ````null```` or ````undefined```` to reset the opacity to its default value of ````1````.\n     * * Use {@link ViewLayer.setObjectsOpacity} to batch-update the opacities of ViewObjects.\n     */\n    set opacity(opacity: number | undefined | null) {\n        let colorize = this.#state.colorize;\n        this.#state.opacityUpdated = (opacity !== null && opacity !== undefined);\n        // @ts-ignore\n        colorize[3] = this.#state.opacityUpdated ? opacity : 1.0;\n        this.layer.objectOpacityUpdated(this, this.#state.opacityUpdated);\n        this.layer.redraw();\n    }\n\n    /**\n     * @private\n     */\n    _destroy() { // Called by ViewLayer#destroyViewObjects\n        if (this.#state.visible) {\n            this.layer.objectVisibilityUpdated(this, false, false);\n        }\n        if (this.#state.xrayed) {\n            this.layer.objectXRayedUpdated(this, false);\n        }\n        if (this.#state.selected) {\n            this.layer.objectSelectedUpdated(this, false);\n        }\n        if (this.#state.highlighted) {\n            this.layer.objectHighlightedUpdated(this, false);\n        }\n        if (this.#state.colorized) {\n            this.layer.objectColorizeUpdated(this, false);\n        }\n        if (this.#state.opacityUpdated) {\n            this.layer.objectOpacityUpdated(this, false);\n        }\n        this.layer.redraw();\n    }\n}\n\nexport {ViewObject};","//----------------------------------------------------------------------------------------------------------------------\n// This file is named \"Metriqs.js\" because \"Metrics.js\" is blocked by uBlock Origin (https://en.wikipedia.org/wiki/UBlock#origin)\n//----------------------------------------------------------------------------------------------------------------------\n\nimport {Component} from \"../Component\";\nimport * as math from \"../math/index\";\nimport type {View} from \"./View\";\nimport * as constants from \"./../constants\";\nimport {EventDispatcher, IEvent} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./../EventEmitter\";\n\nconst unitsInfo = {\n    [constants.MetersUnit]: {\n        abbrev: \"m\"\n    },\n    [constants.CentimetersUnit]: {\n        abbrev: \"cm\"\n    },\n    [constants.MillimetersUnit]: {\n        abbrev: \"mm\"\n    },\n    [constants.YardsUnit]: {\n        abbrev: \"yd\"\n    },\n    [constants.FeetUnit]: {\n        abbrev: \"ft\"\n    },\n    [constants.InchesUnit]: {\n        abbrev: \"in\"\n    }\n};\n\n/**\n * Configures its {@link View}'s measurement unit and mapping between the Real-space and World-space 3D Cartesian coordinate systems.\n *\n *\n * ## Summary\n *\n * * Located at {@link View.metrics}.\n * * {@link Metrics.units} configures the Real-space unit type, which is {@link MetersUnit} by default.\n * * {@link Metrics.scale} configures the number of Real-space units represented by each unit within the World-space 3D coordinate system. This is ````1.0```` by default.\n * * {@link Metrics.origin} configures the 3D Real-space origin, in current Real-space units, at which this {@link View}'s World-space coordinate origin sits, This is ````[0,0,0]```` by default.\n *\n * ## Usage\n *\n * ````JavaScript\n * import {WebViewer, constants} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer();\n *\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\"\n * });\n *\n * const metrics = view1.metrics;\n *\n * metrics.units = constants.MetersUnit;\n * metrics.scale = 10.0;\n * metrics.origin = [100.0, 0.0, 200.0];\n * ````\n */\nclass Metrics extends Component {\n\n    #units: number;\n    #scale: number;\n    #origin: math.FloatArrayParam;\n\n    /**\n     * Emits an event each time {@link Metrics.units} changes.\n     *\n     * @event\n     */\n    readonly onUnits: EventEmitter<Metrics, number>;\n\n    /**\n     * Emits an event each time {@link Metrics.scale} changes.\n     *\n     * @event\n     */\n    readonly onScale: EventEmitter<Metrics, number>;\n\n    /**\n     * Emits an event each time {@link Metrics.origin} changes.\n     *\n     * @event\n     */\n    readonly onOrigin: EventEmitter<Metrics, math.FloatArrayParam>;\n\n\n    /**\n     * @private\n     */\n    constructor(view: View, cfg: {\n        origin?: math.FloatArrayParam;\n        scale?: number;\n        units?: number\n    } = {\n        units: constants.MetersUnit,\n        scale: 1.0,\n        origin: [1, 1, 1]\n    }) {\n\n        super(view, cfg);\n\n        this.onUnits = new EventEmitter(new EventDispatcher<Metrics, number>());\n        this.onScale = new EventEmitter(new EventDispatcher<Metrics, number>());\n        this.onOrigin = new EventEmitter(new EventDispatcher<Metrics, math.FloatArrayParam>());\n\n        this.#units = constants.MetersUnit;\n        this.#scale = 1.0;\n        this.#origin = math.vec3([0, 0, 0]);\n\n        this.units = cfg.units;\n        this.scale = cfg.scale;\n        this.origin = cfg.origin;\n    }\n\n    /**\n     * Gets info about the supported Real-space unit types.\n     *\n     * With {@link constants} indicating each unit type, the info will be:\n     *\n     * ````javascript\n     * {\n     *     [constants.MetersUnit]: {\n     *         abbrev: \"m\"\n     *     },\n     *     [constants.CentimetersUnit]: {\n     *         abbrev: \"cm\"\n     *     },\n     *     [constants.MillimetersUnit]: {\n     *         abbrev: \"mm\"\n     *     },\n     *     [constants.YardsUnit]: {\n     *         abbrev: \"yd\"\n     *     },\n     *     [constants.FeetUnit]: {\n     *         abbrev: \"ft\"\n     *     },\n     *     [constants.InchesUnit]: {\n     *         abbrev: \"in\"\n     *     }\n     * }\n     * ````\n     *\n     * @type {*}\n     */\n    get unitsInfo(): {} {\n        return unitsInfo;\n    }\n\n    /**\n     * Gets the {@link View}'s Real-space unit type.\n     */\n    get units(): number {\n        return this.#units;\n    }\n\n    /**\n     * Sets the {@link View}'s Real-space unit type.\n     *\n     * Accepted values are {@link MetersUnit}, {@link CentimetersUnit}, {@link MillimetersUnit}, {@link YardsUnit}, {@link FeetUnit} and {@link InchesUnit}.\n     */\n    set units(value: number | undefined) {\n        if (!value) {\n            value = constants.MetersUnit;\n        }\n        // @ts-ignore\n        const info = unitsInfo[value];\n        if (!info) {\n            this.error(\"Unsupported value for 'units': \" + value + \" defaulting to MetersUnit\");\n            value = constants.MetersUnit;\n        }\n        this.#units = value;\n        this.onUnits.dispatch(this, this.#units);\n    }\n\n    /**\n     * Gets the number of Real-space units represented by each unit of the {@link View}'s World-space coordinate system.\n     */\n    get scale(): number {\n        return this.#scale;\n    }\n\n    /**\n     * Sets the number of Real-space units represented by each unit of the {@link View}'s World-space coordinate system.\n     *\n     * For example, if {@link Metrics.units} is {@link MetersUnit}, and there are ten meters per World-space coordinate system unit, then ````scale```` would have a value of ````10.0````.\n     */\n    set scale(value: number | undefined) {\n        value = value || 1;\n        if (value <= 0) {\n            this.error(\"scale value should be larger than zero\");\n            return;\n        }\n        this.#scale = value;\n        this.onScale.dispatch(this, this.#scale);\n    }\n\n    /**\n     * Gets the 3D Real-space origin, in Real-space units, at which this {@link View}'s World-space coordinate origin ````[0,0,0]```` sits.\n     */\n    get origin(): math.FloatArrayParam {\n        return this.#origin;\n    }\n\n    /**\n     * Sets the Real-space 3D origin, in Real-space units, at which this {@link View}'s World-space coordinate origin ````[0,0,0]```` sits.\n     */\n    set origin(value: math.FloatArrayParam | undefined) {\n        if (!value) {\n            this.#origin[0] = 0;\n            this.#origin[1] = 0;\n            this.#origin[2] = 0;\n            return;\n        }\n        this.#origin[0] = value[0];\n        this.#origin[1] = value[1];\n        this.#origin[2] = value[2];\n        this.onOrigin.dispatch(this, this.#origin);\n    }\n\n    /**\n     * Converts a 3D position from World-space to Real-space.\n     *\n     * This is equivalent to ````realPos = #origin + (worldPos * #scale)````.\n     *\n     * @param worldPos World-space 3D position, in World coordinate system units.\n     * @param [realPos] Destination for Real-space 3D position.\n     * @returns  Real-space 3D position, in units indicated by {@link Metrics#units}.\n     */\n    worldToRealPos(worldPos: math.FloatArrayParam, realPos: math.FloatArrayParam = math.vec3()): math.FloatArrayParam {\n        realPos[0] = this.#origin[0] + (this.#scale * worldPos[0]);\n        realPos[1] = this.#origin[1] + (this.#scale * worldPos[1]);\n        realPos[2] = this.#origin[2] + (this.#scale * worldPos[2]);\n        return realPos;\n    }\n\n    /**\n     * Converts a 3D position from Real-space to World-space.\n     *\n     * This is equivalent to ````worldPos = (worldPos - #origin) / #scale````.\n     *\n     * @param realPos Real-space 3D position.\n     * @param [worldPos] Destination for World-space 3D position.\n     * @returns  World-space 3D position.\n     */\n    realToWorldPos(realPos: math.FloatArrayParam, worldPos: math.FloatArrayParam = math.vec3()): math.FloatArrayParam {\n        worldPos[0] = (realPos[0] - this.#origin[0]) / this.#scale;\n        worldPos[1] = (realPos[1] - this.#origin[1]) / this.#scale;\n        worldPos[2] = (realPos[2] - this.#origin[2]) / this.#scale;\n        return worldPos;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this.onUnits.clear();\n        this.onScale.clear();\n        this.onOrigin.clear();\n    }\n}\n\nexport {Metrics};","import {Component} from '../Component';\nimport type {View} from \"./View\";\nimport * as math from '../math/index';\nimport {EventDispatcher, IEvent} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./../EventEmitter\";\nimport type {FloatArrayParam} from \"../math/index\";\n\n\n\n/**\n *  An arbitrarily-aligned World-space clipping plane.\n *\n * ## Summary\n *\n * * Belongs to a {@link View}.\n * * Slices portions off {@link ViewObject|ViewObjects} to create cross-section views or reveal interiors.\n * * Registered by {@link SectionPlane.id} in {@link View.sectionPlanes}.\n * * Indicates its World-space position in {@link SectionPlane.pos} and orientation vector in {@link SectionPlane.dir}.\n * * Discards elements from the half-space in the direction of {@link SectionPlane.dir}.\n * * Can be be enabled or disabled via {@link SectionPlane.active}.\n *\n * ## Usage\n *\n * In the example below, we'll create two SectionPlanes to slice a model loaded from glTF. Note that we could also create them\n * using a {@link SectionPlanesPlugin}.\n *\n * ````javascript\n * import {WebViewer, GLTFLoaderPlugin, SectionPlane} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * const gltfLoaderPlugin = new GLTFModelsPlugin(viewer, {\n *      id: \"GLTFModels\"\n * });\n *\n * const model = gltfLoaderPlugin.load({\n *      id: \"myModel\",\n *      src: \"./models/gltf/mygltfmodel.gltf\"\n * });\n *\n * // Create a SectionPlane on negative diagonal\n * const sectionPlane1 = new SectionPlane(viewer.scene, {\n *     pos: [1.0, 1.0, 1.0],\n *     dir: [-1.0, -1.0, -1.0],\n *     active: true\n * }),\n *\n * // Create a SectionPlane on positive diagonal\n * const sectionPlane2 = new SectionPlane(viewer.scene, {\n *     pos: [-1.0, -1.0, -1.0],\n *     dir: [1.0, 1.0, 1.0],\n *     active: true\n * });\n * ````\n */\nclass SectionPlane extends Component {\n\n    /**\n     ID of this SectionPlane, unique within the {@link View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this DirLight belongs.\n     *\n     * @property view\n     * @type {View}\n     * @final\n     */\n    public readonly view: View;\n\n    /**\n     * Emits an event each time {@link SectionPlane.pos} changes.\n     *\n     * @event\n     */\n    readonly onPos: EventEmitter<SectionPlane, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link SectionPlane.dir} changes.\n     *\n     * @event\n     */\n    readonly onDir: EventEmitter<SectionPlane, FloatArrayParam>;\n\n    /**\n     * Emits an event each time {@link SectionPlane.active} changes.\n     *\n     * @event\n     */\n    readonly onActive: EventEmitter<SectionPlane, boolean>;\n\n    #state: {\n        pos: Float64Array;\n        active: boolean;\n        dist: number;\n        dir: Float32Array\n    };\n\n    /**\n     * @private\n     * @constructor\n     */\n    constructor(view: View, cfg: {\n        pos?: math.FloatArrayParam;\n        active?: boolean;\n        dir?: math.FloatArrayParam\n    } = {}) {\n\n        super(view, cfg);\n\n        this.view = view;\n\n        this.#state = {\n            active: cfg.active !== false,\n            pos: new Float64Array(cfg.pos || [0, 0, 0]),\n            dir: new Float32Array(cfg.pos || [0, 0, -1]),\n            dist: 0\n        };\n\n        this.onPos = new EventEmitter(new EventDispatcher<SectionPlane, FloatArrayParam>());\n        this.onDir = new EventEmitter(new EventDispatcher<SectionPlane, FloatArrayParam>());\n        this.onActive = new EventEmitter(new EventDispatcher<SectionPlane, boolean>());\n    }\n\n    /**\n     * Gets if this SectionPlane is active or not.\n     *\n     * Default value is ````true````.\n     *\n     * @returns Returns ````true```` if active.\n     */\n    get active(): boolean {\n        return this.#state.active;\n    }\n\n    /**\n     * Sets if this SectionPlane is active or not.\n     *\n     * Default value is ````true````.\n     *\n     * @param value Set ````true```` to activate else ````false```` to deactivate.\n     */\n    set active(value: boolean) {\n        if (this.#state.active === value) {\n            return;\n        }\n        this.#state.active = value;\n        this.view.redraw();\n        this.onActive.dispatch(this, this.#state.active);\n    }\n\n    /**\n     * Gets the World-space position of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * @returns  Current position.\n     */\n    get pos(): Float64Array {\n        return this.#state.pos;\n    }\n\n    /**\n     * Sets the World-space position of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * @param value New position.\n     */\n    set pos(value: math.FloatArrayParam) {\n        this.#state.pos.set(value);\n        this.#state.dist = (-math.dotVec3(this.#state.pos, this.#state.dir));\n        this.onPos.dispatch(this, this.#state.pos);\n    }\n\n    /**\n     * Gets the direction of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, -1]````.\n     *\n     * @returns value Current direction.\n     */\n    get dir(): Float32Array {\n        return this.#state.dir;\n    }\n\n    /**\n     * Sets the direction of this SectionPlane's plane.\n     *\n     * Default value is ````[0, 0, -1]````.\n     *\n     * @param value New direction.\n     */\n    set dir(value: math.FloatArrayParam) {\n        this.#state.dir.set(value);\n        this.#state.dist = (-math.dotVec3(this.#state.pos, this.#state.dir));\n        this.view.redraw();\n        this.onDir.dispatch(this, this.#state.dir);\n    }\n\n    /**\n     * Gets this SectionPlane's distance to the origin of the World-space coordinate system.\n     *\n     * This is the dot product of {@link SectionPlane.pos} and {@link SectionPlane.dir} and is automatically re-calculated\n     * each time either of two properties are updated.\n     *\n     * @returns Distance to the origin of the World-space coordinate system.\n     */\n    get dist(): number {\n        return this.#state.dist;\n    }\n\n    /**\n     * Inverts the direction of {@link SectionPlane.dir}.\n     */\n    flipDir() {\n        const dir = this.#state.dir;\n        dir[0] *= -1.0;\n        dir[1] *= -1.0;\n        dir[2] *= -1.0;\n        this.#state.dist = (-math.dotVec3(this.#state.pos, this.#state.dir));\n        this.onDir.dispatch(this, this.#state.dir);\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this SectionPlane.\n     */\n    destroy() {\n        this.onPos.clear();\n        this.onActive.clear;\n        this.onDir.clear();\n        super.destroy();\n    }\n}\n\nexport {SectionPlane};\n","import type {View} from \"../View\";\nimport {Component} from \"../../Component\";\nimport type * as math from '../../math/index';\n\n/**\n * Configures the appearance of {@link ViewObject|ViewObjects} when they are xrayed, highlighted or selected.\n *\n * ## Summary\n *\n * * Located at {@link View.xrayMaterial}, {@link View.highlightMaterial} and {@link View.selectedMaterial}.\n * * XRay a {@link ViewObject} by setting {@link ViewObject.xrayed} ````true````.\n * * Highlight a {@link ViewObject} by setting {@link ViewObject.highlighted} ````true````.\n * * Select a {@link ViewObject} by setting {@link ViewObject.selected} ````true````.\n */\nclass EmphasisMaterial extends Component {\n\n    /**\n     * The View to which this EmphasisMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        fillColor: Float32Array;\n        backfaces: boolean;\n        edgeColor: Float32Array;\n        edgeWidth: number;\n        edgeAlpha: number;\n        edges: boolean;\n        fillAlpha: number;\n        fill: boolean\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        fillColor?: math.FloatArrayParam;\n        backfaces?: boolean;\n        edgeColor?: math.FloatArrayParam;\n        edgeWidth?: number;\n        edgeAlpha?: number;\n        edges?: boolean;\n        fillAlpha?: number;\n        fill?: boolean;\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            fill: !!options.fill,\n            fillColor: new Float32Array(options.fillColor || [0.4, 0.4, 0.4]),\n            fillAlpha: (options.fillAlpha !== undefined && options.fillAlpha !== null) ? options.fillAlpha : 0.2,\n            edges: options.edges !== false,\n            edgeColor: new Float32Array(options.edgeColor || [0.2, 0.2, 0.2]),\n            edgeAlpha: (options.edgeAlpha !== undefined && options.edgeAlpha !== null) ? options.edgeAlpha : 0.5,\n            edgeWidth: (options.edgeWidth !== undefined && options.edgeWidth !== null) ? options.edgeWidth : 1,\n            backfaces: !!options.backfaces\n        };\n    }\n\n    /**\n     * Sets if the surfaces of emphasized {@link ViewObject|ViewObjects} are filled with color.\n     *\n     * Default is ````true````.\n     */\n    set fill(value: boolean) {\n        if (this.#state.fill === value) {\n            return;\n        }\n        this.#state.fill = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if the surfaces of emphasized {@link ViewObject|ViewObjects} are filled with color.\n     *\n     * Default is ````true````.\n     */\n    get fill(): boolean {\n        return this.#state.fill;\n    }\n\n    /**\n     * Sets the RGB surface fill color for the surfaces of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     */\n    set fillColor(value: math.FloatArrayParam) {\n        const fillColor = this.#state.fillColor;\n        if (fillColor[0] === value[0] && fillColor[1] === value[1] && fillColor[2] === value[2]) {\n            return;\n        }\n        fillColor[0] = 0.4;\n        fillColor[1] = 0.4;\n        fillColor[2] = 0.4;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB surface fill color for the surfaces of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     */\n    get fillColor(): Float32Array {\n        return this.#state.fillColor;\n    }\n\n    /**\n     * Sets the transparency of the surfaces of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    set fillAlpha(value: number) {\n        if (this.#state.fillAlpha === value) {\n            return;\n        }\n        this.#state.fillAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the transparency of the surfaces of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    get fillAlpha(): number {\n        return this.#state.fillAlpha;\n    }\n\n    /**\n     * Sets if the edges on emphasized {@link ViewObject|ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    set edges(value: boolean) {\n        if (this.#state.edges === value) {\n            return;\n        }\n        this.#state.edges = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if the edges on emphasized {@link ViewObject|ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    get edges(): boolean {\n        return this.#state.edges;\n    }\n\n    /**\n     * Sets the RGB color of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     */\n    set edgeColor(value: math.FloatArrayParam) {\n        let edgeColor = this.#state.edgeColor;\n        if (edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        edgeColor[0] = 0.2;\n        edgeColor[1] = 0.2;\n        edgeColor[2] = 0.2;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     */\n    get edgeColor(): Float32Array {\n        return this.#state.edgeColor;\n    }\n\n    /**\n     * Sets the transparency of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    set edgeAlpha(value: number) {\n        if (this.#state.edgeAlpha === value) {\n            return;\n        }\n        this.#state.edgeAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the transparency of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     */\n    get edgeAlpha(): number {\n        return this.#state.edgeAlpha;\n    }\n\n    /**\n     * Sets the width of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set edgeWidth(value: number) {\n        this.#state.edgeWidth = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the width of the edges of emphasized {@link ViewObject|ViewObjects}.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    get edgeWidth(): number {\n        return this.#state.edgeWidth;\n    }\n\n    /**\n     * Sets whether to render backfaces of emphasized {@link ViewObject|ViewObjects} when {@link EmphasisMaterial.fill} is ````true````.\n     *\n     * Default is ````false````.\n     */\n    set backfaces(value: boolean) {\n        if (this.#state.backfaces === value) {\n            return;\n        }\n        this.#state.backfaces = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether to render backfaces of emphasized {@link ViewObject|ViewObjects} when {@link EmphasisMaterial.fill} is ````true````.\n     *\n     * Default is ````false````.\n     */\n    get backfaces(): boolean {\n        return this.#state.backfaces;\n    }\n\n    /**\n     * @private\n     */\n    get hash(): string {\n        return \"\";\n    }\n\n    /**\n     * @private\n     */\n    destroy(): void {\n        super.destroy();\n    }\n}\n\nexport {EmphasisMaterial};","import type {View} from \"../View\";\nimport {Component} from \"../../Component\";\nimport type * as math from '../../math/index';\nimport {QualityRender} from \"../../constants\";\n\n/**\n * Configures the appearance of {@link ViewObject|ViewObjects} when their edges are emphasised.\n *\n * ## Summary\n *\n * * Located at {@link View.edgeMaterial}.\n * * Emphasise edges of a {@link ViewObject} by setting {@link ViewObject.edges} ````true````.\n */\nclass EdgeMaterial extends Component {\n\n    /**\n     * The View to which this EdgeMaterial belongs.\n     */\n    public readonly view: View;\n\n    /**\n     * @private\n     */\n    #state: {\n        edgeColor: Float32Array;\n        edgeWidth: number;\n        edgeAlpha: number;\n        edges: boolean;\n        renderModes: number[];\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        edgeColor?: math.FloatArrayParam;\n        edgeWidth?: number;\n        edgeAlpha?: number;\n        edges?: boolean;\n        renderModes?: number[];\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            renderModes: options.renderModes || [QualityRender],\n            edges: options.edges !== false,\n            edgeColor: new Float32Array(options.edgeColor || [0.2, 0.2, 0.2]),\n            edgeAlpha: (options.edgeAlpha !== undefined && options.edgeAlpha !== null) ? options.edgeAlpha : 0.5,\n            edgeWidth: (options.edgeWidth !== undefined && options.edgeWidth !== null) ? options.edgeWidth : 1\n        };\n    }\n\n    /**\n     * Sets which rendering modes in which to render edges.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    set renderModes(value: number[]) {\n        this.#state.renderModes = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets which rendering modes in which to render edges.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    get renderModes(): number[] {\n        return this.#state.renderModes;\n    }\n\n    /**\n     * Sets if edges of {@link ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    set edges(value: boolean) {\n        if (this.#state.edges === value) {\n            return;\n        }\n        this.#state.edges = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets if edges of {@link ViewObjects} are visible.\n     *\n     * Default is ````true````.\n     */\n    get edges(): boolean {\n        return this.#state.edges;\n    }\n\n    /**\n     * Sets RGB edge color for {@link ViewObjects}.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     */\n    set edgeColor(value: math.FloatArrayParam) {\n        let edgeColor = this.#state.edgeColor;\n        if (value && edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        edgeColor[0] = 0.2;\n        edgeColor[1] = 0.2;\n        edgeColor[2] = 0.2;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets RGB edge color for {@link ViewObjects}.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     */\n    get edgeColor(): Float32Array {\n        return this.#state.edgeColor;\n    }\n\n    /**\n     * Sets edge transparency for {@link ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     */\n    set edgeAlpha(value: number) {\n        if (this.#state.edgeAlpha === value) {\n            return;\n        }\n        this.#state.edgeAlpha = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets edge transparency for {@link ViewObjects}.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     */\n    get edgeAlpha(): number {\n        return this.#state.edgeAlpha;\n    }\n\n    /**\n     * Sets edge width for {@link ViewObjects}.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set edgeWidth(value: number) {\n        if (this.#state.edgeWidth === value) {\n            return;\n        }\n        this.#state.edgeWidth = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets edge width for {@link ViewObjects}.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    get edgeWidth(): number {\n        return this.#state.edgeWidth;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {EdgeMaterial};","\nimport type {View} from \"../View\";\nimport {Component} from \"../../Component\";\n\n/**\n * Configures the size and shape of {@link ViewObject|ViewObjects} that represent clouds of points.\n *\n * ## Summary\n *\n * * Located at {@link View.pointsMaterial}.\n * * Supports round and square points.\n * * Optional perspective point scaling.\n */\nclass PointsMaterial extends Component {\n\n    /**\n     * The View to which this PointsMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        pointSize: number,\n        roundPoints: boolean,\n        perspectivePoints: boolean,\n        minPerspectivePointSize: number,\n        maxPerspectivePointSize: number,\n        filterIntensity: boolean,\n        minIntensity: number,\n        maxIntensity: number\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: {\n        pointSize?: number,\n        roundPoints?: boolean,\n        perspectivePoints?: boolean,\n        minPerspectivePointSize?: number,\n        maxPerspectivePointSize?: number,\n        filterIntensity?: boolean,\n        minIntensity?: number,\n        maxIntensity?: number\n    } = {}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            pointSize: (options.pointSize !== undefined && options.pointSize !== null) ? options.pointSize : 1,\n            roundPoints: options.roundPoints !== false,\n            perspectivePoints: options.perspectivePoints !== false,\n            minPerspectivePointSize: (options.minPerspectivePointSize !== undefined && options.minPerspectivePointSize !== null) ? options.minPerspectivePointSize : 1,\n            maxPerspectivePointSize: (options.maxPerspectivePointSize !== undefined && options.maxPerspectivePointSize !== null) ? options.maxPerspectivePointSize : 6,\n            filterIntensity: !!options.filterIntensity,\n            minIntensity: (options.minIntensity !== undefined && options.minIntensity !== null) ? options.minIntensity : 0,\n            maxIntensity: (options.maxIntensity !== undefined && options.maxIntensity !== null) ? options.maxIntensity : 1\n        };\n    }\n\n    /**\n     * Sets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     */\n    set pointSize(value: number) {\n        this.#state.pointSize = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     */\n    get pointSize(): number {\n        return this.#state.pointSize;\n    }\n\n\n    /**\n     * Sets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     */\n    set roundPoints(value: boolean) {\n        if (this.#state.roundPoints === value) {\n            return;\n        }\n        this.#state.roundPoints = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     */\n    get roundPoints(): boolean {\n        return this.#state.roundPoints;\n    }\n\n    /**\n     * Sets if rendered point size reduces with distance when {@link Camera.projection} is set to ````PerspectiveProjectionType````.\n     *\n     * Default is ````true````.\n     */\n    set perspectivePoints(value: boolean) {\n        if (this.#state.perspectivePoints === value) {\n            return;\n        }\n        this.#state.perspectivePoints = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if rendered point size reduces with distance when {@link Camera.projection} is set to PerspectiveProjectionType.\n     *\n     * Default is ````false````.\n     */\n    get perspectivePoints(): boolean {\n        return this.#state.perspectivePoints;\n    }\n\n    /**\n     * Sets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     */\n    set minPerspectivePointSize(value: number) {\n        if (this.#state.minPerspectivePointSize === value) {\n            return;\n        }\n        this.#state.minPerspectivePointSize = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get minPerspectivePointSize(): number {\n        return this.#state.minPerspectivePointSize;\n    }\n\n    /**\n     * Sets the maximum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     */\n    set maxPerspectivePointSize(value: number) {\n        if (this.#state.maxPerspectivePointSize === value) {\n            return;\n        }\n        this.#state.maxPerspectivePointSize = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets the maximum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     */\n    get maxPerspectivePointSize(): number {\n        return this.#state.maxPerspectivePointSize;\n    }\n\n    /**\n     * Sets if rendered point size reduces with distance when {@link Camera.projection} is set to ````PerspectiveProjectionType````.\n     *\n     * Default is ````false````.\n     */\n    set filterIntensity(value: boolean) {\n        if (this.#state.filterIntensity === value) {\n            return;\n        }\n        this.#state.filterIntensity = value;\n        this.view.rebuild();\n    }\n\n    /**\n     * Gets if rendered point size reduces with distance when {@link Camera.projection} is set to PerspectiveProjectionType.\n     *\n     * Default is ````false````.\n     */\n    get filterIntensity(): boolean {\n        return this.#state.filterIntensity;\n    }\n\n    /**\n     * Sets the minimum rendered size of points when {@link PointsMaterial.perspectivePoints} is ````true````.\n     *\n     * Default value is ````0````.\n     */\n    set minIntensity(value: number) {\n        if (this.#state.minIntensity === value) {\n            return;\n        }\n        this.#state.minIntensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the minimum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````0````.\n     */\n    get minIntensity(): number {\n        return this.#state.minIntensity;\n    }\n\n    /**\n     * Sets the maximum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````1````.\n     */\n    set maxIntensity(value: number) {\n        if (this.#state.maxIntensity === value) {\n            return;\n        }\n        this.#state.maxIntensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the maximum rendered size of points when {@link PointsMaterial.filterIntensity} is ````true````.\n     *\n     * Default value is ````1````.\n     */\n    get maxIntensity(): number {\n        return this.#state.maxIntensity;\n    }\n\n    /**\n     * @private\n     */\n    get hash(): string {\n        const state = this.#state;\n        return `${state.pointSize};\n        ${state.roundPoints};\n        ${state.perspectivePoints};\n        ${state.minPerspectivePointSize};\n        ${state.maxPerspectivePointSize};\n        ${state.filterIntensity}`;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {PointsMaterial};","import type {ViewObject} from \"./ViewObject\";\nimport type * as math from \"../math/index\";\n\n/**\n * Results of a pick attempted with {@link View.pick}.\n */\nclass PickResult {\n\n    #viewObject?: ViewObject | null | undefined;\n    #gotCanvasPos: boolean;\n    #gotOrigin: boolean;\n    #gotDirection: boolean;\n    #gotIndices: boolean;\n    #gotLocalPos: boolean;\n    #gotWorldPos: boolean;\n    #gotViewPos: boolean;\n    #gotWorldNormal: boolean;\n    #gotUV: boolean;\n    #canvasPos: Int16Array;\n    #origin: math.FloatArrayParam;\n    #direction: math.FloatArrayParam;\n    #indices: Int32Array;\n    #localPos: math.FloatArrayParam;\n    #worldPos: math.FloatArrayParam;\n    #viewPos: math.FloatArrayParam;\n    #worldNormal: math.FloatArrayParam;\n    #uv: math.FloatArrayParam;\n\n    constructor() {\n\n        this.#viewObject = null;\n        this.#canvasPos = new Int16Array([0, 0]);\n        this.#origin = new Float64Array([0, 0, 0]);\n        this.#direction = new Float64Array([0, 0, 0]);\n        this.#indices = new Int32Array(3);\n        this.#localPos = new Float64Array([0, 0, 0]);\n        this.#worldPos = new Float64Array([0, 0, 0]);\n        this.#viewPos = new Float64Array([0, 0, 0]);\n        this.#worldNormal = new Float64Array([0, 0, 0]);\n        this.#uv = new Float64Array([0, 0]);\n        this.#gotOrigin = false;\n        this.#gotDirection = false;\n        this.#gotIndices = false;\n        this.#gotCanvasPos = false;\n        this.#gotLocalPos = false;\n        this.#gotWorldPos = false;\n        this.#gotViewPos = false;\n        this.#gotWorldNormal = false;\n        this.#gotUV = false;\n\n        this.reset();\n    }\n\n    /**\n     * The picked {@link ViewObject}.\n     */\n    get viewObject(): ViewObject | null | undefined {\n        return this.#viewObject;\n    }\n\n    /**\n     * @private\n     */\n    set viewObject(value: ViewObject | null | undefined) {\n        this.#viewObject = value;\n    }\n\n    /**\n     * Canvas coordinates when picking with a 2D pointer.\n     */\n    get canvasPos(): Int16Array | undefined {\n        return this.#gotCanvasPos ? this.#canvasPos : undefined;\n    }\n\n    /**\n     * @private\n     */\n    set canvasPos(value: math.FloatArrayParam | Int16Array | undefined) {\n        if (value) {\n            this.#canvasPos[0] = value[0];\n            this.#canvasPos[1] = value[1];\n            this.#gotCanvasPos = true;\n        } else {\n            this.#gotCanvasPos = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray origin when raypicked.\n     */\n    get origin(): math.FloatArrayParam | null {\n        return this.#gotOrigin ? this.#origin : null;\n    }\n\n    /**\n     * @private\n     */\n    set origin(value: any) {\n        if (value) {\n            this.#origin[0] = value[0];\n            this.#origin[1] = value[1];\n            this.#origin[2] = value[2];\n            this.#gotOrigin = true;\n        } else {\n            this.#gotOrigin = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray direction when raypicked.\n     */\n    get direction(): math.FloatArrayParam | null {\n        return this.#gotDirection ? this.#direction : null;\n    }\n\n    /**\n     * @private\n     */\n    set direction(value: any) {\n        if (value) {\n            this.#direction[0] = value[0];\n            this.#direction[1] = value[1];\n            this.#direction[2] = value[2];\n            this.#gotDirection = true;\n        } else {\n            this.#gotDirection = false;\n        }\n    }\n\n    /**\n     * Picked triangle's vertex indices.\n     * Only defined when an object and triangle was picked.\n     */\n    get indices(): Int32Array | null {\n        return this.#viewObject && this.#gotIndices ? this.#indices : null;\n    }\n\n    /**\n     * @private\n     */\n    set indices(value: any) {\n        if (value) {\n            this.#indices[0] = value[0];\n            this.#indices[1] = value[1];\n            this.#indices[2] = value[2];\n            this.#gotIndices = true;\n        } else {\n            this.#gotIndices = false;\n        }\n    }\n\n    /**\n     * Picked Local-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get localPos(): math.FloatArrayParam | null {\n        return this.#viewObject && this.#gotLocalPos ? this.#localPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set localPos(value: any) {\n        if (value) {\n            this.#localPos[0] = value[0];\n            this.#localPos[1] = value[1];\n            this.#localPos[2] = value[2];\n            this.#gotLocalPos = true;\n        } else {\n            this.#gotLocalPos = false;\n        }\n    }\n\n    /**\n     * Picked World-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get worldPos(): math.FloatArrayParam | null {\n        return this.#viewObject && this.#gotWorldPos ? this.#worldPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set worldPos(value: any) {\n        if (value) {\n            this.#worldPos[0] = value[0];\n            this.#worldPos[1] = value[1];\n            this.#worldPos[2] = value[2];\n            this.#gotWorldPos = true;\n        } else {\n            this.#gotWorldPos = false;\n        }\n    }\n\n    /**\n     * Picked View-space point on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get viewPos(): math.FloatArrayParam | null {\n        return this.#viewObject && this.#gotViewPos ? this.#viewPos : null;\n    }\n\n    /**\n     * @private\n     */\n    set viewPos(value: any) {\n        if (value) {\n            this.#viewPos[0] = value[0];\n            this.#viewPos[1] = value[1];\n            this.#viewPos[2] = value[2];\n            this.#gotViewPos = true;\n        } else {\n            this.#gotViewPos = false;\n        }\n    }\n\n    /**\n     * Normal vector at picked position on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get worldNormal(): math.FloatArrayParam | null {\n        return this.#viewObject && this.#gotWorldNormal ? this.#worldNormal : null;\n    }\n\n    /**\n     * @private\n     */\n    set worldNormal(value: any) {\n        if (value) {\n            this.#worldNormal[0] = value[0];\n            this.#worldNormal[1] = value[1];\n            this.#worldNormal[2] = value[2];\n            this.#gotWorldNormal = true;\n        } else {\n            this.#gotWorldNormal = false;\n        }\n    }\n\n    /**\n     * UV coordinates at picked position on surface.\n     * Only defined when an object and a point on its surface was picked.\n     */\n    get uv(): math.FloatArrayParam | null {\n        return this.#viewObject && this.#gotUV ? this.#uv : null;\n    }\n\n    /**\n     * @private\n     */\n    set uv(value: any) {\n        if (value) {\n            this.#uv[0] = value[0];\n            this.#uv[1] = value[1];\n            this.#gotUV = true;\n        } else {\n            this.#gotUV = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    reset() {\n        this.#viewObject = null;\n        this.#gotCanvasPos = false;\n        this.#gotOrigin = false;\n        this.#gotDirection = false;\n        this.#gotIndices = false;\n        this.#gotLocalPos = false;\n        this.#gotWorldPos = false;\n        this.#gotViewPos = false;\n        this.#gotWorldNormal = false;\n        this.#gotUV = false;\n    }\n}\n\nexport {PickResult};","import {Component} from '../Component';\nimport type {View} from \"./View\";\nimport {CustomProjectionType, FrustumProjectionType, QualityRender} from \"../constants\";\n\n/**\n * Configures Scalable Ambient Obscurance (SAO) for a {@link View}.\n */\nexport class SAO extends Component {\n\n    /**\n     * The View to which this SAO belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        renderModes: number[];\n        intensity: number;\n        minResolution: number;\n        blendFactor: number;\n        numSamples: number;\n        bias: number;\n        scale: number;\n        blur: boolean;\n        blendCutoff: number;\n        enabled: boolean;\n        kernelRadius: number;\n    }\n\n    /** @private */\n    constructor(view: View, params: any) {\n\n        super(view, params);\n\n        this.view = view;\n\n        this.#state = {\n            renderModes: [QualityRender],\n            enabled: params.enabled !== false,\n            kernelRadius: params.kernelRadius || 100.0,\n            intensity: (params.intensity!== undefined) ? params.intensity : 0.15,\n            bias:  (params.bias!== undefined) ? params.bias : 0.5,\n            scale:  (params.scale!== undefined) ? params.scale : 1.0,\n            minResolution:  (params.minResolution!== undefined) ? params.minResolution : 0.0,\n            numSamples:  (params.numSamples!== undefined) ? params.numSamples : 10,\n            blur: !!(params.blur),\n            blendCutoff:  (params.blendCutff!== undefined) ? params.blendCutoff : 0.3,\n            blendFactor:  (params.blendFactor!== undefined) ? params.blendFactor : 1.0\n        };\n    }\n\n    /**\n     * Sets which rendering modes in which to render SAO.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    set renderModes(value: number[]) {\n        this.#state.renderModes = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets which rendering modes in which to render SAO.\n     *\n     * Accepted modes are {@link QualityRender} and {@link FastRender}.\n     *\n     * Default value is [{@link QualityRender}].\n     */\n    get renderModes(): number[] {\n        return this.#state.renderModes;\n    }\n\n    /**\n     * Gets whether or not SAO is supported by this browser and GPU.\n     *\n     * Even when enabled, SAO will only work if supported.\n     */\n    get supported() :boolean{\n        return this.viewer.renderer.getSAOSupported();\n    }\n\n    /**\n     * Sets whether SAO is enabled for the {@link View}.\n     *\n     * Even when enabled, SAO will only work if supported.\n     *\n     * Default value is ````false````.\n     */\n    set enabled(value:boolean) {\n        value = !!value;\n        if (this.#state.enabled === value) {\n            return;\n        }\n        this.#state.enabled = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether SAO is enabled for the {@link View}.\n     *\n     * Even when enabled, SAO will only apply if supported.\n     *\n     * Default value is ````false````.\n     */\n    get enabled() :boolean{\n        return this.#state.enabled;\n    }\n\n    /**\n     * Returns true if SAO is currently possible, where it is supported, enabled, and the current view state is compatible.\n     * Called internally by renderer logic.\n     * @private\n     */\n    get possible():boolean {\n        if (!this.supported) {\n            return false;\n        }\n        if (!this.#state.enabled) {\n            return false;\n        }\n        const projection = this.view.camera.projection;\n        if (projection === CustomProjectionType) {\n            return false;\n        }\n        if (projection === FrustumProjectionType) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Sets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     */\n    set kernelRadius(value:number) {\n        if (value === undefined || value === null) {\n            value = 100.0;\n        }\n        if (this.#state.kernelRadius === value) {\n            return;\n        }\n        this.#state.kernelRadius = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     */\n    get kernelRadius() :number{\n        return this.#state.kernelRadius;\n    }\n\n    /**\n     * Sets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     */\n    set intensity(value:number) {\n        if (value === undefined || value === null) {\n            value = 0.15;\n        }\n        if (this.#state.intensity === value) {\n            return;\n        }\n        this.#state.intensity = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     */\n    get intensity() :number{\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     */\n    set bias(value:number) {\n        if (value === undefined || value === null) {\n            value = 0.5;\n        }\n        if (this.#state.bias === value) {\n            return;\n        }\n        this.#state.bias = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     */\n    get bias() :number{\n        return this.#state.bias;\n    }\n\n    /**\n     * Sets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     */\n    set scale(value:number) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this.#state.scale === value) {\n            return;\n        }\n        this.#state.scale = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     */\n    get scale():number {\n        return this.#state.scale;\n    }\n\n    /**\n     * Sets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     */\n    set minResolution(value:number) {\n        if (value === undefined || value === null) {\n            value = 0.0;\n        }\n        if (this.#state.minResolution === value) {\n            return;\n        }\n        this.#state.minResolution = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     */\n    get minResolution():number {\n        return this.#state.minResolution;\n    }\n\n    /**\n     * Sets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     *\n     * Update this sparingly, since it causes a shader recompile.\n     */\n    set numSamples(value:number) {\n        if (value === undefined || value === null) {\n            value = 10;\n        }\n        if (this.#state.numSamples === value) {\n            return;\n        }\n        this.#state.numSamples = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     */\n    get numSamples() :number{\n        return this.#state.numSamples;\n    }\n\n    /**\n     * Sets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     */\n    set blur(value:boolean) {\n        value = (value !== false);\n        if (this.#state.blur === value) {\n            return;\n        }\n        this.#state.blur = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     */\n    get blur():boolean {\n        return this.#state.blur;\n    }\n\n    /**\n     * Sets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     */\n    set blendCutoff(value:number) {\n        if (value === undefined || value === null) {\n            value = 0.3;\n        }\n        if (this.#state.blendCutoff === value) {\n            return;\n        }\n        this.#state.blendCutoff = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     */\n    get blendCutoff():number {\n        return this.#state.blendCutoff;\n    }\n\n    /**\n     * Sets the SAO blend factor.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     */\n    set blendFactor(value:number) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this.#state.blendFactor === value) {\n            return;\n        }\n        this.#state.blendFactor = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the SAO blend scale.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     */\n    get blendFactor() :number{\n        return this.#state.blendFactor;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n","import type {View} from \"../View\";\nimport {Component} from \"../../Component\";\n\n/**\n * Configures the shape of \"lines\" geometry primitives.\n *\n * * Located at {@link View#linesMaterial}.\n * * Globally configures \"lines\" primitives for all {@link WebGLSceneModel}s.\n */\nclass LinesMaterial extends Component {\n\n    /**\n     * The View to which this LinesMaterial belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        lineWidth: number\n    };\n\n    /**\n     * @private\n     */\n    constructor(view: View, options: { lineWidth: number } = {lineWidth: 1}) {\n\n        super(view, options);\n\n        this.view = view;\n\n        this.#state = {\n            lineWidth: (options.lineWidth !== undefined && options.lineWidth !== null) ? options.lineWidth : 1\n        };\n    }\n\n    /**\n     * Sets line width.\n     *\n     * Default value is ````1```` pixels.\n     */\n    set lineWidth(value: number) {\n        this.#state.lineWidth = value || 1;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the line width.\n     *\n     * Default value is ````1```` pixels.\n     */\n    get lineWidth(): number {\n        return this.#state.lineWidth;\n    }\n}\n\nexport {LinesMaterial};","import {Component} from '../Component';\nimport * as utils from \"../utils/index\";\nimport {ViewObject} from \"./ViewObject\";\nimport type {WebViewer} from \"../WebViewer\";\nimport type {Scene, SceneModel} from \"../scene/index\";\nimport type {View} from \"./View\";\nimport {EventEmitter} from \"../EventEmitter\";\nimport {EventDispatcher} from \"strongly-typed-events\";\n\n/**\n * A layer of {@link ViewObject|ViewObjects} in a {@link View}.\n *\n * ## Summary\n *\n * * Useful for segreggating {@link ViewObject|ViewObjects} so we don't get our model objects mixed up with our UI and environment objects\n * * Created automatically or manually (see {@link View.createLayer})\n * * Registered in {@link View.layers}\n * * Contains ViewObjects for {@link SceneObject|SceneObjects} that have matching {@link SceneObject.viewLayerId}\n *\n * ## Overview\n *\n * ViewLayers organize a {@link View|View's} {@link ViewObject|ViewObjects} into layers, according to which aspects of\n * the view they represent. They make it easier for us to focus our interactions on the ViewObjects that are relevant\n * to the particular aspects we're interested in.\n *\n * ### Typical use case: segregating model objects from environment objects\n *\n * A typical use case for this feature is to group environmental {@link ViewObject|ViewObjects} (e.g. ground, skybox) in an \"environment\" ViewLayer,\n * and group model ViewObjects in a \"model\" ViewLayer. Then we can focus our model interactions (show, hide, highlight,\n * save/load BCF viewpoints, etc.) on the ViewObjects in the \"model\" ViewLayer, without involving the \"environment\"\n * ViewObjects at all, which are effectively in the background. We can basically ignore the environment objects as we\n * do various batch operations on our model objects, i.e. \"X-ray all\", \"X-ray everything except for walls\" and so on.\n *\n * ### Automatic ViewLayers\n *\n * By default, each {@link View} automatically lazy-creates ViewLayers within itself as required. As {@link SceneObject|SceneObjects} appear in the\n * {@link Scene}, {@link ViewObject|ViewObjects} and Viewlayers magically appear in each existing View.\n *\n * Recall that, whenever a {@link SceneObject} is created, each existing {@link View} will automatically create a\n * corresponding {@link ViewObject} to represent and control that SceneObject's appearance within the View's canvas.\n *\n * If the {@link SceneObject} also happens to have a value set on its {@link SceneObject.viewLayerId} ID property, then the View\n * will also automatically ensure that it contains a matching {@link ViewLayer}, and will register the new ViewObject\n * in that ViewLayer. Note that each ViewObject can belong to a maximum of one ViewLayer.\n *\n * When a {@link View} automatically creates Viewlayers, it will also automatically destroy them again whenever\n * their {@link SceneObject|SceneObjects} have all been destroyed.\n *\n * ### Manual ViewLayers\n *\n * We can configure a {@link View} to **not** automatically create ViewLayers, and instead rely on us to manually create them.\n *\n * When we do that, the View will only create the {@link ViewObject|ViewObjects} within itself for the ViewLayers that we created. The\n * View will ignore all SceneObjects that don't have {@link SceneObject.viewLayerId} values that match the IDs of our\n * manually-created ViewLayers.\n *\n * This feature is useful for ensuring that aspect-focused Views don't contain huge numbers of unused ViewObjects for\n * SceneObjects that they never need to show.\n *\n * When we manually create ViewLayers like this, then the View will not automatically destroy them whenever\n * their {@link SceneObject|SceneObjects} have all been destroyed. This keeps the ViewLayers around, in case\n * we create matching SceneObjects again in future.\n *\n * ## Examples\n *\n * ### Exampe 1: Automatic ViewLayers\n *\n * Create a {@link WebViewer}:\n *\n *````javascript\n * import {WebViewer} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *      id: \"myViewer\"\n * });\n *````\n *\n * Create a {@link View}, with the default setting of ````false```` for {@link ViewParams.autoLayers}:\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\",\n *      autoLayers: true // <<----------- Default\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n * ````\n *\n * Next, we'll create a {@link SceneModel} containing two model {@link SceneObject|SceneObjects} that represent a building\n * foundation and walls, along with two environmental SceneObjects that represent a skybox and ground plane.\n *\n * The ground and skybox SceneObjects specify that their {@link ViewObject|ViewObjects} belong\n * to \"environment\" ViewLayers, while the model SceneObjects specify that their ViewObjects belong to \"model\" ViewLayers.\n *\n * ````javascript\n * const mySceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n * });\n *\n * // (calls to SceneModel createGeometry and\n * // createMesh omitted for brevity)\n *\n * mySceneModel.createObject({\n *      id: \"ground\",\n *      meshIds: [\"groundMesh}],\n *      viewLayerId: \"environment\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"skyBox\",\n *      meshIds: [\"skyBoxMesh}],\n *      viewLayerId: \"environment\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"houseFoundation\",\n *      meshIds: [\"myMesh}],\n *      viewLayerId: \"model\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"houseWalls\",\n *      meshIds: [\"myMesh}],\n *      viewLayerId: \"model\"\n * });\n *\n * myModel.build();\n * ````\n *\n * Our {@link View} has now automatically created an \"environment\" {@link ViewLayer}, which contains {@link ViewObject|ViewObjects} for the skybox and\n * ground plane SceneObjects, and a \"model\" ViewLayer, which contains ViewObjects for the house foundation and walls.\n *\n * We can now batch-update the ViewObjects in each ViewLayer independently. As mentioned, this is useful when we need to ignore things\n * like UI or environmental objects in batch-updates, BCF viewpoints etc.\n *\n * ````javascript\n * // viewer.scene.objects contains four SceneObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.objects contains four ViewObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.layers contains two ViewLayers with IDs \"environment\" and \"model\"\n *\n * const environmentLayer = view1.layers[\"environment\"];\n * environmentLayer.setObjectsVisible(environmentLayer.objectIds, true);\n\n * const modelLayer = view1.layers[\"model\"];\n * modelLayer.setObjectsVisible(modelLayer.objectIds, true);\n * ````\n *\n * ### Example 2: Manual ViewLayers\n *\n * Create a {@link WebViewer}:\n *\n * ````javascript\n * import {WebViewer} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *      id: \"myViewer\"\n * });\n * ````\n *\n * Create a {@link View}, this time with ````false```` for {@link ViewParams.autoLayers}, in order to **not**\n * automatically create ViewLayers on demand:\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\",\n *      autoLayers: false // <<----------- Override default\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n * ````\n *\n * We'll manually create the \"model\" ViewLayer, and won't create an \"environment\" ViewLayer:\n *\n * ````javascript\n * const modelViewLayer = view1.createLayer({\n *     id: \"model\",\n *     visible: true\n * });\n * ````\n *\n * As we did in the previous example, we'll now create a {@link SceneModel} containing two model\n * {@link SceneObject|SceneObjects} that represent a building foundation and walls, along with two environmental\n * SceneObjects that represent a skybox and ground plane.\n *\n * As before, the ground and skybox SceneObjects specify that their {@link ViewObject|ViewObjects} belong to \"environment\" ViewLayers,\n * while the model SceneObjects specify that their ViewObjects belong to \"model\" ViewLayers.\n *\n * ````javascript\n * const mySceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n * });\n *\n * // (calls to SceneModel createGeometry and\n * // createMesh omitted for brevity)\n *\n * mySceneModel.createObject({\n *      id: \"ground\",\n *      meshIds: [\"groundMesh}],\n *      viewLayerId: \"environment\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"skyBox\",\n *      meshIds: [\"skyBoxMesh}],\n *      viewLayerId: \"environment\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"houseFoundation\",\n *      meshIds: [\"myMesh}],\n *      viewLayerId: \"model\"\n * });\n *\n * mySceneModel.createObject({\n *      id: \"houseWalls\",\n *      meshIds: [\"myMesh}],\n *      viewLayerId: \"model\"\n * });\n *\n * myModel.build();\n * ````\n *\n * This time, however, our {@link View} has now created {@link ViewObject|ViewObjects} for the \"model\" SceneObjects, while\n * ignoring the \"environment\" SceneObjects.\n *\n * As far as this View is converned, the \"environment\" SceneObjects do not exist.\n *\n * ````javascript\n * // viewer.scene.objects contains four SceneObjects with IDs \"ground\", \"skyBox\", \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.objects contains two ViewObjects with IDs \"houseFoundation\" and \"houseWalls\"\n *\n * // viewer.views.view1.layers contains one ViewLayer with ID \"model\"\n *\n * const modelLayer = view1.layers[\"model\"];\n * modelLayer.setObjectsVisible(modelLayer.objectIds, true);\n * ````\n */\nclass ViewLayer extends Component {\n\n    /**\n     ID of this ViewLayer, unique within the {@link View}.\n\n     This ViewLayer is mapped by this ID in {@link View.layers}.\n     */\n    declare readonly id: string;\n\n    /**\n     * The WebViewer to which this ViewLayer belongs.\n     */\n    declare readonly viewer: WebViewer;\n\n    /**\n     * The View to which this ViewLayer belongs.\n     */\n    declare readonly view: View;\n\n    /**\n     * Map of the all {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * These are the ViewObjects for which {@link ViewObject.viewLayerId} has the same value as {@link ViewLayer.id}.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     *\n     * The ViewLayer automatically ensures that there is a {@link ViewObject} here for\n     * each {@link SceneObject} in the {@link WebViewer}'s {@link Scene}.\n     */\n    readonly objects: { [key: string]: ViewObject };\n\n    /**\n     * Map of the currently visible {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is visible when {@link ViewObject.visible} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly visibleObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently x-rayed {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is x-rayed when {@link ViewObject.xrayed} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly xrayedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently highlighted {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is highlighted when {@link ViewObject.highlighted} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly highlightedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently selected {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * A ViewObject is selected when {@link ViewObject.selected} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly selectedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently colorized {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly colorizedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link ViewObject|ViewObjects} in this ViewLayer whose opacity has been updated.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly opacityObjects: { [key: string]: ViewObject };\n\n    /**\n     * When true, View destroys this ViewLayer as soon as there are no ViewObjects\n     * that need it. When false, View retains it.\n     * @private\n     */\n    autoDestroy: boolean;\n\n    /**\n     * Emits an event each time the visibility of a {@link ViewObject} changes.\n     *\n     * ViewObjects are shown and hidden with {@link View.setObjectsVisible}, {@link ViewLayer.setObjectsVisible} or {@link ViewObject.visible}.\n     * \n     * @event\n     */\n    readonly onObjectVisibility: EventEmitter<ViewLayer, ViewObject>;\n\n    #numObjects: number;\n    #objectIds: string[] | null;\n    #numVisibleObjects: number;\n    #visibleObjectIds: string[] | null;\n    #numXRayedObjects: number;\n    #xrayedObjectIds: string[] | null;\n    #numHighlightedObjects: number;\n    #highlightedObjectIds: string[] | null;\n    #numSelectedObjects: number;\n    #selectedObjectIds: string[] | null;\n    #numColorizedObjects: number;\n    #colorizedObjectIds: string[] | null;\n    #numOpacityObjects: number;\n    #opacityObjectIds: string[] | null;\n\n    #qualityRender: boolean;\n\n    gammaOutput: boolean;\n\n    constructor(options: {\n        id: string;\n        viewer: WebViewer;\n        view: View;\n        qualityRender?: boolean;\n        autoDestroy?: boolean;\n    }) {\n\n        super(options.view, options);\n\n        this.id = options.id;\n        this.viewer = options.viewer;\n        this.view = options.view;\n\n        this.objects = {};\n        this.visibleObjects = {};\n        this.xrayedObjects = {};\n        this.highlightedObjects = {};\n        this.selectedObjects = {};\n        this.colorizedObjects = {};\n        this.opacityObjects = {};\n\n        this.autoDestroy = (options.autoDestroy !== false);\n\n        this.#numObjects = 0;\n        this.#numVisibleObjects = 0;\n        this.#numXRayedObjects = 0\n        this.#numHighlightedObjects = 0;\n        this.#numSelectedObjects = 0;\n        this.#numColorizedObjects = 0;\n        this.#numOpacityObjects = 0;\n\n        this.#qualityRender = !!options.qualityRender;\n\n        this.onObjectVisibility = new EventEmitter(new EventDispatcher<ViewLayer, ViewObject>());\n\n        this.#initObjects();\n    }\n\n    /**\n     * Gets the gamma factor.\n     */\n    get gammaFactor() { // TODO\n        return 1.0;\n    }\n\n    /**\n     * Sets whether quality rendering is enabled for this ViewLayer.\n     *\n     * Default is ````false````.\n     */\n    set qualityRender(value: boolean) {\n        if (this.#qualityRender === value) {\n            return;\n        }\n        this.#qualityRender = value;\n        this.redraw();\n    }\n\n    /**\n     * Gets whether quality rendering is enabled for this ViewLayer.\n     *\n     * Default is ````false````.\n     */\n    get qualityRender(): boolean {\n        return this.#qualityRender;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numObjects(): number {\n        return this.#numObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get objectIds(): string[] {\n        if (!this.#objectIds) {\n            this.#objectIds = Object.keys(this.objects);\n        }\n        return this.#objectIds;\n    }\n\n    /**\n     * Gets the number of visible {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numVisibleObjects(): number {\n        return this.#numVisibleObjects;\n    }\n\n    /**\n     * Gets the IDs of the visible {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get visibleObjectIds(): string[] {\n        if (!this.#visibleObjectIds) {\n            this.#visibleObjectIds = Object.keys(this.visibleObjects);\n        }\n        return this.#visibleObjectIds;\n    }\n\n    /**\n     * Gets the number of X-rayed {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numXRayedObjects(): number {\n        return this.#numXRayedObjects;\n    }\n\n    /**\n     * Gets the IDs of the X-rayed {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get xrayedObjectIds(): string[] {\n        if (!this.#xrayedObjectIds) {\n            this.#xrayedObjectIds = Object.keys(this.xrayedObjects);\n        }\n        return this.#xrayedObjectIds;\n    }\n\n    /**\n     * Gets the number of highlighted {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numHighlightedObjects(): number {\n        return this.#numHighlightedObjects;\n    }\n\n    /**\n     * Gets the IDs of the highlighted {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get highlightedObjectIds(): string[] {\n        if (!this.#highlightedObjectIds) {\n            this.#highlightedObjectIds = Object.keys(this.highlightedObjects);\n        }\n        return this.#highlightedObjectIds;\n    }\n\n    /**\n     * Gets the number of selected {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numSelectedObjects(): number {\n        return this.#numSelectedObjects;\n    }\n\n    /**\n     * Gets the IDs of the selected {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get selectedObjectIds(): string[] {\n        if (!this.#selectedObjectIds) {\n            this.#selectedObjectIds = Object.keys(this.selectedObjects);\n        }\n        return this.#selectedObjectIds;\n    }\n\n    /**\n     * Gets the number of colorized {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get numColorizedObjects(): number {\n        return this.#numColorizedObjects;\n    }\n\n    /**\n     * Gets the IDs of the colorized {@link ViewObject|ViewObjects} in this ViewLayer.\n     */\n    get colorizedObjectIds(): string[] {\n        if (!this.#colorizedObjectIds) {\n            this.#colorizedObjectIds = Object.keys(this.colorizedObjects);\n        }\n        return this.#colorizedObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject|ViewObjects} in this ViewLayer that have updated opacities.\n     */\n    get opacityObjectIds(): string[] {\n        if (!this.#opacityObjectIds) {\n            this.#opacityObjectIds = Object.keys(this.opacityObjects);\n        }\n        return this.#opacityObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject|ViewObjects} in this ViewLayer that have updated opacities.\n     */\n    get numOpacityObjects(): number {\n        return this.#numOpacityObjects;\n    }\n\n    /**\n     * @private\n     */\n    registerViewObject(viewObject: ViewObject) {\n        this.objects[viewObject.id] = viewObject;\n        this.#numObjects++;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    deregisterViewObject(viewObject: ViewObject) {\n        delete this.objects[viewObject.id];\n        delete this.visibleObjects[viewObject.id];\n        delete this.xrayedObjects[viewObject.id];\n        delete this.highlightedObjects[viewObject.id];\n        delete this.selectedObjects[viewObject.id];\n        delete this.colorizedObjects[viewObject.id];\n        delete this.opacityObjects[viewObject.id];\n        this.#numObjects--;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    redraw() {\n        this.viewer.renderer.setImageDirty(this.view.viewIndex);\n    }\n\n    /**\n     * @private\n     */\n    objectVisibilityUpdated(viewObject: ViewObject, visible: boolean, notify: boolean = true) {\n        if (visible) {\n            this.visibleObjects[viewObject.id] = viewObject;\n            this.#numVisibleObjects++;\n        } else {\n            delete this.visibleObjects[viewObject.id];\n            this.#numVisibleObjects--;\n        }\n        this.#visibleObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.onObjectVisibility.dispatch(this, viewObject);\n        }\n        this.view.objectVisibilityUpdated(viewObject, visible, notify);\n    }\n\n    /**\n     * @private\n     */\n    objectXRayedUpdated(viewObject: ViewObject, xrayed: boolean) {\n        if (xrayed) {\n            this.xrayedObjects[viewObject.id] = viewObject;\n            this.#numXRayedObjects++;\n        } else {\n            delete this.xrayedObjects[viewObject.id];\n            this.#numXRayedObjects--;\n        }\n        this.#xrayedObjectIds = null; // Lazy regenerate\n        this.view.objectXRayedUpdated(viewObject, xrayed);\n    }\n\n    /**\n     * @private\n     */\n    objectHighlightedUpdated(viewObject: ViewObject, highlighted: boolean) {\n        if (highlighted) {\n            this.highlightedObjects[viewObject.id] = viewObject;\n            this.#numHighlightedObjects++;\n        } else {\n            delete this.highlightedObjects[viewObject.id];\n            this.#numHighlightedObjects--;\n        }\n        this.#highlightedObjectIds = null; // Lazy regenerate\n        this.view.objectHighlightedUpdated(viewObject, highlighted);\n    }\n\n    /**\n     * @private\n     */\n    objectSelectedUpdated(viewObject: ViewObject, selected: boolean) {\n        if (selected) {\n            this.selectedObjects[viewObject.id] = viewObject;\n            this.#numSelectedObjects++;\n        } else {\n            delete this.selectedObjects[viewObject.id];\n            this.#numSelectedObjects--;\n        }\n        this.#selectedObjectIds = null; // Lazy regenerate\n        this.view.objectSelectedUpdated(viewObject, selected);\n    }\n\n    /**\n     * @private\n     */\n    objectColorizeUpdated(viewObject: ViewObject, colorized: boolean) {\n        if (colorized) {\n            this.colorizedObjects[viewObject.id] = viewObject;\n            this.#numColorizedObjects++;\n        } else {\n            delete this.colorizedObjects[viewObject.id];\n            this.#numColorizedObjects--;\n        }\n        this.#colorizedObjectIds = null; // Lazy regenerate\n        this.view.objectColorizeUpdated(viewObject, colorized);\n    }\n\n    /**\n     * @private\n     */\n    objectOpacityUpdated(viewObject: ViewObject, opacityUpdated: boolean) {\n        if (opacityUpdated) {\n            this.opacityObjects[viewObject.id] = viewObject;\n            this.#numOpacityObjects++;\n        } else {\n            delete this.opacityObjects[viewObject.id];\n            this.#numOpacityObjects--;\n        }\n        this.#opacityObjectIds = null; // Lazy regenerate\n        this.view.objectOpacityUpdated(viewObject, opacityUpdated);\n    }\n\n    /**\n     * Updates the visibility of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.visible} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.visibleObjects} and {@link ViewLayer.numVisibleObjects}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param visible Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsVisible(ids: string[] | string, visible: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.visible !== visible);\n            viewObject.visible = visible;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the collidability of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * Updates {@link ViewObject.collidable} on the Objects with the given IDs.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param collidable Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCollidable(ids: string[] | string, collidable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.collidable !== collidable);\n            viewObject.collidable = collidable;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the culled status of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * Updates {@link ViewObject.culled} on the Objects with the given IDs.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param culled Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCulled(ids: string[] | string, culled: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.culled !== culled);\n            viewObject.culled = culled;\n            return changed;\n        });\n    }\n\n    /**\n     * Selects or deselects the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.selected} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.selectedObjects} and {@link ViewLayer.numSelectedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param selected Whether or not to select.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsSelected(ids: string[] | string, selected: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.selected !== selected);\n            viewObject.selected = selected;\n            return changed;\n        });\n    }\n\n    /**\n     * Highlights or un-highlights the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.highlighted} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.highlightedObjects} and {@link ViewLayer.numHighlightedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param highlighted Whether or not to highlight.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsHighlighted(ids: string[] | string, highlighted: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.highlighted !== highlighted);\n            viewObject.highlighted = highlighted;\n            return changed;\n        });\n    }\n\n    /**\n     * Applies or removes X-ray rendering for the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.xrayed} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.xrayedObjects} and {@link ViewLayer.numXRayedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param xrayed Whether or not to xray.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsXRayed(ids: string[] | string, xrayed: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.xrayed !== xrayed);\n            if (changed) {\n                viewObject.xrayed = xrayed;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Colorizes the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.colorize} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.colorizedObjects} and {@link ViewLayer.numColorizedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param colorize - RGB colorize factors in range ````[0..1,0..1,0..1]````.\n     * @returns True if any {@link ViewObject|ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsColorized(ids: string[] | string, colorize: number[]) {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            viewObject.colorize = colorize;\n        });\n    }\n\n    /**\n     * Sets the opacity of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.opacity} on the Objects with the given IDs.\n     * - Updates {@link ViewLayer.opacityObjects} and {@link ViewLayer.numOpacityObjects}.\n     *\n     * @param  ids - One or more {@link ViewObject.id} values.\n     * @param opacity - Opacity factor in range ````[0..1]````.\n     * @returns True if any {@link ViewObject|ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsOpacity(ids: string[] | string, opacity: number): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.opacity !== opacity);\n            if (changed) {\n                viewObject.opacity = opacity;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the pickability of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.pickable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link ViewLayer.pick}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param pickable Whether or not to set pickable.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsPickable(ids: string[] | string, pickable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.pickable !== pickable);\n            if (changed) {\n                viewObject.pickable = pickable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the clippability of the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * - Updates {@link ViewObject.clippable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link ViewLayer.pick}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param clippable Whether or not to set clippable.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsClippable(ids: string[] | string, clippable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.clippable !== clippable);\n            if (changed) {\n                viewObject.clippable = clippable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Iterates with a callback over the given {@link ViewObject|ViewObjects} in this ViewLayer.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param callback Callback to execute on each {@link ViewObject}.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    withObjects(ids: string[] | string, callback: Function): boolean {\n        if (utils.isString(ids)) {\n            // @ts-ignore\n            ids = [ids];\n        }\n        let changed = false;\n        for (let i = 0, len = ids.length; i < len; i++) {\n            const id = ids[i];\n            let viewObject = this.objects[id];\n            if (viewObject) {\n                changed = callback(viewObject) || changed;\n            }\n        }\n        return changed;\n    }\n\n    #initObjects() {\n        const scene = this.viewer.scene;\n        const sceneModels = scene.models;\n        for (const id in sceneModels) {\n            const sceneModel = sceneModels[id];\n            this.#createObjects(sceneModel);\n        }\n        scene.onModelCreated.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.#createObjects(sceneModel);\n        });\n        scene.onModelDestroyed.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.#destroyObjects(sceneModel);\n        });\n    }\n\n    #createObjects(sceneModel: SceneModel) {\n        const sceneObjects = sceneModel.objects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            if (sceneObject.viewLayerId == this.id) {\n                const viewObject = new ViewObject(this, sceneObject, {});\n                this.objects[viewObject.id] = viewObject;\n                this.#numObjects++;\n                this.#objectIds = null; // Lazy regenerate\n            }\n        }\n    }\n\n    #destroyObjects(sceneModel: SceneModel) {\n        const sceneObjects = sceneModel.objects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            const viewObject = this.objects[sceneObject.id];\n            viewObject._destroy();\n            this.#numObjects--;\n            this.#objectIds = null; // Lazy regenerate\n        }\n    }\n\n    /**\n     * Destroys this ViewLayer.\n     *\n     * Causes {@link WebViewer} to fire a \"viewDestroyed\" event.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {ViewLayer};\n","import {Component} from '../Component';\nimport {Camera, CameraFlightAnimation} from \"./camera/index\";\nimport {Canvas} from \"./Canvas\";\nimport {CameraControl} from \"./CameraControl/index\";\nimport {ViewObject} from \"./ViewObject\";\nimport {SectionPlane} from \"./SectionPlane\";\nimport type {AmbientLight, DirLight, PointLight} from \"./lights/index\";\nimport {EdgeMaterial, EmphasisMaterial, PointsMaterial} from \"./materials/index\";\nimport type {WebViewer} from \"../WebViewer\";\nimport {PickResult} from \"./PickResult\";\nimport {Metrics} from \"./Metriqs\";\nimport type {Scene, SceneModel} from \"../scene/index\";\nimport {PickParams} from \"./PickParams\";\nimport {SAO} from \"./SAO\";\nimport {LinesMaterial} from \"./materials/LinesMaterial\";\nimport type * as math from \"../math/index\";\nimport {FastRender, QualityRender} from \"../constants\";\nimport {ViewLayer} from \"./ViewLayer\";\nimport * as utils from \"../utils/index\";\nimport type {ViewLayerParams} from \"./ViewLayerParams\";\nimport type {SectionPlaneParams} from \"./SectionPlaneParams\";\nimport {EventDispatcher, IEvent} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./../EventEmitter\";\n\nimport {apply, createUUID} from \"../utils/index\";\n\n\n/**\n * An independently-configurable view of the models in a {@link WebViewer}.\n *\n * ## Overview\n *\n * A View is an independently-configurable view of the {@link SceneObject|SceneObjects} existing within a WebViewer, with\n * its own HTML canvas. A View automatically contains a {@link ViewObject} for each existing SceneObject. ViewObjects\n * function as a kind of proxy for the SceneObjects, through which we control their appearance\n * (show/hide/highlight etc.) within that particular View's canvas.\n *\n * Using Views, we can essentially have multiple canvases viewing the same model, each canvas perhaps showing a different subset\n * of the objects, with different visual effects, camera position etc.\n *\n * ## Quickstart\n *\n * * Create a View with {@link WebViewer.createView}\n * * Control the View's viewpoint and projection with {@link View.camera}\n * * Create light sources with {@link View.createLightSource}\n * * Create slicing planes with {@link View createSectionPlane}\n * * Each View automatically has a {@link ViewObject} for every {@link SceneObject}\n * * Uses {@link ViewLayer|ViewLayers} to organize ViewObjects into layers\n * * Optionally uses ViewLayers to mask which ViewObjects are automatically maintained\n * * Control the visibility of ViewObjects with {@link View.setObjectsVisible}\n * * Emphasise ViewObjects with {@link View.setObjectsHighlighted}, {@link View.setObjectsSelected}, {@link View.setObjectsXRayed} and {@link View.setObjectsColorized}\n *\n * ## Examples\n *\n * Create a view in a given canvas, with three objects visible and a couple of object X-rayed (rendered translucent):\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *      id: \"myView\",\n *      canvasId: \"myCanvas1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * view1.setObjectsVisible([\"myObject1\", \"myObject2\", \"myObject3\", ...], true);\n * view1.setObjectsXRayed([\"myObject1\", \"myObject\", ...], true);\n * ````\n *\n * Create a second view, using a different canvas, that shows two objects visible, with one of them highlighted:\n *\n * ```` javascript\n * const view2 = myViewer.createView({\n *      id: \"myView2\",\n *      canvasId: \"myCanvas2\"\n * });\n *\n * view2.camera.eye = [-1.4, 1.5, 15.8];\n * view2.camera.look = [4.0, 3.7, 1.8];\n * view2.camera.up = [0.0, 0.9, 0.0];\n *\n * view2.setObjectsVisible([\"myObject1\", \"myObject3\", ...], true);\n * view2.setObjectsHighlighted([\"myObject3\", ...], true);\n * ````\n */\nclass View extends Component {\n\n    /**\n     ID of this View, unique within the {@link WebViewer}.\n     */\n    declare id: string;\n\n    /**\n     * The WebViewer to which this View belongs.\n     */\n    declare readonly viewer: WebViewer;\n\n    /**\n     * The index of this View in {@link WebViewer.viewList}.\n     * @private\n     */\n    viewIndex: number;\n\n    /**\n     * Manages the Camera for this View.\n     */\n    readonly camera: Camera;\n\n    /**\n     * Manages the HTML canvas for this View.\n     */\n    readonly canvas: Canvas;\n\n    /**\n     * Whether the logarithmic depth buffer is enabled for this View.\n     */\n    readonly logarithmicDepthBufferEnabled: boolean;\n\n    /**\n     * Configures Scalable Ambient Obscurance (SAO) for this View.\n     */\n    readonly sao: SAO;\n\n    /**\n     * Controls the View's {@link Camera} from user input.\n     */\n    readonly cameraControl: CameraControl;\n\n    /**\n     * Flies or jumps the View's {@link Camera} to given positions.\n     */\n    readonly cameraFlight: CameraFlightAnimation;\n\n    /**\n     * Manages measurement units, origin and scale for this View.\n     */\n    readonly metrics: Metrics;\n\n    /**\n     * Configures the X-rayed appearance of {@link ViewObject|ViewObjects} in this View.\n     */\n    readonly xrayMaterial: EmphasisMaterial;\n\n    /**\n     * Configures the highlighted appearance of {@link ViewObject|ViewObjects} in this View.\n     */\n    readonly highlightMaterial: EmphasisMaterial;\n\n    /**\n     * Configures the appearance of {@link ViewObject|ViewObjects} in this View.\n     */\n    readonly selectedMaterial: EmphasisMaterial;\n\n    /**\n     * Configures the appearance of edges belonging to {@link ViewObject} in this View.\n     */\n    readonly edgeMaterial: EdgeMaterial;\n\n    /**\n     * Configures the appearance of point primitives belonging to {@link ViewObject|ViewObjects} in this View .\n     */\n    readonly pointsMaterial: PointsMaterial;\n\n    /**\n     * Configures the appearance of lines belonging to {@link ViewObject|ViewObjects} in this View.\n     */\n    readonly linesMaterial: LinesMaterial;\n\n    /**\n     * Map of the all {@link ViewObject|ViewObjects} in this View.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     *\n     * The View automatically ensures that there is a {@link ViewObject} here for\n     * each {@link SceneObject} in the {@link WebViewer}'s {@link Scene}.\n     */\n    readonly objects: { [key: string]: ViewObject };\n\n    /**\n     * Map of the currently visible {@link ViewObject|ViewObjects} in this View.\n     *\n     * A ViewObject is visible when {@link ViewObject.visible} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly visibleObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently x-rayed {@link ViewObject|ViewObjects} in this View.\n     *\n     * A ViewObject is x-rayed when {@link ViewObject.xrayed} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly xrayedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently highlighted {@link ViewObject|ViewObjects} in this View.\n     *\n     * A ViewObject is highlighted when {@link ViewObject.highlighted} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly highlightedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently selected {@link ViewObject|ViewObjects} in this View.\n     *\n     * A ViewObject is selected when {@link ViewObject.selected} is true.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly selectedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of currently colorized {@link ViewObject|ViewObjects} in this View.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly colorizedObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link ViewObject|ViewObjects} in this View whose opacity has been updated.\n     *\n     * Each {@link ViewObject} is mapped here by {@link ViewObject.id}.\n     */\n    readonly opacityObjects: { [key: string]: ViewObject };\n\n    /**\n     * Map of {@link SectionPlane}s in this View.\n     *\n     * Each {@link SectionPlane} is mapped here by {@link SectionPlane.id}.\n     */\n    readonly sectionPlanes: { [key: string]: SectionPlane };\n\n    /**\n     * List of {@link SectionPlane}s in this View.\n     */\n    readonly sectionPlanesList: SectionPlane[] = [];\n    /**\n     * Map of light sources in this View.\n     */\n    readonly lights: { [key: string]: (AmbientLight | PointLight | DirLight) };\n    /**\n     * List of light sources in this View.\n     */\n    readonly lightsList: (AmbientLight | PointLight | DirLight)[] = [];\n\n    gammaOutput: boolean;\n\n    /**\n     * Map of the all {@link ViewLayer}s in this View.\n     *\n     * Each {@link ViewLayer} is mapped here by {@link ViewLayer.id}.\n     */\n    readonly layers: { [key: string]: ViewLayer };\n\n    /**\n     * Whether the View will automatically create {@link ViewLayer|ViewLayers} on-demand\n     * as {@link SceneObject|SceneObjects} are created.\n     *\n     * When ````true```` (default), the View will automatically create {@link ViewLayer|ViewLayers} as needed for each new\n     * {@link SceneObject.viewLayerId} encountered, including a \"default\" ViewLayer for SceneObjects that have no\n     * viewLayerId. This default setting therefore ensures that a ViewObject is created in the View for every SceneObject that is created.\n     *\n     * If you set this ````false````, however, then the View will only create {@link ViewObject|ViewObjects} for {@link SceneObject|SceneObjects} that have\n     * a {@link SceneObject.viewLayerId} that matches the ID of a {@link ViewLayer} that you have explicitly created previously with {@link View.createLayer}.\n     *\n     * Setting this parameter false enables Views to contain only the ViewObjects that they actually need to show, i.e. to represent only\n     * SceneObjects that they need to view. This enables a View to avoid wastefully creating and maintaining ViewObjects for SceneObjects\n     * that it never needs to show.\n     */\n    readonly autoLayers: boolean;\n\n    /**\n     * Emits an event each time the visibility of a {@link ViewObject} changes in this View.\n     *\n     * ViewObjects are shown and hidden with {@link View.setObjectsVisible}, {@link ViewLayer.setObjectsVisible} or {@link ViewObject.visible}.\n     *\n     * @event\n     */\n    readonly onObjectVisibility: EventEmitter<View, ViewObject>;\n\n    /**\n     * Emits an event each time a {@link ViewLayer} is created in this View.\n     *\n     * Layers are created explicitly with {@link View.createLayer}, or implicitly with {@link Scene.createModel} and {@link SceneModelParams.viewLayerId}.\n     *\n     * @event\n     */\n    readonly onLayerCreated: EventEmitter<View, ViewLayer>;\n\n    /**\n     * Emits an event each time a {@link ViewLayer} in this View is destroyed.\n     *\n     * ViewLayers are destroyed explicitly with {@link ViewLayer.destroy}, or implicitly when they become empty and {@link View.autoLayers} is false.\n     *\n     * @event\n     */\n    readonly onLayerDestroyed: EventEmitter<View, ViewLayer>;\n\n    /**\n     * Emits an event each time a {@link SectionPlane} is created in this View.\n     *\n     * @event\n     */\n    readonly onSectionPlaneCreated: EventEmitter<View, SectionPlane>;\n\n    /**\n     * Emits an event each time a {@link SectionPlane} in this View is destroyed.\n     *\n     * @event\n     */\n    readonly onSectionPlaneDestroyed: EventEmitter<View, SectionPlane>;\n\n    #numObjects: number;\n    #objectIds: string[] | null;\n    #numVisibleObjects: number;\n    #visibleObjectIds: string[] | null;\n    #numXRayedObjects: number;\n    #xrayedObjectIds: string[] | null;\n    #numHighlightedObjects: number;\n    #highlightedObjectIds: string[] | null;\n    #numSelectedObjects: number;\n    #selectedObjectIds: string[] | null;\n    #numColorizedObjects: number;\n    #colorizedObjectIds: string[] | null;\n    #numOpacityObjects: number;\n    #opacityObjectIds: string[] | null;\n    #qualityRender: boolean;\n    #lightsHash: string | null = null;\n    #sectionPlanesHash: string | null = null;\n\n    /**\n     * @private\n     */\n    constructor(options: {\n        viewer: WebViewer;\n        origin?: number[];\n        scale?: number;\n        units?: number;\n        canvasId?: string;\n        canvasElement?: HTMLCanvasElement;\n        backgroundColor?: any[];\n        backgroundColorFromAmbientLight?: boolean;\n        premultipliedAlpha?: boolean;\n        transparent?: boolean;\n        qualityRender?: boolean;\n        logarithmicDepthBufferEnabled?: boolean;\n        autoLayers?: boolean;\n    }) {\n\n        super(null, options);\n\n        this.viewer = options.viewer;\n\n        const canvas = options.canvasElement || document.getElementById(<string>options.canvasId);\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw \"Mandatory View config expected: valid canvasId or canvasElement\";\n        }\n\n        this.viewIndex = 0;\n        this.objects = {};\n        this.visibleObjects = {};\n        this.xrayedObjects = {};\n        this.highlightedObjects = {};\n        this.selectedObjects = {};\n        this.colorizedObjects = {};\n        this.opacityObjects = {};\n        this.sectionPlanes = {};\n        this.sectionPlanesList = [];\n        this.lights = {};\n        this.lightsList = [];\n        this.layers = {};\n\n        this.#numObjects = 0;\n        this.#objectIds = null;\n        this.#numVisibleObjects = 0;\n        this.#visibleObjectIds = null;\n        this.#numXRayedObjects = 0;\n        this.#xrayedObjectIds = null;\n        this.#numHighlightedObjects = 0;\n        this.#highlightedObjectIds = null;\n        this.#numSelectedObjects = 0;\n        this.#selectedObjectIds = null;\n        this.#numColorizedObjects = 0;\n        this.#colorizedObjectIds = null;\n        this.#numOpacityObjects = 0;\n        this.#opacityObjectIds = null;\n        this.#qualityRender = !!options.qualityRender;\n        this.gammaOutput = true;\n\n        this.#sectionPlanesHash = null;\n        this.#lightsHash = null;\n\n        this.canvas = new Canvas(this, {\n            canvas: canvas,\n            transparent: !!options.transparent,\n            backgroundColor: options.backgroundColor,\n            backgroundColorFromAmbientLight: !!options.backgroundColorFromAmbientLight,\n            premultipliedAlpha: !!options.premultipliedAlpha\n        });\n\n        this.canvas.onBoundary.subscribe(() => {\n            this.redraw();\n        });\n\n        this.camera = new Camera(this);\n\n        this.sao = new SAO(this, {});\n\n        this.cameraControl = new CameraControl(this, this.canvas, this.camera, {\n            doublePickFlyTo: true\n        });\n\n        this.cameraFlight = new CameraFlightAnimation(this, {\n            duration: 0.5\n        });\n\n        this.metrics = new Metrics(this, {\n            units: options.units,\n            scale: options.scale,\n            origin: options.origin\n        });\n\n        this.xrayMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [0.9, 0.7, 0.6],\n            fillAlpha: 0.4,\n            edges: true,\n            edgeColor: [0.5, 0.4, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1\n        });\n\n        this.highlightMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [1.0, 1.0, 0.0],\n            fillAlpha: 0.5,\n            edges: true,\n            edgeColor: [0.5, 0.4, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1\n        });\n\n        this.selectedMaterial = new EmphasisMaterial(this, {\n            fill: true,\n            fillColor: [0.0, 1.0, 0.0],\n            fillAlpha: 0.5,\n            edges: true,\n            edgeColor: [0.4, 0.5, 0.4],\n            edgeAlpha: 1.0,\n            edgeWidth: 1\n        });\n\n        this.edgeMaterial = new EdgeMaterial(this, {\n            edgeColor: [0.0, 0.0, 0.0],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n            edges: true,\n            renderModes: [QualityRender]\n        });\n\n        this.pointsMaterial = new PointsMaterial(this, {\n            pointSize: 1,\n            roundPoints: true,\n            perspectivePoints: true,\n            minPerspectivePointSize: 1,\n            maxPerspectivePointSize: 6,\n            filterIntensity: false,\n            minIntensity: 0,\n            maxIntensity: 1\n        });\n\n        this.linesMaterial = new LinesMaterial(this, {\n            lineWidth: 1\n        });\n\n        this.lights = {};\n\n        this.#qualityRender = !!options.qualityRender;\n\n        this.autoLayers = (options.autoLayers !== false);\n\n        this.logarithmicDepthBufferEnabled = !!options.logarithmicDepthBufferEnabled;\n\n        this.onObjectVisibility = new EventEmitter(new EventDispatcher<View, ViewObject>());\n        this.onLayerCreated = new EventEmitter(new EventDispatcher<View, ViewLayer>());\n        this.onLayerDestroyed = new EventEmitter(new EventDispatcher<View, ViewLayer>());\n        this.onSectionPlaneCreated = new EventEmitter(new EventDispatcher<View, SectionPlane>());\n        this.onSectionPlaneDestroyed = new EventEmitter(new EventDispatcher<View, SectionPlane>());\n\n        this.#initObjects();\n    }\n\n    /**\n     * Gets the gamma factor.\n     */\n    get gammaFactor() { // TODO\n        return 1.0;\n    }\n\n    /**\n     * Sets whether quality rendering is enabled for this View.\n     *\n     * Default is ````false````.\n     */\n    set qualityRender(value: boolean) {\n        if (this.#qualityRender === value) {\n            return;\n        }\n        this.#qualityRender = value;\n        this.redraw();\n    }\n\n    /**\n     * Gets whether quality rendering is enabled for this View.\n     *\n     * Default is ````false````.\n     */\n    get qualityRender(): boolean {\n        return this.#qualityRender;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject|ViewObjects} in this View.\n     */\n    get numObjects(): number {\n        return this.#numObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject|ViewObjects} in this View.\n     */\n    get objectIds(): string[] {\n        if (!this.#objectIds) {\n            this.#objectIds = Object.keys(this.objects);\n        }\n        return this.#objectIds;\n    }\n\n    /**\n     * Gets the number of visible {@link ViewObject|ViewObjects} in this View.\n     */\n    get numVisibleObjects(): number {\n        return this.#numVisibleObjects;\n    }\n\n    /**\n     * Gets the IDs of the visible {@link ViewObject|ViewObjects} in this View.\n     */\n    get visibleObjectIds(): string[] {\n        if (!this.#visibleObjectIds) {\n            this.#visibleObjectIds = Object.keys(this.visibleObjects);\n        }\n        return this.#visibleObjectIds;\n    }\n\n    /**\n     * Gets the number of X-rayed {@link ViewObject|ViewObjects} in this View.\n     */\n    get numXRayedObjects(): number {\n        return this.#numXRayedObjects;\n    }\n\n    /**\n     * Gets the IDs of the X-rayed {@link ViewObject|ViewObjects} in this View.\n     */\n    get xrayedObjectIds(): string[] {\n        if (!this.#xrayedObjectIds) {\n            this.#xrayedObjectIds = Object.keys(this.xrayedObjects);\n        }\n        return this.#xrayedObjectIds;\n    }\n\n    /**\n     * Gets the number of highlighted {@link ViewObject|ViewObjects} in this View.\n     */\n    get numHighlightedObjects(): number {\n        return this.#numHighlightedObjects;\n    }\n\n    /**\n     * Gets the IDs of the highlighted {@link ViewObject|ViewObjects} in this View.\n     */\n    get highlightedObjectIds(): string[] {\n        if (!this.#highlightedObjectIds) {\n            this.#highlightedObjectIds = Object.keys(this.highlightedObjects);\n        }\n        return this.#highlightedObjectIds;\n    }\n\n    /**\n     * Gets the number of selected {@link ViewObject|ViewObjects} in this View.\n     */\n    get numSelectedObjects(): number {\n        return this.#numSelectedObjects;\n    }\n\n    /**\n     * Gets the IDs of the selected {@link ViewObject|ViewObjects} in this View.\n     */\n    get selectedObjectIds(): string[] {\n        if (!this.#selectedObjectIds) {\n            this.#selectedObjectIds = Object.keys(this.selectedObjects);\n        }\n        return this.#selectedObjectIds;\n    }\n\n    /**\n     * Gets the number of colorized {@link ViewObject|ViewObjects} in this View.\n     */\n    get numColorizedObjects(): number {\n        return this.#numColorizedObjects;\n    }\n\n    /**\n     * Gets the IDs of the colorized {@link ViewObject|ViewObjects} in this View.\n     */\n    get colorizedObjectIds(): string[] {\n        if (!this.#colorizedObjectIds) {\n            this.#colorizedObjectIds = Object.keys(this.colorizedObjects);\n        }\n        return this.#colorizedObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link ViewObject|ViewObjects} in this View that have updated opacities.\n     */\n    get opacityObjectIds(): string[] {\n        if (!this.#opacityObjectIds) {\n            this.#opacityObjectIds = Object.keys(this.opacityObjects);\n        }\n        return this.#opacityObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link ViewObject|ViewObjects} in this View that have updated opacities.\n     */\n    get numOpacityObjects(): number {\n        return this.#numOpacityObjects;\n    }\n\n    /**\n     * @private\n     */\n    registerViewObject(viewObject: ViewObject) {\n        this.objects[viewObject.id] = viewObject;\n        this.#numObjects++;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    deregisterViewObject(viewObject: ViewObject) {\n        delete this.objects[viewObject.id];\n        delete this.visibleObjects[viewObject.id];\n        delete this.xrayedObjects[viewObject.id];\n        delete this.highlightedObjects[viewObject.id];\n        delete this.selectedObjects[viewObject.id];\n        delete this.colorizedObjects[viewObject.id];\n        delete this.opacityObjects[viewObject.id];\n        this.#numObjects--;\n        this.#objectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectVisibilityUpdated(viewObject: ViewObject, visible: boolean, notify: boolean = true) {\n        if (visible) {\n            this.visibleObjects[viewObject.id] = viewObject;\n            this.#numVisibleObjects++;\n        } else {\n            delete this.visibleObjects[viewObject.id];\n            this.#numVisibleObjects--;\n        }\n        this.#visibleObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.onObjectVisibility.dispatch(this, viewObject);\n        }\n    }\n\n    /**\n     * @private\n     */\n    objectXRayedUpdated(viewObject: ViewObject, xrayed: boolean) {\n        if (xrayed) {\n            this.xrayedObjects[viewObject.id] = viewObject;\n            this.#numXRayedObjects++;\n        } else {\n            delete this.xrayedObjects[viewObject.id];\n            this.#numXRayedObjects--;\n        }\n        this.#xrayedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectHighlightedUpdated(viewObject: ViewObject, highlighted: boolean) {\n        if (highlighted) {\n            this.highlightedObjects[viewObject.id] = viewObject;\n            this.#numHighlightedObjects++;\n        } else {\n            delete this.highlightedObjects[viewObject.id];\n            this.#numHighlightedObjects--;\n        }\n        this.#highlightedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectSelectedUpdated(viewObject: ViewObject, selected: boolean) {\n        if (selected) {\n            this.selectedObjects[viewObject.id] = viewObject;\n            this.#numSelectedObjects++;\n        } else {\n            delete this.selectedObjects[viewObject.id];\n            this.#numSelectedObjects--;\n        }\n        this.#selectedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectColorizeUpdated(viewObject: ViewObject, colorized: boolean) {\n        if (colorized) {\n            this.colorizedObjects[viewObject.id] = viewObject;\n            this.#numColorizedObjects++;\n        } else {\n            delete this.colorizedObjects[viewObject.id];\n            this.#numColorizedObjects--;\n        }\n        this.#colorizedObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * @private\n     */\n    objectOpacityUpdated(viewObject: ViewObject, opacityUpdated: boolean) {\n        if (opacityUpdated) {\n            this.opacityObjects[viewObject.id] = viewObject;\n            this.#numOpacityObjects++;\n        } else {\n            delete this.opacityObjects[viewObject.id];\n            this.#numOpacityObjects--;\n        }\n        this.#opacityObjectIds = null; // Lazy regenerate\n    }\n\n    /**\n     * Creates a {@link SectionPlane} in this View.\n     *\n     * @param sectionPlaneParams\n     */\n    createSectionPlane(sectionPlaneParams: SectionPlaneParams): SectionPlane {\n        let id = sectionPlaneParams.id || createUUID();\n        if (this.sectionPlanes[id]) {\n            this.error(`SectionPlane with ID \"${id}\" already exists - will randomly-generate ID`);\n            id = createUUID();\n        }\n        const sectionPlane = new SectionPlane(this, sectionPlaneParams);\n        this.#registerSectionPlane(sectionPlane);\n        sectionPlane.onDestroyed.one(() => {\n            this.#deregisterSectionPlane(sectionPlane);\n        });\n        return sectionPlane;\n    }\n\n    /**\n     * Destroys the {@link SectionPlane}s in this View.\n     */\n    clearSectionPlanes(): void {\n        const ids = Object.keys(this.sectionPlanes);\n        for (let i = 0, len = ids.length; i < len; i++) {\n            this.sectionPlanes[ids[i]].destroy();\n        }\n        this.sectionPlanesList.length = 0;\n        this.#sectionPlanesHash = null;\n    }\n\n    #registerSectionPlane(sectionPlane: SectionPlane) {\n        this.sectionPlanesList.push(sectionPlane);\n        this.sectionPlanes[sectionPlane.id] = sectionPlane;\n        this.#sectionPlanesHash = null;\n        this.rebuild();\n        this.onSectionPlaneCreated.dispatch(this, sectionPlane);\n    }\n\n    #deregisterSectionPlane(sectionPlane: SectionPlane) {\n        for (let i = 0, len = this.sectionPlanesList.length; i < len; i++) {\n            if (this.sectionPlanesList[i].id === sectionPlane.id) {\n                this.sectionPlanesList.splice(i, 1);\n                this.#sectionPlanesHash = null;\n                delete this.sectionPlanes[sectionPlane.id];\n                this.rebuild();\n                this.onSectionPlaneDestroyed.dispatch(this, sectionPlane);\n                return;\n            }\n        }\n    }\n\n    /**\n     * @private\n     */\n    getSectionPlanesHash() {\n        if (this.#sectionPlanesHash) {\n            return this.#sectionPlanesHash;\n        }\n        if (this.sectionPlanesList.length === 0) {\n            return this.#sectionPlanesHash = \";\";\n        }\n        let sectionPlane;\n        const hashParts = [];\n        for (let i = 0, len = this.sectionPlanesList.length; i < len; i++) {\n            sectionPlane = this.sectionPlanesList[i];\n            hashParts.push(\"cp\");\n        }\n        hashParts.push(\";\");\n        this.#sectionPlanesHash = hashParts.join(\"\");\n        return this.#sectionPlanesHash;\n    };\n\n    /**\n     * @private\n     */\n    registerLight(light: PointLight | DirLight | AmbientLight) {\n        this.lightsList.push(light);\n        this.lights[light.id] = light;\n        this.#lightsHash = null;\n        this.rebuild();\n    }\n\n    /**\n     * @private\n     */\n    deregisterLight(light: PointLight | DirLight | AmbientLight) {\n        for (let i = 0, len = this.lightsList.length; i < len; i++) {\n            if (this.lightsList[i].id === light.id) {\n                this.lightsList.splice(i, 1);\n                this.#lightsHash = null;\n                delete this.lights[light.id];\n                this.rebuild();\n                return;\n            }\n        }\n    }\n\n    //createLight(lightParams) {\n    //\n    // }\n\n    /**\n     * Destroys the light sources in this View.\n     */\n    clearLights(): void {\n        const ids = Object.keys(this.lights);\n        for (let i = 0, len = ids.length; i < len; i++) {\n            this.lights[ids[i]].destroy();\n        }\n    }\n\n    /**\n     * @private\n     */\n    getLightsHash() {\n        if (this.#lightsHash) {\n            return this.#lightsHash;\n        }\n        if (this.lightsList.length === 0) {\n            return this.#lightsHash = \";\";\n        }\n        const hashParts = [];\n        const lights = this.lightsList;\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light: any = lights[i];\n            hashParts.push(\"/\");\n            hashParts.push(light.type);\n            hashParts.push((light.space === \"world\") ? \"w\" : \"v\");\n            if (light.castsShadow) {\n                hashParts.push(\"sh\");\n            }\n        }\n        // if (this.lightMaps.length > 0) {\n        //     hashParts.push(\"/lm\");\n        // }\n        // if (this.reflectionMaps.length > 0) {\n        //     hashParts.push(\"/rm\");\n        // }\n        hashParts.push(\";\");\n        this.#lightsHash = hashParts.join(\"\");\n        return this.#lightsHash;\n    };\n\n    /**\n     * @private\n     */\n    rebuild() {\n        this.viewer.renderer.needsRebuild(this.viewIndex);\n    }\n\n    /**\n     * @private\n     */\n    redraw() {\n        this.viewer.renderer.setImageDirty(this.viewIndex);\n    }\n\n    /**\n     * Destroys this View.\n     *\n     * Causes {@link WebViewer} to fire a \"viewDestroyed\" event.\n     */\n    destroy() {\n        super.destroy();\n        this.onObjectVisibility.clear();\n        this.onLayerCreated.clear();\n        this.onLayerDestroyed.clear();\n        this.onSectionPlaneCreated.clear();\n        this.onSectionPlaneDestroyed.clear();\n    }\n\n    #initObjects() {\n        const scene = this.viewer.scene;\n        const sceneModels = scene.models;\n        for (const id in sceneModels) {\n            const sceneModel = sceneModels[id];\n            this.#createObjects(sceneModel);\n        }\n        scene.onModelCreated.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.#createObjects(sceneModel);\n        });\n        scene.onModelDestroyed.subscribe((scene: Scene, sceneModel: SceneModel) => {\n            this.#destroyObjects(sceneModel);\n        });\n    }\n\n    #createObjects(sceneModel: SceneModel) {\n        const sceneObjects = sceneModel.objects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            const viewLayerId = sceneObject.viewLayerId || \"default\";\n            let viewLayer = this.layers[viewLayerId];\n            if (!viewLayer) {\n                if (!this.autoLayers) {\n                    continue;\n                }\n                viewLayer = new ViewLayer({\n                    id: viewLayerId,\n                    view: this,\n                    viewer: this.viewer\n                });\n                this.layers[viewLayerId] = viewLayer;\n                viewLayer.onDestroyed.one(() => {\n                    delete this.layers[viewLayer.id];\n                    this.onLayerDestroyed.dispatch(this, viewLayer);\n                });\n                this.onLayerCreated.dispatch(this, viewLayer);\n            }\n            const viewObject = new ViewObject(viewLayer, sceneObject, {});\n            viewLayer.registerViewObject(viewObject);\n            this.registerViewObject(viewObject);\n        }\n    }\n\n    #destroyObjects(sceneModel: SceneModel) {\n        const sceneObjects = sceneModel.objects;\n        for (let id in sceneObjects) {\n            const sceneObject = sceneObjects[id];\n            const viewLayerId = sceneObject.viewLayerId || \"main\";\n            let viewLayer = this.layers[viewLayerId];\n            const viewObject = this.objects[sceneObject.id];\n            this.deregisterViewObject(viewObject);\n            if (viewLayer) {\n                viewLayer.deregisterViewObject(viewObject);\n                if (viewLayer.autoDestroy && viewLayer.numObjects === 0) {\n                    viewLayer.destroy();\n                }\n            }\n        }\n    }\n\n    /**\n     * @private\n     */\n    getAmbientColorAndIntensity(): math.FloatArrayParam {\n        return [0, 0, 0, 1];\n    }\n\n    /**\n     * Updates the visibility of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.visible} on the Objects with the given IDs.\n     * - Updates {@link View.visibleObjects} and {@link View.numVisibleObjects}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param visible Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsVisible(ids: string[] | string, visible: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.visible !== visible);\n            viewObject.visible = visible;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the collidability of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * Updates {@link ViewObject.collidable} on the Objects with the given IDs.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param collidable Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCollidable(ids: string[] | string, collidable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.collidable !== collidable);\n            viewObject.collidable = collidable;\n            return changed;\n        });\n    }\n\n    /**\n     * Updates the culled status of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * Updates {@link ViewObject.culled} on the Objects with the given IDs.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param culled Whether or not to cull.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCulled(ids: string[] | string, culled: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.culled !== culled);\n            viewObject.culled = culled;\n            return changed;\n        });\n    }\n\n    /**\n     * Selects or deselects the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.selected} on the Objects with the given IDs.\n     * - Updates {@link View.selectedObjects} and {@link View.numSelectedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param selected Whether or not to select.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsSelected(ids: string[] | string, selected: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.selected !== selected);\n            viewObject.selected = selected;\n            return changed;\n        });\n    }\n\n    /**\n     * Highlights or un-highlights the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.highlighted} on the Objects with the given IDs.\n     * - Updates {@link View.highlightedObjects} and {@link View.numHighlightedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param highlighted Whether or not to highlight.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsHighlighted(ids: string[] | string, highlighted: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.highlighted !== highlighted);\n            viewObject.highlighted = highlighted;\n            return changed;\n        });\n    }\n\n    /**\n     * Applies or removes X-ray rendering for the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.xrayed} on the Objects with the given IDs.\n     * - Updates {@link View.xrayedObjects} and {@link View.numXRayedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param xrayed Whether or not to xray.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsXRayed(ids: string[] | string, xrayed: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.xrayed !== xrayed);\n            if (changed) {\n                viewObject.xrayed = xrayed;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Colorizes the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.colorize} on the Objects with the given IDs.\n     * - Updates {@link View.colorizedObjects} and {@link View.numColorizedObjects}.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param colorize - RGB colorize factors in range ````[0..1,0..1,0..1]````.\n     * @returns True if any {@link ViewObject|ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsColorized(ids: string[] | string, colorize: number[]) {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            viewObject.colorize = colorize;\n        });\n    }\n\n    /**\n     * Sets the opacity of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.opacity} on the Objects with the given IDs.\n     * - Updates {@link View.opacityObjects} and {@link View.numOpacityObjects}.\n     *\n     * @param  ids - One or more {@link ViewObject.id} values.\n     * @param opacity - Opacity factor in range ````[0..1]````.\n     * @returns True if any {@link ViewObject|ViewObjects} changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsOpacity(ids: string[] | string, opacity: number): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.opacity !== opacity);\n            if (changed) {\n                viewObject.opacity = opacity;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the pickability of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.pickable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link View.pick}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param pickable Whether or not to set pickable.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsPickable(ids: string[] | string, pickable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.pickable !== pickable);\n            if (changed) {\n                viewObject.pickable = pickable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Sets the clippability of the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * - Updates {@link ViewObject.clippable} on the Objects with the given IDs.\n     * - Enables or disables the ability to pick the given Objects with {@link View.pick}.\n     *\n     * @param {String[]} ids Array of {@link ViewObject.id} values.\n     * @param clippable Whether or not to set clippable.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsClippable(ids: string[] | string, clippable: boolean): boolean {\n        return this.withObjects(ids, (viewObject: ViewObject) => {\n            const changed = (viewObject.clippable !== clippable);\n            if (changed) {\n                viewObject.clippable = clippable;\n            }\n            return changed;\n        });\n    }\n\n    /**\n     * Iterates with a callback over the given {@link ViewObject|ViewObjects} in this View.\n     *\n     * @param  ids One or more {@link ViewObject.id} values.\n     * @param callback Callback to execute on each {@link ViewObject}.\n     * @returns True if any {@link ViewObject|ViewObjects} were updated, else false if all updates were redundant and not applied.\n     */\n    withObjects(ids: string[] | string, callback: Function): boolean {\n        if (utils.isString(ids)) {\n            // @ts-ignore\n            ids = [ids];\n        }\n        let changed = false;\n        for (let i = 0, len = ids.length; i < len; i++) {\n            const id = ids[i];\n            let viewObject = this.objects[id];\n            if (viewObject) {\n                changed = callback(viewObject) || changed;\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Creates a {@link ViewLayer} in this View.\n     *\n     * The ViewLayer is then registered in {@link View.layers}.\n     *\n     * Since the ViewLayer is created explicitly by this method, the ViewLayer will persist until {@link ViewLayer.destroy}\n     * is called, or the {@link View} itself is destroyed. If a ViewLayer with the given ID already exists, then the method\n     * returns that existing ViewLayer. The method will also ensure that the existing ViewLayer likewise persists.\n     *\n     * @param viewLayerParams\n     * @returns The new ViewLayer\n     */\n    createLayer(viewLayerParams: ViewLayerParams): ViewLayer {\n        let viewLayer = this.layers[viewLayerParams.id];\n        if (!viewLayer) {\n            viewLayer = new ViewLayer({ // Automatically creates ViewObjects\n                id: viewLayerParams.id,\n                view: this,\n                viewer: this.viewer\n            });\n            this.layers[viewLayerParams.id] = viewLayer;\n            this.onLayerCreated.dispatch(this, viewLayer);\n            viewLayer.onDestroyed.one(() => {\n                delete this.layers[viewLayer.id];\n                this.onLayerDestroyed.dispatch(this, viewLayer);\n            });\n        }\n        viewLayer.autoDestroy = false;\n        return viewLayer;\n    }\n}\n\nexport {View};\n","export const RENDER_PASSES = {\n\n    // Skipped - suppress rendering\n\n    NOT_RENDERED: 0,\n\n    // Normal rendering - mutually exclusive modes\n\n    COLOR_OPAQUE: 1,\n    COLOR_TRANSPARENT: 2,\n\n    // Emphasis silhouette rendering - mutually exclusive modes\n\n    SILHOUETTE_HIGHLIGHTED: 3,\n    SILHOUETTE_SELECTED: 4,\n    SILHOUETTE_XRAYED: 5,\n\n    // Edges rendering - mutually exclusive modes\n\n    EDGES_COLOR_OPAQUE: 6,\n    EDGES_COLOR_TRANSPARENT: 7,\n    EDGES_HIGHLIGHTED: 8,\n    EDGES_SELECTED: 9,\n    EDGES_XRAYED: 10,\n\n    // Picking\n\n    PICK: 11\n};\n\n","const WEBGL_INFO: {\n    [key: string]: any\n} = {\n    WEBGL: false,\n    SUPPORTED_EXTENSIONS: {}\n};\n\nconst canvas = document.createElement(\"canvas\");\n\nif (canvas) {\n\n    // @ts-ignore\n    const gl: WebGL2RenderingContext = canvas.getContext(\"webgl2\", {antialias: true});\n\n    WEBGL_INFO.WEBGL = !!gl;\n\n    if (WEBGL_INFO.WEBGL) {\n        // @ts-ignore\n        WEBGL_INFO.ANTIALIAS = gl.getContextAttributes().antialias;\n        if (gl.getShaderPrecisionFormat) {\n            // @ts-ignore\n            if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"highp\";\n            } else { // @ts-ignore\n                if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n                                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n                            } else {\n                                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"lowp\";\n                            }\n            }\n        } else {\n            WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n        }\n        WEBGL_INFO.DEPTH_BUFFER_BITS = gl.getParameter(gl.DEPTH_BITS);\n        WEBGL_INFO.MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_CUBE_MAP_SIZE = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_RENDERBUFFER_SIZE = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n        WEBGL_INFO.MAX_TEXTURE_UNITS = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_VERTEX_ATTRIBS = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n        WEBGL_INFO.MAX_VERTEX_UNIFORM_VECTORS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_FRAGMENT_UNIFORM_VECTORS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_VARYING_VECTORS = gl.getParameter(gl.MAX_VARYING_VECTORS);\n        // @ts-ignore\n        gl.getSupportedExtensions().forEach(function (ext: any) {\n            WEBGL_INFO.SUPPORTED_EXTENSIONS[ext] = true;\n        });\n        WEBGL_INFO.depthTexturesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"];\n    }\n}\n\nexport {WEBGL_INFO};","import type {Texture} from \"./lib/Texture\";\nimport type {View, math, WebViewer} from \"../viewer/index\";\nimport {WEBGL_INFO} from \"./lib/WEBGL_INFO\";\n\n/**\n * Provides rendering context within a WebGLRenderer.\n */\nclass RenderContext {\n\n    /**\n     * The WebViewer.\n     */\n    public viewer: WebViewer;\n\n    /**\n     * The View we are rendering.\n     */\n    public view: View;\n\n    /**\n     * The WebGL rendering context.\n     */\n    public gl: WebGL2RenderingContext;\n\n    /**\n     * Whether to render a quality representation for triangle surfaces.\n     *\n     * When ````false````, we'll render them with a fast vertex-shaded Gouraud-shaded representation, which\n     * is great for zillions of objects.\n     *\n     * When ````true````, we'll render them at a better visual quality, using smooth, per-fragment shading\n     * and a more realistic lighting model.\n     */\n    public pbrEnabled: boolean;\n\n    /**\n     * Whether SAO is currently enabled during the current frame.\n     */\n    public withSAO: boolean;\n\n    /**\n     * Whether backfaces are currently enabled during the current frame.\n     */\n    public backfaces: boolean;\n\n    /**\n     * The vertex winding order for what we currently consider to be a backface during current\n     * frame: true == \"cw\", false == \"ccw\".\n     */\n    public frontface: boolean;\n\n    /**\n     * The next available texture unit to bind a {@link Texture} to.\n     */\n    public textureUnit: number;\n\n    /**\n     * Statistic that counts how many times ````gl.bindTexture()```` has been called so far within the current frame.\n     */\n    public bindTexture: number;\n\n    /**\n     * Indicates which pass the renderer is currently rendering.\n     */\n    public renderPass: number;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering castsShadows.\n     *\n     * This sets the viewpoint to look from the point of view of each {@link DirLight}\n     * or {@link PointLight} that casts a shadow.\n     */\n    public shadowViewMatrix: any;\n\n    /**\n     * The 4x4 viewing projection matrix the renderer is currently using when rendering shadows.\n     */\n    public shadowProjMatrix: any;\n\n    /**\n     * The 4x4 viewing transform matrix the renderer is currently using when rendering a ray-pick.\n     *\n     * This sets the viewpoint to look along the ray given to {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}}\n     * when picking with a ray.\n     */\n    public pickViewMatrix: any;\n\n    /**\n     * The 4x4 orthographic projection transform matrix the renderer is currently using when rendering a ray-pick.\n     */\n    public pickProjMatrix: any;\n\n    /**\n     * Distance to the near clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZNear: number;\n\n    /**\n     * Distance to the far clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n     */\n    public pickZFar: number;\n\n    /**\n     * Whether or not the renderer is currently picking invisible objects.\n     */\n    public pickInvisible: boolean;\n\n    /** The current line width.\n     */\n    public lineWidth: number;\n\n    /**\n     * ID of the last {@link WebGLProgram} that was bound during the current frame.\n     */\n    public lastProgramId: number;\n\n    /**\n     * The occlusion rendering texture.\n     */\n    public occlusionTexture: Texture|null;\n\n    constructor(viewer: WebViewer, view: View, gl: WebGL2RenderingContext) {\n        this.viewer = viewer;\n        this.view = view;\n        this.gl = gl;\n        this.reset();\n    }\n\n    /**\n     * Called by the renderer before each frame.\n     */\n    reset() {\n        this.lastProgramId = -1;\n        this.pbrEnabled = false;\n        this.withSAO = false;\n        this.backfaces = false;\n        this.frontface = true;\n        this.textureUnit = 0;\n        this.shadowViewMatrix = null;\n        this.shadowProjMatrix = null;\n        this.pickViewMatrix = null;\n        this.pickProjMatrix = null;\n        this.pickZNear = 0.01;\n        this.pickZFar = 5000;\n        this.pickInvisible = false;\n        this.lineWidth = 1;\n        this.occlusionTexture = null;\n    }\n\n    /**\n     * Gets the next available texture unit for this render\n     */\n    get nextTextureUnit() {\n        const textureUnit = this.textureUnit;\n        this.textureUnit = (this.textureUnit + 1) % WEBGL_INFO.MAX_TEXTURE_UNITS;\n        return textureUnit;\n    }\n}\n\nexport {RenderContext};","\nexport function getExtension(gl: WebGL2RenderingContext, name: string) {\n    // @ts-ignore\n    if (gl._cachedExtensions === undefined) {\n        // @ts-ignore\n        gl._cachedExtensions = {};\n    }\n    // @ts-ignore\n    if (gl._cachedExtensions[name] !== undefined) {\n        // @ts-ignore\n        return gl._cachedExtensions[name];\n    }\n    let extension;\n    switch (name) {\n        case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n        case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n        case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n        case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n        default:\n            extension = gl.getExtension(name);\n    }\n    // @ts-ignore\n    gl._cachedExtensions[name] = extension;\n    return extension;\n}","import {constants} from '../../viewer/index';\nimport {getExtension} from \"./getExtension\";\n\nconst {\n    AlphaFormat,\n    ByteType,\n    ClampToEdgeWrapping,\n    DepthFormat,\n    DepthStencilFormat,\n    FloatType,\n    HalfFloatType,\n    IntType,\n    LinearFilter,\n    LinearMipMapLinearFilter,\n    LinearMipMapNearestFilter,\n    LuminanceAlphaFormat,\n    LuminanceFormat,\n    NearestFilter,\n    NearestMipMapLinearFilter,\n    NearestMipMapNearestFilter,\n    RedFormat,\n    RedIntegerFormat,\n    RepeatWrapping,\n    RGB_ETC1_Format,\n    RGB_ETC2_Format,\n    RGB_PVRTC_2BPPV1_Format,\n    RGB_PVRTC_4BPPV1_Format,\n    RGB_S3TC_DXT1_Format,\n    RGBA_ASTC_10x10_Format,\n    RGBA_ASTC_10x5_Format,\n    RGBA_ASTC_10x6_Format,\n    RGBA_ASTC_10x8_Format,\n    RGBA_ASTC_12x10_Format,\n    RGBA_ASTC_12x12_Format,\n    RGBA_ASTC_4x4_Format,\n    RGBA_ASTC_5x4_Format,\n    RGBA_ASTC_5x5_Format,\n    RGBA_ASTC_6x5_Format,\n    RGBA_ASTC_6x6_Format,\n    RGBA_ASTC_8x5_Format,\n    RGBA_ASTC_8x6_Format,\n    RGBA_ASTC_8x8_Format,\n    RGBA_BPTC_Format,\n    RGBA_ETC2_EAC_Format,\n    RGBA_PVRTC_2BPPV1_Format,\n    RGBA_PVRTC_4BPPV1_Format,\n    RGBA_S3TC_DXT1_Format,\n    RGBA_S3TC_DXT3_Format,\n    RGBA_S3TC_DXT5_Format,\n    RGBAFormat,\n    RGBAIntegerFormat,\n    RGBFormat,\n    RGFormat,\n    RGIntegerFormat,\n    ShortType,\n    sRGBEncoding,\n    UnsignedByteType,\n    UnsignedInt248Type,\n    UnsignedIntType,\n    UnsignedShort4444Type,\n    UnsignedShort5551Type,\n    UnsignedShortType\n} = constants;\n\n\nexport function convertConstant(gl: WebGL2RenderingContext, constantVal: number, encoding?: number) {\n\n    let extension;\n    const p = constantVal;\n\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n        return gl.HALF_FLOAT;\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === RedFormat) return gl.RED;\n\n    if (p === RGBFormat) {\n        return gl.RGBA;\n    }\n\n    // WebGL formats.\n\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n    // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        if (encoding === sRGBEncoding) {\n            const extension = getExtension(gl, 'WEBGL_compressed_texture_s3tc_srgb');\n            if (extension !== null) {\n                if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n                if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n            } else {\n                return null;\n            }\n        } else {\n            extension = getExtension(gl, 'WEBGL_compressed_texture_s3tc');\n            if (extension !== null) {\n                if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    // PVRTC\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_pvrtc');\n        if (extension !== null) {\n            if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n            if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n            if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n            if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        } else {\n            return null;\n        }\n    }\n\n    // ETC1\n\n    if (p === RGB_ETC1_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_etc1');\n        if (extension !== null) {\n            return extension.COMPRESSED_RGB_ETC1_WEBGL;\n        } else {\n            return null;\n        }\n    }\n\n    // ETC2\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_etc');\n        if (extension !== null) {\n            if (p === RGB_ETC2_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n            if (p === RGBA_ETC2_EAC_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n        } else {\n            return null;\n        }\n    }\n\n    // ASTC\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n        p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n        p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n        p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n        p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n        const extension = getExtension(gl, 'WEBGL_compressed_texture_astc');\n        if (extension !== null) {\n            if (p === RGBA_ASTC_4x4_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n            if (p === RGBA_ASTC_5x4_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n            if (p === RGBA_ASTC_5x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n            if (p === RGBA_ASTC_6x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n            if (p === RGBA_ASTC_6x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n            if (p === RGBA_ASTC_8x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n            if (p === RGBA_ASTC_8x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n            if (p === RGBA_ASTC_8x8_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n            if (p === RGBA_ASTC_10x5_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n            if (p === RGBA_ASTC_10x6_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n            if (p === RGBA_ASTC_10x8_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n            if (p === RGBA_ASTC_10x10_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n            if (p === RGBA_ASTC_12x10_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n            if (p === RGBA_ASTC_12x12_Format) return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n        } else {\n            return null;\n        }\n    }\n\n    // BPTC\n\n    if (p === RGBA_BPTC_Format) {\n        const extension = getExtension(gl, 'EXT_texture_compression_bptc');\n        if (extension !== null) {\n            if (p === RGBA_BPTC_Format) {\n                return (encoding === sRGBEncoding) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    //\n\n    if (p === UnsignedInt248Type) {\n        return gl.UNSIGNED_INT_24_8;\n    }\n    if (p === RepeatWrapping) {\n        return gl.REPEAT;\n    }\n    if (p === ClampToEdgeWrapping) {\n        return gl.CLAMP_TO_EDGE;\n    }\n    if (p === NearestMipMapNearestFilter) {\n        return gl.NEAREST_MIPMAP_LINEAR;\n    }\n    if (p === NearestMipMapLinearFilter) {\n        return gl.NEAREST_MIPMAP_LINEAR;\n    }\n    if (p === LinearMipMapNearestFilter) {\n        return gl.LINEAR_MIPMAP_NEAREST;\n    }\n    if (p === LinearMipMapLinearFilter) {\n        return gl.LINEAR_MIPMAP_LINEAR;\n    }\n    if (p === NearestFilter) {\n        return gl.NEAREST;\n    }\n    if (p === LinearFilter) {\n        return gl.LINEAR;\n    }\n\n    return null;\n}\n\n","import type * as math from \"../../viewer/math/index\";\nimport * as utils from \"../../viewer/utils/index\";\n\nimport {convertConstant} from \"./convertConstant\";\nimport {\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    RepeatWrapping,\n    RGBAFormat,\n    sRGBEncoding,\n    UnsignedByteType\n} from \"../../viewer/constants\";\nimport {getExtension} from \"./getExtension\";\nimport type {CompressedTextureParams} from \"../../viewer/index\";\nimport type {Texture} from \"./Texture\";\n\nconst color = new Uint8Array([0, 0, 0, 1]);\n\nexport class Texture2D implements Texture {\n\n    private gl: WebGL2RenderingContext;\n    private target: number;\n    private format: number;\n    private type: number;\n    private internalFormat: number;\n    private premultiplyAlpha: boolean;\n    private flipY: boolean;\n    private unpackAlignment: number;\n    private wrapS: number;\n    private wrapT: number;\n    private wrapR: number;\n    private texture: WebGLTexture;\n    private allocated: boolean;\n    private minFilter: number;\n    private magFilter: number;\n    private encoding: number;\n\n    constructor(params: {\n        gl: WebGL2RenderingContext,\n        target?: number,\n        format?: number,\n        type?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number,\n        preloadColor?: math.FloatArrayParam,\n        premultiplyAlpha?: boolean,\n        flipY?: boolean\n    }) {\n\n        this.gl = params.gl;\n\n        this.target = params.target || params.gl.TEXTURE_2D;\n        this.format = params.format || RGBAFormat;\n        this.type = params.type || UnsignedByteType;\n        this.internalFormat = -1;\n        this.premultiplyAlpha = !!params.premultiplyAlpha;\n        this.flipY = !!params.flipY;\n        this.unpackAlignment = 4;\n        this.wrapS = params.wrapS || RepeatWrapping;\n        this.wrapT = params.wrapT || RepeatWrapping;\n        this.wrapR = params.wrapR || RepeatWrapping;\n\n        // @ts-ignore\n        this.texture = params.gl.createTexture();\n\n        if (params.preloadColor) {\n            this.setPreloadColor(params.preloadColor); // Prevents \"there is no texture bound to the unit 0\" error\n        }\n\n        this.allocated = true;\n    }\n\n    setPreloadColor(value: math.FloatArrayParam) {\n        if (!value) {\n            color[0] = 0;\n            color[1] = 0;\n            color[2] = 0;\n            color[3] = 255;\n        } else {\n            color[0] = Math.floor(value[0] * 255);\n            color[1] = Math.floor(value[1] * 255);\n            color[2] = Math.floor(value[2] * 255);\n            color[3] = Math.floor((value[3] !== undefined ? value[3] : 1) * 255);\n        }\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n            const faces = [\n                gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n            ];\n            for (let i = 0, len = faces.length; i < len; i++) {\n                gl.texImage2D(faces[i], 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n            }\n        } else {\n            gl.texImage2D(this.target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n        }\n        gl.bindTexture(this.target, null);\n    }\n\n    setTarget(target: number) {\n        this.target = target || this.gl.TEXTURE_2D;\n    }\n\n    setImage(image: HTMLImageElement, props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment?: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }={}) {\n\n        const gl = this.gl;\n\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.flipY !== undefined) {\n            this.flipY = props.flipY;\n        }\n        if (props.premultiplyAlpha !== undefined) {\n            this.premultiplyAlpha = props.premultiplyAlpha;\n        }\n        if (props.unpackAlignment !== undefined) {\n            this.unpackAlignment = props.unpackAlignment;\n        }\n        if (props.minFilter !== undefined) {\n            this.minFilter = props.minFilter;\n        }\n        if (props.magFilter !== undefined) {\n            this.magFilter = props.magFilter;\n        }\n        if (props.wrapS !== undefined) {\n            this.wrapS = props.wrapS;\n        }\n        if (props.wrapT !== undefined) {\n            this.wrapT = props.wrapT;\n        }\n        if (props.wrapR !== undefined) {\n            this.wrapR = props.wrapR;\n        }\n\n        let generateMipMap = false;\n\n        gl.bindTexture(this.target, this.texture);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        const minFilter = convertConstant(gl, this.minFilter);\n        gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);\n\n        if (minFilter === gl.NEAREST_MIPMAP_NEAREST\n            || minFilter === gl.LINEAR_MIPMAP_NEAREST\n            || minFilter === gl.NEAREST_MIPMAP_LINEAR\n            || minFilter === gl.LINEAR_MIPMAP_LINEAR) {\n            generateMipMap = true;\n        }\n\n        const magFilter = convertConstant(gl, this.magFilter);\n        if (magFilter) {\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);\n        }\n\n        const wrapS = convertConstant(gl, this.wrapS);\n        if (wrapS) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n        }\n\n        const wrapT = convertConstant(gl, this.wrapT);\n        if (wrapT) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n        }\n\n        const glFormat = convertConstant(gl, this.format, this.encoding);\n        const glType = convertConstant(gl, this.type);\n        const glInternalFormat = getInternalFormat(gl, this.internalFormat, glFormat, glType, this.encoding, false);\n\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n            if (utils.isArray(image)) {\n                const images = image;\n                const faces = [\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n                ];\n                for (let i = 0, len = faces.length; i < len; i++) {\n                    // @ts-ignore\n                    gl.texImage2D(faces[i], 0, glInternalFormat, glFormat, glType, images[i]);\n                }\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n        }\n\n        // if (generateMipMap) {\n        //     gl.generateMipmap(this.target);\n        // }\n\n        gl.bindTexture(this.target, null);\n    }\n\n    setCompressedData(params: CompressedTextureParams) {\n\n        const gl = this.gl;\n        const mipmaps = params.mipmaps || [];\n        const levels = mipmaps.length;\n        const props = params.props;\n\n        // Cache props\n\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.flipY !== undefined) {\n            this.flipY = props.flipY;\n        }\n        if (props.premultiplyAlpha !== undefined) {\n            this.premultiplyAlpha = props.premultiplyAlpha;\n        }\n        if (props.unpackAlignment !== undefined) {\n            this.unpackAlignment = props.unpackAlignment;\n        }\n        if (props.minFilter !== undefined) {\n            this.minFilter = props.minFilter;\n        }\n        if (props.magFilter !== undefined) {\n            this.magFilter = props.magFilter;\n        }\n        if (props.wrapS !== undefined) {\n            this.wrapS = props.wrapS;\n        }\n        if (props.wrapT !== undefined) {\n            this.wrapT = props.wrapT;\n        }\n        if (props.wrapR !== undefined) {\n            this.wrapR = props.wrapR;\n        }\n\n        gl.activeTexture(gl.TEXTURE0 + 0);\n        gl.bindTexture(this.target, this.texture);\n\n        let supportsMips = mipmaps.length > 1;\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        const wrapS = convertConstant(gl, this.wrapS);\n        if (wrapS) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n        }\n\n        const wrapT = convertConstant(gl, this.wrapT);\n        if (wrapT) {\n            gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n        }\n\n        // @ts-ignore\n        if (this.type === gl.TEXTURE_3D || this.type === gl.TEXTURE_2D_ARRAY) {\n            const wrapR = convertConstant(gl, this.wrapR);\n            if (wrapR) {\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_R, wrapR);\n            }\n            gl.texParameteri(this.type, gl.TEXTURE_WRAP_R, wrapR);\n        }\n\n        if (supportsMips) {\n            gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, filterFallback(gl, this.minFilter));\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, filterFallback(gl, this.magFilter));\n\n        } else {\n            gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, convertConstant(gl, this.minFilter));\n            gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, convertConstant(gl, this.magFilter));\n        }\n\n        const glFormat = convertConstant(gl, this.format, this.encoding);\n        const glType = convertConstant(gl, this.type);\n        const glInternalFormat = getInternalFormat(gl, this.internalFormat, glFormat, glType, this.encoding, false);\n\n        gl.texStorage2D(gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n\n        for (let i = 0, len = mipmaps.length; i < len; i++) {\n\n            const mipmap = mipmaps[i];\n\n            if (this.format !== RGBAFormat) {\n                if (glFormat !== null) {\n                    gl.compressedTexSubImage2D(gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n                } else {\n                    console.warn('Attempt to load unsupported compressed texture format in .setCompressedData()');\n                }\n            } else {\n                gl.texSubImage2D(gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n            }\n        }\n\n        gl.bindTexture(this.target, null);\n    }\n\n    setProps(props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }) {\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        this._uploadProps(props);\n        gl.bindTexture(this.target, null);\n    }\n\n    _uploadProps(props: {\n        format?: number,\n        internalFormat?: number,\n        encoding?: number,\n        type?: number,\n        flipY?: boolean,\n        premultiplyAlpha?: boolean,\n        unpackAlignment: number,\n        minFilter?: number,\n        magFilter?: number,\n        wrapS?: number,\n        wrapT?: number,\n        wrapR?: number\n    }) {\n        const gl = this.gl;\n        if (props.format !== undefined) {\n            this.format = props.format;\n        }\n        if (props.internalFormat !== undefined) {\n            this.internalFormat = props.internalFormat;\n        }\n        if (props.encoding !== undefined) {\n            this.encoding = props.encoding;\n        }\n        if (props.type !== undefined) {\n            this.type = props.type;\n        }\n        if (props.minFilter !== undefined) {\n            const minFilter = convertConstant(gl, props.minFilter);\n            if (minFilter) {\n                this.minFilter = props.minFilter;\n                gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);\n                if (minFilter === gl.NEAREST_MIPMAP_NEAREST || minFilter === gl.LINEAR_MIPMAP_NEAREST || minFilter === gl.NEAREST_MIPMAP_LINEAR || minFilter === gl.LINEAR_MIPMAP_LINEAR) {\n                    gl.generateMipmap(this.target);\n                }\n            }\n        }\n        if (props.magFilter !== undefined) {\n            const magFilter = convertConstant(gl, props.magFilter);\n            if (magFilter) {\n                this.magFilter = props.magFilter;\n                gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);\n            }\n        }\n        if (props.wrapS !== undefined) {\n            const wrapS = convertConstant(gl, props.wrapS);\n            if (wrapS) {\n                this.wrapS = props.wrapS;\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n            }\n        }\n        if (props.wrapT !== undefined) {\n            const wrapT = convertConstant(gl, props.wrapT);\n            if (wrapT) {\n                this.wrapT = props.wrapT;\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n            }\n        }\n    }\n\n    bind(unit: number) :boolean{\n        if (!this.allocated) {\n            return false;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            // @ts-ignore\n            gl.activeTexture(gl[`TEXTURE${unit}`]);\n            gl.bindTexture(this.target, this.texture);\n            return true;\n        }\n        return false;\n    }\n\n    unbind(unit: number) {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            // @ts-ignore\n            gl.activeTexture(gl[`TEXTURE${unit}`]);\n            gl.bindTexture(this.target, null);\n        }\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            // @ts-ignore\n            this.texture = null;\n        }\n    }\n}\n\nfunction getInternalFormat(\n    gl: WebGL2RenderingContext,\n    internalFormatName: string | number,\n    glFormat: any,\n    glType: any,\n    encoding: number,\n    isVideoTexture = false): number {\n    if (internalFormatName !== null) {\n        // @ts-ignore\n        if (gl[internalFormatName] !== undefined) {\n            // @ts-ignore\n            return gl[internalFormatName];\n        }\n        console.warn('Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n    }\n    let internalFormat = glFormat;\n    if (glFormat === gl.RED) {\n        if (glType === gl.FLOAT) internalFormat = gl.R32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.R16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = gl.R8;\n    }\n    if (glFormat === gl.RG) {\n        if (glType === gl.FLOAT) internalFormat = gl.RG32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.RG16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = gl.RG8;\n    }\n    if (glFormat === gl.RGBA) {\n        if (glType === gl.FLOAT) internalFormat = gl.RGBA32F;\n        if (glType === gl.HALF_FLOAT) internalFormat = gl.RGBA16F;\n        if (glType === gl.UNSIGNED_BYTE) internalFormat = (encoding === sRGBEncoding && isVideoTexture === false) ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n        if (glType === gl.UNSIGNED_SHORT_4_4_4_4) internalFormat = gl.RGBA4;\n        if (glType === gl.UNSIGNED_SHORT_5_5_5_1) internalFormat = gl.RGB5_A1;\n    }\n    if (internalFormat === gl.R16F || internalFormat === gl.R32F ||\n        internalFormat === gl.RG16F || internalFormat === gl.RG32F ||\n        internalFormat === gl.RGBA16F || internalFormat === gl.RGBA32F) {\n        getExtension(gl, 'EXT_color_buffer_float');\n    }\n    return internalFormat;\n}\n\nfunction filterFallback(gl: WebGL2RenderingContext, f: number): number {\n    if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n        return gl.NEAREST;\n    }\n    return gl.LINEAR;\n\n}","/**\n * Bundled by jsDelivr using Rollup v2.59.0 and Terser v5.9.0.\n * Original file: /npm/@petamoriken/float16@3.5.11/src/index.mjs\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\nfunction t(t: Function) {\n    // @ts-ignore\n    return (r: any, ...e: ArrayLike<any>) => n(t, r, e)\n}\n\nfunction r(r: object, n: PropertyKey) {\n    // @ts-ignore\n    return t(s(r, n).get)\n}\n\n// @ts-ignore\n// @ts-ignore\nconst {\n        apply: n,\n        construct: e,\n        defineProperty: o,\n        get: i,\n        getOwnPropertyDescriptor: s,\n        getPrototypeOf: c,\n        has: u,\n        ownKeys: f,\n        set: h,\n        setPrototypeOf: l\n    } = Reflect, a = Proxy, y = Number,\n    {\n        isFinite: p,\n        isNaN: w\n    } = y,\n    {\n        iterator: g,\n        species: d,\n        toStringTag: v,\n        for: b\n    } = Symbol, A = Object,\n    {\n        create: m,\n        defineProperty: B,\n        freeze: x,\n        is: E\n        // @ts-ignore\n    } = A, T = A.prototype, O = t(T.isPrototypeOf), j = A.hasOwn || t(T.hasOwnProperty), I = Array, P = I.isArray,\n    // @ts-ignore\n    S = I.prototype, _ = t(S.join), F = t(S.push), L = t(S.toLocaleString), R = S[g], C = t(R), N = Math.trunc,\n    U = ArrayBuffer, M = U.isView, D = t(U.prototype.slice), k = r(U.prototype, \"byteLength\"),\n    W = \"undefined\" != typeof SharedArrayBuffer ? SharedArrayBuffer : null, V = W && r(W.prototype, \"byteLength\"),\n    // @ts-ignore\n    Y = c(Uint8Array), z = Y.from, G = Y.prototype, K = G[g], X = t(G.keys), q = t(G.values), H = t(G.entries),\n    J = t(G.set), Q = t(G.reverse), Z = t(G.fill), $ = t(G.copyWithin), tt = t(G.sort), rt = t(G.slice),\n    nt = t(G.subarray), et = r(G, \"buffer\"), ot = r(G, \"byteOffset\"), it = r(G, \"length\"), st = r(G, v),\n    // @ts-ignore\n    ct = Uint16Array, ut = (...t) => n(z, ct, t), ft = Uint32Array, ht = Float32Array, lt = c([][g]()), at = t(lt.next),\n    yt = t(function* () {\n        // @ts-ignore\n    }().next), pt = c(lt), wt = DataView.prototype, gt = t(wt.getUint16), dt = t(wt.setUint16), vt = TypeError,\n    bt = RangeError, At = Set, mt = At.prototype, Bt = t(mt.add), xt = t(mt.has), Et = WeakMap, Tt = Et.prototype,\n    Ot = t(Tt.get), jt = t(Tt.has), It = t(Tt.set), Pt = new U(4), St = new ht(Pt), _t = new ft(Pt), Ft = new ft(512),\n    Lt = new ft(512);\nfor (let t = 0; t < 256; ++t) {\n    const r = t - 127;\n    r < -27 ? (Ft[t] = 0, Ft[256 | t] = 32768, Lt[t] = 24, Lt[256 | t] = 24) : r < -14 ? (Ft[t] = 1024 >> -r - 14, Ft[256 | t] = 1024 >> -r - 14 | 32768, Lt[t] = -r - 1, Lt[256 | t] = -r - 1) : r <= 15 ? (Ft[t] = r + 15 << 10, Ft[256 | t] = r + 15 << 10 | 32768, Lt[t] = 13, Lt[256 | t] = 13) : r < 128 ? (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 24, Lt[256 | t] = 24) : (Ft[t] = 31744, Ft[256 | t] = 64512, Lt[t] = 13, Lt[256 | t] = 13)\n}\n\nfunction Rt(t: number) {\n    St[0] = t;\n    const r = _t[0],\n        n = r >> 23 & 511;\n    return Ft[n] + ((8388607 & r) >> Lt[n])\n}\n\nconst Ct = new ft(2048),\n    Nt = new ft(64),\n    Ut = new ft(64);\nCt[0] = 0;\nfor (let t = 1; t < 1024; ++t) {\n    let r = t << 13,\n        n = 0;\n    for (; 0 == (8388608 & r);) n -= 8388608, r <<= 1;\n    r &= -8388609, n += 947912704, Ct[t] = r | n\n}\nfor (let t = 1024; t < 2048; ++t) Ct[t] = 939524096 + (t - 1024 << 13);\nNt[0] = 0;\nfor (let t = 1; t < 31; ++t) Nt[t] = t << 23;\nNt[31] = 1199570944, Nt[32] = 2147483648;\nfor (let t = 33; t < 63; ++t) Nt[t] = 2147483648 + (t - 32 << 23);\nNt[63] = 3347054592, Ut[0] = 0;\nfor (let t = 1; t < 64; ++t) Ut[t] = 32 === t ? 0 : 1024;\n\nfunction Mt(t: number) {\n    const r = t >> 10;\n    return _t[0] = Ct[Ut[r] + (1023 & t)] + Nt[r], St[0]\n}\n\nfunction Dt(t: unknown) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    if (t = y(t), !p(t) || 0 === t) return t;\n    // @ts-ignore\n    return Mt(Rt(t))\n}\n\nfunction kt(t: any[]) {\n    // @ts-ignore\n    if (t[g] === R) return t;\n    const r = C(t);\n    return m(null,\n        {\n            next:\n                {\n                    value: function () {\n                        return at(r)\n                    }\n                },\n            [g]:\n                {\n                    value: function () {\n                        return this\n                    }\n                }\n        })\n}\n\nconst Wt = new Et,\n    Vt = m(pt,\n        {\n            next:\n                {\n                    value: function () {\n                        const t = Ot(Wt, this);\n                        return yt(t)\n                    },\n                    writable: !0,\n                    configurable: !0\n                },\n            [v]:\n                {\n                    value: \"Array Iterator\",\n                    configurable: !0\n                }\n        });\n\nfunction Yt(t:any) {\n    const r = m(Vt);\n    return It(Wt, r, t), r\n}\n\nfunction zt(t:any) {\n    return null !== t && \"object\" == typeof t || \"function\" == typeof t\n}\n\nfunction Gt(t:any) {\n    return null !== t && \"object\" == typeof t\n}\n\nfunction Kt(t:any) {\n    return void 0 !== st(t)\n}\n\nfunction Xt(t:any) {\n    const r = st(t);\n    return \"BigInt64Array\" === r || \"BigUint64Array\" === r\n}\n\nfunction qt(t:any) {\n    if (null === W) return !1;\n    try {\n        // @ts-ignore\n        return V(t), !0\n    } catch (t:any) {\n        return !1\n    }\n}\n\nfunction Ht(t:any) {\n    if (!P(t)) return !1;\n    // @ts-ignore\n    if (t[g] === R) return !0;\n    // @ts-ignore\n    return \"Array Iterator\" === t[g]()[v]\n}\n\nfunction Jt(t:any) {\n    if (\"string\" != typeof t) return !1;\n    const r = y(t);\n    return t === r + \"\" && (!!p(r) && r === N(r))\n}\n\nconst Qt = y.MAX_SAFE_INTEGER;\n\nfunction Zt(t:any) {\n    if (\"bigint\" == typeof t) throw vt(\"Cannot convert a BigInt value to a number\");\n    const r = y(t);\n    return w(r) || 0 === r ? 0 : N(r)\n}\n\nfunction $t(t:any) {\n    const r = Zt(t);\n    return r < 0 ? 0 : r < Qt ? r : Qt\n}\n\nfunction tr(t: { constructor: any; }, r: ArrayBufferConstructor) {\n    if (!zt(t)) throw vt(\"This is not an object\");\n    const n = t.constructor;\n    if (void 0 === n) return r;\n    if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n    const e = n[d];\n    return null == e ? r : e\n}\n\nfunction rr(t:any) {\n    if (qt(t)) return !1;\n    try {\n        return D(t, 0, 0), !1\n    } catch (t:any) {\n    }\n    return !0\n}\n\nfunction nr(t: unknown, r: unknown) {\n    const n = w(t),\n        e = w(r);\n    if (n && e) return 0;\n    if (n) return 1;\n    if (e) return -1;\n    // @ts-ignore\n    if (t < r) return -1;\n    // @ts-ignore\n    if (t > r) return 1;\n    if (0 === t && 0 === r) {\n        const n = E(t, 0),\n            e = E(r, 0);\n        if (!n && e) return -1;\n        if (n && !e) return 1\n    }\n    return 0\n}\n\nconst er = b(\"__Float16Array__\"),\n    or = new Et;\n\nfunction ir(t:any) {\n    return jt(or, t) || !M(t) && function (t:any) {\n        if (!Gt(t)) return !1;\n        const r = c(t);\n        if (!Gt(r)) return !1;\n        // @ts-ignore\n        const n = r.constructor;\n        if (void 0 === n) return !1;\n        if (!zt(n)) throw vt(\"The constructor property value is not an object\");\n        return u(n, er)\n    }(t)\n}\n\nfunction sr(t:any) {\n    if (!ir(t)) throw vt(\"This is not a Float16Array object\")\n}\n\nfunction cr(t: any, r: number) {\n    const n = ir(t),\n        e = Kt(t);\n    if (!n && !e) throw vt(\"Species constructor didn't return TypedArray object\");\n    if (\"number\" == typeof r) {\n        let e;\n        if (n) {\n            const r = ur(t);\n            e = it(r)\n        } else e = it(t);\n        if (e < r) throw vt(\"Derived constructor created TypedArray object which was too small length\")\n    }\n    if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\")\n}\n\nfunction ur(t:any) {\n    const r = Ot(or, t);\n    if (void 0 !== r) {\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        return r\n    }\n    const n = t.buffer;\n    if (rr(n)) throw vt(\"Attempting to access detached ArrayBuffer\");\n    const o = e(ar, [n, t.byteOffset, t.length], t.constructor);\n    return Ot(or, o)\n}\n\nfunction fr(t:any) {\n    const r = it(t),\n        n = [];\n    for (let e = 0; e < r; ++e) n[e] = Mt(t[e]);\n    return n\n}\n\nconst hr = new At;\nfor (const t of f(G)) {\n    if (t === v) continue;\n    const r = s(G, t);\n    j(r, \"get\") && Bt(hr, t)\n}\nconst lr = x(\n    {\n        get: (t: object, r: PropertyKey, n: any) => Jt(r) && j(t, r) ? Mt(i(t, r)) : xt(hr, r) && O(G, t) ? i(t, r) : i(t, r, n),\n        set: (t: object, r: PropertyKey, n: number, e: any) => Jt(r) && j(t, r) ? h(t, r, Rt(n)) : h(t, r, n, e),\n        getOwnPropertyDescriptor(t: object, r: PropertyKey) {\n            if (Jt(r) && j(t, r)) {\n                const n = s(t, r);\n                // @ts-ignore\n                return n.value = Mt(n.value), n\n            }\n            return s(t, r)\n        },\n        defineProperty: (t: object, r: PropertyKey, n: PropertyDescriptor & ThisType<any>) => Jt(r) && j(t, r) && j(n, \"value\") ? (n.value = Rt(n.value), o(t, r, n)) : o(t, r, n)\n    });\n\nclass ar {\n    constructor(t: string | number | any[], r: undefined, n: undefined) {\n        let o;\n        if (ir(t)) o = e(ct, [ur(t)], new.target);\n        else if (zt(t) && !function (t:any) {\n            try {\n                return k(t), !0\n            } catch (t) {\n                return !1\n            }\n        }(t)) {\n            let r, n;\n            if (Kt(t)) {\n                r = t, n = it(t);\n                const i = et(t),\n                    s = qt(i) ? U : tr(i, U);\n                if (rr(i)) throw vt(\"Attempting to access detached ArrayBuffer\");\n                if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n                const c = new s(2 * n);\n                o = e(ct, [c], new.target)\n            } else {\n                // @ts-ignore\n                const i = t[g];\n                if (null != i && \"function\" != typeof i) throw vt(\"@@iterator property is not callable\");\n                // @ts-ignore\n                null != i ? Ht(t) ? (r = t, n = t.length) : (r = [...t], n = r.length) : (r = t, n = $t(r.length)), o = e(ct, [n], new.target)\n            }\n            for (let t = 0; t < n; ++t) { // @ts-ignore\n                o[t] = Rt(r[t])\n            }\n        } else o = e(ct, arguments, new.target);\n        const i = new a(o, lr);\n        return It(or, i, o), i\n    }\n\n    static from(t: string | any[], ...r: any[]) {\n        const e = this;\n        if (!u(e, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        if (e === ar) {\n            if (ir(t) && 0 === r.length) {\n                const r = ur(t),\n                    n = new ct(et(r), ot(r), it(r));\n                // @ts-ignore\n                return new ar(et(rt(n)))\n            }\n            // @ts-ignore\n            if (0 === r.length) return new ar(et(ut(t, Rt)));\n            const e = r[0],\n                o = r[1];\n            // @ts-ignore\n            return new ar(et(ut(t, ((t, ...r) => {\n                return Rt(n(e, this, [t, ...kt(r)]))\n            }), o)))\n        }\n        let o, i;\n        // @ts-ignore\n        const s = t[g];\n        if (null != s && \"function\" != typeof s) throw vt(\"@@iterator property is not callable\");\n        // @ts-ignore\n        if (null != s) Ht(t) ? (o = t, i = t.length) : !Kt(c = t) || c[g] !== K && \"Array Iterator\" !== c[g]()[v] ? (o = [...t], i = o.length) : (o = t, i = it(t));\n        else {\n            if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n            o = A(t), i = $t(o.length)\n        }\n        var c;\n        // @ts-ignore\n        const f = new e(i);\n        if (0 === r.length)\n            // @ts-ignore\n            for (let t = 0; t < i; ++t) f[t] = o[t];\n        else {\n            const t = r[0],\n                e = r[1];\n            // @ts-ignore\n            for (let r = 0; r < i; ++r) f[r] = n(t, e, [o[r], r])\n        }\n        return f\n    }\n\n    static of(...t:any) {\n        const r = this;\n        if (!u(r, er)) throw vt(\"This constructor is not a subclass of Float16Array\");\n        const n = t.length;\n        if (r === ar) {\n            // @ts-ignore\n            const r = new ar(n),\n                e = ur(r);\n            for (let r = 0; r < n; ++r) e[r] = Rt(t[r]);\n            return r\n        }\n        // @ts-ignore\n        const e = new r(n);\n        // @ts-ignore\n        for (let r = 0; r < n; ++r) e[r] = t[r];\n        return e\n    }\n\n    keys() {\n        sr(this);\n        const t = ur(this);\n        return X(t)\n    }\n\n    values() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const r of q(t)) yield Mt(r)\n        }())\n    }\n\n    entries() {\n        sr(this);\n        const t = ur(this);\n        return Yt(function* () {\n            for (const [r, n] of H(t)) yield [r, Mt(n)]\n        }())\n    }\n\n    at(t:any) {\n        sr(this);\n        const r = ur(this),\n            n = it(r),\n            e = Zt(t),\n            o = e >= 0 ? e : n + e;\n        if (!(o < 0 || o >= n)) return Mt(r[o])\n    }\n\n    map(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = tr(e, ar);\n        if (s === ar) {\n            // @ts-ignore\n            const r = new ar(o),\n                s = ur(r);\n            for (let r = 0; r < o; ++r) {\n                const o = Mt(e[r]);\n                s[r] = Rt(n(t, i, [o, r, this]))\n            }\n            return r\n        }\n        const c = new s(o);\n        cr(c, o);\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            c[r] = n(t, i, [o, r, this])\n        }\n        return c\n    }\n\n    filter(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0],\n            // @ts-ignore\n            s = [];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            // @ts-ignore\n            n(t, i, [o, r, this]) && F(s, o)\n        }\n        // @ts-ignore\n        const c = new (tr(e, ar))(s);\n        // @ts-ignore\n        return cr(c), c\n    }\n\n    reduce(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[0]), i = 1) : (o = r[0], i = 0);\n        for (let r = i; r < e; ++r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    reduceRight(t: (arg0: any, arg1: number, arg2: number, arg3: this) => any, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        if (0 === e && 0 === r.length) throw vt(\"Reduce of empty array with no initial value\");\n        let o, i;\n        0 === r.length ? (o = Mt(n[e - 1]), i = e - 2) : (o = r[0], i = e - 1);\n        for (let r = i; r >= 0; --r) o = t(o, Mt(n[r]), r, this);\n        return o\n    }\n\n    forEach(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) n(t, i, [Mt(e[r]), r, this])\n    }\n\n    find(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    findLast(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return o\n        }\n    }\n\n    findLastIndex(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = o - 1; r >= 0; --r) {\n            const o = Mt(e[r]);\n            if (n(t, i, [o, r, this])) return r\n        }\n        return -1\n    }\n\n    every(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (!n(t, i, [Mt(e[r]), r, this])) return !1;\n        return !0\n    }\n\n    some(t: Function, ...r: any[]) {\n        sr(this);\n        const e = ur(this),\n            o = it(e),\n            i = r[0];\n        for (let r = 0; r < o; ++r)\n            if (n(t, i, [Mt(e[r]), r, this])) return !0;\n        return !1\n    }\n\n    set(t: number, ...r: number[]) {\n        sr(this);\n        const n = ur(this),\n            e = Zt(r[0]);\n        if (e < 0) throw bt(\"Offset is out of bounds\");\n        if (null == t) throw vt(\"Cannot convert undefined or null to object\");\n        if (Xt(t)) throw vt(\"Cannot mix BigInt and other types, use explicit conversions\");\n        if (ir(t)) return J(ur(this), ur(t), e);\n        if (Kt(t)) {\n            if (rr(et(t))) throw vt(\"Attempting to access detached ArrayBuffer\")\n        }\n        const o = it(n),\n            i = A(t),\n            s = $t(i.length);\n        if (e === 1 / 0 || s + e > o) throw bt(\"Offset is out of bounds\");\n        for (let t = 0; t < s; ++t) n[t + e] = Rt(i[t])\n    }\n\n    reverse() {\n        sr(this);\n        const t = ur(this);\n        return Q(t), this\n    }\n\n    fill(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this);\n        return Z(n, Rt(t), ...kt(r)), this\n    }\n\n    copyWithin(t: any, r: any, ...n: any[]) {\n        sr(this);\n        const e = ur(this);\n        return $(e, t, r, ...kt(n)), this\n    }\n\n    sort(...t:any) {\n        sr(this);\n        const r = ur(this),\n            n = void 0 !== t[0] ? t[0] : nr;\n        // @ts-ignore\n        return tt(r, ((t, r) => n(Mt(t), Mt(r)))), this\n    }\n\n    slice(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar);\n        if (n === ar) {\n            const n = new ct(et(r), ot(r), it(r));\n            // @ts-ignore\n            return new ar(et(rt(n, ...kt(t))))\n        }\n        const e = it(r),\n            o = Zt(t[0]),\n            i = void 0 === t[1] ? e : Zt(t[1]);\n        let s, c;\n        s = o === -1 / 0 ? 0 : o < 0 ? e + o > 0 ? e + o : 0 : e < o ? e : o, c = i === -1 / 0 ? 0 : i < 0 ? e + i > 0 ? e + i : 0 : e < i ? e : i;\n        const u = c - s > 0 ? c - s : 0,\n            f = new n(u);\n        if (cr(f, u), 0 === u) return f;\n        if (rr(et(r))) throw vt(\"Attempting to access detached ArrayBuffer\");\n        let h = 0;\n        for (; s < c;) f[h] = Mt(r[s]), ++s, ++h;\n        return f\n    }\n\n    subarray(...t:any) {\n        sr(this);\n        const r = ur(this),\n            // @ts-ignore\n            n = tr(r, ar),\n            e = new ct(et(r), ot(r), it(r)),\n            o = nt(e, ...kt(t)),\n            i = new n(et(o), ot(o), it(o));\n        // @ts-ignore\n        return cr(i), i\n    }\n\n    indexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return -1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        for (let r = o; r < e; ++r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n        lastIndexOf(t: number, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = r.length >= 1 ? Zt(r[0]) : e - 1;\n        if (o === -1 / 0) return -1;\n        o >= 0 ? o = o < e - 1 ? o : e - 1 : o += e;\n        for (let r = o; r >= 0; --r)\n            if (j(n, r) && Mt(n[r]) === t) return r;\n        return -1\n    }\n\n    includes(t: unknown, ...r: any[]) {\n        sr(this);\n        const n = ur(this),\n            e = it(n);\n        let o = Zt(r[0]);\n        if (o === 1 / 0) return !1;\n        o < 0 && (o += e, o < 0 && (o = 0));\n        const i = w(t);\n        for (let r = o; r < e; ++r) {\n            const e = Mt(n[r]);\n            if (i && w(e)) return !0;\n            if (e === t) return !0\n        }\n        return !1\n    }\n\n    join(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return _(r, ...kt(t))\n    }\n\n    toLocaleString(...t:any) {\n        sr(this);\n        const r = fr(ur(this));\n        return L(r, ...kt(t))\n    }\n\n    get [v]() {\n        if (ir(this)) return \"Float16Array\"\n    }\n}\n\nB(ar, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(ar, er,\n    {}), l(ar, Y);\nconst yr = ar.prototype;\n\nfunction pr(t: any, r: any, ...n: any[]) {\n    return Mt(gt(t, r, ...kt(n)))\n}\n\nfunction wr(t: any, r: any, n: number, ...e: any[]) {\n    return dt(t, r, Rt(n), ...kt(e))\n}\n\nB(yr, \"BYTES_PER_ELEMENT\",\n    {\n        value: 2\n    }), B(yr, g,\n    {\n        value: yr.values,\n        writable: !0,\n        configurable: !0\n    }), l(yr, G);\nexport\n{\n    ar as Float16Array, pr as getFloat16, Dt as hfround, ir as isFloat16Array, wr as setFloat16\n};","import type {DataTexture} from \"../lib/DataTexture\";\n\nexport class DataTextureSet {\n\n    positions: DataTexture | null; // All quantized positions for a Layer\n    indices_8Bits: DataTexture | null; // All 8-bit indices\n    indices_16Bits: DataTexture | null; // All 16-bit indices\n    indices_32Bits: DataTexture | null; // All 32-bt indices\n    edgeIndices_8Bits: DataTexture | null; // All 8-bit edge indices\n    edgeIndices_16Bits: DataTexture | null; // All 16-bit edges indices\n    edgeIndices_32Bits: DataTexture | null; // All 32-bit edges indices\n    indices: { [key: number]: DataTexture | null }; // All 8, 16, and 32-bit indices\n    edgeIndices: { [key: number]: DataTexture | null } | null; // All 8, 16 and 32-bit indices\n    eachMeshAttributes: DataTexture | null; // For each mesh, a set of attributes including color, opacity, visibility etc\n    eachMeshMatrices: DataTexture | null; // For each mesh, a positions decompression matrix and a modeling matrix\n    eachEdgeOffset: DataTexture | null;\n    eachPrimitiveMesh_8Bits: DataTexture | null;\n    eachPrimitiveMesh_16Bits: DataTexture | null;\n    eachPrimitiveMesh_32Bits: DataTexture | null;\n    eachPrimitiveMesh: { [key: number]: DataTexture | null } | null;\n    eachEdgeMesh_8Bits: DataTexture | null;\n    eachEdgeMesh_16Bits: DataTexture | null;\n    eachEdgeMesh_32Bits: DataTexture | null;\n    eachEdgeMesh: { [key: number]: DataTexture | null } | null;\n    #built: boolean;\n\n    constructor() {\n        this.positions = null;\n        this.indices_8Bits = null;\n        this.indices_16Bits = null;\n        this.indices_32Bits = null;\n        this.edgeIndices_8Bits = null;\n        this.edgeIndices_16Bits = null;\n        this.edgeIndices_32Bits = null;\n        this.eachMeshAttributes = null;\n        this.eachMeshMatrices = null;\n        this.eachPrimitiveMesh_8Bits = null;\n        this.eachPrimitiveMesh_16Bits = null;\n        this.eachPrimitiveMesh_32Bits = null;\n        this.eachEdgeMesh_8Bits = null;\n        this.eachEdgeMesh_16Bits = null;\n        this.eachEdgeMesh_32Bits = null;\n        this.eachEdgeOffset = null;\n        this.#built = false;\n    }\n\n    build() {\n        this.indices = {\n            8: this.indices_8Bits,\n            16: this.indices_16Bits,\n            32: this.indices_32Bits,\n        };\n        this.eachPrimitiveMesh = {\n            8: this.eachPrimitiveMesh_8Bits,\n            16: this.eachPrimitiveMesh_16Bits,\n            32: this.eachPrimitiveMesh_32Bits,\n        };\n        this.edgeIndices = {\n            8: this.edgeIndices_8Bits,\n            16: this.edgeIndices_16Bits,\n            32: this.edgeIndices_32Bits,\n        };\n        this.eachEdgeMesh = {\n            8: this.eachEdgeMesh_8Bits,\n            16: this.eachEdgeMesh_16Bits,\n            32: this.eachEdgeMesh_32Bits,\n        };\n        this.#built = true;\n    }\n\n    destroy() {\n        if (this.positions) {\n            this.positions.destroy();\n        }\n        if (this.indices_8Bits) {\n            this.indices_8Bits.destroy();\n        }\n        if (this.indices_16Bits) {\n            this.indices_16Bits.destroy();\n        }\n        if (this.indices_32Bits) {\n            this.indices_32Bits.destroy();\n        }\n        if (this.edgeIndices_8Bits) {\n            this.edgeIndices_8Bits.destroy();\n        }\n        if (this.edgeIndices_16Bits) {\n            this.edgeIndices_16Bits.destroy();\n        }\n        if (this.edgeIndices_32Bits) {\n            this.edgeIndices_32Bits.destroy();\n        }\n        if (this.eachMeshMatrices) {\n            this.eachMeshMatrices.destroy();\n        }\n        if (this.eachMeshAttributes) {\n            this.eachMeshAttributes.destroy();\n        }\n        if (this.eachEdgeOffset) {\n            this.eachEdgeOffset.destroy();\n        }\n        if (this.eachPrimitiveMesh_8Bits) {\n            this.eachPrimitiveMesh_8Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_16Bits) {\n            this.eachPrimitiveMesh_16Bits.destroy();\n        }\n        if (this.eachPrimitiveMesh_32Bits) {\n            this.eachPrimitiveMesh_32Bits.destroy();\n        }\n        if (this.eachEdgeMesh_8Bits) {\n            this.eachEdgeMesh_8Bits.destroy();\n        }\n        if (this.eachEdgeMesh_16Bits) {\n            this.eachEdgeMesh_16Bits.destroy();\n        }\n        if (this.eachEdgeMesh_32Bits) {\n            this.eachEdgeMesh_32Bits.destroy();\n        }\n    }\n}\n","import type {Program} from \"./Program\";\nimport type {Sampler} from \"./Sampler\";\n\n/**\n * A WebGL2 texture that holds geometry data.\n */\nexport class DataTexture {\n\n    gl?: WebGL2RenderingContext;\n    texture?: WebGLTexture|null;\n    textureWidth?: number;\n    textureHeight?: number;\n    textureData?: any;\n    #onDestroyed?: Function;\n\n    constructor(params: {\n        gl?: WebGL2RenderingContext,\n        texture?: WebGLTexture,\n        textureWidth?: number,\n        textureHeight?: number,\n        textureData?: any,\n        onDestroyed?: Function\n    }={}) {\n        this.gl = params.gl;\n        this.texture = params.texture;\n        this.textureWidth = params.textureWidth;\n        this.textureHeight = params.textureHeight;\n        this.textureData = params.textureData;\n        this.#onDestroyed = params.onDestroyed;\n    }\n\n    bindTexture(glProgram: Program, sampler: Sampler, unit: number) {\n        if (!this.gl) {\n            return;\n        }\n        sampler.bindTexture(this, unit);\n    }\n\n    bind(unit: number) {\n        if (!this.gl || !this.texture) {\n            return;\n        }\n        // @ts-ignore\n        this.gl.activeTexture(this.gl[\"TEXTURE\" + unit]);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n        return true;\n    }\n\n    disableFiltering(): void {\n        if (!this.gl) {\n            return;\n        }\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    }\n\n    unbind(unit: number) {\n        if (!this.gl) {\n            return;\n        }\n        // This `unbind` method is ignored at the moment to allow avoiding to rebind same texture already bound to a texture unit.\n\n        // this.gl.activeTexture(this.state.gl[\"TEXTURE\" + unit]);\n        // this.gl.bindTexture(this.state.gl.TEXTURE_2D, null);\n    }\n\n    destroy() {\n        if (!this.gl || !this.texture) {\n            return;\n        }\n        this.gl.deleteTexture(this.texture);\n        this.texture = null;\n        if (this.#onDestroyed) {\n            this.#onDestroyed();\n        }\n    }\n}","import type { math} from \"../../viewer/index\";\nimport {DataTexture} from \"../lib/DataTexture\";\nimport {Float16Array} from \"./float16\";\n\nconst emptyDataTexture = new DataTexture({textureWidth: 0, textureHeight: 0});\n\n/**\n * Creates DataTextures to hold various types of viewer state.\n */\nexport class DataTextureFactory {\n\n    /**\n     * Enables the currently bound ````WebGLTexture```` to be used as a data texture.\n     */\n    disableFilteringForBoundTexture(gl: WebGL2RenderingContext) {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n\n    /**\n     * Creates a DataTexture containing the given vertex positions.\n     */\n    createPositionsDataTexture(gl: WebGL2RenderingContext, positions: math.FloatArrayParam): DataTexture {\n        const numVertices = positions.length / 3;\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(numVertices / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 3;\n        const textureData = new Uint16Array(textureDataSize);\n        //   dataTextureRamStats.sizeDataTexturePositions += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(positions, 0);\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        // @ts-ignore\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 8-bit indices.\n     */\n    createIndices8BitDataTexture(gl: WebGL2RenderingContext, indices_8Bits: math.IntArrayParam): DataTexture {\n        if (indices_8Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(indices_8Bits.length / 3 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 3;\n        const textureData = new Uint8Array(textureDataSize);\n        //dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n        textureData.fill(0);\n        textureData.set(indices_8Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB8UI, textureWidth, textureHeight);\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n            this.disableFilteringForBoundTexture(gl);\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 16-bit indices.\n     */\n    createIndices16BitDataTexture(gl: WebGL2RenderingContext, indices_16Bits: math.IntArrayParam): DataTexture {\n        if (indices_16Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(indices_16Bits.length / 3 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 3;\n        const textureData = new Uint16Array(textureDataSize);\n        // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(indices_16Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB16UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n        this.disableFilteringForBoundTexture(gl);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 32-bit indices.\n     */\n    createIndices32BitDataTexture(gl: WebGL2RenderingContext, indices_32Bits: math.IntArrayParam): DataTexture {\n        if (indices_32Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(indices_32Bits.length / 3 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 3;\n        const textureData = new Uint32Array(textureDataSize);\n        // dataTextureRamStats.sizeDataTextureIndices += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(indices_32Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n        this.disableFilteringForBoundTexture(gl);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 8-bit edge indices.\n     */\n    createEdgeIndices8BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_8Bits: math.IntArrayParam): DataTexture {\n        if (edgeIndices_8Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(edgeIndices_8Bits.length / 2 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 2;\n        const textureData = new Uint8Array(textureDataSize);\n        // dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(edgeIndices_8Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG8UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n        this.disableFilteringForBoundTexture(gl);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 16-bit edge indices.\n     */\n    createEdgeIndices16BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_16Bits: math.IntArrayParam): DataTexture {\n        if (edgeIndices_16Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(edgeIndices_16Bits.length / 2 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 2;\n        const textureData = new Uint16Array(textureDataSize);\n        //     dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(edgeIndices_16Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG16UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n        this.disableFilteringForBoundTexture(gl);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given 32-bit edge indices.\n     */\n    createEdgeIndices32BitDataTexture(gl: WebGL2RenderingContext, edgeIndices_32Bits: math.IntArrayParam): DataTexture {\n        if (edgeIndices_32Bits.length == 0) {\n            return emptyDataTexture;\n        }\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(edgeIndices_32Bits.length / 2 / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight * 2;\n        const textureData = new Uint32Array(textureDataSize);\n        //   dataTextureRamStats.sizeDataTextureEdgeIndices += textureData.byteLength;\n        textureData.fill(0);\n        // @ts-ignore\n        textureData.set(edgeIndices_32Bits, 0)\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RG_INTEGER, gl.UNSIGNED_INT, textureData, 0);\n        this.disableFilteringForBoundTexture(gl);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing per-mesh colors, pick colors, flags, vertex portion bases, indices portion bases, edge indices portion bases\n     *\n     * The texture will have:\n     * - 4 RGBA columns per row: for each mesh (pick) color and flags(2)\n     * - N rows where N is the number of meshes\n     *\n     * @param gl\n     * @param colors Color per mesh\n     * @param pickColors Pick color per mesh\n     * @param vertexBases Vertex index base for each mesh\n     * @param indexBaseOffsets For triangles: array of offsets between the (gl_VertexID / 3) and the position where the indices start in the texture layer\n     * @param edgeIndexBaseOffsets For edges: Array of offsets between the (gl_VertexID / 2) and the position where the edge indices start in the texture layer\n     */\n    createEachMeshAttributesDataTexture(gl: WebGL2RenderingContext, colors: math.FloatArrayParam[], pickColors: math.FloatArrayParam[], vertexBases: math.IntArrayParam, indexBaseOffsets: math.IntArrayParam, edgeIndexBaseOffsets: math.IntArrayParam): DataTexture {\n        \n        // Texture has one row per mesh:\n        //\n        //    - col0: (RGBA) mesh color RGBA\n        //    - col1: (packed Uint32 as RGBA) mesh pick color\n        //    - col2: (packed 4 bytes as RGBA) mesh flags\n        //    - col3: (packed 4 bytes as RGBA) mesh flags2\n        //    - col4: (packed Uint32 bytes as RGBA) vertex base\n        //    - col5: (packed Uint32 bytes as RGBA) index base offset\n        //    - col6: (packed Uint32 bytes as RGBA) edge index base offset\n\n        const textureHeight = colors.length;\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureWidth = 7;\n        const textureData = new Uint8Array(4 * textureWidth * textureHeight);\n        for (let i = 0; i < textureHeight; i++) {\n            textureData.set(colors [i], i * 28 + 0); // mesh color\n            textureData.set(pickColors [i], i * 28 + 4); // mesh pick color\n            textureData.set([0, 0, 0, 0], i * 28 + 8);  // mesh flags\n            textureData.set([0, 0, 0, 0], i * 28 + 12); // mesh flags2\n            textureData.set([(vertexBases[i] >> 24) & 255, (vertexBases[i] >> 16) & 255, (vertexBases[i] >> 8) & 255, (vertexBases[i]) & 255,], i * 28 + 16);   // vertex base\n            textureData.set([(indexBaseOffsets[i] >> 24) & 255, (indexBaseOffsets[i] >> 16) & 255, (indexBaseOffsets[i] >> 8) & 255, (indexBaseOffsets[i]) & 255,], i * 28 + 20);    // triangles index base offset\n            textureData.set([(edgeIndexBaseOffsets[i] >> 24) & 255, (edgeIndexBaseOffsets[i] >> 16) & 255, (edgeIndexBaseOffsets[i] >> 8) & 255, (edgeIndexBaseOffsets[i]) & 255,], i * 28 + 24);    // edge index base offset\n        }\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, textureData, 0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n    }\n\n    /**\n     * Creates DataTexture containing a 3D offset for each mesh\n     *\n     * @param gl\n     * @param offsets An offset for each mesh\n     */\n    createEachEdgeOffsetDataTexture(gl: WebGL2RenderingContext, offsets: math.FloatArrayParam[]) {\n        const textureHeight = offsets.length;\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureWidth = 1;\n        const textureData = new Float32Array(3 * textureWidth * textureHeight);\n        for (let i = 0; i < offsets.length; i++) {\n            textureData.set(offsets [i], i * 3); // mesh offset\n        }\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB32F, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGB, gl.FLOAT, textureData, 0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight, textureData}); // Re-writeable texture data\n    }\n\n    /**\n     * Creates a DataTexture that holds per-mesh matrices for positions decode, position modeling, and normals modeling.\n     *\n     * The texture will have:\n     * - 4 RGBA columns per row (each column will contain 4 packed half-float (16 bits) components).\n     *   Thus, each row will contain 16 packed half-floats corresponding to a complete positions decode matrix)\n     * - N rows where N is the number of meshes\n     *\n     * @param gl\n     * @param positionDecodeMatrices Positions decode matrix for each mesh in the layer\n     * @param matrices Positions instancing matrix for each mesh in the layer. Null if the meshes are not instanced.\n     */\n    createEachMeshMatricesDataTexture(gl: WebGL2RenderingContext, positionDecodeMatrices: math.FloatArrayParam, matrices: math.FloatArrayParam): DataTexture {\n\n        // Texture has one row per mesh:\n        //\n        //    - col0: Positions decode matrix\n        //    - col1: Positions modeling matrix\n        //    - col2: Normals modeling matrix\n\n        const textureHeight = positionDecodeMatrices.length;\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureWidth = 4 * 3;\n        // @ts-ignore\n        const textureData = new Float16Array(4 * textureWidth * textureHeight);\n        for (let i = 0; i < positionDecodeMatrices.length; i++) {\n            textureData.set(positionDecodeMatrices [i], i * 48);   // 4x4 values\n            textureData.set(matrices [i], i * 48 + 16);   // 4x4 values\n        }\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA16F, textureWidth, textureHeight);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RGBA, gl.HALF_FLOAT, new Uint16Array(textureData.buffer), 0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n\n    /**\n     * Creates a DataTexture containing the given mesh IDs.\n     * This type of texture is used for a lookup table, of mesh IDs for given keys.\n     *\n     * @param gl\n     * @param meshIds\n     */\n    createPointerTableDataTexture(gl: WebGL2RenderingContext, meshIds: math.IntArrayParam): DataTexture {\n        if (meshIds.length == 0) {\n            return emptyDataTexture;\n        }\n        const texture = gl.createTexture();\n        if (!texture) {\n            return emptyDataTexture;\n        }\n        const lenArray = meshIds.length;\n        const textureWidth = 1024;\n        const textureHeight = Math.ceil(lenArray / textureWidth);\n        if (textureHeight == 0) {\n            throw \"texture height == 0\";\n        }\n        const textureDataSize = textureWidth * textureHeight;\n        const textureData = new Uint16Array(textureDataSize);\n        textureData.set(meshIds, 0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R16UI, textureWidth, textureHeight);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, textureWidth, textureHeight, gl.RED_INTEGER, gl.UNSIGNED_SHORT, textureData, 0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return new DataTexture({gl, texture, textureWidth, textureHeight});\n    }\n}","export const SCENE_OBJECT_FLAGS = {\n    VISIBLE: 1,\n    CULLED: 1 << 2,\n    PICKABLE: 1 << 3,\n    CLIPPABLE: 1 << 4,\n    COLLIDABLE: 1 << 5,\n    CAST_SHADOW: 1 << 6,\n    RECEIVE_SHADOW: 1 << 7,\n    XRAYED: 1 << 8,\n    HIGHLIGHTED: 1 << 9,\n    SELECTED: 1 << 10,\n    EDGES: 1 << 11,\n    BACKFACES: 1 << 12,\n    TRANSPARENT: 1 << 13\n};\n","export class MeshCounts {\n\n    numMeshes: number;\n    numVisible: number;\n    numTransparent: number;\n    numEdges: number;\n    numXRayed: number;\n    numSelected: number;\n    numHighlighted: number;\n    numClippable: number;\n    numPickable: number;\n    numCulled: number;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset() {\n        this.numMeshes = 0;\n        this.numVisible = 0;\n        this.numTransparent = 0;\n        this.numEdges = 0;\n        this.numXRayed = 0;\n        this.numSelected = 0;\n        this.numHighlighted = 0;\n        this.numClippable = 0;\n        this.numPickable = 0;\n        this.numCulled = 0;\n    }\n}","import type {WebGLSceneModel} from \"./WebGLSceneModel\";\nimport {DataTextureSet} from \"./DataTextureSet\";\nimport {DataTextureFactory} from \"./DataTextureFactory\";\nimport {\n    constants,\n    GeometryBucketParams,\n    GeometryCompressedParams,\n    math,\n    MeshParams,\n    RTCViewMat,\n    View\n} from \"../../viewer/index\";\n\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport {RENDER_PASSES} from './RENDER_PASSES';\n\nimport type {TextureSet} from \"./TextureSet\";\nimport {MeshCounts} from \"./MeshCounts\";\n\nconst MAX_MESH_PARTS = (1 << 12); // 12 bits \nconst MAX_DATATEXTURE_HEIGHT = (1 << 11); // 2048\nconst INDICES_EDGE_INDICES_ALIGNMENT_SIZE = 8;\n\nconst identityMatrix = math.identityMat4();\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempUint8Array4 = new Uint8Array(4);\nconst tempFloat32Array3 = new Float32Array(3);\n\nexport interface LayerParams { // Params for Layer constructor\n    gl: WebGL2RenderingContext;\n    view: View;\n    sceneModel: WebGLSceneModel;\n    primitive: number;\n    origin: math.FloatArrayParam;\n    layerIndex: number;\n    textureSet?: TextureSet;\n}\n\ninterface GeometryBucketHandle { // Storage handle for a geometry bucket within a Layer\n    vertexBase: number;\n    numVertices: number;\n    numTriangles: number;\n    numLines: number;\n    numPoints: number;\n    numEdges: number;\n    indicesBase: number;\n    edgeIndicesBase: number\n}\n\ninterface GeometryHandle { // Storage handle for a geometry within a Layer\n    aabb: math.FloatArrayParam;\n    positionsDecompressMatrix: math.FloatArrayParam;\n    geometryBucketHandles: GeometryBucketHandle[]\n}\n\ninterface MeshPartParams {\n    aabb: math.FloatArrayParam;\n}\n\ninterface MeshPartHandle {\n    vertsBase: number;\n    numVerts: number;\n}\n\nexport interface LayerRenderState { // What a LayerRenderer needs to render this Layer\n    materialTextureSet: TextureSet; // Color, opacity, metal/roughness, ambient occlusion maps\n    dataTextureSet: DataTextureSet;  // Data textures containing geometry, transforms, flags and material attributes\n    primitive: number; // Layer primitive type\n    origin: math.FloatArrayParam; // Layer's RTC coordinate origin\n    numIndices8Bits: number; // How many 8-bit encodable indices in layer\n    numIndices16Bits: number; // How many 16-bit encodable indices in layer\n    numIndices32Bits: number; // How many 32-bit encodable indices in layer\n    numEdgeIndices8Bits: number; // How many 8-bit encodable edge indices in layer\n    numEdgeIndices16Bits: number; // How many 16-bit encodable edge indices in layer\n    numEdgeIndices32Bits: number; // How many 32-bit encodable edge indices in layer\n    numVertices: number; // How many vertices in layer\n}\n\nclass DataTextureBuffer { // Temp data buffer as we build a Layer; converted into data textures once Layer is built\n    positionsCompressed: number[];\n    indices_8Bits: number[];\n    indices_16Bits: number[];\n    indices_32Bits: number[];\n    edgeIndices_8Bits: number[];\n    edgeIndices_16Bits: number[];\n    edgeIndices_32Bits: number[];\n    eachMeshVertexPortionBase: number[];\n    eachMeshVertexPortionOffset: number[];\n    eachMeshEdgeIndicesOffset: number[];\n    eachMeshColor: any[];\n    eachMeshPickColor: any[];\n    eachMeshMatrices: any[];\n    eachMeshNormalMatrix: any[];\n    eachMeshPositionsDecompressMatrix: any[];\n    eachMeshFlags1: any[];\n    eachMeshFlags2: any[];\n    eachPrimitiveMesh_32Bits: number[];\n    eachPrimitiveMesh_16Bits: number[];\n    eachPrimitiveMesh_8Bits: number[];\n    eachEdgeMesh_32Bits: number[];\n    eachEdgeMesh_16Bits: number[];\n    eachEdgeMesh_8Bits: number[];\n    eachEdgeOffset: any[];\n    eachMeshParts: number[];\n\n    constructor() {\n        this.positionsCompressed = [];\n        this.indices_8Bits = [];\n        this.indices_16Bits = [];\n        this.indices_32Bits = [];\n        this.edgeIndices_8Bits = [];\n        this.edgeIndices_16Bits = [];\n        this.edgeIndices_32Bits = [];\n        this.eachMeshVertexPortionBase = [];\n        this.eachMeshVertexPortionOffset = [];\n        this.eachMeshEdgeIndicesOffset = [];\n        this.eachMeshColor = [];\n        this.eachMeshPickColor = [];\n        this.eachMeshMatrices = [];\n        this.eachMeshNormalMatrix = [];\n        this.eachMeshPositionsDecompressMatrix = [];\n        this.eachMeshFlags1 = [];\n        this.eachMeshFlags2 = [];\n        this.eachPrimitiveMesh_32Bits = [];\n        this.eachPrimitiveMesh_16Bits = [];\n        this.eachPrimitiveMesh_8Bits = [];\n        this.eachEdgeMesh_32Bits = [];\n        this.eachEdgeMesh_16Bits = [];\n        this.eachEdgeMesh_8Bits = [];\n        this.eachEdgeOffset = [];\n        this.eachMeshParts = [];\n    }\n}\n\nexport class Layer { // A container of meshes within a WebGLSceneModel\n\n    sceneModel: WebGLSceneModel;\n    layerIndex: number;\n    rtcViewMat: RTCViewMat;\n    meshCounts: MeshCounts;\n    renderState: LayerRenderState;\n\n    #gl: WebGL2RenderingContext;\n    #view: View;\n    #dataTextureBuffer: DataTextureBuffer;\n    #geometryHandles: { [key: string]: any };\n    #meshPartHandles: MeshPartHandle[];\n    #numMeshParts: number;\n    #deferredSetFlagsActive: boolean;\n    #deferredSetFlagsDirty: boolean;\n    #built: boolean;\n\n    constructor(layerParams: LayerParams, renderers?: any) {\n\n        this.meshCounts = new MeshCounts();\n        this.layerIndex = layerParams.layerIndex;\n        this.sceneModel = layerParams.sceneModel;\n\n        this.renderState = <LayerRenderState>{\n            primitive: layerParams.primitive,\n            dataTextureSet: new DataTextureSet(),\n            origin: math.vec3(layerParams.origin),\n            numIndices8Bits: 0,\n            numIndices16Bits: 0,\n            numIndices32Bits: 0,\n            numEdgeIndices8Bits: 0,\n            numEdgeIndices16Bits: 0,\n            numEdgeIndices32Bits: 0,\n            numVertices: 0\n        };\n\n        this.#gl = layerParams.gl;\n        this.#view = layerParams.view;\n        this.#dataTextureBuffer = new DataTextureBuffer();\n        this.#numMeshParts = 0;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n\n        this.rtcViewMat = layerParams.view.camera.getRTCViewMat(this.renderState.origin);\n\n        this.beginDeferredFlags();\n\n        this.#built = false;\n    }\n\n    get hash() {\n        return `layer-${this.renderState.primitive}-${this.renderState.origin[0]}-${this.renderState.origin[1]}-${this.renderState.origin[2]}`;\n    }\n\n    canCreateMesh(geometryCompressedParams: GeometryCompressedParams): boolean {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const renderState = this.renderState;\n        const numGeometryBuckets = geometryCompressedParams.geometryBuckets.length;\n        if ((this.#numMeshParts + numGeometryBuckets) > MAX_MESH_PARTS) {\n            return false;\n        }\n        let numPositions = 0;\n        let numIndices = 0;\n        for (let i = 0; i < numGeometryBuckets; i++) {\n            const geometryBucket = geometryCompressedParams.geometryBuckets[i];\n            numPositions += geometryBucket.positionsCompressed.length;\n            if (geometryBucket.indices) {\n                numIndices += geometryBucket.indices.length;\n            }\n        }\n        const primVerts = (geometryCompressedParams.primitive === constants.PointsPrimitive) ? 1 : (geometryCompressedParams.primitive == constants.LinesPrimitive ? 2 : 3);\n        const maxIndicesOfAnyBits = Math.max(renderState.numIndices8Bits, renderState.numIndices16Bits, renderState.numIndices32Bits);\n        const numVerts = numPositions / primVerts;\n        let numTriangleIndices = numIndices / 3;\n        return (renderState.numVertices + numVerts) <= MAX_DATATEXTURE_HEIGHT * 1024 && (numTriangleIndices + numIndices) <= MAX_DATATEXTURE_HEIGHT * 1024;\n    }\n\n    hasGeometry(geometryId: string): boolean {\n        return this.#geometryHandles[geometryId];\n    }\n\n    createGeometryCompressed(geometryCompressedParams: GeometryCompressedParams) {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const geometryBucketHandles = [];\n        for (let i = 0, len = geometryCompressedParams.geometryBuckets.length; i < len; i++) {\n            geometryBucketHandles.push(this.#createGeometryBucket(geometryCompressedParams.geometryBuckets[i]));\n        }\n        this.#geometryHandles[geometryCompressedParams.id] = <GeometryHandle>{\n            id: geometryCompressedParams.id,\n            aabb: geometryCompressedParams.aabb,\n            positionsDecompressMatrix: geometryCompressedParams.positionsDecompressMatrix,\n            geometryBucketHandles\n        };\n    }\n\n    #createGeometryBucket(geometryBucket: GeometryBucketParams): GeometryBucketHandle {\n        const renderState = this.renderState;\n        if (geometryBucket.indices) {  // Align indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const numVertsForPrim = (this.renderState.primitive === constants.PointsPrimitive ? 1 : (this.renderState.primitive === constants.LinesPrimitive ? 2 : 3));\n            const alignedIndicesLen = Math.ceil((geometryBucket.indices.length / numVertsForPrim) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * numVertsForPrim;\n            const alignedIndices = new Uint32Array(alignedIndicesLen);\n            alignedIndices.fill(0);\n            alignedIndices.set(geometryBucket.indices);\n            geometryBucket.indices = alignedIndices;\n        }\n        if (geometryBucket.edgeIndices) {  // Align edge indices to INDICES_EDGE_INDICES_ALIGNMENT_SIZE\n            const alignedEdgeIndicesLen = Math.ceil((geometryBucket.edgeIndices.length / 2) / INDICES_EDGE_INDICES_ALIGNMENT_SIZE) * INDICES_EDGE_INDICES_ALIGNMENT_SIZE * 2;\n            const alignedEdgeIndices = new Uint32Array(alignedEdgeIndicesLen);\n            alignedEdgeIndices.fill(0);\n            alignedEdgeIndices.set(geometryBucket.edgeIndices);\n            geometryBucket.edgeIndices = alignedEdgeIndices;\n        }\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const positionsCompressed = geometryBucket.positionsCompressed;\n        const indices = geometryBucket.indices;\n        const edgeIndices = geometryBucket.edgeIndices;\n        const vertexBase = dataTextureBuffer.positionsCompressed.length / 3;\n        const numVertices = positionsCompressed.length / 3;\n        for (let i = 0, len = positionsCompressed.length; i < len; i++) {\n            dataTextureBuffer.positionsCompressed.push(positionsCompressed[i]);\n        }\n        let indicesBase;\n        let numTriangles = 0;\n        if (indices) {\n            numTriangles = indices.length / 3;\n            let indicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                indicesBuffer = dataTextureBuffer.indices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                indicesBuffer = dataTextureBuffer.indices_16Bits;\n            } else {\n                indicesBuffer = dataTextureBuffer.indices_32Bits;\n            }\n            indicesBase = indicesBuffer.length / 3;\n            for (let i = 0, len = indices.length; i < len; i++) {\n                indicesBuffer.push(indices[i]);\n            }\n        }\n        let edgeIndicesBase;\n        let numEdges = 0;\n        if (edgeIndices) {\n            numEdges = edgeIndices.length / 2;\n            let edgeIndicesBuffer;\n            if (numVertices <= (1 << 8)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_8Bits;\n            } else if (numVertices <= (1 << 16)) {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_16Bits;\n            } else {\n                edgeIndicesBuffer = dataTextureBuffer.edgeIndices_32Bits;\n            }\n            edgeIndicesBase = edgeIndicesBuffer.length / 2;\n            for (let i = 0, len = edgeIndices.length; i < len; i++) {\n                edgeIndicesBuffer.push(edgeIndices[i]);\n            }\n        }\n        renderState.numVertices += numVertices;\n        return <GeometryBucketHandle>{\n            vertexBase,\n            numVertices,\n            numTriangles,\n            numEdges,\n            indicesBase,\n            edgeIndicesBase\n        };\n    }\n\n    createMesh(meshParams: MeshParams): number {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        // if (origin) {\n        //     this.renderState.origin = origin;\n        //     worldAABB[0] += origin[0];\n        //     worldAABB[1] += origin[1];\n        //     worldAABB[2] += origin[2];\n        //     worldAABB[3] += origin[0];\n        //     worldAABB[4] += origin[1];\n        //     worldAABB[5] += origin[2];\n        // }\n        const meshId = this.meshCounts.numMeshes;\n        const meshPartIds: number[] = [];\n        if (!meshParams.geometryId) {\n            throw \"geometryId expected\";\n        }\n        const geometryHandle = this.#geometryHandles[meshParams.geometryId];\n        if (!geometryHandle) {\n            throw \"Geometry not found\";\n        }\n        geometryHandle.geometryBucketHandles.forEach((geometryBucketHandle: GeometryBucketHandle) => {\n            const meshPartId = this.#createMeshPart(meshParams, geometryHandle, geometryBucketHandle);\n            meshPartIds.push(meshPartId);\n        });\n        const worldAABB = math.boundaries.collapseAABB3();\n        const geometryOBB = math.boundaries.AABB3ToOBB3(geometryHandle.aabb);\n        for (let i = 0, len = geometryOBB.length; i < len; i += 4) {\n            tempVec4a[0] = geometryOBB[i + 0];\n            tempVec4a[1] = geometryOBB[i + 1];\n            tempVec4a[2] = geometryOBB[i + 2];\n            if (meshParams.matrix) {\n                math.transformPoint4(meshParams.matrix, tempVec4a, tempVec4b);\n               // math.transformPoint4(meshParams.matrix, tempVec4b, tempVec4c);\n                math.boundaries.expandAABB3Point3(worldAABB, tempVec4b);\n            } else {\n                math.boundaries.expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n        this.meshCounts.numMeshes++;\n        return meshId;\n    }\n\n    #createMeshPart(meshParams: MeshParams, geometryHandle: GeometryHandle, geometryBucketHandle: GeometryBucketHandle): number {\n\n        const dataTextureBuffer = this.#dataTextureBuffer;\n\n        const renderState = this.renderState;\n\n        const matrix = meshParams.matrix || identityMatrix;\n        const color = meshParams.color || [255, 255, 255];\n        const opacity = meshParams.opacity;\n        const metallic = meshParams.metallic;\n        const roughness = meshParams.roughness;\n\n        const positionsIndex = dataTextureBuffer.positionsCompressed.length;\n        const vertsIndex = positionsIndex / 3;\n\n        dataTextureBuffer.eachMeshPositionsDecompressMatrix.push(geometryHandle.positionsDecompressMatrix);\n        dataTextureBuffer.eachMeshMatrices.push(matrix);\n        dataTextureBuffer.eachMeshColor.push([color[0], color[1], color[2], 255]);\n        dataTextureBuffer.eachMeshPickColor.push(meshParams.pickColor);\n\n        let currentNumIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumIndices = renderState.numIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumIndices = renderState.numIndices16Bits;\n        } else {\n            currentNumIndices = renderState.numIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshVertexPortionBase.push(geometryBucketHandle.vertexBase);\n        dataTextureBuffer.eachMeshVertexPortionOffset.push(currentNumIndices / 3 - geometryBucketHandle.indicesBase);\n\n        // Edge indices\n\n        let currentNumEdgeIndices;\n        if (geometryBucketHandle.numVertices <= (1 << 8)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices8Bits;\n        } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n            currentNumEdgeIndices = renderState.numEdgeIndices16Bits;\n        } else {\n            currentNumEdgeIndices = renderState.numEdgeIndices32Bits;\n        }\n        dataTextureBuffer.eachMeshEdgeIndicesOffset.push(currentNumEdgeIndices / 2 - geometryBucketHandle.edgeIndicesBase);\n\n        // Primitive -> mesh lookup\n\n        const meshPartId = this.#meshPartHandles.length;\n\n        if (geometryBucketHandle.numTriangles > 0) {\n            const numIndices = geometryBucketHandle.numTriangles * 3;\n            let eachPrimitiveMeshBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_8Bits;\n                renderState.numIndices8Bits += numIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_16Bits;\n                renderState.numIndices16Bits += numIndices;\n            } else {\n                eachPrimitiveMeshBuffer = dataTextureBuffer.eachPrimitiveMesh_32Bits;\n                renderState.numIndices32Bits += numIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numTriangles; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                eachPrimitiveMeshBuffer.push(meshPartId);\n            }\n        }\n\n        // Edge index -> mesh lookup\n\n        if (geometryBucketHandle.numEdges > 0) {\n            let numEdgeIndices = geometryBucketHandle.numEdges * 2;\n            let edgeIndicesMeshIdBuffer;\n            if (geometryBucketHandle.numVertices <= (1 << 8)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_8Bits;\n                renderState.numEdgeIndices8Bits += numEdgeIndices;\n            } else if (geometryBucketHandle.numVertices <= (1 << 16)) {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_16Bits;\n                renderState.numEdgeIndices16Bits += numEdgeIndices;\n            } else {\n                edgeIndicesMeshIdBuffer = dataTextureBuffer.eachEdgeMesh_32Bits;\n                renderState.numEdgeIndices32Bits += numEdgeIndices;\n            }\n            for (let i = 0; i < geometryBucketHandle.numEdges; i += INDICES_EDGE_INDICES_ALIGNMENT_SIZE) {\n                edgeIndicesMeshIdBuffer.push(meshPartId);\n            }\n        }\n        dataTextureBuffer.eachEdgeOffset.push([0, 0, 0]);\n\n        this.#meshPartHandles.push(<MeshPartHandle>{\n            vertsBase: vertsIndex,\n            numVerts: geometryBucketHandle.numTriangles //////////////////// TODO\n        });\n        this.#numMeshParts++;\n        return meshPartId;\n    }\n\n    build() {\n        if (this.#built) {\n            throw \"Already built\";\n        }\n        const gl = this.#gl;\n        const dataTextureFactory = new DataTextureFactory();\n        const dataTextureBuffer = this.#dataTextureBuffer;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        dataTextureSet.positions = dataTextureFactory.createPositionsDataTexture(gl, dataTextureBuffer.positionsCompressed);\n        dataTextureSet.indices_8Bits = dataTextureFactory.createIndices8BitDataTexture(gl, dataTextureBuffer.indices_8Bits);\n        dataTextureSet.indices_16Bits = dataTextureFactory.createIndices16BitDataTexture(gl, dataTextureBuffer.indices_16Bits);\n        dataTextureSet.indices_32Bits = dataTextureFactory.createIndices32BitDataTexture(gl, dataTextureBuffer.indices_32Bits);\n        dataTextureSet.edgeIndices_8Bits = dataTextureFactory.createEdgeIndices8BitDataTexture(gl, dataTextureBuffer.edgeIndices_8Bits);\n        dataTextureSet.edgeIndices_16Bits = dataTextureFactory.createEdgeIndices16BitDataTexture(gl, dataTextureBuffer.edgeIndices_16Bits);\n        dataTextureSet.edgeIndices_32Bits = dataTextureFactory.createEdgeIndices32BitDataTexture(gl, dataTextureBuffer.edgeIndices_32Bits);\n        dataTextureSet.eachMeshAttributes = dataTextureFactory.createEachMeshAttributesDataTexture(gl,\n            dataTextureBuffer.eachMeshColor,\n            dataTextureBuffer.eachMeshPickColor,\n            dataTextureBuffer.eachMeshVertexPortionBase,\n            dataTextureBuffer.eachMeshVertexPortionOffset,\n            dataTextureBuffer.eachMeshEdgeIndicesOffset);\n        dataTextureSet.eachMeshMatrices = dataTextureFactory.createEachMeshMatricesDataTexture(gl, dataTextureBuffer.eachMeshPositionsDecompressMatrix, dataTextureBuffer.eachMeshMatrices);\n        // dataTextureSet.eachPrimitiveMesh8BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_8Bits);\n        // dataTextureSet.eachPrimitiveMesh16BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_16Bits);\n        // dataTextureSet.eachPrimitiveMesh32BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachPrimitiveMesh_32Bits);\n        // dataTextureSet.eachEdgeMesh8BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_8Bits);\n        // dataTextureSet.eachEdgeMesh16BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_16Bits);\n        // dataTextureSet.eachEdgeMesh32BitsDataTexture = dataTextureFactory.createPointerTableDataTexture(gl, dataTextureBuffer.eachEdgeMesh_32Bits);\n        dataTextureSet.eachEdgeOffset = dataTextureFactory.createEachEdgeOffsetDataTexture(gl, dataTextureBuffer.eachEdgeOffset);\n        dataTextureSet.build();\n        // @ts-ignore\n        this.#dataTextureBuffer = null;\n        this.#geometryHandles = {};\n        this.#meshPartHandles = [];\n        this.#built = true;\n    }\n\n    isEmpty() {\n        return this.meshCounts.numMeshes == 0;\n    }\n\n    initFlags(meshId: number, flags: number, meshTransparent: boolean) {\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            this.meshCounts.numVisible++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        }\n        if (meshTransparent) {\n            this.meshCounts.numTransparent++;\n        }\n        this.#setMeshFlags(meshId, flags, meshTransparent);\n        this.#setMeshFlags2(meshId, flags);\n    }\n\n    beginDeferredFlags() {\n        this.#deferredSetFlagsActive = true;\n    }\n\n    commitDeferredFlags() {\n        this.#deferredSetFlagsActive = false;\n        if (!this.#deferredSetFlagsDirty) {\n            return;\n        }\n        this.#deferredSetFlagsDirty = false;\n        const gl = this.#gl;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachMeshAttributes.textureWidth, dataTextureSet.eachMeshAttributes.textureHeight, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, dataTextureSet.eachMeshAttributes.textureData);\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachEdgeOffset.texture);\n        // @ts-ignore\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, dataTextureSet.eachEdgeOffset.textureWidth, dataTextureSet.eachEdgeOffset.textureHeight, gl.RGB, gl.FLOAT, dataTextureSet.eachEdgeOffset.textureData);\n    }\n\n    flushInitFlags() {\n        this.commitDeferredFlags();\n    }\n\n    setMeshVisible(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.VISIBLE) {\n            debugger;\n            this.meshCounts.numVisible++;\n        } else {\n            this.meshCounts.numVisible--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshHighlighted(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) {\n            this.meshCounts.numHighlighted++;\n        } else {\n            this.meshCounts.numHighlighted--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshXRayed(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.XRAYED) {\n            this.meshCounts.numXRayed++;\n        } else {\n            this.meshCounts.numXRayed--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshSelected(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.SELECTED) {\n            this.meshCounts.numSelected++;\n        } else {\n            this.meshCounts.numSelected--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshEdges(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.EDGES) {\n            this.meshCounts.numEdges++;\n        } else {\n            this.meshCounts.numEdges--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshClippable(meshId: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CLIPPABLE) {\n            this.meshCounts.numClippable++;\n        } else {\n            this.meshCounts.numClippable--;\n        }\n        this.#setMeshFlags2(meshId, flags);\n    }\n\n    setMeshCulled(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.CULLED) {\n            this.meshCounts.numCulled++;\n        } else {\n            this.meshCounts.numCulled--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshCollidable(meshId: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n    }\n\n    setMeshPickable(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (flags & SCENE_OBJECT_FLAGS.PICKABLE) {\n            this.meshCounts.numPickable++;\n        } else {\n            this.meshCounts.numPickable--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    setMeshColor(meshId: number, color: math.FloatArrayParam, transparent?: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = color[0];\n        tempUint8Array4 [1] = color[1];\n        tempUint8Array4 [2] = color[2];\n        tempUint8Array4 [3] = color[3];\n        // @ts-ignore\n        dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshId * 28);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshId, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshTransparent(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        if (transparent) {\n            this.meshCounts.numTransparent++;\n            this.meshCounts.numTransparent++;\n        } else {\n            this.meshCounts.numTransparent--;\n            this.meshCounts.numTransparent--;\n        }\n        this.#setMeshFlags(meshId, flags, transparent);\n    }\n\n    #setMeshFlags(meshId: number, flags: number, transparent: boolean) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const visible = !!(flags & SCENE_OBJECT_FLAGS.VISIBLE);\n        const xrayed = !!(flags & SCENE_OBJECT_FLAGS.XRAYED);\n        const highlighted = !!(flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & SCENE_OBJECT_FLAGS.SELECTED);\n        const edges = !!(flags & SCENE_OBJECT_FLAGS.EDGES);\n        const pickable = !!(flags & SCENE_OBJECT_FLAGS.PICKABLE);\n        const culled = !!(flags & SCENE_OBJECT_FLAGS.CULLED);\n        let f0; // Color\n        if (!visible || culled || xrayed) { // Highlight & select are layered on top of color - not mutually exclusive\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n        let f1; // Silhouette\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f2 = 0; // Edges\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (transparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED; // Pick\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = f0;\n        tempUint8Array4 [1] = f1;\n        tempUint8Array4 [2] = f2;\n        tempUint8Array4 [3] = f3;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshId * 28 + 8);\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 2, meshId, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    #setMeshFlags2(meshId: number, flags: number) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const clippable = !!(flags & SCENE_OBJECT_FLAGS.CLIPPABLE) ? 255 : 0;\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempUint8Array4 [0] = clippable;\n        tempUint8Array4 [1] = 0;\n        tempUint8Array4 [2] = 1;\n        tempUint8Array4 [3] = 2;\n        if (this.#deferredSetFlagsActive) {\n            // @ts-ignore\n            dataTextureSet.eachMeshAttributes.textureData.set(tempUint8Array4, meshId * 28 + 12); // Flags\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        // @ts-ignore\n        gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshAttributes.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 3, meshId, 1, 1, gl.RGBA_INTEGER, gl.UNSIGNED_BYTE, tempUint8Array4);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    setMeshOffset(meshId: number, offset: math.FloatArrayParam) {\n        if (!this.#built) {\n            throw \"Not built\";\n        }\n        const dataTextureSet = this.renderState.dataTextureSet;\n        const gl = this.#gl;\n        tempFloat32Array3 [0] = offset[0];\n        tempFloat32Array3 [1] = offset[1];\n        tempFloat32Array3 [2] = offset[2];\n        // dataTextureSet.eachMeshOffset.textureData.set(tempFloat32Array3, meshId * 3);\n        if (this.#deferredSetFlagsActive) {\n            this.#deferredSetFlagsDirty = true;\n            return;\n        }\n        //gl.bindTexture(gl.TEXTURE_2D, dataTextureSet.eachMeshOffset.texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, meshId, 1, 1, gl.RGB, gl.FLOAT, tempFloat32Array3);\n        // gl.bindTexture (gl.TEXTURE_2D, null);\n    }\n\n    destroy() {\n        this.#view.camera.putRTCViewMat(this.rtcViewMat);\n        this.renderState.dataTextureSet.destroy();\n    }\n}\n\n","import {math} from \"../../viewer/index\";\nimport type {Pickable} from \"../Pickable\";\nimport type {WebGLSceneObject} from \"./WebGLSceneObject\";\nimport type {RenderContext} from \"../RenderContext\";\nimport type {Layer} from \"./Layer\";\n\nclass Mesh implements Pickable{\n\n    id: string;\n    pickId: number;\n    sceneObject: WebGLSceneObject|null;\n    aabb: math.FloatArrayParam;\n    layer: Layer;\n    meshId: any;\n    color: math.FloatArrayParam;\n    colorize: math.FloatArrayParam;\n    colorizing: boolean;\n    transparent: boolean;\n\n    constructor(params: {\n        id: string,\n        color: math.FloatArrayParam,\n        opacity: number,\n        layer: Layer\n    }) {\n        this.sceneObject = null;\n        this.id = params.id;\n        this.pickId = 0;\n        this.color = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorize = [params.color[0], params.color[1], params.color[2], params.opacity]; // [0..255]\n        this.colorizing = false;\n        this.transparent = (params.opacity < 255);\n        this.sceneObject = null;\n        this.layer = params.layer;\n        this.aabb = math.boundaries.AABB3();\n    }\n\n    setSceneObject(sceneObject: WebGLSceneObject) {\n        this.sceneObject = sceneObject;\n    }\n\n    build(flags: number) {\n        // @ts-ignore\n        this.layer.initFlags(this.meshId, flags, this.transparent);\n    }\n\n    finalize2() {\n        // @ts-ignore\n        if (this.layer.flushInitFlags) {\n            this.layer.flushInitFlags();\n        }\n    }\n\n    setVisible(flags: any) {\n        this.layer.setMeshVisible(this.meshId, flags, this.transparent);\n    }\n\n    setColor(color: math.FloatArrayParam) {\n        this.color[0] = color[0];\n        this.color[1] = color[1];\n        this.color[2] = color[2];\n        if (!this.colorizing) {\n            this.layer.setMeshColor(this.meshId, this.color);\n        }\n    }\n\n    setColorize(colorize: math.FloatArrayParam|null) {\n        const setOpacity = false;\n        if (colorize) {\n            this.colorize[0] = colorize[0];\n            this.colorize[1] = colorize[1];\n            this.colorize[2] = colorize[2];\n            this.layer.setMeshColor(this.meshId, this.colorize, setOpacity);\n            this.colorizing = true;\n        } else {\n            this.layer.setMeshColor(this.meshId, this.color, setOpacity);\n            this.colorizing = false;\n        }\n    }\n\n    setOpacity(opacity: number, flags: number) {\n        const newTransparent = (opacity < 255);\n        const lastTransparent = this.transparent;\n        const changingTransparency = (lastTransparent !== newTransparent);\n        this.color[3] = opacity;\n        this.colorize[3] = opacity;\n        this.transparent = newTransparent;\n        if (this.colorizing) {\n            this.layer.setMeshColor(this.meshId, this.colorize);\n        } else {\n            this.layer.setMeshColor(this.meshId, this.color);\n        }\n        if (changingTransparency) {\n            this.layer.setMeshTransparent(this.meshId, flags, newTransparent);\n        }\n    }\n\n    setOffset(offset: math.FloatArrayParam) {\n        this.layer.setMeshOffset(this.meshId, offset);\n    }\n\n    setHighlighted(flags: number) {\n        this.layer.setMeshHighlighted(this.meshId, flags, this.transparent);\n    }\n\n    setXRayed(flags: number) {\n        this.layer.setMeshXRayed(this.meshId, flags, this.transparent);\n    }\n\n    setSelected(flags: number) {\n        this.layer.setMeshSelected(this.meshId, flags, this.transparent);\n    }\n\n    setEdges(flags: number) {\n        this.layer.setMeshEdges(this.meshId, flags, this.transparent);\n    }\n\n    setClippable(flags: number) {\n        this.layer.setMeshClippable(this.meshId, flags);\n    }\n\n    setCollidable(flags: number) {\n        this.layer.setMeshCollidable(this.meshId, flags);\n    }\n\n    setPickable(flags: number) {\n        this.layer.setMeshPickable(this.meshId, flags, this.transparent);\n    }\n\n    setCulled(flags: number) {\n        this.layer.setMeshCulled(this.meshId, flags, this.transparent);\n    }\n\n    canPickTriangle() {\n        return false;\n    }\n\n    drawPickTriangles(drawFlags: any, renderContext: any) {\n        // NOP\n    }\n\n    pickTriangleSurface(pickResult: any) {\n        // NOP\n    }\n\n    canPickWorldPos() {\n        return true;\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        //this.sceneObject.sceneModel.drawPickNormals(renderContext);\n    }\n\n    delegatePickedEntity(): WebGLSceneObject {\n        return <WebGLSceneObject>this.sceneObject;\n    }\n\n    destroy() {\n    }\n}\n\nexport {Mesh};","import type {Texture} from \"./Texture\";\n\n/**\n * Instantiated internally by Model#createTextureSet\n */\nexport class TextureSet {\n\n    public readonly id: number | string;\n    public readonly colorTexture: Texture;\n    public readonly metallicRoughnessTexture: Texture;\n    public readonly normalsTexture: Texture;\n    public readonly emissiveTexture: Texture;\n    public readonly occlusionTexture: Texture;\n\n    constructor(params: {\n        id: number | string;\n        colorTexture: Texture;\n        metallicRoughnessTexture: Texture;\n        normalsTexture: Texture;\n        emissiveTexture: Texture;\n        occlusionTexture: Texture;\n    }) {\n        this.id = params.id;\n        this.colorTexture = params.colorTexture;\n        this.metallicRoughnessTexture = params.metallicRoughnessTexture;\n        this.normalsTexture = params.normalsTexture;\n        this.emissiveTexture = params.emissiveTexture;\n        this.occlusionTexture = params.occlusionTexture;\n    }\n}\n","import type {Texture2D} from \"../lib/Texture2D\";\n\n/**\n * Instantiated internally by W{@link WebGLSceneModel.createTexture}.\n */\nexport class Texture {\n    id: any;\n    texture: Texture2D;\n\n    constructor(params: { id: any; texture: Texture2D; }) {\n        this.id = params.id;\n        this.texture = params.texture;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        if (this.texture) {\n            this.texture.destroy();\n        }\n    }\n}\n","import {SceneObject, SceneModel, math} from \"../../viewer/index\";\nimport {SCENE_OBJECT_FLAGS} from './SCENE_OBJECT_FLAGS';\nimport type {Mesh} from \"./Mesh\";\n\nconst tempIntRGB = new Uint16Array([0, 0, 0]);\n\nclass WebGLSceneObject implements SceneObject {\n\n    /**\n     * Unique ID of this SceneObject.\n     */\n    readonly id: string;\n\n    /**\n     * The SceneModel that contains this SceneObject.\n     */\n    readonly model: SceneModel;\n\n    /**\n     * Which {@link ViewLayer} this SceneObject belongs to.\n     */\n    readonly viewLayerId: string | null ;\n\n    #meshes: Mesh[];\n    #flags: number;\n    #aabb: math.FloatArrayParam;\n    #offsetAABB: math.FloatArrayParam;\n    #offset: math.FloatArrayParam;\n    #colorizeUpdated: boolean;\n    #opacityUpdated: boolean;\n\n    constructor(params: {\n        id: string,\n        sceneModel: SceneModel,\n        meshes: Mesh[],\n        aabb: any,\n        viewLayerId?:string\n    }) {\n        this.id = params.id;\n        this.model = params.sceneModel;\n        this.#meshes = params.meshes || [];\n        this.#flags = 0;\n        this.#aabb = params.aabb;\n        this.#offsetAABB = math.boundaries.AABB3(params.aabb);\n        this.#offset = math.vec3();\n        this.#colorizeUpdated = false;\n        this.#opacityUpdated = false;\n\n        this.viewLayerId = params.viewLayerId||null;\n\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {  // TODO: tidier way? Refactor?\n            const mesh = this.#meshes[i];\n            mesh.setSceneObject(this);\n        }\n    }\n\n    get aabb(): math.FloatArrayParam {\n        return this.#offsetAABB;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.VISIBLE) === visible) {\n            return;\n        }\n        this.#flags = visible ? this.#flags | SCENE_OBJECT_FLAGS.VISIBLE : this.#flags & ~SCENE_OBJECT_FLAGS.VISIBLE;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setVisible(this.#flags);\n        }\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.HIGHLIGHTED) === highlighted) {\n            return;\n        }\n        this.#flags = highlighted ? this.#flags | SCENE_OBJECT_FLAGS.HIGHLIGHTED : this.#flags & ~SCENE_OBJECT_FLAGS.HIGHLIGHTED;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setHighlighted(this.#flags);\n        }\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.XRAYED) === xrayed) {\n            return;\n        }\n        this.#flags = xrayed ? this.#flags | SCENE_OBJECT_FLAGS.XRAYED : this.#flags & ~SCENE_OBJECT_FLAGS.XRAYED;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setXRayed(this.#flags);\n        }\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.SELECTED) === selected) {\n            return;\n        }\n        this.#flags = selected ? this.#flags | SCENE_OBJECT_FLAGS.SELECTED : this.#flags & ~SCENE_OBJECT_FLAGS.SELECTED;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setSelected(this.#flags);\n        }\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.EDGES) === edges) {\n            return;\n        }\n        this.#flags = edges ? this.#flags | SCENE_OBJECT_FLAGS.EDGES : this.#flags & ~SCENE_OBJECT_FLAGS.EDGES;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setEdges(this.#flags);\n        }\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.CULLED) === culled) {\n            return;\n        }\n        this.#flags = culled ? this.#flags | SCENE_OBJECT_FLAGS.CULLED : this.#flags & ~SCENE_OBJECT_FLAGS.CULLED;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setCulled(this.#flags);\n        }\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        if ((!!(this.#flags & SCENE_OBJECT_FLAGS.CLIPPABLE)) === clippable) {\n            return;\n        }\n        this.#flags = clippable ? this.#flags | SCENE_OBJECT_FLAGS.CLIPPABLE : this.#flags & ~SCENE_OBJECT_FLAGS.CLIPPABLE;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setClippable(this.#flags);\n        }\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.COLLIDABLE) === collidable) {\n            return;\n        }\n        this.#flags = collidable ? this.#flags | SCENE_OBJECT_FLAGS.COLLIDABLE : this.#flags & ~SCENE_OBJECT_FLAGS.COLLIDABLE;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setCollidable(this.#flags);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        if (!!(this.#flags & SCENE_OBJECT_FLAGS.PICKABLE) === pickable) {\n            return;\n        }\n        this.#flags = pickable ? this.#flags | SCENE_OBJECT_FLAGS.PICKABLE : this.#flags & ~SCENE_OBJECT_FLAGS.PICKABLE;\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setPickable(this.#flags);\n        }\n    }\n\n    setColorize(viewIndex: number, color?: math.FloatArrayParam): void { // [0..1, 0..1, 0..1]\n        if (color) {\n            tempIntRGB[0] = Math.floor(color[0] * 255.0); // Quantize\n            tempIntRGB[1] = Math.floor(color[1] * 255.0);\n            tempIntRGB[2] = Math.floor(color[2] * 255.0);\n            for (let i = 0, len = this.#meshes.length; i < len; i++) {\n                this.#meshes[i].setColorize(tempIntRGB);\n            }\n        } else {\n            for (let i = 0, len = this.#meshes.length; i < len; i++) {\n                this.#meshes[i].setColorize(null);\n            }\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity?: number): void {\n        if (this.#meshes.length === 0) {\n            return;\n        }\n        // @ts-ignore\n        const lastOpacityQuantized = this.#meshes[0].colorize[3];\n        let opacityQuantized = 255;\n        if (opacity !== null && opacity !== undefined) {\n            if (opacity < 0) {\n                opacity = 0;\n            } else if (opacity > 1) {\n                opacity = 1;\n            }\n            opacityQuantized = Math.floor(opacity * 255.0); // Quantize\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        } else {\n            opacityQuantized = 255.0;\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        }\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setOpacity(opacityQuantized, this.#flags);\n        }\n    }\n\n    setOffset(viewIndex: number, offset: math.FloatArrayParam): void {\n        if (offset) {\n            this.#offset[0] = offset[0];\n            this.#offset[1] = offset[1];\n            this.#offset[2] = offset[2];\n        } else {\n            this.#offset[0] = 0;\n            this.#offset[1] = 0;\n            this.#offset[2] = 0;\n        }\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].setOffset(this.#offset);\n        }\n        this.#offsetAABB[0] = this.#aabb[0] + this.#offset[0];\n        this.#offsetAABB[1] = this.#aabb[1] + this.#offset[1];\n        this.#offsetAABB[2] = this.#aabb[2] + this.#offset[2];\n        this.#offsetAABB[3] = this.#aabb[3] + this.#offset[0];\n        this.#offsetAABB[4] = this.#aabb[4] + this.#offset[1];\n        this.#offsetAABB[5] = this.#aabb[5] + this.#offset[2];\n        // this.scene.#aabbDirty = true;\n        // this.scene._objectOffsetUpdated(this, offset);\n        // this.sceneModel._aabbDirty = true;\n        // this.sceneModel.glRedraw();\n    }\n\n    build(): void {\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].build(this.#flags);\n        }\n    }\n\n    finalize2(): void {\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].finalize2();\n        }\n    }\n\n    destroy(): void { // Called by WebGLSceneModel\n        for (let i = 0, len = this.#meshes.length; i < len; i++) {\n            this.#meshes[i].destroy();\n        }\n    }\n}\n\nexport {WebGLSceneObject};","import {\n    Component,\n    Scene,\n    View,\n    SceneModel,\n    math,\n    GeometryParams,\n    MeshParams,\n    Renderer,\n    SceneObjectParams,\n    TextureParams,\n    TextureSetParams,\n    SceneObject,\n    Transform,\n    GeometryCompressedParams, EventEmitter, Camera\n} from \"../../viewer/index\";\n\nimport {Texture2D} from \"../lib/Texture2D\";\nimport type {WebGLRenderer} from \"../WebGLRenderer\";\nimport {Layer, LayerParams} from \"./Layer\";\nimport {Mesh} from './Mesh';\nimport {TextureSet} from \"./TextureSet\";\nimport {Texture} from \"./Texture\";\nimport {WebGLSceneObject} from \"./WebGLSceneObject\";\n\nimport {\n    ClampToEdgeWrapping,\n    LinearEncoding,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipMapNearestFilter,\n    LinesPrimitive,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipMapLinearFilter,\n    NearestMipMapNearestFilter,\n    PointsPrimitive,\n    RepeatWrapping,\n    SolidPrimitive,\n    sRGBEncoding,\n    SurfacePrimitive,\n    TrianglesPrimitive\n} from \"../../viewer/constants\";\n\nimport {compressGeometryParams} from \"../../viewer/math/compression/compression\";\n\nimport type {TransformParams} from \"../../viewer/scene/TransformParams\";\nimport type {TextureTranscoder} from \"../../viewer/textureTranscoders/TextureTranscoder\";\nimport type {RenderContext} from \"../RenderContext\";\nimport {createUUID, loadArraybuffer} from \"../../viewer/utils\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport type {FloatArrayParam} from \"../../viewer/math\";\n\nconst tempVec3a = math.vec3();\nconst tempMat4 = math.mat4();\n\nconst defaultScale = math.vec3([1, 1, 1]);\nconst defaultPosition = math.vec3([0, 0, 0]);\nconst defaultRotation = math.vec3([0, 0, 0]);\nconst defaultQuaternion = math.identityQuaternion();\n\nconst defaultColorTextureId = \"defaultColorTexture\";\nconst defaultMetalRoughTextureId = \"defaultMetalRoughTexture\";\nconst defaultNormalsTextureId = \"defaultNormalsTexture\";\nconst defaultEmissiveTextureId = \"defaultEmissiveTexture\";\nconst defaultOcclusionTextureId = \"defaultOcclusionTexture\";\nconst defaultTextureSetId = \"defaultTextureSet\";\n\nexport class WebGLSceneModel extends Component implements SceneModel {\n\n    readonly qualityRender: boolean;\n    declare readonly id: string;\n    readonly scene: Scene;\n    declare readonly destroyed: boolean;\n\n    objects: { [key: string]: WebGLSceneObject };\n    objectList: WebGLSceneObject[];\n\n    #view: View;\n    #webglRenderer: WebGLRenderer;\n    #renderContext: RenderContext;\n\n    #origin: math.FloatArrayParam;\n    #position: math.FloatArrayParam;\n    #rotation: math.FloatArrayParam;\n    #quaternion: math.FloatArrayParam;\n    #scale: math.FloatArrayParam;\n    #worldMatrix: math.FloatArrayParam;\n    #viewMatrix: math.FloatArrayParam;\n\n    #colorTextureEnabled: boolean;\n    #backfaces: boolean;\n    #geometries: { [key: string]: GeometryCompressedParams };\n    #textures: { [key: string]: Texture };\n    #textureSets: { [key: string]: TextureSet };\n    #meshes: { [key: string]: Mesh };\n    #layers: { [key: string]: Layer };\n\n    layerList: Layer[];\n\n    #numGeometries: number;\n    #numTriangles: number;\n    #numLines: number;\n    #numPoints: number;\n    #numSceneObjects: number;\n    #textureTranscoder: TextureTranscoder;\n    #aabbDirty: boolean;\n    #lastPositionsDecompressMatrix: math.FloatArrayParam;\n    #edgeThreshold: number;\n    #lastmeshHadNormals: boolean;\n    #currentLayers: { [key: string]: any };\n    #aabb: math.FloatArrayParam;\n    #viewMatrixDirty: boolean;\n    #worldMatrixNonIdentity: boolean;\n    #onCameraViewMatrix: () => void;\n    #built: boolean;\n    #viewLayerId: string | undefined;\n\n    /**\n     * Emits an event when the {@link SceneModel} has been built.\n     *\n     * @event\n     */\n    readonly onBuilt: EventEmitter<SceneModel, null>;\n\n    constructor(params: {\n        id: string;\n        matrix?: math.FloatArrayParam;\n        scale?: math.FloatArrayParam;\n        view: View;\n        scene: Scene;\n        webglRenderer: WebGLRenderer;\n        renderContext: RenderContext;\n        quaternion?: math.FloatArrayParam;\n        rotation?: math.FloatArrayParam;\n        position?: math.FloatArrayParam;\n        origin?: math.FloatArrayParam;\n        edgeThreshold?: number;\n        textureTranscoder: TextureTranscoder;\n        qualityRender?: boolean;\n        viewLayerId?: string;\n    }) {\n\n        super(params.view);\n\n        this.id = params.id;\n        this.scene = params.scene;\n        this.objects = {};\n        this.objectList = [];\n\n        this.#view = params.view;\n        this.#webglRenderer = params.webglRenderer;\n        this.#renderContext = params.renderContext;\n        this.#textureTranscoder = params.textureTranscoder;\n\n        this.#aabb = math.boundaries.collapseAABB3();\n        this.#aabbDirty = false;\n        this.#layers = {};\n        this.layerList = [];\n        this.#currentLayers = {};\n        this.#geometries = {};\n        this.#textures = {};\n        this.#textureSets = {};\n        this.#meshes = {};\n        this.#numGeometries = 0;\n        this.#numSceneObjects = 0;\n\n        this.#numTriangles = 0;\n        this.#numLines = 0;\n        this.#numPoints = 0;\n        this.#edgeThreshold = params.edgeThreshold || 10;\n\n        this.#built = false;\n\n        // Build static matrix\n\n        this.#origin = math.vec3(params.origin || [0, 0, 0]);\n        this.#position = math.vec3(params.position || [0, 0, 0]);\n        this.#rotation = math.vec3(params.rotation || [0, 0, 0]);\n        this.#quaternion = math.vec4(params.quaternion || [0, 0, 0, 1]);\n        if (params.rotation) {\n            math.eulerToQuaternion(this.#rotation, \"XYZ\", this.#quaternion);\n        }\n        this.#scale = math.vec3(params.scale || [1, 1, 1]);\n        this.#worldMatrix = math.mat4();\n        math.composeMat4(this.#position, this.#quaternion, this.#scale, this.#worldMatrix);\n\n        if (params.matrix || params.position || params.rotation || params.scale || params.quaternion) {\n            this.#viewMatrix = math.mat4();\n            this.#viewMatrixDirty = true;\n            this.#worldMatrixNonIdentity = true;\n        }\n\n        this.qualityRender = (params.qualityRender !== false);\n\n        this.#viewLayerId = params.viewLayerId;\n\n        this.#onCameraViewMatrix = this.#view.camera.onViewMatrix.subscribe((camera:Camera, viewMatrix:FloatArrayParam) => {\n            this.#viewMatrixDirty = true;\n        });\n\n        this.#createDefaultTextureSet();\n\n        this.onBuilt = new EventEmitter(new EventDispatcher<SceneModel, null>());\n    }\n\n    get origin(): math.FloatArrayParam {\n        return this.#origin;\n    }\n\n    get position(): math.FloatArrayParam {\n        return this.#position;\n    }\n\n    get rotation(): math.FloatArrayParam {\n        return this.#rotation;\n    }\n\n    get quaternion(): math.FloatArrayParam {\n        return this.#quaternion;\n    }\n\n    get scale(): math.FloatArrayParam {\n        return this.#scale;\n    }\n\n    get worldMatrix(): math.FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get viewMatrix(): math.FloatArrayParam {\n        if (!this.#viewMatrix) {\n            return this.#view.camera.viewMatrix;\n        }\n        if (this.#viewMatrixDirty) {\n            math.mulMat4(this.#view.camera.viewMatrix, this.#worldMatrix, this.#viewMatrix);\n            this.#viewMatrixDirty = false;\n        }\n        return this.#viewMatrix;\n    }\n\n    get colorTextureEnabled() {\n        return this.#colorTextureEnabled;\n    }\n\n    get backfaces(): boolean {\n        return this.#backfaces;\n    }\n\n    set backfaces(backfaces: boolean) {\n        backfaces = !!backfaces;\n        this.#backfaces = backfaces;\n        this.#webglRenderer.setImageDirty();\n    }\n\n    get matrix(): math.FloatArrayParam {\n        return this.#worldMatrix;\n    }\n\n    get aabb(): math.FloatArrayParam {\n        if (this.#aabbDirty) {\n            this.#rebuildAABB();\n        }\n        return this.#aabb;\n    }\n\n    get numTriangles(): number {\n        return this.#numTriangles;\n    }\n\n    get numLines(): number {\n        return this.#numLines;\n    }\n\n    get numPoints(): number {\n        return this.#numPoints;\n    }\n\n    setVisible(viewIndex: number, visible: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setVisible(viewIndex, visible);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setXRayed(viewIndex: number, xrayed: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setXRayed(viewIndex, xrayed);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setHighlighted(viewIndex: number, highlighted: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setHighlighted(viewIndex, highlighted);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setSelected(viewIndex: number, selected: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setSelected(viewIndex, selected);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setEdges(viewIndex: number, edges: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setEdges(viewIndex, edges);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCulled(viewIndex: number, culled: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setCulled(viewIndex, culled);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setClippable(viewIndex: number, clippable: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setClippable(viewIndex, clippable);\n        }\n        this.#webglRenderer.setImageDirty(viewIndex);\n    }\n\n    setCollidable(viewIndex: number, collidable: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setCollidable(viewIndex, collidable);\n        }\n    }\n\n    setPickable(viewIndex: number, pickable: boolean): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setPickable(viewIndex, pickable);\n        }\n    }\n\n    setColorize(viewIndex: number, colorize: math.FloatArrayParam): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setColorize(viewIndex, colorize);\n        }\n    }\n\n    setOpacity(viewIndex: number, opacity: number): void {\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].setOpacity(viewIndex, opacity);\n        }\n    }\n\n    createTransform(transformParams: TransformParams): Transform|null {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        return null;\n    }\n\n    createGeometry(geometryParams: GeometryParams): void {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        const geometryId = geometryParams.id;\n        if (this.#geometries[geometryId]) {\n            this.error(`[createGeometry] Geometry with this ID already created: ${geometryId}`);\n            return;\n        }\n        const primitive = geometryParams.primitive;\n        if (primitive !== PointsPrimitive && primitive !== LinesPrimitive && primitive !== TrianglesPrimitive && primitive !== SolidPrimitive && primitive !== SurfacePrimitive) {\n            this.error(`[createGeometry] Unsupported value for 'primitive': '${primitive}' - supported values are PointsPrimitive, LinesPrimitive, TrianglesPrimitive, SolidPrimitive and SurfacePrimitive`);\n            return;\n        }\n        if (!geometryParams.positions) {\n            this.error(\"[createGeometry] Param expected: `positions`\");\n            return ;\n        }\n        if (!geometryParams.indices && primitive !== PointsPrimitive) {\n            this.error(`[createGeometry] Param expected: indices (required for primitive type)`);\n            return ;\n        }\n        this.#geometries[geometryId] = <GeometryCompressedParams>compressGeometryParams(geometryParams);\n        this.#numGeometries++;\n    }\n\n    createGeometryCompressed(geometryCompressedParams: GeometryCompressedParams): void {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        const geometryId = geometryCompressedParams.id;\n        if (this.#geometries[geometryId]) {\n            this.error(`[createGeometryCompressed] Geometry with this ID already created: ${geometryId}`);\n            return;\n        }\n        const primitive = geometryCompressedParams.primitive;\n        if (primitive !== PointsPrimitive && primitive !== LinesPrimitive && primitive !== TrianglesPrimitive && primitive !== SolidPrimitive && primitive !== SurfacePrimitive) {\n            this.error(`[createGeometryCompressed] Unsupported value for 'primitive': '${primitive}' - supported values are PointsPrimitive, LinesPrimitive, TrianglesPrimitive, SolidPrimitive and SurfacePrimitive`);\n            return;\n        }\n        this.#geometries[geometryId] = geometryCompressedParams;\n        this.#numGeometries++;\n    }\n\n    createTexture(textureParams: TextureParams): void {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        const textureId = textureParams.id;\n        if (textureId === undefined || textureId === null) {\n            this.error(\"[createTexture] Config missing: id\");\n            return;\n        }\n        if (this.#textures[textureId]) {\n            this.error(\"[createTexture] Texture already created: \" + textureId);\n            return;\n        }\n        if (!textureParams.src && !textureParams.image && !textureParams.buffers) {\n            this.error(\"[createTexture] Param expected: `src`, `image' or 'buffers'\");\n            return;\n        }\n        let minFilter = textureParams.minFilter || LinearMipmapLinearFilter;\n        if (minFilter !== LinearFilter &&\n            minFilter !== LinearMipMapNearestFilter &&\n            minFilter !== LinearMipmapLinearFilter &&\n            minFilter !== NearestMipMapLinearFilter &&\n            minFilter !== NearestMipMapNearestFilter) {\n            this.error(`[createTexture] Unsupported value for 'minFilter' - \n            supported values are LinearFilter, LinearMipMapNearestFilter, NearestMipMapNearestFilter, \n            NearestMipMapLinearFilter and LinearMipmapLinearFilter. Defaulting to LinearMipmapLinearFilter.`);\n            minFilter = LinearMipmapLinearFilter;\n        }\n        let magFilter = textureParams.magFilter || LinearFilter;\n        if (magFilter !== LinearFilter && magFilter !== NearestFilter) {\n            this.error(`[createTexture] Unsupported value for 'magFilter' - supported values are LinearFilter and NearestFilter. Defaulting to LinearFilter.`);\n            magFilter = LinearFilter;\n        }\n        let wrapS = textureParams.wrapS || RepeatWrapping;\n        if (wrapS !== ClampToEdgeWrapping && wrapS !== MirroredRepeatWrapping && wrapS !== RepeatWrapping) {\n            this.error(`[createTexture] Unsupported value for 'wrapS' - supported values are ClampToEdgeWrapping, MirroredRepeatWrapping and RepeatWrapping. Defaulting to RepeatWrapping.`);\n            wrapS = RepeatWrapping;\n        }\n        let wrapT = textureParams.wrapT || RepeatWrapping;\n        if (wrapT !== ClampToEdgeWrapping && wrapT !== MirroredRepeatWrapping && wrapT !== RepeatWrapping) {\n            this.error(`[createTexture] Unsupported value for 'wrapT' - supported values are ClampToEdgeWrapping, MirroredRepeatWrapping and RepeatWrapping. Defaulting to RepeatWrapping.`);\n            wrapT = RepeatWrapping;\n        }\n        let wrapR = textureParams.wrapR || RepeatWrapping;\n        if (wrapR !== ClampToEdgeWrapping && wrapR !== MirroredRepeatWrapping && wrapR !== RepeatWrapping) {\n            this.error(`[createTexture] Unsupported value for 'wrapR' - supported values are ClampToEdgeWrapping, MirroredRepeatWrapping and RepeatWrapping. Defaulting to RepeatWrapping.`);\n            wrapR = RepeatWrapping;\n        }\n        let encoding = textureParams.encoding || LinearEncoding;\n        if (encoding !== LinearEncoding && encoding !== sRGBEncoding) {\n            this.error(\"[createTexture] Unsupported value for 'encoding' - supported values are LinearEncoding and sRGBEncoding. Defaulting to LinearEncoding.\");\n            encoding = LinearEncoding;\n        }\n        const texture = new Texture2D({gl: this.#renderContext.gl});\n        if (textureParams.preloadColor) {\n            texture.setPreloadColor(textureParams.preloadColor);\n        }\n        if (textureParams.image) { // Ignore transcoder for Images\n            const image = textureParams.image;\n            image.crossOrigin = \"Anonymous\";\n            texture.setImage(image, {minFilter, magFilter, wrapS, wrapT, wrapR, flipY: textureParams.flipY, encoding});\n\n        } else if (textureParams.src) {\n            const ext = textureParams.src.split('.').pop();\n            switch (ext) { // Don't transcode recognized image file types\n                case \"jpeg\":\n                case \"jpg\":\n                case \"png\":\n                case \"gif\":\n                    const image = new Image();\n                    image.onload = () => {\n                        texture.setImage(image, {\n                            minFilter,\n                            magFilter,\n                            wrapS,\n                            wrapT,\n                            wrapR,\n                            flipY: textureParams.flipY,\n                            encoding\n                        });\n                    };\n                    image.src = textureParams.src; // URL or Base64 string\n                    break;\n                default: // Assume other file types need transcoding\n                    if (!this.#textureTranscoder) {\n                        this.error(`Can't create texture from 'src' - SceneModel needs to be configured with a TextureTranscoder for this file type ('${ext}')`);\n                    } else {\n                        loadArraybuffer(textureParams.src, (arrayBuffer: ArrayBuffer) => {\n                                if (!arrayBuffer.byteLength) {\n                                    this.error(`Can't create texture from 'src': file data is zero length`);\n                                    return;\n                                }\n                                this.#textureTranscoder.transcode([arrayBuffer]).then((compressedTextureData) => {\n                                    texture.setCompressedData(compressedTextureData);\n                                    this.#webglRenderer.setImageDirty();\n                                });\n                            },\n                            (errMsg: string) => {\n                                this.error(`Can't create texture from 'src': ${errMsg}`);\n                            });\n                    }\n                    break;\n            }\n        } else if (textureParams.buffers) { // Buffers implicitly require transcoding\n            if (!this.#textureTranscoder) {\n                this.error(`Can't create texture from 'buffers' - SceneModel needs to be configured with a TextureTranscoder for this option`);\n            } else {\n                this.#textureTranscoder.transcode(textureParams.buffers).then((compressedTextureData) => {\n                    texture.setCompressedData(compressedTextureData);\n                    this.#webglRenderer.setImageDirty();\n                });\n            }\n        }\n        this.#textures[textureId] = new Texture({id: textureId, texture});\n    }\n\n    createTextureSet(textureSetParams: TextureSetParams): void {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        const textureSetId = textureSetParams.id;\n        if (textureSetId === undefined || textureSetId === null) {\n            this.error(\"Config missing: id\");\n            return;\n        }\n        if (this.#textureSets[textureSetId]) {\n            this.error(`Texture set already created: ${textureSetId}`);\n            return;\n        }\n        let colorTexture;\n        if (textureSetParams.colorTextureId !== undefined && textureSetParams.colorTextureId !== null) {\n            colorTexture = this.#textures[textureSetParams.colorTextureId];\n            if (!colorTexture) {\n                this.error(`Texture not found: ${textureSetParams.colorTextureId} - ensure that you create it first with createTexture()`);\n                return;\n            }\n        } else {\n            colorTexture = this.#textures[defaultColorTextureId];\n        }\n        let metallicRoughnessTexture;\n        if (textureSetParams.metallicRoughnessTextureId !== undefined && textureSetParams.metallicRoughnessTextureId !== null) {\n            metallicRoughnessTexture = this.#textures[textureSetParams.metallicRoughnessTextureId];\n            if (!metallicRoughnessTexture) {\n                this.error(`Texture not found: ${textureSetParams.metallicRoughnessTextureId} - ensure that you create it first with createTexture()`);\n                return;\n            }\n        } else {\n            metallicRoughnessTexture = this.#textures[defaultMetalRoughTextureId];\n        }\n        let normalsTexture;\n        if (textureSetParams.normalsTextureId !== undefined && textureSetParams.normalsTextureId !== null) {\n            normalsTexture = this.#textures[textureSetParams.normalsTextureId];\n            if (!normalsTexture) {\n                this.error(`Texture not found: ${textureSetParams.normalsTextureId} - ensure that you create it first with createTexture()`);\n                return;\n            }\n        } else {\n            normalsTexture = this.#textures[defaultNormalsTextureId];\n        }\n        let emissiveTexture;\n        if (textureSetParams.emissiveTextureId !== undefined && textureSetParams.emissiveTextureId !== null) {\n            emissiveTexture = this.#textures[textureSetParams.emissiveTextureId];\n            if (!emissiveTexture) {\n                this.error(`Texture not found: ${textureSetParams.emissiveTextureId} - ensure that you create it first with createTexture()`);\n                return;\n            }\n        } else {\n            emissiveTexture = this.#textures[defaultEmissiveTextureId];\n        }\n        let occlusionTexture;\n        if (textureSetParams.occlusionTextureId !== undefined && textureSetParams.occlusionTextureId !== null) {\n            occlusionTexture = this.#textures[textureSetParams.occlusionTextureId];\n            if (!occlusionTexture) {\n                this.error(`Texture not found: ${textureSetParams.occlusionTextureId} - ensure that you create it first with createTexture()`);\n                return;\n            }\n        } else {\n            occlusionTexture = this.#textures[defaultOcclusionTextureId];\n        }\n        this.#textureSets[textureSetId] = new TextureSet({\n            id: textureSetId,\n            colorTexture,\n            metallicRoughnessTexture,\n            normalsTexture,\n            emissiveTexture,\n            occlusionTexture\n        });\n    }\n\n    createMesh(meshParams: MeshParams): void {\n        if (this.destroyed) {\n            throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        const geometryCompressedParams = this.#geometries[meshParams.geometryId];\n        if (!geometryCompressedParams) {\n            this.error(`[ceateMesh] Geometry not found: ${meshParams.geometryId}`);\n            return;\n        }\n\n        const origin = tempVec3a;\n\n        origin[0] = this.#origin[0];\n        origin[1] = this.#origin[1];\n        origin[2] = this.#origin[2];\n\n        if (geometryCompressedParams.origin) {\n            origin[0] += geometryCompressedParams.origin[0];\n            origin[1] += geometryCompressedParams.origin[1];\n            origin[2] += geometryCompressedParams.origin[2];\n        }\n\n        if (meshParams.origin) {\n            origin[0] += meshParams.origin[0];\n            origin[1] += meshParams.origin[1];\n            origin[2] += meshParams.origin[2];\n        }\n\n        const layer = this.#getLayer(origin, meshParams.textureSetId, geometryCompressedParams);\n\n        if (!layer) {\n            return;\n        }\n\n        if (!layer.hasGeometry(meshParams.geometryId)) {\n            layer.createGeometryCompressed(geometryCompressedParams)\n        }\n\n        const color = (meshParams.color) ? new Uint8Array([Math.floor(meshParams.color[0] * 255), Math.floor(meshParams.color[1] * 255), Math.floor(meshParams.color[2] * 255)]) : [255, 255, 255];\n        const opacity = (meshParams.opacity !== undefined && meshParams.opacity !== null) ? Math.floor(meshParams.opacity * 255) : 255;\n        const metallic = (meshParams.metallic !== undefined && meshParams.metallic !== null) ? Math.floor(meshParams.metallic * 255) : 0;\n        const roughness = (meshParams.roughness !== undefined && meshParams.roughness !== null) ? Math.floor(meshParams.roughness * 255) : 255;\n\n        const mesh = new Mesh({\n            id: meshParams.id,\n            layer,\n            color,\n            opacity\n        });\n\n        mesh.pickId = this.#webglRenderer.registerPickable(mesh);\n\n        const a = mesh.pickId >> 24 & 0xFF;\n        const b = mesh.pickId >> 16 & 0xFF;\n        const g = mesh.pickId >> 8 & 0xFF;\n        const r = mesh.pickId & 0xFF;\n\n        const pickColor = new Uint8Array([r, g, b, a]); // Quantized pick color\n        math.boundaries.collapseAABB3(mesh.aabb);\n        let meshMatrix;\n        let worldMatrix = this.#worldMatrixNonIdentity ? this.#worldMatrix : null;\n        if (meshParams.matrix) {\n            meshMatrix = meshParams.matrix;\n        } else {\n            const scale = meshParams.scale || defaultScale;\n            const position = meshParams.position || defaultPosition;\n            const rotation = meshParams.rotation || defaultRotation;\n            math.eulerToQuaternion(rotation, \"XYZ\", defaultQuaternion);\n            meshMatrix = math.composeMat4(position, defaultQuaternion, scale, tempMat4);\n        }\n        const meshId = layer.createMesh(<MeshParams>{\n            id: meshParams.id,\n            geometryId: meshParams.geometryId,\n            color,\n            opacity,\n            metallic,\n            roughness,\n            matrix: meshMatrix,\n            //     worldMatrix: worldMatrix,\n            //    aabb: mesh.aabb,\n            pickColor\n        });\n        this.#numGeometries++;\n        math.boundaries.expandAABB3(this.#aabb, mesh.aabb);\n        mesh.layer = layer;\n        mesh.meshId = meshId;\n        this.#meshes[meshParams.id] = mesh;\n    }\n\n    createObject(sceneObjectParams: SceneObjectParams): SceneObject {\n        if (this.destroyed) {\n           throw new Error(\"SceneModel already destroyed\");\n        }\n        if (this.#built) {\n            throw new Error(\"SceneModel already built\");\n        }\n        let id = sceneObjectParams.id;\n        if (id === undefined) {\n            id = createUUID();\n        } else if (this.objects[id]) {\n            this.error(\"[createObject] SceneModel already has a SceneObject with this ID: \" + id + \" - will assign random ID\");\n            id = createUUID();\n        }\n        const meshIds = sceneObjectParams.meshIds;\n        if (meshIds === undefined) {\n            throw new Error(\"[createObject] Param expected: meshIds\");\n        }\n        let meshes = [];\n        for (let i = 0, len = meshIds.length; i < len; i++) {\n            const meshId = meshIds[i];\n            const mesh = this.#meshes[meshId];\n            if (!mesh) {\n                this.error(\"Mesh with this ID not found: \" + meshId + \" - ignoring this mesh\");\n                continue;\n            }\n            if (mesh.sceneObject) {\n                this.error(\"Mesh with ID \" + meshId + \" already belongs to object with ID \" + mesh.sceneObject.id + \" - ignoring this mesh\");\n                continue;\n            }\n            meshes.push(mesh);\n        }\n        let aabb;\n        if (meshes.length === 1) {\n            aabb = meshes[0].aabb;\n        } else {\n            aabb = math.boundaries.collapseAABB3();\n            for (let i = 0, len = meshes.length; i < len; i++) {\n                math.boundaries.expandAABB3(aabb, meshes[i].aabb);\n            }\n        }\n        const sceneObject: WebGLSceneObject = new WebGLSceneObject({\n            id,\n            sceneModel: this,\n            meshes,\n            aabb,\n            viewLayerId: (sceneObjectParams.viewLayerId || this.#viewLayerId)\n        });\n        this.objectList.push(sceneObject);\n        this.objects[id] = sceneObject;\n        this.#numSceneObjects++;\n        return sceneObject;\n    }\n\n    build() {\n        if (this.destroyed) {\n            this.log(\"SceneModel already destroyed\");\n            return;\n        }\n        if (this.#built) {\n            this.log(\"SceneModel already built\");\n            return;\n        }\n        for (let layerId in this.#currentLayers) {\n            if (this.#currentLayers.hasOwnProperty(layerId)) {\n                this.#currentLayers[layerId].build();\n            }\n        }\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            const sceneObject = this.objectList[i];\n            sceneObject.build();\n        }\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            const sceneObject = this.objectList[i];\n            sceneObject.finalize2();\n        }\n        // this.layerList.sort((a, b) => {\n        //     if (a.sortId < b.sortId) {\n        //         return -1;\n        //     }\n        //     if (a.sortId > b.sortId) {\n        //         return 1;\n        //     }\n        //     return 0;\n        // });\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            const layer = this.layerList[i];\n            layer.layerIndex = i;\n        }\n        this.#currentLayers = {};\n        this.#webglRenderer.setImageDirty();\n        this.scene.setAABBDirty();\n        this.onBuilt.dispatch(this, null);\n    }\n\n    /*\n    rebuildDrawFlags() {\n        this.drawFlags.reset();\n        this.#updateDrawFlagsVisibleLayers();\n        if (this.drawFlags.numLayers > 0 && this.drawFlags.numVisibleLayers === 0) {\n            this.drawFlags.culled = true;\n            return;\n        }\n        this.#updateDrawFlags();\n    }\n\n    drawColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawDepth(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawDepth(drawFlags, renderContext);\n        }\n    }\n\n    drawNormals(renderContext: RenderContext): void { // Dedicated to SAO because it skips transparent objects\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawNormals(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawSilhouetteSelected(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawSilhouetteSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorOpaque(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorOpaque(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesColorTransparent(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesColorTransparent(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesXRayed(renderContext: RenderContext): void {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesXRayed(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesHighlighted(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesHighlighted(drawFlags, renderContext);\n        }\n    }\n\n    drawEdgesSelected(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawEdgesSelected(drawFlags, renderContext);\n        }\n    }\n\n    drawOcclusion(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawOcclusion(drawFlags, renderContext);\n        }\n    }\n\n    drawShadow(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawShadow(drawFlags, renderContext);\n        }\n    }\n\n    drawPickMesh(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickMesh(drawFlags, renderContext);\n        }\n    }\n\n    drawPickDepths(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickDepths(drawFlags, renderContext);\n        }\n    }\n\n    drawPickNormals(renderContext: RenderContext) {\n        if (this.meshCounts.numVisible === 0) {\n            return;\n        }\n        const drawFlags = this.drawFlags;\n        for (let i = 0, len = drawFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = drawFlags.visibleLayers[i];\n            this.layerList[layerIndex].drawPickNormals(drawFlags, renderContext);\n        }\n    }\n*/\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.#view.camera.onViewMatrix.unsubscribe(this.#onCameraViewMatrix);\n        for (let layerId in this.#currentLayers) {\n            if (this.#currentLayers.hasOwnProperty(layerId)) {\n                this.#currentLayers[layerId].destroy();\n            }\n        }\n        for (let i = 0, len = this.layerList.length; i < len; i++) {\n            this.layerList[i].destroy();\n        }\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            this.objectList[i].destroy();\n        }\n        for (let meshId in this.#meshes) {\n            this.#webglRenderer.deregisterPickable(this.#meshes[meshId].pickId);\n        }\n        this.#currentLayers = {};\n        this.#layers = {};\n        this.layerList = [];\n        this.#geometries = {};\n        this.#textures = {};\n        this.#textureSets = {};\n        this.#meshes = {};\n        this.objects = {};\n        this.scene.setAABBDirty();\n        this.onBuilt.clear();\n        super.destroy();\n    }\n\n    #createDefaultTextureSet() {\n        const defaultColorTexture = new Texture({\n            id: defaultColorTextureId,\n            texture: new Texture2D({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [r, g, b, a]})\n            })\n        });\n        const defaultMetalRoughTexture = new Texture({\n            id: defaultMetalRoughTextureId,\n            texture: new Texture2D({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 1, 1, 1] // [unused, roughness, metalness, unused]\n            })\n        });\n        const defaultNormalsTexture = new Texture({\n            id: defaultNormalsTextureId,\n            texture: new Texture2D({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 0] // [x, y, z, unused] - these must be zeros\n            })\n        });\n        const defaultEmissiveTexture = new Texture({\n            id: defaultEmissiveTextureId,\n            texture: new Texture2D({\n                gl: this.#renderContext.gl,\n                preloadColor: [0, 0, 0, 1] // [x, y, z, unused]\n            })\n        });\n        const defaultOcclusionTexture = new Texture({\n            id: defaultOcclusionTextureId,\n            texture: new Texture2D({\n                gl: this.#renderContext.gl,\n                preloadColor: [1, 1, 1, 1] // [x, y, z, unused]\n            })\n        });\n        this.#textures[defaultColorTextureId] = defaultColorTexture;\n        this.#textures[defaultMetalRoughTextureId] = defaultMetalRoughTexture;\n        this.#textures[defaultNormalsTextureId] = defaultNormalsTexture;\n        this.#textures[defaultEmissiveTextureId] = defaultEmissiveTexture;\n        this.#textures[defaultOcclusionTextureId] = defaultOcclusionTexture;\n        this.#textureSets[defaultTextureSetId] = new TextureSet({\n            id: defaultTextureSetId,\n            colorTexture: defaultColorTexture,\n            metallicRoughnessTexture: defaultMetalRoughTexture,\n            normalsTexture: defaultNormalsTexture,\n            emissiveTexture: defaultEmissiveTexture,\n            occlusionTexture: defaultOcclusionTexture\n        });\n    }\n\n    #getLayer(origin: math.FloatArrayParam, textureSetId: string|undefined, geometryCompressedParams: GeometryCompressedParams): Layer|undefined {\n        const layerId = `${origin[0]}_${origin[1]}_${origin[2]}_${textureSetId}_${geometryCompressedParams.primitive}`;\n        let layer = this.#currentLayers[layerId];\n        if (layer) {\n            if (layer.canCreateMesh(geometryCompressedParams)) {\n                return layer;\n            } else {\n                layer.build();\n                delete this.#currentLayers[layerId];\n            }\n        }\n        let textureSet;\n        if (textureSetId) {\n            textureSet = this.#textureSets[textureSetId];\n            if (!textureSet) {\n                this.error(`TextureSet not found: ${textureSetId} - ensure that you create it first with createTextureSet()`);\n                return;\n            }\n        }\n        layer = new Layer(<LayerParams>{\n            gl: this.#renderContext.gl,\n            view: this.#view,\n            sceneModel: this,\n            primitive: geometryCompressedParams.primitive,\n            origin,\n            textureSet,\n            layerIndex: 0\n        });\n        this.#layers[layerId] = layer;\n        this.layerList.push(layer);\n        this.#currentLayers[layerId] = layer;\n        return layer;\n    }\n\n    #rebuildAABB() {\n        math.boundaries.collapseAABB3(this.#aabb);\n        for (let i = 0, len = this.objectList.length; i < len; i++) {\n            const sceneObject = this.objectList[i];\n            math.boundaries.expandAABB3(this.#aabb, sceneObject.aabb);\n        }\n        this.#aabbDirty = false;\n    }\n\n    /*\n        #getActiveSectionPlanesForLayer(layer: any) {\n            const drawFlags = this.drawFlags;\n            const sectionPlanes = this.#view.sectionPlanesList;\n            const numSectionPlanes = sectionPlanes.length;\n            const baseIndex = layer.layerIndex * numSectionPlanes;\n            if (numSectionPlanes > 0) {\n                for (let i = 0; i < numSectionPlanes; i++) {\n                    const sectionPlane = sectionPlanes[i];\n                    if (!sectionPlane.active) {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = false;\n\n                    } else {\n                        drawFlags.sectionPlanesActivePerLayer[baseIndex + i] = true;\n                        drawFlags.sectioned = true;\n                    }\n                }\n            }\n            return true;\n        }\n\n        #updateDrawFlagsVisibleLayers() {\n            const drawFlags = this.drawFlags;\n            drawFlags.numLayers = this.layerList.length;\n            drawFlags.numVisibleLayers = 0;\n            for (let layerIndex = 0, len = this.layerList.length; layerIndex < len; layerIndex++) {\n                const layer = this.layerList[layerIndex];\n                const layerVisible = this.#getActiveSectionPlanesForLayer(layer);\n                if (layerVisible) {\n                    drawFlags.visibleLayers[drawFlags.numVisibleLayers++] = layerIndex;\n                }\n            }\n        }\n\n        #updateDrawFlags() {\n            if (this.meshCounts.numVisible === 0) {\n                return;\n            }\n            if (this.meshCounts.numCulled === this.meshCounts.numMeshes) {\n                return;\n            }\n            const drawFlags = this.drawFlags;\n            drawFlags.colorOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n            if (this.meshCounts.numTransparent > 0) {\n                drawFlags.colorTransparent = true;\n            }\n            if (this.meshCounts.numXRayed > 0) {\n                const xrayMaterial = this.#view.xrayMaterial.state;\n                if (xrayMaterial.fill) {\n                    if (xrayMaterial.fillAlpha < 1.0) {\n                        drawFlags.xrayedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.xrayedSilhouetteOpaque = true;\n                    }\n                }\n                if (xrayMaterial.edges) {\n                    if (xrayMaterial.edgeAlpha < 1.0) {\n                        drawFlags.xrayedEdgesTransparent = true;\n                    } else {\n                        drawFlags.xrayedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numEdges > 0) {\n                const edgeMaterial = this.#view.edgeMaterial.state;\n                if (edgeMaterial.edges) {\n                    drawFlags.edgesOpaque = (this.meshCounts.numTransparent < this.meshCounts.numMeshes);\n                    if (this.meshCounts.numTransparent > 0) {\n                        drawFlags.edgesTransparent = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numSelected > 0) {\n                const selectedMaterial = this.#view.selectedMaterial.state;\n                if (selectedMaterial.fill) {\n                    if (selectedMaterial.fillAlpha < 1.0) {\n                        drawFlags.selectedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.selectedSilhouetteOpaque = true;\n                    }\n                }\n                if (selectedMaterial.edges) {\n                    if (selectedMaterial.edgeAlpha < 1.0) {\n                        drawFlags.selectedEdgesTransparent = true;\n                    } else {\n                        drawFlags.selectedEdgesOpaque = true;\n                    }\n                }\n            }\n            if (this.meshCounts.numHighlighted > 0) {\n                const highlightMaterial = this.#view.highlightMaterial.state;\n                if (highlightMaterial.fill) {\n                    if (highlightMaterial.fillAlpha < 1.0) {\n                        drawFlags.highlightedSilhouetteTransparent = true;\n                    } else {\n                        drawFlags.highlightedSilhouetteOpaque = true;\n                    }\n                }\n                if (highlightMaterial.edges) {\n                    if (highlightMaterial.edgeAlpha < 1.0) {\n                        drawFlags.highlightedEdgesTransparent = true;\n                    } else {\n                        drawFlags.highlightedEdgesOpaque = true;\n                    }\n                }\n            }\n        }\n\n     */\n}\n\n\n\n","export class Shader {\n\n    errors: string[];\n    allocated: boolean;\n    compiled: boolean;\n    handle: WebGLShader;\n\n    constructor(gl: WebGL2RenderingContext, type: number, source: string) {\n        this.allocated = false;\n        this.compiled = false;\n        // @ts-ignore\n        this.handle = gl.createShader(type);\n        if (!this.handle) {\n            this.errors = [\n                \"Failed to allocate\"\n            ];\n            return;\n        }\n        this.allocated = true;\n        gl.shaderSource(this.handle, source);\n        gl.compileShader(this.handle);\n        this.compiled = gl.getShaderParameter(this.handle, gl.COMPILE_STATUS);\n        if (!this.compiled) {\n            if (!gl.isContextLost()) { // Handled explicitly elsewhere, so won't re-handle here\n                const lines = source.split(\"\\n\");\n                const numberedLines = [];\n                for (let i = 0; i < lines.length; i++) {\n                    numberedLines.push((i + 1) + \": \" + lines[i] + \"\\n\");\n                }\n                this.errors = [];\n                this.errors.push(\"\");\n                this.errors.push(gl.getShaderInfoLog(this.handle) || \"\");\n                this.errors = this.errors.concat(numberedLines.join(\"\"));\n            }\n        }\n    }\n\n    destroy() {\n\n    }\n}","\nimport type {Texture2D} from \"./Texture2D\";\nimport type {DataTexture} from \"./DataTexture\";\nimport type {Texture} from \"./Texture\";\n\nexport class Sampler {\n\n    private readonly location: WebGLUniformLocation;\n    private readonly gl: WebGL2RenderingContext;\n\n    constructor(gl: WebGL2RenderingContext, location: WebGLUniformLocation) {\n        this.gl = gl;\n        this.location = location;\n    }\n\n    bindTexture(texture: Texture2D|DataTexture|Texture, unit: number) {\n        if (texture.bind(unit)) {\n            this.gl.uniform1i(this.location, unit);\n            return true;\n        }\n        return false;\n    }\n}\n","import type {ArrayBuf} from \"./ArrayBuf\";\n\nexport class Attribute {\n    gl: WebGL2RenderingContext;\n    location: number;\n\n    constructor(gl: WebGL2RenderingContext, location: number) {\n        this.gl = gl;\n        this.location = location;\n    }\n\n    bindArrayBuffer(arrayBuf: ArrayBuf) {\n        if (!arrayBuf) {\n            return;\n        }\n        arrayBuf.bind();\n        this.gl.enableVertexAttribArray(this.location);\n        this.gl.vertexAttribPointer(this.location, arrayBuf.itemSize, arrayBuf.itemType, arrayBuf.normalized, arrayBuf.stride, arrayBuf.offset);\n    }\n}\n","import {Map} from \"../../viewer/utils\";\n\nimport {Shader} from \"./Shader\";\nimport {Sampler} from \"./Sampler\";\nimport {Attribute} from \"./Attribute\";\nimport type {Texture} from \"./Texture\";\n\nconst ids = new Map({}, \"\");\n\nexport class Program {\n\n    id: number;\n    vertexShader: Shader;\n    fragmentShader: Shader;\n    attributes: { [key: string]: Attribute };\n    samplers: { [key: string]: Sampler };\n    uniforms: { [key: string]: WebGLUniformLocation };\n    errors: string[];\n    validated: boolean;\n    linked: boolean;\n    compiled: boolean;\n    allocated: boolean;\n    gl: WebGL2RenderingContext;\n    source: any;\n    handle: WebGLProgram;\n\n    constructor(gl: WebGL2RenderingContext, shaderSource: any) {\n\n        // @ts-ignore\n        this.id = ids.addItem({});\n        this.source = shaderSource;\n        this.gl = gl;\n        this.allocated = false;\n        this.compiled = false;\n        this.linked = false;\n        this.validated = false;\n        this.errors = [];\n        this.uniforms = {};\n        this.samplers = {};\n        this.attributes = {};\n\n        this.vertexShader = new Shader(gl, gl.VERTEX_SHADER, this.source.vertex);\n        this.fragmentShader = new Shader(gl, gl.FRAGMENT_SHADER, this.source.fragment);\n\n        if (!this.vertexShader.allocated) {\n            this.errors = [\"Vertex shader failed to allocate\"].concat(this.vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        if (!this.fragmentShader.allocated) {\n            this.errors = [\"Fragment shader failed to allocate\"].concat(this.fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        this.allocated = true;\n\n        if (!this.vertexShader.compiled) {\n            this.errors = [\"Vertex shader failed to compile\"].concat(this.vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        if (!this.fragmentShader.compiled) {\n            this.errors = [\"Fragment shader failed to compile\"].concat(this.fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n\n        this.compiled = true;\n        // @ts-ignore\n        this.handle = gl.createProgram();\n\n        if (!this.handle) {\n            this.errors = [\"Failed to allocate program\"];\n            return;\n        }\n\n        gl.attachShader(this.handle, this.vertexShader.handle);\n        gl.attachShader(this.handle, this.fragmentShader.handle);\n        gl.linkProgram(this.handle);\n\n        this.linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n\n        // HACK: Disable validation temporarily: https://github.com/xeolabs/xeokit-sdk/issues/5\n        // Perhaps we should defer validation until render-time, when the program has values set for all inputs?\n\n        this.validated = true;\n\n        if (!this.linked || !this.validated) {\n            this.errors = [];\n            this.errors.push(\"\");\n            // @ts-ignore\n            this.errors.push(gl.getProgramInfoLog(this.handle));\n            this.errors.push(\"\\nVertex shader:\\n\");\n            this.errors = this.errors.concat(this.source.vertex);\n            this.errors.push(\"\\nFragment shader:\\n\");\n            this.errors = this.errors.concat(this.source.fragment);\n            logErrors(this.errors);\n            return;\n        }\n\n        const numUniforms = gl.getProgramParameter(this.handle, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < numUniforms; ++i) {\n            const u = gl.getActiveUniform(this.handle, i);\n            if (u) {\n                let uName = u.name;\n                if (uName[uName.length - 1] === \"\\u0000\") {\n                    uName = uName.substr(0, uName.length - 1);\n                }\n                const location = gl.getUniformLocation(this.handle, uName);\n                if ((u.type === gl.SAMPLER_2D) || (u.type === gl.SAMPLER_CUBE) || (u.type === 35682)) {\n                    // @ts-ignore\n                    this.samplers[uName] = new Sampler(gl, location);\n                } else {\n                    // @ts-ignore\n                    this.uniforms[uName] = location;\n                }\n            }\n        }\n\n        const numAttribs = gl.getProgramParameter(this.handle, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < numAttribs; i++) {\n            const a = gl.getActiveAttrib(this.handle, i);\n            if (a) {\n                const location = gl.getAttribLocation(this.handle, a.name);\n                this.attributes[a.name] = new Attribute(gl, location);\n            }\n        }\n\n        this.allocated = true;\n    }\n\n    bind() {\n        if (!this.allocated) {\n            return;\n        }\n        this.gl.useProgram(this.handle);\n    }\n\n    getLocation(name: string): WebGLUniformLocation {\n        return this.uniforms[name];\n    }\n\n    getAttribute(name: string): Attribute {\n        return this.attributes[name];\n    }\n\n    getSampler(name: string): Sampler {\n        return this.samplers[name];\n    }\n\n    bindTexture(name: string, texture: Texture, unit: number): boolean {\n        if (!this.allocated) {\n            return false;\n        }\n        const sampler = this.samplers[name];\n        if (sampler) {\n            return sampler.bindTexture(texture, unit);\n        } else {\n            return false;\n        }\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        ids.removeItem(this.id);\n        this.gl.deleteProgram(this.handle);\n        this.gl.deleteShader(this.vertexShader.handle);\n        this.gl.deleteShader(this.fragmentShader.handle);\n        this.attributes = {};\n        this.uniforms = {};\n        this.samplers = {};\n        this.allocated = false;\n    }\n}\n\nfunction joinSansComments(srcLines: string[]) {\n    const src = [];\n    let line;``\n    for (let i = 0, len = srcLines.length; i < len; i++) {\n         line = srcLines[i];\n        const n = line.indexOf(\"/\");\n        if (n > 0) {\n            if (line.charAt(n + 1) === \"/\") {\n                line = line.substring(0, n);\n            }\n        }\n        src.push(line);\n    }\n    return src.join(\"\\n\");\n}\n\nfunction logErrors(errors: string[]) {\n    console.error(errors.join(\"\\n\"));\n}\n","import {AmbientLight, DirLight, math, Perspective, PointLight} from \"../../viewer/index\";\nimport type {RenderContext} from \"../RenderContext\";\n\nimport {RENDER_PASSES} from \"../WebGLSceneModel/RENDER_PASSES\";\nimport {Program} from \"../lib/Program\";\nimport type {Sampler} from \"../lib/Sampler\";\nimport type {Layer} from \"../WebGLSceneModel/Layer\";\nimport {OrthoProjectionType} from \"../../viewer/constants\";\n\nconst tempVec4 = math.vec4();\n\n/**\n * @private\n */\nexport abstract class LayerRenderer {\n\n    /**\n     * Initialization error messages\n     */\n    errors: string[] | undefined;\n\n    protected renderContext: RenderContext;\n\n    #hash: string;\n    #program: Program|null;\n    #needRebuild: boolean;\n\n    #uniforms: {\n        renderPass: WebGLUniformLocation,\n        viewMatrix: WebGLUniformLocation,\n        projMatrix: WebGLUniformLocation,\n        worldMatrix: WebGLUniformLocation,\n        sectionPlanes: {\n            pos: WebGLUniformLocation,\n            dir: WebGLUniformLocation,\n            active: WebGLUniformLocation\n        }[];\n        lights: {\n            pos?: WebGLUniformLocation,\n            dir?: WebGLUniformLocation,\n            color: WebGLUniformLocation,\n            attenuation?: WebGLUniformLocation\n        }[];\n        pickInvisible: WebGLUniformLocation;\n        pickZFar: WebGLUniformLocation;\n        pickZNear: WebGLUniformLocation;\n        pointCloudIntensityRange: WebGLUniformLocation;\n        nearPlaneHeight: WebGLUniformLocation;\n        pointSize: WebGLUniformLocation;\n        gammaFactor: WebGLUniformLocation;\n        logDepthBufFC: WebGLUniformLocation;\n        sao: WebGLUniformLocation;\n        lightAmbient: WebGLUniformLocation;\n        color: WebGLUniformLocation;\n    }\n\n    #samplers: {\n        positions: Sampler;\n        indices: Sampler;\n        edgeIndices: Sampler;\n        eachMeshMatrices: Sampler;\n        eachMeshAttributes: Sampler;\n        //    eachMeshOffsets: Sampler;\n        eachEdgeOffset: Sampler;\n        eachPrimitiveMesh: Sampler;\n        eachEdgeMesh: Sampler;\n        baseColorMap: Sampler;\n        metallicRoughMap: Sampler;\n        emissiveMap: Sampler;\n        normalMap: Sampler;\n        occlusionMap: Sampler;\n    };\n\n    protected constructor(renderContext: RenderContext) {\n        this.renderContext = renderContext;\n        this.#needRebuild = true;\n        this.#build();\n    }\n\n    #build(): void {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n\n        this.#program = new Program(gl, this.#buildShader());\n\n        if (this.#program.errors) {\n            this.errors = this.#program.errors;\n            return;\n        }\n\n        const program = this.#program;\n\n        this.#uniforms = {\n            renderPass: program.getLocation(\"renderPass\"),\n            viewMatrix: program.getLocation(\"viewMatrix\"),\n            projMatrix: program.getLocation(\"projMatrix\"),\n            worldMatrix: program.getLocation(\"worldMatrix\"),\n            sao: program.getLocation(\"sao\"),\n            logDepthBufFC: program.getLocation(\"logDepthBufFC\"),\n            gammaFactor: program.getLocation(\"gammaFactor\"),\n            pointSize: program.getLocation(\"pointSize\"),\n            nearPlaneHeight: program.getLocation(\"nearPlaneHeight\"),\n            pointCloudIntensityRange: program.getLocation(\"pointCloudIntensityRange\"),\n            pickZNear: program.getLocation(\"pickZNear\"),\n            pickZFar: program.getLocation(\"pickZFar\"),\n            pickInvisible: program.getLocation(\"pickInvisible\"),\n            color: program.getLocation(\"color\"),\n            lightAmbient: program.getLocation(\"lightAmbient\"),\n            lights: [],\n            sectionPlanes: []\n        };\n\n        const uniforms = this.#uniforms;\n\n        const lights = view.lightsList;\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light: any = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        dir: program.getLocation(\"lightDir\" + i)\n                    });\n                    break;\n                case \"point\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n                case \"spot\":\n                    uniforms.lights.push({\n                        color: program.getLocation(\"lightColor\" + i),\n                        pos: program.getLocation(\"lightPos\" + i),\n                        dir: program.getLocation(\"lightDir\" + i),\n                        attenuation: program.getLocation(\"lightAttenuation\" + i)\n                    });\n                    break;\n            }\n        }\n\n        for (let i = 0, len = view.sectionPlanesList.length; i < len; i++) {\n            uniforms.sectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this.#samplers = {\n            positions: program.getSampler(\"positions\"),\n            indices: program.getSampler(\"indices\"),\n            edgeIndices: program.getSampler(\"edgeIndices\"),\n            eachMeshAttributes: program.getSampler(\"eachMeshAttributes\"),\n            eachMeshMatrices: program.getSampler(\"eachMeshMatrices\"),\n            eachEdgeOffset: program.getSampler(\"eachMeshOffset\"),\n            eachPrimitiveMesh: program.getSampler(\"eachMeshTriangleMesh\"),\n            eachEdgeMesh: program.getSampler(\"eachEdgeMesh\"),\n            baseColorMap: program.getSampler(\"baseColorMap\"),\n            metallicRoughMap: program.getSampler(\"metallicRoughMap\"),\n            emissiveMap: program.getSampler(\"emissiveMap\"),\n            normalMap: program.getSampler(\"normalMap\"),\n            occlusionMap: program.getSampler(\"occlusionMap\")\n        };\n\n        this.#hash = this.getHash();\n    }\n\n    #buildShader() {\n        return {\n            vertex: this.buildVertexShader(),\n            fragment: this.buildFragmentShader()\n        };\n    }\n\n    /**\n     * Generates vertex shader GLSL for the current View state\n     */\n    protected abstract buildVertexShader(): string;\n\n    /**\n     * Generates fragment shader GLSL for the current View state\n     */\n    protected abstract buildFragmentShader(): string;\n\n    /**\n     * Gets a hash for the View's current configuration as pertaining to the LayerRenderer.\n     */\n    protected abstract getHash(): string;\n\n    /**\n     * Indicates that the LayerRenderer may need to rebuild shaders\n     */\n    needRebuild() {\n        this.#needRebuild = true;\n    }\n\n    /**\n     * Gets if this LayerRenderer's configuration is still valid for the current View state.\n     */\n    #getValid() {\n        if (!this.#needRebuild) {\n            return true;\n        }\n        this.#needRebuild = false;\n        return this.#hash === this.getHash();\n    };\n\n    /**\n     * Draws the given Layer.\n     *\n     * @param layer The Layer to draw\n     */\n    draw(layer: Layer) {\n\n        if (this.#program && !this.#getValid()) {\n            this.#program.destroy();\n            this.#program = null;\n        }\n\n        if (!this.#program) {\n            this.#build();\n            if (this.errors) {\n                return;\n            }\n            this.renderContext.lastProgramId = -1;\n        }\n\n        const renderState = layer.renderState;\n        const program = this.#program;\n        const renderContext = this.renderContext;\n        const renderPass = renderContext.renderPass;\n        const gl = this.renderContext.gl;\n        const view = this.renderContext.view;\n        const uniforms = this.#uniforms;\n        const samplers = this.#samplers;\n\n        // @ts-ignore\n        if (renderContext.lastProgramId !== program.id) {\n            // @ts-ignore\n            renderContext.lastProgramId = program.id;\n            this.#bind();\n        }\n\n        if (uniforms.renderPass) {\n            gl.uniform1i(uniforms.renderPass, renderPass);\n        }\n\n        if (uniforms.viewMatrix) {\n            gl.uniformMatrix4fv(uniforms.viewMatrix, false, <Float32Array | GLfloat[]>layer.rtcViewMat.viewMatrix);\n        }\n\n        if (uniforms.projMatrix) {\n            gl.uniformMatrix4fv(uniforms.projMatrix, false, <Float32Array | GLfloat[]>view.camera.projMatrix);\n        }\n\n        if (uniforms.worldMatrix) {\n            gl.uniformMatrix4fv(uniforms.worldMatrix, false, <Float32Array | GLfloat[]>layer.sceneModel.worldMatrix);\n        }\n\n        if (uniforms.color) {\n            if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n                const material = view.xrayMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n                const material = view.highlightMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n                const material = view.selectedMaterial;\n                const fillColor = material.fillColor;\n                const fillAlpha = material.fillAlpha;\n                gl.uniform4f(uniforms.color, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n            } else {\n                gl.uniform4fv(uniforms.color, new Float32Array([1, 1, 1]));\n            }\n        }\n\n        // if (view.sectionPlanesList.length) {\n        //     const numSectionPlanes = view.sectionPlanesList.length;\n        //     const origin = layer.renderState.origin;\n        //     const sectionPlanes = view.sectionPlanesList;\n        //     const baseIndex = layer.layerIndex * numSectionPlanes;\n        //     const drawFlags = sceneModel.drawFlags;\n        //     for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n        //         const sectionPlaneUniforms = this.#uniforms.sectionPlanes[sectionPlaneIndex];\n        //         if (sectionPlaneUniforms) {\n        //             const active = drawFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n        //             gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n        //             if (active) {\n        //                 const sectionPlane = sectionPlanes[sectionPlaneIndex];\n        //                 if (origin) {\n        //                     const rtcSectionPlanePos = math.rtc.getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, origin, tempVec3a);\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n        //                 } else {\n        //                     gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n        //                 }\n        //                 gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n        //             }\n        //         }\n        //     }\n        // }\n\n        if (samplers.positions) {\n            // @ts-ignore\n            renderState.dataTextureSet.positions.bindTexture(program, samplers.positions, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshMatrices) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshMatrices.bindTexture(program, samplers.eachMeshMatrices, renderContext.nextTextureUnit);\n        }\n        if (samplers.eachMeshAttributes) {\n            // @ts-ignore\n            renderState.dataTextureSet.eachMeshAttributes.bindTexture(program, samplers.eachMeshAttributes, renderContext.nextTextureUnit);\n        }\n        // if (samplers.eachMeshOffsets) {\n        //     //    renderState.dataTextureSet.eachMeshOffset.bindTexture(program, samplers.eachMeshOffsets, renderContext.nextTextureUnit);\n        // }\n        if (samplers.eachPrimitiveMesh) {\n            if (renderState.numIndices8Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_8Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_8Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices8Bits);\n            }\n            if (renderState.numIndices16Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_16Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_16Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices16Bits);\n            }\n            if (renderState.numIndices32Bits > 0) {\n                // @ts-ignore\n                renderState.dataTextureSet.eachPrimitiveMesh_32Bits.bindTexture(program, samplers.eachPrimitiveMesh, renderContext.nextTextureUnit);\n                // @ts-ignore\n                renderState.dataTextureSet.indices_32Bits.bindTexture(program, samplers.indices, renderContext.nextTextureUnit);\n                gl.drawArrays(gl.TRIANGLES, 0, renderState.numIndices32Bits);\n            }\n        }\n        if (samplers.baseColorMap) {\n            samplers.baseColorMap.bindTexture(renderState.materialTextureSet.colorTexture.texture, renderContext.nextTextureUnit);\n        }\n        if (samplers.metallicRoughMap) {\n            samplers.metallicRoughMap.bindTexture(renderState.materialTextureSet.metallicRoughnessTexture.texture, renderContext.nextTextureUnit);\n        }\n        if (samplers.emissiveMap) {\n            samplers.emissiveMap.bindTexture(renderState.materialTextureSet.emissiveTexture.texture, renderContext.nextTextureUnit);\n        }\n        if (samplers.normalMap) {\n            samplers.normalMap.bindTexture(renderState.materialTextureSet.normalsTexture.texture, renderContext.nextTextureUnit);\n        }\n        if (samplers.occlusionMap) {\n            samplers.occlusionMap.bindTexture(renderState.materialTextureSet.occlusionTexture.texture, renderContext.nextTextureUnit);\n        }\n    }\n\n    #bind() {\n\n        const view = this.renderContext.view;\n        const gl = this.renderContext.gl;\n        const uniforms = this.#uniforms;\n        const project = view.camera.project;\n\n        // @ts-ignore\n        this.#program.bind();\n        // if (this.#uProjMatrix) {\n        //     gl.uniformMatrix4fv(this.#uProjMatrix, false, project.matrix);\n        // }\n        if (uniforms.lightAmbient) {      // @ts-ignore\n            gl.uniform4fv(uniforms.lightAmbient, view.getAmbientColorAndIntensity());\n        }\n        for (let i = 0, len = uniforms.lights.length; i < len; i++) {\n            const fragLightSourceUniforms = uniforms.lights[i];\n            const light = view.lightsList[i];\n            if (fragLightSourceUniforms.color) {\n                gl.uniform4f(fragLightSourceUniforms.color, light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (fragLightSourceUniforms.dir) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.dir, light.dir[0], light.dir[1], light.dir[2]);\n            }\n            if (fragLightSourceUniforms.pos) { // @ts-ignore\n                gl.uniform3f(fragLightSourceUniforms.pos, light.pos[0], light.pos[1], light.pos[2]);\n            }\n            if (fragLightSourceUniforms.attenuation) { // @ts-ignore\n                gl.uniform1f(fragLightSourceUniforms.attenuation, light.attenuation);\n            }\n        }\n        if (uniforms.sao) {\n            const sao = view.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                // @ts-ignore\n                gl.uniform4fv(uniforms.sao, tempVec4);\n                // program.bindTexture(this.#uOcclusionTexture, renderContext.occlusionTexture, 0);\n            }\n        }\n        if (uniforms.gammaFactor) {\n            gl.uniform1f(uniforms.gammaFactor, view.gammaFactor);\n        }\n        if (uniforms.pointSize) {\n            gl.uniform1f(uniforms.pointSize, view.pointsMaterial.pointSize);\n        }\n        if (uniforms.nearPlaneHeight) {\n            gl.uniform1f(uniforms.nearPlaneHeight, (view.camera.projection === OrthoProjectionType) ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * view.camera.perspective.fov * Math.PI / 180.0))));\n        }\n        if (uniforms.pickZNear) {\n            gl.uniform1f(uniforms.pickZNear, this.renderContext.pickZNear);\n            gl.uniform1f(uniforms.pickZFar, this.renderContext.pickZFar);\n        }\n        if (uniforms.pickInvisible) {\n            gl.uniform1i(uniforms.pickInvisible, this.renderContext.pickInvisible ? 1 : 0);\n        }\n        if (uniforms.logDepthBufFC) {\n            const logDepthBufFC = 2.0 / (Math.log((project as Perspective).far + 1.0) / Math.LN2);\n            gl.uniform1f(uniforms.logDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    // protected get vertexShader(): string {\n    //     return `${this.vertHeader}\n    //     ${this.vertDataTextureDefs}\n    //     ${this.vertLogDepthBufDefs}\n    //     void main(void) {\n    //             ${this.vertDataTextureSamples}\n    //             ${this.vertLogDepthBufOutputs}\n    //     }`;\n    // }\n\n    protected get vertHeader(): string {\n        return `#version 300 es\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                precision highp float;\n                precision highp int;\n                precision highp usampler2D;\n                precision highp isampler2D;\n                precision highp sampler2D;\n                #else\n                precision mediump float;\n                precision mediump int;\n                precision mediump usampler2D;\n                precision mediump isampler2D;\n                precision mediump sampler2D;\n                uniform int renderPass;\n                #endif`;\n    }\n\n    protected get vertDataTextureDefs(): string {\n        return `uniform mediump sampler2D eachMeshMatrices;\n                uniform lowp usampler2D eachMeshAttributes;\n                uniform highp sampler2D eachMeshOffset;\n                uniform mediump usampler2D positions;\n                uniform highp usampler2D indices;\n                uniform mediump usampler2D eachPrimitiveMesh;\n                uniform highp sampler2D cameraMatrices;\n                uniform highp sampler2D sceneModelMatrices;`;\n    }\n\n    protected get vertLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `uniform float logDepthBufFC;\n                    out float fragDepth;\n                    bool isPerspectiveMatrix(mat4 m) {\n                        return (m[2][3] == - 1.0);\n                    }\n                    out float isPerspective;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get vertDataTextureSamples(): string {\n        return \"\";\n    }\n\n    protected get vertLogDepthBufOutputs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `fragDepth = 1.0 + clipPos.w;\n                    isPerspective = float (isPerspectiveMatrix(projMatrix));`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragmentShader(): string {\n        return `${this.fragHeader}\n        ${this.fragGammaDefs}\n        ${this.fragSectionPlaneDefs}\n        ${this.fragLightDefs}\n        ${this.fragLogDepthBufDefs}\n        void main(void) {\n            ${this.fragSectionPlanesSlice}\n            ${this.fragLighting}\n            ${this.fragLogDepthBufOutput}\n        }`;\n    }\n\n    protected get fragHeader(): string {\n        return `#version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n       precision highp float;\n        precision highp int;\n        #else\n        precision mediump float;\n        precision mediump int;\n        #endif`;\n    }\n\n    protected get fragGammaDefs(): string {\n        return `uniform float gammaFactor;\n        vec4 linearToLinear( in vec4 value ) {\n            return value;\n        }\n        vec4 sRGBToLinear( in vec4 value ) {\n            return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n        }\n        vec4 gammaToLinear( in vec4 value) {\n            return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n        }\n        vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\n              return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        }`;\n    }\n\n    protected get fragLightDefs(): string {\n        const view = this.renderContext.view;\n        const src = [];\n        src.push(\"uniform vec4 lightAmbient;\");\n        for (let i = 0, len = view.lightsList.length; i < len; i++) {\n            const light: any = view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLogDepthBufDefs(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return `in float isPerspective;\n                    uniform float logDepthBufFC;\n                    in float fragDepth;`;\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLogDepthBufOutput(): string {\n        if (this.renderContext.view.logarithmicDepthBufferEnabled) {\n            return \"gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;\";\n        } else {\n            return \"\"\n        }\n    }\n\n    protected get fragLighting(): string {\n        const src = [];\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);\");\n        src.push(\"vec3 viewNormal = normalize(vec4(viewNormalMatrix * worldNormal).xyz);\");\n        src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n        src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n        src.push(\"float lambertian = 1.0;\");\n\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light: any = this.renderContext.view.lightsList[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n        src.push(\"vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));\");\n        src.push(\"meshColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);\");\n\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSAOOutput(): string {\n        if (this.renderContext.view.sao.enabled) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            return `float viewportWidth     = uSAOParams[0];\n                    float viewportHeight    = uSAOParams[1];\n                    float blendCutoff       = uSAOParams[2];\n                    float blendFactor       = uSAOParams[3];\n                    vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\n                    float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture(uOcclusionTexture, uv))) * blendFactor;\n                    outColor                = vec4(fragColor.rgb * ambient, 1.0);`;\n        } else {\n            return `outColor            = fragColor;`;\n        }\n    }\n\n    protected get fragOutput(): string {\n        return `outColor            = fragColor;`;\n    }\n\n\n    protected get fragSectionPlaneDefs(): string {\n        const src = [];\n        src.push(`in vec4 worldPosition;\n                  in vec4 meshFlags2;`);\n        for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n            src.push(`uniform bool sectionPlaneActive${i};\n                      uniform vec3 sectionPlanePos${i};\n                      uniform vec3 sectionPlaneDir${i};`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragLightSourceUniforms(): string {\n        const src = [];\n        src.push(`uniform vec4 lightAmbient;`);\n        for (let i = 0, len = this.renderContext.view.lightsList.length; i < len; i++) {\n            const light = this.renderContext.view.lightsList[i];\n            if (light instanceof AmbientLight) {\n                continue;\n            }\n            src.push(`uniform vec4 lightColor${i};`);\n            if (light instanceof DirLight) {\n                src.push(`uniform vec3 lightDir${i};`);\n            }\n            if (light instanceof PointLight) {\n                src.push(`uniform vec3 lightPos${i};`);\n            }\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragSectionPlanesSlice(): string {\n        const src = [];\n        const clipping = (this.renderContext.view.sectionPlanesList.length > 0);\n        if (clipping) {\n            src.push(`bool clippable = (float(meshFlags2.x) > 0.0);\n                      if (clippable) {\n                          float dist = 0.0;`);\n            for (let i = 0, len = this.renderContext.view.sectionPlanesList.length; i < len; i++) {\n                src.push(`if (sectionPlaneActive${i}) {\n                              dist += clamp(dot(-sectionPlaneDir${i}.xyz, worldPosition.xyz - sectionPlanePos${i}.xyz), 0.0, 1000.0);\n                          }`);\n            }\n            src.push(`if (dist > 0.0) { \n                          discard;\n                      }\n                  }`);\n        }\n        return src.join(\"\\n\");\n    }\n\n    protected get fragFlatShading(): string {\n        const src = [];\n        src.push(\"\");\n        return src.join(\"\\n\");\n    }\n\n    destroy() {\n        if (this.#program) {\n            this.#program.destroy();\n        }\n        this.#program = null;\n    }\n}\n","import {LayerRenderer} from \"./LayerRenderer\";\nimport type {RenderContext} from \"../RenderContext\";\n\nexport class FastColorTrianglesRenderer extends LayerRenderer {\n\n    constructor(renderContext: RenderContext) {\n        super(renderContext);\n    }\n\n    getHash(): string {\n        return `${this.renderContext.view.getSectionPlanesHash()}-${this.renderContext.view.getLightsHash()}`;\n    }\n\n    buildVertexShader(): string {\n        return `${this.vertHeader}   \n        \n                uniform int                 renderPass;   \n            \n                uniform highp   mat4        viewMatrix;\n                uniform highp   mat4        projMatrix;\n                uniform highp   mat4        worldMatrix;\n                        \n                uniform mediump usampler2D  eachPrimitiveMesh;\n                uniform lowp    usampler2D  eachMeshAttributes;\n                \n                uniform mediump sampler2D   eachMeshMatrices;\n                uniform highp   sampler2D   eachMeshOffset;\n                uniform mediump usampler2D  positions;\n                uniform highp   usampler2D  indices;\n                \n                uniform  float  logDepthBufFC;\n                 \n                out vec4        worldPosition;\n                flat out uint   meshFlags2r;                       \n                flat out uvec4  meshColor;\n                out float       fragDepth;\n                \n                bool isPerspectiveMatrix(mat4 m) {\n                    return (m[2][3] == - 1.0);\n                }\n                \n                out float isPerspective;\n                    \n                void main(void) {\n                                   \n                    int triangleIndex      = gl_VertexID / 3;\n                    \n                    int hPackedMeshIdIndex = (triangleIndex >> 3) & 1023;\n                    int vPackedMeshIdIndex = (triangleIndex >> 3) >> 10;\n                    \n                    int meshIndex          = int(texelFetch(eachPrimitiveMesh, ivec2(hPackedMeshIdIndex, vPackedMeshIdIndex), 0).r);                   \n                    uvec4 meshFlags        = texelFetch (eachMeshAttributes, ivec2(2, meshIndex), 0);\n\n                    if (int(meshFlags.x) != renderPass) {\n                        gl_Position = vec4(3.0, 3.0, 3.0, 1.0);\n                        return;\n                    } \n                 \n                    uvec4 meshFlags2 = texelFetch (eachMeshAttributes, ivec2(3, meshIndex), 0);\n\n                    ivec4 packedVertexBase = ivec4(texelFetch (eachMeshAttributes, ivec2(4, meshIndex), 0));\n                    ivec4 packedIndexBaseOffset = ivec4(texelFetch (eachMeshAttributes, ivec2(5, meshIndex), 0));\n                    int indexBaseOffset = (packedIndexBaseOffset.r << 24) + (packedIndexBaseOffset.g << 16) + (packedIndexBaseOffset.b << 8) + packedIndexBaseOffset.a;\n\n                    int hIndex = (triangleIndex - indexBaseOffset) & 1023;\n                    int vIndex = (triangleIndex - indexBaseOffset) >> 10;\n\n                    ivec3 vertexIndices = ivec3(texelFetch(indices, ivec2(hIndex, vIndex), 0));\n                    ivec3 uniqueVertexIndexes = vertexIndices + (packedVertexBase.r << 24) + (packedVertexBase.g << 16) + (packedVertexBase.b << 8) + packedVertexBase.a;\n\n                    ivec3 indexPositionH = uniqueVertexIndexes & 1023;\n                    ivec3 indexPositionV = uniqueVertexIndexes >> 10;\n\n                    mat4 positionsDecompressMatrix = mat4 (texelFetch (eachMeshMatrices, ivec2(0, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(1, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(2, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(3, meshIndex), 0));\n                    mat4 meshMatrix = mat4 (texelFetch (eachMeshMatrices, ivec2(4, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(5, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(6, meshIndex), 0), texelFetch (eachMeshMatrices, ivec2(7, meshIndex), 0));\n\n                    vec3 _positions[3];\n                   \n                    _positions[0] = vec3(texelFetch(positions, ivec2(indexPositionH.r, indexPositionV.r), 0));\n                    _positions[1] = vec3(texelFetch(positions, ivec2(indexPositionH.g, indexPositionV.g), 0));\n                    _positions[2] = vec3(texelFetch(positions, ivec2(indexPositionH.b, indexPositionV.b), 0));\n  \n                    vec3  position       = _positions[gl_VertexID % 3];\n                   \n                    vec4  _worldPosition = worldMatrix * ((meshMatrix * positionsDecompressMatrix) * vec4(position, 1.0)); \n                    vec4  viewPosition   = viewMatrix * _worldPosition;                   \n                    vec4  clipPosition   = projMatrix * viewPosition;\n\n                    meshFlags2r     = meshFlags2.r;                     \n                    meshColor       = texelFetch (eachMeshAttributes, ivec2(0, meshIndex), 0);                          \n                    fragDepth       = 1.0 + clipPosition.w;\n                    isPerspective   = float (isPerspectiveMatrix(projMatrix));\n                    worldPosition   = _worldPosition;                                               \n                    \n                    gl_Position     = clipPosition;\n                }`;\n    }\n\n    buildFragmentShader(): string {\n        return `${this.fragHeader}                        \n    \n             flat   in uvec4    meshColor;\n                in float        fragDepth;\n                in float        isPerspective;    \n                flat in uint    meshFlags2r;        \n                uniform float   logDepthBufFC;                        \n    \n                ${this.fragSectionPlaneDefs}                  \n                ${this.fragLightSourceUniforms}                                                             \n    \n                out vec4 outColor;        \n    \n                void main(void) {         \n                \n                // src.push(\"float lambertian = 1.0;\");\n                // \n                //  vec3 xTangent = dFdx( vViewPosition.xyz );\n                //  vec3 yTangent = dFdy( vViewPosition.xyz );\n                // \n                //  vec3 viewNormal = normalize( cross( xTangent, yTangent ) );        \n    \n                    ${this.fragSectionPlanesSlice}                                    \n                    ${this.fragFlatShading}     \n          \n                    outColor = vec4(meshColor);                   \n                    gl_FragDepth = isPerspective == 0.0 ? gl_FragCoord.z : log2( fragDepth ) * logDepthBufFC * 0.5;                        \n                }`;\n    }\n\n    // get lambertianLighting() : string{\n    //     const src = [];\n    //     src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n    //     src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n    //     src.push(\"float lambertian = 1.0;\");\n    //     for (let i = 0, len = this.view.lightsList.length; i < len; i++) {\n    //         const light = this.view.lightsList[i];\n    //         if (light.type === \"ambient\") {\n    //             continue;\n    //         }\n    //         if (light.type === \"dir\") {\n    //             src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n    //         } else {\n    //             continue;\n    //         }\n    //         src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n    //         src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n    //     }\n    //     return src.join(\"\\n\");\n    // }\n\n}","import {\n    constants,\n    math,\n    Renderer,\n    SceneModel,\n    SceneModelParams,\n    SceneObject,\n    View,\n    WebViewer,\n    WebViewerCapabilities,\n    TextureTranscoder,\n    KTX2TextureTranscoder\n} from \"../viewer/index\";\n\nimport {RENDER_PASSES} from \"./WebGLSceneModel/RENDER_PASSES\";\nimport {WEBGL_INFO} from \"./lib/WEBGL_INFO\";\nimport {RenderContext} from \"./RenderContext\";\nimport type {RenderBufferManager} from \"./lib/RenderBufferManager\";\nimport type {RenderBuffer} from \"./lib/RenderBuffer\";\nimport type {SAOOcclusionRenderer} from \"./lib/sao/SAOOcclusionRenderer\";\nimport type {SAODepthLimitedBlurRenderer} from \"./lib/sao/SAODepthLimitedBlurRenderer\";\nimport {getExtension} from \"./lib/getExtension\";\nimport type {Pickable} from \"./Pickable\";\nimport {WebGLSceneModel} from \"./WebGLSceneModel/WebGLSceneModel\";\nimport type {Layer} from \"./WebGLSceneModel/Layer\";\nimport {ColorPointsLayerRenderer} from \"./layerRenderers/ColorPointsLayerRenderer\";\nimport {FastColorTrianglesRenderer} from \"./layerRenderers/FastColorTrianglesRenderer\";\nimport {QualityColorTrianglesRenderer} from \"./layerRenderers/QualityColorTrianglesRenderer\";\nimport {ColorLinesLayerRenderer} from \"./layerRenderers/ColorLinesLayerRenderer\";\nimport {SilhouetteTrianglesLayerRenderer} from \"./layerRenderers/SilhouetteTrianglesLayerRenderer\";\nimport {SilhouettePointsRenderer} from \"./layerRenderers/SilhouettePointsRenderer\";\nimport {SilhouetteLinesRenderer} from \"./layerRenderers/SilhouetteLinesRenderer\";\nimport {apply, Map} from \"../viewer/utils\";\n\nconst ua = navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|mobile)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\nconst isSafari = (ua && ua[1].toLowerCase() === \"safari\");\n\n/**\n * Pluggable WebGL-based rendering strategy for a {@link WebViewer}.\n *\n * Handles creation and rendering of geometry and materials for a WebViewer, using the browser's WebGL 3D graphics API.\n *\n * ## Usage\n *\n * ````javascript\n * import {WebViewer, WebGLRenderer} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *     id: \"myViewer\",\n *     renderer: new WebGLRenderer({\n *          textureTranscoder: new KTX2TextureTranscoder({\n *              transcoderPath: \"./../dist/basis/\" // <------ Path to BasisU transcoder module\n *          })\n *     })\n * });\n * ````\n */\nexport class WebGLRenderer implements Renderer {\n\n    // @ts-ignore\n    #viewer: WebViewer;\n    // @ts-ignore\n    #view: View;\n    // @ts-ignore\n    #renderContext: RenderContext;\n    #canvasTransparent: boolean;\n    #transparentEnabled: boolean;\n    #edgesEnabled: boolean;\n    #imageDirty: boolean;\n    #saoEnabled: boolean;\n    #pbrEnabled: boolean;\n    #backgroundColor: math.FloatArrayParam;\n    #webglSceneModels: { [key: string]: WebGLSceneModel };\n    #layerList: Layer[];\n    #layerListDirty: boolean;\n    #stateSortDirty: boolean;\n    #pickIDs = new Map({});\n    #saoDepthRenderBuffer: RenderBuffer;\n    #renderBufferManager: RenderBufferManager;\n    #extensionHandles: any;\n    #logarithmicDepthBufferEnabled: boolean;\n    #alphaDepthMask: boolean;\n    #occlusionTester: any;\n    // #saoOcclusionRenderer: null | SAOOcclusionRenderer;\n    // #saoDepthLimitedBlurRenderer: SAODepthLimitedBlurRenderer;\n    #textureTranscoder: TextureTranscoder;\n\n    // @ts-ignore\n    #layerRenderers: {\n        // colorPoints: ColorPointsLayerRenderer;\n        colorTriangles: FastColorTrianglesRenderer;\n        // qualityColorTriangles: QualityColorTrianglesRenderer;\n        // colorLines: ColorLinesLayerRenderer;\n        // silhouettePoints: SilhouettePointsRenderer;\n        // silhouetteTriangles: SilhouetteTrianglesLayerRenderer;\n        // silhouetteLines: SilhouetteLinesRenderer;\n    };\n\n    /**\n     Creates a WebGLRenderer.\n\n     @param params Configs\n     @param params.textureTranscoder Injects an optional transcoder that will be used internally by {@link SceneModel.createTexture}\n     to convert transcoded texture data. The transcoder is only required when we'll be providing transcoded data\n     to {@link SceneModel.createTexture}. We assume that all transcoded texture data added to a  ````SceneModel````\n     will then be in a format supported by this transcoder.\n     */\n    constructor(params: {\n        textureTranscoder?: TextureTranscoder\n    }) {\n        this.#textureTranscoder = params.textureTranscoder || new KTX2TextureTranscoder({});\n        this.#canvasTransparent = false;\n        this.#alphaDepthMask = false;\n        this.#extensionHandles = {};\n        this.#pickIDs = new Map({});\n        this.#layerList = [];\n        this.#layerListDirty = true;\n        this.#stateSortDirty = true;\n        this.#imageDirty = true;\n        this.#transparentEnabled = true;\n        this.#edgesEnabled = true;\n        this.#saoEnabled = true;\n        this.#pbrEnabled = true;\n        this.#backgroundColor = math.vec3();\n        this.#occlusionTester = null; // Lazy-created in #addMarker()\n\n        // this.#saoDepthRenderBuffer = null;\n        // this.#renderBufferManager = null;\n        this.#logarithmicDepthBufferEnabled = false;\n        this.#webglSceneModels = {};\n    }\n\n    init(viewer: WebViewer): void {\n        this.#viewer = viewer;\n        this.#textureTranscoder.init(this.#viewer.capabilities);\n    }\n\n    getCapabilities(capabilities: WebViewerCapabilities): void {\n        capabilities.maxViews = 1;\n        const canvasElement = document.createElement('canvas');\n        let gl;\n        try {\n            gl = canvasElement.getContext(\"webgl2\");\n        } catch (e) {\n            console.error('Failed to get a WebGL context');\n        }\n        if (gl) {\n            capabilities.astcSupported = !!getExtension(gl, 'WEBGL_compressed_texture_astc');\n            capabilities.etc1Supported = true; // WebGL\n            capabilities.etc2Supported = !!getExtension(gl, 'WEBGL_compressed_texture_etc');\n            capabilities.dxtSupported = !!getExtension(gl, 'WEBGL_compressed_texture_s3tc');\n            capabilities.bptcSupported = !!getExtension(gl, 'EXT_texture_compression_bptc');\n            capabilities.pvrtcSupported = !!(getExtension(gl, 'WEBGL_compressed_texture_pvrtc') || getExtension(gl, 'WEBKIT_WEBGL_compressed_texture_pvrtc'));\n        }\n    }\n\n    registerView(view: View): number {\n        if (this.#renderContext) {\n            throw \"Only one View allowed with WebGLRenderer (see WebViewerCapabilities.maxViews)\";\n        }\n        this.#view = view;\n        const WEBGL_CONTEXT_NAMES = [\"webgl2\"];\n        const canvasElement = view.canvas.canvas;\n        const contextAttr = {};\n        let gl: WebGL2RenderingContext | null = null;\n        for (let i = 0; !gl && i < WEBGL_CONTEXT_NAMES.length; i++) {\n            try {  // @ts-ignore\n                gl = canvasElement.getContext(WEBGL_CONTEXT_NAMES[i], contextAttr);\n            } catch (e) { // Try with next context name\n            }\n        }\n        if (!gl) {\n            console.error('Failed to get a WebGL2 context');\n          //  view.events.fire(\"webglContextFailed\", true, true);\n            return 0;\n        }\n        if (gl) {\n            gl.hint(gl.FRAGMENT_SHADER_DERIVATIVE_HINT, gl.NICEST);\n        }\n        this.#renderContext = new RenderContext(this.#viewer, this.#view, gl);\n        this.#layerRenderers = {\n            //       colorPoints: new ColorPointsLayerRenderer(this.#renderContext),\n            colorTriangles: new FastColorTrianglesRenderer(this.#renderContext),\n            // qualityColorTriangles: new QualityColorTrianglesRenderer(this.#renderContext),\n            // colorLines: new ColorLinesLayerRenderer(this.#renderContext),\n            // silhouettePoints: new SilhouettePointsRenderer(this.#renderContext),\n            // silhouetteTriangles: new SilhouetteTrianglesLayerRenderer(this.#renderContext),\n            // silhouetteLines: new SilhouetteLinesRenderer(this.#renderContext)\n        };\n        return 0;\n    }\n\n    deregisterView(viewIndex: number): void { // Nop\n    }\n\n    createModel(params: SceneModelParams): SceneModel {\n        if (!this.#renderContext) {\n            throw \"Must register a View before you create a model\";\n        }\n        const webglSceneModel = new WebGLSceneModel(apply({\n            view: this.#view,\n            scene: this.#viewer.scene,\n            textureTranscoder: this.#textureTranscoder,\n            webglRenderer: this,\n            renderContext: this.#renderContext,\n            viewLayerId: params.viewLayerId\n        }, params));\n        webglSceneModel.onBuilt.one( (finalizedSceneModel) => {\n            this.#webglSceneModels[finalizedSceneModel.id] = <WebGLSceneModel>finalizedSceneModel;\n            this.#layerListDirty = true;\n        });\n        webglSceneModel.onDestroyed.one( (destroyedSceneModel) => {\n            delete this.#webglSceneModels[destroyedSceneModel.id];\n            this.#layerListDirty = true;\n        });\n        return webglSceneModel;\n    }\n\n    /**\n     * @private\n     */\n    registerPickable(pickable: Pickable): number { // @ts-ignore\n        return this.#pickIDs.addItem(pickable);\n    }\n\n    /**\n     * @private\n     */\n    deregisterPickable(pickId: number) {\n        this.#pickIDs.removeItem(pickId);\n    }\n\n    setImageDirty(viewIndex?: number) {\n        this.#imageDirty = true;\n    }\n\n    setBackgroundColor(viewIndex: number, color: math.FloatArrayParam): void { // @ts-ignore\n        this.#backgroundColor.set(color);\n        this.#imageDirty = true;\n    }\n\n    setEdgesEnabled(viewIndex: number, enabled: boolean): void {\n        this.#edgesEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setPBREnabled(viewIndex: number, enabled: boolean): void {\n        this.#pbrEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    getSAOSupported(): boolean {\n        return isSafari && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_standard_derivatives\"];\n    }\n\n    setSAOEnabled(viewIndex: number, enabled: boolean): void {\n        this.#saoEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    setTransparentEnabled(viewIndex: number, enabled: boolean): void {\n        this.#transparentEnabled = enabled;\n        this.#imageDirty = true;\n    }\n\n    clear(viewIndex: number) {\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (this.#canvasTransparent) {\n            gl.clearColor(1, 1, 1, 1);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    needsRebuild(viewIndex?: number): void {\n       for (let rendererId in this.#layerRenderers) {\n           // @ts-ignore\n           this.#layerRenderers[rendererId].needRebuild();\n       }\n    }\n\n    needsRender(viewIndex?: number): boolean {\n        return (this.#imageDirty || this.#layerListDirty || this.#stateSortDirty);\n    }\n\n    render(viewIndex: number, params: {\n        force?: boolean;\n    }) {\n        params = params || {};\n        if (params.force) {\n            this.#imageDirty = true;\n        }\n        this.#updateLayerList();\n        if (this.#imageDirty) {\n            this.#draw({clear: true});\n            this.#imageDirty = false;\n        }\n    }\n\n    pickSceneObject(viewIndex: number, params: {}): SceneObject | null {\n        return null;\n    };\n\n    #updateLayerList() {\n        if (this.#layerListDirty) {\n            this.#buildLayerList();\n            this.#layerListDirty = false;\n            this.#stateSortDirty = true;\n        }\n        if (this.#stateSortDirty) {\n            //     this.#sortLayerList();\n            this.#stateSortDirty = false;\n            this.#imageDirty = true;\n        }\n    }\n\n    #buildLayerList() {\n        let lenDrawableList = 0;\n        for (let id in this.#webglSceneModels) {\n            const webglSceneModel = this.#webglSceneModels[id];\n            for (let i = 0, len = webglSceneModel.layerList.length; i < len; i++) {\n                this.#layerList[lenDrawableList++] = webglSceneModel.layerList[i];\n            }\n        }\n        this.#layerList.length = lenDrawableList;\n    }\n\n    #draw(params: {\n        clear: boolean;\n    }) {\n        this.#activateExtensions();\n        if (this.#saoEnabled && this.#view.sao.possible) {\n            this.#drawSAOBuffers(params);\n        }\n        this.#drawColor(params);\n    }\n\n    #activateExtensions() {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]) {\n            this.#extensionHandles.OES_element_index_uint = this.#renderContext.gl.getExtension(\"OES_element_index_uint\");\n        }\n        if (this.#logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            this.#extensionHandles.EXT_frag_depth = this.#renderContext.gl.getExtension('EXT_frag_depth');\n        }\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            this.#extensionHandles.WEBGL_depth_texture = this.#renderContext.gl.getExtension('WEBGL_depth_texture');\n        }\n    }\n\n    #drawSAOBuffers(params: {\n        clear: boolean;\n    }) {\n        // const sao = this.#view.sao;\n        // const saoDepthRenderBuffer = this.#renderBufferManager.getRenderBuffer(\"saoDepth\", {\n        //     depthTexture: WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n        // });\n        // this.#saoDepthRenderBuffer.bind();\n        // this.#saoDepthRenderBuffer.clear();\n        // this.#drawDepth(params);\n        // this.#saoDepthRenderBuffer.unbind();\n        // // Render occlusion buffer\n        // const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\");\n        // occlusionRenderBuffer1.bind();\n        // occlusionRenderBuffer1.clear();\n        // this.#saoOcclusionRenderer.render(saoDepthRenderBuffer);\n        // occlusionRenderBuffer1.unbind();\n        // if (sao.blur) {\n        //     // Horizontally blur occlusion buffer 1 into occlusion buffer 2\n        //     const occlusionRenderBuffer2 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion2\");\n        //     occlusionRenderBuffer2.bind();\n        //     occlusionRenderBuffer2.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer1, 0);\n        //     occlusionRenderBuffer2.unbind();\n        //     // Vertically blur occlusion buffer 2 back into occlusion buffer 1\n        //     occlusionRenderBuffer1.bind();\n        //     occlusionRenderBuffer1.clear();\n        //     this.#saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer2, 1);\n        //     occlusionRenderBuffer1.unbind();\n        // }\n    }\n\n    #drawDepth(params: {\n        clear: boolean\n    }) {\n        this.#renderContext.reset();\n        const gl = this.#renderContext.gl;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // for (let i = 0, len = this.#layerListPostCull.length; i < len; i++) {\n        //     const layer = this.#layerListPostCull[i];\n        //     // if (layer.culled === true || layer.visible === false || !layer.drawDepth) {\n        //     //     continue;\n        //     // }\n        //     // if (layer.drawFlags.colorOpaque) {\n        //     //     //    layer.drawDepth(this.#renderContext);\n        //     // }\n        // }\n        // const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        // for (let ii = 0; ii < numVertexAttribs; ii++) {\n        //     gl.disableVertexAttribArray(ii);\n        // }\n    }\n\n    #drawColor(params: {\n        clear: boolean;\n    }) {\n\n        const view = this.#view;\n        const renderContext = this.#renderContext;\n        const gl = renderContext.gl;\n\n        const normalDrawSAOBin: Layer[] = [];\n        const edgesColorOpaqueBin: Layer[] = [];\n        const normalFillTransparentBin: Layer[] = [];\n        const edgesColorTransparentBin: Layer[] = [];\n        const xrayedSilhouetteOpaqueBin: Layer[] = [];\n        const xrayEdgesOpaqueBin: Layer[] = [];\n        const xrayedSilhouetteTransparentBin: Layer[] = [];\n        const xrayEdgesTransparentBin: Layer[] = [];\n        const highlightedSilhouetteOpaqueBin: Layer[] = [];\n        const highlightedEdgesOpaqueBin: Layer[] = [];\n        const highlightedSilhouetteTransparentBin: Layer[] = [];\n        const highlightedEdgesTransparentBin: Layer[] = [];\n        const selectedSilhouetteOpaqueBin: Layer[] = [];\n        const selectedEdgesOpaqueBin: Layer[] = [];\n        const selectedSilhouetteTransparentBin: Layer[] = [];\n        const selectedEdgesTransparentBin: Layer[] = [];\n\n        renderContext.reset();\n        renderContext.withSAO = false;\n        renderContext.pbrEnabled = this.#pbrEnabled && !!view.qualityRender;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        if (this.#canvasTransparent) {\n            gl.clearColor(0, 0, 0, 0);\n        } else {\n            gl.clearColor(this.#backgroundColor[0], this.#backgroundColor[1], this.#backgroundColor[2], 1.0);\n        }\n\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n        gl.lineWidth(1);\n\n        renderContext.lineWidth = 1;\n\n        const saoPossible = view.sao.possible;\n\n        if (this.#saoEnabled && saoPossible) {\n            const occlusionRenderBuffer1 = this.#renderBufferManager.getRenderBuffer(\"saoOcclusion\", {\n                depthTexture: false,\n                size: [gl.drawingBufferWidth, gl.drawingBufferHeight]\n            });\n            renderContext.occlusionTexture = occlusionRenderBuffer1 ? occlusionRenderBuffer1.getTexture() : null;\n        } else {\n            renderContext.occlusionTexture = null;\n\n        }\n\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        // Render normal opaque solids, defer others to subsequent bins, to render after\n\n        let normalDrawSAOBinLen = 0;\n        let edgesColorOpaqueBinLen = 0;\n        let normalFillTransparentBinLen = 0;\n        let edgesColorTransparentBinLen = 0;\n        let xrayedSilhouetteOpaqueBinLen = 0;\n        let xrayEdgesOpaqueBinLen = 0;\n        let xrayedSilhouetteTransparentBinLen = 0;\n        let xrayEdgesTransparentBinLen = 0;\n        let highlightedSilhouetteOpaqueBinLen = 0;\n        let highlightedEdgesOpaqueBinLen = 0;\n        let highlightedSilhouetteTransparentBinLen = 0;\n        let highlightedEdgesTransparentBinLen = 0;\n        let selectedSilhouetteOpaqueBinLen = 0;\n        let selectedEdgesOpaqueBinLen = 0;\n        let selectedSilhouetteTransparentBinLen = 0;\n        let selectedEdgesTransparentBinLen = 0;\n\n        for (let i = 0, len = this.#layerList.length; i < len; i++) {\n\n            const layer = this.#layerList[i];\n            const meshCounts = layer.meshCounts;\n\n            if (meshCounts.numCulled === meshCounts.numMeshes || meshCounts.numVisible === 0) {\n                continue;\n            }\n\n            if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                if (this.#saoEnabled && saoPossible && layer.sceneModel.qualityRender) {\n                    normalDrawSAOBin[normalDrawSAOBinLen++] = layer;\n                } else {\n                    this.#drawLayer(layer, RENDER_PASSES.COLOR_OPAQUE, layer.sceneModel.qualityRender);\n                }\n            }\n\n            if (this.#transparentEnabled) {\n                if (meshCounts.numTransparent) {\n                    normalFillTransparentBin[normalFillTransparentBinLen++] = layer;\n                }\n            }\n\n            if (meshCounts.numXRayed > 0) {\n                if (view.xrayMaterial.fill) {\n                    if (view.xrayMaterial.fillAlpha < 1.0) {\n                        xrayedSilhouetteTransparentBin[xrayedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        xrayedSilhouetteOpaqueBin[xrayedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numHighlighted > 0) {\n                if (view.highlightMaterial.fill) {\n                    if (view.highlightMaterial.fillAlpha < 1.0) {\n                        highlightedSilhouetteTransparentBin[highlightedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        highlightedSilhouetteOpaqueBin[highlightedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (meshCounts.numSelected > 0) {\n                if (view.selectedMaterial.fill) {\n                    if (view.selectedMaterial.fillAlpha < 1.0) {\n                        selectedSilhouetteTransparentBin[selectedSilhouetteTransparentBinLen++] = layer;\n                    } else {\n                        selectedSilhouetteOpaqueBin[selectedSilhouetteOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n\n            if (this.#edgesEnabled && this.#view.edgeMaterial.edges) {\n                if (meshCounts.numEdges > 0) {\n                    if (meshCounts.numTransparent < meshCounts.numMeshes) {\n                        edgesColorOpaqueBin[edgesColorOpaqueBinLen++] = layer;\n                    }\n                    if (meshCounts.numTransparent > 0) {\n                        edgesColorTransparentBin[edgesColorTransparentBinLen++] = layer;\n                    }\n                    if (view.selectedMaterial.edgeAlpha < 1.0) {\n                        selectedEdgesTransparentBin[selectedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        selectedEdgesOpaqueBin[selectedEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.xrayMaterial.edgeAlpha < 1.0) {\n                        xrayEdgesTransparentBin[xrayEdgesTransparentBinLen++] = layer;\n                    } else {\n                        xrayEdgesOpaqueBin[xrayEdgesOpaqueBinLen++] = layer;\n                    }\n                    if (view.highlightMaterial.edgeAlpha < 1.0) {\n                        highlightedEdgesTransparentBin[highlightedEdgesTransparentBinLen++] = layer;\n                    } else {\n                        highlightedEdgesOpaqueBin[highlightedEdgesOpaqueBinLen++] = layer;\n                    }\n                }\n            }\n        }\n\n        // Render deferred bins\n\n        if (normalDrawSAOBinLen > 0) {\n            renderContext.withSAO = true;\n            for (let i = 0; i < normalDrawSAOBinLen; i++) {\n                //    this.#drawLayer(normalDrawSAOBin[i], RENDER_PASSES.COLOR_OPAQUE, layer.sceneModel.qualityRender);\n                //    normalDrawSAOBin[i].drawColorOpaque(renderContext);\n            }\n        }\n\n        for (let i = 0; i < edgesColorOpaqueBinLen; i++) {\n            this.#drawLayer(edgesColorOpaqueBin[i], RENDER_PASSES.EDGES_COLOR_OPAQUE);\n        }\n\n        for (let i = 0; i < xrayedSilhouetteOpaqueBinLen; i++) {\n            this.#drawLayer(xrayedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n\n        for (let i = 0; i < xrayEdgesOpaqueBinLen; i++) {\n            this.#drawLayer(xrayEdgesOpaqueBin[i], RENDER_PASSES.EDGES_XRAYED);\n        }\n\n        if (xrayedSilhouetteTransparentBinLen > 0 || xrayEdgesTransparentBinLen > 0 || normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            renderContext.backfaces = false;\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(false);\n            }\n            for (let i = 0; i < xrayEdgesTransparentBinLen; i++) {\n                this.#drawLayer(xrayEdgesTransparentBin[i], RENDER_PASSES.EDGES_XRAYED);\n            }\n            for (let i = 0; i < xrayedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(xrayedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_XRAYED);\n            }\n            if (normalFillTransparentBinLen > 0 || edgesColorTransparentBinLen > 0) {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < edgesColorTransparentBinLen; i++) {\n                this.#drawLayer(edgesColorTransparentBin[i], RENDER_PASSES.EDGES_COLOR_TRANSPARENT);\n            }\n            for (let i = 0; i < normalFillTransparentBinLen; i++) {\n                this.#drawLayer(normalFillTransparentBin[i], RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n            gl.disable(gl.BLEND);\n            if (!this.#alphaDepthMask) {\n                gl.depthMask(true);\n            }\n        }\n\n        if (highlightedSilhouetteOpaqueBinLen > 0 || highlightedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1; // HACK\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < highlightedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n        }\n\n        if (highlightedSilhouetteTransparentBinLen > 0 || highlightedEdgesTransparentBinLen > 0 || highlightedSilhouetteOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < highlightedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(highlightedEdgesTransparentBin[i], RENDER_PASSES.EDGES_HIGHLIGHTED);\n            }\n            for (let i = 0; i < highlightedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(highlightedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        if (selectedSilhouetteOpaqueBinLen > 0 || selectedEdgesOpaqueBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            for (let i = 0; i < selectedEdgesOpaqueBinLen; i++) {\n                this.#drawLayer(selectedEdgesOpaqueBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteOpaqueBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteOpaqueBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n        }\n\n        if (selectedSilhouetteTransparentBinLen > 0 || selectedEdgesTransparentBinLen > 0) {\n            renderContext.lastProgramId = -1;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.enable(gl.CULL_FACE);\n            gl.enable(gl.BLEND);\n            if (this.#canvasTransparent) {\n                gl.blendEquation(gl.FUNC_ADD);\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n            }\n            for (let i = 0; i < selectedEdgesTransparentBinLen; i++) {\n                this.#drawLayer(selectedEdgesTransparentBin[i], RENDER_PASSES.EDGES_SELECTED);\n            }\n            for (let i = 0; i < selectedSilhouetteTransparentBinLen; i++) {\n                this.#drawLayer(selectedSilhouetteTransparentBin[i], RENDER_PASSES.SILHOUETTE_SELECTED);\n            }\n            gl.disable(gl.BLEND);\n        }\n\n        const numTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n        for (let ii = 0; ii < numTextureUnits; ii++) {\n            gl.activeTexture(gl.TEXTURE0 + ii);\n        }\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        for (let ii = 0; ii < numVertexAttribs; ii++) {\n            gl.disableVertexAttribArray(ii);\n        }\n    }\n\n    #drawLayer(layer: Layer, renderPass: number, quality: boolean = true) {\n        switch (layer.renderState.primitive) {\n            case constants.TrianglesPrimitive:\n            case constants.SurfacePrimitive:\n            case constants.SolidPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                        if (layer.meshCounts.numTransparent === layer.meshCounts.numMeshes || layer.meshCounts.numXRayed === layer.meshCounts.numMeshes) {\n                            return;\n                        }\n                        if (quality) {\n                            //    this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        if (layer.meshCounts.numTransparent === 0) {\n                            return;\n                        }\n                        if (quality) {\n                            //     this.#layerRenderers.qualityColorTriangles.draw(layer);\n                        } else {\n                            this.#layerRenderers.colorTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                        if (layer.meshCounts.numSelected > 0) {\n                            //  this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                        if (layer.meshCounts.numHighlighted > 0) {\n                            // this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        if (layer.meshCounts.numXRayed > 0) {\n                            //   this.#layerRenderers.silhouetteTriangles.draw(layer);\n                        }\n                        break;\n                }\n                break;\n            case constants.LinesPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //this.#layerRenderers.colorLines.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        // this.#layerRenderers.silhouetteLines.draw(layer);\n                        break;\n                }\n                break;\n            case constants.PointsPrimitive:\n                switch (renderPass) {\n                    case RENDER_PASSES.COLOR_OPAQUE:\n                    case RENDER_PASSES.COLOR_TRANSPARENT:\n                        //  this.#layerRenderers.colorPoints.draw(layer);\n                        break;\n                    case RENDER_PASSES.SILHOUETTE_SELECTED:\n                    case RENDER_PASSES.SILHOUETTE_HIGHLIGHTED:\n                    case RENDER_PASSES.SILHOUETTE_XRAYED:\n                        //  this.#layerRenderers.silhouettePoints.draw(layer);\n                        break;\n                }\n                break;\n        }\n    }\n}","import {LocaleService} from \"./localization/LocaleService\";\nimport {Scene} from \"./scene/index\";\nimport {Data} from \"./data/Data\";\nimport {View} from \"./view/View\";\nimport type {Plugin} from \"./Plugin\";\nimport type * as math from \"./math/index\";\nimport {scheduler} from \"./scheduler\";\nimport type {Renderer} from \"./scene/Renderer\";\nimport * as utils from \"./utils/index\";\nimport {apply, createUUID} from \"./utils/index\";\nimport type {WebViewerCapabilities} from \"./WebViewerCapabilities\";\nimport type {ViewParams} from \"./ViewParams\";\nimport {WebGLRenderer} from \"../webgl/WebGLRenderer\";\nimport {EventDispatcher} from \"strongly-typed-events\";\nimport {EventEmitter} from \"./EventEmitter\";\n\nclass TickParams {\n}\n\n/**\n * An extensible browser-based 3D viewer for AEC applications.\n *\n * ## Features\n *\n * * Fast, double precision 3D rendering, in all major browsers\n * * Multiple, federated models\n * * Multiple canvases\n * * Semantic ER data model\n * * Fast model loading from binary format\n * * Super low memory footprint\n * * Open architecture\n * * Written in TypeScript\n *\n * ## Overview\n *\n * A WebViewer has the following subsystems:\n *\n * ### WebViewer.scene\n *\n * A WebViewer's **scene** contains the geometry and materials for models currently in the WebViewer. The scene provides\n * builder methods that we can use to programmatically construct multiple models at once. Various loader plugins also\n * use these methods to construct models in the scene while they load their geometry from files.\n *\n * The scene is located at {@link WebViewer.scene} and is implemented by {@link Scene}.\n *\n * ### WebViewer.data\n *\n * A WebViewer's **data** subsystem contains a buildable entity-relationship graph that holds semantic information\n * about all the models currently in the WebViewer. The data subsystem provides builder methods that we can use to\n * programmatically construct ER graphs for multiple models at once. As with the WebViewer's scene, various loader plugins also\n * use these builder methods to construct data models while they load model files. We can create multiple data models,\n * and can have relationsips between objects in different models. The graph treats all object IDs as global, and automatically\n * merges models into the same, unified graph wherever they have objects that share the same IDs. This mechanism allows\n * us to load BIM models that have been split into multiple IFC models.\n *\n * The data is located at {@link WebViewer.data} and is implemented by {@link Data}.\n *\n * ### WebViewer.views\n *\n * A WebViewer can have one or more independent **views** of its models, each with its own HTML canvas, viewing parameters\n * and individual object visual states, that are unique to that View.\n *\n * The views are located at {@link WebViewer.views} and are implemented by {@link View}.\n *\n * ### Renderer\n *\n * We can also configure a WebViewer with a custom {@link Renderer}, in case we need to customize the way\n * the WebViewer uses the underlying browser graphics API (e.g. WebGL, WebGPU) to create and render models.\n *\n * ## Usage\n * \n * ### Example #1\n *\n * Create a viewer:\n *\n * ````javascript\n * import {WebViewer, constants} from \"@xeokit/webviewer\";\n *\n * const myViewer = new WebViewer({\n *     id: \"myViewer\"\n * });\n * ````\n *\n * Create a view with its own HTML canvas:\n *\n * ````javascript\n * const view1 = myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * view1.camera.projection = PerspectiveProjectionType;\n *\n * view1.cameraControl.navMode = \"orbit\";\n * ````\n *\n * Create a geometric model representation with a couple of objects:\n *\n * ````javascript\n * const mySceneModel = myViewer.scene.createModel({\n *     id: \"myModel\"\n * });\n *\n * mySceneModel.createGeometry({\n *     id: \"myGeometry\",\n *     primitive: constants.TrianglesPrimitive,\n *     positions: [...],\n *     indices: [...]\n *     //...\n * });\n *\n * mySceneModel.createMesh({\n *     id: \"myMesh\",\n *     geometryId: \"myGeometry\",\n *     //...\n * });\n *\n * mySceneModel.createObject({\n *     id: \"myObject1\",\n *     meshIds: [\"myMesh\"],\n *     viewLayerId: \"main\"\n *     //...\n * });\n *\n * mySceneModel.createObject({\n *     id: \"myObject2\",\n *     meshIds: [\"myMesh\"],\n *     viewLayerId: \"main\"\n *     //...\n * });\n *\n * mySceneModel.build();\n * ````\n *\n * Create a semantic entity-relationship data model, with two objects and one relation between them:\n *\n * ````javascript\n * const mySchema = {\n *     MY_OBJECT_TYPE: 0,\n *     MY_RELATIONSHIP_TYPE: 1\n * }\n *\n * const myDataModel = myViewer.data.createModel({\n *     id: \"myModel\"\n * });\n *\n * myDataModel.createObject({\n *     id: \"myObject1\",\n *     name: \"Some object\",\n *     type: mySchema.MY_OBJECT_TYPE\n * });\n *\n * myDataModel.createObject({\n *     id: \"myObject2\",\n *     name: \"Some object\",\n *     type: mySchema.MY_OBJECT_TYPE\n * });\n *\n * myDataModel.createRelationship({\n *     relating: \"myObject1\",\n *     related: \"myObject2\",\n *     type: mySchema.MY_RELATION_TYPE\n * });\n *\n * myDataModel.build();\n * ````\n *\n * Customize the view - highlight one of the objects and reposition the camera:\n *\n * ````javascript\n * view1.viewObjects[\"myObject1\"].highlighted = true;\n *\n * view1.camera.eye = [0, 0, 20];\n * view1.camera.look = [0, 0, 0];\n * view1.camera.up = [0, 1, 0];\n * ````\n */\nexport class WebViewer {\n\n    /**\n     ID of this WebViewer.\n     */\n    readonly id: string;\n\n    /**\n     True once this WebViewer has been destroyed.\n\n     Don't use this WebViewer if this is ````true````.\n     */\n    readonly destroyed: boolean;\n\n    /**\n     * Indicates the capabilities of this WebViewer.\n     */\n    readonly capabilities: WebViewerCapabilities;\n\n    /**\n     * Emits an event each time a WebViewer \"tick\" occurs (~10-60 times per second).\n     *\n     * @event\n     */\n    readonly onTick: EventEmitter<WebViewer, TickParams>;\n\n    /**\n     * Emits an event each time a {@link View} is created.\n     *\n     * @event\n     */\n    readonly onViewCreated: EventEmitter<WebViewer, View>;\n\n    /**\n     * Emits an event each time a {@link View} is destroyed.\n     *\n     * @event\n     */\n    readonly onViewDestroyed: EventEmitter<WebViewer, View>;\n\n    /**\n     Provides locale string translations for this WebViewer.\n\n     This may be configured via the WebViewer's constructor.\n\n     By default, this service will be an instance of {@link LocaleService}, which will just return\n     null translations for all given strings and phrases.\n     */\n    readonly localeService: LocaleService;\n\n    /**\n     Contains semantic data about models in this WebViewer.\n     */\n    readonly data: Data;\n\n    /**\n     Contains geometry and materials for models in this viewer.\n     */\n    readonly scene: Scene;\n\n    /**\n     * Map of all the Views in this WebViewer.\n     *\n     * Each {@link View} is an independently configurable view of the WebViewer's models, with its own canvas, camera position, section planes, lights, and object visual states.\n     */\n    readonly views: { [key: string]: View };\n\n    /**\n     * List of all the Views in this WebViewer.\n     *\n     * Each {@link View} is an independently configurable view of the WebViewer's models, with its own canvas, camera position, section planes, lights, and object visual states.\n     */\n    readonly viewList: View[];\n\n    /**\n     *  The number of {@link View|Views} belonging to this WebViewer.\n     */\n    numViews: number;\n\n    /**\n     List of {@link Plugin}s installed in this WebViewer.\n     @private\n     */\n    readonly pluginList: Plugin[];\n\n    /**\n     The time that this WebViewer was created.\n     */\n    readonly startTime: number = (new Date()).getTime();\n\n    /**\n     * @private\n     */\n    readonly renderer: Renderer;\n\n    /**\n     Creates a WebViewer.\n\n     @param params - WebViewer configuration.\n     @param params.id - ID for this WebViewer, automatically generated by default.\n     @param params.units - The measurement unit type. Accepted values are ````\"meters\"````, ````\"metres\"````, , ````\"centimeters\"````, ````\"centimetres\"````, ````\"millimeters\"````,  ````\"millimetres\"````, ````\"yards\"````, ````\"feet\"```` and ````\"inches\"````.\n     @param params.scale - The number of Real-space units in each World-space coordinate system unit.\n     @param params.origin - The Real-space 3D origin, in current measurement units, at which the World-space coordinate origin ````[0,0,0]```` sits.\n     @param params.localeService - Locale-based translation service.\n     @param params.renderer - Configurable 3D renderer class. Will be a  {@link WebGLRenderer} by default.\n     */\n    constructor(params: {\n        id?: string,\n        units?: string,\n        scale?: number,\n        origin?: math.FloatArrayParam,\n        localeService?: LocaleService,\n        renderer?: Renderer\n    } = {}) {\n\n        this.onTick = new EventEmitter(new EventDispatcher<WebViewer, TickParams>());\n\n        this.onViewCreated = new EventEmitter(new EventDispatcher<WebViewer, View>());\n\n        this.onViewDestroyed = new EventEmitter(new EventDispatcher<WebViewer, View>());\n\n        this.id = params.id || createUUID();\n        this.localeService = params.localeService || new LocaleService();\n        this.data = new Data(this);\n        this.scene = new Scene(this, {});\n        this.viewList = [];\n        this.numViews = 0;\n        this.pluginList = [];\n        this.views = {};\n        this.destroyed = false;\n\n        this.capabilities = {\n            maxViews: 0,\n            astcSupported: false,\n            etc1Supported: false,\n            etc2Supported: false,\n            dxtSupported: false,\n            bptcSupported: false,\n            pvrtcSupported: false\n        };\n\n        this.renderer = params.renderer || new WebGLRenderer({});\n        this.renderer.getCapabilities(this.capabilities);\n        this.renderer.init(this);\n\n        scheduler.registerViewer(this);\n    }\n\n    /**\n     * Creates a new {@link View} within this WebViewer.\n     *\n     * * The maximum number of views you're allowed to create is provided in {@link WebViewerCapabilities.maxViews}. This\n     * will be determined by the {@link Renderer} implementation the WebViewer is configured with.\n     * * To destroy the View after use, call {@link View.destroy}.\n     * * You must add a View to the WebViewer before you can create or load content into the WebViewer's Scene.\n     *\n     * ### Usage\n     *\n     * ````javascript\n     * const view1 = myViewer.createView({\n     *      id: \"myView\",\n     *      canvasId: \"myCanvas1\"\n     *  });\n     *\n     * view1.camera.eye = [-3.933, 2.855, 27.018];\n     * view1.camera.look = [4.400, 3.724, 8.899];\n     * view1.camera.up = [-0.018, 0.999, 0.039];\n     *\n     * //...\n     * ````\n     *\n     * @param params\n     */\n    createView(params: ViewParams): View | null {\n        if (this.viewList.length >= this.capabilities.maxViews) {\n            this.error(`Attempted to create too many Views with View.createView() - maximum of ${this.capabilities.maxViews} is allowed`);\n            return null;\n        }\n        let id = params.id || createUUID();\n        if (this.views[id]) {\n            this.error(`View with ID \"${id}\" already exists - will randomly-generate ID`);\n            id = createUUID();\n        }\n        // @ts-ignore\n        const canvasElement = params.canvasElement || document.getElementById(params.canvasId);\n        if (!(canvasElement instanceof HTMLCanvasElement)) {\n            throw \"Mandatory View config expected: valid canvasId or canvasElement\";\n        }\n        const view = new View(apply({id, viewer: this}, params));\n        this.#registerView(view);\n        view.viewIndex = this.renderer.registerView(view);\n        view.onDestroyed.one( () => {\n            this.#deregisterView(view);\n            this.renderer.deregisterView(view.viewIndex);\n            this.onViewDestroyed.dispatch(this, view);\n        });\n        this.onViewCreated.dispatch(this, view);\n        this.log(`View created: ${view.id}`);\n        return view;\n    }\n\n\n    /**\n     @private\n     */\n    registerPlugin(plugin: Plugin): void {\n        this.pluginList.push(plugin);\n    }\n\n    /**\n     @private\n     */\n    deregisterPlugin(plugin: Plugin): void {\n        for (let i = 0, len = this.pluginList.length; i < len; i++) {\n            const p = this.pluginList[i];\n            if (p === plugin) {\n                p.clear();\n                this.pluginList.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    /**\n     @private\n     */\n    sendToPlugins(name: string, value?: any) {\n        for (let i = 0, len = this.pluginList.length; i < len; i++) {\n            const p = this.pluginList[i];\n            if (p.send) {\n                p.send(name, value);\n            }\n        }\n    }\n\n    /**\n     Trigger a redraw of all {@link View|Views} belonging to this WebViewer.\n\n     @private\n     */\n    redraw(): void {\n        for (let id in this.views) {\n            this.views[id].redraw();\n        }\n    }\n\n    /**\n     Logs a console debugging message for this WebViewer.\n\n     The console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n\n     @private\n     @param message - The message to log\n     */\n    log(message: string): void {\n        message = `[LOG] ${this.#prefixMessageWithID(message)}`;\n        window.console.log(message);\n    }\n\n    /**\n     Logs a warning for this WebViewer to the JavaScript console.\n\n     The console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n\n     @private\n     @param message - The warning message to log\n     */\n    warn(message: string): void {\n        message = `[WARN] ${this.#prefixMessageWithID(message)}`;\n        window.console.warn(message);\n    }\n\n    /**\n     Logs an error for this WebViewer to the JavaScript console.\n\n     The console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\n     @private\n     @param message The error message to log\n     */\n    error(message: string): void {\n        message = `[ERROR] ${this.#prefixMessageWithID(message)}`;\n        window.console.error(message);\n    }\n\n    /**\n     * Destroys this WebViewer and all {@link View|Views}, {@link SceneModel|SceneModels}, {@link DataModel|DataModels} and {@link Plugin}s we've created within it.\n     */\n    destroy(): void {\n        if (this.destroyed) {\n            return;\n        }\n        scheduler.deregisterViewer(this);\n        const pluginList = this.pluginList.slice(); // Array will modify as we delete plugins\n        for (let i = 0, len = pluginList.length; i < len; i++) {\n            const plugin = pluginList[i];\n            plugin.destroy();\n        }\n        for (let id in this.views) {\n            this.views[id].destroy();\n        }\n        this.scene.destroy();\n        this.onTick.clear();\n        this.onViewCreated.clear();\n        this.onViewDestroyed.clear();\n    }\n\n    #prefixMessageWithID(message: string): string {\n        return ` [${this.constructor.name} \"${utils.inQuotes(this.id)}\"]: ${message}`;\n    }\n\n    #registerView(view: View): void {\n        if (this.views[view.id]) {\n            return;\n        }\n        this.views[view.id] = view;\n        for (let viewIndex = 0; ; viewIndex++) {\n            if (!this.viewList[viewIndex]) {\n                this.viewList[viewIndex] = view;\n                this.numViews++;\n                view.viewIndex = viewIndex;\n                return;\n            }\n        }\n    }\n\n    #deregisterView(view: View): void {\n        if (!this.views[view.id]) {\n            return;\n        }\n        delete this.views[view.id];\n        delete this.viewList[view.viewIndex];\n        this.numViews--;\n    }\n\n    /**\n     * @private\n     * @param params\n     */\n    render(params: any) {\n        for (let viewIndex = 0; viewIndex < this.viewList.length; viewIndex++) {\n            this.renderer.render(viewIndex, {force: true});\n        }\n    }\n}\n\n","import type {Scene} from \"../../scene/Scene\";\nimport type {View} from \"../View\";\nimport {Component} from \"../../Component\";\nimport type * as math from '../../math/index';\n\n/**\n * An ambient light source within a {@link View}.\n *\n * ## Summary\n *\n * * Has fixed color and intensity that illuminates all objects equally.\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass AmbientLight extends Component {\n\n    /**\n     ID of this AmbientLight, unique within the {@link View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this AmbientLight belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        intensity: number;\n        color: Float32Array;\n        type: string\n    };\n\n    /**\n     * @param view Owner component. When destroyed, the owner will destroy this AmbientLight as well.\n     * @param cfg AmbientLight configuration\n     */\n    constructor(view: View, cfg: {\n        /** Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.*/\n        id?: string;\n        /** Intensity factor in range ````[0..1]````.  Default is ````1````.*/\n        intensity?: number;\n        /** RGB color in range ````[0..1,0..1,0..1]````. Default is ````[0.7, 0.7, 0.7]````.*/\n        color?: math.FloatArrayParam\n    } = {}) {\n        super(view, cfg);\n        this.view = view;\n        this.#state = {\n            type: \"ambient\",\n            color: new Float32Array(cfg.color || [0.7, 0.7, 0.7]),\n            intensity: (cfg.intensity !== undefined && cfg.intensity !== null) ? cfg.intensity : 1.0\n        };\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Sets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.7]````.\n     *\n     * @param color The AmbientLight's RGB color.\n     */\n    set color(color: math.FloatArrayParam) {\n        this.#state.color.set(color);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.7]````.\n     */\n    get color(): math.FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The AmbientLight's intensity.\n     */\n    set intensity(intensity: number) {\n        this.#state.intensity = intensity !== undefined ? intensity : 1.0;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The AmbientLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Destroys this AmbientLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n    }\n}\n\nexport {AmbientLight};\n","import {Component} from \"../../Component\";\nimport type {View} from \"../View\";\nimport type * as math from '../../math/index';\n/**\n * A directional light source within a {@link View}.\n *\n * ## Summary\n *\n * * Illuminates all objects equally from a given direction.\n * * Has an emission direction vector in {@link DirLight.dir}, but no position.\n * * Defined in either *World* or *View* coordinate space. When in World-space, {@link DirLight.dir} is relative to the\n * World coordinate system, and will appear to move as the {@link Camera} moves. When in View-space, {@link DirLight.dir} is\n * relative to the View coordinate system, and will behave as if fixed to the viewer's head.\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass DirLight extends Component {\n\n    /**\n     ID of this DirLight, unique within the {@link View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this DirLight belongs.\n     */\n    public readonly view: View;\n\n     #state: {\n        type: \"dir\";\n        dir: Float32Array;\n        color: Float32Array;\n        intensity: number;\n        space: \"world\" | \"view\"\n    };\n\n    /**\n     * @param view View that owns this DirLight. When destroyed, the View will destroy this DirLight as well.\n     * @param options The DirLight configuration\n     * @param [options.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param [options.dir=[1.0, 1.0, 1.0]]  A unit vector indicating the direction that the light is shining,  given in either World or View space, depending on the value of the ````space```` parameter.\n     * @param [options.color=[0.7, 0.7, 0.8 ]] The color of this DirLight.\n     * @param [options.intensity=1.0] The intensity of this DirLight, as a factor in range ````[0..1]````.\n     * @param [options.space=\"view\"] The coordinate system the DirLight is defined in - ````\"view\"```` or ````\"space\"````.\n     */\n    constructor(view: View, options: { intensity?: number; color?: math.FloatArrayParam; \n        dir?: math.FloatArrayParam; space?: \"world\" | \"view\" } = {}) {\n        super(view, options);\n        this.view = view;\n        this.#state = {\n            type: \"dir\",\n            dir: new Float32Array(options.dir || [1.0, 1.0, 1.0]),\n            color: new Float32Array(options.color || [0.7, 0.7, 0.8]),\n            intensity: (options.intensity !== undefined && options.intensity !== null) ? options.intensity : 1.0,\n            space: options.space || \"view\"\n        };\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Gets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @returns {Number[]} The direction vector.\n     */\n    get dir(): math.FloatArrayParam {\n        return this.#state.dir;\n    }\n\n    /**\n     * Sets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @param value The direction vector.\n     */\n    set dir(value: math.FloatArrayParam) {\n        this.#state.dir.set(value);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The DirLight's RGB color.\n     */\n    get color(): math.FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param color The DirLight's RGB color.\n     */\n    set color(color: math.FloatArrayParam) {\n        this.#state.color.set(color);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this DirLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The DirLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the intensity of this DirLight.\n     *\n     * Default intensity is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The DirLight's intensity\n     */\n    set intensity(intensity: number) {\n        this.#state.intensity = intensity;\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this DirLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n        this.view.redraw();\n    }\n}\n\nexport {DirLight};\n","import type {View} from \"../View\";\nimport {Component} from \"../../Component\";\nimport type * as math from '../../math/index';\n\n/**\n * A positional light source within a {@link View}.\n *\n * ## Summary\n *\n * * Originates from a single point and spreads outward in all directions, with optional attenuation over distance.\n * * Has a position in {@link PointLight.pos}, but no direction.\n * * Defined in either *World* or *View* coordinate space. When in World-space, {@link PointLight.pos} is relative to\n * the World coordinate system, and will appear to move as the {@link Camera} moves. When in View-space,\n * {@link PointLight.pos} is relative to the View coordinate system, and will behave as if fixed to the viewer's head.\n * * Has {@link PointLight.constantAttenuation}, {@link PointLight.linearAttenuation} and {@link PointLight.quadraticAttenuation}\n * factors, which indicate how intensity attenuates over distance.\n * * {@link AmbientLight}s, {@link PointLight}s and {@link PointLight}s are registered by their {@link Component.id} on {@link View.lights}.\n */\nclass PointLight extends Component {\n\n    /**\n     ID of this PointLight, unique within the {@link View}.\n     */\n    declare public id: string;\n\n    /**\n     * The View to which this PointLight belongs.\n     */\n    public readonly view: View;\n\n    #state: {\n        intensity: number;\n        attenuation: Float32Array;\n        color: Float32Array;\n        pos: Float64Array;\n        type: string;\n        space: string\n    };\n\n    /**\n     * @param view View that owns this PointLight. When destroyed, the View will destroy this PointLight as well.\n     * @param cfg The PointLight configuration\n     * @param [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param [cfg.pos=[ 1.0, 1.0, 1.0 ]] Position, in either World or View space, depending on the value of the **space** parameter.\n     * @param [cfg.color=[0.7, 0.7, 0.8 ]] Color of this PointLight.\n     * @param [cfg.intensity=1.0] Intensity of this PointLight, as a factor in range ````[0..1]````.\n     * @param [cfg.constantAttenuation=0] Constant attenuation factor.\n     * @param [cfg.linearAttenuation=0] Linear attenuation factor.\n     * @param [cfg.quadraticAttenuation=0] Quadratic attenuation factor.\n     * @param [cfg.space=\"view\"] The coordinate system this PointLight is defined in - \"view\" or \"world\".\n     * @param [cfg.castsShadow=false] Flag which indicates if this PointLight casts a castsShadow.\n     */\n    constructor(view: View, cfg: {\n        /** Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.*/\n        id?: string;\n        /** Intensity of this PointLight, as a factor in range ````[0..1]````. */\n        intensity?: number;\n        /** RGB color */\n        color?: math.FloatArrayParam;\n        /** World-space position */\n        pos?: math.FloatArrayParam;\n        /** Quadratic attenuation factor. */\n        quadraticAttenuation?: number;\n        /** Constant attenuation factor */\n        constantAttenuation?: number;\n        /** The coordinate system this PointLight is defined in - \"view\" or \"world\". */\n        space?: string;\n        /** Linear attenuation factor */\n        linearAttenuation?: number\n    } = {}) {\n\n        super(view, cfg);\n\n        this.view = view;\n\n\n        this.#state = {\n            type: \"point\",\n            pos: new Float64Array(cfg.pos || [1.0, 1.0, 1.0]),\n            color: new Float32Array(cfg.color || [0.7, 0.7, 0.8]),\n            intensity: 1.0,\n            // @ts-ignore\n            attenuation: new Float32Array([cfg.constantAttenuation, cfg.linearAttenuation, cfg.quadraticAttenuation]),\n            space: cfg.space || \"view\"\n        };\n\n        this.view.registerLight(this);\n    }\n\n    /**\n     * Gets the position of this PointLight.\n     *\n     * This will be either World- or View-space, depending on the value of {@link PointLight.space}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @returns {Number[]} The position.\n     */\n    get pos(): math.FloatArrayParam {\n        return this.#state.pos;\n    }\n\n    /**\n     * Sets the position of this PointLight.\n     *\n     * This will be either World- or View-space, depending on the value of {@link PointLight.space}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @param pos The position.\n     */\n    set pos(pos: math.FloatArrayParam) {\n        this.#state.pos.set(pos || [1.0, 1.0, 1.0]);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the RGB color of this PointLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The PointLight's RGB color.\n     */\n    get color(): math.FloatArrayParam {\n        return this.#state.color;\n    }\n\n    /**\n     * Sets the RGB color of this PointLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param color The PointLight's RGB color.\n     */\n    set color(color: math.FloatArrayParam) {\n        this.#state.color.set(color || [0.7, 0.7, 0.8]);\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the intensity of this PointLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The PointLight's intensity.\n     */\n    get intensity(): number {\n        return this.#state.intensity;\n    }\n\n    /**\n     * Sets the intensity of this PointLight.\n     *\n     * Default intensity is ````1.0```` for maximum intensity.\n     *\n     * @param intensity The PointLight's intensity\n     */\n    set intensity(intensity: number) {\n        if (intensity === this.#state.intensity) {\n            return;\n        }\n        this.#state.intensity = intensity;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the constant attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The constant attenuation factor.\n     */\n    get constantAttenuation(): number {\n        return this.#state.attenuation[0];\n    }\n\n    /**\n     * Sets the constant attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The constant attenuation factor.\n     */\n    set constantAttenuation(value: number) {\n        this.#state.attenuation[0] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the linear attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The linear attenuation factor.\n     */\n    get linearAttenuation(): number {\n        return this.#state.attenuation[1];\n    }\n\n    /**\n     * Sets the linear attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The linear attenuation factor.\n     */\n    set linearAttenuation(value: number) {\n        this.#state.attenuation[1] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Gets the quadratic attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @returns {Number} The quadratic attenuation factor.\n     */\n    get quadraticAttenuation(): number {\n        return this.#state.attenuation[2];\n    }\n\n    /**\n     * Sets the quadratic attenuation factor for this PointLight.\n     *\n     * Default value is ````0````.\n     *\n     * @param value The quadratic attenuation factor.\n     */\n    set quadraticAttenuation(value: number) {\n        this.#state.attenuation[2] = value;\n        this.view.redraw();\n    }\n\n    /**\n     * Destroys this PointLight.\n     */\n    destroy() {\n        super.destroy();\n        this.view.deregisterLight(this);\n        this.view.redraw();\n    }\n}\n\nexport {PointLight};\n","import type {View} from \"../View\";\nimport {Frustum} from \"../camera/index\";\nimport {Ortho} from \"../camera/index\";\nimport {Perspective} from \"../camera/index\";\nimport {OrthoProjectionType, PerspectiveProjectionType} from \"../../constants\";\n\n/**\n * Saves and restores the state of a {@link View}'s {@link Camera}.\n *\n * ## See Also\n *\n * * {@link ModelMemento} - Saves and restores a snapshot of the visual state of the {@link Entity}'s of a model within a {@link Scene}.\n * * {@link ViewObjectsMemento} - Saves and restores a snapshot of the visual state of the {@link Entity}'s that represent objects within a {@link Scene}.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link WebViewer} and use an {@link TreeViewPlugin} to load an ````.xkt```` model. When the model has loaded, we'll save a snapshot of the {@link Camera} state in an CameraMemento. Then we'll move the Camera, and then we'll restore its original state again from the CameraMemento.\n *\n * ````javascript\n * import {WebViewer, TreeViewPlugin, CameraMemento} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * // Load a model\n * const xktLoader = new TreeViewPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/xkt/schependomlaan/schependomlaan.xkt\"\n * });\n *\n * // Set camera\n * viewer.camera.eye = [-2.56, 8.38, 8.27];\n * viewer.camera.look = [13.44, 3.31, -14.83];\n * viewer.camera.up = [0.10, 0.98, -0.14];\n *\n * model.on(\"loaded\", () => {\n *\n *      // Model has loaded\n *\n *      // Save memento of camera state\n *      const cameraMemento = new CameraMemento();\n *\n *      cameraMemento.saveCamera(viewer.scene);\n *\n *      // Move the camera\n *      viewer.camera.eye = [45.3, 2.00, 5.13];\n *      viewer.camera.look = [0.0, 5.5, 10.0];\n *      viewer.camera.up = [0.10, 0.98, -0.14];\n *\n *      // Restore the camera state again\n *      objectsMemento.restoreCamera(viewer.scene);\n * });\n * ````\n */\nclass CameraMemento {\n    projection: any;\n    up: Float64Array;\n    look: Float64Array;\n    eye: Float64Array;\n\n    /**\n     * Creates a CameraMemento.\n     */\n    constructor() {\n        this.eye = new Float64Array(3);\n        this.look = new Float64Array(3);\n        this.up = new Float64Array(3);\n        this.projection = {};\n    }\n\n    /**\n     * Saves the state of the given {@link View}'s {@link Camera}.\n     *\n     * @param view The view that contains the {@link Camera}.\n     */\n    saveCamera(view: View) {\n\n        const camera = view.camera;\n        const project = camera.project;\n\n        this.eye.set(camera.eye);\n        this.look.set(camera.look);\n        this.up.set(camera.up);\n\n        if (project instanceof Perspective) {\n            this.projection = {\n                projection: PerspectiveProjectionType,\n                fov: project.fov,\n                fovAxis: project.fovAxis,\n                near: project.near,\n                far: project.far\n            };\n        }\n\n        if (project instanceof Ortho) {\n            this.projection = {\n                projection: OrthoProjectionType,\n                scale: project.scale,\n                near: project.near,\n                far: project.far\n            };\n        }\n\n        if (project instanceof Frustum) {\n            this.projection = {\n                projection: \"frustum\",\n                left: project.left,\n                right: project.right,\n                top: project.top,\n                bottom: project.bottom,\n                near: project.near,\n                far: project.far\n            };\n        }\n\n        this.projection = {\n            projection: \"custom\",\n            matrix: project.projMatrix.slice()\n        };\n    }\n\n    /**\n     * Restores a {@link View}'s {@link Camera} to the state previously captured with {@link CameraMemento.saveCamera}.\n     *\n     * @param view The view.\n     * @param {Function} [done] When this callback is given, will fly the {@link Camera} to the saved state then fire the callback. Otherwise will just jump the Camera to the saved state.\n     */\n    restoreCamera(view: View, done?: Function) {\n\n        const camera = view.camera;\n        const savedProjection = this.projection;\n\n        function restoreProjection() {\n\n            switch (savedProjection.type) {\n\n                case PerspectiveProjectionType:\n                    camera.perspective.fov = savedProjection.fov;\n                    camera.perspective.fovAxis = savedProjection.fovAxis;\n                    camera.perspective.near = savedProjection.near;\n                    camera.perspective.far = savedProjection.far;\n                    break;\n\n                case OrthoProjectionType:\n                    camera.ortho.scale = savedProjection.scale;\n                    camera.ortho.near = savedProjection.near;\n                    camera.ortho.far = savedProjection.far;\n                    break;\n\n                case \"frustum\":\n                    camera.frustum.left = savedProjection.left;\n                    camera.frustum.right = savedProjection.right;\n                    camera.frustum.top = savedProjection.top;\n                    camera.frustum.bottom = savedProjection.bottom;\n                    camera.frustum.near = savedProjection.near;\n                    camera.frustum.far = savedProjection.far;\n                    break;\n\n                case \"custom\":\n                    camera.customProjection.projMatrix = savedProjection.matrix;\n                    break;\n            }\n        }\n\n        if (done) {\n            view.cameraFlight.flyTo({\n                eye: this.eye,\n                look: this.look,\n                up: this.up,\n                orthoScale: savedProjection.scale,\n                projection: savedProjection.projection\n            }, () => {\n                restoreProjection();\n                done();\n            });\n        } else {\n            camera.eye = this.eye;\n            camera.look = this.look;\n            camera.up = this.up;\n            restoreProjection();\n            camera.projection = savedProjection.projection;\n        }\n    }\n}\n\nexport {CameraMemento};","import {apply} from \"../../utils/index\";\nimport type {DataModel} from \"../../data/DataModel\";\nimport type {View} from \"../View\";\n\nconst color = new Float32Array(3);\n\n/**\n * Saves and restores a snapshot of the visual state of the {@link ViewObject}'s of a model within a {@link Scene}.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link WebViewer} and use an {@link TreeViewPlugin} to load an ````.xkt```` model. When the model has loaded, we'll hide a couple of {@link Entity}s and save a snapshot of the visual states of all its Entitys in an ModelMemento. Then we'll show all the Entitys\n * again, and then we'll restore the visual states of all the Entitys again from the ModelMemento, which will hide those two Entitys again.\n *\n * ## See Also\n *\n * * {@link CameraMemento} - Saves and restores the state of a {@link Scene}'s {@link Camera}.\n * * {@link ViewObjectsMemento} - Saves and restores a snapshot of the visual state of the {@link Entity}'s that represent objects within a {@link Scene}.\n *\n * ````javascript\n * import {WebViewer, TreeViewPlugin,  ModelMemento} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * // Load a model\n * const xktLoader = new TreeViewPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/xkt/schependomlaan/schependomlaan.xkt\"\n * });\n *\n * model.on(\"loaded\", () => {\n *\n *      // Model has loaded\n *\n *      // Hide a couple of objects\n *      viewer.scene.objects[\"0u4wgLe6n0ABVaiXyikbkA\"].visible = false;\n *      viewer.scene.objects[\"3u4wgLe3n0AXVaiXyikbYO\"].visible = false;\n *\n *      // Save memento of all object states, which includes those two hidden objects\n *      const ModelMemento = new ModelMemento();\n *\n * const dataModel = viewer.data.models\n *      ModelMemento.saveObjects(viewer.scene);\n *\n *      // Show all objects\n *      viewer.scene.setObjectsVisible(viewer.scene.objectIds, true);\n *\n *      // Restore the objects states again, which involves hiding those two objects again\n *      ModelMemento.restoreViewObjects(viewer.scene);\n * });\n * `````\n *\n * ## Masking Saved State\n *\n * We can optionally supply a mask to focus what state we save and restore.\n *\n * For example, to save and restore only the {@link Entity#visible} and {@link Entity#clippable} states:\n *\n * ````javascript\n * ModelMemento.saveObjects(viewer.scene, {\n *     visible: true,\n *     clippable: true\n * });\n *\n * //...\n *\n * // Restore the objects states again\n * ModelMemento.restoreViewObjects(viewer.scene);\n * ````\n */\nclass ModelMemento {\n    #viewObjectsVisible: boolean[];\n    #viewObjectsEdges: boolean[];\n    #viewObjectsXRayed: boolean[];\n    #viewObjectsHighlighted: boolean[];\n    #viewObjectsSelected: boolean[];\n    #viewObjectsClippable: boolean[];\n    #viewObjectsPickable: boolean[];\n    #viewObjectsColorize: number[];\n    #viewObjectsOpacity: number[];\n    #numViewObjects: number;\n\n    #mask?: {\n        opacity: boolean;\n        colorize: boolean;\n        pickable: boolean;\n        clippable: boolean;\n        selected: boolean;\n        highlighted: boolean;\n        xrayed: boolean;\n        edges: boolean;\n        visible: boolean;\n    };\n\n    /**\n     * Creates a ModelMemento.\n     */\n    constructor() {\n        this.#viewObjectsVisible = [];\n        this.#viewObjectsEdges = [];\n        this.#viewObjectsXRayed = [];\n        this.#viewObjectsHighlighted = [];\n        this.#viewObjectsSelected = [];\n        this.#viewObjectsClippable = [];\n        this.#viewObjectsPickable = [];\n        this.#viewObjectsColorize = [];\n        this.#viewObjectsOpacity = [];\n        this.#numViewObjects = 0;\n    }\n\n    /**\n     * Saves a snapshot of the visual state of the {@link ViewObject}'s that represent objects within a model.\n     *\n     * @param view The View.\n     * @param {DataModel} dataModel Represents the model. Corresponds with an {@link ViewObject} that represents the model in the view.\n     * @param {Object} [mask] Masks what state gets saved. Saves all state when not supplied.\n     * @param {boolean} [mask.visible] Saves {@link ViewObject#visible} values when ````true````.\n     * @param {boolean} [mask.visible] Saves {@link ViewObject#visible} values when ````true````.\n     * @param {boolean} [mask.edges] Saves {@link ViewObject#edges} values when ````true````.\n     * @param {boolean} [mask.xrayed] Saves {@link ViewObject#xrayed} values when ````true````.\n     * @param {boolean} [mask.highlighted] Saves {@link ViewObject#highlighted} values when ````true````.\n     * @param {boolean} [mask.selected] Saves {@link ViewObject#selected} values when ````true````.\n     * @param {boolean} [mask.clippable] Saves {@link ViewObject#clippable} values when ````true````.\n     * @param {boolean} [mask.pickable] Saves {@link ViewObject#pickable} values when ````true````.\n     * @param {boolean} [mask.colorize] Saves {@link ViewObject#colorize} values when ````true````.\n     * @param {boolean} [mask.opacity] Saves {@link ViewObject#opacity} values when ````true````.\n     */\n    saveObjects(view: View, dataModel: DataModel, mask?: {\n        opacity: boolean;\n        colorize: boolean;\n        pickable: boolean;\n        clippable: boolean;\n        selected: boolean;\n        highlighted: boolean;\n        xrayed: boolean;\n        edges: boolean;\n        visible: boolean;\n    }) {\n\n        const rootDataObject = dataModel.rootDataObject;\n        if (!rootDataObject) {\n            return;\n        }\n\n       // const objectIds = rootDataObject.getObjectIdsInSubtree();\n        const objectIds: string | any[] = [];\n\n        this.#numViewObjects = 0;\n\n        this.#mask = mask ? apply(mask, {}) : null;\n\n        const objects = view.objects;\n        const visible = (!mask || mask.visible);\n        const edges = (!mask || mask.edges);\n        const xrayed = (!mask || mask.xrayed);\n        const highlighted = (!mask || mask.highlighted);\n        const selected = (!mask || mask.selected);\n        const clippable = (!mask || mask.clippable);\n        const pickable = (!mask || mask.pickable);\n        const colorize = (!mask || mask.colorize);\n        const opacity = (!mask || mask.opacity);\n\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            const objectId = objectIds[i];\n            const object = objects[objectId];\n            if (!object) {\n                continue;\n            }\n            if (visible) {\n                this.#viewObjectsVisible[i] = object.visible;\n            }\n            if (edges) {\n                this.#viewObjectsEdges[i] = object.edges;\n            }\n            if (xrayed) {\n                this.#viewObjectsXRayed[i] = object.xrayed;\n            }\n            if (highlighted) {\n                this.#viewObjectsHighlighted[i] = object.highlighted;\n            }\n            if (selected) {\n                this.#viewObjectsSelected[i] = object.selected;\n            }\n            if (clippable) {\n                this.#viewObjectsClippable[i] = object.clippable;\n            }\n            if (pickable) {\n                this.#viewObjectsPickable[i] = object.pickable;\n            }\n            if (colorize) {\n                const objectColor = object.colorize;\n                this.#viewObjectsColorize[i * 3 + 0] = objectColor[0];\n                this.#viewObjectsColorize[i * 3 + 1] = objectColor[1];\n                this.#viewObjectsColorize[i * 3 + 2] = objectColor[2];\n            }\n            if (opacity) {\n                this.#viewObjectsOpacity[i] = object.opacity;\n            }\n            this.#numViewObjects++;\n        }\n    }\n\n    /**\n     * Restores a {@link View}'s {@link ViewObject}'s to their state previously captured with {@link ModelMemento#saveObjects}.\n     *\n     * Assumes that the model has not been destroyed or modified since saving.\n     *\n     * @param view The View that was given to {@link ModelMemento#saveObjects}.\n     * @param {DataModel} dataModel The metamodel that was given to {@link ModelMemento#saveObjects}.\n     */\n    restoreViewObjects(view: View, dataModel: DataModel) {\n\n        const rootDataObject = dataModel.rootDataObject;\n        if (!rootDataObject) {\n            return;\n        }\n\n      //  const objectIds = rootDataObject.getObjectIdsInSubtree();\nconst objectIds: string | any[] = [];\n\n        const mask = this.#mask;\n\n        const visible = (!mask || mask.visible);\n        const edges = (!mask || mask.edges);\n        const xrayed = (!mask || mask.xrayed);\n        const highlighted = (!mask || mask.highlighted);\n        const selected = (!mask || mask.selected);\n        const clippable = (!mask || mask.clippable);\n        const pickable = (!mask || mask.pickable);\n        const colorize = (!mask || mask.colorize);\n        const opacity = (!mask || mask.opacity);\n\n        const objects = view.objects;\n\n        for (let i = 0, len = objectIds.length; i < len; i++) {\n            const objectId = objectIds[i];\n            const object = objects[objectId];\n            if (!object) {\n                continue;\n            }\n            if (visible) {\n                object.visible = this.#viewObjectsVisible[i];\n            }\n            if (edges) {\n                object.edges = this.#viewObjectsEdges[i];\n            }\n            if (xrayed) {\n                object.xrayed = this.#viewObjectsXRayed[i];\n            }\n            if (highlighted) {\n                object.highlighted = this.#viewObjectsHighlighted[i];\n            }\n            if (selected) {\n                object.selected = this.#viewObjectsSelected[i];\n            }\n            if (clippable) {\n                object.clippable = this.#viewObjectsClippable[i];\n            }\n            if (pickable) {\n                object.pickable = this.#viewObjectsPickable[i];\n            }\n            if (colorize) {\n                color[0] = this.#viewObjectsColorize[i * 3 + 0];\n                color[1] = this.#viewObjectsColorize[i * 3 + 1];\n                color[2] = this.#viewObjectsColorize[i * 3 + 2];\n                object.colorize = color;\n            }\n            if (opacity) {\n                object.opacity = this.#viewObjectsOpacity[i];\n            }\n        }\n    }\n}\n\nexport {ModelMemento};","import * as utils from \"../../utils/index\";\nimport type {View} from \"../View\";\n\nconst color = new Float32Array(3);\n\n/**\n * Saves and restores a snapshot of the visual state of the {@link ViewObject}'s that represent objects within a {@link View}.\n *\n * * An ViewObject represents an object when {@link ViewObject.isObject} is ````true````.\n * * Each object-ViewObject is registered by {@link ViewObject.id} in {@link View.objects}.\n *\n * ## See Also\n *\n * * {@link CameraMemento} - Saves and restores the state of a {@link View}'s {@link Camera}.\n * * {@link ModelMemento} - Saves and restores a snapshot of the visual state of the {@link ViewObject}'s of a model within a {@link View}.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link WebViewer} and use an {@link TreeViewPlugin} to load an ````.xkt```` model. When the model has loaded, we'll hide a couple of {@link ViewObject|ViewObjects} and save a snapshot of the visual states of all the ViewObjects in an ViewObjectsMemento. Then we'll show all the ViewObjects\n * again, and then we'll restore the visual states of all the ViewObjects again from the ViewObjectsMemento, which will hide those two ViewObjects again.\n *\n * ````javascript\n * import {WebViewer, TreeViewPlugin, ViewObjectsMemento} from \"xeokit-viewer.es.js\";\n *\n * const viewer = new WebViewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * // Load a model\n * const xktLoader = new TreeViewPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/xkt/schependomlaan/schependomlaan.xkt\"\n * });\n *\n * model.on(\"loaded\", () => {\n *\n *      // Model has loaded\n *\n *      // Hide a couple of objects\n *      viewer.view.objects[\"0u4wgLe6n0ABVaiXyikbkA\"].visible = false;\n *      viewer.view.objects[\"3u4wgLe3n0AXVaiXyikbYO\"].visible = false;\n *\n *      // Save memento of all object states, which includes those two hidden objects\n *      const viewObjectsMemento = new ViewObjectsMemento();\n *\n *      viewObjectsMemento.saveObjects(viewer.view);\n *\n *      // Show all objects\n *      viewer.view.set#viewObjectsVisible(viewer.view.objectIds, true);\n *\n *      // Restore the objects states again, which involves hiding those two objects again\n *      viewObjectsMemento.restoreViewObjects(viewer.view);\n * });\n * `````\n *\n * ## Masking Saved State\n *\n * We can optionally supply a mask to focus what state we save and restore.\n *\n * For example, to save and restore only the {@link ViewObject#visible} and {@link ViewObject#clippable} states:\n *\n * ````javascript\n * viewObjectsMemento.saveObjects(viewer.view, {\n *     visible: true,\n *     clippable: true\n * });\n *\n * //...\n *\n * // Restore the objects states again\n * viewObjectsMemento.restoreViewObjects(viewer.view);\n * ````\n */\nclass ViewObjectsMemento {\n\n    #viewObjectsVisible: boolean[];\n    #viewObjectsEdges: boolean[];\n    #viewObjectsXrayed: boolean[];\n    #viewObjectsHighlighted: boolean[];\n    #viewObjectsSelected: boolean[];\n    #viewObjectsClippable: boolean[];\n    #viewObjectsPickable: boolean[];\n    #viewObjectsColorize: number[];\n    #viewObjectsHasColorize: boolean[];\n    #viewObjectsOpacity: number[];\n    numObjects: number;\n\n    #mask?: {\n        opacity: boolean;\n        colorize: boolean;\n        pickable: boolean;\n        clippable: boolean;\n        selected: boolean;\n        highlighted: boolean;\n        xrayed: boolean;\n        edges: boolean;\n        visible: boolean;\n    };\n\n    /**\n     * Creates an ViewObjectsMemento.\n     */\n    constructor() {\n        this.#viewObjectsVisible = [];\n        this.#viewObjectsEdges = [];\n        this.#viewObjectsXrayed = [];\n        this.#viewObjectsHighlighted = [];\n        this.#viewObjectsSelected = [];\n        this.#viewObjectsClippable = [];\n        this.#viewObjectsPickable = [];\n        this.#viewObjectsColorize = [];\n        this.#viewObjectsHasColorize = [];\n        this.#viewObjectsOpacity = [];\n        this.numObjects = 0;\n    }\n\n    /**\n     * Saves a snapshot of the visual state of the {@link ViewObject}'s that represent objects within a {@link View}.\n     *\n     * @param view The view.\n     * @param {Object} [mask] Masks what state gets saved. Saves all state when not supplied.\n     * @param {boolean} [mask.visible] Saves {@link ViewObject#visible} values when ````true````.\n     * @param {boolean} [mask.edges] Saves {@link ViewObject#edges} values when ````true````.\n     * @param {boolean} [mask.xrayed] Saves {@link ViewObject#xrayed} values when ````true````.\n     * @param {boolean} [mask.highlighted] Saves {@link ViewObject#highlighted} values when ````true````.\n     * @param {boolean} [mask.selected] Saves {@link ViewObject#selected} values when ````true````.\n     * @param {boolean} [mask.clippable] Saves {@link ViewObject#clippable} values when ````true````.\n     * @param {boolean} [mask.pickable] Saves {@link ViewObject#pickable} values when ````true````.\n     * @param {boolean} [mask.colorize] Saves {@link ViewObject#colorize} values when ````true````.\n     * @param {boolean} [mask.opacity] Saves {@link ViewObject#opacity} values when ````true````.\n     */\n    saveObjects(view: View, mask?: {\n        opacity: boolean;\n        colorize: boolean;\n        pickable: boolean;\n        clippable: boolean;\n        selected: boolean;\n        highlighted: boolean;\n        xrayed: boolean;\n        edges: boolean;\n        visible: boolean;\n    }) {\n\n        this.numObjects = 0;\n\n        this.#mask = mask ? utils.apply(mask, {}) : null;\n\n        const objects = view.objects;\n        const visible = (!mask || mask.visible);\n        const edges = (!mask || mask.edges);\n        const xrayed = (!mask || mask.xrayed);\n        const highlighted = (!mask || mask.highlighted);\n        const selected = (!mask || mask.selected);\n        const clippable = (!mask || mask.clippable);\n        const pickable = (!mask || mask.pickable);\n        const colorize = (!mask || mask.colorize);\n        const opacity = (!mask || mask.opacity);\n\n        for (let objectId in objects) {\n            if (objects.hasOwnProperty(objectId)) {\n                const object = objects[objectId];\n                const i = this.numObjects;\n                if (visible) {\n                    this.#viewObjectsVisible[i] = object.visible;\n                }\n                if (edges) {\n                    this.#viewObjectsEdges[i] = object.edges;\n                }\n                if (xrayed) {\n                    this.#viewObjectsXrayed[i] = object.xrayed;\n                }\n                if (highlighted) {\n                    this.#viewObjectsHighlighted[i] = object.highlighted;\n                }\n                if (selected) {\n                    this.#viewObjectsSelected[i] = object.selected;\n                }\n                if (clippable) {\n                    this.#viewObjectsClippable[i] = object.clippable;\n                }\n                if (pickable) {\n                    this.#viewObjectsPickable[i] = object.pickable;\n                }\n                if (colorize) {\n                    const objectColor = object.colorize;\n                    if (objectColor) {\n                        this.#viewObjectsColorize[i * 3 + 0] = objectColor[0];\n                        this.#viewObjectsColorize[i * 3 + 1] = objectColor[1];\n                        this.#viewObjectsColorize[i * 3 + 2] = objectColor[2];\n                        this.#viewObjectsHasColorize[i] = true;\n                    } else {\n                        this.#viewObjectsHasColorize[i] = false;\n                    }\n                }\n                if (opacity) {\n                    this.#viewObjectsOpacity[i] = object.opacity;\n                }\n                this.numObjects++;\n            }\n        }\n    }\n\n    /**\n     * Restores a {@link View}'s {@link ViewObject}'s to their state previously captured with {@link ViewObjectsMemento#saveObjects}.\n     * @param view The view.\n     */\n    restoreViewObjects(view: View) {\n\n        const mask = this.#mask;\n\n        const visible = (!mask || mask.visible);\n        const edges = (!mask || mask.edges);\n        const xrayed = (!mask || mask.xrayed);\n        const highlighted = (!mask || mask.highlighted);\n        const selected = (!mask || mask.selected);\n        const clippable = (!mask || mask.clippable);\n        const pickable = (!mask || mask.pickable);\n        const colorize = (!mask || mask.colorize);\n        const opacity = (!mask || mask.opacity);\n\n        let i = 0;\n\n        const objects = view.objects;\n\n        for (let objectId in objects) {\n            if (objects.hasOwnProperty(objectId)) {\n                const object = objects[objectId];\n                if (visible) {\n                    object.visible = this.#viewObjectsVisible[i];\n                }\n                if (edges) {\n                    object.edges = this.#viewObjectsEdges[i];\n                }\n                if (xrayed) {\n                    object.xrayed = this.#viewObjectsXrayed[i];\n                }\n                if (highlighted) {\n                    object.highlighted = this.#viewObjectsHighlighted[i];\n                }\n                if (selected) {\n                    object.selected = this.#viewObjectsSelected[i];\n                }\n                if (clippable) {\n                    object.clippable = this.#viewObjectsClippable[i];\n                }\n                if (pickable) {\n                    object.pickable = this.#viewObjectsPickable[i];\n                }\n                if (colorize) {\n                    if (this.#viewObjectsHasColorize[i]) {\n                        color[0] = this.#viewObjectsColorize[i * 3 + 0];\n                        color[1] = this.#viewObjectsColorize[i * 3 + 1];\n                        color[2] = this.#viewObjectsColorize[i * 3 + 2];\n                        object.colorize = color;\n                    } else {\n                        object.colorize = null;\n                    }\n                }\n                if (opacity) {\n                    object.opacity = this.#viewObjectsOpacity[i];\n                }\n                i++;\n            }\n        }\n    }\n}\n\nexport {ViewObjectsMemento};","import {CompressedTextureParams, constants, WebViewer, WebViewerCapabilities} from \"../../index\";\nimport type {TextureTranscoder} from \"../TextureTranscoder\";\nimport {FileLoader, WorkerPool} from \"../../utils\";\n\nconst KTX2TransferSRGB = 2;\nconst KTX2_ALPHA_PREMULTIPLIED = 1;\n\nlet activeTranscoders = 0;\n\nconst BasisFormat = {\n    ETC1S: 0,\n    UASTC_4x4: 1\n};\n\nconst TranscoderFormat = {\n    ETC1: 0,\n    ETC2: 1,\n    BC1: 2,\n    BC3: 3,\n    BC4: 4,\n    BC5: 5,\n    BC7_M6_OPAQUE_ONLY: 6,\n    BC7_M5: 7,\n    PVRTC1_4_RGB: 8,\n    PVRTC1_4_RGBA: 9,\n    ASTC_4x4: 10,\n    ATC_RGB: 11,\n    ATC_RGBA_INTERPOLATED_ALPHA: 12,\n    RGBA32: 13,\n    RGB565: 14,\n    BGR565: 15,\n    RGBA4444: 16\n};\n\nconst EngineFormat = {\n    RGBAFormat: constants.RGBAFormat,\n    RGBA_ASTC_4x4_Format: constants.RGBA_ASTC_4x4_Format,\n    RGBA_BPTC_Format: constants.RGBA_BPTC_Format,\n    RGBA_ETC2_EAC_Format: constants.RGBA_ETC2_EAC_Format,\n    RGBA_PVRTC_4BPPV1_Format: constants.RGBA_PVRTC_4BPPV1_Format,\n    RGBA_S3TC_DXT5_Format: constants.RGBA_S3TC_DXT5_Format,\n    RGB_ETC1_Format: constants.RGB_ETC1_Format,\n    RGB_ETC2_Format: constants.RGB_ETC2_Format,\n    RGB_PVRTC_4BPPV1_Format: constants.RGB_PVRTC_4BPPV1_Format,\n    RGB_S3TC_DXT1_Format: constants.RGB_S3TC_DXT1_Format\n};\n\n/**\n * KTX2 texture data transcoding strategy.\n *\n * A {@link Renderer} implementation usually has one of these, so that it can create compressed textures from transcoded\n * KTX2 texture data via {@link SceneModel.createTexture}.\n *\n * By default, a {@link WebViewer} has an internal {@link WebGLRenderer}, which has a {@link KTX2TextureTranscoder}.\n *\n * ## Overview\n *\n * * Uses the [Basis Universal GPU Texture Codec](https://github.com/BinomialLLC/basis_universal) to\n * transcode [KTX2](https://github.khronos.org/KTX-Specification/) textures.\n * * Loads the Basis Codec from [CDN](https://cdn.jsdelivr.net/npm/@xeokit/xeokit-viewer/dist/basis/) by default, but can\n * also be configured to load the Codec from local files.\n * * We also bundle the Basis Codec with the xeokit-viewer npm package, and in the [repository](https://github.com/xeokit/xeokit-viewer/tree/master/dist/basis).\n *\n * ## What is KTX2?\n *\n * A [KTX2](https://github.khronos.org/KTX-Specification/) file stores GPU texture data in the Khronos Texture 2.0 (KTX2) container format. It contains image data for\n * a texture asset compressed with Basis Universal (BasisU) supercompression that can be transcoded to different formats\n * depending on the support provided by the target devices. KTX2 provides a lightweight format for distributing texture\n * assets to GPUs. Due to BasisU compression, KTX2 files can store any image format supported by GPUs.\n *\n * ## Loading XKT files containing KTX2 textures\n *\n * ````javascript\n * const myViewer = new WebViewer({\n *     id: \"myViewer\",\n *     renderer: new WebGLRenderer({ // Optional\n *          textureTranscoder: new KTX2TextureTranscoder({ // Optional\n *              transcoderPath: \"./../dist/basis/\" // Optional, path to BasisU transcoder module\n *          })\n *     })\n * });\n *\n * const view1 = myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * const xktLoader = new TreeViewPlugin(viewer);\n *\n * const sceneModel = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./HousePlan.xkt\" // <<------ XKT file with KTX2 textures\n * });\n * ````\n *\n * ## Loading KTX2 files into a SceneModel\n *\n * ````javascript\n * const myViewer = new WebViewer({\n *     id: \"myViewer\",\n *     renderer: new WebGLRenderer({ // Optional\n *          textureTranscoder: new KTX2TextureTranscoder({ // Optional\n *              transcoderPath: \"./../dist/basis/\" // Optional, path to BasisU transcoder module\n *          })\n *     })\n * });\n *\n * const view1 = myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * const sceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n *  });\n *\n * sceneModel.createTexture({\n *      id: \"myColorTexture\",\n *      src: \"sample_uastc_zstd.ktx2\" // <<----- KTX2 texture asset\n * });\n *\n * sceneModel.createTexture({\n *      id: \"myMetallicRoughnessTexture\",\n *      src: \"crosshatchAlphaMap.jpg\" // <<----- JPEG texture asset\n * });\n *\n * sceneModel.createTextureSet({\n *      id: \"myTextureSet\",\n *      colorTextureId: \"myColorTexture\",\n *      metallicRoughnessTextureId: \"myMetallicRoughnessTexture\"\n *  });\n *\n * sceneModel.createGeometry({\n *     id: \"myGeometry\",\n *     primitive: constants.TrianglesPrimitive,\n *     positions: [1, 1, 1, ...],\n *     normals: [0, 0, 1, 0, ...],\n *     uv: [1, 0, 0, ...],\n *     indices: [0, 1, 2, ...],\n * });\n *\n * sceneModel.createMesh({\n *      id: \"myMesh\",\n *      textureSetId: \"myTextureSet\",\n *      geometryId: \"myGeometry\"\n *  });\n *\n * sceneModel.createObject({\n *      id: \"myObject\",\n *      meshIds: [\"myMesh\"]\n *  });\n *\n * sceneModel.build();\n * ````\n *\n * ## Loading KTX2 ArrayBuffers into a SceneModel\n *\n * ````javascript\n * const myViewer = new WebViewer({\n *     id: \"myViewer\",\n *     renderer: new WebGLRenderer({ // Optional\n *          textureTranscoder: new KTX2TextureTranscoder({ // Optional\n *              transcoderPath: \"./../dist/basis/\" // Optional, path to BasisU transcoder module\n *          })\n *     })\n * });\n *\n * const view1 = myViewer.createView({\n *     id: \"myView\",\n *     canvasId: \"myCanvas1\"\n * });\n *\n * view1.camera.eye = [-3.933, 2.855, 27.018];\n * view1.camera.look = [4.400, 3.724, 8.899];\n * view1.camera.up = [-0.018, 0.999, 0.039];\n *\n * const sceneModel = myViewer.scene.createModel({\n *      id: \"myModel\"\n * });\n *\n * utils.loadArraybuffer(\"sample_uastc_zstd.ktx2\",(arrayBuffer) => {\n *\n *      sceneModel.createTexture({\n *         id: \"myColorTexture\",\n *         buffers: [arrayBuffer] // <<----- KTX2 texture asset\n *      });\n *\n *      sceneModel.createTexture({\n *         id: \"myMetallicRoughnessTexture\",\n *         src: \"../assets/textures/alpha/crosshatchAlphaMap.jpg\" // <<----- JPEG texture asset\n *      });\n *\n *      sceneModel.createTextureSet({\n *        id: \"myTextureSet\",\n *        colorTextureId: \"myColorTexture\",\n *        metallicRoughnessTextureId: \"myMetallicRoughnessTexture\"\n *      });\n *\n *      sceneModel.createGeometry({\n *          id: \"myGeometry\",\n *          primitive: constants.TrianglesPrimitive,\n *          positions: [1, 1, 1, ...],\n *          normals: [0, 0, 1, 0, ...],\n *          uv: [1, 0, 0, ...],\n *          indices: [0, 1, 2, ...],\n *      });\n *\n *      sceneModel.createMesh({\n *          id: \"myMesh\",\n *          textureSetId: \"myTextureSet\",\n *          geometryId: \"myGeometry\"\n *      });\n *\n *      sceneModel.createObject({\n *          id: \"myObject\",\n *          meshIds: [\"myMesh\"]\n *      });\n *\n *      sceneModel.build();\n * });\n * ````\n */\nexport class KTX2TextureTranscoder implements TextureTranscoder {\n\n    #transcoderPath: string;\n    #transcoderBinary: any;\n    #transcoderPending: null | Promise<void>;\n    #workerPool: WorkerPool;\n    #workerSourceURL: string;\n    #workerConfig: null | { astcSupported: any; etc1Supported: any; pvrtcSupported: any; etc2Supported: any; dxtSupported: any; bptcSupported: any };\n    #supportedFileTypes: string[];\n    #withCredentials: boolean;\n\n    /**\n     * Creates a new KTX2TextureTranscoder.\n     *\n     * @param {String} [params.transcoderPath=\"https://cdn.jsdelivr.net/npm/@xeokit/xeokit-viewer/dist/basis/\"] Path to the Basis\n     * transcoder module that internally does the heavy lifting for our KTX2TextureTranscoder. If we omit this configuration,\n     * then our KTX2TextureTranscoder will load it from ````https://cdn.jsdelivr.net/npm/@xeokit/xeokit-viewer/dist/basis/```` by\n     * default. Therefore, make sure your application is connected to the internet if you wish to use the default transcoder path.\n     * @param {Number} [params.workerLimit] The maximum number of Workers to use for transcoding.\n     */\n    constructor(params: { transcoderPath?: string, workerLimit?: number }) {\n\n        this.#transcoderPath = params.transcoderPath || \"https://cdn.jsdelivr.net/npm/@xeokit/xeokit-viewer/dist/basis/\";\n        this.#transcoderBinary = null;\n        this.#transcoderPending = null;\n        this.#workerPool = new WorkerPool();\n        this.#workerSourceURL = '';\n\n        if (params.workerLimit) {\n            this.#workerPool.setWorkerLimit(params.workerLimit);\n        }\n\n        this.#workerConfig = null;\n        this.#withCredentials = false;\n        this.#supportedFileTypes = [\"xkt2\"];\n    }\n\n    /**\n     * Called by {@link Renderer} to initialize this transcoder.\n     *\n     * @param viewerCapabilities\n     */\n    init(viewerCapabilities: WebViewerCapabilities) {\n        this.#workerConfig = {\n            astcSupported: viewerCapabilities.astcSupported,\n            etc1Supported: viewerCapabilities.etc1Supported,\n            etc2Supported: viewerCapabilities.etc2Supported,\n            dxtSupported: viewerCapabilities.dxtSupported,\n            bptcSupported: viewerCapabilities.bptcSupported,\n            pvrtcSupported: viewerCapabilities.pvrtcSupported\n        };\n    }\n\n    /**\n     * Transcodes texture data from transcoded buffers.\n     *\n     * @param {ArrayBuffer[]} buffers Transcoded input texture data. Given as an array of buffers so that we can support multi-image textures, such as cube maps.\n     * @param {*} config Transcoding options.\n     * @returns {Promise<CompressedTextureParams>} Transcoded output texture data.\n     */\n    transcode(buffers: ArrayBuffer[], config = {}): Promise<CompressedTextureParams> {\n        return new Promise<CompressedTextureParams>((resolve, reject) => {\n            const taskConfig = config;\n            this.#initTranscoder().then(() => {\n                return this.#workerPool.postMessage({\n                    type: 'transcode',\n                    buffers,\n                    taskConfig: taskConfig\n                }, buffers);\n            }).then((e) => {\n                // @ts-ignore\n                const transcodeResult = e.data;\n                const {mipmaps, width, height, format, type, error, dfdTransferFn, dfdFlags} = transcodeResult;\n                if (type === 'error') {\n                    return reject(error);\n                }\n                resolve(<CompressedTextureParams>{\n                    mipmaps,\n                    props: {\n                        format,\n                        minFilter: mipmaps.length === 1 ? constants.LinearFilter : constants.LinearMipmapLinearFilter,\n                        magFilter: mipmaps.length === 1 ? constants.LinearFilter : constants.LinearMipmapLinearFilter,\n                        encoding: dfdTransferFn === KTX2TransferSRGB ? constants.sRGBEncoding : constants.LinearEncoding,\n                        premultiplyAlpha: !!(dfdFlags & KTX2_ALPHA_PREMULTIPLIED)\n                    }\n                });\n            });\n        });\n    }\n\n    #initTranscoder() {\n        if (!this.#transcoderPending) {\n            const jsLoader = new FileLoader();\n            jsLoader.setPath(this.#transcoderPath);\n            jsLoader.setWithCredentials(this.#withCredentials);\n            // @ts-ignore\n            const jsContent = jsLoader.loadAsync('basis_transcoder.js');\n            const binaryLoader = new FileLoader();\n            binaryLoader.setPath(this.#transcoderPath);\n            binaryLoader.setResponseType('arraybuffer');\n            binaryLoader.setWithCredentials(this.#withCredentials);\n            // @ts-ignore\n            const binaryContent = binaryLoader.loadAsync('basis_transcoder.wasm');\n            this.#transcoderPending = Promise.all([jsContent, binaryContent])\n                .then(([jsContent, binaryContent]) => {\n                    const fn = BasisWorker.toString();\n                    const body = [\n                        '/* constants */',\n                        'let _EngineFormat = ' + JSON.stringify(EngineFormat),\n                        'let _TranscoderFormat = ' + JSON.stringify(TranscoderFormat),\n                        'let _BasisFormat = ' + JSON.stringify(BasisFormat),\n                        '/* basis_transcoder.js */',\n                        jsContent,\n                        '/* worker */',\n                        fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n                    ].join('\\n');\n                    this.#workerSourceURL = URL.createObjectURL(new Blob([body]));\n                    this.#transcoderBinary = binaryContent;\n                    this.#workerPool.setWorkerCreator(() => {\n                        const worker = new Worker(this.#workerSourceURL);\n                        const transcoderBinary = this.#transcoderBinary.slice(0);\n                        worker.postMessage({\n                            type: 'init',\n                            config: this.#workerConfig,\n                            transcoderBinary\n                        }, [transcoderBinary]);\n                        return worker;\n                    });\n                });\n            if (activeTranscoders > 0) {\n                console.warn('KTX2TextureTranscoder: Multiple active KTX2TextureTranscoder may cause performance issues.' + ' Use a single KTX2TextureTranscoder instance, or call .dispose() on old instances.');\n            }\n            activeTranscoders++;\n        }\n        return this.#transcoderPending;\n    }\n\n    /**\n     * Destroys this KTX2TextureTranscoder\n     */\n    destroy() {\n        URL.revokeObjectURL(this.#workerSourceURL);\n        this.#workerPool.destroy();\n        activeTranscoders--;\n    }\n}\n\n\nconst BasisWorker = function () {\n\n    let config: { [x: string]: any; };\n    let transcoderPending: Promise<any>;\n    let BasisModule: any;\n\n    // @ts-ignore\n    const EngineFormat = _EngineFormat; // eslint-disable-line no-undef\n    // @ts-ignore\n    const TranscoderFormat = _TranscoderFormat; // eslint-disable-line no-undef\n    // @ts-ignore\n    const BasisFormat = _BasisFormat; // eslint-disable-line no-undef\n\n    self.addEventListener('message', function (e) {\n        const message = e.data;\n        switch (message.type) {\n            case 'init':\n                config = message.config;\n                init(message.transcoderBinary);\n                break;\n            case 'transcode':\n                transcoderPending.then(() => {\n                    try {\n                        const {\n                            width,\n                            height,\n                            hasAlpha,\n                            mipmaps,\n                            format,\n                            dfdTransferFn,\n                            dfdFlags\n                        } = transcode(message.buffers[0]);\n                        const buffers = [];\n                        for (let i = 0; i < mipmaps.length; ++i) {\n                            buffers.push(mipmaps[i].data.buffer);\n                        }\n                        self.postMessage({\n                            type: 'transcode',\n                            id: message.id,\n                            width,\n                            height,\n                            hasAlpha,\n                            mipmaps,\n                            format,\n                            dfdTransferFn,\n                            dfdFlags\n                            // @ts-ignore\n                        }, buffers);\n                    } catch (error) {\n                        console.error(`[BasisWorker]: ${error}`);\n                        // @ts-ignore\n                        self.postMessage({type: 'error', id: message.id, error: error.message});\n                    }\n                });\n                break;\n        }\n    });\n\n    function init(wasmBinary: any) {\n        transcoderPending = new Promise(resolve => {\n            BasisModule = {\n                wasmBinary,\n                onRuntimeInitialized: resolve\n            };\n            // @ts-ignore\n            BASIS(BasisModule); // eslint-disable-line no-undef\n        }).then(() => {\n            BasisModule.initializeBasis();\n            if (BasisModule.KTX2File === undefined) {\n                console.warn('KTX2TextureTranscoder: Please update Basis Universal transcoder.');\n            }\n        });\n    }\n\n    function transcode(buffer: Iterable<number>) {\n        const ktx2File = new BasisModule.KTX2File(new Uint8Array(buffer));\n\n        function cleanup() {\n            ktx2File.close();\n            ktx2File.delete();\n        }\n\n        if (!ktx2File.isValid()) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: Invalid or unsupported .ktx2 file');\n        }\n        const basisFormat = ktx2File.isUASTC() ? BasisFormat.UASTC_4x4 : BasisFormat.ETC1S;\n        const width = ktx2File.getWidth();\n        const height = ktx2File.getHeight();\n        const levels = ktx2File.getLevels();\n        const hasAlpha = ktx2File.getHasAlpha();\n        const dfdTransferFn = ktx2File.getDFDTransferFunc();\n        const dfdFlags = ktx2File.getDFDFlags();\n        const {transcoderFormat, engineFormat} = getTranscoderFormat(basisFormat, width, height, hasAlpha);\n        if (!width || !height || !levels) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: Invalid texture');\n        }\n        if (!ktx2File.startTranscoding()) {\n            cleanup();\n            throw new Error('KTX2TextureTranscoder: .startTranscoding failed');\n        }\n        const mipmaps = [];\n        for (let mip = 0; mip < levels; mip++) {\n            const levelInfo = ktx2File.getImageLevelInfo(mip, 0, 0);\n            const mipWidth = levelInfo.origWidth;\n            const mipHeight = levelInfo.origHeight;\n            const dst = new Uint8Array(ktx2File.getImageTranscodedSizeInBytes(mip, 0, 0, transcoderFormat));\n            const status = ktx2File.transcodeImage(dst, mip, 0, 0, transcoderFormat, 0, -1, -1);\n            if (!status) {\n                cleanup();\n                throw new Error('KTX2TextureTranscoder: .transcodeImage failed.');\n            }\n            mipmaps.push({data: dst, width: mipWidth, height: mipHeight});\n        }\n        cleanup();\n        return {width, height, hasAlpha, mipmaps, format: engineFormat, dfdTransferFn, dfdFlags};\n    }\n\n    // Optimal choice of a transcoder target format depends on the Basis format (ETC1S or UASTC),\n    // device capabilities, and texture dimensions. The list below ranks the formats separately\n    // for ETC1S and UASTC.\n    //\n    // In some cases, transcoding UASTC to RGBA32 might be preferred for higher quality (at\n    // significant memory cost) compared to ETC1/2, BC1/3, and PVRTC. The transcoder currently\n    // chooses RGBA32 only as a last resort and does not expose that option to the caller.\n\n    const FORMAT_OPTIONS = [{\n        if: 'astcSupported',\n        basisFormat: [BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ASTC_4x4, TranscoderFormat.ASTC_4x4],\n        engineFormat: [EngineFormat.RGBA_ASTC_4x4_Format, EngineFormat.RGBA_ASTC_4x4_Format],\n        priorityETC1S: Infinity,\n        priorityUASTC: 1,\n        needsPowerOfTwo: false\n    }, {\n        if: 'bptcSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.BC7_M5, TranscoderFormat.BC7_M5],\n        engineFormat: [EngineFormat.RGBA_BPTC_Format, EngineFormat.RGBA_BPTC_Format],\n        priorityETC1S: 3,\n        priorityUASTC: 2,\n        needsPowerOfTwo: false\n    }, {\n        if: 'dxtSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.BC1, TranscoderFormat.BC3],\n        engineFormat: [EngineFormat.RGB_S3TC_DXT1_Format, EngineFormat.RGBA_S3TC_DXT5_Format],\n        priorityETC1S: 4,\n        priorityUASTC: 5,\n        needsPowerOfTwo: false\n    }, {\n        if: 'etc2Supported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ETC1, TranscoderFormat.ETC2],\n        engineFormat: [EngineFormat.RGB_ETC2_Format, EngineFormat.RGBA_ETC2_EAC_Format],\n        priorityETC1S: 1,\n        priorityUASTC: 3,\n        needsPowerOfTwo: false\n    }, {\n        if: 'etc1Supported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.ETC1],\n        engineFormat: [EngineFormat.RGB_ETC1_Format],\n        priorityETC1S: 2,\n        priorityUASTC: 4,\n        needsPowerOfTwo: false\n    }, {\n        if: 'pvrtcSupported',\n        basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC_4x4],\n        transcoderFormat: [TranscoderFormat.PVRTC1_4_RGB, TranscoderFormat.PVRTC1_4_RGBA],\n        engineFormat: [EngineFormat.RGB_PVRTC_4BPPV1_Format, EngineFormat.RGBA_PVRTC_4BPPV1_Format],\n        priorityETC1S: 5,\n        priorityUASTC: 6,\n        needsPowerOfTwo: true\n    }];\n    const ETC1S_OPTIONS = FORMAT_OPTIONS.sort(function (a, b) {\n        return a.priorityETC1S - b.priorityETC1S;\n    });\n    const UASTC_OPTIONS = FORMAT_OPTIONS.sort(function (a, b) {\n        return a.priorityUASTC - b.priorityUASTC;\n    });\n\n    function getTranscoderFormat(basisFormat: number, width: number, height: number, hasAlpha: any) {\n        let transcoderFormat;\n        let engineFormat;\n        const options = basisFormat === BasisFormat.ETC1S ? ETC1S_OPTIONS : UASTC_OPTIONS;\n        for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (!config[opt.if]) continue;\n            if (!opt.basisFormat.includes(basisFormat)) continue;\n            if (hasAlpha && opt.transcoderFormat.length < 2) continue;\n            if (opt.needsPowerOfTwo && !(isPowerOfTwo(width) && isPowerOfTwo(height))) continue;\n            transcoderFormat = opt.transcoderFormat[hasAlpha ? 1 : 0];\n            engineFormat = opt.engineFormat[hasAlpha ? 1 : 0];\n            return {\n                transcoderFormat,\n                engineFormat\n            };\n        }\n        console.warn('KTX2TextureTranscoder: No suitable compressed texture format found. Decoding to RGBA32.');\n        transcoderFormat = TranscoderFormat.RGBA32;\n        engineFormat = EngineFormat.RGBAFormat;\n        return {\n            transcoderFormat,\n            engineFormat\n        };\n    }\n\n    function isPowerOfTwo(value: number) {\n        if (value <= 2) return true;\n        return (value & value - 1) === 0 && value !== 0;\n    }\n};\n\n","import type {WebViewer} from \"./WebViewer\";\n\n/**\n * Base class for {@link WebViewer} plugins.\n */\nabstract class Plugin {\n\n    /**\n     * Unique ID of this Plugin.\n     */\n    public readonly id: string;\n\n    /**\n     * The WebViewer that contains this Plugin.\n     */\n    public readonly viewer: WebViewer;\n\n    /**\n     * Creates this Plugin and installs it into the given {@link WebViewer}.\n     *\n     * @param id - ID for this plugin, unique among all plugins in the viewer.\n     * @param viewer - The viewer.\n     * @param [cfg] - Options\n     */\n    protected constructor(id: string, viewer: WebViewer, cfg?: {}) {\n\n        this.id = id;\n        this.viewer = viewer;\n\n        viewer.registerPlugin(this);\n    }\n\n    /**\n     * Logs a message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param msg - The message\n     */\n    log(msg: string) {\n        console.log(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Logs a warning message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param msg - The warning message\n     */\n    warn(msg: string) {\n        console.warn(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Logs an error message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param msg - The error message\n     */\n    error(msg: string) {\n        console.error(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Sends a message to this Plugin.\n     */\n    send(name: string, value: any) {\n        //...\n    }\n\n    /**\n     * Clears this Plugin.\n     */\n    clear() {\n\n    }\n\n    /**\n     * Destroys this Plugin and removes it from its {@link WebViewer}.\n     */\n    destroy() {\n        this.viewer.deregisterPlugin(this);\n    }\n}\n\nexport {Plugin}"],"names":["_ievent","_classPrivateFieldLooseKey","EventEmitter","ievent","Object","defineProperty","this","writable","value","_classPrivateFieldLooseBase","subscribe","func","asEvent","_proto","dispatch","sender","args","sub","unsubscribe","unsub","one","has","clear","_createClass","key","get","count","LocaleService","cfg","messages","locale","_messages","_locales","_locale","onUpdated","EventDispatcher","loadMessages","clearMessages","translate","msg","localeMessages","localeMessage","resolvePath","vsprintf","translatePlurals","parseInt","zero","other","set","keys","json","parts","split","obj","i","len","length","replace","m","n","FloatArrayClass","Float64Array","Number","MAX_SAFE_INTEGER","MAX_DOUBLE","DEGTORAD","clamp","min","max","Math","newFloatArray","values","dotVec3","u","v","vec2","vec3","addVec4","dest","mulVec4Scalar","s","mulVec2Scalar","subVec4","subVec3","geometricMeanVec2","vectors","slice","call","arguments","geometricMean","cross3Vec3","x","y2","y","z2","z","x2","sqLenVec4","dotVec4","sqrt","dotVec2","sqLenVec2","lenVec3","sqLenVec3","vec","distVec3","w","lenVec2","lerpVec3","t","t1","t2","p1","p2","result","f","subVec2","normalizeVec4","lenVec4","normalizeVec3","mulVec3Scalar","vec3FromMat4Scale","tempVec3","round","tempVec4a","vec4","mat4","tempMat4a","tempMat4b","perspectiveMat4","fovyrad","aspectratio","znear","zfar","pmin","pmax","tan","frustumMat4v","fmin","fmax","fmin4","fmax4","tempMat4b0","tempMat4b1","tempMat4b2","orthoMat4c","left","right","bottom","top","near","far","rl","tb","fn","frustumMat4","identityMat4","anglerad","axis","xy","ys","zs","ax","sin","c","cos","q","yz","zx","xs","pos","target","up","z0","z1","x0","x1","y0","posx","posy","posz","upx","upz","targetx","targety","targetz","upy","y1","inverseMat4","mat","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b08","b09","b10","b11","invDet","b04","b07","b05","b06","m8","m4","m12","m9","m13","m14","mulMat4v4","v0","v1","v2","v3","mulMat4","a","b","b21","b31","b12","b13","b20","b22","b23","b30","b32","b33","mulMat3","transformPoint3","p","transformPoint4","transformVec3","transformVec4","scaleMat4v","xyz","scalingMat4v","scalingMat3v","identityMat3","scalingMat4c","composeMat4","position","quaternion","scale","quaternionToRotationMat4","translateMat4v","decomposeMat4","matrix","sy","sz","determinantMat4","sx","invSX","invSZ","invSY","mat4ToQuaternion","translateMat4c","m3","m7","m11","m15","setMat4Translation","translation","translationMat4v","translationMat3v","mat4ToEuler","order","m23","asin","abs","atan2","m33","m32","m22","m21","m31","m1","m2","identityQuaternion","euler","c2","c3","s1","s2","s3","c1","trace","xx","yy","zz","wx","wy","wz","xz","normalizeQuaternion","conjugateQuaternion","tempVec3a","tempVec3b","FrustumPlane","testVertex","offset","normal","Frustum","nx","ny","nz","planes","INSIDE","INTERSECT","OUTSIDE","tempVec3c","tempVec3e","tempVec4b","rayTriangleIntersect","origin","dir","isect","edge1","edge2","pvec","det","tvec","tempVec3d","qvec","rayOrigin","rayDir","rayOriginDest","rayDirDest","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","LinearFilter","LinearMipmapLinearFilter","RGBAFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT5_Format","LinearEncoding","sRGBEncoding","PointsPrimitive","LinesPrimitive","TrianglesPrimitive","SolidPrimitive","SurfacePrimitive","QualityRender","MetersUnit","PerspectiveProjectionType","OrthoProjectionType","FrustumProjectionType","CustomProjectionType","comparePositions","compareVertex","res","seqInit","bucketsForIndices","compareBuckets","aa1","aa2","aa3","bb1","bb2","bb3","bb","aa","minBucketB","minBucketA","maxBucketA","maxBucketB","uniquePositions","indicesLookup","indicesReverseLookup","weldedIndices","faces","numFaces","compa","Uint16Array","compb","compc","ab","cross","buildEdgeIndices","positions","indices","positionsDecompressMatrix","edgeThreshold","vx","vy","vz","positionsMap","precision","pow","lenUniquePositions","undefined","weldVertices","numIndices","ia","ib","ic","decompressPosition","cb","face","buildFaces","index1","index2","edge","edgeIndices","thresholdDot","edges","largeIndex","faceIndex","j","face1","face2","push","Uint32Array","compressGeometryParams","geometryParams","rtcPositions","Float32Array","worldPositions","rtcCenter","cellSize","center","getPositionsCenter","rtcCenterX","rtcCenterY","rtcCenterZ","worldToRTCPositions","aabb","collapseAABB3","expandAABB3Points3","uniquePositionsCompressed","positionsCompressed","quantizePositions","primitive","_uniquifyPositions","mesh","maxPositions","setMaxNumberOfPositions","seq","remappings","sort","uniqueIdx","_i","uniqueEdgeIndices","uniqueIndices","uniquifyPositions","uvs","geometryBuckets","bitsPerBucket","checkResult","Int32Array","sortedIndices","preSortIndices","el0","el1","tmp","k","cmp","compare_fn","alreadyOutputEdgeIndices","fill","numPositions","bucketIndicesRemap","buckets","addEmptyBucket","newBucket","maxNumPositions","bucketNumber","currentBucket","additonalPositionsInBucket","ii0","ii1","ii2","edgeIndex","edgeSearch","newBytesPerIndex","originalSize","newSize","forEach","bucket","meshDict","console","log","doCheckResult","rebucketPositions","id","constants","uvsDecompressMatrix","decompressMatrix","compressUVs","mat3","array","quantized","multiplier","floor","octEncodeNormalFromArray","xfunc","yfunc","tempx","tempy","Int8Array","octDecodeVec2","oct","lenPositions","xmin","ymin","xwid","zwid","zmin","maxInt","xMultiplier","yMultiplier","ywid","zMultiplier","verify","num","octEncodeVec3","octEncodeNormal","getPositionsBounds","MAX_VALUE","compressPositions","compressNormals","best","currentCos","bestCos","encoded","dot","decompressUV","uv","decompressNormal","decompressNormals","octs","transformAndOctEncodeNormals","worldNormalMatrix","normals","lenNormals","compressedNormals","lenCompressedNormals","localNormal","worldNormal","OBB3","diagVec","xpos","yneg","zneg","zpos","xneg","ypos","getAABB3Center","AABB3","MIN_DOUBLE","obb","expandAABB3","aabb1","aabb2","expandAABB3Point3","ymax","zmax","xmax","xCenter","yCenter","zCenter","OBB2","Sphere3","r","m5","m6","m0","m10","ABB3ToOBB3","OBB3ToAABB3","points","createRTCViewMat","tempMat","rtcCenterWorld","rtcCenterView","viewMat","rtcViewMat","worldToRTCPos","worldPos","rtcPos","from","xHigh","yHigh","yLow","zHigh","zLow","xLow","dist","rtcPlanePos","rtcCenterToPlaneDist","Map","items","baseId","_items","_lastUniqueId","addItem","item","findId","removeItem","Queue","_head","_headLength","_tail","_index","_length","shift","unshift","String","isNumeric","isNaN","parseFloat","isFinite","apply","o","o2","name","hasOwnProperty","inQuotes","map","li","charCodeAt","en","st","fromCharCode","join","query_string","vars","window","location","search","substring","pair","decodeURIComponent","createUUID","lut","toString","d0","random","d1","d3","d2","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","prototype","itemStart","url","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","index","indexOf","splice","getHandler","file","l","global","lastIndex","test","Loader","manager","crossOrigin","withCredentials","path","resourcePath","requestHeader","DefaultLoadingManager","load","loadAsync","scope","resolve","reject","parse","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","WorkerPool","pool","queue","workers","workersResolve","workerStatus","workerCreator","_initWorker","workerId","worker","addEventListener","_onMessage","bind","_getIdleWorker","transfer","_this$queue$shift","postMessage","setWorkerCreator","setWorkerLimit","_this","Promise","destroy","terminate","loading","FileLoader","_Loader","mimeType","responseType","_inheritsLoose","_this2","req","Request","headers","Headers","credentials","fetch","then","response","status","warn","body","getReader","callbacks","reader","total","contentLength","lengthComputable","loaded","stream","ReadableStream","start","controller","readData","read","_ref","done","close","event","ProgressEvent","byteLength","il","callback","enqueue","Response","Error","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","exec","label","toLowerCase","decoder","TextDecoder","decode","data","err","setResponseType","setMimeType","letters","width","$","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","_","d","e","g","h","xSize","ySize","zSize","error","centerX","centerY","centerZ","utils.apply","radiusTop","radiusBottom","height","radialSegments","heightSegments","openEnded","currentHeight","first","startIndex","tu","heightHalf","heightLength","radialAngle","PI","radialLength","radiusChange","normalY","atan","currentRadius","second","tv","size","divisions","step","halfSize","xSegments","zSegments","iz","ix","halfHeight","planeX","planeZ","planeX1","segmentWidth","segmentHeight","planeZ1","offset2","halfWidth","widthSegments","radius","theta","sinTheta","cosTheta","phi","sinPhi","cosPhi","tube","tubeSegments","arc","xOrigin","yOrigin","utils","str","penUp","pointsLen","lines","countVerts","mag","iLine","charAt","zOrigin","tangentQuadraticBezier","p0","tangentQuadraticBezier3","p3","catmullRomInterpolate","b2p0","b2p1","b2","b2p2","b3p0","b3p1","b3p2","b3p3","b3","negateVec4","divVec3","divVec4","cross3Vec4","u0","u1","u2","divScalarVec3","normalizeVec2","acos","vecToArray","Array","trunc","triangleNormal","p1x","p1y","p1z","p2x","p2z","p3x","p2y","p3y","p3z","frustum","projMat","frustumIntersectsAABB3","ret","plane","bminmax","isIdentityMat4","transformPoints3","points2","pi","transformPositions3","transformPositions4","translationMat4s","translationMat4c","vec3PairToQuaternion","real_part","norm_u_norm_v","angleAxis","halfAngle","fsin","q0","q1","q2","q3","vec3ApplyQuaternion","qx","qw","qy","qz","iy","iw","tx","tz","twx","twy","ty","twz","txx","txy","txz","tyy","tyz","tzz","inverseQuaternion","quaternionToAngleAxis","angle","tickEvent","viewerId","time","startTime","prevTime","deltaTime","_viewersRenderInfo","_viewerIDMap","_taskQueue","_taskBudget","_lastTime","_elapsedTime","_runTasks","_runTasksUntil","_fireTickEvents","_renderViewers","getNumTasks","_runTasksUntil2","until","Date","getTime","tasksRun","scheduler","viewers","viewer","onTick","_renderViewers2","renderInfo","render","Scheduler","utils.Queue","requestAnimationFrame","frame","now","registerViewer","deregisterViewer","scheduleTask","_owner","_ownedComponents","_prefixMessageWithID","_own","Component","owner","destroyed","dirty","onDestroyed","WebViewer","message","cleanIfDirty","clean","setDirty","_prefixMessageWithID2","constructor","component","Tile","tiles","sceneModels","sceneObjects","useCount","registerSceneObject","sceneObject","sceneModel","model","release","putTile","Tiles","_Component","scene","getTile","tile","_center","_aabb","_aabbDirty","_registerSceneObjects","_deregisterSceneObjects","Scene","params","_assertThisInitialized","_deregisterSceneObjects2","_registerSceneObjects2","models","objects","onModelCreated","onModelDestroyed","math","createModel","viewList","renderer","onBuilt","setAABBDirty","modelId","valid","objectId","Transform","Property","propertySet","propertyCfg","type","valueType","description","PropertySet","dataModel","propertySetCfg","originalSystemId","properties","createProperty","property","Relationship","relating","related","DataObject","propertySets","createRelation","relationType","relatedObjectId","relatedObject","relation","DataModel","dataModelParams","options","_removeFromModels","_removeFromModels2","projectId","revisionId","author","createdAt","creatingApplication","schema","rootDataObject","rootObjects","objectsByType","typeCounts","_built","_destroyed","createPropertySet","createObject","dataObjectParams","dataObject","propertySetIds","propertySetId","relations","relatedObjectIds","lenj","onObjectCreated","createRelationship","relationshipParams","relatingObjectId","relatingObject","build","onObjectDestroyed","list","Data","getObjectIdsByType","searchDataObjects","searchParams","includeObjects","arrayToMap","excludeObjects","visit","includeObject","resultObjectIds","resultObjects","resultCallback","includeRelating","excludeRelating","startObjectId","startObject","Perspective","camera","onProjMatrix","_state","_inverseMatrixDirty","_transposedProjMatrixDirty","_onCanvasBoundary","fov","fovAxis","projMatrix","inverseProjMatrix","transposedProjMatrix","view","canvas","onBoundary","boundary","aspect","redraw","unproject","canvasPos","screenZ","screenPos","viewPos","halfCanvasWidth","offsetWidth","halfCanvasHeight","offsetHeight","inverseViewMatrix","Ortho","boundaryWidth","boundaryHeight","CustomProjection","_inverseProjMatrixDirty","_viewMatrix","RTCViewMat","putRTCViewMat","viewMatrix","tempVec3f","tempMatb","eyeLookVec","eyeLookVecNorm","eyeLookOffset","_activeProjection","_invalidateRTCViewMatrices","Camera","_invalidateRTCViewMatrices2","perspective","ortho","customProjection","rtcViewMats","onProjType","onViewMatrix","onWorldAxis","eye","look","worldUp","worldRight","worldForward","worldAxis","gimbalLock","constrainPitch","projectionType","deviceMatrix","hasDeviceMatrix","viewNormalMatrix","state","projection","offsetEye","orbitYaw","angleInc","lookEyeVec","orbitPitch","eye2","yaw","look2","pitch","pan","zoom","delta","lenLook","newLenLook","getRTCViewMat","newLook","newEye","newUp","newLookEyeVec","_duration","_look","_eye","_up","_look2","_eye2","_up2","_orthoScale","_orthoScale2","_fit","_trail","_flying","_flyEyeLookUp","_flyingEye","_flyingLook","_callback","_callbackScope","_time","_time2","_flyingEyeLookUp","_fitFOV","_projection","_projMatrix","_projMatrix2","_jumpTo","_update","_ease","_easeInCubic","_easeOutExpo","CameraFlightAnimation","_update2","_jumpTo2","easing","onStarted","onStopped","onCancelled","flyTo","stop","flyToProjection","orthoScale","poi","aabbCenter","fitFOV","sca","diag","duration","jumpTo","cancel","fit","stopping","tFlight","tProj","_onTick","_backgroundColor","_backgroundColorFromAmbientLight","_resolutionScale","Canvas","transparent","backgroundColor","backgroundColorFromAmbientLight","clientWidth","clientHeight","offsetLeft","offsetTop","lastWindowWidth","lastCanvasOffsetTop","lastParent","lastResolutionScale","newResolutionScale","innerWidth","innerHeight","lastWindowHeight","newCanvasSize","lastCanvasWidth","lastCanvasHeight","newCanvasPos","lastCanvasOffsetLeft","parentElement","newWindowSize","parent","newWidth","newHeight","resolutionScale","PanController","cameraControl","dollyToCanvasPos","optionalTargetWorldPos","targetCanvasPos","dollyDelta","dolliedThroughSurface","moveVec","tempVec4c","lenEyeTargetVec","worldPos1","project","Pt3","transposedProjectMat","subarray","Pt4","_view","_configs","_pivotWorldPos","_cameraOffset","_azimuth","_polar","_radius","_pivotPosSet","_pivoting","_shown","_pivotViewPos","_pivotProjPos","_pivotCanvasPos","_cameraDirty","_onViewMatrix","_onProjMatrix","_hideTimeout","_pivotElement","_cameraLookingDownwards","PivotController","configs","_cameraLookingDownwards2","updatePivotElement","getPivotPos","canvasWidth","canvasAABB","canvasHeight","getBoundingClientRect","style","canvasBoundingRect","scrollX","scrollY","setPivotElement","pivotElement","startPivot","lookat","pivotPos","diff","zUp","getPivoting","setPivotPos","setCanvasPivotPos","pivotShereRadius","posOnSphere","eyeWorldPosVec","continuePivot","yawInc","pitchInc","dx","dy","zAxis","eyeLookLen","showPivot","clearTimeout","visibility","setTimeout","hidePivot","endPivot","_cameraControl","_config","_lastPickedEntityId","_needFireEvents","PickController","schedulePickEntity","schedulePickSurface","pickCursorPos","picked","pickedSurface","pickResult","oncontextmenu","preventDefault","update","pointerEnabled","hasHoverSurfaceSubs","onHoverSurface","pickResultCanvasPos","fireEvents","entity","pickedEntityId","onHoverOut","onHover","onHoverOff","MousePanRotateDollyHandler","components","controllers","states","updates","pickController","lastY","lastXDown","mouseDownPicked","keyDown","pick","cursor","lastX","pointerCanvasPos","lastYDown","pickedWorldPos","document","_documentKeyDownHandler","active","keyboardEnabled","keyCode","which","planView","mouseDownLeft","setMousedownState","mouseDownMiddle","mouseDownRight","panRightClick","_documentMouseMoveHandler","canvasBoundary","xPanDelta","targetDistance","eyeLookDist","panDeltaX","panDeltaY","yPanDelta","firstPerson","rotateDeltaY","dragRotationRate","rotateDeltaX","_canvasMouseMoveHandler","mouseover","mouseMovedOnCanvasSinceLastWheel","getCanvasPosFromEvent","events","fire","pagePos","pageX","pageY","removeProperty","secsNowLast","secsNow","performance","secsElapsed","minElapsed","deltaY","normalizedDelta","mouseWheelDollyRate","followPointerDirty","reset","removeEventListener","_documentKeyUpHandler","_mouseDownHandler","_documentMouseUpHandler","_mouseUpHandler","_mouseEnterHandler","_mouseWheelHandler","totalOffsetLeft","element","offsetParent","totalOffsetTop","tempCameraTarget","KeyboardAxisViewHandler","axisViewRight","_isKeyDownForAction","AXIS_VIEW_RIGHT","axisViewBack","AXIS_VIEW_BACK","axisViewLeft","AXIS_VIEW_LEFT","axisViewFront","AXIS_VIEW_FRONT","AXIS_VIEW_TOP","AXIS_VIEW_BOTTOM","axisViewTop","axisViewBottom","perspectiveDist","cameraFlight","followPointer","pivotController","_clicks","_timeout","_canvasMouseDownHandler","_canvasMouseUpHandler","MousePickHandler","rightDown","flyCameraTo","viewObject","leftDown","hasSubs","hoverSubs","hoverOutSubs","hoverOffSubs","hoverSurfaceSubs","mouseDownClientX","clientX","mouseDownClientY","clientY","mouseDownCursorX","mouseDownCursorY","smartPivot","pickedSubs","pickedNothingSubs","pickedSurfaceSubs","doublePickedSubs","doublePickedSurfaceSubs","doublePickedNothingSubs","doublePickFlyTo","onDoublePickedSurface","pickedEntityCenterPos","viewCenterPos","KeyboardPanRotateDollyHandler","keyDownMap","mouseMovedSinceLastKeyboardDolly","on","elapsedSecs","rotateYPos","ROTATE_Y_POS","rotateYNeg","ROTATE_Y_NEG","ROTATE_X_POS","rotateXNeg","ROTATE_X_NEG","orbitDelta","keyboardRotationRate","rotateXPos","dollyBackwards","DOLLY_BACKWARDS","dollyForwards","DOLLY_FORWARDS","keyboardDollyRate","panForwards","PAN_FORWARDS","PAN_BACKWARDS","panLeft","PAN_LEFT","panRight","PAN_RIGHT","PAN_UP","panDown","PAN_DOWN","keyboardPanRate","panBackwards","panUp","panDelta","panDeltaZ","EPSILON","CameraUpdater","panController","countDown","dollyDistFactor","followPointerWorldPos","cursorType","dollyProximityThreshold","dollyMinSpeed","dollyDeltaForDist","rotationInertia","verticalEye","verticalLook","constrainVertical","xUp","yUp","panInertia","_verticalLook","dollyInertia","MouseMiscHandler","_mouseMoveHandler","_mouseLeaveHandler","_canvas$getBoundingCl","TouchPanRotateAndDollyHandler","_canvasTouchStartHandler","_canvasTouchMoveHandler","tapCanvasPos0","touch0Vec","lastCanvasTouchPosList","numTouches","waitForTick","touches","changedTouches","touchStartTime","tapStartCanvasPos","stopPropagation","longTouchTimeout","longTapRadius","touchPanRate","touch0","touch1","tapCanvasPos1","lastMiddleTouch","currentMiddleTouch","touchDelta","_xPanDelta","_yPanDelta","_camera","touchDollyRate","_pickedWorldPos","TouchPickHandler","_canvasTouchEndHandler","activeTouches","tapStartPos","tapStartTime","lastTapTime","rightClickClientX","rightClickClientY","rightClickPageX","rightClickPageY","onRightClick","longTapTimeout","passive","currentTime","onPickedSurface","onDoublePickedNothing","onPicked","onPickedNothing","_components","_states","_updates","_controllers","_handlers","_cameraUpdater","_reset","_destroyHandlers","_destroyControllers","CameraControl","_destroyControllers2","_destroyHandlers2","_reset2","onHoverEnter","keyboardLayout","navMode","keyMap","altDown","ctrlDown","shiftDown","action","_keyMap","enabled","handler","_unitsInfo","ViewObject","layer","visible","culled","pickable","clippable","collidable","xrayed","selected","highlighted","colorize","colorized","opacityUpdated","opacity","_destroy","objectVisibilityUpdated","objectXRayedUpdated","objectSelectedUpdated","objectHighlightedUpdated","objectColorizeUpdated","objectOpacityUpdated","setVisible","viewIndex","setXRayed","setEdges","setHighlighted","setSelected","SectionPlane","onPos","onDir","onActive","flipDir","EmphasisMaterial","fillColor","fillAlpha","edgeColor","edgeAlpha","edgeWidth","backfaces","EdgeMaterial","renderModes","PointsMaterial","pointSize","roundPoints","perspectivePoints","minPerspectivePointSize","maxPerspectivePointSize","filterIntensity","minIntensity","maxIntensity","rebuild","PickResult","_viewObject","_gotCanvasPos","_gotOrigin","_gotDirection","_gotIndices","_gotLocalPos","_gotWorldPos","_gotViewPos","_gotWorldNormal","_gotUV","_canvasPos","_origin","_direction","_indices","_localPos","_worldPos","_viewPos","_worldNormal","_uv","abbrev","Metrics","units","_units","_scale","onUnits","onScale","onOrigin","worldToRealPos","realPos","realToWorldPos","unitsInfo","SAO","kernelRadius","intensity","bias","minResolution","numSamples","blur","blendCutoff","blendCutff","blendFactor","getSAOSupported","supported","LinesMaterial","lineWidth","_numObjects","_objectIds","_numVisibleObjects","_visibleObjectIds","_numXRayedObjects","_xrayedObjectIds","_numHighlightedObjects","_highlightedObjectIds","_numSelectedObjects","_selectedObjectIds","_numColorizedObjects","_colorizedObjectIds","_numOpacityObjects","_opacityObjectIds","_qualityRender","_initObjects","_createObjects","_destroyObjects","ViewLayer","_destroyObjects2","_createObjects2","_initObjects2","visibleObjects","xrayedObjects","highlightedObjects","selectedObjects","colorizedObjects","opacityObjects","autoDestroy","onObjectVisibility","gammaOutput","qualityRender","registerViewObject","deregisterViewObject","setImageDirty","notify","setObjectsVisible","ids","withObjects","changed","setObjectsCollidable","setObjectsCulled","setObjectsSelected","setObjectsHighlighted","setObjectsXRayed","setObjectsColorized","setObjectsOpacity","setObjectsPickable","setObjectsClippable","viewLayerId","View","logarithmicDepthBufferEnabled","sao","metrics","xrayMaterial","highlightMaterial","selectedMaterial","edgeMaterial","pointsMaterial","linesMaterial","sectionPlanes","sectionPlanesList","lights","lightsList","layers","autoLayers","onLayerCreated","onLayerDestroyed","onSectionPlaneCreated","onSectionPlaneDestroyed","_lightsHash","_sectionPlanesHash","canvasElement","getElementById","canvasId","premultipliedAlpha","createSectionPlane","sectionPlaneParams","_registerSectionPlane","sectionPlane","clearSectionPlanes","getSectionPlanesHash","hashParts","registerLight","light","deregisterLight","clearLights","getLightsHash","space","castsShadow","needsRebuild","getAmbientColorAndIntensity","createLayer","viewLayerParams","viewLayer","_this3","_registerSectionPlane2","_this4","_this5","_loop","numObjects","WEBGL_INFO","WEBGL","SUPPORTED_EXTENSIONS","createElement","gl","getContext","antialias","ANTIALIAS","getContextAttributes","FS_MAX_FLOAT_PRECISION","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","MEDIUM_FLOAT","DEPTH_BUFFER_BITS","getParameter","DEPTH_BITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VARYING_VECTORS","getSupportedExtensions","ext","depthTexturesSupported","RenderContext","pbrEnabled","withSAO","frontface","textureUnit","bindTexture","renderPass","shadowViewMatrix","shadowProjMatrix","pickViewMatrix","pickProjMatrix","pickZNear","pickZFar","pickInvisible","lastProgramId","occlusionTexture","getExtension","_cachedExtensions","extension","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","convertConstant","constantVal","encoding","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","ALPHA","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","_extension","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","_extension2","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","_extension4","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","_extension5","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8","REPEAT","CLAMP_TO_EDGE","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR","color","Uint8Array","Texture2D","format","internalFormat","premultiplyAlpha","flipY","unpackAlignment","wrapS","wrapT","wrapR","texture","allocated","minFilter","magFilter","TEXTURE_2D","createTexture","preloadColor","setPreloadColor","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texImage2D","setTarget","setImage","image","props","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","glInternalFormat","getInternalFormat","glFormat","glType","propertyIsEnumerable","images","setCompressedData","mipmaps","levels","activeTexture","TEXTURE0","supportsMips","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","filterFallback","texStorage2D","mipmap","compressedTexSubImage2D","texSubImage2D","setProps","_uploadProps","NEAREST_MIPMAP_NEAREST","generateMipmap","unit","unbind","deleteTexture","internalFormatName","isVideoTexture","R32F","R16F","R8","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","RGBA4","RGB5_A1","_m2","DataTextureSet","indices_8Bits","indices_16Bits","indices_32Bits","edgeIndices_8Bits","edgeIndices_16Bits","edgeIndices_32Bits","eachMeshAttributes","eachMeshMatrices","eachEdgeOffset","eachPrimitiveMesh_8Bits","eachPrimitiveMesh_16Bits","eachPrimitiveMesh_32Bits","eachPrimitiveMesh","eachEdgeMesh_8Bits","eachEdgeMesh_16Bits","eachEdgeMesh_32Bits","eachEdgeMesh","_onDestroyed","DataTexture","textureWidth","textureHeight","textureData","glProgram","sampler","disableFiltering","Reflect","construct","getOwnPropertyDescriptor","getPrototypeOf","ownKeys","setPrototypeOf","Proxy","Symbol","iterator","species","toStringTag","create","freeze","is","isPrototypeOf","hasOwn","isArray","toLocaleString","ArrayBuffer","isView","SharedArrayBuffer","entries","reverse","copyWithin","tt","rt","nt","et","ot","it","ct","ut","ft","ht","lt","at","next","yt","_regeneratorRuntime","mark","_callee","wrap","_context","prev","pt","vt","TypeError","bt","RangeError","At","Set","mt","Bt","add","xt","Et","WeakMap","Tt","Ot","jt","It","Pt","St","_t","Ft","Lt","_t2","Rt","Nt","Ut","Ct","_t3","_t6","Mt","_m","Vt","Wt","configurable","Yt","zt","Gt","Kt","Xt","qt","Jt","Qt","Zt","$t","tr","er","or","ir","cr","ur","_e2","rr","buffer","ar","byteOffset","fr","_step","hr","_iterator","_createForOfIteratorHelperLoose","lr","_r4","_s","_i2","Ht","_r5","kt","concat","of","_r7","_r8","sr","_step2","_iterator2","_context2","_callee2","_step3","_iterator3","_context3","_step3$value","_callee3","_r12","_r14","filter","_r15","reduce","_r16","reduceRight","find","_r19","findIndex","_r20","findLast","findLastIndex","_r22","every","some","_r24","nr","_n7","lastIndexOf","_r26","includes","_e7","yr","emptyDataTexture","DataTextureFactory","disableFilteringForBoundTexture","createPositionsDataTexture","ceil","RGB16UI","RGB_INTEGER","createIndices8BitDataTexture","RGB8UI","createIndices16BitDataTexture","createIndices32BitDataTexture","RGB32UI","createEdgeIndices8BitDataTexture","RG8UI","createEdgeIndices16BitDataTexture","RG16UI","createEdgeIndices32BitDataTexture","RG32UI","createEachMeshAttributesDataTexture","colors","pickColors","vertexBases","indexBaseOffsets","edgeIndexBaseOffsets","RGBA8UI","createEachEdgeOffsetDataTexture","offsets","RGB32F","RGB","createEachMeshMatricesDataTexture","positionDecodeMatrices","matrices","Float16Array","createPointerTableDataTexture","meshIds","R16UI","SCENE_OBJECT_FLAGS","MeshCounts","numMeshes","numVisible","numTransparent","numEdges","numXRayed","numSelected","numHighlighted","numClippable","numPickable","numCulled","identityMatrix","tempUint8Array4","tempFloat32Array3","DataTextureBuffer","eachMeshVertexPortionBase","eachMeshVertexPortionOffset","eachMeshEdgeIndicesOffset","eachMeshColor","eachMeshPickColor","eachMeshNormalMatrix","eachMeshPositionsDecompressMatrix","eachMeshFlags1","eachMeshFlags2","eachMeshParts","_gl","_dataTextureBuffer","_geometryHandles","_meshPartHandles","_numMeshParts","_deferredSetFlagsActive","_deferredSetFlagsDirty","_createGeometryBucket","_createMeshPart","_setMeshFlags","_setMeshFlags3","Layer","layerParams","renderers","layerIndex","meshCounts","renderState","dataTextureSet","numIndices8Bits","numIndices16Bits","numIndices32Bits","numEdgeIndices8Bits","numEdgeIndices16Bits","numEdgeIndices32Bits","numVertices","beginDeferredFlags","canCreateMesh","geometryCompressedParams","numGeometryBuckets","geometryBucket","MAX_DATATEXTURE_HEIGHT","hasGeometry","geometryId","createGeometryCompressed","geometryBucketHandles","createMesh","meshParams","meshId","geometryHandle","geometryBucketHandle","worldAABB","geometryOBB","dataTextureFactory","dataTextureBuffer","isEmpty","initFlags","flags","meshTransparent","commitDeferredFlags","flushInitFlags","setMeshVisible","setMeshHighlighted","setMeshXRayed","setMeshSelected","setMeshEdges","setMeshClippable","setMeshCulled","setMeshCollidable","setMeshPickable","setMeshColor","setMeshTransparent","setMeshOffset","numVertsForPrim","alignedIndicesLen","alignedIndices","alignedEdgeIndices","alignedEdgeIndicesLen","indicesBase","vertexBase","edgeIndicesBase","numTriangles","indicesBuffer","edgeIndicesBuffer","_createMeshPart2","currentNumIndices","vertsIndex","pickColor","meshPartId","eachPrimitiveMeshBuffer","edgeIndicesMeshIdBuffer","numEdgeIndices","vertsBase","numVerts","_setMeshFlags2","f0","f1","f2","f3","Mesh","pickId","colorizing","setSceneObject","finalize2","setColor","setColorize","setOpacity","changingTransparency","newTransparent","setOffset","setClippable","setCollidable","setPickable","setCulled","canPickTriangle","drawPickTriangles","drawFlags","renderContext","pickTriangleSurface","canPickWorldPos","drawPickNormals","delegatePickedEntity","TextureSet","colorTexture","metallicRoughnessTexture","normalsTexture","emissiveTexture","Texture","WebGLSceneObject","_meshes","_flags","_offsetAABB","_offset","_colorizeUpdated","_opacityUpdated","meshes","tempIntRGB","lastOpacityQuantized","opacityQuantized","tempMat4","defaultScale","defaultPosition","defaultRotation","defaultQuaternion","defaultColorTextureId","defaultMetalRoughTextureId","defaultNormalsTextureId","defaultEmissiveTextureId","defaultOcclusionTextureId","defaultTextureSetId","_webglRenderer","_renderContext","_position","_rotation","_quaternion","_worldMatrix","_colorTextureEnabled","_backfaces","_geometries","_textures","_textureSets","_layers","_numGeometries","_numTriangles","_numLines","_numPoints","_numSceneObjects","_textureTranscoder","_lastPositionsDecompressMatrix","_edgeThreshold","_lastmeshHadNormals","_currentLayers","_viewMatrixDirty","_worldMatrixNonIdentity","_onCameraViewMatrix","_viewLayerId","_createDefaultTextureSet","_getLayer","_rebuildAABB","WebGLSceneModel","_rebuildAABB2","_getLayer2","_createDefaultTextureSet2","objectList","layerList","webglRenderer","textureTranscoder","rotation","createTransform","transformParams","createGeometry","textureParams","textureId","src","buffers","pop","Image","onload","loadArraybuffer","ok","defaultCallback","_value","dataUriRegexResult","match","isBase64","atob","request","XMLHttpRequest","open","onreadystatechange","readyState","send","transcode","compressedTextureData","errMsg","createTextureSet","textureSetParams","textureSetId","colorTextureId","metallicRoughnessTextureId","normalsTextureId","emissiveTextureId","occlusionTextureId","metallic","roughness","registerPickable","meshMatrix","sceneObjectParams","layerId","_i3","_i4","deregisterPickable","defaultColorTexture","defaultMetalRoughTexture","defaultNormalsTexture","defaultEmissiveTexture","defaultOcclusionTexture","textureSet","Shader","source","errors","compiled","handle","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","isContextLost","numberedLines","getShaderInfoLog","Sampler","uniform1i","Attribute","bindArrayBuffer","arrayBuf","enableVertexAttribArray","vertexAttribPointer","itemSize","itemType","normalized","stride","Program","vertexShader","fragmentShader","attributes","samplers","uniforms","validated","linked","VERTEX_SHADER","vertex","fragment","logErrors","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","uName","substr","getUniformLocation","SAMPLER_2D","SAMPLER_CUBE","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","_location","getAttribLocation","useProgram","getLocation","getAttribute","getSampler","deleteProgram","deleteShader","tempVec4","_hash","_program","_needRebuild","_uniforms","_samplers","_build","_buildShader","_getValid","_bind","LayerRenderer","needRebuild","draw","program","uniformMatrix4fv","worldMatrix","material","uniform4f","_material","_material2","uniform4fv","nextTextureUnit","drawArrays","TRIANGLES","baseColorMap","materialTextureSet","metallicRoughMap","emissiveMap","normalMap","occlusionMap","fragHeader","fragGammaDefs","fragSectionPlaneDefs","fragLightDefs","fragLogDepthBufDefs","fragSectionPlanesSlice","fragLighting","fragLogDepthBufOutput","DirLight","_build2","logDepthBufFC","gammaFactor","nearPlaneHeight","pointCloudIntensityRange","lightAmbient","attenuation","getHash","_buildShader2","buildVertexShader","buildFragmentShader","_getValid2","_bind2","fragLightSourceUniforms","uniform3f","uniform1f","possible","viewportHeight","drawingBufferHeight","drawingBufferWidth","LN2","_LayerRenderer","FastColorTrianglesRenderer","vertHeader","fragFlatShading","ua","navigator","userAgent","_viewer","_canvasTransparent","_transparentEnabled","_edgesEnabled","_imageDirty","_saoEnabled","_pbrEnabled","_webglSceneModels","_layerList","_layerListDirty","_stateSortDirty","_pickIDs","_saoDepthRenderBuffer","_renderBufferManager","_extensionHandles","_logarithmicDepthBufferEnabled","_alphaDepthMask","_occlusionTester","_layerRenderers","_updateLayerList","_buildLayerList","_draw","_activateExtensions","_drawSAOBuffers","_drawDepth","_drawColor","_drawLayer","WebGLRenderer","_drawLayer2","_drawColor2","_drawDepth2","_drawSAOBuffers2","_activateExtensions2","_draw2","_buildLayerList2","_updateLayerList2","KTX2TextureTranscoder","init","capabilities","getCapabilities","maxViews","astcSupported","etc1Supported","etc2Supported","dxtSupported","bptcSupported","pvrtcSupported","registerView","WEBGL_CONTEXT_NAMES","contextAttr","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","NICEST","colorTriangles","deregisterView","webglSceneModel","finalizedSceneModel","destroyedSceneModel","setBackgroundColor","setEdgesEnabled","setPBREnabled","setSAOEnabled","setTransparentEnabled","viewport","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","rendererId","needsRender","force","pickSceneObject","lenDrawableList","OES_element_index_uint","EXT_frag_depth","WEBGL_depth_texture","enable","DEPTH_TEST","frontFace","CCW","CULL_FACE","depthMask","normalDrawSAOBin","edgesColorOpaqueBin","edgesColorTransparentBin","xrayEdgesOpaqueBin","xrayedSilhouetteTransparentBin","highlightedSilhouetteOpaqueBin","highlightedSilhouetteTransparentBin","highlightedEdgesTransparentBin","selectedEdgesOpaqueBin","selectedEdgesTransparentBin","saoPossible","getRenderBuffer","depthTexture","occlusionRenderBuffer1","getTexture","normalDrawSAOBinLen","normalFillTransparentBinLen","edgesColorTransparentBinLen","xrayedSilhouetteOpaqueBinLen","xrayEdgesOpaqueBinLen","xrayEdgesTransparentBinLen","highlightedSilhouetteOpaqueBinLen","highlightedEdgesOpaqueBinLen","highlightedSilhouetteTransparentBinLen","selectedSilhouetteOpaqueBinLen","selectedEdgesOpaqueBinLen","selectedSilhouetteTransparentBinLen","selectedEdgesTransparentBinLen","normalFillTransparentBin","xrayedSilhouetteTransparentBinLen","xrayedSilhouetteOpaqueBin","selectedSilhouetteTransparentBin","selectedSilhouetteOpaqueBin","edgesColorOpaqueBinLen","xrayEdgesTransparentBin","highlightedEdgesTransparentBinLen","highlightedEdgesOpaqueBin","BLEND","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","blendFunc","_i5","_i7","disable","_i15","numTextureUnits","ii","numVertexAttribs","_ii","disableVertexAttribArray","quality","constants.TrianglesPrimitive","constants.SurfacePrimitive","_registerView","_deregisterView","onViewCreated","onViewDestroyed","localeService","views","numViews","pluginList","createView","HTMLCanvasElement","registerPlugin","plugin","deregisterPlugin","sendToPlugins","_registerView2","_deregisterView2","AmbientLight","PointLight","constantAttenuation","linearAttenuation","quadraticAttenuation","CameraMemento","saveCamera","restoreCamera","savedProjection","restoreProjection","ModelMemento","_viewObjectsVisible","_viewObjectsEdges","_viewObjectsXRayed","_viewObjectsHighlighted","_viewObjectsSelected","_viewObjectsClippable","_viewObjectsPickable","_viewObjectsColorize","_viewObjectsOpacity","_numViewObjects","_mask","saveObjects","mask","objectIds","object","objectColor","restoreViewObjects","ViewObjectsMemento","_viewObjectsXrayed","activeTranscoders","BasisFormat","ETC1S","UASTC_4x4","TranscoderFormat","ETC1","ETC2","BC1","BC3","BC4","BC5","BC7_M6_OPAQUE_ONLY","BC7_M5","PVRTC1_4_RGB","PVRTC1_4_RGBA","ASTC_4x4","ATC_RGB","ATC_RGBA_INTERPOLATED_ALPHA","RGBA32","RGB565","BGR565","RGBA4444","EngineFormat","RGBA_ASTC_4x4_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_4BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_4BPPV1_Format","_transcoderPath","_transcoderBinary","_transcoderPending","_workerPool","_workerSourceURL","_workerConfig","_supportedFileTypes","_withCredentials","_initTranscoder","transcoderPath","workerLimit","viewerCapabilities","config","taskConfig","transcodeResult","dfdTransferFn","dfdFlags","URL","revokeObjectURL","_initTranscoder2","jsLoader","jsContent","binaryLoader","binaryContent","all","BasisWorker","JSON","stringify","createObjectURL","Blob","Worker","transcoderBinary","transcoderPending","BasisModule","_EngineFormat","_TranscoderFormat","_BasisFormat","self","wasmBinary","onRuntimeInitialized","BASIS","initializeBasis","KTX2File","ktx2File","cleanup","isValid","basisFormat","isUASTC","getWidth","getHeight","getLevels","hasAlpha","getHasAlpha","getDFDTransferFunc","getDFDFlags","getTranscoderFormat","ETC1S_OPTIONS","UASTC_OPTIONS","opt","transcoderFormat","needsPowerOfTwo","isPowerOfTwo","engineFormat","startTranscoding","mip","levelInfo","getImageLevelInfo","mipWidth","origWidth","mipHeight","origHeight","dst","getImageTranscodedSizeInBytes","transcodeImage","_transcode","if","priorityETC1S","Infinity","priorityUASTC","FORMAT_OPTIONS","Plugin"],"mappings":"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"}